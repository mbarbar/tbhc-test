; ModuleID = 'mv.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.timespec = type { i64, i64 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rm_options = type { i8, i32, i8, i8, i8, %struct.timespec*, i8, i8, i8, i8 }
%struct.FTS = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent**, i64, i8*, i32, i32, i64, i64, i32 (%struct._ftsent**, %struct._ftsent**)*, i32, %struct.hash_table*, %union.anon, %struct.I_ring }
%struct._ftsent = type { %struct._ftsent*, %struct._ftsent*, %struct._ftsent*, %struct.__dirstream*, i64, i8*, i8*, i8*, i32, i32, i64, %struct.FTS*, i64, i64, i64, i16, i16, i16, [1 x %struct.stat], [0 x i8] }
%struct.__dirstream = type opaque
%union.anon = type { %struct.hash_table* }
%struct.I_ring = type { [4 x i32], i32, i32, i32, i8 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.16 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32 }
%struct.__mbstate_t = type { i32, %struct.permission_context }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.110 }
%union.anon.110 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.cycle_check_state = type { %struct.timespec, i64, i32 }
%struct.Active_dir = type { i64, i64, %struct._ftsent* }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.__fsid_t = type { [2 x i32] }
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY.\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [418 x i8] c"      --backup[=CONTROL]       make a backup of each existing destination file\0A  -b                           like --backup but does not accept an argument\0A  -f, --force                  do not prompt before overwriting\0A  -i, --interactive            prompt before overwrite\0A  -n, --no-clobber             do not overwrite an existing file\0AIf you specify more than one of -i, -f, -n, only the final one takes effect.\0A\00", align 1
@.str.4 = private unnamed_addr constant [184 x i8] c"      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A\00", align 1
@.str.5 = private unnamed_addr constant [527 x i8] c"  -t, --target-directory=DIRECTORY  move all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory    treat DEST as a normal file\0A  -u, --update                 move only when the SOURCE file is newer\0A                                 than the destination file or when the\0A                                 destination file is missing\0A  -v, --verbose                explain what is being done\0A  -Z, --context                set SELinux security context of destination\0A                                 file to default type\0A\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"mv\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.35, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.39 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.40 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.42 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.43 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.45 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.33 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.35 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.29 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.28 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"bfint:uvS:TZ\00", align 1
@long_options = internal constant [14 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 0, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i32 0, i32* null, i32 102 }, %struct.option { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i32 0, i32 0), i32 0, i32* null, i32 105 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i32 0, i32 0), i32 0, i32* null, i32 110 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.52, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i32 0, i32 0), i32 0, i32* null, i32 117 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.58, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !60, !ctir !118
@optarg = external dso_local global i8*, align 8, !ctir !7
@remove_trailing_slashes = internal global i8 0, align 1, !dbg !234, !ctir !117
@.str.13 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Mike Parker\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@optind = external dso_local global i32, align 4, !ctir !5
@.str.20 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"2 <= n_files\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"src/mv.c\00", align 1
@__PRETTY_FUNCTION__.main = private unnamed_addr constant [23 x i8] c"int main(int, char **)\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"options --backup and --no-clobber are mutually exclusive\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"VALID_STATUS (status)\00", align 1
@__PRETTY_FUNCTION__.do_move = private unnamed_addr constant [69 x i8] c"_Bool do_move(const char *, const char *, const struct cp_options *)\00", align 1
@rm_option_init.dev_ino_buf = internal global %struct.timespec zeroinitializer, align 8, !dbg !236
@.str.60 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 1
@.str.61 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"no-clobber\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.52 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.58 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"fts_read failed\00", align 1
@.str.1.63 = private unnamed_addr constant [17 x i8] c"VALID_STATUS (s)\00", align 1
@.str.2.64 = private unnamed_addr constant [13 x i8] c"src/remove.c\00", align 1
@__PRETTY_FUNCTION__.rm = private unnamed_addr constant [60 x i8] c"enum RM_status rm(char *const *, const struct rm_options *)\00", align 1
@.str.3.65 = private unnamed_addr constant [17 x i8] c"fts_close failed\00", align 1
@.str.4.66 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.5.67 = private unnamed_addr constant [51 x i8] c"refusing to remove %s or %s directory: skipping %s\00", align 1
@.str.6.68 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.7.69 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.8.70 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.9.71 = private unnamed_addr constant [45 x i8] c"it is dangerous to operate recursively on %s\00", align 1
@.str.10.72 = private unnamed_addr constant [58 x i8] c"it is dangerous to operate recursively on %s (same as %s)\00", align 1
@.str.11.73 = private unnamed_addr constant [49 x i8] c"use --no-preserve-root to override this failsafe\00", align 1
@.str.12.74 = private unnamed_addr constant [31 x i8] c"failed to stat %s: skipping %s\00", align 1
@.str.13.75 = private unnamed_addr constant [46 x i8] c"skipping %s, since it's on a different device\00", align 1
@.str.14.76 = private unnamed_addr constant [37 x i8] c"and --preserve-root=all is in effect\00", align 1
@.str.15.77 = private unnamed_addr constant [186 x i8] c"WARNING: Circular directory structure.\0AThis almost certainly means that you have a corrupted file system.\0ANOTIFY YOUR SYSTEM MANAGER.\0AThe following directory is part of the cycle:\0A  %s\0A\00", align 1
@.str.16.78 = private unnamed_addr constant [21 x i8] c"traversal failed: %s\00", align 1
@.str.17.79 = private unnamed_addr constant [56 x i8] c"unexpected failure: fts_info=%d: %s\0Aplease report to %s\00", align 1
@.str.18.80 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.23.81 = private unnamed_addr constant [22 x i8] c"removed directory %s\0A\00", align 1
@.str.24.82 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.19.83 = private unnamed_addr constant [48 x i8] c"%s: descend into write-protected directory %s? \00", align 1
@.str.20.84 = private unnamed_addr constant [32 x i8] c"%s: descend into directory %s? \00", align 1
@.str.21.85 = private unnamed_addr constant [35 x i8] c"%s: remove write-protected %s %s? \00", align 1
@.str.22.86 = private unnamed_addr constant [19 x i8] c"%s: remove %s %s? \00", align 1
@.str.87 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.88 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.89 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.90 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.95 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.96 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !239, !ctir !112
@top_level_dst_name = internal global i8* null, align 8, !dbg !487, !ctir !112
@.str.12.97 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.98 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.99 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.100 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.101 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.102 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.103 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.104 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.105 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.107 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.108 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.109 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.110 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.111 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.112 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.113 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.114 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.115 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.116 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.117 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.118 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.119 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.120 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.121 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.122 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.123 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.124 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.125 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.126 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.127 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.128 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.129 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.130 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.131 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.132 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.133 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.134 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.135 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.136 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.137 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !484
@.str.76 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.138 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.139 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.140 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !489
@write_zeros.nz = internal global i64 131072, align 8, !dbg !492
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !494
@.str.59.141 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.142 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.143 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.144 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.145 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.146 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.147 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.148 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.149 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.150 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.151 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.152 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.153 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.154 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !499, !ctir !192
@.str.169 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.170 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.171 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !525, !ctir !540
@Version = dso_local global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.178, i32 0, i32 0), align 8, !dbg !558, !ctir !112
@.str.178 = private unnamed_addr constant [21 x i8] c"8.31.48-f2dfea-dirty\00", align 1
@.str.181 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.182 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.185 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !564, !ctir !112
@.str.192 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.193 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.194 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.195 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.198, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.199, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.200, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.201, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.202, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.203, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.204, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.205, i32 0, i32 0), i8* null], align 16, !dbg !601, !ctir !615
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !621, !ctir !611
@.str.2.198 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.199 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.200 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.201 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.202 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.203 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.204 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.205 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.208 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.209 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !624, !ctir !112
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !629
@.str.214 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.215 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.216 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.217 = internal global i8* null, align 8, !dbg !670, !ctir !112
@ignore_EPIPE = internal global i8 0, align 1, !dbg !716, !ctir !117
@.str.220 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.221 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.222 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !719, !ctir !667
@.str.245 = private unnamed_addr constant [19 x i8] c"regular empty file\00", align 1
@.str.1.246 = private unnamed_addr constant [13 x i8] c"regular file\00", align 1
@.str.2.247 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.3.248 = private unnamed_addr constant [14 x i8] c"symbolic link\00", align 1
@.str.4.249 = private unnamed_addr constant [14 x i8] c"message queue\00", align 1
@.str.5.250 = private unnamed_addr constant [10 x i8] c"semaphore\00", align 1
@.str.6.251 = private unnamed_addr constant [21 x i8] c"shared memory object\00", align 1
@.str.7.252 = private unnamed_addr constant [19 x i8] c"block special file\00", align 1
@.str.8.253 = private unnamed_addr constant [23 x i8] c"character special file\00", align 1
@.str.9.254 = private unnamed_addr constant [5 x i8] c"fifo\00", align 1
@.str.10.255 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.11.256 = private unnamed_addr constant [11 x i8] c"weird file\00", align 1
@.str.265 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.266 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.267 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.268 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !726, !ctir !753
@program_name = dso_local global i8* null, align 8, !dbg !867, !ctir !112
@.str.295 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.296 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.297 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !7
@program_invocation_name = external dso_local global i8*, align 8, !ctir !7
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.303, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.304, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.305, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.306, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.307, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.308, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.309, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.310, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.311, i32 0, i32 0), i8* null], align 16, !dbg !912, !ctir !932
@.str.302 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.303 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.304 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.305 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.306 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.307 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.308 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.309 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.310 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.311 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1039, !ctir !935
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1041, !ctir !942
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1043, !ctir !942
@.str.10.312 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.313 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.314 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.315 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.316 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.317 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.318 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.319 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.320 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1047, !ctir !970
@nslots = internal global i32 1, align 4, !dbg !1049, !ctir !5
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1045, !ctir !532
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1051, !ctir !971
@.str.335 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.340 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !1053, !ctir !1080
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1096, !ctir !1107
@.str.2.357 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.358 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.359 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1120
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1165
@utimensat_works_really = internal global i32 0, align 4, !dbg !1167, !ctir !5
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1217, !ctir !5
@.str.370 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.371 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.372 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.373 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.374 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.375 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.376 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.377 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.378 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.379 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.380 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.381 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.382 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.383 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.384 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.385 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.388 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.389 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.390 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.391 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.392 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.393 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.394 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1220, !ctir !1225
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1230
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1240
@.str.1.415 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.416 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.419 = private unnamed_addr constant [16 x i8] c"errno != EINVAL\00", align 1
@.str.1.420 = private unnamed_addr constant [11 x i8] c"lib/xfts.c\00", align 1
@__PRETTY_FUNCTION__.xfts_open = private unnamed_addr constant [78 x i8] c"FTS *xfts_open(char *const *, int, int (*)(const FTSENT **, const FTSENT **))\00", align 1
@.str.431 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.1.432 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2.437 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1242, !ctir !617
@.str.450 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.451 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.452 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.453 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.454 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.467 = private unnamed_addr constant [24 x i8] c"state->magic == 9827862\00", align 1
@.str.1.468 = private unnamed_addr constant [18 x i8] c"lib/cycle-check.c\00", align 1
@__PRETTY_FUNCTION__.cycle_check = private unnamed_addr constant [67 x i8] c"_Bool cycle_check(struct cycle_check_state *, const struct stat *)\00", align 1
@.str.475 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.476 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.489 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.490 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.501 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.502 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.503 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.504 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1298

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2979 !ctir !110 {
entry:
  %status.addr = alloca i32, align 4, !ctir !5
  store i32 %status, i32* %status.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2984, metadata !DIExpression()), !dbg !2985
  %0 = load i32, i32* %status.addr, align 4, !dbg !2986, !tbaa !2980
  %cmp = icmp ne i32 %0, 0, !dbg !2988
  br i1 %cmp, label %if.then, label %if.else, !dbg !2989

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2990

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2991, !tbaa !2993
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #12, !dbg !2991
  %2 = load i8*, i8** @program_name, align 8, !dbg !2991, !tbaa !2993
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2991
  br label %do.end, !dbg !2991

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2991

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.1, i64 0, i64 0)) #12, !dbg !2995
  %3 = load i8*, i8** @program_name, align 8, !dbg !2997, !tbaa !2993
  %4 = load i8*, i8** @program_name, align 8, !dbg !2998, !tbaa !2993
  %5 = load i8*, i8** @program_name, align 8, !dbg !2999, !tbaa !2993
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5), !dbg !3000
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0)) #12, !dbg !3001
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3001, !tbaa !2993
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %6), !dbg !3001
  call void @emit_mandatory_arg_note(), !dbg !3002
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([418 x i8], [418 x i8]* @.str.3, i64 0, i64 0)) #12, !dbg !3003
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3003, !tbaa !2993
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %7), !dbg !3003
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([184 x i8], [184 x i8]* @.str.4, i64 0, i64 0)) #12, !dbg !3004
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3004, !tbaa !2993
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %8), !dbg !3004
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([527 x i8], [527 x i8]* @.str.5, i64 0, i64 0)) #12, !dbg !3005
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3005, !tbaa !2993
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %9), !dbg !3005
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0)) #12, !dbg !3006
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3006, !tbaa !2993
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %10), !dbg !3006
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0)) #12, !dbg !3007
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3007, !tbaa !2993
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %11), !dbg !3007
  call void @emit_backup_suffix_note(), !dbg !3008
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)), !dbg !3009
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %12 = load i32, i32* %status.addr, align 4, !dbg !3010, !tbaa !2980
  call void @exit(i32 %12) #13, !dbg !3011
  unreachable, !dbg !3011
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !3012 !ctir !131 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.28, i64 0, i64 0)) #12, !dbg !3013
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3013, !tbaa !2993
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !3013
  ret void, !dbg !3014
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !3015 !ctir !131 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.29, i64 0, i64 0)) #12, !dbg !3016
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3016, !tbaa !2993
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !3016
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.30, i64 0, i64 0)) #12, !dbg !3017
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3017, !tbaa !2993
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !3017
  ret void, !dbg !3018
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !139 !ctir !133 {
entry:
  %program.addr = alloca i8*, align 8, !ctir !112
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !135
  %node = alloca i8*, align 8, !ctir !112
  %map_prog = alloca %struct.infomap*, align 8, !ctir !146
  %lc_messages = alloca i8*, align 8, !ctir !112
  store i8* %program, i8** %program.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !3019, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !3021, metadata !DIExpression()), !dbg !3022
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !3022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !3022
  call void @llvm.dbg.declare(metadata i8** %node, metadata !3023, metadata !DIExpression()), !dbg !3024
  %1 = load i8*, i8** %program.addr, align 8, !dbg !3025, !tbaa !2993
  store i8* %1, i8** %node, align 8, !dbg !3024, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !3026, metadata !DIExpression()), !dbg !3027
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !3028
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !3027, !tbaa !2993
  br label %while.cond, !dbg !3029

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3030, !tbaa !2993
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !3031, !ctir !136
  %3 = load i8*, i8** %program1, align 8, !dbg !3031, !tbaa !3032, !ctir !112
  %tobool = icmp ne i8* %3, null, !dbg !3030
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3034

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !3035, !tbaa !2993
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3035, !tbaa !2993
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !3035, !ctir !136
  %6 = load i8*, i8** %program2, align 8, !dbg !3035, !tbaa !3032, !ctir !112
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !3035
  %cmp = icmp eq i32 %call, 0, !dbg !3035
  %lnot = xor i1 %cmp, true, !dbg !3036
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !3037
  br i1 %7, label %while.body, label %while.end, !dbg !3029

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3038, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !3038
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !3038, !tbaa !2993
  br label %while.cond, !dbg !3029, !llvm.loop !3039

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3040, !tbaa !2993
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !3042, !ctir !136
  %10 = load i8*, i8** %node3, align 8, !dbg !3042, !tbaa !3043, !ctir !112
  %tobool4 = icmp ne i8* %10, null, !dbg !3040
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3044

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !3045, !tbaa !2993
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !3046, !ctir !136
  %12 = load i8*, i8** %node5, align 8, !dbg !3046, !tbaa !3043, !ctir !112
  store i8* %12, i8** %node, align 8, !dbg !3047, !tbaa !2993
  br label %if.end, !dbg !3048

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0)) #12, !dbg !3049
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0)), !dbg !3050
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !3051, metadata !DIExpression()), !dbg !3052
  %call8 = call i8* @setlocale(i32 5, i8* null) #12, !dbg !3053
  store i8* %call8, i8** %lc_messages, align 8, !dbg !3052, !tbaa !2993
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !3054, !tbaa !2993
  %tobool9 = icmp ne i8* %13, null, !dbg !3054
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !3056

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !3057, !tbaa !2993
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i64 0, i64 0), i64 3) #14, !dbg !3057
  %tobool11 = icmp ne i32 %call10, 0, !dbg !3057
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !3058

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.42, i64 0, i64 0)) #12, !dbg !3059
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3059, !tbaa !2993
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !3059
  br label %if.end15, !dbg !3061

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.43, i64 0, i64 0)) #12, !dbg !3062
  %16 = load i8*, i8** %program.addr, align 8, !dbg !3063, !tbaa !2993
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.40, i64 0, i64 0), i8* %16), !dbg !3064
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0)) #12, !dbg !3065
  %17 = load i8*, i8** %node, align 8, !dbg !3066, !tbaa !2993
  %18 = load i8*, i8** %node, align 8, !dbg !3067, !tbaa !2993
  %19 = load i8*, i8** %program.addr, align 8, !dbg !3068, !tbaa !2993
  %cmp19 = icmp eq i8* %18, %19, !dbg !3069
  %20 = zext i1 %cmp19 to i64, !dbg !3067
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), !dbg !3067
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !3070
  ret void, !dbg !3071
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !3072 !ctir !114 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %argc.addr = alloca i32, align 4, !ctir !5
  %argv.addr = alloca i8**, align 8, !ctir !116
  %c = alloca i32, align 4, !ctir !5
  %ok = alloca i8, align 1, !ctir !117
  %make_backups = alloca i8, align 1, !ctir !117
  %backup_suffix = alloca i8*, align 8, !ctir !112
  %version_control_string = alloca i8*, align 8, !ctir !7
  %x = alloca %struct.cp_options, align 8, !ctir !150
  %target_directory = alloca i8*, align 8, !ctir !7
  %no_target_directory = alloca i8, align 1, !ctir !117
  %n_files = alloca i32, align 4, !ctir !5
  %file = alloca i8**, align 8, !ctir !116
  %selinux_enabled = alloca i8, align 1, !ctir !117
  %st = alloca %struct.stat, align 8, !ctir !3073
  %i = alloca i32, align 4, !ctir !5
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !3094, metadata !DIExpression()), !dbg !3095
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !3096, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.declare(metadata i32* %c, metadata !3098, metadata !DIExpression()), !dbg !3099
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3100, metadata !DIExpression()), !dbg !3101
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !3102, metadata !DIExpression()), !dbg !3103
  store i8 0, i8* %make_backups, align 1, !dbg !3103, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !3106, metadata !DIExpression()), !dbg !3107
  store i8* null, i8** %backup_suffix, align 8, !dbg !3107, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !3108, metadata !DIExpression()), !dbg !3109
  store i8* null, i8** %version_control_string, align 8, !dbg !3109, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !3110, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !3112, metadata !DIExpression()), !dbg !3113
  store i8* null, i8** %target_directory, align 8, !dbg !3113, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !3114, metadata !DIExpression()), !dbg !3115
  store i8 0, i8* %no_target_directory, align 1, !dbg !3115, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !3116, metadata !DIExpression()), !dbg !3117
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !3118, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !3120, metadata !DIExpression()), !dbg !3121
  store i8 0, i8* %selinux_enabled, align 1, !dbg !3121, !tbaa !3104
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !3122, !tbaa !2993
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !3122, !ctir !116
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !3122, !tbaa !2993
  call void @set_program_name(i8* %1), !dbg !3123
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0)) #12, !dbg !3124
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0)) #12, !dbg !3125
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #12, !dbg !3126
  %call3 = call i32 @atexit(void ()* @close_stdin) #12, !dbg !3127
  call void @cp_option_init(%struct.cp_options* %x), !dbg !3128
  %call4 = call i32 @priv_set_remove_linkdir(), !dbg !3129
  br label %while.cond, !dbg !3130

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !3131, !tbaa !2980
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !3132, !tbaa !2993
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), %struct.option* getelementptr inbounds ([14 x %struct.option], [14 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #12, !dbg !3133
  store i32 %call5, i32* %c, align 4, !dbg !3134, !tbaa !2980
  %cmp = icmp ne i32 %call5, -1, !dbg !3135
  br i1 %cmp, label %while.body, label %while.end, !dbg !3130

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %c, align 4, !dbg !3136, !tbaa !2980
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 102, label %sw.bb6
    i32 105, label %sw.bb7
    i32 110, label %sw.bb9
    i32 128, label %sw.bb11
    i32 116, label %sw.bb12
    i32 84, label %sw.bb29
    i32 117, label %sw.bb30
    i32 118, label %sw.bb31
    i32 83, label %sw.bb32
    i32 90, label %sw.bb33
    i32 -130, label %sw.bb37
    i32 -131, label %sw.bb38
  ], !dbg !3138

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !3139, !tbaa !3104
  %5 = load i8*, i8** @optarg, align 8, !dbg !3141, !tbaa !2993
  %tobool = icmp ne i8* %5, null, !dbg !3141
  br i1 %tobool, label %if.then, label %if.end, !dbg !3143

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !3144, !tbaa !2993
  store i8* %6, i8** %version_control_string, align 8, !dbg !3145, !tbaa !2993
  br label %if.end, !dbg !3146

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !3147

sw.bb6:                                           ; preds = %while.body
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3148, !ctir !150
  store i32 1, i32* %interactive, align 8, !dbg !3149, !tbaa !3150, !ctir !80
  br label %sw.epilog, !dbg !3152

sw.bb7:                                           ; preds = %while.body
  %interactive8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3153, !ctir !150
  store i32 3, i32* %interactive8, align 8, !dbg !3154, !tbaa !3150, !ctir !80
  br label %sw.epilog, !dbg !3155

sw.bb9:                                           ; preds = %while.body
  %interactive10 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3156, !ctir !150
  store i32 2, i32* %interactive10, align 8, !dbg !3157, !tbaa !3150, !ctir !80
  br label %sw.epilog, !dbg !3158

sw.bb11:                                          ; preds = %while.body
  store i8 1, i8* @remove_trailing_slashes, align 1, !dbg !3159, !tbaa !3104
  br label %sw.epilog, !dbg !3160

sw.bb12:                                          ; preds = %while.body
  %7 = load i8*, i8** %target_directory, align 8, !dbg !3161, !tbaa !2993
  %tobool13 = icmp ne i8* %7, null, !dbg !3161
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !3163

if.then14:                                        ; preds = %sw.bb12
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #12, !dbg !3164
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call15), !dbg !3164
  unreachable, !dbg !3164

if.else:                                          ; preds = %sw.bb12
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3165, metadata !DIExpression()), !dbg !3167
  %8 = load i8*, i8** @optarg, align 8, !dbg !3168, !tbaa !2993
  %call16 = call i32 @stat(i8* %8, %struct.stat* %st) #12, !dbg !3170
  %cmp17 = icmp ne i32 %call16, 0, !dbg !3171
  br i1 %cmp17, label %if.then18, label %if.end22, !dbg !3172

if.then18:                                        ; preds = %if.else
  %call19 = call i32* @__errno_location() #15, !dbg !3173
  %9 = load i32, i32* %call19, align 4, !dbg !3173, !tbaa !2980, !ctir !5
  %call20 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !3173
  %10 = load i8*, i8** @optarg, align 8, !dbg !3173, !tbaa !2993
  %call21 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3173
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %9, i8* %call20, i8* %call21), !dbg !3173
  unreachable, !dbg !3173

if.end22:                                         ; preds = %if.else
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3174, !ctir !3073
  %11 = load i32, i32* %st_mode, align 8, !dbg !3174, !tbaa !3176, !ctir !130
  %and = and i32 %11, 61440, !dbg !3174
  %cmp23 = icmp eq i32 %and, 16384, !dbg !3174
  br i1 %cmp23, label %if.end27, label %if.then24, !dbg !3180

if.then24:                                        ; preds = %if.end22
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !3181
  %12 = load i8*, i8** @optarg, align 8, !dbg !3181, !tbaa !2993
  %call26 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !3181
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !3181
  unreachable, !dbg !3181

if.end27:                                         ; preds = %if.end22
  br label %if.end28

if.end28:                                         ; preds = %if.end27
  %13 = load i8*, i8** @optarg, align 8, !dbg !3182, !tbaa !2993
  store i8* %13, i8** %target_directory, align 8, !dbg !3183, !tbaa !2993
  br label %sw.epilog, !dbg !3184

sw.bb29:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !3185, !tbaa !3104
  br label %sw.epilog, !dbg !3186

sw.bb30:                                          ; preds = %while.body
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !3187, !ctir !150
  store i8 1, i8* %update, align 1, !dbg !3188, !tbaa !3189, !ctir !117
  br label %sw.epilog, !dbg !3190

sw.bb31:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !3191, !ctir !150
  store i8 1, i8* %verbose, align 2, !dbg !3192, !tbaa !3193, !ctir !117
  br label %sw.epilog, !dbg !3194

sw.bb32:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !3195, !tbaa !3104
  %14 = load i8*, i8** @optarg, align 8, !dbg !3196, !tbaa !2993
  store i8* %14, i8** %backup_suffix, align 8, !dbg !3197, !tbaa !2993
  br label %sw.epilog, !dbg !3198

sw.bb33:                                          ; preds = %while.body
  %15 = load i8, i8* %selinux_enabled, align 1, !dbg !3199, !tbaa !3104
  %tobool34 = trunc i8 %15 to i1, !dbg !3199
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !3201

if.then35:                                        ; preds = %sw.bb33
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !3202, !ctir !150
  store i8 0, i8* %preserve_security_context, align 1, !dbg !3204, !tbaa !3205, !ctir !117
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !3206, !ctir !150
  store i8 1, i8* %set_security_context, align 1, !dbg !3207, !tbaa !3208, !ctir !117
  br label %if.end36, !dbg !3209

if.end36:                                         ; preds = %if.then35, %sw.bb33
  br label %sw.epilog, !dbg !3210

sw.bb37:                                          ; preds = %while.body
  call void @usage(i32 0) #16, !dbg !3211
  unreachable, !dbg !3211

sw.bb38:                                          ; preds = %while.body
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3212, !tbaa !2993
  %17 = load i8*, i8** @Version, align 8, !dbg !3212, !tbaa !2993
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0), i8* null), !dbg !3212
  call void @exit(i32 0) #13, !dbg !3212
  unreachable, !dbg !3212

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #16, !dbg !3213
  unreachable, !dbg !3213

sw.epilog:                                        ; preds = %if.end36, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %if.end28, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !3130, !llvm.loop !3214

while.end:                                        ; preds = %while.cond
  %18 = load i32, i32* %argc.addr, align 4, !dbg !3216, !tbaa !2980
  %19 = load i32, i32* @optind, align 4, !dbg !3217, !tbaa !2980
  %sub = sub nsw i32 %18, %19, !dbg !3218
  store i32 %sub, i32* %n_files, align 4, !dbg !3219, !tbaa !2980
  %20 = load i8**, i8*** %argv.addr, align 8, !dbg !3220, !tbaa !2993
  %21 = load i32, i32* @optind, align 4, !dbg !3221, !tbaa !2980
  %idx.ext = sext i32 %21 to i64, !dbg !3222
  %add.ptr = getelementptr inbounds i8*, i8** %20, i64 %idx.ext, !dbg !3222
  store i8** %add.ptr, i8*** %file, align 8, !dbg !3223, !tbaa !2993
  %22 = load i32, i32* %n_files, align 4, !dbg !3224, !tbaa !2980
  %23 = load i8*, i8** %target_directory, align 8, !dbg !3226, !tbaa !2993
  %tobool39 = icmp ne i8* %23, null, !dbg !3227
  %lnot = xor i1 %tobool39, true, !dbg !3227
  %lnot.ext = zext i1 %lnot to i32, !dbg !3227
  %cmp40 = icmp sle i32 %22, %lnot.ext, !dbg !3228
  br i1 %cmp40, label %if.then41, label %if.end50, !dbg !3229

if.then41:                                        ; preds = %while.end
  %24 = load i32, i32* %n_files, align 4, !dbg !3230, !tbaa !2980
  %cmp42 = icmp sle i32 %24, 0, !dbg !3233
  br i1 %cmp42, label %if.then43, label %if.else45, !dbg !3234

if.then43:                                        ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #12, !dbg !3235
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44), !dbg !3236
  br label %if.end49, !dbg !3236

if.else45:                                        ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0)) #12, !dbg !3237
  %25 = load i8**, i8*** %file, align 8, !dbg !3238, !tbaa !2993
  %arrayidx47 = getelementptr inbounds i8*, i8** %25, i64 0, !dbg !3238, !ctir !116
  %26 = load i8*, i8** %arrayidx47, align 8, !dbg !3238, !tbaa !2993
  %call48 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !3238
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call46, i8* %call48), !dbg !3239
  br label %if.end49

if.end49:                                         ; preds = %if.else45, %if.then43
  call void @usage(i32 1) #16, !dbg !3240
  unreachable, !dbg !3240

if.end50:                                         ; preds = %while.end
  %27 = load i8, i8* %no_target_directory, align 1, !dbg !3241, !tbaa !3104
  %tobool51 = trunc i8 %27 to i1, !dbg !3241
  br i1 %tobool51, label %if.then52, label %if.else63, !dbg !3243

if.then52:                                        ; preds = %if.end50
  %28 = load i8*, i8** %target_directory, align 8, !dbg !3244, !tbaa !2993
  %tobool53 = icmp ne i8* %28, null, !dbg !3244
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !3247

if.then54:                                        ; preds = %if.then52
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i64 0, i64 0)) #12, !dbg !3248
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call55), !dbg !3248
  unreachable, !dbg !3248

if.end56:                                         ; preds = %if.then52
  %29 = load i32, i32* %n_files, align 4, !dbg !3249, !tbaa !2980
  %cmp57 = icmp slt i32 2, %29, !dbg !3251
  br i1 %cmp57, label %if.then58, label %if.end62, !dbg !3252

if.then58:                                        ; preds = %if.end56
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)) #12, !dbg !3253
  %30 = load i8**, i8*** %file, align 8, !dbg !3255, !tbaa !2993
  %arrayidx60 = getelementptr inbounds i8*, i8** %30, i64 2, !dbg !3255, !ctir !116
  %31 = load i8*, i8** %arrayidx60, align 8, !dbg !3255, !tbaa !2993
  %call61 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !3255
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call61), !dbg !3256
  call void @usage(i32 1) #16, !dbg !3257
  unreachable, !dbg !3257

if.end62:                                         ; preds = %if.end56
  br label %if.end98, !dbg !3258

if.else63:                                        ; preds = %if.end50
  %32 = load i8*, i8** %target_directory, align 8, !dbg !3259, !tbaa !2993
  %tobool64 = icmp ne i8* %32, null, !dbg !3259
  br i1 %tobool64, label %if.end97, label %if.then65, !dbg !3261

if.then65:                                        ; preds = %if.else63
  %33 = load i32, i32* %n_files, align 4, !dbg !3262, !tbaa !2980
  %cmp66 = icmp sle i32 2, %33, !dbg !3262
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !3262

cond.true:                                        ; preds = %if.then65
  br label %cond.end, !dbg !3262

cond.false:                                       ; preds = %if.then65
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 457, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__PRETTY_FUNCTION__.main, i64 0, i64 0)) #13, !dbg !3262
  unreachable, !dbg !3262

34:                                               ; No predecessors!
  br label %cond.end, !dbg !3262

cond.end:                                         ; preds = %34, %cond.true
  %35 = load i32, i32* %n_files, align 4, !dbg !3264, !tbaa !2980
  %cmp67 = icmp eq i32 %35, 2, !dbg !3266
  br i1 %cmp67, label %if.then68, label %if.end77, !dbg !3267

if.then68:                                        ; preds = %cond.end
  %36 = load i8**, i8*** %file, align 8, !dbg !3268, !tbaa !2993
  %arrayidx69 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !3268, !ctir !116
  %37 = load i8*, i8** %arrayidx69, align 8, !dbg !3268, !tbaa !2993
  %38 = load i8**, i8*** %file, align 8, !dbg !3269, !tbaa !2993
  %arrayidx70 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !3269, !ctir !116
  %39 = load i8*, i8** %arrayidx70, align 8, !dbg !3269, !tbaa !2993
  %call71 = call i32 @renameatu(i32 -100, i8* %37, i32 -100, i8* %39, i32 1), !dbg !3270
  %tobool72 = icmp ne i32 %call71, 0, !dbg !3270
  br i1 %tobool72, label %cond.true73, label %cond.false75, !dbg !3270

cond.true73:                                      ; preds = %if.then68
  %call74 = call i32* @__errno_location() #15, !dbg !3271
  %40 = load i32, i32* %call74, align 4, !dbg !3271, !tbaa !2980, !ctir !5
  br label %cond.end76, !dbg !3270

cond.false75:                                     ; preds = %if.then68
  br label %cond.end76, !dbg !3270

cond.end76:                                       ; preds = %cond.false75, %cond.true73
  %cond = phi i32 [ %40, %cond.true73 ], [ 0, %cond.false75 ], !dbg !3270
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3272, !ctir !150
  store i32 %cond, i32* %rename_errno, align 4, !dbg !3273, !tbaa !3274, !ctir !5
  br label %if.end77, !dbg !3275

if.end77:                                         ; preds = %cond.end76, %cond.end
  %rename_errno78 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3276, !ctir !150
  %41 = load i32, i32* %rename_errno78, align 4, !dbg !3276, !tbaa !3274, !ctir !5
  %cmp79 = icmp ne i32 %41, 0, !dbg !3278
  br i1 %cmp79, label %land.lhs.true, label %if.else87, !dbg !3279

land.lhs.true:                                    ; preds = %if.end77
  %42 = load i8**, i8*** %file, align 8, !dbg !3280, !tbaa !2993
  %43 = load i32, i32* %n_files, align 4, !dbg !3281, !tbaa !2980
  %sub80 = sub nsw i32 %43, 1, !dbg !3282
  %idxprom = sext i32 %sub80 to i64, !dbg !3280
  %arrayidx81 = getelementptr inbounds i8*, i8** %42, i64 %idxprom, !dbg !3280, !ctir !116
  %44 = load i8*, i8** %arrayidx81, align 8, !dbg !3280, !tbaa !2993
  %call82 = call zeroext i1 @target_directory_operand(i8* %44), !dbg !3283
  br i1 %call82, label %if.then83, label %if.else87, !dbg !3284

if.then83:                                        ; preds = %land.lhs.true
  %rename_errno84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 35, !dbg !3285, !ctir !150
  store i32 -1, i32* %rename_errno84, align 4, !dbg !3287, !tbaa !3274, !ctir !5
  %45 = load i8**, i8*** %file, align 8, !dbg !3288, !tbaa !2993
  %46 = load i32, i32* %n_files, align 4, !dbg !3289, !tbaa !2980
  %dec = add nsw i32 %46, -1, !dbg !3289
  store i32 %dec, i32* %n_files, align 4, !dbg !3289, !tbaa !2980
  %idxprom85 = sext i32 %dec to i64, !dbg !3288
  %arrayidx86 = getelementptr inbounds i8*, i8** %45, i64 %idxprom85, !dbg !3288, !ctir !116
  %47 = load i8*, i8** %arrayidx86, align 8, !dbg !3288, !tbaa !2993
  store i8* %47, i8** %target_directory, align 8, !dbg !3290, !tbaa !2993
  br label %if.end96, !dbg !3291

if.else87:                                        ; preds = %land.lhs.true, %if.end77
  %48 = load i32, i32* %n_files, align 4, !dbg !3292, !tbaa !2980
  %cmp88 = icmp slt i32 2, %48, !dbg !3294
  br i1 %cmp88, label %if.then89, label %if.end95, !dbg !3295

if.then89:                                        ; preds = %if.else87
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0)) #12, !dbg !3296
  %49 = load i8**, i8*** %file, align 8, !dbg !3296, !tbaa !2993
  %50 = load i32, i32* %n_files, align 4, !dbg !3296, !tbaa !2980
  %sub91 = sub nsw i32 %50, 1, !dbg !3296
  %idxprom92 = sext i32 %sub91 to i64, !dbg !3296
  %arrayidx93 = getelementptr inbounds i8*, i8** %49, i64 %idxprom92, !dbg !3296, !ctir !116
  %51 = load i8*, i8** %arrayidx93, align 8, !dbg !3296, !tbaa !2993
  %call94 = call i8* @quotearg_style(i32 4, i8* %51), !dbg !3296
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call90, i8* %call94), !dbg !3296
  unreachable, !dbg !3296

if.end95:                                         ; preds = %if.else87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then83
  br label %if.end97, !dbg !3297

if.end97:                                         ; preds = %if.end96, %if.else63
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end62
  %interactive99 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3298, !ctir !150
  %52 = load i32, i32* %interactive99, align 8, !dbg !3298, !tbaa !3150, !ctir !80
  %cmp100 = icmp eq i32 %52, 2, !dbg !3300
  br i1 %cmp100, label %if.then101, label %if.end103, !dbg !3301

if.then101:                                       ; preds = %if.end98
  %update102 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 30, !dbg !3302, !ctir !150
  store i8 0, i8* %update102, align 1, !dbg !3303, !tbaa !3189, !ctir !117
  br label %if.end103, !dbg !3304

if.end103:                                        ; preds = %if.then101, %if.end98
  %53 = load i8, i8* %make_backups, align 1, !dbg !3305, !tbaa !3104
  %tobool104 = trunc i8 %53 to i1, !dbg !3305
  br i1 %tobool104, label %land.lhs.true105, label %if.end110, !dbg !3307

land.lhs.true105:                                 ; preds = %if.end103
  %interactive106 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 2, !dbg !3308, !ctir !150
  %54 = load i32, i32* %interactive106, align 8, !dbg !3308, !tbaa !3150, !ctir !80
  %cmp107 = icmp eq i32 %54, 2, !dbg !3309
  br i1 %cmp107, label %if.then108, label %if.end110, !dbg !3310

if.then108:                                       ; preds = %land.lhs.true105
  %call109 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0)) #12, !dbg !3311
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call109), !dbg !3313
  call void @usage(i32 1) #16, !dbg !3314
  unreachable, !dbg !3314

if.end110:                                        ; preds = %land.lhs.true105, %if.end103
  %55 = load i8, i8* %make_backups, align 1, !dbg !3315, !tbaa !3104
  %tobool111 = trunc i8 %55 to i1, !dbg !3315
  br i1 %tobool111, label %cond.true112, label %cond.false115, !dbg !3315

cond.true112:                                     ; preds = %if.end110
  %call113 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0)) #12, !dbg !3316
  %56 = load i8*, i8** %version_control_string, align 8, !dbg !3317, !tbaa !2993
  %call114 = call i32 @xget_version(i8* %call113, i8* %56), !dbg !3318
  br label %cond.end116, !dbg !3315

cond.false115:                                    ; preds = %if.end110
  br label %cond.end116, !dbg !3315

cond.end116:                                      ; preds = %cond.false115, %cond.true112
  %cond117 = phi i32 [ %call114, %cond.true112 ], [ 0, %cond.false115 ], !dbg !3315
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !3319, !ctir !150
  store i32 %cond117, i32* %backup_type, align 8, !dbg !3320, !tbaa !3321, !ctir !65
  %57 = load i8*, i8** %backup_suffix, align 8, !dbg !3322, !tbaa !2993
  call void @set_simple_backup_suffix(i8* %57), !dbg !3323
  call void @hash_init(), !dbg !3324
  %58 = load i8*, i8** %target_directory, align 8, !dbg !3325, !tbaa !2993
  %tobool118 = icmp ne i8* %58, null, !dbg !3325
  br i1 %tobool118, label %if.then119, label %if.else133, !dbg !3327

if.then119:                                       ; preds = %cond.end116
  %59 = load i32, i32* %n_files, align 4, !dbg !3328, !tbaa !2980
  %cmp120 = icmp sle i32 2, %59, !dbg !3331
  br i1 %cmp120, label %if.then121, label %if.end122, !dbg !3332

if.then121:                                       ; preds = %if.then119
  call void @dest_info_init(%struct.cp_options* %x), !dbg !3333
  br label %if.end122, !dbg !3333

if.end122:                                        ; preds = %if.then121, %if.then119
  store i8 1, i8* %ok, align 1, !dbg !3334, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3335, metadata !DIExpression()), !dbg !3337
  store i32 0, i32* %i, align 4, !dbg !3337, !tbaa !2980
  br label %for.cond, !dbg !3338

for.cond:                                         ; preds = %for.inc, %if.end122
  %60 = load i32, i32* %i, align 4, !dbg !3339, !tbaa !2980
  %61 = load i32, i32* %n_files, align 4, !dbg !3341, !tbaa !2980
  %cmp123 = icmp slt i32 %60, %61, !dbg !3342
  br i1 %cmp123, label %for.body, label %for.end, !dbg !3343

for.body:                                         ; preds = %for.cond
  %62 = load i32, i32* %i, align 4, !dbg !3344, !tbaa !2980
  %add = add nsw i32 %62, 1, !dbg !3346
  %63 = load i32, i32* %n_files, align 4, !dbg !3347, !tbaa !2980
  %cmp124 = icmp eq i32 %add, %63, !dbg !3348
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !3349, !ctir !150
  %frombool = zext i1 %cmp124 to i8, !dbg !3350
  store i8 %frombool, i8* %last_file, align 1, !dbg !3350, !tbaa !3351, !ctir !117
  %64 = load i8**, i8*** %file, align 8, !dbg !3352, !tbaa !2993
  %65 = load i32, i32* %i, align 4, !dbg !3353, !tbaa !2980
  %idxprom125 = sext i32 %65 to i64, !dbg !3352
  %arrayidx126 = getelementptr inbounds i8*, i8** %64, i64 %idxprom125, !dbg !3352, !ctir !116
  %66 = load i8*, i8** %arrayidx126, align 8, !dbg !3352, !tbaa !2993
  %67 = load i8*, i8** %target_directory, align 8, !dbg !3354, !tbaa !2993
  %call127 = call zeroext i1 @movefile(i8* %66, i8* %67, i1 zeroext true, %struct.cp_options* %x), !dbg !3355
  %conv = zext i1 %call127 to i32, !dbg !3355
  %68 = load i8, i8* %ok, align 1, !dbg !3356, !tbaa !3104
  %tobool128 = trunc i8 %68 to i1, !dbg !3356
  %conv129 = zext i1 %tobool128 to i32, !dbg !3356
  %and130 = and i32 %conv129, %conv, !dbg !3356
  %tobool131 = icmp ne i32 %and130, 0, !dbg !3356
  %frombool132 = zext i1 %tobool131 to i8, !dbg !3356
  store i8 %frombool132, i8* %ok, align 1, !dbg !3356, !tbaa !3104
  br label %for.inc, !dbg !3357

for.inc:                                          ; preds = %for.body
  %69 = load i32, i32* %i, align 4, !dbg !3358, !tbaa !2980
  %inc = add nsw i32 %69, 1, !dbg !3358
  store i32 %inc, i32* %i, align 4, !dbg !3358, !tbaa !2980
  br label %for.cond, !dbg !3359, !llvm.loop !3360

for.end:                                          ; preds = %for.cond
  br label %if.end139, !dbg !3362

if.else133:                                       ; preds = %cond.end116
  %last_file134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 34, !dbg !3363, !ctir !150
  store i8 1, i8* %last_file134, align 1, !dbg !3365, !tbaa !3351, !ctir !117
  %70 = load i8**, i8*** %file, align 8, !dbg !3366, !tbaa !2993
  %arrayidx135 = getelementptr inbounds i8*, i8** %70, i64 0, !dbg !3366, !ctir !116
  %71 = load i8*, i8** %arrayidx135, align 8, !dbg !3366, !tbaa !2993
  %72 = load i8**, i8*** %file, align 8, !dbg !3367, !tbaa !2993
  %arrayidx136 = getelementptr inbounds i8*, i8** %72, i64 1, !dbg !3367, !ctir !116
  %73 = load i8*, i8** %arrayidx136, align 8, !dbg !3367, !tbaa !2993
  %call137 = call zeroext i1 @movefile(i8* %71, i8* %73, i1 zeroext false, %struct.cp_options* %x), !dbg !3368
  %frombool138 = zext i1 %call137 to i8, !dbg !3369
  store i8 %frombool138, i8* %ok, align 1, !dbg !3369, !tbaa !3104
  br label %if.end139

if.end139:                                        ; preds = %if.else133, %for.end
  %74 = load i8, i8* %ok, align 1, !dbg !3370, !tbaa !3104
  %tobool140 = trunc i8 %74 to i1, !dbg !3370
  %75 = zext i1 %tobool140 to i64, !dbg !3370
  %cond142 = select i1 %tobool140, i32 0, i32 1, !dbg !3370
  ret i32 %cond142, !dbg !3371
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !3372 !ctir !147 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !149
  %selinux_enabled = alloca i8, align 1, !ctir !117
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3373, metadata !DIExpression()), !dbg !3374
  call void @llvm.dbg.declare(metadata i8* %selinux_enabled, metadata !3375, metadata !DIExpression()), !dbg !3376
  store i8 0, i8* %selinux_enabled, align 1, !dbg !3376, !tbaa !3104
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3377, !tbaa !2993
  call void @cp_options_default(%struct.cp_options* %0), !dbg !3378
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3379, !tbaa !2993
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !3380, !ctir !150
  store i8 0, i8* %copy_as_regular, align 4, !dbg !3381, !tbaa !3382, !ctir !117
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3383, !tbaa !2993
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !3384, !ctir !150
  store i32 1, i32* %reflink_mode, align 8, !dbg !3385, !tbaa !3386, !ctir !92
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3387, !tbaa !2993
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !3388, !ctir !150
  store i32 2, i32* %dereference, align 4, !dbg !3389, !tbaa !3390, !ctir !73
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3391, !tbaa !2993
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !3392, !ctir !150
  store i8 0, i8* %unlink_dest_before_opening, align 1, !dbg !3393, !tbaa !3394, !ctir !117
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3395, !tbaa !2993
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !3396, !ctir !150
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !3397, !tbaa !3398, !ctir !117
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3399, !tbaa !2993
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !3400, !ctir !150
  store i8 0, i8* %hard_link, align 1, !dbg !3401, !tbaa !3402, !ctir !117
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3403, !tbaa !2993
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !3404, !ctir !150
  store i32 4, i32* %interactive, align 8, !dbg !3405, !tbaa !3150, !ctir !80
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3406, !tbaa !2993
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !3407, !ctir !150
  store i8 1, i8* %move_mode, align 8, !dbg !3408, !tbaa !3409, !ctir !117
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3410, !tbaa !2993
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !3411, !ctir !150
  store i8 0, i8* %install_mode, align 1, !dbg !3412, !tbaa !3413, !ctir !117
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3414, !tbaa !2993
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !3415, !ctir !150
  store i8 0, i8* %one_file_system, align 4, !dbg !3416, !tbaa !3417, !ctir !117
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3418, !tbaa !2993
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !3419, !ctir !150
  store i8 1, i8* %preserve_ownership, align 1, !dbg !3420, !tbaa !3421, !ctir !117
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3422, !tbaa !2993
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !3423, !ctir !150
  store i8 1, i8* %preserve_links, align 2, !dbg !3424, !tbaa !3425, !ctir !117
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3426, !tbaa !2993
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !3427, !ctir !150
  store i8 1, i8* %preserve_mode, align 2, !dbg !3428, !tbaa !3429, !ctir !117
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3430, !tbaa !2993
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !3431, !ctir !150
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !3432, !tbaa !3433, !ctir !117
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3434, !tbaa !2993
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !3435, !ctir !150
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !3436, !tbaa !3437, !ctir !117
  %16 = load i8, i8* %selinux_enabled, align 1, !dbg !3438, !tbaa !3104
  %tobool = trunc i8 %16 to i1, !dbg !3438
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3439, !tbaa !2993
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 22, !dbg !3440, !ctir !150
  %frombool = zext i1 %tobool to i8, !dbg !3441
  store i8 %frombool, i8* %preserve_security_context, align 1, !dbg !3441, !tbaa !3205, !ctir !117
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3442, !tbaa !2993
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 18, !dbg !3443, !ctir !150
  store i8 0, i8* %set_security_context, align 1, !dbg !3444, !tbaa !3208, !ctir !117
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3445, !tbaa !2993
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 26, !dbg !3446, !ctir !150
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !3447, !tbaa !3448, !ctir !117
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3449, !tbaa !2993
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 20, !dbg !3450, !ctir !150
  store i8 1, i8* %data_copy_required, align 1, !dbg !3451, !tbaa !3452, !ctir !117
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3453, !tbaa !2993
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 21, !dbg !3454, !ctir !150
  store i8 0, i8* %require_preserve, align 4, !dbg !3455, !tbaa !3456, !ctir !117
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3457, !tbaa !2993
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 23, !dbg !3458, !ctir !150
  store i8 0, i8* %require_preserve_context, align 2, !dbg !3459, !tbaa !3460, !ctir !117
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3461, !tbaa !2993
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 24, !dbg !3462, !ctir !150
  store i8 1, i8* %preserve_xattr, align 1, !dbg !3463, !tbaa !3464, !ctir !117
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3465, !tbaa !2993
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 25, !dbg !3466, !ctir !150
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !3467, !tbaa !3468, !ctir !117
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3469, !tbaa !2993
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 27, !dbg !3470, !ctir !150
  store i8 1, i8* %recursive, align 2, !dbg !3471, !tbaa !3472, !ctir !117
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3473, !tbaa !2993
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !3474, !ctir !150
  store i32 2, i32* %sparse_mode, align 4, !dbg !3475, !tbaa !3476, !ctir !86
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3477, !tbaa !2993
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 29, !dbg !3478, !ctir !150
  store i8 0, i8* %symbolic_link, align 4, !dbg !3479, !tbaa !3480, !ctir !117
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3481, !tbaa !2993
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 28, !dbg !3482, !ctir !150
  store i8 0, i8* %set_mode, align 1, !dbg !3483, !tbaa !3484, !ctir !117
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3485, !tbaa !2993
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 4, !dbg !3486, !ctir !150
  store i32 0, i32* %mode, align 8, !dbg !3487, !tbaa !3488, !ctir !157
  %call = call i32 @isatty(i32 0) #12, !dbg !3489
  %tobool1 = icmp ne i32 %call, 0, !dbg !3489
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3490, !tbaa !2993
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 32, !dbg !3491, !ctir !150
  %frombool2 = zext i1 %tobool1 to i8, !dbg !3492
  store i8 %frombool2, i8* %stdin_tty, align 1, !dbg !3492, !tbaa !3493, !ctir !117
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3494, !tbaa !2993
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 33, !dbg !3495, !ctir !150
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !3496, !tbaa !3497, !ctir !117
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3498, !tbaa !2993
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 30, !dbg !3499, !ctir !150
  store i8 0, i8* %update, align 1, !dbg !3500, !tbaa !3189, !ctir !117
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3501, !tbaa !2993
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !3502, !ctir !150
  store i8 0, i8* %verbose, align 2, !dbg !3503, !tbaa !3193, !ctir !117
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3504, !tbaa !2993
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !3505, !ctir !150
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !3506, !tbaa !3507, !ctir !192
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3508, !tbaa !2993
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !3509, !ctir !150
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !3510, !tbaa !3511, !ctir !192
  ret void, !dbg !3512
}

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !3513 !ctir !197 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %st = alloca %struct.stat, align 8, !ctir !3073
  %err = alloca i32, align 4, !ctir !5
  %is_a_dir = alloca i8, align 1, !ctir !117
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3516, metadata !DIExpression()), !dbg !3517
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3518, metadata !DIExpression()), !dbg !3519
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3520, !tbaa !2993
  %call = call i32 @stat(i8* %0, %struct.stat* %st) #12, !dbg !3521
  %cmp = icmp eq i32 %call, 0, !dbg !3522
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3521

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !3521

cond.false:                                       ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !3523
  %1 = load i32, i32* %call1, align 4, !dbg !3523, !tbaa !2980, !ctir !5
  br label %cond.end, !dbg !3521

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %1, %cond.false ], !dbg !3521
  store i32 %cond, i32* %err, align 4, !dbg !3519, !tbaa !2980
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !3524, metadata !DIExpression()), !dbg !3525
  %2 = load i32, i32* %err, align 4, !dbg !3526, !tbaa !2980
  %tobool = icmp ne i32 %2, 0, !dbg !3526
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3527

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3528, !ctir !3073
  %3 = load i32, i32* %st_mode, align 8, !dbg !3528, !tbaa !3176, !ctir !130
  %and = and i32 %3, 61440, !dbg !3528
  %cmp2 = icmp eq i32 %and, 16384, !dbg !3528
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %4 = phi i1 [ false, %cond.end ], [ %cmp2, %land.rhs ], !dbg !3529
  %frombool = zext i1 %4 to i8, !dbg !3525
  store i8 %frombool, i8* %is_a_dir, align 1, !dbg !3525, !tbaa !3104
  %5 = load i32, i32* %err, align 4, !dbg !3530, !tbaa !2980
  %tobool3 = icmp ne i32 %5, 0, !dbg !3530
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !3532

land.lhs.true:                                    ; preds = %land.end
  %6 = load i32, i32* %err, align 4, !dbg !3533, !tbaa !2980
  %cmp4 = icmp ne i32 %6, 2, !dbg !3534
  br i1 %cmp4, label %if.then, label %if.end, !dbg !3535

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %err, align 4, !dbg !3536, !tbaa !2980
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0)) #12, !dbg !3536
  %8 = load i8*, i8** %file.addr, align 8, !dbg !3536, !tbaa !2993
  %call6 = call i8* @quotearg_style(i32 4, i8* %8), !dbg !3536
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %7, i8* %call5, i8* %call6), !dbg !3536
  unreachable, !dbg !3536

if.end:                                           ; preds = %land.lhs.true, %land.end
  %9 = load i8, i8* %is_a_dir, align 1, !dbg !3537, !tbaa !3104
  %tobool7 = trunc i8 %9 to i1, !dbg !3537
  ret i1 %tobool7, !dbg !3538
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @movefile(i8* %source, i8* %dest, i1 zeroext %dest_is_dir, %struct.cp_options* %x) #4 !dbg !3539 !ctir !199 {
entry:
  %source.addr = alloca i8*, align 8, !ctir !7
  %dest.addr = alloca i8*, align 8, !ctir !7
  %dest_is_dir.addr = alloca i8, align 1, !ctir !117
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !201
  %ok = alloca i8, align 1, !ctir !117
  %src_basename = alloca i8*, align 8, !ctir !112
  %new_dest = alloca i8*, align 8, !ctir !7
  store i8* %source, i8** %source.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !3540, metadata !DIExpression()), !dbg !3541
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3542, metadata !DIExpression()), !dbg !3543
  %frombool = zext i1 %dest_is_dir to i8
  store i8 %frombool, i8* %dest_is_dir.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %dest_is_dir.addr, metadata !3544, metadata !DIExpression()), !dbg !3545
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3546, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3548, metadata !DIExpression()), !dbg !3549
  %0 = load i8, i8* @remove_trailing_slashes, align 1, !dbg !3550, !tbaa !3104
  %tobool = trunc i8 %0 to i1, !dbg !3550
  br i1 %tobool, label %if.then, label %if.end, !dbg !3552

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %source.addr, align 8, !dbg !3553, !tbaa !2993
  %call = call zeroext i1 @strip_trailing_slashes(i8* %1), !dbg !3554
  br label %if.end, !dbg !3554

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* %dest_is_dir.addr, align 1, !dbg !3555, !tbaa !3104
  %tobool1 = trunc i8 %2 to i1, !dbg !3555
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3557

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %src_basename, metadata !3558, metadata !DIExpression()), !dbg !3560
  %3 = load i8*, i8** %source.addr, align 8, !dbg !3561, !tbaa !2993
  %call3 = call i8* @last_component(i8* %3) #14, !dbg !3562
  store i8* %call3, i8** %src_basename, align 8, !dbg !3560, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %new_dest, metadata !3563, metadata !DIExpression()), !dbg !3564
  %4 = load i8*, i8** %dest.addr, align 8, !dbg !3565, !tbaa !2993
  %5 = load i8*, i8** %src_basename, align 8, !dbg !3566, !tbaa !2993
  %call4 = call i8* @file_name_concat(i8* %4, i8* %5, i8** null), !dbg !3567
  store i8* %call4, i8** %new_dest, align 8, !dbg !3564, !tbaa !2993
  %6 = load i8*, i8** %new_dest, align 8, !dbg !3568, !tbaa !2993
  %call5 = call zeroext i1 @strip_trailing_slashes(i8* %6), !dbg !3569
  %7 = load i8*, i8** %source.addr, align 8, !dbg !3570, !tbaa !2993
  %8 = load i8*, i8** %new_dest, align 8, !dbg !3571, !tbaa !2993
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3572, !tbaa !2993
  %call6 = call zeroext i1 @do_move(i8* %7, i8* %8, %struct.cp_options* %9), !dbg !3573
  %frombool7 = zext i1 %call6 to i8, !dbg !3574
  store i8 %frombool7, i8* %ok, align 1, !dbg !3574, !tbaa !3104
  %10 = load i8*, i8** %new_dest, align 8, !dbg !3575, !tbaa !2993
  call void @free(i8* %10) #12, !dbg !3576
  br label %if.end10, !dbg !3577

if.else:                                          ; preds = %if.end
  %11 = load i8*, i8** %source.addr, align 8, !dbg !3578, !tbaa !2993
  %12 = load i8*, i8** %dest.addr, align 8, !dbg !3580, !tbaa !2993
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3581, !tbaa !2993
  %call8 = call zeroext i1 @do_move(i8* %11, i8* %12, %struct.cp_options* %13), !dbg !3582
  %frombool9 = zext i1 %call8 to i8, !dbg !3583
  store i8 %frombool9, i8* %ok, align 1, !dbg !3583, !tbaa !3104
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then2
  %14 = load i8, i8* %ok, align 1, !dbg !3584, !tbaa !3104
  %tobool11 = trunc i8 %14 to i1, !dbg !3584
  ret i1 %tobool11, !dbg !3585
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @do_move(i8* %source, i8* %dest, %struct.cp_options* %x) #4 !dbg !3586 !ctir !203 {
entry:
  %source.addr = alloca i8*, align 8, !ctir !112
  %dest.addr = alloca i8*, align 8, !ctir !112
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !201
  %copy_into_self = alloca i8, align 1, !ctir !117
  %rename_succeeded = alloca i8, align 1, !ctir !117
  %ok = alloca i8, align 1, !ctir !117
  %dir_to_remove = alloca i8*, align 8, !ctir !112
  %rm_options = alloca %struct.rm_options, align 8, !ctir !211
  %status = alloca i32, align 4, !ctir !103
  %dir = alloca [2 x i8*], align 16, !ctir !205
  store i8* %source, i8** %source.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !3587, metadata !DIExpression()), !dbg !3588
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3589, metadata !DIExpression()), !dbg !3590
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3591, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !3593, metadata !DIExpression()), !dbg !3594
  call void @llvm.dbg.declare(metadata i8* %rename_succeeded, metadata !3595, metadata !DIExpression()), !dbg !3596
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3597, metadata !DIExpression()), !dbg !3598
  %0 = load i8*, i8** %source.addr, align 8, !dbg !3599, !tbaa !2993
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !3600, !tbaa !2993
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3601, !tbaa !2993
  %call = call zeroext i1 @copy(i8* %0, i8* %1, i1 zeroext false, %struct.cp_options* %2, i8* %copy_into_self, i8* %rename_succeeded), !dbg !3602
  %frombool = zext i1 %call to i8, !dbg !3598
  store i8 %frombool, i8* %ok, align 1, !dbg !3598, !tbaa !3104
  %3 = load i8, i8* %ok, align 1, !dbg !3603, !tbaa !3104
  %tobool = trunc i8 %3 to i1, !dbg !3603
  br i1 %tobool, label %if.then, label %if.end21, !dbg !3605

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %dir_to_remove, metadata !3606, metadata !DIExpression()), !dbg !3608
  %4 = load i8, i8* %copy_into_self, align 1, !dbg !3609, !tbaa !3104
  %tobool1 = trunc i8 %4 to i1, !dbg !3609
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3611

if.then2:                                         ; preds = %if.then
  store i8* null, i8** %dir_to_remove, align 8, !dbg !3612, !tbaa !2993
  store i8 0, i8* %ok, align 1, !dbg !3614, !tbaa !3104
  br label %if.end6, !dbg !3615

if.else:                                          ; preds = %if.then
  %5 = load i8, i8* %rename_succeeded, align 1, !dbg !3616, !tbaa !3104
  %tobool3 = trunc i8 %5 to i1, !dbg !3616
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !3618

if.then4:                                         ; preds = %if.else
  store i8* null, i8** %dir_to_remove, align 8, !dbg !3619, !tbaa !2993
  br label %if.end, !dbg !3621

if.else5:                                         ; preds = %if.else
  %6 = load i8*, i8** %source.addr, align 8, !dbg !3622, !tbaa !2993
  store i8* %6, i8** %dir_to_remove, align 8, !dbg !3624, !tbaa !2993
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then2
  %7 = load i8*, i8** %dir_to_remove, align 8, !dbg !3625, !tbaa !2993
  %cmp = icmp ne i8* %7, null, !dbg !3627
  br i1 %cmp, label %if.then7, label %if.end20, !dbg !3628

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.rm_options* %rm_options, metadata !3629, metadata !DIExpression()), !dbg !3631
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3632, metadata !DIExpression()), !dbg !3633
  call void @llvm.dbg.declare(metadata [2 x i8*]* %dir, metadata !3634, metadata !DIExpression()), !dbg !3635
  call void @rm_option_init(%struct.rm_options* %rm_options), !dbg !3636
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3637, !tbaa !2993
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 31, !dbg !3638, !ctir !202
  %9 = load i8, i8* %verbose, align 2, !dbg !3638, !tbaa !3193
  %tobool8 = trunc i8 %9 to i1, !dbg !3638, !ctir !117
  %verbose9 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %rm_options, i32 0, i32 8, !dbg !3639, !ctir !211
  %frombool10 = zext i1 %tobool8 to i8, !dbg !3640
  store i8 %frombool10, i8* %verbose9, align 2, !dbg !3640, !tbaa !3641, !ctir !117
  %10 = load i8*, i8** %dir_to_remove, align 8, !dbg !3643, !tbaa !2993
  %arrayidx = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !3644, !ctir !205
  store i8* %10, i8** %arrayidx, align 16, !dbg !3645, !tbaa !2993
  %arrayidx11 = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 1, !dbg !3646, !ctir !205
  store i8* null, i8** %arrayidx11, align 8, !dbg !3647, !tbaa !2993
  %arraydecay = getelementptr inbounds [2 x i8*], [2 x i8*]* %dir, i64 0, i64 0, !dbg !3648
  %11 = bitcast i8** %arraydecay to i8*, !dbg !3649
  %12 = bitcast i8* %11 to i8**, !dbg !3649
  %call12 = call i32 @rm(i8** %12, %struct.rm_options* %rm_options), !dbg !3650
  store i32 %call12, i32* %status, align 4, !dbg !3651, !tbaa !3652
  %13 = load i32, i32* %status, align 4, !dbg !3653, !tbaa !3652
  %cmp13 = icmp eq i32 %13, 2, !dbg !3653
  br i1 %cmp13, label %cond.true, label %lor.lhs.false, !dbg !3653

lor.lhs.false:                                    ; preds = %if.then7
  %14 = load i32, i32* %status, align 4, !dbg !3653, !tbaa !3652
  %cmp14 = icmp eq i32 %14, 3, !dbg !3653
  br i1 %cmp14, label %cond.true, label %lor.lhs.false15, !dbg !3653

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %15 = load i32, i32* %status, align 4, !dbg !3653, !tbaa !3652
  %cmp16 = icmp eq i32 %15, 4, !dbg !3653
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !3653

cond.true:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.then7
  br label %cond.end, !dbg !3653

cond.false:                                       ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i32 239, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__.do_move, i64 0, i64 0)) #13, !dbg !3653
  unreachable, !dbg !3653

16:                                               ; No predecessors!
  br label %cond.end, !dbg !3653

cond.end:                                         ; preds = %16, %cond.true
  %17 = load i32, i32* %status, align 4, !dbg !3654, !tbaa !3652
  %cmp17 = icmp eq i32 %17, 4, !dbg !3656
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !3657

if.then18:                                        ; preds = %cond.end
  store i8 0, i8* %ok, align 1, !dbg !3658, !tbaa !3104
  br label %if.end19, !dbg !3659

if.end19:                                         ; preds = %if.then18, %cond.end
  br label %if.end20, !dbg !3660

if.end20:                                         ; preds = %if.end19, %if.end6
  br label %if.end21, !dbg !3661

if.end21:                                         ; preds = %if.end20, %entry
  %18 = load i8, i8* %ok, align 1, !dbg !3662, !tbaa !3104
  %tobool22 = trunc i8 %18 to i1, !dbg !3662
  ret i1 %tobool22, !dbg !3663
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rm_option_init(%struct.rm_options* %x) #4 !dbg !238 !ctir !208 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8, !ctir !210
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3664, metadata !DIExpression()), !dbg !3665
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3666, !tbaa !2993
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !3667, !ctir !211
  store i8 0, i8* %ignore_missing_files, align 8, !dbg !3668, !tbaa !3669, !ctir !117
  %1 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3670, !tbaa !2993
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %1, i32 0, i32 4, !dbg !3671, !ctir !211
  store i8 1, i8* %remove_empty_directories, align 2, !dbg !3672, !tbaa !3673, !ctir !117
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3674, !tbaa !2993
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !3675, !ctir !211
  store i8 1, i8* %recursive, align 1, !dbg !3676, !tbaa !3677, !ctir !117
  %3 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3678, !tbaa !2993
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %3, i32 0, i32 2, !dbg !3679, !ctir !211
  store i8 0, i8* %one_file_system, align 8, !dbg !3680, !tbaa !3681, !ctir !117
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3682, !tbaa !2993
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 1, !dbg !3683, !ctir !211
  store i32 5, i32* %interactive, align 4, !dbg !3684, !tbaa !3685, !ctir !97
  %5 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3686, !tbaa !2993
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %5, i32 0, i32 7, !dbg !3687, !ctir !211
  store i8 0, i8* %stdin_tty, align 1, !dbg !3688, !tbaa !3689, !ctir !117
  %6 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3690, !tbaa !2993
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %6, i32 0, i32 8, !dbg !3691, !ctir !211
  store i8 0, i8* %verbose, align 2, !dbg !3692, !tbaa !3641, !ctir !117
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3693, !tbaa !2993
  %require_restore_cwd = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 9, !dbg !3694, !ctir !211
  store i8 1, i8* %require_restore_cwd, align 1, !dbg !3695, !tbaa !3696, !ctir !117
  %call = call %struct.timespec* @get_root_dev_ino(%struct.timespec* @rm_option_init.dev_ino_buf), !dbg !3697
  %8 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3699, !tbaa !2993
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %8, i32 0, i32 5, !dbg !3700, !ctir !211
  store %struct.timespec* %call, %struct.timespec** %root_dev_ino, align 8, !dbg !3701, !tbaa !3702, !ctir !219
  %9 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3703, !tbaa !2993
  %root_dev_ino1 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %9, i32 0, i32 5, !dbg !3705, !ctir !211
  %10 = load %struct.timespec*, %struct.timespec** %root_dev_ino1, align 8, !dbg !3705, !tbaa !3702, !ctir !219
  %cmp = icmp eq %struct.timespec* %10, null, !dbg !3706
  br i1 %cmp, label %if.then, label %if.end, !dbg !3707

if.then:                                          ; preds = %entry
  %call2 = call i32* @__errno_location() #15, !dbg !3708
  %11 = load i32, i32* %call2, align 4, !dbg !3708, !tbaa !2980, !ctir !5
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0)) #12, !dbg !3708
  %call4 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.61, i64 0, i64 0)), !dbg !3708
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call3, i8* %call4), !dbg !3708
  unreachable, !dbg !3708

if.end:                                           ; preds = %entry
  %12 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3709, !tbaa !2993
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %12, i32 0, i32 6, !dbg !3710, !ctir !211
  store i8 0, i8* %preserve_all_root, align 8, !dbg !3711, !tbaa !3712, !ctir !117
  ret void, !dbg !3713
}

; Function Attrs: nounwind
declare dso_local i32 @isatty(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rm(i8** %file, %struct.rm_options* %x) #4 !dbg !3714 !ctir !1329 {
entry:
  %file.addr = alloca i8**, align 8, !ctir !1331
  %x.addr = alloca %struct.rm_options*, align 8, !ctir !1333
  %rm_status = alloca i32, align 4, !ctir !103
  %bit_flags = alloca i32, align 4, !ctir !5
  %fts = alloca %struct.FTS*, align 8, !ctir !1352
  %ent = alloca %struct._ftsent*, align 8, !ctir !1445
  %s = alloca i32, align 4, !ctir !103
  store i8** %file, i8*** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3717, metadata !DIExpression()), !dbg !3718
  call void @llvm.dbg.declare(metadata i32* %rm_status, metadata !3719, metadata !DIExpression()), !dbg !3720
  store i32 2, i32* %rm_status, align 4, !dbg !3720, !tbaa !3652
  %0 = load i8**, i8*** %file.addr, align 8, !dbg !3721, !tbaa !2993
  %1 = load i8*, i8** %0, align 8, !dbg !3723, !tbaa !2993, !ctir !1332
  %tobool = icmp ne i8* %1, null, !dbg !3723
  br i1 %tobool, label %if.then, label %if.end29, !dbg !3724

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %bit_flags, metadata !3725, metadata !DIExpression()), !dbg !3727
  store i32 536, i32* %bit_flags, align 4, !dbg !3727, !tbaa !2980
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3728, !tbaa !2993
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 2, !dbg !3730, !ctir !1334
  %3 = load i8, i8* %one_file_system, align 8, !dbg !3730, !tbaa !3681
  %tobool1 = trunc i8 %3 to i1, !dbg !3730, !ctir !117
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !3731

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %bit_flags, align 4, !dbg !3732, !tbaa !2980
  %or = or i32 %4, 64, !dbg !3732
  store i32 %or, i32* %bit_flags, align 4, !dbg !3732, !tbaa !2980
  br label %if.end, !dbg !3733

if.end:                                           ; preds = %if.then2, %if.then
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !3734, metadata !DIExpression()), !dbg !3735
  %5 = load i8**, i8*** %file.addr, align 8, !dbg !3736, !tbaa !2993
  %6 = load i32, i32* %bit_flags, align 4, !dbg !3737, !tbaa !2980
  %call = call %struct.FTS* @xfts_open(i8** %5, i32 %6, i32 (%struct._ftsent**, %struct._ftsent**)* null), !dbg !3738
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !3735, !tbaa !2993
  br label %while.body, !dbg !3739

while.body:                                       ; preds = %if.end, %do.end
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent, metadata !3740, metadata !DIExpression()), !dbg !3742
  %7 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3743, !tbaa !2993
  %call3 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %7), !dbg !3744
  store %struct._ftsent* %call3, %struct._ftsent** %ent, align 8, !dbg !3745, !tbaa !2993
  %8 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !3746, !tbaa !2993
  %cmp = icmp eq %struct._ftsent* %8, null, !dbg !3748
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !3749

if.then4:                                         ; preds = %while.body
  %call5 = call i32* @__errno_location() #15, !dbg !3750
  %9 = load i32, i32* %call5, align 4, !dbg !3750, !tbaa !2980, !ctir !5
  %cmp6 = icmp ne i32 %9, 0, !dbg !3753
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !3754

if.then7:                                         ; preds = %if.then4
  %call8 = call i32* @__errno_location() #15, !dbg !3755
  %10 = load i32, i32* %call8, align 4, !dbg !3755, !tbaa !2980, !ctir !5
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0)) #12, !dbg !3757
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call9), !dbg !3758
  store i32 4, i32* %rm_status, align 4, !dbg !3759, !tbaa !3652
  br label %if.end10, !dbg !3760

if.end10:                                         ; preds = %if.then7, %if.then4
  br label %while.end, !dbg !3761

if.end11:                                         ; preds = %while.body
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3762, metadata !DIExpression()), !dbg !3763
  %11 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3764, !tbaa !2993
  %12 = load %struct._ftsent*, %struct._ftsent** %ent, align 8, !dbg !3765, !tbaa !2993
  %13 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3766, !tbaa !2993
  %call12 = call i32 @rm_fts(%struct.FTS* %11, %struct._ftsent* %12, %struct.rm_options* %13), !dbg !3767
  store i32 %call12, i32* %s, align 4, !dbg !3763, !tbaa !3652
  %14 = load i32, i32* %s, align 4, !dbg !3768, !tbaa !3652
  %cmp13 = icmp eq i32 %14, 2, !dbg !3768
  br i1 %cmp13, label %cond.true, label %lor.lhs.false, !dbg !3768

lor.lhs.false:                                    ; preds = %if.end11
  %15 = load i32, i32* %s, align 4, !dbg !3768, !tbaa !3652
  %cmp14 = icmp eq i32 %15, 3, !dbg !3768
  br i1 %cmp14, label %cond.true, label %lor.lhs.false15, !dbg !3768

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %16 = load i32, i32* %s, align 4, !dbg !3768, !tbaa !3652
  %cmp16 = icmp eq i32 %16, 4, !dbg !3768
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !3768

cond.true:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %if.end11
  br label %cond.end, !dbg !3768

cond.false:                                       ; preds = %lor.lhs.false15
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.63, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.64, i64 0, i64 0), i32 609, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.rm, i64 0, i64 0)) #13, !dbg !3768
  unreachable, !dbg !3768

17:                                               ; No predecessors!
  br label %cond.end, !dbg !3768

cond.end:                                         ; preds = %17, %cond.true
  br label %do.body, !dbg !3769

do.body:                                          ; preds = %cond.end
  %18 = load i32, i32* %s, align 4, !dbg !3770, !tbaa !3652
  %cmp17 = icmp eq i32 %18, 4, !dbg !3770
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !3770

lor.lhs.false18:                                  ; preds = %do.body
  %19 = load i32, i32* %s, align 4, !dbg !3770, !tbaa !3652
  %cmp19 = icmp eq i32 %19, 3, !dbg !3770
  br i1 %cmp19, label %land.lhs.true, label %if.end22, !dbg !3770

land.lhs.true:                                    ; preds = %lor.lhs.false18
  %20 = load i32, i32* %rm_status, align 4, !dbg !3770, !tbaa !3652
  %cmp20 = icmp eq i32 %20, 2, !dbg !3770
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !3773

if.then21:                                        ; preds = %land.lhs.true, %do.body
  %21 = load i32, i32* %s, align 4, !dbg !3770, !tbaa !3652
  store i32 %21, i32* %rm_status, align 4, !dbg !3770, !tbaa !3652
  br label %if.end22, !dbg !3770

if.end22:                                         ; preds = %if.then21, %land.lhs.true, %lor.lhs.false18
  br label %do.end, !dbg !3773

do.end:                                           ; preds = %if.end22
  br label %while.body, !dbg !3739, !llvm.loop !3774

while.end:                                        ; preds = %if.end10
  %22 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !3776, !tbaa !2993
  %call23 = call i32 @rpl_fts_close(%struct.FTS* %22), !dbg !3778
  %cmp24 = icmp ne i32 %call23, 0, !dbg !3779
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !3780

if.then25:                                        ; preds = %while.end
  %call26 = call i32* @__errno_location() #15, !dbg !3781
  %23 = load i32, i32* %call26, align 4, !dbg !3781, !tbaa !2980, !ctir !5
  %call27 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3.65, i64 0, i64 0)) #12, !dbg !3783
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %23, i8* %call27), !dbg !3784
  store i32 4, i32* %rm_status, align 4, !dbg !3785, !tbaa !3652
  br label %if.end28, !dbg !3786

if.end28:                                         ; preds = %if.then25, %while.end
  br label %if.end29, !dbg !3787

if.end29:                                         ; preds = %if.end28, %entry
  %24 = load i32, i32* %rm_status, align 4, !dbg !3788, !tbaa !3652
  ret i32 %24, !dbg !3789
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rm_fts(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x) #4 !dbg !3790 !ctir !1447 {
entry:
  %retval = alloca i32, align 4, !ctir !103
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !1352
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !1445
  %x.addr = alloca %struct.rm_options*, align 8, !ctir !1333
  %err = alloca i32, align 4, !ctir !5
  %failed = alloca i8, align 1, !ctir !117
  %parent = alloca i8*, align 8, !ctir !7
  %statbuf = alloca %struct.stat, align 8, !ctir !1382
  %is_empty_directory = alloca i32, align 4, !ctir !1449
  %s = alloca i32, align 4, !ctir !103
  %is_dir = alloca i8, align 1, !ctir !117
  %s126 = alloca i32, align 4, !ctir !103
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !3791, metadata !DIExpression()), !dbg !3792
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !3793, metadata !DIExpression()), !dbg !3794
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !3795, metadata !DIExpression()), !dbg !3796
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3797, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !3798, !ctir !1446
  %1 = load i16, i16* %fts_info, align 8, !dbg !3798, !tbaa !3799, !ctir !34
  %conv = zext i16 %1 to i32, !dbg !3797
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 8, label %sw.bb94
    i32 10, label %sw.bb94
    i32 12, label %sw.bb94
    i32 13, label %sw.bb94
    i32 6, label %sw.bb94
    i32 4, label %sw.bb94
    i32 11, label %sw.bb94
    i32 3, label %sw.bb94
    i32 2, label %sw.bb135
    i32 7, label %sw.bb141
  ], !dbg !3801

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3802, !tbaa !2993
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %2, i32 0, i32 3, !dbg !3805, !ctir !1334
  %3 = load i8, i8* %recursive, align 1, !dbg !3805, !tbaa !3677
  %tobool = trunc i8 %3 to i1, !dbg !3805, !ctir !117
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !3806

land.lhs.true:                                    ; preds = %sw.bb
  %4 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3807, !tbaa !2993
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %4, i32 0, i32 4, !dbg !3808, !ctir !1334
  %5 = load i8, i8* %remove_empty_directories, align 2, !dbg !3808, !tbaa !3673
  %tobool1 = trunc i8 %5 to i1, !dbg !3808, !ctir !117
  br i1 %tobool1, label %land.lhs.true3, label %if.then, !dbg !3809

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3810, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 6, !dbg !3811, !ctir !1353
  %7 = load i32, i32* %fts_cwd_fd, align 4, !dbg !3811, !tbaa !3812, !ctir !5
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3815, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !3816, !ctir !1446
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !3816, !tbaa !2993, !ctir !7
  %call = call zeroext i1 @is_empty_dir(i32 %7, i8* %9), !dbg !3817
  br i1 %call, label %if.end, label %if.then, !dbg !3818

if.then:                                          ; preds = %land.lhs.true3, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3819, metadata !DIExpression()), !dbg !3821
  %10 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3822, !tbaa !2993
  %remove_empty_directories5 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %10, i32 0, i32 4, !dbg !3823, !ctir !1334
  %11 = load i8, i8* %remove_empty_directories5, align 2, !dbg !3823, !tbaa !3673
  %tobool6 = trunc i8 %11 to i1, !dbg !3823, !ctir !117
  %12 = zext i1 %tobool6 to i64, !dbg !3822
  %cond = select i1 %tobool6, i32 39, i32 21, !dbg !3822
  store i32 %cond, i32* %err, align 4, !dbg !3821, !tbaa !2980
  %13 = load i32, i32* %err, align 4, !dbg !3824, !tbaa !2980
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !3825
  %14 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3826, !tbaa !2993
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !3826, !ctir !1446
  %15 = load i8*, i8** %fts_path, align 8, !dbg !3826, !tbaa !2993, !ctir !7
  %call9 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !3826
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %13, i8* %call8, i8* %call9), !dbg !3827
  %16 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3828, !tbaa !2993
  call void @mark_ancestor_dirs(%struct._ftsent* %16), !dbg !3829
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3830, !tbaa !2993
  %18 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3831, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %17, %struct._ftsent* %18), !dbg !3832
  store i32 4, i32* %retval, align 4, !dbg !3833
  br label %return, !dbg !3833

if.end:                                           ; preds = %land.lhs.true3, %sw.bb
  %19 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3834, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !3836, !ctir !1446
  %20 = load i64, i64* %fts_level, align 8, !dbg !3836, !tbaa !3837, !ctir !539
  %cmp = icmp eq i64 %20, 0, !dbg !3838
  br i1 %cmp, label %if.then11, label %if.end80, !dbg !3839

if.then11:                                        ; preds = %if.end
  %21 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3840, !tbaa !2993
  %fts_accpath12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !3843, !ctir !1446
  %22 = load i8*, i8** %fts_accpath12, align 8, !dbg !3843, !tbaa !2993, !ctir !7
  %call13 = call i8* @last_component(i8* %22) #14, !dbg !3844
  %call14 = call zeroext i1 @dot_or_dotdot(i8* %call13), !dbg !3845
  br i1 %call14, label %if.then15, label %if.end21, !dbg !3846

if.then15:                                        ; preds = %if.then11
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.67, i64 0, i64 0)) #12, !dbg !3847
  %call17 = call i8* @quotearg_n_style(i32 0, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6.68, i64 0, i64 0)), !dbg !3849
  %call18 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0)), !dbg !3850
  %23 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3851, !tbaa !2993
  %fts_path19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 7, !dbg !3851, !ctir !1446
  %24 = load i8*, i8** %fts_path19, align 8, !dbg !3851, !tbaa !2993, !ctir !7
  %call20 = call i8* @quotearg_n_style(i32 2, i32 4, i8* %24), !dbg !3851
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call16, i8* %call17, i8* %call18, i8* %call20), !dbg !3852
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3853, !tbaa !2993
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3854, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %25, %struct._ftsent* %26), !dbg !3855
  store i32 4, i32* %retval, align 4, !dbg !3856
  br label %return, !dbg !3856

if.end21:                                         ; preds = %if.then11
  %27 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3857, !tbaa !2993
  %root_dev_ino = getelementptr inbounds %struct.rm_options, %struct.rm_options* %27, i32 0, i32 5, !dbg !3857, !ctir !1334
  %28 = load %struct.timespec*, %struct.timespec** %root_dev_ino, align 8, !dbg !3857, !tbaa !3702, !ctir !1343
  %tobool22 = icmp ne %struct.timespec* %28, null, !dbg !3857
  br i1 %tobool22, label %land.lhs.true23, label %if.end50, !dbg !3857

land.lhs.true23:                                  ; preds = %if.end21
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3857, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !3857, !ctir !1446
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !3857
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !3857, !ctir !1382
  %30 = load i64, i64* %st_ino, align 8, !dbg !3857, !tbaa !3859, !ctir !225
  %31 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3857, !tbaa !2993
  %root_dev_ino24 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %31, i32 0, i32 5, !dbg !3857, !ctir !1334
  %32 = load %struct.timespec*, %struct.timespec** %root_dev_ino24, align 8, !dbg !3857, !tbaa !3702, !ctir !1343
  %st_ino25 = getelementptr inbounds %struct.timespec, %struct.timespec* %32, i32 0, i32 0, !dbg !3857, !ctir !1344
  %33 = load i64, i64* %st_ino25, align 8, !dbg !3857, !tbaa !3860, !ctir !224
  %cmp26 = icmp eq i64 %30, %33, !dbg !3857
  br i1 %cmp26, label %land.lhs.true28, label %if.end50, !dbg !3857

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %34 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3857, !tbaa !2993
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !3857, !ctir !1446
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !3857
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 0, !dbg !3857, !ctir !1382
  %35 = load i64, i64* %st_dev, align 8, !dbg !3857, !tbaa !3862, !ctir !228
  %36 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3857, !tbaa !2993
  %root_dev_ino31 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %36, i32 0, i32 5, !dbg !3857, !ctir !1334
  %37 = load %struct.timespec*, %struct.timespec** %root_dev_ino31, align 8, !dbg !3857, !tbaa !3702, !ctir !1343
  %st_dev32 = getelementptr inbounds %struct.timespec, %struct.timespec* %37, i32 0, i32 1, !dbg !3857, !ctir !1344
  %38 = load i64, i64* %st_dev32, align 8, !dbg !3857, !tbaa !3863, !ctir !227
  %cmp33 = icmp eq i64 %35, %38, !dbg !3857
  br i1 %cmp33, label %if.then35, label %if.end50, !dbg !3864

if.then35:                                        ; preds = %land.lhs.true28
  br label %do.body, !dbg !3865

do.body:                                          ; preds = %if.then35
  %39 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3867, !tbaa !2993
  %fts_path36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %39, i32 0, i32 7, !dbg !3867, !ctir !1446
  %40 = load i8*, i8** %fts_path36, align 8, !dbg !3867, !tbaa !2993, !ctir !7
  %call37 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)) #14, !dbg !3867
  %cmp38 = icmp eq i32 %call37, 0, !dbg !3867
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !3870

if.then40:                                        ; preds = %do.body
  %call41 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.71, i64 0, i64 0)) #12, !dbg !3867
  %41 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3867, !tbaa !2993
  %fts_path42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %41, i32 0, i32 7, !dbg !3867, !ctir !1446
  %42 = load i8*, i8** %fts_path42, align 8, !dbg !3867, !tbaa !2993, !ctir !7
  %call43 = call i8* @quotearg_style(i32 4, i8* %42), !dbg !3867
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call41, i8* %call43), !dbg !3867
  br label %if.end48, !dbg !3867

if.else:                                          ; preds = %do.body
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10.72, i64 0, i64 0)) #12, !dbg !3867
  %43 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3867, !tbaa !2993
  %fts_path45 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %43, i32 0, i32 7, !dbg !3867, !ctir !1446
  %44 = load i8*, i8** %fts_path45, align 8, !dbg !3867, !tbaa !2993, !ctir !7
  %call46 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %44), !dbg !3867
  %call47 = call i8* @quotearg_n_style(i32 1, i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8.70, i64 0, i64 0)), !dbg !3867
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call44, i8* %call46, i8* %call47), !dbg !3867
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then40
  %call49 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11.73, i64 0, i64 0)) #12, !dbg !3870
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call49), !dbg !3870
  br label %do.end, !dbg !3870

do.end:                                           ; preds = %if.end48
  %45 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3871, !tbaa !2993
  %46 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3872, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %45, %struct._ftsent* %46), !dbg !3873
  store i32 4, i32* %retval, align 4, !dbg !3874
  br label %return, !dbg !3874

if.end50:                                         ; preds = %land.lhs.true28, %land.lhs.true23, %if.end21
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3875, !tbaa !2993
  %preserve_all_root = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 6, !dbg !3877, !ctir !1334
  %48 = load i8, i8* %preserve_all_root, align 8, !dbg !3877, !tbaa !3712
  %tobool51 = trunc i8 %48 to i1, !dbg !3877, !ctir !117
  br i1 %tobool51, label %if.then52, label %if.end79, !dbg !3878

if.then52:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i8* %failed, metadata !3879, metadata !DIExpression()), !dbg !3881
  store i8 0, i8* %failed, align 1, !dbg !3881, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8** %parent, metadata !3882, metadata !DIExpression()), !dbg !3883
  %49 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3884, !tbaa !2993
  %fts_accpath53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %49, i32 0, i32 6, !dbg !3885, !ctir !1446
  %50 = load i8*, i8** %fts_accpath53, align 8, !dbg !3885, !tbaa !2993, !ctir !7
  %call54 = call i8* @file_name_concat(i8* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7.69, i64 0, i64 0), i8** null), !dbg !3886
  store i8* %call54, i8** %parent, align 8, !dbg !3883, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !3887, metadata !DIExpression()), !dbg !3888
  %51 = load i8*, i8** %parent, align 8, !dbg !3889, !tbaa !2993
  %tobool55 = icmp ne i8* %51, null, !dbg !3889
  br i1 %tobool55, label %lor.lhs.false, label %if.then58, !dbg !3891

lor.lhs.false:                                    ; preds = %if.then52
  %52 = load i8*, i8** %parent, align 8, !dbg !3892, !tbaa !2993
  %call56 = call i32 @lstat(i8* %52, %struct.stat* %statbuf) #12, !dbg !3893
  %tobool57 = icmp ne i32 %call56, 0, !dbg !3893
  br i1 %tobool57, label %if.then58, label %if.end63, !dbg !3894

if.then58:                                        ; preds = %lor.lhs.false, %if.then52
  %call59 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12.74, i64 0, i64 0)) #12, !dbg !3895
  %53 = load i8*, i8** %parent, align 8, !dbg !3897, !tbaa !2993
  %call60 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %53), !dbg !3897
  %54 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3898, !tbaa !2993
  %fts_accpath61 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %54, i32 0, i32 6, !dbg !3898, !ctir !1446
  %55 = load i8*, i8** %fts_accpath61, align 8, !dbg !3898, !tbaa !2993, !ctir !7
  %call62 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %55), !dbg !3898
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call59, i8* %call60, i8* %call62), !dbg !3899
  store i8 1, i8* %failed, align 1, !dbg !3900, !tbaa !3104
  br label %if.end63, !dbg !3901

if.end63:                                         ; preds = %if.then58, %lor.lhs.false
  %56 = load i8*, i8** %parent, align 8, !dbg !3902, !tbaa !2993
  call void @free(i8* %56) #12, !dbg !3903
  %57 = load i8, i8* %failed, align 1, !dbg !3904, !tbaa !3104
  %tobool64 = trunc i8 %57 to i1, !dbg !3904
  br i1 %tobool64, label %if.then70, label %lor.lhs.false66, !dbg !3906

lor.lhs.false66:                                  ; preds = %if.end63
  %58 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3907, !tbaa !2993
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 3, !dbg !3908, !ctir !1353
  %59 = load i64, i64* %fts_dev, align 8, !dbg !3908, !tbaa !3909, !ctir !227
  %st_dev67 = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !3910, !ctir !1382
  %60 = load i64, i64* %st_dev67, align 8, !dbg !3910, !tbaa !3862, !ctir !228
  %cmp68 = icmp ne i64 %59, %60, !dbg !3911
  br i1 %cmp68, label %if.then70, label %if.end78, !dbg !3912

if.then70:                                        ; preds = %lor.lhs.false66, %if.end63
  %61 = load i8, i8* %failed, align 1, !dbg !3913, !tbaa !3104
  %tobool71 = trunc i8 %61 to i1, !dbg !3913
  br i1 %tobool71, label %if.end77, label %if.then72, !dbg !3916

if.then72:                                        ; preds = %if.then70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #12, !dbg !3917
  %62 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3919, !tbaa !2993
  %fts_path74 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 7, !dbg !3919, !ctir !1446
  %63 = load i8*, i8** %fts_path74, align 8, !dbg !3919, !tbaa !2993, !ctir !7
  %call75 = call i8* @quotearg_style(i32 4, i8* %63), !dbg !3919
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call73, i8* %call75), !dbg !3920
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14.76, i64 0, i64 0)) #12, !dbg !3921
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call76), !dbg !3922
  br label %if.end77, !dbg !3923

if.end77:                                         ; preds = %if.then72, %if.then70
  %64 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3924, !tbaa !2993
  %65 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3925, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %64, %struct._ftsent* %65), !dbg !3926
  store i32 4, i32* %retval, align 4, !dbg !3927
  br label %return, !dbg !3927

if.end78:                                         ; preds = %lor.lhs.false66
  br label %if.end79, !dbg !3928

if.end79:                                         ; preds = %if.end78, %if.end50
  br label %if.end80, !dbg !3929

if.end80:                                         ; preds = %if.end79, %if.end
  call void @llvm.dbg.declare(metadata i32* %is_empty_directory, metadata !3930, metadata !DIExpression()), !dbg !3932
  call void @llvm.dbg.declare(metadata i32* %s, metadata !3933, metadata !DIExpression()), !dbg !3934
  %66 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3935, !tbaa !2993
  %67 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3936, !tbaa !2993
  %68 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3937, !tbaa !2993
  %call81 = call i32 @prompt(%struct.FTS* %66, %struct._ftsent* %67, i1 zeroext true, %struct.rm_options* %68, i32 2, i32* %is_empty_directory), !dbg !3938
  store i32 %call81, i32* %s, align 4, !dbg !3934, !tbaa !3652
  %69 = load i32, i32* %s, align 4, !dbg !3939, !tbaa !3652
  %cmp82 = icmp eq i32 %69, 2, !dbg !3941
  br i1 %cmp82, label %land.lhs.true84, label %if.end89, !dbg !3942

land.lhs.true84:                                  ; preds = %if.end80
  %70 = load i32, i32* %is_empty_directory, align 4, !dbg !3943, !tbaa !3652
  %cmp85 = icmp eq i32 %70, 4, !dbg !3944
  br i1 %cmp85, label %if.then87, label %if.end89, !dbg !3945

if.then87:                                        ; preds = %land.lhs.true84
  %71 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3946, !tbaa !2993
  %72 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3948, !tbaa !2993
  %73 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3949, !tbaa !2993
  %call88 = call i32 @excise(%struct.FTS* %71, %struct._ftsent* %72, %struct.rm_options* %73, i1 zeroext true), !dbg !3950
  store i32 %call88, i32* %s, align 4, !dbg !3951, !tbaa !3652
  %74 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3952, !tbaa !2993
  %75 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3953, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %74, %struct._ftsent* %75), !dbg !3954
  br label %if.end89, !dbg !3955

if.end89:                                         ; preds = %if.then87, %land.lhs.true84, %if.end80
  %76 = load i32, i32* %s, align 4, !dbg !3956, !tbaa !3652
  %cmp90 = icmp ne i32 %76, 2, !dbg !3958
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !3959

if.then92:                                        ; preds = %if.end89
  %77 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3960, !tbaa !2993
  call void @mark_ancestor_dirs(%struct._ftsent* %77), !dbg !3962
  %78 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3963, !tbaa !2993
  %79 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3964, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %78, %struct._ftsent* %79), !dbg !3965
  br label %if.end93, !dbg !3966

if.end93:                                         ; preds = %if.then92, %if.end89
  %80 = load i32, i32* %s, align 4, !dbg !3967, !tbaa !3652
  store i32 %80, i32* %retval, align 4, !dbg !3968
  br label %return, !dbg !3968

sw.bb94:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %81 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3969, !tbaa !2993
  %fts_info95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 15, !dbg !3972, !ctir !1446
  %82 = load i16, i16* %fts_info95, align 8, !dbg !3972, !tbaa !3799, !ctir !34
  %conv96 = zext i16 %82 to i32, !dbg !3969
  %cmp97 = icmp eq i32 %conv96, 6, !dbg !3973
  br i1 %cmp97, label %land.lhs.true99, label %if.end117, !dbg !3974

land.lhs.true99:                                  ; preds = %sw.bb94
  %83 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !3975, !tbaa !2993
  %one_file_system = getelementptr inbounds %struct.rm_options, %struct.rm_options* %83, i32 0, i32 2, !dbg !3976, !ctir !1334
  %84 = load i8, i8* %one_file_system, align 8, !dbg !3976, !tbaa !3681
  %tobool100 = trunc i8 %84 to i1, !dbg !3976, !ctir !117
  br i1 %tobool100, label %land.lhs.true102, label %if.end117, !dbg !3977

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %85 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3978, !tbaa !2993
  %fts_level103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 12, !dbg !3979, !ctir !1446
  %86 = load i64, i64* %fts_level103, align 8, !dbg !3979, !tbaa !3837, !ctir !539
  %cmp104 = icmp slt i64 0, %86, !dbg !3980
  br i1 %cmp104, label %land.lhs.true106, label %if.end117, !dbg !3981

land.lhs.true106:                                 ; preds = %land.lhs.true102
  %87 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3982, !tbaa !2993
  %fts_statp107 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 18, !dbg !3983, !ctir !1446
  %arraydecay108 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp107, i64 0, i64 0, !dbg !3984
  %st_dev109 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay108, i32 0, i32 0, !dbg !3984, !ctir !1382
  %88 = load i64, i64* %st_dev109, align 8, !dbg !3984, !tbaa !3862, !ctir !228
  %89 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !3985, !tbaa !2993
  %fts_dev110 = getelementptr inbounds %struct.FTS, %struct.FTS* %89, i32 0, i32 3, !dbg !3986, !ctir !1353
  %90 = load i64, i64* %fts_dev110, align 8, !dbg !3986, !tbaa !3909, !ctir !227
  %cmp111 = icmp ne i64 %88, %90, !dbg !3987
  br i1 %cmp111, label %if.then113, label %if.end117, !dbg !3988

if.then113:                                       ; preds = %land.lhs.true106
  %91 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3989, !tbaa !2993
  call void @mark_ancestor_dirs(%struct._ftsent* %91), !dbg !3991
  %call114 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13.75, i64 0, i64 0)) #12, !dbg !3992
  %92 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3993, !tbaa !2993
  %fts_path115 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %92, i32 0, i32 7, !dbg !3993, !ctir !1446
  %93 = load i8*, i8** %fts_path115, align 8, !dbg !3993, !tbaa !2993, !ctir !7
  %call116 = call i8* @quotearg_style(i32 4, i8* %93), !dbg !3993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call114, i8* %call116), !dbg !3994
  store i32 4, i32* %retval, align 4, !dbg !3995
  br label %return, !dbg !3995

if.end117:                                        ; preds = %land.lhs.true106, %land.lhs.true102, %land.lhs.true99, %sw.bb94
  call void @llvm.dbg.declare(metadata i8* %is_dir, metadata !3996, metadata !DIExpression()), !dbg !3997
  %94 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !3998, !tbaa !2993
  %fts_info118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %94, i32 0, i32 15, !dbg !3999, !ctir !1446
  %95 = load i16, i16* %fts_info118, align 8, !dbg !3999, !tbaa !3799, !ctir !34
  %conv119 = zext i16 %95 to i32, !dbg !3998
  %cmp120 = icmp eq i32 %conv119, 6, !dbg !4000
  br i1 %cmp120, label %lor.end, label %lor.rhs, !dbg !4001

lor.rhs:                                          ; preds = %if.end117
  %96 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4002, !tbaa !2993
  %fts_info122 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 15, !dbg !4003, !ctir !1446
  %97 = load i16, i16* %fts_info122, align 8, !dbg !4003, !tbaa !3799, !ctir !34
  %conv123 = zext i16 %97 to i32, !dbg !4002
  %cmp124 = icmp eq i32 %conv123, 4, !dbg !4004
  br label %lor.end, !dbg !4001

lor.end:                                          ; preds = %lor.rhs, %if.end117
  %98 = phi i1 [ true, %if.end117 ], [ %cmp124, %lor.rhs ]
  %frombool = zext i1 %98 to i8, !dbg !3997
  store i8 %frombool, i8* %is_dir, align 1, !dbg !3997, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %s126, metadata !4005, metadata !DIExpression()), !dbg !4006
  %99 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4007, !tbaa !2993
  %100 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4008, !tbaa !2993
  %101 = load i8, i8* %is_dir, align 1, !dbg !4009, !tbaa !3104
  %tobool127 = trunc i8 %101 to i1, !dbg !4009
  %102 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4010, !tbaa !2993
  %call128 = call i32 @prompt(%struct.FTS* %99, %struct._ftsent* %100, i1 zeroext %tobool127, %struct.rm_options* %102, i32 3, i32* null), !dbg !4011
  store i32 %call128, i32* %s126, align 4, !dbg !4006, !tbaa !3652
  %103 = load i32, i32* %s126, align 4, !dbg !4012, !tbaa !3652
  %cmp129 = icmp ne i32 %103, 2, !dbg !4014
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !4015

if.then131:                                       ; preds = %lor.end
  %104 = load i32, i32* %s126, align 4, !dbg !4016, !tbaa !3652
  store i32 %104, i32* %retval, align 4, !dbg !4017
  br label %return, !dbg !4017

if.end132:                                        ; preds = %lor.end
  %105 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4018, !tbaa !2993
  %106 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4019, !tbaa !2993
  %107 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4020, !tbaa !2993
  %108 = load i8, i8* %is_dir, align 1, !dbg !4021, !tbaa !3104
  %tobool133 = trunc i8 %108 to i1, !dbg !4021
  %call134 = call i32 @excise(%struct.FTS* %105, %struct._ftsent* %106, %struct.rm_options* %107, i1 zeroext %tobool133), !dbg !4022
  store i32 %call134, i32* %retval, align 4, !dbg !4023
  br label %return, !dbg !4023

sw.bb135:                                         ; preds = %entry
  br label %do.body136, !dbg !4024

do.body136:                                       ; preds = %sw.bb135
  %call137 = call i8* @gettext(i8* getelementptr inbounds ([186 x i8], [186 x i8]* @.str.15.77, i64 0, i64 0)) #12, !dbg !4025
  %109 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4025, !tbaa !2993
  %fts_path138 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %109, i32 0, i32 7, !dbg !4025, !ctir !1446
  %110 = load i8*, i8** %fts_path138, align 8, !dbg !4025, !tbaa !2993, !ctir !7
  %call139 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %110), !dbg !4025
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call137, i8* %call139), !dbg !4025
  br label %do.end140, !dbg !4025

do.end140:                                        ; preds = %do.body136
  %111 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4027, !tbaa !2993
  %112 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4028, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %111, %struct._ftsent* %112), !dbg !4029
  store i32 4, i32* %retval, align 4, !dbg !4030
  br label %return, !dbg !4030

sw.bb141:                                         ; preds = %entry
  %113 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4031, !tbaa !2993
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %113, i32 0, i32 8, !dbg !4032, !ctir !1446
  %114 = load i32, i32* %fts_errno, align 8, !dbg !4032, !tbaa !2980, !ctir !5
  %call142 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16.78, i64 0, i64 0)) #12, !dbg !4033
  %115 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4034, !tbaa !2993
  %fts_path143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %115, i32 0, i32 7, !dbg !4034, !ctir !1446
  %116 = load i8*, i8** %fts_path143, align 8, !dbg !4034, !tbaa !2993, !ctir !7
  %call144 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %116), !dbg !4034
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %114, i8* %call142, i8* %call144), !dbg !4035
  %117 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4036, !tbaa !2993
  %118 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4037, !tbaa !2993
  call void @fts_skip_tree(%struct.FTS* %117, %struct._ftsent* %118), !dbg !4038
  store i32 4, i32* %retval, align 4, !dbg !4039
  br label %return, !dbg !4039

sw.default:                                       ; preds = %entry
  %call145 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17.79, i64 0, i64 0)) #12, !dbg !4040
  %119 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4041, !tbaa !2993
  %fts_info146 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 15, !dbg !4042, !ctir !1446
  %120 = load i16, i16* %fts_info146, align 8, !dbg !4042, !tbaa !3799, !ctir !34
  %conv147 = zext i16 %120 to i32, !dbg !4041
  %121 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4043, !tbaa !2993
  %fts_path148 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %121, i32 0, i32 7, !dbg !4043, !ctir !1446
  %122 = load i8*, i8** %fts_path148, align 8, !dbg !4043, !tbaa !2993, !ctir !7
  %call149 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %122), !dbg !4043
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call145, i32 %conv147, i8* %call149, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18.80, i64 0, i64 0)), !dbg !4044
  call void @abort() #13, !dbg !4045
  unreachable, !dbg !4045

return:                                           ; preds = %sw.bb141, %do.end140, %if.end132, %if.then131, %if.then113, %if.end93, %if.end77, %do.end, %if.then15, %if.then
  %123 = load i32, i32* %retval, align 4, !dbg !4046
  ret i32 %123, !dbg !4046
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_empty_dir(i32 %fd_cwd, i8* %dir) #4 !dbg !4047 !ctir !1450 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %fd_cwd.addr = alloca i32, align 4, !ctir !5
  %dir.addr = alloca i8*, align 8, !ctir !112
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !580
  %dp = alloca %struct.dirent*, align 8, !ctir !1452
  %saved_errno = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !4048, metadata !DIExpression()), !dbg !4049
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !4050, metadata !DIExpression()), !dbg !4051
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !4052, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !4054, metadata !DIExpression()), !dbg !4055
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !4056, metadata !DIExpression()), !dbg !4057
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !4058, metadata !DIExpression()), !dbg !4059
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4060, !tbaa !2980
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !4061, !tbaa !2993
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %0, i8* %1, i32 198912), !dbg !4062
  store i32 %call, i32* %fd, align 4, !dbg !4059, !tbaa !2980
  %2 = load i32, i32* %fd, align 4, !dbg !4063, !tbaa !2980
  %cmp = icmp slt i32 %2, 0, !dbg !4065
  br i1 %cmp, label %if.then, label %if.end, !dbg !4066

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4067
  br label %return, !dbg !4067

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %fd, align 4, !dbg !4068, !tbaa !2980
  %call1 = call %struct.__dirstream* @fdopendir(i32 %3), !dbg !4069
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !4070, !tbaa !2993
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4071, !tbaa !2993
  %cmp2 = icmp eq %struct.__dirstream* %4, null, !dbg !4073
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !4074

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %fd, align 4, !dbg !4075, !tbaa !2980
  %call4 = call i32 @close(i32 %5), !dbg !4077
  store i1 false, i1* %retval, align 1, !dbg !4078
  br label %return, !dbg !4078

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !4079
  store i32 0, i32* %call6, align 4, !dbg !4080, !tbaa !2980, !ctir !5
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4081, !tbaa !2993
  %call7 = call %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %6), !dbg !4082
  store %struct.dirent* %call7, %struct.dirent** %dp, align 8, !dbg !4083, !tbaa !2993
  %call8 = call i32* @__errno_location() #15, !dbg !4084
  %7 = load i32, i32* %call8, align 4, !dbg !4084, !tbaa !2980, !ctir !5
  store i32 %7, i32* %saved_errno, align 4, !dbg !4085, !tbaa !2980
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !4086, !tbaa !2993
  %call9 = call i32 @closedir(%struct.__dirstream* %8), !dbg !4087
  %9 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4088, !tbaa !2993
  %cmp10 = icmp ne %struct.dirent* %9, null, !dbg !4090
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !4091

if.then11:                                        ; preds = %if.end5
  store i1 false, i1* %retval, align 1, !dbg !4092
  br label %return, !dbg !4092

if.end12:                                         ; preds = %if.end5
  %10 = load i32, i32* %saved_errno, align 4, !dbg !4093, !tbaa !2980
  %cmp13 = icmp eq i32 %10, 0, !dbg !4094
  %11 = zext i1 %cmp13 to i64, !dbg !4093
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !4093
  %tobool = icmp ne i32 %cond, 0, !dbg !4093
  store i1 %tobool, i1* %retval, align 1, !dbg !4095
  br label %return, !dbg !4095

return:                                           ; preds = %if.end12, %if.then11, %if.then3, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !4096
  ret i1 %12, !dbg !4096
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mark_ancestor_dirs(%struct._ftsent* %ent) #4 !dbg !4097 !ctir !1463 {
entry:
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !1445
  %p = alloca %struct._ftsent*, align 8, !ctir !1445
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4098, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !4100, metadata !DIExpression()), !dbg !4101
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4102, !tbaa !2993
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 1, !dbg !4104, !ctir !1446
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !4104, !tbaa !2993, !ctir !1358
  store %struct._ftsent* %1, %struct._ftsent** %p, align 8, !dbg !4105, !tbaa !2993
  br label %for.cond, !dbg !4106

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4107, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 12, !dbg !4109, !ctir !1446
  %3 = load i64, i64* %fts_level, align 8, !dbg !4109, !tbaa !3837, !ctir !539
  %cmp = icmp sle i64 0, %3, !dbg !4110
  br i1 %cmp, label %for.body, label %for.end, !dbg !4111

for.body:                                         ; preds = %for.cond
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4112, !tbaa !2993
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 4, !dbg !4115, !ctir !1446
  %5 = load i64, i64* %fts_number, align 8, !dbg !4115, !tbaa !3837, !ctir !32
  %tobool = icmp ne i64 %5, 0, !dbg !4112
  br i1 %tobool, label %if.then, label %if.end, !dbg !4116

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !4117

if.end:                                           ; preds = %for.body
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4118, !tbaa !2993
  %fts_number1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 4, !dbg !4119, !ctir !1446
  store i64 1, i64* %fts_number1, align 8, !dbg !4120, !tbaa !3837, !ctir !32
  br label %for.inc, !dbg !4121

for.inc:                                          ; preds = %if.end
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !4122, !tbaa !2993
  %fts_parent2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 1, !dbg !4123, !ctir !1446
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_parent2, align 8, !dbg !4123, !tbaa !2993, !ctir !1358
  store %struct._ftsent* %8, %struct._ftsent** %p, align 8, !dbg !4124, !tbaa !2993
  br label %for.cond, !dbg !4125, !llvm.loop !4126

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !4128
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_skip_tree(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !4129 !ctir !1465 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !1352
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !1445
  %__x = alloca %struct._ftsent*, align 8, !ctir !1445
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4130, metadata !DIExpression()), !dbg !4131
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4132, metadata !DIExpression()), !dbg !4133
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4134, !tbaa !2993
  %1 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4135, !tbaa !2993
  %call = call i32 @rpl_fts_set(%struct.FTS* %0, %struct._ftsent* %1, i32 4), !dbg !4136
  call void @llvm.dbg.declare(metadata %struct._ftsent** %__x, metadata !4137, metadata !DIExpression()), !dbg !4139
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4139, !tbaa !2993
  %call1 = call %struct._ftsent* @rpl_fts_read(%struct.FTS* %2), !dbg !4139
  store %struct._ftsent* %call1, %struct._ftsent** %__x, align 8, !dbg !4139, !tbaa !2993
  %3 = load %struct._ftsent*, %struct._ftsent** %__x, align 8, !dbg !4139, !tbaa !2993
  ret void, !dbg !4140
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !4141 !ctir !197 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %file_name.addr = alloca i8*, align 8, !ctir !112
  %sep = alloca i8, align 1, !ctir !8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !4142, metadata !DIExpression()), !dbg !4143
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !4144, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !4144, !ctir !112
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4144, !tbaa !3652
  %conv = sext i8 %1 to i32, !dbg !4144
  %cmp = icmp eq i32 %conv, 46, !dbg !4146
  br i1 %cmp, label %if.then, label %if.else, !dbg !4147

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !4148, metadata !DIExpression()), !dbg !4150
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !4151, !tbaa !2993
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !4152, !tbaa !2993
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !4152, !ctir !112
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !4152, !tbaa !3652
  %conv3 = sext i8 %4 to i32, !dbg !4152
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !4153
  %conv5 = zext i1 %cmp4 to i32, !dbg !4153
  %add = add nsw i32 %conv5, 1, !dbg !4154
  %idxprom = sext i32 %add to i64, !dbg !4151
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !4151, !ctir !112
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !4151, !tbaa !3652
  store i8 %5, i8* %sep, align 1, !dbg !4150, !tbaa !3652
  %6 = load i8, i8* %sep, align 1, !dbg !4155, !tbaa !3652
  %tobool = icmp ne i8 %6, 0, !dbg !4155
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4156

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !4157, !tbaa !3652
  %conv7 = sext i8 %7 to i32, !dbg !4157
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !4157
  br label %lor.end, !dbg !4156

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !4158
  br label %return, !dbg !4158

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4159
  br label %return, !dbg !4159

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !4160
  ret i1 %9, !dbg !4160
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @prompt(%struct.FTS* %fts, %struct._ftsent* %ent, i1 zeroext %is_dir, %struct.rm_options* %x, i32 %mode, i32* %is_empty_p) #4 !dbg !4161 !ctir !1467 {
entry:
  %retval = alloca i32, align 4, !ctir !103
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !1469
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !1471
  %is_dir.addr = alloca i8, align 1, !ctir !117
  %x.addr = alloca %struct.rm_options*, align 8, !ctir !1333
  %mode.addr = alloca i32, align 4, !ctir !1324
  %is_empty_p.addr = alloca i32*, align 8, !ctir !1473
  %fd_cwd = alloca i32, align 4, !ctir !5
  %full_name = alloca i8*, align 8, !ctir !112
  %filename = alloca i8*, align 8, !ctir !112
  %st = alloca %struct.stat, align 8, !ctir !1382
  %sbuf = alloca %struct.stat*, align 8, !ctir !1474
  %dirent_type = alloca i32, align 4, !ctir !5
  %write_protected = alloca i32, align 4, !ctir !5
  %is_empty = alloca i8, align 1, !ctir !117
  %wp_errno = alloca i32, align 4, !ctir !5
  %quoted_name = alloca i8*, align 8, !ctir !112
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4162, metadata !DIExpression()), !dbg !4163
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4164, metadata !DIExpression()), !dbg !4165
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !4166, metadata !DIExpression()), !dbg !4167
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4168, metadata !DIExpression()), !dbg !4169
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4170, metadata !DIExpression()), !dbg !4171
  store i32* %is_empty_p, i32** %is_empty_p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32** %is_empty_p.addr, metadata !4172, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.declare(metadata i32* %fd_cwd, metadata !4174, metadata !DIExpression()), !dbg !4175
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4176, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !4177, !ctir !1470
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !4177, !tbaa !3812, !ctir !5
  store i32 %1, i32* %fd_cwd, align 4, !dbg !4175, !tbaa !2980
  call void @llvm.dbg.declare(metadata i8** %full_name, metadata !4178, metadata !DIExpression()), !dbg !4179
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4180, !tbaa !2993
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 7, !dbg !4181, !ctir !1472
  %3 = load i8*, i8** %fts_path, align 8, !dbg !4181, !tbaa !2993, !ctir !7
  store i8* %3, i8** %full_name, align 8, !dbg !4179, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !4182, metadata !DIExpression()), !dbg !4183
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4184, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !4185, !ctir !1472
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !4185, !tbaa !2993, !ctir !7
  store i8* %5, i8** %filename, align 8, !dbg !4183, !tbaa !2993
  %6 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4186, !tbaa !2993
  %tobool = icmp ne i32* %6, null, !dbg !4186
  br i1 %tobool, label %if.then, label %if.end, !dbg !4188

if.then:                                          ; preds = %entry
  %7 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4189, !tbaa !2993
  store i32 2, i32* %7, align 4, !dbg !4190, !tbaa !3652, !ctir !1449
  br label %if.end, !dbg !4191

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4192, metadata !DIExpression()), !dbg !4193
  call void @llvm.dbg.declare(metadata %struct.stat** %sbuf, metadata !4194, metadata !DIExpression()), !dbg !4195
  store %struct.stat* %st, %struct.stat** %sbuf, align 8, !dbg !4195, !tbaa !2993
  %8 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4196, !tbaa !2993
  %call = call %struct.stat* @cache_stat_init(%struct.stat* %8), !dbg !4197
  call void @llvm.dbg.declare(metadata i32* %dirent_type, metadata !4198, metadata !DIExpression()), !dbg !4199
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !4200, !tbaa !3104
  %tobool1 = trunc i8 %9 to i1, !dbg !4200
  %10 = zext i1 %tobool1 to i64, !dbg !4200
  %cond = select i1 %tobool1, i32 4, i32 0, !dbg !4200
  store i32 %cond, i32* %dirent_type, align 4, !dbg !4199, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %write_protected, metadata !4201, metadata !DIExpression()), !dbg !4202
  store i32 0, i32* %write_protected, align 4, !dbg !4202, !tbaa !2980
  call void @llvm.dbg.declare(metadata i8* %is_empty, metadata !4203, metadata !DIExpression()), !dbg !4204
  store i8 0, i8* %is_empty, align 1, !dbg !4204, !tbaa !3104
  %11 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4205, !tbaa !2993
  %tobool2 = icmp ne i32* %11, null, !dbg !4205
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !4207

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %fd_cwd, align 4, !dbg !4208, !tbaa !2980
  %13 = load i8*, i8** %filename, align 8, !dbg !4210, !tbaa !2993
  %call4 = call zeroext i1 @is_empty_dir(i32 %12, i8* %13), !dbg !4211
  %frombool5 = zext i1 %call4 to i8, !dbg !4212
  store i8 %frombool5, i8* %is_empty, align 1, !dbg !4212, !tbaa !3104
  %14 = load i8, i8* %is_empty, align 1, !dbg !4213, !tbaa !3104
  %tobool6 = trunc i8 %14 to i1, !dbg !4213
  %15 = zext i1 %tobool6 to i64, !dbg !4213
  %cond7 = select i1 %tobool6, i32 4, i32 3, !dbg !4213
  %16 = load i32*, i32** %is_empty_p.addr, align 8, !dbg !4214, !tbaa !2993
  store i32 %cond7, i32* %16, align 4, !dbg !4215, !tbaa !3652, !ctir !1449
  br label %if.end8, !dbg !4216

if.end8:                                          ; preds = %if.then3, %if.end
  %17 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4217, !tbaa !2993
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 4, !dbg !4219, !ctir !1472
  %18 = load i64, i64* %fts_number, align 8, !dbg !4219, !tbaa !3837, !ctir !32
  %tobool9 = icmp ne i64 %18, 0, !dbg !4217
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !4220

if.then10:                                        ; preds = %if.end8
  store i32 3, i32* %retval, align 4, !dbg !4221
  br label %return, !dbg !4221

if.end11:                                         ; preds = %if.end8
  %19 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4222, !tbaa !2993
  %interactive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %19, i32 0, i32 1, !dbg !4224, !ctir !1334
  %20 = load i32, i32* %interactive, align 4, !dbg !4224, !tbaa !3685, !ctir !97
  %cmp = icmp eq i32 %20, 5, !dbg !4225
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !4226

if.then12:                                        ; preds = %if.end11
  store i32 2, i32* %retval, align 4, !dbg !4227
  br label %return, !dbg !4227

if.end13:                                         ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %wp_errno, metadata !4228, metadata !DIExpression()), !dbg !4229
  store i32 0, i32* %wp_errno, align 4, !dbg !4229, !tbaa !2980
  %21 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4230, !tbaa !2993
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %21, i32 0, i32 0, !dbg !4232, !ctir !1334
  %22 = load i8, i8* %ignore_missing_files, align 8, !dbg !4232, !tbaa !3669
  %tobool14 = trunc i8 %22 to i1, !dbg !4232, !ctir !117
  br i1 %tobool14, label %if.end23, label %land.lhs.true, !dbg !4233

land.lhs.true:                                    ; preds = %if.end13
  %23 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4234, !tbaa !2993
  %interactive15 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %23, i32 0, i32 1, !dbg !4235, !ctir !1334
  %24 = load i32, i32* %interactive15, align 4, !dbg !4235, !tbaa !3685, !ctir !97
  %cmp16 = icmp eq i32 %24, 3, !dbg !4236
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false, !dbg !4237

lor.lhs.false:                                    ; preds = %land.lhs.true
  %25 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4238, !tbaa !2993
  %stdin_tty = getelementptr inbounds %struct.rm_options, %struct.rm_options* %25, i32 0, i32 7, !dbg !4239, !ctir !1334
  %26 = load i8, i8* %stdin_tty, align 1, !dbg !4239, !tbaa !3689
  %tobool17 = trunc i8 %26 to i1, !dbg !4239, !ctir !117
  br i1 %tobool17, label %land.lhs.true18, label %if.end23, !dbg !4240

land.lhs.true18:                                  ; preds = %lor.lhs.false, %land.lhs.true
  %27 = load i32, i32* %dirent_type, align 4, !dbg !4241, !tbaa !2980
  %cmp19 = icmp ne i32 %27, 10, !dbg !4242
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !4243

if.then20:                                        ; preds = %land.lhs.true18
  %28 = load i32, i32* %fd_cwd, align 4, !dbg !4244, !tbaa !2980
  %29 = load i8*, i8** %filename, align 8, !dbg !4246, !tbaa !2993
  %30 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4247, !tbaa !2993
  %call21 = call i32 @write_protected_non_symlink(i32 %28, i8* %29, %struct.stat* %30), !dbg !4248
  store i32 %call21, i32* %write_protected, align 4, !dbg !4249, !tbaa !2980
  %call22 = call i32* @__errno_location() #15, !dbg !4250
  %31 = load i32, i32* %call22, align 4, !dbg !4250, !tbaa !2980, !ctir !5
  store i32 %31, i32* %wp_errno, align 4, !dbg !4251, !tbaa !2980
  br label %if.end23, !dbg !4252

if.end23:                                         ; preds = %if.then20, %land.lhs.true18, %lor.lhs.false, %if.end13
  %32 = load i32, i32* %write_protected, align 4, !dbg !4253, !tbaa !2980
  %tobool24 = icmp ne i32 %32, 0, !dbg !4253
  br i1 %tobool24, label %if.then28, label %lor.lhs.false25, !dbg !4255

lor.lhs.false25:                                  ; preds = %if.end23
  %33 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4256, !tbaa !2993
  %interactive26 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %33, i32 0, i32 1, !dbg !4257, !ctir !1334
  %34 = load i32, i32* %interactive26, align 4, !dbg !4257, !tbaa !3685, !ctir !97
  %cmp27 = icmp eq i32 %34, 3, !dbg !4258
  br i1 %cmp27, label %if.then28, label %if.end99, !dbg !4259

if.then28:                                        ; preds = %lor.lhs.false25, %if.end23
  %35 = load i32, i32* %write_protected, align 4, !dbg !4260, !tbaa !2980
  %cmp29 = icmp sle i32 0, %35, !dbg !4263
  br i1 %cmp29, label %land.lhs.true30, label %if.end47, !dbg !4264

land.lhs.true30:                                  ; preds = %if.then28
  %36 = load i32, i32* %dirent_type, align 4, !dbg !4265, !tbaa !2980
  %cmp31 = icmp eq i32 %36, 0, !dbg !4266
  br i1 %cmp31, label %if.then32, label %if.end47, !dbg !4267

if.then32:                                        ; preds = %land.lhs.true30
  %37 = load i32, i32* %fd_cwd, align 4, !dbg !4268, !tbaa !2980
  %38 = load i8*, i8** %filename, align 8, !dbg !4271, !tbaa !2993
  %39 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4272, !tbaa !2993
  %call33 = call i32 @cache_fstatat(i32 %37, i8* %38, %struct.stat* %39, i32 256), !dbg !4273
  %cmp34 = icmp eq i32 %call33, 0, !dbg !4274
  br i1 %cmp34, label %if.then35, label %if.else44, !dbg !4275

if.then35:                                        ; preds = %if.then32
  %40 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4276, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 3, !dbg !4276, !ctir !1382
  %41 = load i32, i32* %st_mode, align 8, !dbg !4276, !tbaa !3176, !ctir !130
  %and = and i32 %41, 61440, !dbg !4276
  %cmp36 = icmp eq i32 %and, 40960, !dbg !4276
  br i1 %cmp36, label %if.then37, label %if.else, !dbg !4279

if.then37:                                        ; preds = %if.then35
  store i32 10, i32* %dirent_type, align 4, !dbg !4280, !tbaa !2980
  br label %if.end43, !dbg !4281

if.else:                                          ; preds = %if.then35
  %42 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4282, !tbaa !2993
  %st_mode38 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 3, !dbg !4282, !ctir !1382
  %43 = load i32, i32* %st_mode38, align 8, !dbg !4282, !tbaa !3176, !ctir !130
  %and39 = and i32 %43, 61440, !dbg !4282
  %cmp40 = icmp eq i32 %and39, 16384, !dbg !4282
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !4284

if.then41:                                        ; preds = %if.else
  store i32 4, i32* %dirent_type, align 4, !dbg !4285, !tbaa !2980
  br label %if.end42, !dbg !4286

if.end42:                                         ; preds = %if.then41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then37
  br label %if.end46, !dbg !4287

if.else44:                                        ; preds = %if.then32
  store i32 -1, i32* %write_protected, align 4, !dbg !4288, !tbaa !2980
  %call45 = call i32* @__errno_location() #15, !dbg !4290
  %44 = load i32, i32* %call45, align 4, !dbg !4290, !tbaa !2980, !ctir !5
  store i32 %44, i32* %wp_errno, align 4, !dbg !4291, !tbaa !2980
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.end43
  br label %if.end47, !dbg !4292

if.end47:                                         ; preds = %if.end46, %land.lhs.true30, %if.then28
  %45 = load i32, i32* %write_protected, align 4, !dbg !4293, !tbaa !2980
  %cmp48 = icmp sle i32 0, %45, !dbg !4295
  br i1 %cmp48, label %if.then49, label %if.end62, !dbg !4296

if.then49:                                        ; preds = %if.end47
  %46 = load i32, i32* %dirent_type, align 4, !dbg !4297, !tbaa !2980
  switch i32 %46, label %sw.epilog [
    i32 10, label %sw.bb
    i32 4, label %sw.bb54
  ], !dbg !4298

sw.bb:                                            ; preds = %if.then49
  %47 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4299, !tbaa !2993
  %interactive50 = getelementptr inbounds %struct.rm_options, %struct.rm_options* %47, i32 0, i32 1, !dbg !4302, !ctir !1334
  %48 = load i32, i32* %interactive50, align 4, !dbg !4302, !tbaa !3685, !ctir !97
  %cmp51 = icmp ne i32 %48, 3, !dbg !4303
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !4304

if.then52:                                        ; preds = %sw.bb
  store i32 2, i32* %retval, align 4, !dbg !4305
  br label %return, !dbg !4305

if.end53:                                         ; preds = %sw.bb
  br label %sw.epilog, !dbg !4306

sw.bb54:                                          ; preds = %if.then49
  %49 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4307, !tbaa !2993
  %recursive = getelementptr inbounds %struct.rm_options, %struct.rm_options* %49, i32 0, i32 3, !dbg !4309, !ctir !1334
  %50 = load i8, i8* %recursive, align 1, !dbg !4309, !tbaa !3677
  %tobool55 = trunc i8 %50 to i1, !dbg !4309, !ctir !117
  br i1 %tobool55, label %if.end61, label %lor.lhs.false56, !dbg !4310

lor.lhs.false56:                                  ; preds = %sw.bb54
  %51 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4311, !tbaa !2993
  %remove_empty_directories = getelementptr inbounds %struct.rm_options, %struct.rm_options* %51, i32 0, i32 4, !dbg !4312, !ctir !1334
  %52 = load i8, i8* %remove_empty_directories, align 2, !dbg !4312, !tbaa !3673
  %tobool57 = trunc i8 %52 to i1, !dbg !4312, !ctir !117
  br i1 %tobool57, label %land.lhs.true58, label %if.then60, !dbg !4313

land.lhs.true58:                                  ; preds = %lor.lhs.false56
  %53 = load i8, i8* %is_empty, align 1, !dbg !4314, !tbaa !3104
  %tobool59 = trunc i8 %53 to i1, !dbg !4314
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !4315

if.then60:                                        ; preds = %land.lhs.true58, %lor.lhs.false56
  store i32 -1, i32* %write_protected, align 4, !dbg !4316, !tbaa !2980
  store i32 21, i32* %wp_errno, align 4, !dbg !4318, !tbaa !2980
  br label %if.end61, !dbg !4319

if.end61:                                         ; preds = %if.then60, %land.lhs.true58, %sw.bb54
  br label %sw.epilog, !dbg !4320

sw.epilog:                                        ; preds = %if.then49, %if.end61, %if.end53
  br label %if.end62, !dbg !4321

if.end62:                                         ; preds = %sw.epilog, %if.end47
  call void @llvm.dbg.declare(metadata i8** %quoted_name, metadata !4322, metadata !DIExpression()), !dbg !4323
  %54 = load i8*, i8** %full_name, align 8, !dbg !4324, !tbaa !2993
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !4324
  store i8* %call63, i8** %quoted_name, align 8, !dbg !4323, !tbaa !2993
  %55 = load i32, i32* %write_protected, align 4, !dbg !4325, !tbaa !2980
  %cmp64 = icmp slt i32 %55, 0, !dbg !4327
  br i1 %cmp64, label %if.then65, label %if.end67, !dbg !4328

if.then65:                                        ; preds = %if.end62
  %56 = load i32, i32* %wp_errno, align 4, !dbg !4329, !tbaa !2980
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !4331
  %57 = load i8*, i8** %quoted_name, align 8, !dbg !4332, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %56, i8* %call66, i8* %57), !dbg !4333
  store i32 4, i32* %retval, align 4, !dbg !4334
  br label %return, !dbg !4334

if.end67:                                         ; preds = %if.end62
  %58 = load i32, i32* %dirent_type, align 4, !dbg !4335, !tbaa !2980
  %cmp68 = icmp eq i32 %58, 4, !dbg !4337
  br i1 %cmp68, label %land.lhs.true69, label %if.else79, !dbg !4338

land.lhs.true69:                                  ; preds = %if.end67
  %59 = load i32, i32* %mode.addr, align 4, !dbg !4339, !tbaa !3652
  %cmp70 = icmp eq i32 %59, 2, !dbg !4340
  br i1 %cmp70, label %land.lhs.true71, label %if.else79, !dbg !4341

land.lhs.true71:                                  ; preds = %land.lhs.true69
  %60 = load i8, i8* %is_empty, align 1, !dbg !4342, !tbaa !3104
  %tobool72 = trunc i8 %60 to i1, !dbg !4342
  br i1 %tobool72, label %if.else79, label %if.then73, !dbg !4343

if.then73:                                        ; preds = %land.lhs.true71
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4344, !tbaa !2993
  %62 = load i32, i32* %write_protected, align 4, !dbg !4345, !tbaa !2980
  %tobool74 = icmp ne i32 %62, 0, !dbg !4345
  br i1 %tobool74, label %cond.true, label %cond.false, !dbg !4345

cond.true:                                        ; preds = %if.then73
  %call75 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.19.83, i64 0, i64 0)) #12, !dbg !4346
  br label %cond.end, !dbg !4345

cond.false:                                       ; preds = %if.then73
  %call76 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.84, i64 0, i64 0)) #12, !dbg !4347
  br label %cond.end, !dbg !4345

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond77 = phi i8* [ %call75, %cond.true ], [ %call76, %cond.false ], !dbg !4345
  %63 = load i8*, i8** @program_name, align 8, !dbg !4348, !tbaa !2993
  %64 = load i8*, i8** %quoted_name, align 8, !dbg !4349, !tbaa !2993
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %cond77, i8* %63, i8* %64), !dbg !4350
  br label %if.end95, !dbg !4350

if.else79:                                        ; preds = %land.lhs.true71, %land.lhs.true69, %if.end67
  %65 = load i32, i32* %fd_cwd, align 4, !dbg !4351, !tbaa !2980
  %66 = load i8*, i8** %filename, align 8, !dbg !4354, !tbaa !2993
  %67 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4355, !tbaa !2993
  %call80 = call i32 @cache_fstatat(i32 %65, i8* %66, %struct.stat* %67, i32 256), !dbg !4356
  %cmp81 = icmp ne i32 %call80, 0, !dbg !4357
  br i1 %cmp81, label %if.then82, label %if.end85, !dbg !4358

if.then82:                                        ; preds = %if.else79
  %call83 = call i32* @__errno_location() #15, !dbg !4359
  %68 = load i32, i32* %call83, align 4, !dbg !4359, !tbaa !2980, !ctir !5
  %call84 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !4361
  %69 = load i8*, i8** %quoted_name, align 8, !dbg !4362, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call84, i8* %69), !dbg !4363
  store i32 4, i32* %retval, align 4, !dbg !4364
  br label %return, !dbg !4364

if.end85:                                         ; preds = %if.else79
  %70 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4365, !tbaa !2993
  %71 = load i32, i32* %write_protected, align 4, !dbg !4366, !tbaa !2980
  %tobool86 = icmp ne i32 %71, 0, !dbg !4366
  br i1 %tobool86, label %cond.true87, label %cond.false89, !dbg !4366

cond.true87:                                      ; preds = %if.end85
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.21.85, i64 0, i64 0)) #12, !dbg !4367
  br label %cond.end91, !dbg !4366

cond.false89:                                     ; preds = %if.end85
  %call90 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22.86, i64 0, i64 0)) #12, !dbg !4368
  br label %cond.end91, !dbg !4366

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i8* [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !4366
  %72 = load i8*, i8** @program_name, align 8, !dbg !4369, !tbaa !2993
  %73 = load %struct.stat*, %struct.stat** %sbuf, align 8, !dbg !4370, !tbaa !2993
  %call93 = call i8* @file_type(%struct.stat* %73) #14, !dbg !4371
  %74 = load i8*, i8** %quoted_name, align 8, !dbg !4372, !tbaa !2993
  %call94 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %70, i8* %cond92, i8* %72, i8* %call93, i8* %74), !dbg !4373
  br label %if.end95

if.end95:                                         ; preds = %cond.end91, %cond.end
  %call96 = call zeroext i1 @yesno(), !dbg !4374
  br i1 %call96, label %if.end98, label %if.then97, !dbg !4376

if.then97:                                        ; preds = %if.end95
  store i32 3, i32* %retval, align 4, !dbg !4377
  br label %return, !dbg !4377

if.end98:                                         ; preds = %if.end95
  br label %if.end99, !dbg !4378

if.end99:                                         ; preds = %if.end98, %lor.lhs.false25
  store i32 2, i32* %retval, align 4, !dbg !4379
  br label %return, !dbg !4379

return:                                           ; preds = %if.end99, %if.then97, %if.then82, %if.then65, %if.then52, %if.then12, %if.then10
  %75 = load i32, i32* %retval, align 4, !dbg !4380
  ret i32 %75, !dbg !4380
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @excise(%struct.FTS* %fts, %struct._ftsent* %ent, %struct.rm_options* %x, i1 zeroext %is_dir) #4 !dbg !4381 !ctir !1519 {
entry:
  %retval = alloca i32, align 4, !ctir !103
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !1352
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !1445
  %x.addr = alloca %struct.rm_options*, align 8, !ctir !1333
  %is_dir.addr = alloca i8, align 1, !ctir !117
  %flag = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !1382
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !4382, metadata !DIExpression()), !dbg !4383
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !4384, metadata !DIExpression()), !dbg !4385
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4386, metadata !DIExpression()), !dbg !4387
  %frombool = zext i1 %is_dir to i8
  store i8 %frombool, i8* %is_dir.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %is_dir.addr, metadata !4388, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !4390, metadata !DIExpression()), !dbg !4391
  %0 = load i8, i8* %is_dir.addr, align 1, !dbg !4392, !tbaa !3104
  %tobool = trunc i8 %0 to i1, !dbg !4392
  %1 = zext i1 %tobool to i64, !dbg !4392
  %cond = select i1 %tobool, i32 512, i32 0, !dbg !4392
  store i32 %cond, i32* %flag, align 4, !dbg !4391, !tbaa !2980
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4393, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 6, !dbg !4395, !ctir !1353
  %3 = load i32, i32* %fts_cwd_fd, align 4, !dbg !4395, !tbaa !3812, !ctir !5
  %4 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4396, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 6, !dbg !4397, !ctir !1446
  %5 = load i8*, i8** %fts_accpath, align 8, !dbg !4397, !tbaa !2993, !ctir !7
  %6 = load i32, i32* %flag, align 4, !dbg !4398, !tbaa !2980
  %call = call i32 @unlinkat(i32 %3, i8* %5, i32 %6) #12, !dbg !4399
  %cmp = icmp eq i32 %call, 0, !dbg !4400
  br i1 %cmp, label %if.then, label %if.end9, !dbg !4401

if.then:                                          ; preds = %entry
  %7 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4402, !tbaa !2993
  %verbose = getelementptr inbounds %struct.rm_options, %struct.rm_options* %7, i32 0, i32 8, !dbg !4405, !ctir !1334
  %8 = load i8, i8* %verbose, align 2, !dbg !4405, !tbaa !3641
  %tobool1 = trunc i8 %8 to i1, !dbg !4405, !ctir !117
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4406

if.then2:                                         ; preds = %if.then
  %9 = load i8, i8* %is_dir.addr, align 1, !dbg !4407, !tbaa !3104
  %tobool3 = trunc i8 %9 to i1, !dbg !4407
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !4407

cond.true:                                        ; preds = %if.then2
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.23.81, i64 0, i64 0)) #12, !dbg !4409
  br label %cond.end, !dbg !4407

cond.false:                                       ; preds = %if.then2
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.24.82, i64 0, i64 0)) #12, !dbg !4410
  br label %cond.end, !dbg !4407

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond6 = phi i8* [ %call4, %cond.true ], [ %call5, %cond.false ], !dbg !4407
  %10 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4411, !tbaa !2993
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 7, !dbg !4411, !ctir !1446
  %11 = load i8*, i8** %fts_path, align 8, !dbg !4411, !tbaa !2993, !ctir !7
  %call7 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !4411
  %call8 = call i32 (i8*, ...) @printf(i8* %cond6, i8* %call7), !dbg !4412
  br label %if.end, !dbg !4413

if.end:                                           ; preds = %cond.end, %if.then
  store i32 2, i32* %retval, align 4, !dbg !4414
  br label %return, !dbg !4414

if.end9:                                          ; preds = %entry
  %call10 = call i32* @__errno_location() #15, !dbg !4415
  %12 = load i32, i32* %call10, align 4, !dbg !4415, !tbaa !2980, !ctir !5
  %cmp11 = icmp eq i32 %12, 30, !dbg !4417
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !4418

if.then12:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !4419, metadata !DIExpression()), !dbg !4421
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !4422, !tbaa !2993
  %fts_cwd_fd13 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 6, !dbg !4424, !ctir !1353
  %14 = load i32, i32* %fts_cwd_fd13, align 4, !dbg !4424, !tbaa !3812, !ctir !5
  %15 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4425, !tbaa !2993
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 6, !dbg !4426, !ctir !1446
  %16 = load i8*, i8** %fts_accpath14, align 8, !dbg !4426, !tbaa !2993, !ctir !7
  %call15 = call i32 @lstatat(i32 %14, i8* %16, %struct.stat* %st), !dbg !4427
  %tobool16 = icmp ne i32 %call15, 0, !dbg !4427
  br i1 %tobool16, label %land.lhs.true, label %if.then19, !dbg !4428

land.lhs.true:                                    ; preds = %if.then12
  %call17 = call i32* @__errno_location() #15, !dbg !4429
  %17 = load i32, i32* %call17, align 4, !dbg !4429, !tbaa !2980, !ctir !5
  %cmp18 = icmp eq i32 %17, 2, !dbg !4430
  br i1 %cmp18, label %if.end21, label %if.then19, !dbg !4431

if.then19:                                        ; preds = %land.lhs.true, %if.then12
  %call20 = call i32* @__errno_location() #15, !dbg !4432
  store i32 30, i32* %call20, align 4, !dbg !4433, !tbaa !2980, !ctir !5
  br label %if.end21, !dbg !4432

if.end21:                                         ; preds = %if.then19, %land.lhs.true
  br label %if.end22, !dbg !4434

if.end22:                                         ; preds = %if.end21, %if.end9
  %18 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4435, !tbaa !2993
  %call23 = call i32* @__errno_location() #15, !dbg !4437
  %19 = load i32, i32* %call23, align 4, !dbg !4437, !tbaa !2980, !ctir !5
  %call24 = call zeroext i1 @ignorable_missing(%struct.rm_options* %18, i32 %19), !dbg !4438
  br i1 %call24, label %if.then25, label %if.end26, !dbg !4439

if.then25:                                        ; preds = %if.end22
  store i32 2, i32* %retval, align 4, !dbg !4440
  br label %return, !dbg !4440

if.end26:                                         ; preds = %if.end22
  %20 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4441, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 15, !dbg !4443, !ctir !1446
  %21 = load i16, i16* %fts_info, align 8, !dbg !4443, !tbaa !3799, !ctir !34
  %conv = zext i16 %21 to i32, !dbg !4441
  %cmp27 = icmp eq i32 %conv, 4, !dbg !4444
  br i1 %cmp27, label %land.lhs.true29, label %if.end54, !dbg !4445

land.lhs.true29:                                  ; preds = %if.end26
  %call30 = call i32* @__errno_location() #15, !dbg !4446
  %22 = load i32, i32* %call30, align 4, !dbg !4446, !tbaa !2980, !ctir !5
  %cmp31 = icmp eq i32 %22, 39, !dbg !4447
  br i1 %cmp31, label %land.lhs.true44, label %lor.lhs.false, !dbg !4448

lor.lhs.false:                                    ; preds = %land.lhs.true29
  %call33 = call i32* @__errno_location() #15, !dbg !4449
  %23 = load i32, i32* %call33, align 4, !dbg !4449, !tbaa !2980, !ctir !5
  %cmp34 = icmp eq i32 %23, 21, !dbg !4450
  br i1 %cmp34, label %land.lhs.true44, label %lor.lhs.false36, !dbg !4451

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %call37 = call i32* @__errno_location() #15, !dbg !4452
  %24 = load i32, i32* %call37, align 4, !dbg !4452, !tbaa !2980, !ctir !5
  %cmp38 = icmp eq i32 %24, 20, !dbg !4453
  br i1 %cmp38, label %land.lhs.true44, label %lor.lhs.false40, !dbg !4454

lor.lhs.false40:                                  ; preds = %lor.lhs.false36
  %call41 = call i32* @__errno_location() #15, !dbg !4455
  %25 = load i32, i32* %call41, align 4, !dbg !4455, !tbaa !2980, !ctir !5
  %cmp42 = icmp eq i32 %25, 17, !dbg !4456
  br i1 %cmp42, label %land.lhs.true44, label %if.end54, !dbg !4457

land.lhs.true44:                                  ; preds = %lor.lhs.false40, %lor.lhs.false36, %lor.lhs.false, %land.lhs.true29
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4458, !tbaa !2993
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 8, !dbg !4459, !ctir !1446
  %27 = load i32, i32* %fts_errno, align 8, !dbg !4459, !tbaa !2980, !ctir !5
  %cmp45 = icmp eq i32 %27, 1, !dbg !4460
  br i1 %cmp45, label %if.then51, label %lor.lhs.false47, !dbg !4461

lor.lhs.false47:                                  ; preds = %land.lhs.true44
  %28 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4462, !tbaa !2993
  %fts_errno48 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 8, !dbg !4463, !ctir !1446
  %29 = load i32, i32* %fts_errno48, align 8, !dbg !4463, !tbaa !2980, !ctir !5
  %cmp49 = icmp eq i32 %29, 13, !dbg !4464
  br i1 %cmp49, label %if.then51, label %if.end54, !dbg !4465

if.then51:                                        ; preds = %lor.lhs.false47, %land.lhs.true44
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4466, !tbaa !2993
  %fts_errno52 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 8, !dbg !4467, !ctir !1446
  %31 = load i32, i32* %fts_errno52, align 8, !dbg !4467, !tbaa !2980, !ctir !5
  %call53 = call i32* @__errno_location() #15, !dbg !4468
  store i32 %31, i32* %call53, align 4, !dbg !4469, !tbaa !2980, !ctir !5
  br label %if.end54, !dbg !4468

if.end54:                                         ; preds = %if.then51, %lor.lhs.false47, %lor.lhs.false40, %if.end26
  %call55 = call i32* @__errno_location() #15, !dbg !4470
  %32 = load i32, i32* %call55, align 4, !dbg !4470, !tbaa !2980, !ctir !5
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.66, i64 0, i64 0)) #12, !dbg !4471
  %33 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4472, !tbaa !2993
  %fts_path57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 7, !dbg !4472, !ctir !1446
  %34 = load i8*, i8** %fts_path57, align 8, !dbg !4472, !tbaa !2993, !ctir !7
  %call58 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !4472
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %32, i8* %call56, i8* %call58), !dbg !4473
  %35 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !4474, !tbaa !2993
  call void @mark_ancestor_dirs(%struct._ftsent* %35), !dbg !4475
  store i32 4, i32* %retval, align 4, !dbg !4476
  br label %return, !dbg !4476

return:                                           ; preds = %if.end54, %if.then25, %if.end
  %36 = load i32, i32* %retval, align 4, !dbg !4477
  ret i32 %36, !dbg !4477
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_missing(%struct.rm_options* %x, i32 %errnum) #4 !dbg !4478 !ctir !1521 {
entry:
  %x.addr = alloca %struct.rm_options*, align 8, !ctir !1333
  %errnum.addr = alloca i32, align 4, !ctir !5
  store %struct.rm_options* %x, %struct.rm_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.rm_options** %x.addr, metadata !4479, metadata !DIExpression()), !dbg !4480
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !4481, metadata !DIExpression()), !dbg !4482
  %0 = load %struct.rm_options*, %struct.rm_options** %x.addr, align 8, !dbg !4483, !tbaa !2993
  %ignore_missing_files = getelementptr inbounds %struct.rm_options, %struct.rm_options* %0, i32 0, i32 0, !dbg !4484, !ctir !1334
  %1 = load i8, i8* %ignore_missing_files, align 8, !dbg !4484, !tbaa !3669
  %tobool = trunc i8 %1 to i1, !dbg !4484, !ctir !117
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !4485

land.rhs:                                         ; preds = %entry
  %2 = load i32, i32* %errnum.addr, align 4, !dbg !4486, !tbaa !2980
  %call = call zeroext i1 @nonexistent_file_errno(i32 %2), !dbg !4487
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %call, %land.rhs ], !dbg !4488
  ret i1 %3, !dbg !4489
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @nonexistent_file_errno(i32 %errnum) #4 !dbg !4490 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %errnum.addr = alloca i32, align 4, !ctir !5
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !4491, metadata !DIExpression()), !dbg !4492
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !4493, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 84, label %sw.bb
    i32 22, label %sw.bb
    i32 2, label %sw.bb
    i32 20, label %sw.bb
  ], !dbg !4494

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !4495
  br label %return, !dbg !4495

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !4497
  br label %return, !dbg !4497

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !4498
  ret i1 %1, !dbg !4498
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.stat* @cache_stat_init(%struct.stat* %st) #4 !dbg !4499 !ctir !1513 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1474
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4502, !tbaa !2993
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !4503, !ctir !1382
  store i64 -1, i64* %st_size, align 8, !dbg !4504, !tbaa !4505, !ctir !30
  %1 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4506, !tbaa !2993
  ret %struct.stat* %1, !dbg !4507
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @write_protected_non_symlink(i32 %fd_cwd, i8* %file, %struct.stat* %buf) #4 !dbg !4508 !ctir !1515 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fd_cwd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %buf.addr = alloca %struct.stat*, align 8, !ctir !1474
  store i32 %fd_cwd, i32* %fd_cwd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd_cwd.addr, metadata !4509, metadata !DIExpression()), !dbg !4510
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4511, metadata !DIExpression()), !dbg !4512
  store %struct.stat* %buf, %struct.stat** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %buf.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  %call = call zeroext i1 @can_write_any_file(), !dbg !4515
  br i1 %call, label %if.then, label %if.end, !dbg !4517

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4518
  br label %return, !dbg !4518

if.end:                                           ; preds = %entry
  %0 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4519, !tbaa !2980
  %1 = load i8*, i8** %file.addr, align 8, !dbg !4521, !tbaa !2993
  %2 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !4522, !tbaa !2993
  %call1 = call i32 @cache_fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256), !dbg !4523
  %cmp = icmp ne i32 %call1, 0, !dbg !4524
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4525

if.then2:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !4526
  br label %return, !dbg !4526

if.end3:                                          ; preds = %if.end
  %3 = load %struct.stat*, %struct.stat** %buf.addr, align 8, !dbg !4527, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !4527, !ctir !1382
  %4 = load i32, i32* %st_mode, align 8, !dbg !4527, !tbaa !3176, !ctir !130
  %and = and i32 %4, 61440, !dbg !4527
  %cmp4 = icmp eq i32 %and, 40960, !dbg !4527
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4529

if.then5:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !4530
  br label %return, !dbg !4530

if.end6:                                          ; preds = %if.end3
  %5 = load i32, i32* %fd_cwd.addr, align 4, !dbg !4531, !tbaa !2980
  %6 = load i8*, i8** %file.addr, align 8, !dbg !4534, !tbaa !2993
  %call7 = call i32 @faccessat(i32 %5, i8* %6, i32 2, i32 512) #12, !dbg !4535
  %cmp8 = icmp eq i32 %call7, 0, !dbg !4536
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !4537

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !4538
  br label %return, !dbg !4538

if.end10:                                         ; preds = %if.end6
  %call11 = call i32* @__errno_location() #15, !dbg !4539
  %7 = load i32, i32* %call11, align 4, !dbg !4539, !tbaa !2980, !ctir !5
  %cmp12 = icmp eq i32 %7, 13, !dbg !4540
  %8 = zext i1 %cmp12 to i64, !dbg !4539
  %cond = select i1 %cmp12, i32 1, i32 -1, !dbg !4539
  store i32 %cond, i32* %retval, align 4, !dbg !4541
  br label %return, !dbg !4541

return:                                           ; preds = %if.end10, %if.then9, %if.then5, %if.then2, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !4542
  ret i32 %9, !dbg !4542
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @cache_fstatat(i32 %fd, i8* %file, %struct.stat* %st, i32 %flag) #4 !dbg !4543 !ctir !1517 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %st.addr = alloca %struct.stat*, align 8, !ctir !1474
  %flag.addr = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !4544, metadata !DIExpression()), !dbg !4545
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !4546, metadata !DIExpression()), !dbg !4547
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !4548, metadata !DIExpression()), !dbg !4549
  store i32 %flag, i32* %flag.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4550, metadata !DIExpression()), !dbg !4551
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4552, !tbaa !2993
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 8, !dbg !4554, !ctir !1382
  %1 = load i64, i64* %st_size, align 8, !dbg !4554, !tbaa !4505, !ctir !30
  %cmp = icmp eq i64 %1, -1, !dbg !4555
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4556

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !4557, !tbaa !2980
  %3 = load i8*, i8** %file.addr, align 8, !dbg !4558, !tbaa !2993
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4559, !tbaa !2993
  %5 = load i32, i32* %flag.addr, align 4, !dbg !4560, !tbaa !2980
  %call = call i32 @fstatat(i32 %2, i8* %3, %struct.stat* %4, i32 %5) #12, !dbg !4561
  %cmp1 = icmp ne i32 %call, 0, !dbg !4562
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4563

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4564, !tbaa !2993
  %st_size2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 8, !dbg !4566, !ctir !1382
  store i64 -2, i64* %st_size2, align 8, !dbg !4567, !tbaa !4505, !ctir !30
  %call3 = call i32* @__errno_location() #15, !dbg !4568
  %7 = load i32, i32* %call3, align 4, !dbg !4568, !tbaa !2980, !ctir !5
  %conv = sext i32 %7 to i64, !dbg !4568
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4569, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !4570, !ctir !1382
  store i64 %conv, i64* %st_ino, align 8, !dbg !4571, !tbaa !3859, !ctir !225
  br label %if.end, !dbg !4572

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %9 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4573, !tbaa !2993
  %st_size4 = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 8, !dbg !4575, !ctir !1382
  %10 = load i64, i64* %st_size4, align 8, !dbg !4575, !tbaa !4505, !ctir !30
  %cmp5 = icmp sle i64 0, %10, !dbg !4576
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !4577

if.then7:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !4578
  br label %return, !dbg !4578

if.end8:                                          ; preds = %if.end
  %11 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !4579, !tbaa !2993
  %st_ino9 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1, !dbg !4580, !ctir !1382
  %12 = load i64, i64* %st_ino9, align 8, !dbg !4580, !tbaa !3859, !ctir !225
  %conv10 = trunc i64 %12 to i32, !dbg !4581
  %call11 = call i32* @__errno_location() #15, !dbg !4582
  store i32 %conv10, i32* %call11, align 4, !dbg !4583, !tbaa !2980, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !4584
  br label %return, !dbg !4584

return:                                           ; preds = %if.end8, %if.then7
  %13 = load i32, i32* %retval, align 4, !dbg !4585
  ret i32 %13, !dbg !4585
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @faccessat(i32, i8*, i32, i32) #2

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.dirent* @readdir_ignoring_dot_and_dotdot(%struct.__dirstream* %dirp) #4 !dbg !4586 !ctir !1461 {
entry:
  %dirp.addr = alloca %struct.__dirstream*, align 8, !ctir !580
  %dp = alloca %struct.dirent*, align 8, !ctir !1452
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !4587, metadata !DIExpression()), !dbg !4588
  br label %while.body, !dbg !4589

while.body:                                       ; preds = %entry, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !4590, metadata !DIExpression()), !dbg !4592
  %0 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !4593, !tbaa !2993
  %call = call %struct.dirent* @readdir(%struct.__dirstream* %0), !dbg !4594
  store %struct.dirent* %call, %struct.dirent** %dp, align 8, !dbg !4592, !tbaa !2993
  %1 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4595, !tbaa !2993
  %cmp = icmp eq %struct.dirent* %1, null, !dbg !4597
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4598

lor.lhs.false:                                    ; preds = %while.body
  %2 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4599, !tbaa !2993
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %2, i32 0, i32 4, !dbg !4600, !ctir !1453
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !4599
  %call1 = call zeroext i1 @dot_or_dotdot(i8* %arraydecay), !dbg !4601
  br i1 %call1, label %if.end, label %if.then, !dbg !4602

if.then:                                          ; preds = %lor.lhs.false, %while.body
  %3 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !4603, !tbaa !2993
  ret %struct.dirent* %3, !dbg !4604

if.end:                                           ; preds = %lor.lhs.false
  br label %while.body, !dbg !4589, !llvm.loop !4605
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !4607 !ctir !247 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %mode.addr = alloca i32, align 4, !ctir !157
  %new_dst.addr = alloca i8, align 1, !ctir !117
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %all_errors = alloca i8, align 1, !ctir !117
  %some_errors = alloca i8, align 1, !ctir !117
  %con = alloca i8*, align 8, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4608, metadata !DIExpression()), !dbg !4609
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4610, metadata !DIExpression()), !dbg !4611
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4612, metadata !DIExpression()), !dbg !4613
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4614, metadata !DIExpression()), !dbg !4615
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4616, metadata !DIExpression()), !dbg !4617
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4618, !tbaa !2993
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !4620, !ctir !250
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !4620, !tbaa !3205
  %tobool = trunc i8 %1 to i1, !dbg !4620, !ctir !117
  br i1 %tobool, label %if.then, label %if.else40, !dbg !4621

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4622, metadata !DIExpression()), !dbg !4624
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4625, !tbaa !2993
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !4626, !ctir !250
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !4626, !tbaa !3452
  %tobool1 = trunc i8 %3 to i1, !dbg !4626, !ctir !117
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !4627

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4628, !tbaa !2993
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !4629, !ctir !250
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !4629, !tbaa !3460
  %tobool2 = trunc i8 %5 to i1, !dbg !4629, !ctir !117
  br label %lor.end, !dbg !4627

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !4624
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4624, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4630, metadata !DIExpression()), !dbg !4631
  %7 = load i8, i8* %all_errors, align 1, !dbg !4632, !tbaa !3104
  %tobool4 = trunc i8 %7 to i1, !dbg !4632
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4633

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4634, !tbaa !2993
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !4635, !ctir !250
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4635, !tbaa !3448
  %tobool5 = trunc i8 %9 to i1, !dbg !4635, !ctir !117
  %lnot = xor i1 %tobool5, true, !dbg !4636
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4637
  %frombool6 = zext i1 %10 to i8, !dbg !4631
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4631, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8** %con, metadata !4638, metadata !DIExpression()), !dbg !4639
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !4640, !tbaa !2993
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !4642
  %cmp = icmp sle i32 0, %call, !dbg !4643
  br i1 %cmp, label %if.then7, label %if.else, !dbg !4644

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !4645, !tbaa !2993
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !4648
  %cmp9 = icmp slt i32 %call8, 0, !dbg !4649
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !4650

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !4651, !tbaa !3104
  %tobool11 = trunc i8 %13 to i1, !dbg !4651
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !4654

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !4655, !tbaa !3104
  %tobool12 = trunc i8 %14 to i1, !dbg !4655
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !4656

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #15, !dbg !4657
  %15 = load i32, i32* %call13, align 4, !dbg !4657, !tbaa !2980, !ctir !5
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !4658
  br i1 %call14, label %if.end, label %if.then15, !dbg !4659

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #15, !dbg !4660
  %16 = load i32, i32* %call16, align 4, !dbg !4660, !tbaa !2980, !ctir !5
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.87, i64 0, i64 0)) #12, !dbg !4661
  %17 = load i8*, i8** %con, align 8, !dbg !4662, !tbaa !2993
  %call18 = call i8* @quote(i8* %17), !dbg !4663
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !4664
  br label %if.end, !dbg !4664

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4665, !tbaa !2993
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !4667, !ctir !250
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !4667, !tbaa !3460
  %tobool20 = trunc i8 %19 to i1, !dbg !4667, !ctir !117
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !4668

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !4669, !tbaa !2993
  call void @freecon(i8* %20), !dbg !4671
  store i1 false, i1* %retval, align 1, !dbg !4672
  br label %return, !dbg !4672

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !4673

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !4674, !tbaa !2993
  call void @freecon(i8* %21), !dbg !4675
  br label %if.end39, !dbg !4676

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !4677, !tbaa !3104
  %tobool24 = trunc i8 %22 to i1, !dbg !4677
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !4680

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !4681, !tbaa !3104
  %tobool26 = trunc i8 %23 to i1, !dbg !4681
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !4682

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #15, !dbg !4683
  %24 = load i32, i32* %call28, align 4, !dbg !4683, !tbaa !2980, !ctir !5
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !4684
  br i1 %call29, label %if.end34, label %if.then30, !dbg !4685

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #15, !dbg !4686
  %25 = load i32, i32* %call31, align 4, !dbg !4686, !tbaa !2980, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.88, i64 0, i64 0)) #12, !dbg !4688
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !4689, !tbaa !2993
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !4689
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !4690
  br label %if.end34, !dbg !4691

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4692, !tbaa !2993
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !4694, !ctir !250
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !4694, !tbaa !3460
  %tobool36 = trunc i8 %28 to i1, !dbg !4694, !ctir !117
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4695

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !4696
  br label %return, !dbg !4696

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !4697

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4698, !tbaa !2993
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !4700, !ctir !250
  %30 = load i8, i8* %set_security_context, align 1, !dbg !4700, !tbaa !3208
  %tobool41 = trunc i8 %30 to i1, !dbg !4700, !ctir !117
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !4701

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !4702, !tbaa !3104
  %tobool43 = trunc i8 %31 to i1, !dbg !4702
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !4705

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !4706, !tbaa !2993
  %33 = load i32, i32* %mode.addr, align 4, !dbg !4707, !tbaa !2980
  %call45 = call i32 @defaultcon(i8* %32, i32 %33), !dbg !4708
  %cmp46 = icmp slt i32 %call45, 0, !dbg !4709
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !4710

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #15, !dbg !4711
  %34 = load i32, i32* %call48, align 4, !dbg !4711, !tbaa !2980, !ctir !5
  %call49 = call zeroext i1 @ignorable_ctx_err(i32 %34), !dbg !4712
  br i1 %call49, label %if.end54, label %if.then50, !dbg !4713

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #15, !dbg !4714
  %35 = load i32, i32* %call51, align 4, !dbg !4714, !tbaa !2980, !ctir !5
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.89, i64 0, i64 0)) #12, !dbg !4716
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !4717, !tbaa !2993
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !4717
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !4718
  br label %if.end54, !dbg !4719

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !4720

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !4721
  br label %return, !dbg !4721

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !4722
  ret i1 %37, !dbg !4722
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !4723 !ctir !304 {
entry:
  %err.addr = alloca i32, align 4, !ctir !5
  store i32 %err, i32* %err.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4724, metadata !DIExpression()), !dbg !4725
  %0 = load i32, i32* %err.addr, align 4, !dbg !4726, !tbaa !2980
  %cmp = icmp eq i32 %0, 95, !dbg !4727
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4728

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4729, !tbaa !2980
  %cmp1 = icmp eq i32 %1, 61, !dbg !4730
  br label %lor.end, !dbg !4728

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4731
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !4732 !ctir !306 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !112
  %mode.addr = alloca i32, align 4, !ctir !157
  store i8* %path, i8** %path.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4734, metadata !DIExpression()), !dbg !4735
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4736, metadata !DIExpression()), !dbg !4737
  %call = call i32* @__errno_location() #15, !dbg !4738
  store i32 95, i32* %call, align 4, !dbg !4739, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !4740
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !4741 !ctir !304 {
entry:
  %err.addr = alloca i32, align 4, !ctir !5
  store i32 %err, i32* %err.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4742, metadata !DIExpression()), !dbg !4743
  %0 = load i32, i32* %err.addr, align 4, !dbg !4744, !tbaa !2980
  %cmp = icmp eq i32 %0, 95, !dbg !4745
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4746

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4747, !tbaa !2980
  %cmp1 = icmp eq i32 %1, 61, !dbg !4748
  br label %lor.end, !dbg !4746

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4749
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !4750 !ctir !292 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %process_local.addr = alloca i8, align 1, !ctir !117
  %recurse.addr = alloca i8, align 1, !ctir !117
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %all_errors = alloca i8, align 1, !ctir !117
  %some_errors = alloca i8, align 1, !ctir !117
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !4753, metadata !DIExpression()), !dbg !4754
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4759, metadata !DIExpression()), !dbg !4760
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4761, !tbaa !2993
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !4762, !ctir !250
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !4762, !tbaa !3452
  %tobool = trunc i8 %1 to i1, !dbg !4762, !ctir !117
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4763

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4764, !tbaa !2993
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !4765, !ctir !250
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !4765, !tbaa !3460
  %tobool2 = trunc i8 %3 to i1, !dbg !4765, !ctir !117
  br label %lor.end, !dbg !4763

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !4760
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4760, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4766, metadata !DIExpression()), !dbg !4767
  %5 = load i8, i8* %all_errors, align 1, !dbg !4768, !tbaa !3104
  %tobool4 = trunc i8 %5 to i1, !dbg !4768
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4769

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4770, !tbaa !2993
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !4771, !ctir !250
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4771, !tbaa !3448
  %tobool5 = trunc i8 %7 to i1, !dbg !4771, !ctir !117
  %lnot = xor i1 %tobool5, true, !dbg !4772
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4773
  %frombool6 = zext i1 %8 to i8, !dbg !4767
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4767, !tbaa !3104
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !4774, !tbaa !2993
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !4776, !tbaa !3104
  %tobool7 = trunc i8 %10 to i1, !dbg !4776
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !4777, !tbaa !3104
  %tobool8 = trunc i8 %11 to i1, !dbg !4777
  %call = call zeroext i1 @restorecon(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !4778
  br i1 %call, label %if.end17, label %if.then, !dbg !4779

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !4780, !tbaa !3104
  %tobool9 = trunc i8 %12 to i1, !dbg !4780
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !4783

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !4784, !tbaa !3104
  %tobool10 = trunc i8 %13 to i1, !dbg !4784
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !4785

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #15, !dbg !4786
  %14 = load i32, i32* %call11, align 4, !dbg !4786, !tbaa !2980, !ctir !5
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !4787
  br i1 %call12, label %if.end, label %if.then13, !dbg !4788

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !4789
  %15 = load i32, i32* %call14, align 4, !dbg !4789, !tbaa !2980, !ctir !5
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.90, i64 0, i64 0)) #12, !dbg !4790
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !4791, !tbaa !2993
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !4791
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !4792
  br label %if.end, !dbg !4792

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !4793
  br label %return, !dbg !4793

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !4794
  br label %return, !dbg !4794

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !4795
  ret i1 %17, !dbg !4795
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4796 !ctir !308 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !112
  %recurse.addr = alloca i8, align 1, !ctir !117
  %preserve.addr = alloca i8, align 1, !ctir !117
  store i8* %path, i8** %path.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4797, metadata !DIExpression()), !dbg !4798
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4799, metadata !DIExpression()), !dbg !4800
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4801, metadata !DIExpression()), !dbg !4802
  %call = call i32* @__errno_location() #15, !dbg !4803
  store i32 95, i32* %call, align 4, !dbg !4804, !tbaa !2980, !ctir !5
  ret i1 false, !dbg !4805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !4806 !ctir !294 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !296
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4807, metadata !DIExpression()), !dbg !4808
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4809
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4810, !tbaa !2993
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !4811, !ctir !251
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !4812, !tbaa !3507, !ctir !192
  ret void, !dbg !4813
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4814 !ctir !294 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !296
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4815, metadata !DIExpression()), !dbg !4816
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4817
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4818, !tbaa !2993
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4819, !ctir !251
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4820, !tbaa !3511, !ctir !192
  ret void, !dbg !4821
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4822 !ctir !297 {
entry:
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %nonexistent_dst.addr = alloca i8, align 1, !ctir !117
  %options.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %copy_into_self.addr = alloca i8*, align 8, !ctir !299
  %rename_succeeded.addr = alloca i8*, align 8, !ctir !299
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !117
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4823, metadata !DIExpression()), !dbg !4824
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4825, metadata !DIExpression()), !dbg !4826
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4827, metadata !DIExpression()), !dbg !4828
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4829, metadata !DIExpression()), !dbg !4830
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4831, metadata !DIExpression()), !dbg !4832
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4833, metadata !DIExpression()), !dbg !4834
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4835, !tbaa !2993
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4835
  br i1 %call, label %cond.true, label %cond.false, !dbg !4835

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4835

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.95, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 3013, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4835
  unreachable, !dbg !4835

1:                                                ; No predecessors!
  br label %cond.end, !dbg !4835

cond.end:                                         ; preds = %1, %cond.true
  %2 = load i8*, i8** %src_name.addr, align 8, !dbg !4836, !tbaa !2993
  store i8* %2, i8** @top_level_src_name, align 8, !dbg !4837, !tbaa !2993
  %3 = load i8*, i8** %dst_name.addr, align 8, !dbg !4838, !tbaa !2993
  store i8* %3, i8** @top_level_dst_name, align 8, !dbg !4839, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4840, metadata !DIExpression()), !dbg !4841
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4841, !tbaa !3104
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !4842, !tbaa !2993
  %5 = load i8*, i8** %dst_name.addr, align 8, !dbg !4843, !tbaa !2993
  %6 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4844, !tbaa !3104
  %tobool = trunc i8 %6 to i1, !dbg !4844
  %7 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4845, !tbaa !2993
  %8 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4846, !tbaa !2993
  %9 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4847, !tbaa !2993
  %call1 = call zeroext i1 @copy_internal(i8* %4, i8* %5, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %7, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %8, i8* %9), !dbg !4848
  ret i1 %call1, !dbg !4849
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #9 !dbg !4850 !ctir !300 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8, !ctir !249
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4851, metadata !DIExpression()), !dbg !4852
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4853, !tbaa !2993
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4853
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4853

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4853

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.149, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2988, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4853
  unreachable, !dbg !4853

1:                                                ; No predecessors!
  br label %cond.end, !dbg !4853

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4854, !tbaa !2993
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 0, !dbg !4854, !ctir !250
  %3 = load i32, i32* %backup_type, align 8, !dbg !4854, !tbaa !3321, !ctir !65
  %cmp1 = icmp ule i32 %3, 3, !dbg !4854
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !4854

cond.true2:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !4854

cond.false3:                                      ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.150, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2989, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4854
  unreachable, !dbg !4854

4:                                                ; No predecessors!
  br label %cond.end4, !dbg !4854

cond.end4:                                        ; preds = %4, %cond.true2
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4855, !tbaa !2993
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4855, !ctir !250
  %6 = load i32, i32* %sparse_mode, align 4, !dbg !4855, !tbaa !3476, !ctir !86
  %cmp5 = icmp eq i32 %6, 1, !dbg !4855
  br i1 %cmp5, label %cond.true11, label %lor.lhs.false, !dbg !4855

lor.lhs.false:                                    ; preds = %cond.end4
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4855, !tbaa !2993
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4855, !ctir !250
  %8 = load i32, i32* %sparse_mode6, align 4, !dbg !4855, !tbaa !3476, !ctir !86
  %cmp7 = icmp eq i32 %8, 2, !dbg !4855
  br i1 %cmp7, label %cond.true11, label %lor.lhs.false8, !dbg !4855

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4855, !tbaa !2993
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 3, !dbg !4855, !ctir !250
  %10 = load i32, i32* %sparse_mode9, align 4, !dbg !4855, !tbaa !3476, !ctir !86
  %cmp10 = icmp eq i32 %10, 3, !dbg !4855
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !4855

cond.true11:                                      ; preds = %lor.lhs.false8, %lor.lhs.false, %cond.end4
  br label %cond.end13, !dbg !4855

cond.false12:                                     ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.151, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2990, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4855
  unreachable, !dbg !4855

11:                                               ; No predecessors!
  br label %cond.end13, !dbg !4855

cond.end13:                                       ; preds = %11, %cond.true11
  %12 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4856, !tbaa !2993
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 36, !dbg !4856, !ctir !250
  %13 = load i32, i32* %reflink_mode, align 8, !dbg !4856, !tbaa !3386, !ctir !92
  %cmp14 = icmp eq i32 %13, 0, !dbg !4856
  br i1 %cmp14, label %cond.true21, label %lor.lhs.false15, !dbg !4856

lor.lhs.false15:                                  ; preds = %cond.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4856, !tbaa !2993
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 36, !dbg !4856, !ctir !250
  %15 = load i32, i32* %reflink_mode16, align 8, !dbg !4856, !tbaa !3386, !ctir !92
  %cmp17 = icmp eq i32 %15, 1, !dbg !4856
  br i1 %cmp17, label %cond.true21, label %lor.lhs.false18, !dbg !4856

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %16 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4856, !tbaa !2993
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 36, !dbg !4856, !ctir !250
  %17 = load i32, i32* %reflink_mode19, align 8, !dbg !4856, !tbaa !3386, !ctir !92
  %cmp20 = icmp eq i32 %17, 2, !dbg !4856
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !4856

cond.true21:                                      ; preds = %lor.lhs.false18, %lor.lhs.false15, %cond.end13
  br label %cond.end23, !dbg !4856

cond.false22:                                     ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.152, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2991, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4856
  unreachable, !dbg !4856

18:                                               ; No predecessors!
  br label %cond.end23, !dbg !4856

cond.end23:                                       ; preds = %18, %cond.true21
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4857, !tbaa !2993
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 8, !dbg !4857, !ctir !250
  %20 = load i8, i8* %hard_link, align 1, !dbg !4857, !tbaa !3402
  %tobool = trunc i8 %20 to i1, !dbg !4857, !ctir !117
  br i1 %tobool, label %land.lhs.true, label %cond.true25, !dbg !4857

land.lhs.true:                                    ; preds = %cond.end23
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4857, !tbaa !2993
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 29, !dbg !4857, !ctir !250
  %22 = load i8, i8* %symbolic_link, align 4, !dbg !4857, !tbaa !3480
  %tobool24 = trunc i8 %22 to i1, !dbg !4857, !ctir !117
  br i1 %tobool24, label %cond.false26, label %cond.true25, !dbg !4857

cond.true25:                                      ; preds = %land.lhs.true, %cond.end23
  br label %cond.end27, !dbg !4857

cond.false26:                                     ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.153, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2992, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4857
  unreachable, !dbg !4857

23:                                               ; No predecessors!
  br label %cond.end27, !dbg !4857

cond.end27:                                       ; preds = %23, %cond.true25
  %24 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4858, !tbaa !2993
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 36, !dbg !4858, !ctir !250
  %25 = load i32, i32* %reflink_mode28, align 8, !dbg !4858, !tbaa !3386, !ctir !92
  %cmp29 = icmp eq i32 %25, 2, !dbg !4858
  br i1 %cmp29, label %land.lhs.true30, label %cond.true33, !dbg !4858

land.lhs.true30:                                  ; preds = %cond.end27
  %26 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4858, !tbaa !2993
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !4858, !ctir !250
  %27 = load i32, i32* %sparse_mode31, align 4, !dbg !4858, !tbaa !3476, !ctir !86
  %cmp32 = icmp ne i32 %27, 2, !dbg !4858
  br i1 %cmp32, label %cond.false34, label %cond.true33, !dbg !4858

cond.true33:                                      ; preds = %land.lhs.true30, %cond.end27
  br label %cond.end35, !dbg !4858

cond.false34:                                     ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.154, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4858
  unreachable, !dbg !4858

28:                                               ; No predecessors!
  br label %cond.end35, !dbg !4858

cond.end35:                                       ; preds = %28, %cond.true33
  ret i1 true, !dbg !4859
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4860 !ctir !310 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %new_dst.addr = alloca i8, align 1, !ctir !117
  %parent.addr = alloca %struct.stat*, align 8, !ctir !312
  %ancestors.addr = alloca %struct.dir_list*, align 8, !ctir !347
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %command_line_arg.addr = alloca i8, align 1, !ctir !117
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8, !ctir !299
  %copy_into_self.addr = alloca i8*, align 8, !ctir !299
  %rename_succeeded.addr = alloca i8*, align 8, !ctir !299
  %src_sb = alloca %struct.stat, align 8, !ctir !314
  %dst_sb = alloca %struct.stat, align 8, !ctir !314
  %src_mode = alloca i32, align 4, !ctir !157
  %dst_mode = alloca i32, align 4, !ctir !157
  %dst_mode_bits = alloca i32, align 4, !ctir !157
  %omitted_permissions = alloca i32, align 4, !ctir !157
  %restore_dst_mode = alloca i8, align 1, !ctir !117
  %earlier_file = alloca i8*, align 8, !ctir !7
  %dst_backup = alloca i8*, align 8, !ctir !7
  %delayed_ok = alloca i8, align 1, !ctir !117
  %copied_as_regular = alloca i8, align 1, !ctir !117
  %dest_is_symlink = alloca i8, align 1, !ctir !117
  %have_dst_lstat = alloca i8, align 1, !ctir !117
  %rename_errno = alloca i32, align 4, !ctir !5
  %name = alloca i8*, align 8, !ctir !112
  %fstatat_flags = alloca i32, align 4, !ctir !5
  %dereference65 = alloca i8, align 1, !ctir !117
  %use_lstat = alloca i8, align 1, !ctir !117
  %fstatat_flags98 = alloca i32, align 4, !ctir !5
  %return_now = alloca i8, align 1, !ctir !117
  %options = alloca i32, align 4, !ctir !5
  %srcbase = alloca i8*, align 8, !ctir !112
  %fmt = alloca i8*, align 8, !ctir !112
  %tmp_backup = alloca i8*, align 8, !ctir !7
  %__old = alloca i8*, align 8, !ctir !112
  %__len = alloca i64, align 8, !ctir !52
  %__new = alloca i8*, align 8, !ctir !7
  %tmp = alloca i8*, align 8, !ctir !7
  %lstat_ok = alloca i8, align 1, !ctir !117
  %tmp_buf = alloca %struct.stat, align 8, !ctir !314
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !353
  %dir = alloca %struct.dir_list*, align 8, !ctir !347
  %dot_sb = alloca %struct.stat, align 8, !ctir !314
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !314
  %dst_parent = alloca i8*, align 8, !ctir !7
  %in_current_dir = alloca i8, align 1, !ctir !117
  %err = alloca i32, align 4, !ctir !5
  %replace = alloca i8, align 1, !ctir !117
  %src_link_val = alloca i8*, align 8, !ctir !7
  %symlink_err = alloca i32, align 4, !ctir !5
  %dest_link_val = alloca i8*, align 8, !ctir !7
  %sb = alloca %struct.stat, align 8, !ctir !314
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !354
  %tmp952 = alloca %struct.timespec, align 8, !ctir !334
  %tmp955 = alloca %struct.timespec, align 8, !ctir !334
  %default_permissions = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4861, metadata !DIExpression()), !dbg !4862
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4863, metadata !DIExpression()), !dbg !4864
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4865, metadata !DIExpression()), !dbg !4866
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4867, metadata !DIExpression()), !dbg !4868
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4869, metadata !DIExpression()), !dbg !4870
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4871, metadata !DIExpression()), !dbg !4872
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4873, metadata !DIExpression()), !dbg !4874
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4875, metadata !DIExpression()), !dbg !4876
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4877, metadata !DIExpression()), !dbg !4878
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4879, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4881, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4883, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4885, metadata !DIExpression()), !dbg !4886
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4887, metadata !DIExpression()), !dbg !4888
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4889, metadata !DIExpression()), !dbg !4890
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4891, metadata !DIExpression()), !dbg !4892
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4893, metadata !DIExpression()), !dbg !4894
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4894, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4895, metadata !DIExpression()), !dbg !4896
  store i8* null, i8** %earlier_file, align 8, !dbg !4896, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4897, metadata !DIExpression()), !dbg !4898
  store i8* null, i8** %dst_backup, align 8, !dbg !4898, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4899, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4901, metadata !DIExpression()), !dbg !4902
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4902, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4903, metadata !DIExpression()), !dbg !4904
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4904, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4905, metadata !DIExpression()), !dbg !4906
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4906, !tbaa !3104
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4907, !tbaa !2993
  store i8 0, i8* %0, align 1, !dbg !4908, !tbaa !3104, !ctir !117
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4909, metadata !DIExpression()), !dbg !4910
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4911, !tbaa !2993
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4912, !ctir !250
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4912, !tbaa !3274, !ctir !5
  store i32 %2, i32* %rename_errno, align 4, !dbg !4910, !tbaa !2980
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4913, !tbaa !2993
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4915, !ctir !250
  %4 = load i8, i8* %move_mode, align 8, !dbg !4915, !tbaa !3409
  %tobool = trunc i8 %4 to i1, !dbg !4915, !ctir !117
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4916

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4917, !tbaa !2980
  %cmp = icmp slt i32 %5, 0, !dbg !4920
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4921

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4922, !tbaa !2993
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4923, !tbaa !2993
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4924
  %tobool4 = icmp ne i32 %call, 0, !dbg !4924
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4924

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #15, !dbg !4925
  %8 = load i32, i32* %call5, align 4, !dbg !4925, !tbaa !2980, !ctir !5
  br label %cond.end, !dbg !4924

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4924

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4924
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4926, !tbaa !2980
  br label %if.end, !dbg !4927

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4928, !tbaa !2980
  %cmp6 = icmp eq i32 %9, 0, !dbg !4929
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4930
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4930, !tbaa !3104
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4931, !tbaa !2993
  %tobool8 = icmp ne i8* %10, null, !dbg !4931
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4933

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4934, !tbaa !3104
  %tobool10 = trunc i8 %11 to i1, !dbg !4934
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4935, !tbaa !2993
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4936
  store i8 %frombool11, i8* %12, align 1, !dbg !4936, !tbaa !3104, !ctir !117
  br label %if.end12, !dbg !4937

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4938

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4939, !tbaa !2980
  %cmp14 = icmp eq i32 %13, 0, !dbg !4941
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4942

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4943, !tbaa !2993
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4944, !ctir !250
  %15 = load i8, i8* %last_file, align 1, !dbg !4944, !tbaa !3351
  %tobool16 = trunc i8 %15 to i1, !dbg !4944, !ctir !117
  br i1 %tobool16, label %if.end47, label %if.then20, !dbg !4939

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4945, !tbaa !2980
  %cmp18 = icmp ne i32 %16, 17, !dbg !4946
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4947

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4948, !tbaa !2993
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4949, !ctir !250
  %18 = load i32, i32* %interactive, align 8, !dbg !4949, !tbaa !3150, !ctir !80
  %cmp19 = icmp ne i32 %18, 2, !dbg !4950
  br i1 %cmp19, label %if.then20, label %if.end47, !dbg !4942

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4951, metadata !DIExpression()), !dbg !4953
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4954, !tbaa !2980
  %cmp21 = icmp eq i32 %19, 0, !dbg !4955
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4954

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4956, !tbaa !2993
  br label %cond.end24, !dbg !4954

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4957, !tbaa !2993
  br label %cond.end24, !dbg !4954

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4954
  store i8* %cond25, i8** %name, align 8, !dbg !4953, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !4958, metadata !DIExpression()), !dbg !4959
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4960, !tbaa !2993
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4961, !ctir !250
  %23 = load i32, i32* %dereference, align 4, !dbg !4961, !tbaa !3390, !ctir !73
  %cmp26 = icmp eq i32 %23, 2, !dbg !4962
  %24 = zext i1 %cmp26 to i64, !dbg !4960
  %cond27 = select i1 %cmp26, i32 256, i32 0, !dbg !4960
  store i32 %cond27, i32* %fstatat_flags, align 4, !dbg !4959, !tbaa !2980
  %25 = load i8*, i8** %name, align 8, !dbg !4963, !tbaa !2993
  %26 = load i32, i32* %fstatat_flags, align 4, !dbg !4965, !tbaa !2980
  %call28 = call i32 @follow_fstatat(i32 -100, i8* %25, %struct.stat* %src_sb, i32 %26), !dbg !4966
  %cmp29 = icmp ne i32 %call28, 0, !dbg !4967
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !4968

if.then30:                                        ; preds = %cond.end24
  %call31 = call i32* @__errno_location() #15, !dbg !4969
  %27 = load i32, i32* %call31, align 4, !dbg !4969, !tbaa !2980, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !4971
  %28 = load i8*, i8** %name, align 8, !dbg !4972, !tbaa !2993
  %call33 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !4972
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call32, i8* %call33), !dbg !4973
  store i1 false, i1* %retval, align 1, !dbg !4974
  br label %return, !dbg !4974

if.end34:                                         ; preds = %cond.end24
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4975, !ctir !314
  %29 = load i32, i32* %st_mode, align 8, !dbg !4975, !tbaa !3176, !ctir !130
  store i32 %29, i32* %src_mode, align 4, !dbg !4976, !tbaa !2980
  %30 = load i32, i32* %src_mode, align 4, !dbg !4977, !tbaa !2980
  %and = and i32 %30, 61440, !dbg !4977
  %cmp35 = icmp eq i32 %and, 16384, !dbg !4977
  br i1 %cmp35, label %land.lhs.true, label %if.end46, !dbg !4979

land.lhs.true:                                    ; preds = %if.end34
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4980, !tbaa !2993
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 27, !dbg !4981, !ctir !250
  %32 = load i8, i8* %recursive, align 2, !dbg !4981, !tbaa !3472
  %tobool36 = trunc i8 %32 to i1, !dbg !4981, !ctir !117
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !4982

if.then37:                                        ; preds = %land.lhs.true
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4983, !tbaa !2993
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 10, !dbg !4985, !ctir !250
  %34 = load i8, i8* %install_mode, align 1, !dbg !4985, !tbaa !3413
  %tobool38 = trunc i8 %34 to i1, !dbg !4985, !ctir !117
  br i1 %tobool38, label %cond.false41, label %cond.true39, !dbg !4986

cond.true39:                                      ; preds = %if.then37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.98, i64 0, i64 0)) #12, !dbg !4987
  br label %cond.end43, !dbg !4986

cond.false41:                                     ; preds = %if.then37
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.99, i64 0, i64 0)) #12, !dbg !4988
  br label %cond.end43, !dbg !4986

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i8* [ %call40, %cond.true39 ], [ %call42, %cond.false41 ], !dbg !4986
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !4989, !tbaa !2993
  %call45 = call i8* @quotearg_style(i32 4, i8* %35), !dbg !4989
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond44, i8* %call45), !dbg !4990
  store i1 false, i1* %retval, align 1, !dbg !4991
  br label %return, !dbg !4991

if.end46:                                         ; preds = %land.lhs.true, %if.end34
  br label %if.end47, !dbg !4992

if.end47:                                         ; preds = %if.end46, %lor.lhs.false, %cond.true15
  %36 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4993, !tbaa !3104
  %tobool48 = trunc i8 %36 to i1, !dbg !4993
  br i1 %tobool48, label %land.lhs.true49, label %if.end64, !dbg !4995

land.lhs.true49:                                  ; preds = %if.end47
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4996, !tbaa !2993
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 38, !dbg !4997, !ctir !250
  %38 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !4997, !tbaa !3511, !ctir !192
  %tobool50 = icmp ne %struct.hash_table* %38, null, !dbg !4996
  br i1 %tobool50, label %if.then51, label %if.end64, !dbg !4998

if.then51:                                        ; preds = %land.lhs.true49
  %39 = load i32, i32* %src_mode, align 4, !dbg !4999, !tbaa !2980
  %and52 = and i32 %39, 61440, !dbg !4999
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !4999
  br i1 %cmp53, label %if.end62, label %land.lhs.true54, !dbg !5002

land.lhs.true54:                                  ; preds = %if.then51
  %40 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5003, !tbaa !2993
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %40, i32 0, i32 0, !dbg !5004, !ctir !250
  %41 = load i32, i32* %backup_type, align 8, !dbg !5004, !tbaa !3321, !ctir !65
  %cmp55 = icmp eq i32 %41, 0, !dbg !5005
  br i1 %cmp55, label %land.lhs.true56, label %if.end62, !dbg !5006

land.lhs.true56:                                  ; preds = %land.lhs.true54
  %42 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5007, !tbaa !2993
  %src_info57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 38, !dbg !5008, !ctir !250
  %43 = load %struct.hash_table*, %struct.hash_table** %src_info57, align 8, !dbg !5008, !tbaa !3511, !ctir !192
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !5009, !tbaa !2993
  %call58 = call zeroext i1 @seen_file(%struct.hash_table* %43, i8* %44, %struct.stat* %src_sb), !dbg !5010
  br i1 %call58, label %if.then59, label %if.end62, !dbg !5011

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.100, i64 0, i64 0)) #12, !dbg !5012
  %45 = load i8*, i8** %src_name.addr, align 8, !dbg !5014, !tbaa !2993
  %call61 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !5014
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call60, i8* %call61), !dbg !5015
  store i1 true, i1* %retval, align 1, !dbg !5016
  br label %return, !dbg !5016

if.end62:                                         ; preds = %land.lhs.true56, %land.lhs.true54, %if.then51
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5017, !tbaa !2993
  %src_info63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 38, !dbg !5018, !ctir !250
  %47 = load %struct.hash_table*, %struct.hash_table** %src_info63, align 8, !dbg !5018, !tbaa !3511, !ctir !192
  %48 = load i8*, i8** %src_name.addr, align 8, !dbg !5019, !tbaa !2993
  call void @record_file(%struct.hash_table* %47, i8* %48, %struct.stat* %src_sb), !dbg !5020
  br label %if.end64, !dbg !5021

if.end64:                                         ; preds = %if.end62, %land.lhs.true49, %if.end47
  call void @llvm.dbg.declare(metadata i8* %dereference65, metadata !5022, metadata !DIExpression()), !dbg !5023
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5024, !tbaa !2993
  %50 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5025, !tbaa !3104
  %tobool66 = trunc i8 %50 to i1, !dbg !5025
  %call67 = call zeroext i1 @should_dereference(%struct.cp_options* %49, i1 zeroext %tobool66) #14, !dbg !5026
  %frombool68 = zext i1 %call67 to i8, !dbg !5023
  store i8 %frombool68, i8* %dereference65, align 1, !dbg !5023, !tbaa !3104
  %51 = load i8, i8* %new_dst.addr, align 1, !dbg !5027, !tbaa !3104
  %tobool69 = trunc i8 %51 to i1, !dbg !5027
  br i1 %tobool69, label %if.end345, label %if.then70, !dbg !5029

if.then70:                                        ; preds = %if.end64
  %52 = load i32, i32* %rename_errno, align 4, !dbg !5030, !tbaa !2980
  %cmp71 = icmp eq i32 %52, 17, !dbg !5033
  br i1 %cmp71, label %land.lhs.true72, label %if.then75, !dbg !5034

land.lhs.true72:                                  ; preds = %if.then70
  %53 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5035, !tbaa !2993
  %interactive73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %53, i32 0, i32 2, !dbg !5036, !ctir !250
  %54 = load i32, i32* %interactive73, align 8, !dbg !5036, !tbaa !3150, !ctir !80
  %cmp74 = icmp eq i32 %54, 2, !dbg !5037
  br i1 %cmp74, label %if.end122, label %if.then75, !dbg !5038

if.then75:                                        ; preds = %land.lhs.true72, %if.then70
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !5039, metadata !DIExpression()), !dbg !5041
  %55 = load i32, i32* %src_mode, align 4, !dbg !5042, !tbaa !2980
  %and76 = and i32 %55, 61440, !dbg !5042
  %cmp77 = icmp eq i32 %and76, 32768, !dbg !5042
  br i1 %cmp77, label %lor.lhs.false86, label %land.lhs.true78, !dbg !5043

land.lhs.true78:                                  ; preds = %if.then75
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5044, !tbaa !2993
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 5, !dbg !5045, !ctir !250
  %57 = load i8, i8* %copy_as_regular, align 4, !dbg !5045, !tbaa !3382
  %tobool79 = trunc i8 %57 to i1, !dbg !5045, !ctir !117
  br i1 %tobool79, label %lor.lhs.false80, label %lor.end, !dbg !5046

lor.lhs.false80:                                  ; preds = %land.lhs.true78
  %58 = load i32, i32* %src_mode, align 4, !dbg !5047, !tbaa !2980
  %and81 = and i32 %58, 61440, !dbg !5047
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !5047
  br i1 %cmp82, label %lor.end, label %lor.lhs.false83, !dbg !5048

lor.lhs.false83:                                  ; preds = %lor.lhs.false80
  %59 = load i32, i32* %src_mode, align 4, !dbg !5049, !tbaa !2980
  %and84 = and i32 %59, 61440, !dbg !5049
  %cmp85 = icmp eq i32 %and84, 40960, !dbg !5049
  br i1 %cmp85, label %lor.end, label %lor.lhs.false86, !dbg !5050

lor.lhs.false86:                                  ; preds = %lor.lhs.false83, %if.then75
  %60 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5051, !tbaa !2993
  %move_mode87 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %60, i32 0, i32 9, !dbg !5052, !ctir !250
  %61 = load i8, i8* %move_mode87, align 8, !dbg !5052, !tbaa !3409
  %tobool88 = trunc i8 %61 to i1, !dbg !5052, !ctir !117
  br i1 %tobool88, label %lor.end, label %lor.lhs.false89, !dbg !5053

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %62 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5054, !tbaa !2993
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %62, i32 0, i32 29, !dbg !5055, !ctir !250
  %63 = load i8, i8* %symbolic_link, align 4, !dbg !5055, !tbaa !3480
  %tobool90 = trunc i8 %63 to i1, !dbg !5055, !ctir !117
  br i1 %tobool90, label %lor.end, label %lor.lhs.false91, !dbg !5056

lor.lhs.false91:                                  ; preds = %lor.lhs.false89
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5057, !tbaa !2993
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 8, !dbg !5058, !ctir !250
  %65 = load i8, i8* %hard_link, align 1, !dbg !5058, !tbaa !3402
  %tobool92 = trunc i8 %65 to i1, !dbg !5058, !ctir !117
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !5059

lor.lhs.false93:                                  ; preds = %lor.lhs.false91
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5060, !tbaa !2993
  %backup_type94 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 0, !dbg !5061, !ctir !250
  %67 = load i32, i32* %backup_type94, align 8, !dbg !5061, !tbaa !3321, !ctir !65
  %cmp95 = icmp ne i32 %67, 0, !dbg !5062
  br i1 %cmp95, label %lor.end, label %lor.rhs, !dbg !5063

lor.rhs:                                          ; preds = %lor.lhs.false93
  %68 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5064, !tbaa !2993
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 6, !dbg !5065, !ctir !250
  %69 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !5065, !tbaa !3394
  %tobool96 = trunc i8 %69 to i1, !dbg !5065, !ctir !117
  br label %lor.end, !dbg !5063

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false93, %lor.lhs.false91, %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %lor.lhs.false80, %land.lhs.true78
  %70 = phi i1 [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false91 ], [ true, %lor.lhs.false89 ], [ true, %lor.lhs.false86 ], [ true, %lor.lhs.false83 ], [ true, %lor.lhs.false80 ], [ true, %land.lhs.true78 ], [ %tobool96, %lor.rhs ]
  %frombool97 = zext i1 %70 to i8, !dbg !5041
  store i8 %frombool97, i8* %use_lstat, align 1, !dbg !5041, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags98, metadata !5066, metadata !DIExpression()), !dbg !5067
  %71 = load i8, i8* %use_lstat, align 1, !dbg !5068, !tbaa !3104
  %tobool99 = trunc i8 %71 to i1, !dbg !5068
  %72 = zext i1 %tobool99 to i64, !dbg !5068
  %cond100 = select i1 %tobool99, i32 256, i32 0, !dbg !5068
  store i32 %cond100, i32* %fstatat_flags98, align 4, !dbg !5067, !tbaa !2980
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !5069, !tbaa !2993
  %74 = load i32, i32* %fstatat_flags98, align 4, !dbg !5071, !tbaa !2980
  %call101 = call i32 @follow_fstatat(i32 -100, i8* %73, %struct.stat* %dst_sb, i32 %74), !dbg !5072
  %cmp102 = icmp eq i32 %call101, 0, !dbg !5073
  br i1 %cmp102, label %if.then103, label %if.else, !dbg !5074

if.then103:                                       ; preds = %lor.end
  %75 = load i8, i8* %use_lstat, align 1, !dbg !5075, !tbaa !3104
  %tobool104 = trunc i8 %75 to i1, !dbg !5075
  %frombool105 = zext i1 %tobool104 to i8, !dbg !5077
  store i8 %frombool105, i8* %have_dst_lstat, align 1, !dbg !5077, !tbaa !3104
  store i32 17, i32* %rename_errno, align 4, !dbg !5078, !tbaa !2980
  br label %if.end121, !dbg !5079

if.else:                                          ; preds = %lor.end
  %call106 = call i32* @__errno_location() #15, !dbg !5080
  %76 = load i32, i32* %call106, align 4, !dbg !5080, !tbaa !2980, !ctir !5
  %cmp107 = icmp eq i32 %76, 40, !dbg !5083
  br i1 %cmp107, label %land.lhs.true108, label %if.else111, !dbg !5084

land.lhs.true108:                                 ; preds = %if.else
  %77 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5085, !tbaa !2993
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %77, i32 0, i32 7, !dbg !5086, !ctir !250
  %78 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !5086, !tbaa !3398
  %tobool109 = trunc i8 %78 to i1, !dbg !5086, !ctir !117
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !5087

if.then110:                                       ; preds = %land.lhs.true108
  br label %if.end120, !dbg !5087

if.else111:                                       ; preds = %land.lhs.true108, %if.else
  %call112 = call i32* @__errno_location() #15, !dbg !5088
  %79 = load i32, i32* %call112, align 4, !dbg !5088, !tbaa !2980, !ctir !5
  %cmp113 = icmp ne i32 %79, 2, !dbg !5090
  br i1 %cmp113, label %if.then114, label %if.else118, !dbg !5091

if.then114:                                       ; preds = %if.else111
  %call115 = call i32* @__errno_location() #15, !dbg !5092
  %80 = load i32, i32* %call115, align 4, !dbg !5092, !tbaa !2980, !ctir !5
  %call116 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !5094
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !5095, !tbaa !2993
  %call117 = call i8* @quotearg_style(i32 4, i8* %81), !dbg !5095
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* %call116, i8* %call117), !dbg !5096
  store i1 false, i1* %retval, align 1, !dbg !5097
  br label %return, !dbg !5097

if.else118:                                       ; preds = %if.else111
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5098, !tbaa !3104
  br label %if.end119

if.end119:                                        ; preds = %if.else118
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then103
  br label %if.end122, !dbg !5099

if.end122:                                        ; preds = %if.end121, %land.lhs.true72
  %82 = load i32, i32* %rename_errno, align 4, !dbg !5100, !tbaa !2980
  %cmp123 = icmp eq i32 %82, 17, !dbg !5102
  br i1 %cmp123, label %if.then124, label %if.end344, !dbg !5103

if.then124:                                       ; preds = %if.end122
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !5104, metadata !DIExpression()), !dbg !5106
  store i8 0, i8* %return_now, align 1, !dbg !5106, !tbaa !3104
  %83 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5107, !tbaa !2993
  %interactive125 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %83, i32 0, i32 2, !dbg !5109, !ctir !250
  %84 = load i32, i32* %interactive125, align 8, !dbg !5109, !tbaa !3150, !ctir !80
  %cmp126 = icmp ne i32 %84, 2, !dbg !5110
  br i1 %cmp126, label %land.lhs.true127, label %if.end133, !dbg !5111

land.lhs.true127:                                 ; preds = %if.then124
  %85 = load i8*, i8** %src_name.addr, align 8, !dbg !5112, !tbaa !2993
  %86 = load i8*, i8** %dst_name.addr, align 8, !dbg !5113, !tbaa !2993
  %87 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5114, !tbaa !2993
  %call128 = call zeroext i1 @same_file_ok(i8* %85, %struct.stat* %src_sb, i8* %86, %struct.stat* %dst_sb, %struct.cp_options* %87, i8* %return_now), !dbg !5115
  br i1 %call128, label %if.end133, label %if.then129, !dbg !5116

if.then129:                                       ; preds = %land.lhs.true127
  %call130 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.101, i64 0, i64 0)) #12, !dbg !5117
  %88 = load i8*, i8** %src_name.addr, align 8, !dbg !5119, !tbaa !2993
  %call131 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %88), !dbg !5119
  %89 = load i8*, i8** %dst_name.addr, align 8, !dbg !5120, !tbaa !2993
  %call132 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %89), !dbg !5120
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call130, i8* %call131, i8* %call132), !dbg !5121
  store i1 false, i1* %retval, align 1, !dbg !5122
  br label %return, !dbg !5122

if.end133:                                        ; preds = %land.lhs.true127, %if.then124
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5123, !tbaa !2993
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 30, !dbg !5125, !ctir !250
  %91 = load i8, i8* %update, align 1, !dbg !5125, !tbaa !3189
  %tobool134 = trunc i8 %91 to i1, !dbg !5125, !ctir !117
  br i1 %tobool134, label %land.lhs.true135, label %if.end164, !dbg !5126

land.lhs.true135:                                 ; preds = %if.end133
  %92 = load i32, i32* %src_mode, align 4, !dbg !5127, !tbaa !2980
  %and136 = and i32 %92, 61440, !dbg !5127
  %cmp137 = icmp eq i32 %and136, 16384, !dbg !5127
  br i1 %cmp137, label %if.end164, label %if.then138, !dbg !5128

if.then138:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.declare(metadata i32* %options, metadata !5129, metadata !DIExpression()), !dbg !5131
  %93 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5132, !tbaa !2993
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %93, i32 0, i32 16, !dbg !5133, !ctir !250
  %94 = load i8, i8* %preserve_timestamps, align 1, !dbg !5133, !tbaa !3433
  %tobool139 = trunc i8 %94 to i1, !dbg !5133, !ctir !117
  br i1 %tobool139, label %land.rhs, label %land.end145, !dbg !5134

land.rhs:                                         ; preds = %if.then138
  %95 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5135, !tbaa !2993
  %move_mode140 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %95, i32 0, i32 9, !dbg !5136, !ctir !250
  %96 = load i8, i8* %move_mode140, align 8, !dbg !5136, !tbaa !3409
  %tobool141 = trunc i8 %96 to i1, !dbg !5136, !ctir !117
  br i1 %tobool141, label %land.rhs142, label %land.end, !dbg !5137

land.rhs142:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5138, !ctir !314
  %97 = load i64, i64* %st_dev, align 8, !dbg !5138, !tbaa !3862, !ctir !228
  %st_dev143 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5139, !ctir !314
  %98 = load i64, i64* %st_dev143, align 8, !dbg !5139, !tbaa !3862, !ctir !228
  %cmp144 = icmp eq i64 %97, %98, !dbg !5140
  br label %land.end

land.end:                                         ; preds = %land.rhs142, %land.rhs
  %99 = phi i1 [ false, %land.rhs ], [ %cmp144, %land.rhs142 ], !dbg !5141
  %lnot = xor i1 %99, true, !dbg !5142
  br label %land.end145

land.end145:                                      ; preds = %land.end, %if.then138
  %100 = phi i1 [ false, %if.then138 ], [ %lnot, %land.end ], !dbg !5141
  %101 = zext i1 %100 to i64, !dbg !5143
  %cond146 = select i1 %100, i32 1, i32 0, !dbg !5143
  store i32 %cond146, i32* %options, align 4, !dbg !5131, !tbaa !2980
  %102 = load i8*, i8** %dst_name.addr, align 8, !dbg !5144, !tbaa !2993
  %103 = load i32, i32* %options, align 4, !dbg !5146, !tbaa !2980
  %call147 = call i32 @utimecmp(i8* %102, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %103), !dbg !5147
  %cmp148 = icmp sle i32 0, %call147, !dbg !5148
  br i1 %cmp148, label %if.then149, label %if.end163, !dbg !5149

if.then149:                                       ; preds = %land.end145
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5150, !tbaa !2993
  %tobool150 = icmp ne i8* %104, null, !dbg !5150
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !5153

if.then151:                                       ; preds = %if.then149
  %105 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5154, !tbaa !2993
  store i8 1, i8* %105, align 1, !dbg !5155, !tbaa !3104, !ctir !117
  br label %if.end152, !dbg !5156

if.end152:                                        ; preds = %if.then151, %if.then149
  %106 = load i8*, i8** %dst_name.addr, align 8, !dbg !5157, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5158, !ctir !314
  %107 = load i64, i64* %st_ino, align 8, !dbg !5158, !tbaa !3859, !ctir !225
  %st_dev153 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5159, !ctir !314
  %108 = load i64, i64* %st_dev153, align 8, !dbg !5159, !tbaa !3862, !ctir !228
  %call154 = call i8* @remember_copied(i8* %106, i64 %107, i64 %108), !dbg !5160
  store i8* %call154, i8** %earlier_file, align 8, !dbg !5161, !tbaa !2993
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !5162, !tbaa !2993
  %tobool155 = icmp ne i8* %109, null, !dbg !5162
  br i1 %tobool155, label %if.then156, label %if.end162, !dbg !5164

if.then156:                                       ; preds = %if.end152
  %110 = load i8*, i8** %earlier_file, align 8, !dbg !5165, !tbaa !2993
  %111 = load i8*, i8** %dst_name.addr, align 8, !dbg !5168, !tbaa !2993
  %112 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5169, !tbaa !2993
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %112, i32 0, i32 31, !dbg !5170, !ctir !250
  %113 = load i8, i8* %verbose, align 2, !dbg !5170, !tbaa !3193
  %tobool157 = trunc i8 %113 to i1, !dbg !5170, !ctir !117
  %114 = load i8, i8* %dereference65, align 1, !dbg !5171, !tbaa !3104
  %tobool158 = trunc i8 %114 to i1, !dbg !5171
  %call159 = call zeroext i1 @create_hard_link(i8* %110, i8* %111, i1 zeroext true, i1 zeroext %tobool157, i1 zeroext %tobool158), !dbg !5172
  br i1 %call159, label %if.end161, label %if.then160, !dbg !5173

if.then160:                                       ; preds = %if.then156
  br label %un_backup, !dbg !5174

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !5176

if.end162:                                        ; preds = %if.end161, %if.end152
  store i1 true, i1* %retval, align 1, !dbg !5177
  br label %return, !dbg !5177

if.end163:                                        ; preds = %land.end145
  br label %if.end164, !dbg !5178

if.end164:                                        ; preds = %if.end163, %land.lhs.true135, %if.end133
  %115 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5179, !tbaa !2993
  %move_mode165 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %115, i32 0, i32 9, !dbg !5181, !ctir !250
  %116 = load i8, i8* %move_mode165, align 8, !dbg !5181, !tbaa !3409
  %tobool166 = trunc i8 %116 to i1, !dbg !5181, !ctir !117
  br i1 %tobool166, label %if.then167, label %if.else174, !dbg !5182

if.then167:                                       ; preds = %if.end164
  %117 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5183, !tbaa !2993
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !5186, !tbaa !2993
  %call168 = call zeroext i1 @abandon_move(%struct.cp_options* %117, i8* %118, %struct.stat* %dst_sb), !dbg !5187
  br i1 %call168, label %if.then169, label %if.end173, !dbg !5188

if.then169:                                       ; preds = %if.then167
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5189, !tbaa !2993
  %tobool170 = icmp ne i8* %119, null, !dbg !5189
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !5192

if.then171:                                       ; preds = %if.then169
  %120 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5193, !tbaa !2993
  store i8 1, i8* %120, align 1, !dbg !5194, !tbaa !3104, !ctir !117
  br label %if.end172, !dbg !5195

if.end172:                                        ; preds = %if.then171, %if.then169
  store i1 true, i1* %retval, align 1, !dbg !5196
  br label %return, !dbg !5196

if.end173:                                        ; preds = %if.then167
  br label %if.end187, !dbg !5197

if.else174:                                       ; preds = %if.end164
  %121 = load i32, i32* %src_mode, align 4, !dbg !5198, !tbaa !2980
  %and175 = and i32 %121, 61440, !dbg !5198
  %cmp176 = icmp eq i32 %and175, 16384, !dbg !5198
  br i1 %cmp176, label %if.end186, label %land.lhs.true177, !dbg !5201

land.lhs.true177:                                 ; preds = %if.else174
  %122 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5202, !tbaa !2993
  %interactive178 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %122, i32 0, i32 2, !dbg !5203, !ctir !250
  %123 = load i32, i32* %interactive178, align 8, !dbg !5203, !tbaa !3150, !ctir !80
  %cmp179 = icmp eq i32 %123, 2, !dbg !5204
  br i1 %cmp179, label %if.then185, label %lor.lhs.false180, !dbg !5205

lor.lhs.false180:                                 ; preds = %land.lhs.true177
  %124 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5206, !tbaa !2993
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %124, i32 0, i32 2, !dbg !5207, !ctir !250
  %125 = load i32, i32* %interactive181, align 8, !dbg !5207, !tbaa !3150, !ctir !80
  %cmp182 = icmp eq i32 %125, 3, !dbg !5208
  br i1 %cmp182, label %land.lhs.true183, label %if.end186, !dbg !5209

land.lhs.true183:                                 ; preds = %lor.lhs.false180
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5210, !tbaa !2993
  %127 = load i8*, i8** %dst_name.addr, align 8, !dbg !5211, !tbaa !2993
  %call184 = call zeroext i1 @overwrite_ok(%struct.cp_options* %126, i8* %127, %struct.stat* %dst_sb), !dbg !5212
  br i1 %call184, label %if.end186, label %if.then185, !dbg !5213

if.then185:                                       ; preds = %land.lhs.true183, %land.lhs.true177
  store i1 true, i1* %retval, align 1, !dbg !5214
  br label %return, !dbg !5214

if.end186:                                        ; preds = %land.lhs.true183, %lor.lhs.false180, %if.else174
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end173
  %128 = load i8, i8* %return_now, align 1, !dbg !5215, !tbaa !3104
  %tobool188 = trunc i8 %128 to i1, !dbg !5215
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !5217

if.then189:                                       ; preds = %if.end187
  store i1 true, i1* %retval, align 1, !dbg !5218
  br label %return, !dbg !5218

if.end190:                                        ; preds = %if.end187
  %st_mode191 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5219, !ctir !314
  %129 = load i32, i32* %st_mode191, align 8, !dbg !5219, !tbaa !3176, !ctir !130
  %and192 = and i32 %129, 61440, !dbg !5219
  %cmp193 = icmp eq i32 %and192, 16384, !dbg !5219
  br i1 %cmp193, label %if.end221, label %if.then194, !dbg !5221

if.then194:                                       ; preds = %if.end190
  %130 = load i32, i32* %src_mode, align 4, !dbg !5222, !tbaa !2980
  %and195 = and i32 %130, 61440, !dbg !5222
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !5222
  br i1 %cmp196, label %if.then197, label %if.end209, !dbg !5225

if.then197:                                       ; preds = %if.then194
  %131 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5226, !tbaa !2993
  %move_mode198 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %131, i32 0, i32 9, !dbg !5229, !ctir !250
  %132 = load i8, i8* %move_mode198, align 8, !dbg !5229, !tbaa !3409
  %tobool199 = trunc i8 %132 to i1, !dbg !5229, !ctir !117
  br i1 %tobool199, label %land.lhs.true200, label %if.else204, !dbg !5230

land.lhs.true200:                                 ; preds = %if.then197
  %133 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5231, !tbaa !2993
  %backup_type201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %133, i32 0, i32 0, !dbg !5232, !ctir !250
  %134 = load i32, i32* %backup_type201, align 8, !dbg !5232, !tbaa !3321, !ctir !65
  %cmp202 = icmp ne i32 %134, 0, !dbg !5233
  br i1 %cmp202, label %if.then203, label %if.else204, !dbg !5234

if.then203:                                       ; preds = %land.lhs.true200
  br label %if.end208, !dbg !5235

if.else204:                                       ; preds = %land.lhs.true200, %if.then197
  %call205 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.102, i64 0, i64 0)) #12, !dbg !5237
  %135 = load i8*, i8** %dst_name.addr, align 8, !dbg !5239, !tbaa !2993
  %call206 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %135), !dbg !5239
  %136 = load i8*, i8** %src_name.addr, align 8, !dbg !5240, !tbaa !2993
  %call207 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %136), !dbg !5240
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call205, i8* %call206, i8* %call207), !dbg !5241
  store i1 false, i1* %retval, align 1, !dbg !5242
  br label %return, !dbg !5242

if.end208:                                        ; preds = %if.then203
  br label %if.end209, !dbg !5243

if.end209:                                        ; preds = %if.end208, %if.then194
  %137 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5244, !tbaa !3104
  %tobool210 = trunc i8 %137 to i1, !dbg !5244
  br i1 %tobool210, label %land.lhs.true211, label %if.end220, !dbg !5246

land.lhs.true211:                                 ; preds = %if.end209
  %138 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5247, !tbaa !2993
  %backup_type212 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %138, i32 0, i32 0, !dbg !5248, !ctir !250
  %139 = load i32, i32* %backup_type212, align 8, !dbg !5248, !tbaa !3321, !ctir !65
  %cmp213 = icmp ne i32 %139, 3, !dbg !5249
  br i1 %cmp213, label %land.lhs.true214, label %if.end220, !dbg !5250

land.lhs.true214:                                 ; preds = %land.lhs.true211
  %140 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5251, !tbaa !2993
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %140, i32 0, i32 37, !dbg !5252, !ctir !250
  %141 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !5252, !tbaa !3507, !ctir !192
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !5253, !tbaa !2993
  %call215 = call zeroext i1 @seen_file(%struct.hash_table* %141, i8* %142, %struct.stat* %dst_sb), !dbg !5254
  br i1 %call215, label %if.then216, label %if.end220, !dbg !5255

if.then216:                                       ; preds = %land.lhs.true214
  %call217 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.103, i64 0, i64 0)) #12, !dbg !5256
  %143 = load i8*, i8** %dst_name.addr, align 8, !dbg !5258, !tbaa !2993
  %call218 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %143), !dbg !5258
  %144 = load i8*, i8** %src_name.addr, align 8, !dbg !5259, !tbaa !2993
  %call219 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %144), !dbg !5259
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call217, i8* %call218, i8* %call219), !dbg !5260
  store i1 false, i1* %retval, align 1, !dbg !5261
  br label %return, !dbg !5261

if.end220:                                        ; preds = %land.lhs.true214, %land.lhs.true211, %if.end209
  br label %if.end221, !dbg !5262

if.end221:                                        ; preds = %if.end220, %if.end190
  %145 = load i32, i32* %src_mode, align 4, !dbg !5263, !tbaa !2980
  %and222 = and i32 %145, 61440, !dbg !5263
  %cmp223 = icmp eq i32 %and222, 16384, !dbg !5263
  br i1 %cmp223, label %if.end240, label %if.then224, !dbg !5265

if.then224:                                       ; preds = %if.end221
  %st_mode225 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5266, !ctir !314
  %146 = load i32, i32* %st_mode225, align 8, !dbg !5266, !tbaa !3176, !ctir !130
  %and226 = and i32 %146, 61440, !dbg !5266
  %cmp227 = icmp eq i32 %and226, 16384, !dbg !5266
  br i1 %cmp227, label %if.then228, label %if.end239, !dbg !5269

if.then228:                                       ; preds = %if.then224
  %147 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5270, !tbaa !2993
  %move_mode229 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %147, i32 0, i32 9, !dbg !5273, !ctir !250
  %148 = load i8, i8* %move_mode229, align 8, !dbg !5273, !tbaa !3409
  %tobool230 = trunc i8 %148 to i1, !dbg !5273, !ctir !117
  br i1 %tobool230, label %land.lhs.true231, label %if.else235, !dbg !5274

land.lhs.true231:                                 ; preds = %if.then228
  %149 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5275, !tbaa !2993
  %backup_type232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %149, i32 0, i32 0, !dbg !5276, !ctir !250
  %150 = load i32, i32* %backup_type232, align 8, !dbg !5276, !tbaa !3321, !ctir !65
  %cmp233 = icmp ne i32 %150, 0, !dbg !5277
  br i1 %cmp233, label %if.then234, label %if.else235, !dbg !5278

if.then234:                                       ; preds = %land.lhs.true231
  br label %if.end238, !dbg !5279

if.else235:                                       ; preds = %land.lhs.true231, %if.then228
  %call236 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.104, i64 0, i64 0)) #12, !dbg !5281
  %151 = load i8*, i8** %dst_name.addr, align 8, !dbg !5283, !tbaa !2993
  %call237 = call i8* @quotearg_style(i32 4, i8* %151), !dbg !5283
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call236, i8* %call237), !dbg !5284
  store i1 false, i1* %retval, align 1, !dbg !5285
  br label %return, !dbg !5285

if.end238:                                        ; preds = %if.then234
  br label %if.end239, !dbg !5286

if.end239:                                        ; preds = %if.end238, %if.then224
  br label %if.end240, !dbg !5287

if.end240:                                        ; preds = %if.end239, %if.end221
  %152 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5288, !tbaa !2993
  %move_mode241 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %152, i32 0, i32 9, !dbg !5290, !ctir !250
  %153 = load i8, i8* %move_mode241, align 8, !dbg !5290, !tbaa !3409
  %tobool242 = trunc i8 %153 to i1, !dbg !5290, !ctir !117
  br i1 %tobool242, label %if.then243, label %if.end259, !dbg !5291

if.then243:                                       ; preds = %if.end240
  %st_mode244 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5292, !ctir !314
  %154 = load i32, i32* %st_mode244, align 8, !dbg !5292, !tbaa !3176, !ctir !130
  %and245 = and i32 %154, 61440, !dbg !5292
  %cmp246 = icmp eq i32 %and245, 16384, !dbg !5292
  br i1 %cmp246, label %land.lhs.true247, label %if.end258, !dbg !5295

land.lhs.true247:                                 ; preds = %if.then243
  %st_mode248 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5296, !ctir !314
  %155 = load i32, i32* %st_mode248, align 8, !dbg !5296, !tbaa !3176, !ctir !130
  %and249 = and i32 %155, 61440, !dbg !5296
  %cmp250 = icmp eq i32 %and249, 16384, !dbg !5296
  br i1 %cmp250, label %if.end258, label %land.lhs.true251, !dbg !5297

land.lhs.true251:                                 ; preds = %land.lhs.true247
  %156 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5298, !tbaa !2993
  %backup_type252 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %156, i32 0, i32 0, !dbg !5299, !ctir !250
  %157 = load i32, i32* %backup_type252, align 8, !dbg !5299, !tbaa !3321, !ctir !65
  %cmp253 = icmp eq i32 %157, 0, !dbg !5300
  br i1 %cmp253, label %if.then254, label %if.end258, !dbg !5301

if.then254:                                       ; preds = %land.lhs.true251
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.105, i64 0, i64 0)) #12, !dbg !5302
  %158 = load i8*, i8** %src_name.addr, align 8, !dbg !5304, !tbaa !2993
  %call256 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !5304
  %159 = load i8*, i8** %dst_name.addr, align 8, !dbg !5305, !tbaa !2993
  %call257 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %159), !dbg !5305
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255, i8* %call256, i8* %call257), !dbg !5306
  store i1 false, i1* %retval, align 1, !dbg !5307
  br label %return, !dbg !5307

if.end258:                                        ; preds = %land.lhs.true251, %land.lhs.true247, %if.then243
  br label %if.end259, !dbg !5308

if.end259:                                        ; preds = %if.end258, %if.end240
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !5309, metadata !DIExpression()), !dbg !5310
  %160 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5311, !tbaa !2993
  %backup_type260 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %160, i32 0, i32 0, !dbg !5313, !ctir !250
  %161 = load i32, i32* %backup_type260, align 8, !dbg !5313, !tbaa !3321, !ctir !65
  %cmp261 = icmp ne i32 %161, 0, !dbg !5314
  br i1 %cmp261, label %land.lhs.true262, label %if.else303, !dbg !5315

land.lhs.true262:                                 ; preds = %if.end259
  %162 = load i8*, i8** %src_name.addr, align 8, !dbg !5316, !tbaa !2993
  %call263 = call i8* @last_component(i8* %162) #14, !dbg !5317
  store i8* %call263, i8** %srcbase, align 8, !dbg !5318, !tbaa !2993
  %call264 = call zeroext i1 @dot_or_dotdot.106(i8* %call263), !dbg !5319
  br i1 %call264, label %if.else303, label %land.lhs.true265, !dbg !5320

land.lhs.true265:                                 ; preds = %land.lhs.true262
  %163 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5321, !tbaa !2993
  %move_mode266 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %163, i32 0, i32 9, !dbg !5322, !ctir !250
  %164 = load i8, i8* %move_mode266, align 8, !dbg !5322, !tbaa !3409
  %tobool267 = trunc i8 %164 to i1, !dbg !5322, !ctir !117
  br i1 %tobool267, label %if.then272, label %lor.lhs.false268, !dbg !5323

lor.lhs.false268:                                 ; preds = %land.lhs.true265
  %st_mode269 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5324, !ctir !314
  %165 = load i32, i32* %st_mode269, align 8, !dbg !5324, !tbaa !3176, !ctir !130
  %and270 = and i32 %165, 61440, !dbg !5324
  %cmp271 = icmp eq i32 %and270, 16384, !dbg !5324
  br i1 %cmp271, label %if.else303, label %if.then272, !dbg !5325

if.then272:                                       ; preds = %lor.lhs.false268, %land.lhs.true265
  %166 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5326, !tbaa !2993
  %backup_type273 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %166, i32 0, i32 0, !dbg !5329, !ctir !250
  %167 = load i32, i32* %backup_type273, align 8, !dbg !5329, !tbaa !3321, !ctir !65
  %cmp274 = icmp ne i32 %167, 3, !dbg !5330
  br i1 %cmp274, label %land.lhs.true275, label %if.end288, !dbg !5331

land.lhs.true275:                                 ; preds = %if.then272
  %168 = load i8*, i8** %srcbase, align 8, !dbg !5332, !tbaa !2993
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !5333, !tbaa !2993
  %call276 = call zeroext i1 @source_is_dst_backup(i8* %168, %struct.stat* %src_sb, i8* %169), !dbg !5334
  br i1 %call276, label %if.then277, label %if.end288, !dbg !5335

if.then277:                                       ; preds = %land.lhs.true275
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !5336, metadata !DIExpression()), !dbg !5338
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5339, !tbaa !2993
  %move_mode278 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 9, !dbg !5340, !ctir !250
  %171 = load i8, i8* %move_mode278, align 8, !dbg !5340, !tbaa !3409
  %tobool279 = trunc i8 %171 to i1, !dbg !5340, !ctir !117
  br i1 %tobool279, label %cond.true280, label %cond.false282, !dbg !5339

cond.true280:                                     ; preds = %if.then277
  %call281 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.107, i64 0, i64 0)) #12, !dbg !5341
  br label %cond.end284, !dbg !5339

cond.false282:                                    ; preds = %if.then277
  %call283 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.108, i64 0, i64 0)) #12, !dbg !5342
  br label %cond.end284, !dbg !5339

cond.end284:                                      ; preds = %cond.false282, %cond.true280
  %cond285 = phi i8* [ %call281, %cond.true280 ], [ %call283, %cond.false282 ], !dbg !5339
  store i8* %cond285, i8** %fmt, align 8, !dbg !5343, !tbaa !2993
  %172 = load i8*, i8** %fmt, align 8, !dbg !5344, !tbaa !2993
  %173 = load i8*, i8** %dst_name.addr, align 8, !dbg !5345, !tbaa !2993
  %call286 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %173), !dbg !5345
  %174 = load i8*, i8** %src_name.addr, align 8, !dbg !5346, !tbaa !2993
  %call287 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %174), !dbg !5346
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %172, i8* %call286, i8* %call287), !dbg !5347
  store i1 false, i1* %retval, align 1, !dbg !5348
  br label %return, !dbg !5348

if.end288:                                        ; preds = %land.lhs.true275, %if.then272
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !5349, metadata !DIExpression()), !dbg !5350
  %175 = load i8*, i8** %dst_name.addr, align 8, !dbg !5351, !tbaa !2993
  %176 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5352, !tbaa !2993
  %backup_type289 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %176, i32 0, i32 0, !dbg !5353, !ctir !250
  %177 = load i32, i32* %backup_type289, align 8, !dbg !5353, !tbaa !3321, !ctir !65
  %call290 = call i8* @backup_file_rename(i32 -100, i8* %175, i32 %177), !dbg !5354
  store i8* %call290, i8** %tmp_backup, align 8, !dbg !5350, !tbaa !2993
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !5355, !tbaa !2993
  %tobool291 = icmp ne i8* %178, null, !dbg !5355
  br i1 %tobool291, label %if.then292, label %if.else294, !dbg !5357

if.then292:                                       ; preds = %if.end288
  br label %do.body, !dbg !5358

do.body:                                          ; preds = %if.then292
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !5360, metadata !DIExpression()), !dbg !5363
  %179 = load i8*, i8** %tmp_backup, align 8, !dbg !5363, !tbaa !2993
  store i8* %179, i8** %__old, align 8, !dbg !5363, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !5364, metadata !DIExpression()), !dbg !5363
  %180 = load i8*, i8** %__old, align 8, !dbg !5363, !tbaa !2993
  %call293 = call i64 @strlen(i8* %180) #14, !dbg !5363
  %add = add i64 %call293, 1, !dbg !5363
  store i64 %add, i64* %__len, align 8, !dbg !5363, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !5365, metadata !DIExpression()), !dbg !5363
  %181 = load i64, i64* %__len, align 8, !dbg !5363, !tbaa !3837
  %182 = alloca i8, i64 %181, align 16, !dbg !5363
  store i8* %182, i8** %__new, align 8, !dbg !5363, !tbaa !2993
  %183 = load i8*, i8** %__new, align 8, !dbg !5363, !tbaa !2993
  %184 = load i8*, i8** %__old, align 8, !dbg !5363, !tbaa !2993
  %185 = load i64, i64* %__len, align 8, !dbg !5363, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 %185, i1 false), !dbg !5363
  store i8* %183, i8** %tmp, align 8, !dbg !5363, !tbaa !2993
  %186 = load i8*, i8** %tmp, align 8, !dbg !5363, !tbaa !2993
  store i8* %186, i8** %dst_backup, align 8, !dbg !5366, !tbaa !2993
  br label %do.end, !dbg !5366

do.end:                                           ; preds = %do.body
  %187 = load i8*, i8** %tmp_backup, align 8, !dbg !5367, !tbaa !2993
  call void @free(i8* %187) #12, !dbg !5368
  br label %if.end302, !dbg !5369

if.else294:                                       ; preds = %if.end288
  %call295 = call i32* @__errno_location() #15, !dbg !5370
  %188 = load i32, i32* %call295, align 4, !dbg !5370, !tbaa !2980, !ctir !5
  %cmp296 = icmp ne i32 %188, 2, !dbg !5372
  br i1 %cmp296, label %if.then297, label %if.end301, !dbg !5373

if.then297:                                       ; preds = %if.else294
  %call298 = call i32* @__errno_location() #15, !dbg !5374
  %189 = load i32, i32* %call298, align 4, !dbg !5374, !tbaa !2980, !ctir !5
  %call299 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.109, i64 0, i64 0)) #12, !dbg !5376
  %190 = load i8*, i8** %dst_name.addr, align 8, !dbg !5377, !tbaa !2993
  %call300 = call i8* @quotearg_style(i32 4, i8* %190), !dbg !5377
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* %call299, i8* %call300), !dbg !5378
  store i1 false, i1* %retval, align 1, !dbg !5379
  br label %return, !dbg !5379

if.end301:                                        ; preds = %if.else294
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5380, !tbaa !3104
  br label %if.end343, !dbg !5381

if.else303:                                       ; preds = %lor.lhs.false268, %land.lhs.true262, %if.end259
  %st_mode304 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5382, !ctir !314
  %191 = load i32, i32* %st_mode304, align 8, !dbg !5382, !tbaa !3176, !ctir !130
  %and305 = and i32 %191, 61440, !dbg !5382
  %cmp306 = icmp eq i32 %and305, 16384, !dbg !5382
  br i1 %cmp306, label %if.end342, label %land.lhs.true307, !dbg !5384

land.lhs.true307:                                 ; preds = %if.else303
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5385, !tbaa !2993
  %move_mode308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 9, !dbg !5386, !ctir !250
  %193 = load i8, i8* %move_mode308, align 8, !dbg !5386, !tbaa !3409
  %tobool309 = trunc i8 %193 to i1, !dbg !5386, !ctir !117
  br i1 %tobool309, label %if.end342, label %land.lhs.true310, !dbg !5387

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5388, !tbaa !2993
  %unlink_dest_before_opening311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 6, !dbg !5389, !ctir !250
  %195 = load i8, i8* %unlink_dest_before_opening311, align 1, !dbg !5389, !tbaa !3394
  %tobool312 = trunc i8 %195 to i1, !dbg !5389, !ctir !117
  br i1 %tobool312, label %if.then324, label %lor.lhs.false313, !dbg !5390

lor.lhs.false313:                                 ; preds = %land.lhs.true310
  %196 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5391, !tbaa !2993
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %196, i32 0, i32 19, !dbg !5392, !ctir !250
  %197 = load i8, i8* %preserve_links, align 2, !dbg !5392, !tbaa !3425
  %tobool314 = trunc i8 %197 to i1, !dbg !5392, !ctir !117
  br i1 %tobool314, label %land.lhs.true315, label %lor.lhs.false317, !dbg !5393

land.lhs.true315:                                 ; preds = %lor.lhs.false313
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !5394, !ctir !314
  %198 = load i64, i64* %st_nlink, align 8, !dbg !5394, !tbaa !5395, !ctir !320
  %cmp316 = icmp ult i64 1, %198, !dbg !5396
  br i1 %cmp316, label %if.then324, label %lor.lhs.false317, !dbg !5397

lor.lhs.false317:                                 ; preds = %land.lhs.true315, %lor.lhs.false313
  %199 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5398, !tbaa !2993
  %dereference318 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %199, i32 0, i32 1, !dbg !5399, !ctir !250
  %200 = load i32, i32* %dereference318, align 4, !dbg !5399, !tbaa !3390, !ctir !73
  %cmp319 = icmp eq i32 %200, 2, !dbg !5400
  br i1 %cmp319, label %land.lhs.true320, label %if.end342, !dbg !5401

land.lhs.true320:                                 ; preds = %lor.lhs.false317
  %st_mode321 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5402, !ctir !314
  %201 = load i32, i32* %st_mode321, align 8, !dbg !5402, !tbaa !3176, !ctir !130
  %and322 = and i32 %201, 61440, !dbg !5402
  %cmp323 = icmp eq i32 %and322, 32768, !dbg !5402
  br i1 %cmp323, label %if.end342, label %if.then324, !dbg !5403

if.then324:                                       ; preds = %land.lhs.true320, %land.lhs.true315, %land.lhs.true310
  %202 = load i8*, i8** %dst_name.addr, align 8, !dbg !5404, !tbaa !2993
  %call325 = call i32 @unlink(i8* %202) #12, !dbg !5407
  %cmp326 = icmp ne i32 %call325, 0, !dbg !5408
  br i1 %cmp326, label %land.lhs.true327, label %if.end334, !dbg !5409

land.lhs.true327:                                 ; preds = %if.then324
  %call328 = call i32* @__errno_location() #15, !dbg !5410
  %203 = load i32, i32* %call328, align 4, !dbg !5410, !tbaa !2980, !ctir !5
  %cmp329 = icmp ne i32 %203, 2, !dbg !5411
  br i1 %cmp329, label %if.then330, label %if.end334, !dbg !5412

if.then330:                                       ; preds = %land.lhs.true327
  %call331 = call i32* @__errno_location() #15, !dbg !5413
  %204 = load i32, i32* %call331, align 4, !dbg !5413, !tbaa !2980, !ctir !5
  %call332 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #12, !dbg !5415
  %205 = load i8*, i8** %dst_name.addr, align 8, !dbg !5416, !tbaa !2993
  %call333 = call i8* @quotearg_style(i32 4, i8* %205), !dbg !5416
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %204, i8* %call332, i8* %call333), !dbg !5417
  store i1 false, i1* %retval, align 1, !dbg !5418
  br label %return, !dbg !5418

if.end334:                                        ; preds = %land.lhs.true327, %if.then324
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5419, !tbaa !3104
  %206 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5420, !tbaa !2993
  %verbose335 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %206, i32 0, i32 31, !dbg !5422, !ctir !250
  %207 = load i8, i8* %verbose335, align 2, !dbg !5422, !tbaa !3193
  %tobool336 = trunc i8 %207 to i1, !dbg !5422, !ctir !117
  br i1 %tobool336, label %if.then337, label %if.end341, !dbg !5423

if.then337:                                       ; preds = %if.end334
  %call338 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #12, !dbg !5424
  %208 = load i8*, i8** %dst_name.addr, align 8, !dbg !5425, !tbaa !2993
  %call339 = call i8* @quotearg_style(i32 4, i8* %208), !dbg !5425
  %call340 = call i32 (i8*, ...) @printf(i8* %call338, i8* %call339), !dbg !5426
  br label %if.end341, !dbg !5426

if.end341:                                        ; preds = %if.then337, %if.end334
  br label %if.end342, !dbg !5427

if.end342:                                        ; preds = %if.end341, %land.lhs.true320, %lor.lhs.false317, %land.lhs.true307, %if.else303
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end302
  br label %if.end344, !dbg !5428

if.end344:                                        ; preds = %if.end343, %if.end122
  br label %if.end345, !dbg !5429

if.end345:                                        ; preds = %if.end344, %if.end64
  %209 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5430, !tbaa !3104
  %tobool346 = trunc i8 %209 to i1, !dbg !5430
  br i1 %tobool346, label %land.lhs.true347, label %if.end379, !dbg !5432

land.lhs.true347:                                 ; preds = %if.end345
  %210 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5433, !tbaa !2993
  %dest_info348 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %210, i32 0, i32 37, !dbg !5434, !ctir !250
  %211 = load %struct.hash_table*, %struct.hash_table** %dest_info348, align 8, !dbg !5434, !tbaa !3507, !ctir !192
  %tobool349 = icmp ne %struct.hash_table* %211, null, !dbg !5433
  br i1 %tobool349, label %land.lhs.true350, label %if.end379, !dbg !5435

land.lhs.true350:                                 ; preds = %land.lhs.true347
  %212 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5436, !tbaa !2993
  %move_mode351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %212, i32 0, i32 9, !dbg !5437, !ctir !250
  %213 = load i8, i8* %move_mode351, align 8, !dbg !5437, !tbaa !3409
  %tobool352 = trunc i8 %213 to i1, !dbg !5437, !ctir !117
  br i1 %tobool352, label %if.end379, label %land.lhs.true353, !dbg !5438

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %214 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5439, !tbaa !2993
  %backup_type354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %214, i32 0, i32 0, !dbg !5440, !ctir !250
  %215 = load i32, i32* %backup_type354, align 8, !dbg !5440, !tbaa !3321, !ctir !65
  %cmp355 = icmp eq i32 %215, 0, !dbg !5441
  br i1 %cmp355, label %if.then356, label %if.end379, !dbg !5442

if.then356:                                       ; preds = %land.lhs.true353
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !5443, metadata !DIExpression()), !dbg !5445
  store i8 1, i8* %lstat_ok, align 1, !dbg !5445, !tbaa !3104
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !5446, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !5448, metadata !DIExpression()), !dbg !5449
  %216 = load i8, i8* %have_dst_lstat, align 1, !dbg !5450, !tbaa !3104
  %tobool357 = trunc i8 %216 to i1, !dbg !5450
  br i1 %tobool357, label %if.then358, label %if.else359, !dbg !5452

if.then358:                                       ; preds = %if.then356
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !5453, !tbaa !2993
  br label %if.end365, !dbg !5454

if.else359:                                       ; preds = %if.then356
  %217 = load i8*, i8** %dst_name.addr, align 8, !dbg !5455, !tbaa !2993
  %call360 = call i32 @lstat(i8* %217, %struct.stat* %tmp_buf) #12, !dbg !5458
  %cmp361 = icmp eq i32 %call360, 0, !dbg !5459
  br i1 %cmp361, label %if.then362, label %if.else363, !dbg !5460

if.then362:                                       ; preds = %if.else359
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !5461, !tbaa !2993
  br label %if.end364, !dbg !5462

if.else363:                                       ; preds = %if.else359
  store i8 0, i8* %lstat_ok, align 1, !dbg !5463, !tbaa !3104
  br label %if.end364

if.end364:                                        ; preds = %if.else363, %if.then362
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.then358
  %218 = load i8, i8* %lstat_ok, align 1, !dbg !5464, !tbaa !3104
  %tobool366 = trunc i8 %218 to i1, !dbg !5464
  br i1 %tobool366, label %land.lhs.true367, label %if.end378, !dbg !5466

land.lhs.true367:                                 ; preds = %if.end365
  %219 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5467, !tbaa !2993
  %st_mode368 = getelementptr inbounds %struct.stat, %struct.stat* %219, i32 0, i32 3, !dbg !5467, !ctir !314
  %220 = load i32, i32* %st_mode368, align 8, !dbg !5467, !tbaa !3176, !ctir !130
  %and369 = and i32 %220, 61440, !dbg !5467
  %cmp370 = icmp eq i32 %and369, 40960, !dbg !5467
  br i1 %cmp370, label %land.lhs.true371, label %if.end378, !dbg !5468

land.lhs.true371:                                 ; preds = %land.lhs.true367
  %221 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5469, !tbaa !2993
  %dest_info372 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %221, i32 0, i32 37, !dbg !5470, !ctir !250
  %222 = load %struct.hash_table*, %struct.hash_table** %dest_info372, align 8, !dbg !5470, !tbaa !3507, !ctir !192
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !5471, !tbaa !2993
  %224 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5472, !tbaa !2993
  %call373 = call zeroext i1 @seen_file(%struct.hash_table* %222, i8* %223, %struct.stat* %224), !dbg !5473
  br i1 %call373, label %if.then374, label %if.end378, !dbg !5474

if.then374:                                       ; preds = %land.lhs.true371
  %call375 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.112, i64 0, i64 0)) #12, !dbg !5475
  %225 = load i8*, i8** %src_name.addr, align 8, !dbg !5477, !tbaa !2993
  %call376 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %225), !dbg !5477
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !5478, !tbaa !2993
  %call377 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %226), !dbg !5478
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call375, i8* %call376, i8* %call377), !dbg !5479
  store i1 false, i1* %retval, align 1, !dbg !5480
  br label %return, !dbg !5480

if.end378:                                        ; preds = %land.lhs.true371, %land.lhs.true367, %if.end365
  br label %if.end379, !dbg !5481

if.end379:                                        ; preds = %if.end378, %land.lhs.true353, %land.lhs.true350, %land.lhs.true347, %if.end345
  %227 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5482, !tbaa !2993
  %verbose380 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %227, i32 0, i32 31, !dbg !5484, !ctir !250
  %228 = load i8, i8* %verbose380, align 2, !dbg !5484, !tbaa !3193
  %tobool381 = trunc i8 %228 to i1, !dbg !5484, !ctir !117
  br i1 %tobool381, label %land.lhs.true382, label %if.end389, !dbg !5485

land.lhs.true382:                                 ; preds = %if.end379
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5486, !tbaa !2993
  %move_mode383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 9, !dbg !5487, !ctir !250
  %230 = load i8, i8* %move_mode383, align 8, !dbg !5487, !tbaa !3409
  %tobool384 = trunc i8 %230 to i1, !dbg !5487, !ctir !117
  br i1 %tobool384, label %if.end389, label %land.lhs.true385, !dbg !5488

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %231 = load i32, i32* %src_mode, align 4, !dbg !5489, !tbaa !2980
  %and386 = and i32 %231, 61440, !dbg !5489
  %cmp387 = icmp eq i32 %and386, 16384, !dbg !5489
  br i1 %cmp387, label %if.end389, label %if.then388, !dbg !5490

if.then388:                                       ; preds = %land.lhs.true385
  %232 = load i8*, i8** %src_name.addr, align 8, !dbg !5491, !tbaa !2993
  %233 = load i8*, i8** %dst_name.addr, align 8, !dbg !5492, !tbaa !2993
  %234 = load i8*, i8** %dst_backup, align 8, !dbg !5493, !tbaa !2993
  call void @emit_verbose(i8* %232, i8* %233, i8* %234), !dbg !5494
  br label %if.end389, !dbg !5494

if.end389:                                        ; preds = %if.then388, %land.lhs.true385, %land.lhs.true382, %if.end379
  %235 = load i32, i32* %rename_errno, align 4, !dbg !5495, !tbaa !2980
  %cmp390 = icmp eq i32 %235, 0, !dbg !5497
  br i1 %cmp390, label %if.then391, label %if.else392, !dbg !5498

if.then391:                                       ; preds = %if.end389
  store i8* null, i8** %earlier_file, align 8, !dbg !5499, !tbaa !2993
  br label %if.end443, !dbg !5500

if.else392:                                       ; preds = %if.end389
  %236 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5501, !tbaa !2993
  %recursive393 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %236, i32 0, i32 27, !dbg !5503, !ctir !250
  %237 = load i8, i8* %recursive393, align 2, !dbg !5503, !tbaa !3472
  %tobool394 = trunc i8 %237 to i1, !dbg !5503, !ctir !117
  br i1 %tobool394, label %land.lhs.true395, label %if.else409, !dbg !5504

land.lhs.true395:                                 ; preds = %if.else392
  %238 = load i32, i32* %src_mode, align 4, !dbg !5505, !tbaa !2980
  %and396 = and i32 %238, 61440, !dbg !5505
  %cmp397 = icmp eq i32 %and396, 16384, !dbg !5505
  br i1 %cmp397, label %if.then398, label %if.else409, !dbg !5506

if.then398:                                       ; preds = %land.lhs.true395
  %239 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5507, !tbaa !3104
  %tobool399 = trunc i8 %239 to i1, !dbg !5507
  br i1 %tobool399, label %if.then400, label %if.else404, !dbg !5510

if.then400:                                       ; preds = %if.then398
  %240 = load i8*, i8** %dst_name.addr, align 8, !dbg !5511, !tbaa !2993
  %st_ino401 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5512, !ctir !314
  %241 = load i64, i64* %st_ino401, align 8, !dbg !5512, !tbaa !3859, !ctir !225
  %st_dev402 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5513, !ctir !314
  %242 = load i64, i64* %st_dev402, align 8, !dbg !5513, !tbaa !3862, !ctir !228
  %call403 = call i8* @remember_copied(i8* %240, i64 %241, i64 %242), !dbg !5514
  store i8* %call403, i8** %earlier_file, align 8, !dbg !5515, !tbaa !2993
  br label %if.end408, !dbg !5516

if.else404:                                       ; preds = %if.then398
  %st_ino405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5517, !ctir !314
  %243 = load i64, i64* %st_ino405, align 8, !dbg !5517, !tbaa !3859, !ctir !225
  %st_dev406 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5518, !ctir !314
  %244 = load i64, i64* %st_dev406, align 8, !dbg !5518, !tbaa !3862, !ctir !228
  %call407 = call i8* @src_to_dest_lookup(i64 %243, i64 %244), !dbg !5519
  store i8* %call407, i8** %earlier_file, align 8, !dbg !5520, !tbaa !2993
  br label %if.end408

if.end408:                                        ; preds = %if.else404, %if.then400
  br label %if.end442, !dbg !5521

if.else409:                                       ; preds = %land.lhs.true395, %if.else392
  %245 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5522, !tbaa !2993
  %move_mode410 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %245, i32 0, i32 9, !dbg !5524, !ctir !250
  %246 = load i8, i8* %move_mode410, align 8, !dbg !5524, !tbaa !3409
  %tobool411 = trunc i8 %246 to i1, !dbg !5524, !ctir !117
  br i1 %tobool411, label %land.lhs.true412, label %if.else419, !dbg !5525

land.lhs.true412:                                 ; preds = %if.else409
  %st_nlink413 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5526, !ctir !314
  %247 = load i64, i64* %st_nlink413, align 8, !dbg !5526, !tbaa !5395, !ctir !320
  %cmp414 = icmp eq i64 %247, 1, !dbg !5527
  br i1 %cmp414, label %if.then415, label %if.else419, !dbg !5528

if.then415:                                       ; preds = %land.lhs.true412
  %st_ino416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5529, !ctir !314
  %248 = load i64, i64* %st_ino416, align 8, !dbg !5529, !tbaa !3859, !ctir !225
  %st_dev417 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5531, !ctir !314
  %249 = load i64, i64* %st_dev417, align 8, !dbg !5531, !tbaa !3862, !ctir !228
  %call418 = call i8* @src_to_dest_lookup(i64 %248, i64 %249), !dbg !5532
  store i8* %call418, i8** %earlier_file, align 8, !dbg !5533, !tbaa !2993
  br label %if.end441, !dbg !5534

if.else419:                                       ; preds = %land.lhs.true412, %if.else409
  %250 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5535, !tbaa !2993
  %preserve_links420 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %250, i32 0, i32 19, !dbg !5537, !ctir !250
  %251 = load i8, i8* %preserve_links420, align 2, !dbg !5537, !tbaa !3425
  %tobool421 = trunc i8 %251 to i1, !dbg !5537, !ctir !117
  br i1 %tobool421, label %land.lhs.true422, label %if.end440, !dbg !5538

land.lhs.true422:                                 ; preds = %if.else419
  %252 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5539, !tbaa !2993
  %hard_link423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %252, i32 0, i32 8, !dbg !5540, !ctir !250
  %253 = load i8, i8* %hard_link423, align 1, !dbg !5540, !tbaa !3402
  %tobool424 = trunc i8 %253 to i1, !dbg !5540, !ctir !117
  br i1 %tobool424, label %if.end440, label %land.lhs.true425, !dbg !5541

land.lhs.true425:                                 ; preds = %land.lhs.true422
  %st_nlink426 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5542, !ctir !314
  %254 = load i64, i64* %st_nlink426, align 8, !dbg !5542, !tbaa !5395, !ctir !320
  %cmp427 = icmp ult i64 1, %254, !dbg !5543
  br i1 %cmp427, label %if.then436, label %lor.lhs.false428, !dbg !5544

lor.lhs.false428:                                 ; preds = %land.lhs.true425
  %255 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5545, !tbaa !3104
  %tobool429 = trunc i8 %255 to i1, !dbg !5545
  br i1 %tobool429, label %land.lhs.true430, label %lor.lhs.false433, !dbg !5546

land.lhs.true430:                                 ; preds = %lor.lhs.false428
  %256 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5547, !tbaa !2993
  %dereference431 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %256, i32 0, i32 1, !dbg !5548, !ctir !250
  %257 = load i32, i32* %dereference431, align 4, !dbg !5548, !tbaa !3390, !ctir !73
  %cmp432 = icmp eq i32 %257, 3, !dbg !5549
  br i1 %cmp432, label %if.then436, label %lor.lhs.false433, !dbg !5550

lor.lhs.false433:                                 ; preds = %land.lhs.true430, %lor.lhs.false428
  %258 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5551, !tbaa !2993
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %258, i32 0, i32 1, !dbg !5552, !ctir !250
  %259 = load i32, i32* %dereference434, align 4, !dbg !5552, !tbaa !3390, !ctir !73
  %cmp435 = icmp eq i32 %259, 4, !dbg !5553
  br i1 %cmp435, label %if.then436, label %if.end440, !dbg !5554

if.then436:                                       ; preds = %lor.lhs.false433, %land.lhs.true430, %land.lhs.true425
  %260 = load i8*, i8** %dst_name.addr, align 8, !dbg !5555, !tbaa !2993
  %st_ino437 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5557, !ctir !314
  %261 = load i64, i64* %st_ino437, align 8, !dbg !5557, !tbaa !3859, !ctir !225
  %st_dev438 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5558, !ctir !314
  %262 = load i64, i64* %st_dev438, align 8, !dbg !5558, !tbaa !3862, !ctir !228
  %call439 = call i8* @remember_copied(i8* %260, i64 %261, i64 %262), !dbg !5559
  store i8* %call439, i8** %earlier_file, align 8, !dbg !5560, !tbaa !2993
  br label %if.end440, !dbg !5561

if.end440:                                        ; preds = %if.then436, %lor.lhs.false433, %land.lhs.true422, %if.else419
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then415
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end408
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.then391
  %263 = load i8*, i8** %earlier_file, align 8, !dbg !5562, !tbaa !2993
  %tobool444 = icmp ne i8* %263, null, !dbg !5562
  br i1 %tobool444, label %if.then445, label %if.end489, !dbg !5564

if.then445:                                       ; preds = %if.end443
  %264 = load i32, i32* %src_mode, align 4, !dbg !5565, !tbaa !2980
  %and446 = and i32 %264, 61440, !dbg !5565
  %cmp447 = icmp eq i32 %and446, 16384, !dbg !5565
  br i1 %cmp447, label %if.then448, label %if.else481, !dbg !5568

if.then448:                                       ; preds = %if.then445
  %265 = load i8*, i8** %src_name.addr, align 8, !dbg !5569, !tbaa !2993
  %266 = load i8*, i8** %earlier_file, align 8, !dbg !5572, !tbaa !2993
  %call449 = call zeroext i1 @same_name(i8* %265, i8* %266), !dbg !5573
  br i1 %call449, label %if.then450, label %if.else454, !dbg !5574

if.then450:                                       ; preds = %if.then448
  %call451 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.113, i64 0, i64 0)) #12, !dbg !5575
  %267 = load i8*, i8** @top_level_src_name, align 8, !dbg !5577, !tbaa !2993
  %call452 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %267), !dbg !5577
  %268 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5578, !tbaa !2993
  %call453 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %268), !dbg !5578
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call451, i8* %call452, i8* %call453), !dbg !5579
  %269 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5580, !tbaa !2993
  store i8 1, i8* %269, align 1, !dbg !5581, !tbaa !3104, !ctir !117
  br label %un_backup, !dbg !5582

if.else454:                                       ; preds = %if.then448
  %270 = load i8*, i8** %dst_name.addr, align 8, !dbg !5583, !tbaa !2993
  %271 = load i8*, i8** %earlier_file, align 8, !dbg !5585, !tbaa !2993
  %call455 = call zeroext i1 @same_name(i8* %270, i8* %271), !dbg !5586
  br i1 %call455, label %if.then456, label %if.else465, !dbg !5587

if.then456:                                       ; preds = %if.else454
  %call457 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.114, i64 0, i64 0)) #12, !dbg !5588
  %272 = load i8*, i8** @top_level_src_name, align 8, !dbg !5590, !tbaa !2993
  %call458 = call i8* @quotearg_style(i32 4, i8* %272), !dbg !5590
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call457, i8* %call458), !dbg !5591
  %273 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5592, !tbaa !2993
  %move_mode459 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %273, i32 0, i32 9, !dbg !5594, !ctir !250
  %274 = load i8, i8* %move_mode459, align 8, !dbg !5594, !tbaa !3409
  %tobool460 = trunc i8 %274 to i1, !dbg !5594, !ctir !117
  br i1 %tobool460, label %land.lhs.true461, label %if.end464, !dbg !5595

land.lhs.true461:                                 ; preds = %if.then456
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5596, !tbaa !2993
  %tobool462 = icmp ne i8* %275, null, !dbg !5596
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !5597

if.then463:                                       ; preds = %land.lhs.true461
  %276 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5598, !tbaa !2993
  store i8 1, i8* %276, align 1, !dbg !5599, !tbaa !3104, !ctir !117
  br label %if.end464, !dbg !5600

if.end464:                                        ; preds = %if.then463, %land.lhs.true461, %if.then456
  store i1 true, i1* %retval, align 1, !dbg !5601
  br label %return, !dbg !5601

if.else465:                                       ; preds = %if.else454
  %277 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5602, !tbaa !2993
  %dereference466 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %277, i32 0, i32 1, !dbg !5604, !ctir !250
  %278 = load i32, i32* %dereference466, align 4, !dbg !5604, !tbaa !3390, !ctir !73
  %cmp467 = icmp eq i32 %278, 4, !dbg !5605
  br i1 %cmp467, label %if.then473, label %lor.lhs.false468, !dbg !5606

lor.lhs.false468:                                 ; preds = %if.else465
  %279 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5607, !tbaa !3104
  %tobool469 = trunc i8 %279 to i1, !dbg !5607
  br i1 %tobool469, label %land.lhs.true470, label %if.else474, !dbg !5608

land.lhs.true470:                                 ; preds = %lor.lhs.false468
  %280 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5609, !tbaa !2993
  %dereference471 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %280, i32 0, i32 1, !dbg !5610, !ctir !250
  %281 = load i32, i32* %dereference471, align 4, !dbg !5610, !tbaa !3390, !ctir !73
  %cmp472 = icmp eq i32 %281, 3, !dbg !5611
  br i1 %cmp472, label %if.then473, label %if.else474, !dbg !5612

if.then473:                                       ; preds = %land.lhs.true470, %if.else465
  br label %if.end478, !dbg !5613

if.else474:                                       ; preds = %land.lhs.true470, %lor.lhs.false468
  %call475 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.115, i64 0, i64 0)) #12, !dbg !5615
  %282 = load i8*, i8** %dst_name.addr, align 8, !dbg !5617, !tbaa !2993
  %call476 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %282), !dbg !5617
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !5618, !tbaa !2993
  %call477 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %283), !dbg !5618
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call475, i8* %call476, i8* %call477), !dbg !5619
  br label %un_backup, !dbg !5620

if.end478:                                        ; preds = %if.then473
  br label %if.end479

if.end479:                                        ; preds = %if.end478
  br label %if.end480

if.end480:                                        ; preds = %if.end479
  br label %if.end488, !dbg !5621

if.else481:                                       ; preds = %if.then445
  %284 = load i8*, i8** %earlier_file, align 8, !dbg !5622, !tbaa !2993
  %285 = load i8*, i8** %dst_name.addr, align 8, !dbg !5625, !tbaa !2993
  %286 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5626, !tbaa !2993
  %verbose482 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %286, i32 0, i32 31, !dbg !5627, !ctir !250
  %287 = load i8, i8* %verbose482, align 2, !dbg !5627, !tbaa !3193
  %tobool483 = trunc i8 %287 to i1, !dbg !5627, !ctir !117
  %288 = load i8, i8* %dereference65, align 1, !dbg !5628, !tbaa !3104
  %tobool484 = trunc i8 %288 to i1, !dbg !5628
  %call485 = call zeroext i1 @create_hard_link(i8* %284, i8* %285, i1 zeroext true, i1 zeroext %tobool483, i1 zeroext %tobool484), !dbg !5629
  br i1 %call485, label %if.end487, label %if.then486, !dbg !5630

if.then486:                                       ; preds = %if.else481
  br label %un_backup, !dbg !5631

if.end487:                                        ; preds = %if.else481
  store i1 true, i1* %retval, align 1, !dbg !5632
  br label %return, !dbg !5632

if.end488:                                        ; preds = %if.end480
  br label %if.end489, !dbg !5633

if.end489:                                        ; preds = %if.end488, %if.end443
  %289 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5634, !tbaa !2993
  %move_mode490 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %289, i32 0, i32 9, !dbg !5636, !ctir !250
  %290 = load i8, i8* %move_mode490, align 8, !dbg !5636, !tbaa !3409
  %tobool491 = trunc i8 %290 to i1, !dbg !5636, !ctir !117
  br i1 %tobool491, label %if.then492, label %if.end569, !dbg !5637

if.then492:                                       ; preds = %if.end489
  %291 = load i32, i32* %rename_errno, align 4, !dbg !5638, !tbaa !2980
  %cmp493 = icmp eq i32 %291, 17, !dbg !5641
  br i1 %cmp493, label %if.then494, label %if.end502, !dbg !5642

if.then494:                                       ; preds = %if.then492
  %292 = load i8*, i8** %src_name.addr, align 8, !dbg !5643, !tbaa !2993
  %293 = load i8*, i8** %dst_name.addr, align 8, !dbg !5644, !tbaa !2993
  %call495 = call i32 @rename(i8* %292, i8* %293) #12, !dbg !5645
  %cmp496 = icmp eq i32 %call495, 0, !dbg !5646
  br i1 %cmp496, label %cond.true497, label %cond.false498, !dbg !5645

cond.true497:                                     ; preds = %if.then494
  br label %cond.end500, !dbg !5645

cond.false498:                                    ; preds = %if.then494
  %call499 = call i32* @__errno_location() #15, !dbg !5647
  %294 = load i32, i32* %call499, align 4, !dbg !5647, !tbaa !2980, !ctir !5
  br label %cond.end500, !dbg !5645

cond.end500:                                      ; preds = %cond.false498, %cond.true497
  %cond501 = phi i32 [ 0, %cond.true497 ], [ %294, %cond.false498 ], !dbg !5645
  store i32 %cond501, i32* %rename_errno, align 4, !dbg !5648, !tbaa !2980
  br label %if.end502, !dbg !5649

if.end502:                                        ; preds = %cond.end500, %if.then492
  %295 = load i32, i32* %rename_errno, align 4, !dbg !5650, !tbaa !2980
  %cmp503 = icmp eq i32 %295, 0, !dbg !5652
  br i1 %cmp503, label %if.then504, label %if.end525, !dbg !5653

if.then504:                                       ; preds = %if.end502
  %296 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5654, !tbaa !2993
  %verbose505 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %296, i32 0, i32 31, !dbg !5657, !ctir !250
  %297 = load i8, i8* %verbose505, align 2, !dbg !5657, !tbaa !3193
  %tobool506 = trunc i8 %297 to i1, !dbg !5657, !ctir !117
  br i1 %tobool506, label %if.then507, label %if.end510, !dbg !5658

if.then507:                                       ; preds = %if.then504
  %call508 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.116, i64 0, i64 0)) #12, !dbg !5659
  %call509 = call i32 (i8*, ...) @printf(i8* %call508), !dbg !5661
  %298 = load i8*, i8** %src_name.addr, align 8, !dbg !5662, !tbaa !2993
  %299 = load i8*, i8** %dst_name.addr, align 8, !dbg !5663, !tbaa !2993
  %300 = load i8*, i8** %dst_backup, align 8, !dbg !5664, !tbaa !2993
  call void @emit_verbose(i8* %298, i8* %299, i8* %300), !dbg !5665
  br label %if.end510, !dbg !5666

if.end510:                                        ; preds = %if.then507, %if.then504
  %301 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5667, !tbaa !2993
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %301, i32 0, i32 18, !dbg !5669, !ctir !250
  %302 = load i8, i8* %set_security_context, align 1, !dbg !5669, !tbaa !3208
  %tobool511 = trunc i8 %302 to i1, !dbg !5669, !ctir !117
  br i1 %tobool511, label %if.then512, label %if.end514, !dbg !5670

if.then512:                                       ; preds = %if.end510
  %303 = load i8*, i8** %dst_name.addr, align 8, !dbg !5671, !tbaa !2993
  %304 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5673, !tbaa !2993
  %call513 = call zeroext i1 @set_file_security_ctx(i8* %303, i1 zeroext false, i1 zeroext true, %struct.cp_options* %304), !dbg !5674
  br label %if.end514, !dbg !5675

if.end514:                                        ; preds = %if.then512, %if.end510
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5676, !tbaa !2993
  %tobool515 = icmp ne i8* %305, null, !dbg !5676
  br i1 %tobool515, label %if.then516, label %if.end517, !dbg !5678

if.then516:                                       ; preds = %if.end514
  %306 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5679, !tbaa !2993
  store i8 1, i8* %306, align 1, !dbg !5680, !tbaa !3104, !ctir !117
  br label %if.end517, !dbg !5681

if.end517:                                        ; preds = %if.then516, %if.end514
  %307 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5682, !tbaa !3104
  %tobool518 = trunc i8 %307 to i1, !dbg !5682
  br i1 %tobool518, label %land.lhs.true519, label %if.end524, !dbg !5684

land.lhs.true519:                                 ; preds = %if.end517
  %308 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5685, !tbaa !2993
  %last_file520 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %308, i32 0, i32 34, !dbg !5686, !ctir !250
  %309 = load i8, i8* %last_file520, align 1, !dbg !5686, !tbaa !3351
  %tobool521 = trunc i8 %309 to i1, !dbg !5686, !ctir !117
  br i1 %tobool521, label %if.end524, label %if.then522, !dbg !5687

if.then522:                                       ; preds = %land.lhs.true519
  %310 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5688, !tbaa !2993
  %dest_info523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %310, i32 0, i32 37, !dbg !5690, !ctir !250
  %311 = load %struct.hash_table*, %struct.hash_table** %dest_info523, align 8, !dbg !5690, !tbaa !3507, !ctir !192
  %312 = load i8*, i8** %dst_name.addr, align 8, !dbg !5691, !tbaa !2993
  call void @record_file(%struct.hash_table* %311, i8* %312, %struct.stat* %src_sb), !dbg !5692
  br label %if.end524, !dbg !5693

if.end524:                                        ; preds = %if.then522, %land.lhs.true519, %if.end517
  store i1 true, i1* %retval, align 1, !dbg !5694
  br label %return, !dbg !5694

if.end525:                                        ; preds = %if.end502
  %313 = load i32, i32* %rename_errno, align 4, !dbg !5695, !tbaa !2980
  %cmp526 = icmp eq i32 %313, 22, !dbg !5697
  br i1 %cmp526, label %if.then527, label %if.end531, !dbg !5698

if.then527:                                       ; preds = %if.end525
  %call528 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.117, i64 0, i64 0)) #12, !dbg !5699
  %314 = load i8*, i8** @top_level_src_name, align 8, !dbg !5701, !tbaa !2993
  %call529 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %314), !dbg !5701
  %315 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5702, !tbaa !2993
  %call530 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %315), !dbg !5702
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call528, i8* %call529, i8* %call530), !dbg !5703
  %316 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5704, !tbaa !2993
  store i8 1, i8* %316, align 1, !dbg !5705, !tbaa !3104, !ctir !117
  store i1 true, i1* %retval, align 1, !dbg !5706
  br label %return, !dbg !5706

if.end531:                                        ; preds = %if.end525
  %317 = load i32, i32* %rename_errno, align 4, !dbg !5707, !tbaa !2980
  %cmp532 = icmp ne i32 %317, 18, !dbg !5709
  br i1 %cmp532, label %if.then533, label %if.end539, !dbg !5710

if.then533:                                       ; preds = %if.end531
  %318 = load i32, i32* %rename_errno, align 4, !dbg !5711, !tbaa !2980
  %call534 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.118, i64 0, i64 0)) #12, !dbg !5713
  %319 = load i8*, i8** %src_name.addr, align 8, !dbg !5714, !tbaa !2993
  %call535 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %319), !dbg !5714
  %320 = load i8*, i8** %dst_name.addr, align 8, !dbg !5715, !tbaa !2993
  %call536 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %320), !dbg !5715
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %318, i8* %call534, i8* %call535, i8* %call536), !dbg !5716
  %st_ino537 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5717, !ctir !314
  %321 = load i64, i64* %st_ino537, align 8, !dbg !5717, !tbaa !3859, !ctir !225
  %st_dev538 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5718, !ctir !314
  %322 = load i64, i64* %st_dev538, align 8, !dbg !5718, !tbaa !3862, !ctir !228
  call void @forget_created(i64 %321, i64 %322), !dbg !5719
  store i1 false, i1* %retval, align 1, !dbg !5720
  br label %return, !dbg !5720

if.end539:                                        ; preds = %if.end531
  %323 = load i32, i32* %src_mode, align 4, !dbg !5721, !tbaa !2980
  %and540 = and i32 %323, 61440, !dbg !5721
  %cmp541 = icmp eq i32 %and540, 16384, !dbg !5721
  br i1 %cmp541, label %cond.true542, label %cond.false544, !dbg !5721

cond.true542:                                     ; preds = %if.end539
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !5723, !tbaa !2993
  %call543 = call i32 @rmdir(i8* %324) #12, !dbg !5724
  br label %cond.end546, !dbg !5721

cond.false544:                                    ; preds = %if.end539
  %325 = load i8*, i8** %dst_name.addr, align 8, !dbg !5725, !tbaa !2993
  %call545 = call i32 @unlink(i8* %325) #12, !dbg !5726
  br label %cond.end546, !dbg !5721

cond.end546:                                      ; preds = %cond.false544, %cond.true542
  %cond547 = phi i32 [ %call543, %cond.true542 ], [ %call545, %cond.false544 ], !dbg !5721
  %cmp548 = icmp ne i32 %cond547, 0, !dbg !5727
  br i1 %cmp548, label %land.lhs.true549, label %if.end559, !dbg !5728

land.lhs.true549:                                 ; preds = %cond.end546
  %call550 = call i32* @__errno_location() #15, !dbg !5729
  %326 = load i32, i32* %call550, align 4, !dbg !5729, !tbaa !2980, !ctir !5
  %cmp551 = icmp ne i32 %326, 2, !dbg !5730
  br i1 %cmp551, label %if.then552, label %if.end559, !dbg !5731

if.then552:                                       ; preds = %land.lhs.true549
  %call553 = call i32* @__errno_location() #15, !dbg !5732
  %327 = load i32, i32* %call553, align 4, !dbg !5732, !tbaa !2980, !ctir !5
  %call554 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.119, i64 0, i64 0)) #12, !dbg !5734
  %328 = load i8*, i8** %src_name.addr, align 8, !dbg !5735, !tbaa !2993
  %call555 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %328), !dbg !5735
  %329 = load i8*, i8** %dst_name.addr, align 8, !dbg !5736, !tbaa !2993
  %call556 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %329), !dbg !5736
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %call554, i8* %call555, i8* %call556), !dbg !5737
  %st_ino557 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5738, !ctir !314
  %330 = load i64, i64* %st_ino557, align 8, !dbg !5738, !tbaa !3859, !ctir !225
  %st_dev558 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5739, !ctir !314
  %331 = load i64, i64* %st_dev558, align 8, !dbg !5739, !tbaa !3862, !ctir !228
  call void @forget_created(i64 %330, i64 %331), !dbg !5740
  store i1 false, i1* %retval, align 1, !dbg !5741
  br label %return, !dbg !5741

if.end559:                                        ; preds = %land.lhs.true549, %cond.end546
  %332 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5742, !tbaa !2993
  %verbose560 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %332, i32 0, i32 31, !dbg !5744, !ctir !250
  %333 = load i8, i8* %verbose560, align 2, !dbg !5744, !tbaa !3193
  %tobool561 = trunc i8 %333 to i1, !dbg !5744, !ctir !117
  br i1 %tobool561, label %land.lhs.true562, label %if.end568, !dbg !5745

land.lhs.true562:                                 ; preds = %if.end559
  %334 = load i32, i32* %src_mode, align 4, !dbg !5746, !tbaa !2980
  %and563 = and i32 %334, 61440, !dbg !5746
  %cmp564 = icmp eq i32 %and563, 16384, !dbg !5746
  br i1 %cmp564, label %if.end568, label %if.then565, !dbg !5747

if.then565:                                       ; preds = %land.lhs.true562
  %call566 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.120, i64 0, i64 0)) #12, !dbg !5748
  %call567 = call i32 (i8*, ...) @printf(i8* %call566), !dbg !5750
  %335 = load i8*, i8** %src_name.addr, align 8, !dbg !5751, !tbaa !2993
  %336 = load i8*, i8** %dst_name.addr, align 8, !dbg !5752, !tbaa !2993
  %337 = load i8*, i8** %dst_backup, align 8, !dbg !5753, !tbaa !2993
  call void @emit_verbose(i8* %335, i8* %336, i8* %337), !dbg !5754
  br label %if.end568, !dbg !5755

if.end568:                                        ; preds = %if.then565, %land.lhs.true562, %if.end559
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5756, !tbaa !3104
  br label %if.end569, !dbg !5757

if.end569:                                        ; preds = %if.end568, %if.end489
  %338 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5758, !tbaa !2993
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %338, i32 0, i32 28, !dbg !5759, !ctir !250
  %339 = load i8, i8* %set_mode, align 1, !dbg !5759, !tbaa !3484
  %tobool570 = trunc i8 %339 to i1, !dbg !5759, !ctir !117
  br i1 %tobool570, label %cond.true571, label %cond.false572, !dbg !5758

cond.true571:                                     ; preds = %if.end569
  %340 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5760, !tbaa !2993
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %340, i32 0, i32 4, !dbg !5761, !ctir !250
  %341 = load i32, i32* %mode, align 8, !dbg !5761, !tbaa !3488, !ctir !157
  br label %cond.end573, !dbg !5758

cond.false572:                                    ; preds = %if.end569
  %342 = load i32, i32* %src_mode, align 4, !dbg !5762, !tbaa !2980
  br label %cond.end573, !dbg !5758

cond.end573:                                      ; preds = %cond.false572, %cond.true571
  %cond574 = phi i32 [ %341, %cond.true571 ], [ %342, %cond.false572 ], !dbg !5758
  %and575 = and i32 %cond574, 4095, !dbg !5763
  store i32 %and575, i32* %dst_mode_bits, align 4, !dbg !5764, !tbaa !2980
  %343 = load i32, i32* %dst_mode_bits, align 4, !dbg !5765, !tbaa !2980
  %344 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5766, !tbaa !2993
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %344, i32 0, i32 14, !dbg !5767, !ctir !250
  %345 = load i8, i8* %preserve_ownership, align 1, !dbg !5767, !tbaa !3421
  %tobool576 = trunc i8 %345 to i1, !dbg !5767, !ctir !117
  br i1 %tobool576, label %cond.true577, label %cond.false578, !dbg !5766

cond.true577:                                     ; preds = %cond.end573
  br label %cond.end582, !dbg !5766

cond.false578:                                    ; preds = %cond.end573
  %346 = load i32, i32* %src_mode, align 4, !dbg !5768, !tbaa !2980
  %and579 = and i32 %346, 61440, !dbg !5768
  %cmp580 = icmp eq i32 %and579, 16384, !dbg !5768
  %347 = zext i1 %cmp580 to i64, !dbg !5768
  %cond581 = select i1 %cmp580, i32 18, i32 0, !dbg !5768
  br label %cond.end582, !dbg !5766

cond.end582:                                      ; preds = %cond.false578, %cond.true577
  %cond583 = phi i32 [ 63, %cond.true577 ], [ %cond581, %cond.false578 ], !dbg !5766
  %and584 = and i32 %343, %cond583, !dbg !5769
  store i32 %and584, i32* %omitted_permissions, align 4, !dbg !5770, !tbaa !2980
  store i8 1, i8* %delayed_ok, align 1, !dbg !5771, !tbaa !3104
  %348 = load i8*, i8** %src_name.addr, align 8, !dbg !5772, !tbaa !2993
  %349 = load i8*, i8** %dst_name.addr, align 8, !dbg !5774, !tbaa !2993
  %350 = load i32, i32* %src_mode, align 4, !dbg !5775, !tbaa !2980
  %351 = load i8, i8* %new_dst.addr, align 1, !dbg !5776, !tbaa !3104
  %tobool585 = trunc i8 %351 to i1, !dbg !5776
  %352 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5777, !tbaa !2993
  %call586 = call zeroext i1 @set_process_security_ctx(i8* %348, i8* %349, i32 %350, i1 zeroext %tobool585, %struct.cp_options* %352), !dbg !5778
  br i1 %call586, label %if.end588, label %if.then587, !dbg !5779

if.then587:                                       ; preds = %cond.end582
  store i1 false, i1* %retval, align 1, !dbg !5780
  br label %return, !dbg !5780

if.end588:                                        ; preds = %cond.end582
  %353 = load i32, i32* %src_mode, align 4, !dbg !5781, !tbaa !2980
  %and589 = and i32 %353, 61440, !dbg !5781
  %cmp590 = icmp eq i32 %and589, 16384, !dbg !5781
  br i1 %cmp590, label %if.then591, label %if.else682, !dbg !5783

if.then591:                                       ; preds = %if.end588
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !5784, metadata !DIExpression()), !dbg !5786
  %354 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5787, !tbaa !2993
  %call592 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %354) #14, !dbg !5789
  br i1 %call592, label %if.then593, label %if.end596, !dbg !5790

if.then593:                                       ; preds = %if.then591
  %call594 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.121, i64 0, i64 0)) #12, !dbg !5791
  %355 = load i8*, i8** %src_name.addr, align 8, !dbg !5793, !tbaa !2993
  %call595 = call i8* @quotearg_style(i32 4, i8* %355), !dbg !5793
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call594, i8* %call595), !dbg !5794
  br label %un_backup, !dbg !5795

if.end596:                                        ; preds = %if.then591
  %356 = alloca i8, i64 24, align 16, !dbg !5796
  %357 = bitcast i8* %356 to %struct.dir_list*, !dbg !5796
  store %struct.dir_list* %357, %struct.dir_list** %dir, align 8, !dbg !5797, !tbaa !2993
  %358 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5798, !tbaa !2993
  %359 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5799, !tbaa !2993
  %parent597 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %359, i32 0, i32 0, !dbg !5800, !ctir !348
  store %struct.dir_list* %358, %struct.dir_list** %parent597, align 8, !dbg !5801, !tbaa !5802, !ctir !347
  %st_ino598 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5804, !ctir !314
  %360 = load i64, i64* %st_ino598, align 8, !dbg !5804, !tbaa !3859, !ctir !225
  %361 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5805, !tbaa !2993
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %361, i32 0, i32 1, !dbg !5806, !ctir !348
  store i64 %360, i64* %ino, align 8, !dbg !5807, !tbaa !5808, !ctir !224
  %st_dev599 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5809, !ctir !314
  %362 = load i64, i64* %st_dev599, align 8, !dbg !5809, !tbaa !3862, !ctir !228
  %363 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5810, !tbaa !2993
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %363, i32 0, i32 2, !dbg !5811, !ctir !348
  store i64 %362, i64* %dev, align 8, !dbg !5812, !tbaa !5813, !ctir !227
  %364 = load i8, i8* %new_dst.addr, align 1, !dbg !5814, !tbaa !3104
  %tobool600 = trunc i8 %364 to i1, !dbg !5814
  br i1 %tobool600, label %if.then605, label %lor.lhs.false601, !dbg !5816

lor.lhs.false601:                                 ; preds = %if.end596
  %st_mode602 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5817, !ctir !314
  %365 = load i32, i32* %st_mode602, align 8, !dbg !5817, !tbaa !3176, !ctir !130
  %and603 = and i32 %365, 61440, !dbg !5817
  %cmp604 = icmp eq i32 %and603, 16384, !dbg !5817
  br i1 %cmp604, label %if.else653, label %if.then605, !dbg !5818

if.then605:                                       ; preds = %lor.lhs.false601, %if.end596
  %366 = load i8*, i8** %dst_name.addr, align 8, !dbg !5819, !tbaa !2993
  %367 = load i32, i32* %dst_mode_bits, align 4, !dbg !5822, !tbaa !2980
  %368 = load i32, i32* %omitted_permissions, align 4, !dbg !5823, !tbaa !2980
  %neg = xor i32 %368, -1, !dbg !5824
  %and606 = and i32 %367, %neg, !dbg !5825
  %call607 = call i32 @mkdir(i8* %366, i32 %and606) #12, !dbg !5826
  %cmp608 = icmp ne i32 %call607, 0, !dbg !5827
  br i1 %cmp608, label %if.then609, label %if.end613, !dbg !5828

if.then609:                                       ; preds = %if.then605
  %call610 = call i32* @__errno_location() #15, !dbg !5829
  %369 = load i32, i32* %call610, align 4, !dbg !5829, !tbaa !2980, !ctir !5
  %call611 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.122, i64 0, i64 0)) #12, !dbg !5831
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5832, !tbaa !2993
  %call612 = call i8* @quotearg_style(i32 4, i8* %370), !dbg !5832
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %369, i8* %call611, i8* %call612), !dbg !5833
  br label %un_backup, !dbg !5834

if.end613:                                        ; preds = %if.then605
  %371 = load i8*, i8** %dst_name.addr, align 8, !dbg !5835, !tbaa !2993
  %call614 = call i32 @lstat(i8* %371, %struct.stat* %dst_sb) #12, !dbg !5837
  %cmp615 = icmp ne i32 %call614, 0, !dbg !5838
  br i1 %cmp615, label %if.then616, label %if.else620, !dbg !5839

if.then616:                                       ; preds = %if.end613
  %call617 = call i32* @__errno_location() #15, !dbg !5840
  %372 = load i32, i32* %call617, align 4, !dbg !5840, !tbaa !2980, !ctir !5
  %call618 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !5842
  %373 = load i8*, i8** %dst_name.addr, align 8, !dbg !5843, !tbaa !2993
  %call619 = call i8* @quotearg_style(i32 4, i8* %373), !dbg !5843
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %372, i8* %call618, i8* %call619), !dbg !5844
  br label %un_backup, !dbg !5845

if.else620:                                       ; preds = %if.end613
  %st_mode621 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5846, !ctir !314
  %374 = load i32, i32* %st_mode621, align 8, !dbg !5846, !tbaa !3176, !ctir !130
  %and622 = and i32 %374, 448, !dbg !5848
  %cmp623 = icmp ne i32 %and622, 448, !dbg !5849
  br i1 %cmp623, label %if.then624, label %if.end633, !dbg !5850

if.then624:                                       ; preds = %if.else620
  %st_mode625 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5851, !ctir !314
  %375 = load i32, i32* %st_mode625, align 8, !dbg !5851, !tbaa !3176, !ctir !130
  store i32 %375, i32* %dst_mode, align 4, !dbg !5853, !tbaa !2980
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5854, !tbaa !3104
  %376 = load i8*, i8** %dst_name.addr, align 8, !dbg !5855, !tbaa !2993
  %377 = load i32, i32* %dst_mode, align 4, !dbg !5857, !tbaa !2980
  %or = or i32 %377, 448, !dbg !5858
  %call626 = call i32 @chmod(i8* %376, i32 %or) #12, !dbg !5859
  %cmp627 = icmp ne i32 %call626, 0, !dbg !5860
  br i1 %cmp627, label %if.then628, label %if.end632, !dbg !5861

if.then628:                                       ; preds = %if.then624
  %call629 = call i32* @__errno_location() #15, !dbg !5862
  %378 = load i32, i32* %call629, align 4, !dbg !5862, !tbaa !2980, !ctir !5
  %call630 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.123, i64 0, i64 0)) #12, !dbg !5864
  %379 = load i8*, i8** %dst_name.addr, align 8, !dbg !5865, !tbaa !2993
  %call631 = call i8* @quotearg_style(i32 4, i8* %379), !dbg !5865
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %378, i8* %call630, i8* %call631), !dbg !5866
  br label %un_backup, !dbg !5867

if.end632:                                        ; preds = %if.then624
  br label %if.end633, !dbg !5868

if.end633:                                        ; preds = %if.end632, %if.else620
  br label %if.end634

if.end634:                                        ; preds = %if.end633
  %380 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5869, !tbaa !2993
  %381 = load i8, i8* %380, align 1, !dbg !5871, !tbaa !3104
  %tobool635 = trunc i8 %381 to i1, !dbg !5871, !ctir !117
  br i1 %tobool635, label %if.end640, label %if.then636, !dbg !5872

if.then636:                                       ; preds = %if.end634
  %382 = load i8*, i8** %dst_name.addr, align 8, !dbg !5873, !tbaa !2993
  %st_ino637 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5875, !ctir !314
  %383 = load i64, i64* %st_ino637, align 8, !dbg !5875, !tbaa !3859, !ctir !225
  %st_dev638 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5876, !ctir !314
  %384 = load i64, i64* %st_dev638, align 8, !dbg !5876, !tbaa !3862, !ctir !228
  %call639 = call i8* @remember_copied(i8* %382, i64 %383, i64 %384), !dbg !5877
  %385 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5878, !tbaa !2993
  store i8 1, i8* %385, align 1, !dbg !5879, !tbaa !3104, !ctir !117
  br label %if.end640, !dbg !5880

if.end640:                                        ; preds = %if.then636, %if.end634
  %386 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5881, !tbaa !2993
  %verbose641 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %386, i32 0, i32 31, !dbg !5883, !ctir !250
  %387 = load i8, i8* %verbose641, align 2, !dbg !5883, !tbaa !3193
  %tobool642 = trunc i8 %387 to i1, !dbg !5883, !ctir !117
  br i1 %tobool642, label %if.then643, label %if.end652, !dbg !5884

if.then643:                                       ; preds = %if.end640
  %388 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5885, !tbaa !2993
  %move_mode644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %388, i32 0, i32 9, !dbg !5888, !ctir !250
  %389 = load i8, i8* %move_mode644, align 8, !dbg !5888, !tbaa !3409
  %tobool645 = trunc i8 %389 to i1, !dbg !5888, !ctir !117
  br i1 %tobool645, label %if.then646, label %if.else650, !dbg !5889

if.then646:                                       ; preds = %if.then643
  %call647 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.124, i64 0, i64 0)) #12, !dbg !5890
  %390 = load i8*, i8** %dst_name.addr, align 8, !dbg !5891, !tbaa !2993
  %call648 = call i8* @quotearg_style(i32 4, i8* %390), !dbg !5891
  %call649 = call i32 (i8*, ...) @printf(i8* %call647, i8* %call648), !dbg !5892
  br label %if.end651, !dbg !5892

if.else650:                                       ; preds = %if.then643
  %391 = load i8*, i8** %src_name.addr, align 8, !dbg !5893, !tbaa !2993
  %392 = load i8*, i8** %dst_name.addr, align 8, !dbg !5894, !tbaa !2993
  call void @emit_verbose(i8* %391, i8* %392, i8* null), !dbg !5895
  br label %if.end651

if.end651:                                        ; preds = %if.else650, %if.then646
  br label %if.end652, !dbg !5896

if.end652:                                        ; preds = %if.end651, %if.end640
  br label %if.end668, !dbg !5897

if.else653:                                       ; preds = %lor.lhs.false601
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5898, !tbaa !2980
  %393 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5900, !tbaa !2993
  %set_security_context654 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %393, i32 0, i32 18, !dbg !5902, !ctir !250
  %394 = load i8, i8* %set_security_context654, align 1, !dbg !5902, !tbaa !3208
  %tobool655 = trunc i8 %394 to i1, !dbg !5902, !ctir !117
  br i1 %tobool655, label %if.then658, label %lor.lhs.false656, !dbg !5903

lor.lhs.false656:                                 ; preds = %if.else653
  %395 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5904, !tbaa !2993
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %395, i32 0, i32 22, !dbg !5905, !ctir !250
  %396 = load i8, i8* %preserve_security_context, align 1, !dbg !5905, !tbaa !3205
  %tobool657 = trunc i8 %396 to i1, !dbg !5905, !ctir !117
  br i1 %tobool657, label %if.then658, label %if.end667, !dbg !5906

if.then658:                                       ; preds = %lor.lhs.false656, %if.else653
  %397 = load i8*, i8** %dst_name.addr, align 8, !dbg !5907, !tbaa !2993
  %398 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5909, !tbaa !2993
  %preserve_security_context659 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %398, i32 0, i32 22, !dbg !5910, !ctir !250
  %399 = load i8, i8* %preserve_security_context659, align 1, !dbg !5910, !tbaa !3205
  %tobool660 = trunc i8 %399 to i1, !dbg !5910, !ctir !117
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5911, !tbaa !2993
  %call661 = call zeroext i1 @set_file_security_ctx(i8* %397, i1 zeroext %tobool660, i1 zeroext false, %struct.cp_options* %400), !dbg !5912
  br i1 %call661, label %if.end666, label %if.then662, !dbg !5913

if.then662:                                       ; preds = %if.then658
  %401 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5914, !tbaa !2993
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %401, i32 0, i32 23, !dbg !5917, !ctir !250
  %402 = load i8, i8* %require_preserve_context, align 2, !dbg !5917, !tbaa !3460
  %tobool663 = trunc i8 %402 to i1, !dbg !5917, !ctir !117
  br i1 %tobool663, label %if.then664, label %if.end665, !dbg !5918

if.then664:                                       ; preds = %if.then662
  br label %un_backup, !dbg !5919

if.end665:                                        ; preds = %if.then662
  br label %if.end666, !dbg !5920

if.end666:                                        ; preds = %if.end665, %if.then658
  br label %if.end667, !dbg !5921

if.end667:                                        ; preds = %if.end666, %lor.lhs.false656
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.end652
  %403 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5922, !tbaa !2993
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %403, i32 0, i32 13, !dbg !5924, !ctir !250
  %404 = load i8, i8* %one_file_system, align 4, !dbg !5924, !tbaa !3417
  %tobool669 = trunc i8 %404 to i1, !dbg !5924, !ctir !117
  br i1 %tobool669, label %land.lhs.true670, label %if.else677, !dbg !5925

land.lhs.true670:                                 ; preds = %if.end668
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5926, !tbaa !2993
  %tobool671 = icmp ne %struct.stat* %405, null, !dbg !5926
  br i1 %tobool671, label %land.lhs.true672, label %if.else677, !dbg !5927

land.lhs.true672:                                 ; preds = %land.lhs.true670
  %406 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5928, !tbaa !2993
  %st_dev673 = getelementptr inbounds %struct.stat, %struct.stat* %406, i32 0, i32 0, !dbg !5929, !ctir !313
  %407 = load i64, i64* %st_dev673, align 8, !dbg !5929, !tbaa !3862, !ctir !228
  %st_dev674 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5930, !ctir !314
  %408 = load i64, i64* %st_dev674, align 8, !dbg !5930, !tbaa !3862, !ctir !228
  %cmp675 = icmp ne i64 %407, %408, !dbg !5931
  br i1 %cmp675, label %if.then676, label %if.else677, !dbg !5932

if.then676:                                       ; preds = %land.lhs.true672
  br label %if.end681, !dbg !5933

if.else677:                                       ; preds = %land.lhs.true672, %land.lhs.true670, %if.end668
  %409 = load i8*, i8** %src_name.addr, align 8, !dbg !5935, !tbaa !2993
  %410 = load i8*, i8** %dst_name.addr, align 8, !dbg !5937, !tbaa !2993
  %411 = load i8, i8* %new_dst.addr, align 1, !dbg !5938, !tbaa !3104
  %tobool678 = trunc i8 %411 to i1, !dbg !5938
  %412 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5939, !tbaa !2993
  %413 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5940, !tbaa !2993
  %414 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5941, !tbaa !2993
  %415 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5942, !tbaa !2993
  %call679 = call zeroext i1 @copy_dir(i8* %409, i8* %410, i1 zeroext %tobool678, %struct.stat* %src_sb, %struct.dir_list* %412, %struct.cp_options* %413, i8* %414, i8* %415), !dbg !5943
  %frombool680 = zext i1 %call679 to i8, !dbg !5944
  store i8 %frombool680, i8* %delayed_ok, align 1, !dbg !5944, !tbaa !3104
  br label %if.end681

if.end681:                                        ; preds = %if.else677, %if.then676
  br label %if.end894, !dbg !5945

if.else682:                                       ; preds = %if.end588
  %416 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5946, !tbaa !2993
  %symbolic_link683 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %416, i32 0, i32 29, !dbg !5948, !ctir !250
  %417 = load i8, i8* %symbolic_link683, align 4, !dbg !5948, !tbaa !3480
  %tobool684 = trunc i8 %417 to i1, !dbg !5948, !ctir !117
  br i1 %tobool684, label %if.then685, label %if.else730, !dbg !5949

if.then685:                                       ; preds = %if.else682
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5950, !tbaa !3104
  %418 = load i8*, i8** %src_name.addr, align 8, !dbg !5952, !tbaa !2993
  %419 = load i8, i8* %418, align 1, !dbg !5954, !tbaa !3652, !ctir !113
  %conv = sext i8 %419 to i32, !dbg !5954
  %cmp686 = icmp ne i32 %conv, 47, !dbg !5955
  br i1 %cmp686, label %if.then688, label %if.end719, !dbg !5956

if.then688:                                       ; preds = %if.then685
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5957, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5960, metadata !DIExpression()), !dbg !5961
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5962, metadata !DIExpression()), !dbg !5963
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5964, metadata !DIExpression()), !dbg !5965
  %420 = load i8*, i8** %dst_name.addr, align 8, !dbg !5966, !tbaa !2993
  %call689 = call i8* @dir_name(i8* %420), !dbg !5967
  store i8* %call689, i8** %dst_parent, align 8, !dbg !5968, !tbaa !2993
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !5969, !tbaa !2993
  %call690 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), i8* %421) #14, !dbg !5969
  %cmp691 = icmp eq i32 %call690, 0, !dbg !5969
  br i1 %cmp691, label %lor.end712, label %lor.lhs.false693, !dbg !5970

lor.lhs.false693:                                 ; preds = %if.then688
  %call694 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.125, i64 0, i64 0), %struct.stat* %dot_sb) #12, !dbg !5971
  %cmp695 = icmp ne i32 %call694, 0, !dbg !5972
  br i1 %cmp695, label %lor.end712, label %lor.lhs.false697, !dbg !5973

lor.lhs.false697:                                 ; preds = %lor.lhs.false693
  %422 = load i8*, i8** %dst_parent, align 8, !dbg !5974, !tbaa !2993
  %call698 = call i32 @stat(i8* %422, %struct.stat* %dst_parent_sb) #12, !dbg !5975
  %cmp699 = icmp ne i32 %call698, 0, !dbg !5976
  br i1 %cmp699, label %lor.end712, label %lor.rhs701, !dbg !5977

lor.rhs701:                                       ; preds = %lor.lhs.false697
  %st_ino702 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !5978, !ctir !314
  %423 = load i64, i64* %st_ino702, align 8, !dbg !5978, !tbaa !3859, !ctir !225
  %st_ino703 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !5978, !ctir !314
  %424 = load i64, i64* %st_ino703, align 8, !dbg !5978, !tbaa !3859, !ctir !225
  %cmp704 = icmp eq i64 %423, %424, !dbg !5978
  br i1 %cmp704, label %land.rhs706, label %land.end711, !dbg !5978

land.rhs706:                                      ; preds = %lor.rhs701
  %st_dev707 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !5978, !ctir !314
  %425 = load i64, i64* %st_dev707, align 8, !dbg !5978, !tbaa !3862, !ctir !228
  %st_dev708 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !5978, !ctir !314
  %426 = load i64, i64* %st_dev708, align 8, !dbg !5978, !tbaa !3862, !ctir !228
  %cmp709 = icmp eq i64 %425, %426, !dbg !5978
  br label %land.end711

land.end711:                                      ; preds = %land.rhs706, %lor.rhs701
  %427 = phi i1 [ false, %lor.rhs701 ], [ %cmp709, %land.rhs706 ], !dbg !5979
  br label %lor.end712, !dbg !5977

lor.end712:                                       ; preds = %land.end711, %lor.lhs.false697, %lor.lhs.false693, %if.then688
  %428 = phi i1 [ true, %lor.lhs.false697 ], [ true, %lor.lhs.false693 ], [ true, %if.then688 ], [ %427, %land.end711 ]
  %frombool713 = zext i1 %428 to i8, !dbg !5980
  store i8 %frombool713, i8* %in_current_dir, align 1, !dbg !5980, !tbaa !3104
  %429 = load i8*, i8** %dst_parent, align 8, !dbg !5981, !tbaa !2993
  call void @free(i8* %429) #12, !dbg !5982
  %430 = load i8, i8* %in_current_dir, align 1, !dbg !5983, !tbaa !3104
  %tobool714 = trunc i8 %430 to i1, !dbg !5983
  br i1 %tobool714, label %if.end718, label %if.then715, !dbg !5985

if.then715:                                       ; preds = %lor.end712
  %call716 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.126, i64 0, i64 0)) #12, !dbg !5986
  %431 = load i8*, i8** %dst_name.addr, align 8, !dbg !5988, !tbaa !2993
  %call717 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %431), !dbg !5988
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call716, i8* %call717), !dbg !5989
  br label %un_backup, !dbg !5990

if.end718:                                        ; preds = %lor.end712
  br label %if.end719, !dbg !5991

if.end719:                                        ; preds = %if.end718, %if.then685
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5992, metadata !DIExpression()), !dbg !5993
  %432 = load i8*, i8** %src_name.addr, align 8, !dbg !5994, !tbaa !2993
  %433 = load i8*, i8** %dst_name.addr, align 8, !dbg !5995, !tbaa !2993
  %434 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5996, !tbaa !2993
  %unlink_dest_after_failed_open720 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %434, i32 0, i32 7, !dbg !5997, !ctir !250
  %435 = load i8, i8* %unlink_dest_after_failed_open720, align 2, !dbg !5997, !tbaa !3398
  %tobool721 = trunc i8 %435 to i1, !dbg !5997, !ctir !117
  %call722 = call i32 @force_symlinkat(i8* %432, i32 -100, i8* %433, i1 zeroext %tobool721, i32 -1), !dbg !5998
  store i32 %call722, i32* %err, align 4, !dbg !5993, !tbaa !2980
  %436 = load i32, i32* %err, align 4, !dbg !5999, !tbaa !2980
  %cmp723 = icmp slt i32 0, %436, !dbg !6001
  br i1 %cmp723, label %if.then725, label %if.end729, !dbg !6002

if.then725:                                       ; preds = %if.end719
  %437 = load i32, i32* %err, align 4, !dbg !6003, !tbaa !2980
  %call726 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.127, i64 0, i64 0)) #12, !dbg !6005
  %438 = load i8*, i8** %dst_name.addr, align 8, !dbg !6006, !tbaa !2993
  %call727 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %438), !dbg !6006
  %439 = load i8*, i8** %src_name.addr, align 8, !dbg !6007, !tbaa !2993
  %call728 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %439), !dbg !6007
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %437, i8* %call726, i8* %call727, i8* %call728), !dbg !6008
  br label %un_backup, !dbg !6009

if.end729:                                        ; preds = %if.end719
  br label %if.end893, !dbg !6010

if.else730:                                       ; preds = %if.else682
  %440 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6011, !tbaa !2993
  %hard_link731 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %440, i32 0, i32 8, !dbg !6013, !ctir !250
  %441 = load i8, i8* %hard_link731, align 1, !dbg !6013, !tbaa !3402
  %tobool732 = trunc i8 %441 to i1, !dbg !6013, !ctir !117
  br i1 %tobool732, label %if.then734, label %if.else749, !dbg !6014

if.then734:                                       ; preds = %if.else730
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !6015, metadata !DIExpression()), !dbg !6017
  %442 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6018, !tbaa !2993
  %unlink_dest_after_failed_open735 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %442, i32 0, i32 7, !dbg !6019, !ctir !250
  %443 = load i8, i8* %unlink_dest_after_failed_open735, align 2, !dbg !6019, !tbaa !3398
  %tobool736 = trunc i8 %443 to i1, !dbg !6019, !ctir !117
  br i1 %tobool736, label %lor.end742, label %lor.rhs738, !dbg !6020

lor.rhs738:                                       ; preds = %if.then734
  %444 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6021, !tbaa !2993
  %interactive739 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %444, i32 0, i32 2, !dbg !6022, !ctir !250
  %445 = load i32, i32* %interactive739, align 8, !dbg !6022, !tbaa !3150, !ctir !80
  %cmp740 = icmp eq i32 %445, 3, !dbg !6023
  br label %lor.end742, !dbg !6020

lor.end742:                                       ; preds = %lor.rhs738, %if.then734
  %446 = phi i1 [ true, %if.then734 ], [ %cmp740, %lor.rhs738 ]
  %frombool743 = zext i1 %446 to i8, !dbg !6017
  store i8 %frombool743, i8* %replace, align 1, !dbg !6017, !tbaa !3104
  %447 = load i8*, i8** %src_name.addr, align 8, !dbg !6024, !tbaa !2993
  %448 = load i8*, i8** %dst_name.addr, align 8, !dbg !6026, !tbaa !2993
  %449 = load i8, i8* %replace, align 1, !dbg !6027, !tbaa !3104
  %tobool744 = trunc i8 %449 to i1, !dbg !6027
  %450 = load i8, i8* %dereference65, align 1, !dbg !6028, !tbaa !3104
  %tobool745 = trunc i8 %450 to i1, !dbg !6028
  %call746 = call zeroext i1 @create_hard_link(i8* %447, i8* %448, i1 zeroext %tobool744, i1 zeroext false, i1 zeroext %tobool745), !dbg !6029
  br i1 %call746, label %if.end748, label %if.then747, !dbg !6030

if.then747:                                       ; preds = %lor.end742
  br label %un_backup, !dbg !6031

if.end748:                                        ; preds = %lor.end742
  br label %if.end892, !dbg !6032

if.else749:                                       ; preds = %if.else730
  %451 = load i32, i32* %src_mode, align 4, !dbg !6033, !tbaa !2980
  %and750 = and i32 %451, 61440, !dbg !6033
  %cmp751 = icmp eq i32 %and750, 32768, !dbg !6033
  br i1 %cmp751, label %if.then761, label %lor.lhs.false753, !dbg !6035

lor.lhs.false753:                                 ; preds = %if.else749
  %452 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6036, !tbaa !2993
  %copy_as_regular754 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %452, i32 0, i32 5, !dbg !6037, !ctir !250
  %453 = load i8, i8* %copy_as_regular754, align 4, !dbg !6037, !tbaa !3382
  %tobool755 = trunc i8 %453 to i1, !dbg !6037, !ctir !117
  br i1 %tobool755, label %land.lhs.true757, label %if.else766, !dbg !6038

land.lhs.true757:                                 ; preds = %lor.lhs.false753
  %454 = load i32, i32* %src_mode, align 4, !dbg !6039, !tbaa !2980
  %and758 = and i32 %454, 61440, !dbg !6039
  %cmp759 = icmp eq i32 %and758, 40960, !dbg !6039
  br i1 %cmp759, label %if.else766, label %if.then761, !dbg !6040

if.then761:                                       ; preds = %land.lhs.true757, %if.else749
  store i8 1, i8* %copied_as_regular, align 1, !dbg !6041, !tbaa !3104
  %455 = load i8*, i8** %src_name.addr, align 8, !dbg !6043, !tbaa !2993
  %456 = load i8*, i8** %dst_name.addr, align 8, !dbg !6045, !tbaa !2993
  %457 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6046, !tbaa !2993
  %458 = load i32, i32* %dst_mode_bits, align 4, !dbg !6047, !tbaa !2980
  %and762 = and i32 %458, 511, !dbg !6048
  %459 = load i32, i32* %omitted_permissions, align 4, !dbg !6049, !tbaa !2980
  %call763 = call zeroext i1 @copy_reg(i8* %455, i8* %456, %struct.cp_options* %457, i32 %and762, i32 %459, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !6050
  br i1 %call763, label %if.end765, label %if.then764, !dbg !6051

if.then764:                                       ; preds = %if.then761
  br label %un_backup, !dbg !6052

if.end765:                                        ; preds = %if.then761
  br label %if.end891, !dbg !6053

if.else766:                                       ; preds = %land.lhs.true757, %lor.lhs.false753
  %460 = load i32, i32* %src_mode, align 4, !dbg !6054, !tbaa !2980
  %and767 = and i32 %460, 61440, !dbg !6054
  %cmp768 = icmp eq i32 %and767, 4096, !dbg !6054
  br i1 %cmp768, label %if.then770, label %if.else789, !dbg !6056

if.then770:                                       ; preds = %if.else766
  %461 = load i8*, i8** %dst_name.addr, align 8, !dbg !6057, !tbaa !2993
  %462 = load i32, i32* %src_mode, align 4, !dbg !6060, !tbaa !2980
  %463 = load i32, i32* %omitted_permissions, align 4, !dbg !6061, !tbaa !2980
  %neg771 = xor i32 %463, -1, !dbg !6062
  %and772 = and i32 %462, %neg771, !dbg !6063
  %call773 = call i32 @mknod(i8* %461, i32 %and772, i64 0) #12, !dbg !6064
  %cmp774 = icmp ne i32 %call773, 0, !dbg !6065
  br i1 %cmp774, label %if.then776, label %if.end788, !dbg !6066

if.then776:                                       ; preds = %if.then770
  %464 = load i8*, i8** %dst_name.addr, align 8, !dbg !6067, !tbaa !2993
  %465 = load i32, i32* %src_mode, align 4, !dbg !6069, !tbaa !2980
  %and777 = and i32 %465, -4097, !dbg !6070
  %466 = load i32, i32* %omitted_permissions, align 4, !dbg !6071, !tbaa !2980
  %neg778 = xor i32 %466, -1, !dbg !6072
  %and779 = and i32 %and777, %neg778, !dbg !6073
  %call780 = call i32 @mkfifo(i8* %464, i32 %and779) #12, !dbg !6074
  %cmp781 = icmp ne i32 %call780, 0, !dbg !6075
  br i1 %cmp781, label %if.then783, label %if.end787, !dbg !6076

if.then783:                                       ; preds = %if.then776
  %call784 = call i32* @__errno_location() #15, !dbg !6077
  %467 = load i32, i32* %call784, align 4, !dbg !6077, !tbaa !2980, !ctir !5
  %call785 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.128, i64 0, i64 0)) #12, !dbg !6079
  %468 = load i8*, i8** %dst_name.addr, align 8, !dbg !6080, !tbaa !2993
  %call786 = call i8* @quotearg_style(i32 4, i8* %468), !dbg !6080
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %467, i8* %call785, i8* %call786), !dbg !6081
  br label %un_backup, !dbg !6082

if.end787:                                        ; preds = %if.then776
  br label %if.end788, !dbg !6083

if.end788:                                        ; preds = %if.end787, %if.then770
  br label %if.end890, !dbg !6084

if.else789:                                       ; preds = %if.else766
  %469 = load i32, i32* %src_mode, align 4, !dbg !6085, !tbaa !2980
  %and790 = and i32 %469, 61440, !dbg !6085
  %cmp791 = icmp eq i32 %and790, 24576, !dbg !6085
  br i1 %cmp791, label %if.then801, label %lor.lhs.false793, !dbg !6087

lor.lhs.false793:                                 ; preds = %if.else789
  %470 = load i32, i32* %src_mode, align 4, !dbg !6088, !tbaa !2980
  %and794 = and i32 %470, 61440, !dbg !6088
  %cmp795 = icmp eq i32 %and794, 8192, !dbg !6088
  br i1 %cmp795, label %if.then801, label %lor.lhs.false797, !dbg !6089

lor.lhs.false797:                                 ; preds = %lor.lhs.false793
  %471 = load i32, i32* %src_mode, align 4, !dbg !6090, !tbaa !2980
  %and798 = and i32 %471, 61440, !dbg !6090
  %cmp799 = icmp eq i32 %and798, 49152, !dbg !6090
  br i1 %cmp799, label %if.then801, label %if.else812, !dbg !6091

if.then801:                                       ; preds = %lor.lhs.false797, %lor.lhs.false793, %if.else789
  %472 = load i8*, i8** %dst_name.addr, align 8, !dbg !6092, !tbaa !2993
  %473 = load i32, i32* %src_mode, align 4, !dbg !6095, !tbaa !2980
  %474 = load i32, i32* %omitted_permissions, align 4, !dbg !6096, !tbaa !2980
  %neg802 = xor i32 %474, -1, !dbg !6097
  %and803 = and i32 %473, %neg802, !dbg !6098
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !6099, !ctir !314
  %475 = load i64, i64* %st_rdev, align 8, !dbg !6099, !tbaa !6100, !ctir !228
  %call804 = call i32 @mknod(i8* %472, i32 %and803, i64 %475) #12, !dbg !6101
  %cmp805 = icmp ne i32 %call804, 0, !dbg !6102
  br i1 %cmp805, label %if.then807, label %if.end811, !dbg !6103

if.then807:                                       ; preds = %if.then801
  %call808 = call i32* @__errno_location() #15, !dbg !6104
  %476 = load i32, i32* %call808, align 4, !dbg !6104, !tbaa !2980, !ctir !5
  %call809 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.129, i64 0, i64 0)) #12, !dbg !6106
  %477 = load i8*, i8** %dst_name.addr, align 8, !dbg !6107, !tbaa !2993
  %call810 = call i8* @quotearg_style(i32 4, i8* %477), !dbg !6107
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %476, i8* %call809, i8* %call810), !dbg !6108
  br label %un_backup, !dbg !6109

if.end811:                                        ; preds = %if.then801
  br label %if.end889, !dbg !6110

if.else812:                                       ; preds = %lor.lhs.false797
  %478 = load i32, i32* %src_mode, align 4, !dbg !6111, !tbaa !2980
  %and813 = and i32 %478, 61440, !dbg !6111
  %cmp814 = icmp eq i32 %and813, 40960, !dbg !6111
  br i1 %cmp814, label %if.then816, label %if.else885, !dbg !6113

if.then816:                                       ; preds = %if.else812
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !6114, metadata !DIExpression()), !dbg !6116
  %479 = load i8*, i8** %src_name.addr, align 8, !dbg !6117, !tbaa !2993
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !6118, !ctir !314
  %480 = load i64, i64* %st_size, align 8, !dbg !6118, !tbaa !4505, !ctir !30
  %call817 = call i8* @areadlink_with_size(i8* %479, i64 %480), !dbg !6119
  store i8* %call817, i8** %src_link_val, align 8, !dbg !6116, !tbaa !2993
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !6120, !tbaa !3104
  %481 = load i8*, i8** %src_link_val, align 8, !dbg !6121, !tbaa !2993
  %cmp818 = icmp eq i8* %481, null, !dbg !6123
  br i1 %cmp818, label %if.then820, label %if.end824, !dbg !6124

if.then820:                                       ; preds = %if.then816
  %call821 = call i32* @__errno_location() #15, !dbg !6125
  %482 = load i32, i32* %call821, align 4, !dbg !6125, !tbaa !2980, !ctir !5
  %call822 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.130, i64 0, i64 0)) #12, !dbg !6127
  %483 = load i8*, i8** %src_name.addr, align 8, !dbg !6128, !tbaa !2993
  %call823 = call i8* @quotearg_style(i32 4, i8* %483), !dbg !6128
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %482, i8* %call822, i8* %call823), !dbg !6129
  br label %un_backup, !dbg !6130

if.end824:                                        ; preds = %if.then816
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !6131, metadata !DIExpression()), !dbg !6132
  %484 = load i8*, i8** %src_link_val, align 8, !dbg !6133, !tbaa !2993
  %485 = load i8*, i8** %dst_name.addr, align 8, !dbg !6134, !tbaa !2993
  %486 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6135, !tbaa !2993
  %unlink_dest_after_failed_open825 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %486, i32 0, i32 7, !dbg !6136, !ctir !250
  %487 = load i8, i8* %unlink_dest_after_failed_open825, align 2, !dbg !6136, !tbaa !3398
  %tobool826 = trunc i8 %487 to i1, !dbg !6136, !ctir !117
  %call827 = call i32 @force_symlinkat(i8* %484, i32 -100, i8* %485, i1 zeroext %tobool826, i32 -1), !dbg !6137
  store i32 %call827, i32* %symlink_err, align 4, !dbg !6132, !tbaa !2980
  %488 = load i32, i32* %symlink_err, align 4, !dbg !6138, !tbaa !2980
  %cmp828 = icmp slt i32 0, %488, !dbg !6140
  br i1 %cmp828, label %land.lhs.true830, label %if.end857, !dbg !6141

land.lhs.true830:                                 ; preds = %if.end824
  %489 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6142, !tbaa !2993
  %update831 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %489, i32 0, i32 30, !dbg !6143, !ctir !250
  %490 = load i8, i8* %update831, align 1, !dbg !6143, !tbaa !3189
  %tobool832 = trunc i8 %490 to i1, !dbg !6143, !ctir !117
  br i1 %tobool832, label %land.lhs.true834, label %if.end857, !dbg !6144

land.lhs.true834:                                 ; preds = %land.lhs.true830
  %491 = load i8, i8* %new_dst.addr, align 1, !dbg !6145, !tbaa !3104
  %tobool835 = trunc i8 %491 to i1, !dbg !6145
  br i1 %tobool835, label %if.end857, label %land.lhs.true836, !dbg !6146

land.lhs.true836:                                 ; preds = %land.lhs.true834
  %st_mode837 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6147, !ctir !314
  %492 = load i32, i32* %st_mode837, align 8, !dbg !6147, !tbaa !3176, !ctir !130
  %and838 = and i32 %492, 61440, !dbg !6147
  %cmp839 = icmp eq i32 %and838, 40960, !dbg !6147
  br i1 %cmp839, label %land.lhs.true841, label %if.end857, !dbg !6148

land.lhs.true841:                                 ; preds = %land.lhs.true836
  %st_size842 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !6149, !ctir !314
  %493 = load i64, i64* %st_size842, align 8, !dbg !6149, !tbaa !4505, !ctir !30
  %494 = load i8*, i8** %src_link_val, align 8, !dbg !6150, !tbaa !2993
  %call843 = call i64 @strlen(i8* %494) #14, !dbg !6151
  %cmp844 = icmp eq i64 %493, %call843, !dbg !6152
  br i1 %cmp844, label %if.then846, label %if.end857, !dbg !6153

if.then846:                                       ; preds = %land.lhs.true841
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !6154, metadata !DIExpression()), !dbg !6156
  %495 = load i8*, i8** %dst_name.addr, align 8, !dbg !6157, !tbaa !2993
  %st_size847 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !6158, !ctir !314
  %496 = load i64, i64* %st_size847, align 8, !dbg !6158, !tbaa !4505, !ctir !30
  %call848 = call i8* @areadlink_with_size(i8* %495, i64 %496), !dbg !6159
  store i8* %call848, i8** %dest_link_val, align 8, !dbg !6156, !tbaa !2993
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !6160, !tbaa !2993
  %tobool849 = icmp ne i8* %497, null, !dbg !6160
  br i1 %tobool849, label %if.then850, label %if.end856, !dbg !6162

if.then850:                                       ; preds = %if.then846
  %498 = load i8*, i8** %dest_link_val, align 8, !dbg !6163, !tbaa !2993
  %499 = load i8*, i8** %src_link_val, align 8, !dbg !6163, !tbaa !2993
  %call851 = call i32 @strcmp(i8* %498, i8* %499) #14, !dbg !6163
  %cmp852 = icmp eq i32 %call851, 0, !dbg !6163
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !6166

if.then854:                                       ; preds = %if.then850
  store i32 0, i32* %symlink_err, align 4, !dbg !6167, !tbaa !2980
  br label %if.end855, !dbg !6168

if.end855:                                        ; preds = %if.then854, %if.then850
  %500 = load i8*, i8** %dest_link_val, align 8, !dbg !6169, !tbaa !2993
  call void @free(i8* %500) #12, !dbg !6170
  br label %if.end856, !dbg !6171

if.end856:                                        ; preds = %if.end855, %if.then846
  br label %if.end857, !dbg !6172

if.end857:                                        ; preds = %if.end856, %land.lhs.true841, %land.lhs.true836, %land.lhs.true834, %land.lhs.true830, %if.end824
  %501 = load i8*, i8** %src_link_val, align 8, !dbg !6173, !tbaa !2993
  call void @free(i8* %501) #12, !dbg !6174
  %502 = load i32, i32* %symlink_err, align 4, !dbg !6175, !tbaa !2980
  %cmp858 = icmp slt i32 0, %502, !dbg !6177
  br i1 %cmp858, label %if.then860, label %if.end863, !dbg !6178

if.then860:                                       ; preds = %if.end857
  %503 = load i32, i32* %symlink_err, align 4, !dbg !6179, !tbaa !2980
  %call861 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.131, i64 0, i64 0)) #12, !dbg !6181
  %504 = load i8*, i8** %dst_name.addr, align 8, !dbg !6182, !tbaa !2993
  %call862 = call i8* @quotearg_style(i32 4, i8* %504), !dbg !6182
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %503, i8* %call861, i8* %call862), !dbg !6183
  br label %un_backup, !dbg !6184

if.end863:                                        ; preds = %if.end857
  %505 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6185, !tbaa !2993
  %preserve_security_context864 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %505, i32 0, i32 22, !dbg !6187, !ctir !250
  %506 = load i8, i8* %preserve_security_context864, align 1, !dbg !6187, !tbaa !3205
  %tobool865 = trunc i8 %506 to i1, !dbg !6187, !ctir !117
  br i1 %tobool865, label %if.then866, label %if.end867, !dbg !6188

if.then866:                                       ; preds = %if.end863
  call void @restore_default_fscreatecon_or_die(), !dbg !6189
  br label %if.end867, !dbg !6189

if.end867:                                        ; preds = %if.then866, %if.end863
  %507 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6190, !tbaa !2993
  %preserve_ownership868 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %507, i32 0, i32 14, !dbg !6192, !ctir !250
  %508 = load i8, i8* %preserve_ownership868, align 1, !dbg !6192, !tbaa !3421
  %tobool869 = trunc i8 %508 to i1, !dbg !6192, !ctir !117
  br i1 %tobool869, label %if.then870, label %if.end884, !dbg !6193

if.then870:                                       ; preds = %if.end867
  %509 = load i8*, i8** %dst_name.addr, align 8, !dbg !6194, !tbaa !2993
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !6197, !ctir !314
  %510 = load i32, i32* %st_uid, align 4, !dbg !6197, !tbaa !6198, !ctir !323
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !6199, !ctir !314
  %511 = load i32, i32* %st_gid, align 8, !dbg !6199, !tbaa !6200, !ctir !325
  %call871 = call i32 @lchown(i8* %509, i32 %510, i32 %511) #12, !dbg !6201
  %cmp872 = icmp ne i32 %call871, 0, !dbg !6202
  br i1 %cmp872, label %land.lhs.true874, label %if.else882, !dbg !6203

land.lhs.true874:                                 ; preds = %if.then870
  %512 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6204, !tbaa !2993
  %call875 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %512) #14, !dbg !6205
  br i1 %call875, label %if.else882, label %if.then876, !dbg !6206

if.then876:                                       ; preds = %land.lhs.true874
  %call877 = call i32* @__errno_location() #15, !dbg !6207
  %513 = load i32, i32* %call877, align 4, !dbg !6207, !tbaa !2980, !ctir !5
  %call878 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #12, !dbg !6209
  %514 = load i8*, i8** %dst_name.addr, align 8, !dbg !6210, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %513, i8* %call878, i8* %514), !dbg !6211
  %515 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6212, !tbaa !2993
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %515, i32 0, i32 21, !dbg !6214, !ctir !250
  %516 = load i8, i8* %require_preserve, align 4, !dbg !6214, !tbaa !3456
  %tobool879 = trunc i8 %516 to i1, !dbg !6214, !ctir !117
  br i1 %tobool879, label %if.then880, label %if.end881, !dbg !6215

if.then880:                                       ; preds = %if.then876
  br label %un_backup, !dbg !6216

if.end881:                                        ; preds = %if.then876
  br label %if.end883, !dbg !6217

if.else882:                                       ; preds = %land.lhs.true874, %if.then870
  br label %if.end883

if.end883:                                        ; preds = %if.else882, %if.end881
  br label %if.end884, !dbg !6218

if.end884:                                        ; preds = %if.end883, %if.end867
  br label %if.end888, !dbg !6219

if.else885:                                       ; preds = %if.else812
  %call886 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.133, i64 0, i64 0)) #12, !dbg !6220
  %517 = load i8*, i8** %src_name.addr, align 8, !dbg !6222, !tbaa !2993
  %call887 = call i8* @quotearg_style(i32 4, i8* %517), !dbg !6222
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call886, i8* %call887), !dbg !6223
  br label %un_backup, !dbg !6224

if.end888:                                        ; preds = %if.end884
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.end811
  br label %if.end890

if.end890:                                        ; preds = %if.end889, %if.end788
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %if.end765
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end748
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end729
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end681
  %518 = load i8, i8* %new_dst.addr, align 1, !dbg !6225, !tbaa !3104
  %tobool895 = trunc i8 %518 to i1, !dbg !6225
  br i1 %tobool895, label %if.end921, label %land.lhs.true896, !dbg !6227

land.lhs.true896:                                 ; preds = %if.end894
  %519 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6228, !tbaa !2993
  %copy_as_regular897 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %519, i32 0, i32 5, !dbg !6229, !ctir !250
  %520 = load i8, i8* %copy_as_regular897, align 4, !dbg !6229, !tbaa !3382
  %tobool898 = trunc i8 %520 to i1, !dbg !6229, !ctir !117
  br i1 %tobool898, label %if.end921, label %land.lhs.true899, !dbg !6230

land.lhs.true899:                                 ; preds = %land.lhs.true896
  %521 = load i32, i32* %src_mode, align 4, !dbg !6231, !tbaa !2980
  %and900 = and i32 %521, 61440, !dbg !6231
  %cmp901 = icmp eq i32 %and900, 16384, !dbg !6231
  br i1 %cmp901, label %if.end921, label %land.lhs.true903, !dbg !6232

land.lhs.true903:                                 ; preds = %land.lhs.true899
  %522 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6233, !tbaa !2993
  %set_security_context904 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %522, i32 0, i32 18, !dbg !6234, !ctir !250
  %523 = load i8, i8* %set_security_context904, align 1, !dbg !6234, !tbaa !3208
  %tobool905 = trunc i8 %523 to i1, !dbg !6234, !ctir !117
  br i1 %tobool905, label %if.then911, label %lor.lhs.false907, !dbg !6235

lor.lhs.false907:                                 ; preds = %land.lhs.true903
  %524 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6236, !tbaa !2993
  %preserve_security_context908 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %524, i32 0, i32 22, !dbg !6237, !ctir !250
  %525 = load i8, i8* %preserve_security_context908, align 1, !dbg !6237, !tbaa !3205
  %tobool909 = trunc i8 %525 to i1, !dbg !6237, !ctir !117
  br i1 %tobool909, label %if.then911, label %if.end921, !dbg !6238

if.then911:                                       ; preds = %lor.lhs.false907, %land.lhs.true903
  %526 = load i8*, i8** %dst_name.addr, align 8, !dbg !6239, !tbaa !2993
  %527 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6242, !tbaa !2993
  %preserve_security_context912 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %527, i32 0, i32 22, !dbg !6243, !ctir !250
  %528 = load i8, i8* %preserve_security_context912, align 1, !dbg !6243, !tbaa !3205
  %tobool913 = trunc i8 %528 to i1, !dbg !6243, !ctir !117
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6244, !tbaa !2993
  %call914 = call zeroext i1 @set_file_security_ctx(i8* %526, i1 zeroext %tobool913, i1 zeroext false, %struct.cp_options* %529), !dbg !6245
  br i1 %call914, label %if.end920, label %if.then915, !dbg !6246

if.then915:                                       ; preds = %if.then911
  %530 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6247, !tbaa !2993
  %require_preserve_context916 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %530, i32 0, i32 23, !dbg !6250, !ctir !250
  %531 = load i8, i8* %require_preserve_context916, align 2, !dbg !6250, !tbaa !3460
  %tobool917 = trunc i8 %531 to i1, !dbg !6250, !ctir !117
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !6251

if.then918:                                       ; preds = %if.then915
  br label %un_backup, !dbg !6252

if.end919:                                        ; preds = %if.then915
  br label %if.end920, !dbg !6253

if.end920:                                        ; preds = %if.end919, %if.then911
  br label %if.end921, !dbg !6254

if.end921:                                        ; preds = %if.end920, %lor.lhs.false907, %land.lhs.true899, %land.lhs.true896, %if.end894
  %532 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6255, !tbaa !3104
  %tobool922 = trunc i8 %532 to i1, !dbg !6255
  br i1 %tobool922, label %land.lhs.true924, label %if.end934, !dbg !6257

land.lhs.true924:                                 ; preds = %if.end921
  %533 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6258, !tbaa !2993
  %dest_info925 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %533, i32 0, i32 37, !dbg !6259, !ctir !250
  %534 = load %struct.hash_table*, %struct.hash_table** %dest_info925, align 8, !dbg !6259, !tbaa !3507, !ctir !192
  %tobool926 = icmp ne %struct.hash_table* %534, null, !dbg !6258
  br i1 %tobool926, label %if.then927, label %if.end934, !dbg !6260

if.then927:                                       ; preds = %land.lhs.true924
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6261, metadata !DIExpression()), !dbg !6263
  %535 = load i8*, i8** %dst_name.addr, align 8, !dbg !6264, !tbaa !2993
  %call928 = call i32 @lstat(i8* %535, %struct.stat* %sb) #12, !dbg !6266
  %cmp929 = icmp eq i32 %call928, 0, !dbg !6267
  br i1 %cmp929, label %if.then931, label %if.end933, !dbg !6268

if.then931:                                       ; preds = %if.then927
  %536 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6269, !tbaa !2993
  %dest_info932 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %536, i32 0, i32 37, !dbg !6270, !ctir !250
  %537 = load %struct.hash_table*, %struct.hash_table** %dest_info932, align 8, !dbg !6270, !tbaa !3507, !ctir !192
  %538 = load i8*, i8** %dst_name.addr, align 8, !dbg !6271, !tbaa !2993
  call void @record_file(%struct.hash_table* %537, i8* %538, %struct.stat* %sb), !dbg !6272
  br label %if.end933, !dbg !6272

if.end933:                                        ; preds = %if.then931, %if.then927
  br label %if.end934, !dbg !6273

if.end934:                                        ; preds = %if.end933, %land.lhs.true924, %if.end921
  %539 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6274, !tbaa !2993
  %hard_link935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %539, i32 0, i32 8, !dbg !6276, !ctir !250
  %540 = load i8, i8* %hard_link935, align 1, !dbg !6276, !tbaa !3402
  %tobool936 = trunc i8 %540 to i1, !dbg !6276, !ctir !117
  br i1 %tobool936, label %land.lhs.true938, label %if.end944, !dbg !6277

land.lhs.true938:                                 ; preds = %if.end934
  %541 = load i32, i32* %src_mode, align 4, !dbg !6278, !tbaa !2980
  %and939 = and i32 %541, 61440, !dbg !6278
  %cmp940 = icmp eq i32 %and939, 16384, !dbg !6278
  br i1 %cmp940, label %if.end944, label %if.then942, !dbg !6279

if.then942:                                       ; preds = %land.lhs.true938
  %542 = load i8, i8* %delayed_ok, align 1, !dbg !6280, !tbaa !3104
  %tobool943 = trunc i8 %542 to i1, !dbg !6280
  store i1 %tobool943, i1* %retval, align 1, !dbg !6281
  br label %return, !dbg !6281

if.end944:                                        ; preds = %land.lhs.true938, %if.end934
  %543 = load i8, i8* %copied_as_regular, align 1, !dbg !6282, !tbaa !3104
  %tobool945 = trunc i8 %543 to i1, !dbg !6282
  br i1 %tobool945, label %if.then946, label %if.end948, !dbg !6284

if.then946:                                       ; preds = %if.end944
  %544 = load i8, i8* %delayed_ok, align 1, !dbg !6285, !tbaa !3104
  %tobool947 = trunc i8 %544 to i1, !dbg !6285
  store i1 %tobool947, i1* %retval, align 1, !dbg !6286
  br label %return, !dbg !6286

if.end948:                                        ; preds = %if.end944
  %545 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6287, !tbaa !2993
  %preserve_timestamps949 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %545, i32 0, i32 16, !dbg !6289, !ctir !250
  %546 = load i8, i8* %preserve_timestamps949, align 1, !dbg !6289, !tbaa !3433
  %tobool950 = trunc i8 %546 to i1, !dbg !6289, !ctir !117
  br i1 %tobool950, label %if.then951, label %if.end977, !dbg !6290

if.then951:                                       ; preds = %if.end948
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !6291, metadata !DIExpression()), !dbg !6293
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6294, !ctir !354
  %call953 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !6295
  %547 = bitcast %struct.timespec* %tmp952 to { i64, i64 }*, !dbg !6295
  %548 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 0, !dbg !6295
  %549 = extractvalue { i64, i64 } %call953, 0, !dbg !6295
  store i64 %549, i64* %548, align 8, !dbg !6295
  %550 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 1, !dbg !6295
  %551 = extractvalue { i64, i64 } %call953, 1, !dbg !6295
  store i64 %551, i64* %550, align 8, !dbg !6295
  %552 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !6295
  %553 = bitcast %struct.timespec* %tmp952 to i8*, !dbg !6295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %552, i8* align 8 %553, i64 16, i1 false), !dbg !6295, !tbaa.struct !6296
  %arrayidx954 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !6297, !ctir !354
  %call956 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !6298
  %554 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !6298
  %555 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 0, !dbg !6298
  %556 = extractvalue { i64, i64 } %call956, 0, !dbg !6298
  store i64 %556, i64* %555, align 8, !dbg !6298
  %557 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 1, !dbg !6298
  %558 = extractvalue { i64, i64 } %call956, 1, !dbg !6298
  store i64 %558, i64* %557, align 8, !dbg !6298
  %559 = bitcast %struct.timespec* %arrayidx954 to i8*, !dbg !6298
  %560 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !6298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %559, i8* align 8 %560, i64 16, i1 false), !dbg !6298, !tbaa.struct !6296
  %561 = load i8, i8* %dest_is_symlink, align 1, !dbg !6299, !tbaa !3104
  %tobool957 = trunc i8 %561 to i1, !dbg !6299
  br i1 %tobool957, label %cond.true959, label %cond.false961, !dbg !6299

cond.true959:                                     ; preds = %if.then951
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !6301, !tbaa !2993
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6302
  %call960 = call i32 @utimens_symlink(i8* %562, %struct.timespec* %arraydecay), !dbg !6303
  br label %cond.end964, !dbg !6299

cond.false961:                                    ; preds = %if.then951
  %563 = load i8*, i8** %dst_name.addr, align 8, !dbg !6304, !tbaa !2993
  %arraydecay962 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !6305
  %call963 = call i32 @utimens(i8* %563, %struct.timespec* %arraydecay962), !dbg !6306
  br label %cond.end964, !dbg !6299

cond.end964:                                      ; preds = %cond.false961, %cond.true959
  %cond965 = phi i32 [ %call960, %cond.true959 ], [ %call963, %cond.false961 ], !dbg !6299
  %cmp966 = icmp ne i32 %cond965, 0, !dbg !6307
  br i1 %cmp966, label %if.then968, label %if.end976, !dbg !6308

if.then968:                                       ; preds = %cond.end964
  %call969 = call i32* @__errno_location() #15, !dbg !6309
  %564 = load i32, i32* %call969, align 4, !dbg !6309, !tbaa !2980, !ctir !5
  %call970 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #12, !dbg !6311
  %565 = load i8*, i8** %dst_name.addr, align 8, !dbg !6312, !tbaa !2993
  %call971 = call i8* @quotearg_style(i32 4, i8* %565), !dbg !6312
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %564, i8* %call970, i8* %call971), !dbg !6313
  %566 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6314, !tbaa !2993
  %require_preserve972 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %566, i32 0, i32 21, !dbg !6316, !ctir !250
  %567 = load i8, i8* %require_preserve972, align 4, !dbg !6316, !tbaa !3456
  %tobool973 = trunc i8 %567 to i1, !dbg !6316, !ctir !117
  br i1 %tobool973, label %if.then974, label %if.end975, !dbg !6317

if.then974:                                       ; preds = %if.then968
  store i1 false, i1* %retval, align 1, !dbg !6318
  br label %return, !dbg !6318

if.end975:                                        ; preds = %if.then968
  br label %if.end976, !dbg !6319

if.end976:                                        ; preds = %if.end975, %cond.end964
  br label %if.end977, !dbg !6320

if.end977:                                        ; preds = %if.end976, %if.end948
  %568 = load i8, i8* %dest_is_symlink, align 1, !dbg !6321, !tbaa !3104
  %tobool978 = trunc i8 %568 to i1, !dbg !6321
  br i1 %tobool978, label %if.end1001, label %land.lhs.true979, !dbg !6323

land.lhs.true979:                                 ; preds = %if.end977
  %569 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6324, !tbaa !2993
  %preserve_ownership980 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %569, i32 0, i32 14, !dbg !6325, !ctir !250
  %570 = load i8, i8* %preserve_ownership980, align 1, !dbg !6325, !tbaa !3421
  %tobool981 = trunc i8 %570 to i1, !dbg !6325, !ctir !117
  br i1 %tobool981, label %land.lhs.true983, label %if.end1001, !dbg !6326

land.lhs.true983:                                 ; preds = %land.lhs.true979
  %571 = load i8, i8* %new_dst.addr, align 1, !dbg !6327, !tbaa !3104
  %tobool984 = trunc i8 %571 to i1, !dbg !6327
  br i1 %tobool984, label %if.then996, label %lor.lhs.false986, !dbg !6328

lor.lhs.false986:                                 ; preds = %land.lhs.true983
  %st_uid987 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !6329, !ctir !314
  %572 = load i32, i32* %st_uid987, align 4, !dbg !6329, !tbaa !6198, !ctir !323
  %st_uid988 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !6329, !ctir !314
  %573 = load i32, i32* %st_uid988, align 4, !dbg !6329, !tbaa !6198, !ctir !323
  %cmp989 = icmp eq i32 %572, %573, !dbg !6329
  br i1 %cmp989, label %land.lhs.true991, label %if.then996, !dbg !6329

land.lhs.true991:                                 ; preds = %lor.lhs.false986
  %st_gid992 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !6329, !ctir !314
  %574 = load i32, i32* %st_gid992, align 8, !dbg !6329, !tbaa !6200, !ctir !325
  %st_gid993 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !6329, !ctir !314
  %575 = load i32, i32* %st_gid993, align 8, !dbg !6329, !tbaa !6200, !ctir !325
  %cmp994 = icmp eq i32 %574, %575, !dbg !6329
  br i1 %cmp994, label %if.end1001, label %if.then996, !dbg !6330

if.then996:                                       ; preds = %land.lhs.true991, %lor.lhs.false986, %land.lhs.true983
  %576 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6331, !tbaa !2993
  %577 = load i8*, i8** %dst_name.addr, align 8, !dbg !6333, !tbaa !2993
  %578 = load i8, i8* %new_dst.addr, align 1, !dbg !6334, !tbaa !3104
  %tobool997 = trunc i8 %578 to i1, !dbg !6334
  %call998 = call i32 @set_owner(%struct.cp_options* %576, i8* %577, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool997, %struct.stat* %dst_sb), !dbg !6335
  switch i32 %call998, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb999
  ], !dbg !6336

sw.bb:                                            ; preds = %if.then996
  store i1 false, i1* %retval, align 1, !dbg !6337
  br label %return, !dbg !6337

sw.bb999:                                         ; preds = %if.then996
  %579 = load i32, i32* %src_mode, align 4, !dbg !6339, !tbaa !2980
  %and1000 = and i32 %579, -3585, !dbg !6339
  store i32 %and1000, i32* %src_mode, align 4, !dbg !6339, !tbaa !2980
  br label %sw.epilog, !dbg !6340

sw.epilog:                                        ; preds = %if.then996, %sw.bb999
  br label %if.end1001, !dbg !6341

if.end1001:                                       ; preds = %sw.epilog, %land.lhs.true991, %land.lhs.true979, %if.end977
  %580 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6342, !tbaa !2993
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %580, i32 0, i32 24, !dbg !6344, !ctir !250
  %581 = load i8, i8* %preserve_xattr, align 1, !dbg !6344, !tbaa !3464
  %tobool1002 = trunc i8 %581 to i1, !dbg !6344, !ctir !117
  br i1 %tobool1002, label %land.lhs.true1004, label %if.end1010, !dbg !6345

land.lhs.true1004:                                ; preds = %if.end1001
  %582 = load i8*, i8** %src_name.addr, align 8, !dbg !6346, !tbaa !2993
  %583 = load i8*, i8** %dst_name.addr, align 8, !dbg !6347, !tbaa !2993
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6348, !tbaa !2993
  %call1005 = call zeroext i1 @copy_attr(i8* %582, i32 -1, i8* %583, i32 -1, %struct.cp_options* %584), !dbg !6349
  br i1 %call1005, label %if.end1010, label %land.lhs.true1006, !dbg !6350

land.lhs.true1006:                                ; preds = %land.lhs.true1004
  %585 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6351, !tbaa !2993
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %585, i32 0, i32 25, !dbg !6352, !ctir !250
  %586 = load i8, i8* %require_preserve_xattr, align 8, !dbg !6352, !tbaa !3468
  %tobool1007 = trunc i8 %586 to i1, !dbg !6352, !ctir !117
  br i1 %tobool1007, label %if.then1009, label %if.end1010, !dbg !6353

if.then1009:                                      ; preds = %land.lhs.true1006
  store i1 false, i1* %retval, align 1, !dbg !6354
  br label %return, !dbg !6354

if.end1010:                                       ; preds = %land.lhs.true1006, %land.lhs.true1004, %if.end1001
  %587 = load i8, i8* %dest_is_symlink, align 1, !dbg !6355, !tbaa !3104
  %tobool1011 = trunc i8 %587 to i1, !dbg !6355
  br i1 %tobool1011, label %if.then1012, label %if.end1014, !dbg !6357

if.then1012:                                      ; preds = %if.end1010
  %588 = load i8, i8* %delayed_ok, align 1, !dbg !6358, !tbaa !3104
  %tobool1013 = trunc i8 %588 to i1, !dbg !6358
  store i1 %tobool1013, i1* %retval, align 1, !dbg !6359
  br label %return, !dbg !6359

if.end1014:                                       ; preds = %if.end1010
  %589 = load i8*, i8** %dst_name.addr, align 8, !dbg !6360, !tbaa !2993
  call void @set_author(i8* %589, i32 -1, %struct.stat* %src_sb), !dbg !6361
  %590 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6362, !tbaa !2993
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %590, i32 0, i32 15, !dbg !6364, !ctir !250
  %591 = load i8, i8* %preserve_mode, align 2, !dbg !6364, !tbaa !3429
  %tobool1015 = trunc i8 %591 to i1, !dbg !6364, !ctir !117
  br i1 %tobool1015, label %if.then1021, label %lor.lhs.false1017, !dbg !6365

lor.lhs.false1017:                                ; preds = %if.end1014
  %592 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6366, !tbaa !2993
  %move_mode1018 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %592, i32 0, i32 9, !dbg !6367, !ctir !250
  %593 = load i8, i8* %move_mode1018, align 8, !dbg !6367, !tbaa !3409
  %tobool1019 = trunc i8 %593 to i1, !dbg !6367, !ctir !117
  br i1 %tobool1019, label %if.then1021, label %if.else1031, !dbg !6368

if.then1021:                                      ; preds = %lor.lhs.false1017, %if.end1014
  %594 = load i8*, i8** %src_name.addr, align 8, !dbg !6369, !tbaa !2993
  %595 = load i8*, i8** %dst_name.addr, align 8, !dbg !6372, !tbaa !2993
  %596 = load i32, i32* %src_mode, align 4, !dbg !6373, !tbaa !2980
  %call1022 = call i32 @copy_acl(i8* %594, i32 -1, i8* %595, i32 -1, i32 %596), !dbg !6374
  %cmp1023 = icmp ne i32 %call1022, 0, !dbg !6375
  br i1 %cmp1023, label %land.lhs.true1025, label %if.end1030, !dbg !6376

land.lhs.true1025:                                ; preds = %if.then1021
  %597 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6377, !tbaa !2993
  %require_preserve1026 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %597, i32 0, i32 21, !dbg !6378, !ctir !250
  %598 = load i8, i8* %require_preserve1026, align 4, !dbg !6378, !tbaa !3456
  %tobool1027 = trunc i8 %598 to i1, !dbg !6378, !ctir !117
  br i1 %tobool1027, label %if.then1029, label %if.end1030, !dbg !6379

if.then1029:                                      ; preds = %land.lhs.true1025
  store i1 false, i1* %retval, align 1, !dbg !6380
  br label %return, !dbg !6380

if.end1030:                                       ; preds = %land.lhs.true1025, %if.then1021
  br label %if.end1112, !dbg !6381

if.else1031:                                      ; preds = %lor.lhs.false1017
  %599 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6382, !tbaa !2993
  %set_mode1032 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %599, i32 0, i32 28, !dbg !6384, !ctir !250
  %600 = load i8, i8* %set_mode1032, align 1, !dbg !6384, !tbaa !3484
  %tobool1033 = trunc i8 %600 to i1, !dbg !6384, !ctir !117
  br i1 %tobool1033, label %if.then1034, label %if.else1041, !dbg !6385

if.then1034:                                      ; preds = %if.else1031
  %601 = load i8*, i8** %dst_name.addr, align 8, !dbg !6386, !tbaa !2993
  %602 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6389, !tbaa !2993
  %mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %602, i32 0, i32 4, !dbg !6390, !ctir !250
  %603 = load i32, i32* %mode1035, align 8, !dbg !6390, !tbaa !3488, !ctir !157
  %call1036 = call i32 @set_acl(i8* %601, i32 -1, i32 %603), !dbg !6391
  %cmp1037 = icmp ne i32 %call1036, 0, !dbg !6392
  br i1 %cmp1037, label %if.then1039, label %if.end1040, !dbg !6393

if.then1039:                                      ; preds = %if.then1034
  store i1 false, i1* %retval, align 1, !dbg !6394
  br label %return, !dbg !6394

if.end1040:                                       ; preds = %if.then1034
  br label %if.end1111, !dbg !6395

if.else1041:                                      ; preds = %if.else1031
  %604 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6396, !tbaa !2993
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %604, i32 0, i32 17, !dbg !6398, !ctir !250
  %605 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6398, !tbaa !3437
  %tobool1042 = trunc i8 %605 to i1, !dbg !6398, !ctir !117
  br i1 %tobool1042, label %land.lhs.true1044, label %if.else1065, !dbg !6399

land.lhs.true1044:                                ; preds = %if.else1041
  %606 = load i8, i8* %new_dst.addr, align 1, !dbg !6400, !tbaa !3104
  %tobool1045 = trunc i8 %606 to i1, !dbg !6400
  br i1 %tobool1045, label %if.then1047, label %if.else1065, !dbg !6401

if.then1047:                                      ; preds = %land.lhs.true1044
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !6402, metadata !DIExpression()), !dbg !6404
  %607 = load i32, i32* %src_mode, align 4, !dbg !6405, !tbaa !2980
  %and1048 = and i32 %607, 61440, !dbg !6405
  %cmp1049 = icmp eq i32 %and1048, 16384, !dbg !6405
  br i1 %cmp1049, label %lor.end1055, label %lor.rhs1051, !dbg !6406

lor.rhs1051:                                      ; preds = %if.then1047
  %608 = load i32, i32* %src_mode, align 4, !dbg !6407, !tbaa !2980
  %and1052 = and i32 %608, 61440, !dbg !6407
  %cmp1053 = icmp eq i32 %and1052, 49152, !dbg !6407
  br label %lor.end1055, !dbg !6406

lor.end1055:                                      ; preds = %lor.rhs1051, %if.then1047
  %609 = phi i1 [ true, %if.then1047 ], [ %cmp1053, %lor.rhs1051 ]
  %610 = zext i1 %609 to i64, !dbg !6405
  %cond1056 = select i1 %609, i32 511, i32 438, !dbg !6405
  store i32 %cond1056, i32* %default_permissions, align 4, !dbg !6404, !tbaa !2980
  %611 = load i8*, i8** %dst_name.addr, align 8, !dbg !6408, !tbaa !2993
  %612 = load i32, i32* %default_permissions, align 4, !dbg !6410, !tbaa !2980
  %call1057 = call i32 @cached_umask(), !dbg !6411
  %neg1058 = xor i32 %call1057, -1, !dbg !6412
  %and1059 = and i32 %612, %neg1058, !dbg !6413
  %call1060 = call i32 @set_acl(i8* %611, i32 -1, i32 %and1059), !dbg !6414
  %cmp1061 = icmp ne i32 %call1060, 0, !dbg !6415
  br i1 %cmp1061, label %if.then1063, label %if.end1064, !dbg !6416

if.then1063:                                      ; preds = %lor.end1055
  store i1 false, i1* %retval, align 1, !dbg !6417
  br label %return, !dbg !6417

if.end1064:                                       ; preds = %lor.end1055
  br label %if.end1110, !dbg !6418

if.else1065:                                      ; preds = %land.lhs.true1044, %if.else1041
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !6419, !tbaa !2980
  %tobool1066 = icmp ne i32 %613, 0, !dbg !6419
  br i1 %tobool1066, label %if.then1067, label %if.end1093, !dbg !6422

if.then1067:                                      ; preds = %if.else1065
  %call1068 = call i32 @cached_umask(), !dbg !6423
  %neg1069 = xor i32 %call1068, -1, !dbg !6425
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !6426, !tbaa !2980
  %and1070 = and i32 %614, %neg1069, !dbg !6426
  store i32 %and1070, i32* %omitted_permissions, align 4, !dbg !6426, !tbaa !2980
  %615 = load i32, i32* %omitted_permissions, align 4, !dbg !6427, !tbaa !2980
  %tobool1071 = icmp ne i32 %615, 0, !dbg !6427
  br i1 %tobool1071, label %land.lhs.true1072, label %if.end1092, !dbg !6429

land.lhs.true1072:                                ; preds = %if.then1067
  %616 = load i8, i8* %restore_dst_mode, align 1, !dbg !6430, !tbaa !3104
  %tobool1073 = trunc i8 %616 to i1, !dbg !6430
  br i1 %tobool1073, label %if.end1092, label %if.then1074, !dbg !6431

if.then1074:                                      ; preds = %land.lhs.true1072
  %617 = load i8, i8* %new_dst.addr, align 1, !dbg !6432, !tbaa !3104
  %tobool1075 = trunc i8 %617 to i1, !dbg !6432
  br i1 %tobool1075, label %land.lhs.true1077, label %if.end1085, !dbg !6435

land.lhs.true1077:                                ; preds = %if.then1074
  %618 = load i8*, i8** %dst_name.addr, align 8, !dbg !6436, !tbaa !2993
  %call1078 = call i32 @lstat(i8* %618, %struct.stat* %dst_sb) #12, !dbg !6437
  %cmp1079 = icmp ne i32 %call1078, 0, !dbg !6438
  br i1 %cmp1079, label %if.then1081, label %if.end1085, !dbg !6439

if.then1081:                                      ; preds = %land.lhs.true1077
  %call1082 = call i32* @__errno_location() #15, !dbg !6440
  %619 = load i32, i32* %call1082, align 4, !dbg !6440, !tbaa !2980, !ctir !5
  %call1083 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.97, i64 0, i64 0)) #12, !dbg !6442
  %620 = load i8*, i8** %dst_name.addr, align 8, !dbg !6443, !tbaa !2993
  %call1084 = call i8* @quotearg_style(i32 4, i8* %620), !dbg !6443
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %619, i8* %call1083, i8* %call1084), !dbg !6444
  store i1 false, i1* %retval, align 1, !dbg !6445
  br label %return, !dbg !6445

if.end1085:                                       ; preds = %land.lhs.true1077, %if.then1074
  %st_mode1086 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6446, !ctir !314
  %621 = load i32, i32* %st_mode1086, align 8, !dbg !6446, !tbaa !3176, !ctir !130
  store i32 %621, i32* %dst_mode, align 4, !dbg !6447, !tbaa !2980
  %622 = load i32, i32* %omitted_permissions, align 4, !dbg !6448, !tbaa !2980
  %623 = load i32, i32* %dst_mode, align 4, !dbg !6450, !tbaa !2980
  %neg1087 = xor i32 %623, -1, !dbg !6451
  %and1088 = and i32 %622, %neg1087, !dbg !6452
  %tobool1089 = icmp ne i32 %and1088, 0, !dbg !6452
  br i1 %tobool1089, label %if.then1090, label %if.end1091, !dbg !6453

if.then1090:                                      ; preds = %if.end1085
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !6454, !tbaa !3104
  br label %if.end1091, !dbg !6455

if.end1091:                                       ; preds = %if.then1090, %if.end1085
  br label %if.end1092, !dbg !6456

if.end1092:                                       ; preds = %if.end1091, %land.lhs.true1072, %if.then1067
  br label %if.end1093, !dbg !6457

if.end1093:                                       ; preds = %if.end1092, %if.else1065
  %624 = load i8, i8* %restore_dst_mode, align 1, !dbg !6458, !tbaa !3104
  %tobool1094 = trunc i8 %624 to i1, !dbg !6458
  br i1 %tobool1094, label %if.then1095, label %if.end1109, !dbg !6460

if.then1095:                                      ; preds = %if.end1093
  %625 = load i8*, i8** %dst_name.addr, align 8, !dbg !6461, !tbaa !2993
  %626 = load i32, i32* %dst_mode, align 4, !dbg !6464, !tbaa !2980
  %627 = load i32, i32* %omitted_permissions, align 4, !dbg !6465, !tbaa !2980
  %or1096 = or i32 %626, %627, !dbg !6466
  %call1097 = call i32 @chmod(i8* %625, i32 %or1096) #12, !dbg !6467
  %cmp1098 = icmp ne i32 %call1097, 0, !dbg !6468
  br i1 %cmp1098, label %if.then1100, label %if.end1108, !dbg !6469

if.then1100:                                      ; preds = %if.then1095
  %call1101 = call i32* @__errno_location() #15, !dbg !6470
  %628 = load i32, i32* %call1101, align 4, !dbg !6470, !tbaa !2980, !ctir !5
  %call1102 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #12, !dbg !6472
  %629 = load i8*, i8** %dst_name.addr, align 8, !dbg !6473, !tbaa !2993
  %call1103 = call i8* @quotearg_style(i32 4, i8* %629), !dbg !6473
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %628, i8* %call1102, i8* %call1103), !dbg !6474
  %630 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6475, !tbaa !2993
  %require_preserve1104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %630, i32 0, i32 21, !dbg !6477, !ctir !250
  %631 = load i8, i8* %require_preserve1104, align 4, !dbg !6477, !tbaa !3456
  %tobool1105 = trunc i8 %631 to i1, !dbg !6477, !ctir !117
  br i1 %tobool1105, label %if.then1106, label %if.end1107, !dbg !6478

if.then1106:                                      ; preds = %if.then1100
  store i1 false, i1* %retval, align 1, !dbg !6479
  br label %return, !dbg !6479

if.end1107:                                       ; preds = %if.then1100
  br label %if.end1108, !dbg !6480

if.end1108:                                       ; preds = %if.end1107, %if.then1095
  br label %if.end1109, !dbg !6481

if.end1109:                                       ; preds = %if.end1108, %if.end1093
  br label %if.end1110

if.end1110:                                       ; preds = %if.end1109, %if.end1064
  br label %if.end1111

if.end1111:                                       ; preds = %if.end1110, %if.end1040
  br label %if.end1112

if.end1112:                                       ; preds = %if.end1111, %if.end1030
  %632 = load i8, i8* %delayed_ok, align 1, !dbg !6482, !tbaa !3104
  %tobool1113 = trunc i8 %632 to i1, !dbg !6482
  store i1 %tobool1113, i1* %retval, align 1, !dbg !6483
  br label %return, !dbg !6483

un_backup:                                        ; preds = %if.then918, %if.else885, %if.then880, %if.then860, %if.then820, %if.then807, %if.then783, %if.then764, %if.then747, %if.then725, %if.then715, %if.then664, %if.then628, %if.then616, %if.then609, %if.then593, %if.then486, %if.else474, %if.then450, %if.then160
  call void @llvm.dbg.label(metadata !6484), !dbg !6485
  %633 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6486, !tbaa !2993
  %preserve_security_context1114 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %633, i32 0, i32 22, !dbg !6488, !ctir !250
  %634 = load i8, i8* %preserve_security_context1114, align 1, !dbg !6488, !tbaa !3205
  %tobool1115 = trunc i8 %634 to i1, !dbg !6488, !ctir !117
  br i1 %tobool1115, label %if.then1116, label %if.end1117, !dbg !6489

if.then1116:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !6490
  br label %if.end1117, !dbg !6490

if.end1117:                                       ; preds = %if.then1116, %un_backup
  %635 = load i8*, i8** %earlier_file, align 8, !dbg !6491, !tbaa !2993
  %cmp1118 = icmp eq i8* %635, null, !dbg !6493
  br i1 %cmp1118, label %if.then1120, label %if.end1123, !dbg !6494

if.then1120:                                      ; preds = %if.end1117
  %st_ino1121 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !6495, !ctir !314
  %636 = load i64, i64* %st_ino1121, align 8, !dbg !6495, !tbaa !3859, !ctir !225
  %st_dev1122 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !6496, !ctir !314
  %637 = load i64, i64* %st_dev1122, align 8, !dbg !6496, !tbaa !3862, !ctir !228
  call void @forget_created(i64 %636, i64 %637), !dbg !6497
  br label %if.end1123, !dbg !6497

if.end1123:                                       ; preds = %if.then1120, %if.end1117
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !6498, !tbaa !2993
  %tobool1124 = icmp ne i8* %638, null, !dbg !6498
  br i1 %tobool1124, label %if.then1125, label %if.end1143, !dbg !6500

if.then1125:                                      ; preds = %if.end1123
  %639 = load i8*, i8** %dst_backup, align 8, !dbg !6501, !tbaa !2993
  %640 = load i8*, i8** %dst_name.addr, align 8, !dbg !6504, !tbaa !2993
  %call1126 = call i32 @rename(i8* %639, i8* %640) #12, !dbg !6505
  %cmp1127 = icmp ne i32 %call1126, 0, !dbg !6506
  br i1 %cmp1127, label %if.then1129, label %if.else1133, !dbg !6507

if.then1129:                                      ; preds = %if.then1125
  %call1130 = call i32* @__errno_location() #15, !dbg !6508
  %641 = load i32, i32* %call1130, align 4, !dbg !6508, !tbaa !2980, !ctir !5
  %call1131 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.136, i64 0, i64 0)) #12, !dbg !6509
  %642 = load i8*, i8** %dst_name.addr, align 8, !dbg !6510, !tbaa !2993
  %call1132 = call i8* @quotearg_style(i32 4, i8* %642), !dbg !6510
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %641, i8* %call1131, i8* %call1132), !dbg !6511
  br label %if.end1142, !dbg !6511

if.else1133:                                      ; preds = %if.then1125
  %643 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6512, !tbaa !2993
  %verbose1134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %643, i32 0, i32 31, !dbg !6515, !ctir !250
  %644 = load i8, i8* %verbose1134, align 2, !dbg !6515, !tbaa !3193
  %tobool1135 = trunc i8 %644 to i1, !dbg !6515, !ctir !117
  br i1 %tobool1135, label %if.then1136, label %if.end1141, !dbg !6516

if.then1136:                                      ; preds = %if.else1133
  %call1137 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.137, i64 0, i64 0)) #12, !dbg !6517
  %645 = load i8*, i8** %dst_backup, align 8, !dbg !6518, !tbaa !2993
  %call1138 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %645), !dbg !6518
  %646 = load i8*, i8** %dst_name.addr, align 8, !dbg !6519, !tbaa !2993
  %call1139 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %646), !dbg !6519
  %call1140 = call i32 (i8*, ...) @printf(i8* %call1137, i8* %call1138, i8* %call1139), !dbg !6520
  br label %if.end1141, !dbg !6520

if.end1141:                                       ; preds = %if.then1136, %if.else1133
  br label %if.end1142

if.end1142:                                       ; preds = %if.end1141, %if.then1129
  br label %if.end1143, !dbg !6521

if.end1143:                                       ; preds = %if.end1142, %if.end1123
  store i1 false, i1* %retval, align 1, !dbg !6522
  br label %return, !dbg !6522

return:                                           ; preds = %if.end1143, %if.end1112, %if.then1106, %if.then1081, %if.then1063, %if.then1039, %if.then1029, %if.then1012, %if.then1009, %sw.bb, %if.then974, %if.then946, %if.then942, %if.then587, %if.then552, %if.then533, %if.then527, %if.end524, %if.end487, %if.end464, %if.then374, %if.then330, %if.then297, %cond.end284, %if.then254, %if.else235, %if.then216, %if.else204, %if.then189, %if.then185, %if.end172, %if.end162, %if.then129, %if.then114, %if.then59, %cond.end43, %if.then30
  %647 = load i1, i1* %retval, align 1, !dbg !6523
  ret i1 %647, !dbg !6523
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @follow_fstatat(i32 %dirfd, i8* %filename, %struct.stat* %st, i32 %flags) #4 !dbg !6524 !ctir !355 {
entry:
  %dirfd.addr = alloca i32, align 4, !ctir !5
  %filename.addr = alloca i8*, align 8, !ctir !112
  %st.addr = alloca %struct.stat*, align 8, !ctir !353
  %flags.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store i32 %dirfd, i32* %dirfd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dirfd.addr, metadata !6525, metadata !DIExpression()), !dbg !6526
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !6527, metadata !DIExpression()), !dbg !6528
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !6529, metadata !DIExpression()), !dbg !6530
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6531, metadata !DIExpression()), !dbg !6532
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6533, metadata !DIExpression()), !dbg !6534
  %0 = load i32, i32* %dirfd.addr, align 4, !dbg !6535, !tbaa !2980
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !6536, !tbaa !2993
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !6537, !tbaa !2993
  %3 = load i32, i32* %flags.addr, align 4, !dbg !6538, !tbaa !2980
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 %3) #12, !dbg !6539
  store i32 %call, i32* %result, align 4, !dbg !6534, !tbaa !2980
  %4 = load i32, i32* %result, align 4, !dbg !6540, !tbaa !2980
  ret i32 %4, !dbg !6541
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #9 !dbg !6542 !ctir !357 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %command_line_arg.addr = alloca i8, align 1, !ctir !117
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6543, metadata !DIExpression()), !dbg !6544
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !6545, metadata !DIExpression()), !dbg !6546
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6547, !tbaa !2993
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !6548, !ctir !250
  %1 = load i32, i32* %dereference, align 4, !dbg !6548, !tbaa !3390, !ctir !73
  %cmp = icmp eq i32 %1, 4, !dbg !6549
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6550

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6551, !tbaa !2993
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !6552, !ctir !250
  %3 = load i32, i32* %dereference1, align 4, !dbg !6552, !tbaa !3390, !ctir !73
  %cmp2 = icmp eq i32 %3, 3, !dbg !6553
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6554

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6555, !tbaa !3104
  %tobool = trunc i8 %4 to i1, !dbg !6555
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !6556
  br label %lor.end, !dbg !6550

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !6557
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !6558 !ctir !359 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %return_now.addr = alloca i8*, align 8, !ctir !299
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !312
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !312
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !314
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !314
  %same_link = alloca i8, align 1, !ctir !117
  %same = alloca i8, align 1, !ctir !117
  %sn = alloca i8, align 1, !ctir !117
  %abs_src = alloca i8*, align 8, !ctir !7
  %result = alloca i8, align 1, !ctir !117
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6559, metadata !DIExpression()), !dbg !6560
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6561, metadata !DIExpression()), !dbg !6562
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6563, metadata !DIExpression()), !dbg !6564
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6567, metadata !DIExpression()), !dbg !6568
  store i8* %return_now, i8** %return_now.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !6571, metadata !DIExpression()), !dbg !6572
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !6573, metadata !DIExpression()), !dbg !6574
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !6575, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !6577, metadata !DIExpression()), !dbg !6578
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !6579, metadata !DIExpression()), !dbg !6580
  call void @llvm.dbg.declare(metadata i8* %same, metadata !6581, metadata !DIExpression()), !dbg !6582
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6583, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !6583, !ctir !313
  %1 = load i64, i64* %st_ino, align 8, !dbg !6583, !tbaa !3859, !ctir !225
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6583, !tbaa !2993
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !6583, !ctir !313
  %3 = load i64, i64* %st_ino1, align 8, !dbg !6583, !tbaa !3859, !ctir !225
  %cmp = icmp eq i64 %1, %3, !dbg !6583
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6583

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6583, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !6583, !ctir !313
  %5 = load i64, i64* %st_dev, align 8, !dbg !6583, !tbaa !3862, !ctir !228
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6583, !tbaa !2993
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !6583, !ctir !313
  %7 = load i64, i64* %st_dev2, align 8, !dbg !6583, !tbaa !3862, !ctir !228
  %cmp3 = icmp eq i64 %5, %7, !dbg !6583
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !6584
  %frombool = zext i1 %8 to i8, !dbg !6582
  store i8 %frombool, i8* %same, align 1, !dbg !6582, !tbaa !3104
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !6585, !tbaa !2993
  store i8 0, i8* %9, align 1, !dbg !6586, !tbaa !3104, !ctir !117
  %10 = load i8, i8* %same, align 1, !dbg !6587, !tbaa !3104
  %tobool = trunc i8 %10 to i1, !dbg !6587
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6589

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6590, !tbaa !2993
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !6591, !ctir !250
  %12 = load i8, i8* %hard_link, align 1, !dbg !6591, !tbaa !3402
  %tobool4 = trunc i8 %12 to i1, !dbg !6591, !ctir !117
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6592

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !6593, !tbaa !2993
  store i8 1, i8* %13, align 1, !dbg !6595, !tbaa !3104, !ctir !117
  store i1 true, i1* %retval, align 1, !dbg !6596
  br label %return, !dbg !6596

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6597, !tbaa !2993
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !6599, !ctir !250
  %15 = load i32, i32* %dereference, align 4, !dbg !6599, !tbaa !3390, !ctir !73
  %cmp5 = icmp eq i32 %15, 2, !dbg !6600
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6601

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !6602, !tbaa !3104
  %tobool7 = trunc i8 %16 to i1, !dbg !6602
  %frombool8 = zext i1 %tobool7 to i8, !dbg !6604
  store i8 %frombool8, i8* %same_link, align 1, !dbg !6604, !tbaa !3104
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6605, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6605, !ctir !313
  %18 = load i32, i32* %st_mode, align 8, !dbg !6605, !tbaa !3176, !ctir !130
  %and = and i32 %18, 61440, !dbg !6605
  %cmp9 = icmp eq i32 %and, 40960, !dbg !6605
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !6607

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6608, !tbaa !2993
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !6608, !ctir !313
  %20 = load i32, i32* %st_mode11, align 8, !dbg !6608, !tbaa !3176, !ctir !130
  %and12 = and i32 %20, 61440, !dbg !6608
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !6608
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !6609

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !6610, metadata !DIExpression()), !dbg !6612
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !6613, !tbaa !2993
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !6614, !tbaa !2993
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !6615
  %frombool15 = zext i1 %call to i8, !dbg !6612
  store i8 %frombool15, i8* %sn, align 1, !dbg !6612, !tbaa !3104
  %23 = load i8, i8* %sn, align 1, !dbg !6616, !tbaa !3104
  %tobool16 = trunc i8 %23 to i1, !dbg !6616
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !6618

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6619, !tbaa !2993
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !6622, !ctir !250
  %25 = load i32, i32* %backup_type, align 8, !dbg !6622, !tbaa !3321, !ctir !65
  %cmp18 = icmp ne i32 %25, 0, !dbg !6623
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6624

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !6625
  br label %return, !dbg !6625

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !6626, !tbaa !3104
  %tobool21 = trunc i8 %26 to i1, !dbg !6626
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6628

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !6629, !tbaa !2993
  store i8 1, i8* %27, align 1, !dbg !6631, !tbaa !3104, !ctir !117
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6632, !tbaa !2993
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !6633, !ctir !250
  %29 = load i8, i8* %move_mode, align 8, !dbg !6633, !tbaa !3409
  %tobool23 = trunc i8 %29 to i1, !dbg !6633, !ctir !117
  %lnot = xor i1 %tobool23, true, !dbg !6634
  store i1 %lnot, i1* %retval, align 1, !dbg !6635
  br label %return, !dbg !6635

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !6636

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !6637, !tbaa !3104
  %tobool26 = trunc i8 %30 to i1, !dbg !6637
  %lnot27 = xor i1 %tobool26, true, !dbg !6638
  store i1 %lnot27, i1* %retval, align 1, !dbg !6639
  br label %return, !dbg !6639

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6640, !tbaa !2993
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !6641, !tbaa !2993
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6642, !tbaa !2993
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !6643, !tbaa !2993
  br label %if.end58, !dbg !6644

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !6645, !tbaa !3104
  %tobool29 = trunc i8 %33 to i1, !dbg !6645
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6648

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !6649
  br label %return, !dbg !6649

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6650, !tbaa !2993
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #12, !dbg !6652
  %cmp33 = icmp ne i32 %call32, 0, !dbg !6653
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !6654

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !6655, !tbaa !2993
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #12, !dbg !6656
  %cmp35 = icmp ne i32 %call34, 0, !dbg !6657
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6658

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !6659
  br label %return, !dbg !6659

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !6660, !tbaa !2993
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !6661, !tbaa !2993
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6662, !tbaa !2993
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !6662, !ctir !313
  %37 = load i64, i64* %st_ino38, align 8, !dbg !6662, !tbaa !3859, !ctir !225
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6662, !tbaa !2993
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !6662, !ctir !313
  %39 = load i64, i64* %st_ino39, align 8, !dbg !6662, !tbaa !3859, !ctir !225
  %cmp40 = icmp eq i64 %37, %39, !dbg !6662
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !6662

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6662, !tbaa !2993
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !6662, !ctir !313
  %41 = load i64, i64* %st_dev42, align 8, !dbg !6662, !tbaa !3862, !ctir !228
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6662, !tbaa !2993
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !6662, !ctir !313
  %43 = load i64, i64* %st_dev43, align 8, !dbg !6662, !tbaa !3862, !ctir !228
  %cmp44 = icmp eq i64 %41, %43, !dbg !6662
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !6663
  %frombool46 = zext i1 %44 to i8, !dbg !6664
  store i8 %frombool46, i8* %same_link, align 1, !dbg !6664, !tbaa !3104
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6665, !tbaa !2993
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !6665, !ctir !313
  %46 = load i32, i32* %st_mode47, align 8, !dbg !6665, !tbaa !3176, !ctir !130
  %and48 = and i32 %46, 61440, !dbg !6665
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !6665
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !6667

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6668, !tbaa !2993
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !6668, !ctir !313
  %48 = load i32, i32* %st_mode51, align 8, !dbg !6668, !tbaa !3176, !ctir !130
  %and52 = and i32 %48, 61440, !dbg !6668
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !6668
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !6669

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6670, !tbaa !2993
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !6671, !ctir !250
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6671, !tbaa !3394
  %tobool55 = trunc i8 %50 to i1, !dbg !6671, !ctir !117
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !6672

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !6673
  br label %return, !dbg !6673

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6674, !tbaa !2993
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !6676, !ctir !250
  %52 = load i32, i32* %backup_type59, align 8, !dbg !6676, !tbaa !3321, !ctir !65
  %cmp60 = icmp ne i32 %52, 0, !dbg !6677
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !6678

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !6679, !tbaa !3104
  %tobool62 = trunc i8 %53 to i1, !dbg !6679
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !6682

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6683, !tbaa !2993
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !6686, !ctir !250
  %55 = load i8, i8* %move_mode64, align 8, !dbg !6686, !tbaa !3409
  %tobool65 = trunc i8 %55 to i1, !dbg !6686, !ctir !117
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !6687

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6688, !tbaa !2993
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !6689, !ctir !250
  %57 = load i32, i32* %dereference67, align 4, !dbg !6689, !tbaa !3390, !ctir !73
  %cmp68 = icmp ne i32 %57, 2, !dbg !6690
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !6691

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6692, !tbaa !2993
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !6692, !ctir !313
  %59 = load i32, i32* %st_mode70, align 8, !dbg !6692, !tbaa !3176, !ctir !130
  %and71 = and i32 %59, 61440, !dbg !6692
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !6692
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !6693

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6694, !tbaa !2993
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !6694, !ctir !313
  %61 = load i32, i32* %st_mode74, align 8, !dbg !6694, !tbaa !3176, !ctir !130
  %and75 = and i32 %61, 61440, !dbg !6694
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !6694
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !6695

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !6696
  br label %return, !dbg !6696

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !6697
  br label %return, !dbg !6697

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !6698, !tbaa !2993
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !6699, !tbaa !2993
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !6700
  %lnot81 = xor i1 %call80, true, !dbg !6701
  store i1 %lnot81, i1* %retval, align 1, !dbg !6702
  br label %return, !dbg !6702

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6703, !tbaa !2993
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !6705, !ctir !250
  %65 = load i8, i8* %move_mode83, align 8, !dbg !6705, !tbaa !3409
  %tobool84 = trunc i8 %65 to i1, !dbg !6705, !ctir !117
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !6706

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6707, !tbaa !2993
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !6708, !ctir !250
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !6708, !tbaa !3394
  %tobool87 = trunc i8 %67 to i1, !dbg !6708, !ctir !117
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !6709

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6710, !tbaa !2993
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !6710, !ctir !313
  %69 = load i32, i32* %st_mode89, align 8, !dbg !6710, !tbaa !3176, !ctir !130
  %and90 = and i32 %69, 61440, !dbg !6710
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !6710
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !6713

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !6714
  br label %return, !dbg !6714

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !6715, !tbaa !3104
  %tobool94 = trunc i8 %70 to i1, !dbg !6715
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !6717

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6718, !tbaa !2993
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !6719, !ctir !313
  %72 = load i64, i64* %st_nlink, align 8, !dbg !6719, !tbaa !5395, !ctir !320
  %cmp96 = icmp ult i64 1, %72, !dbg !6720
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !6721

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !6722, !tbaa !2993
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !6723, !tbaa !2993
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !6724
  br i1 %call98, label %if.end103, label %if.then99, !dbg !6725

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6726, !tbaa !2993
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !6727, !ctir !250
  %76 = load i8, i8* %move_mode100, align 8, !dbg !6727, !tbaa !3409
  %tobool101 = trunc i8 %76 to i1, !dbg !6727, !ctir !117
  %lnot102 = xor i1 %tobool101, true, !dbg !6728
  store i1 %lnot102, i1* %retval, align 1, !dbg !6729
  br label %return, !dbg !6729

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !6730

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6731, !tbaa !2993
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !6731, !ctir !313
  %78 = load i32, i32* %st_mode105, align 8, !dbg !6731, !tbaa !3176, !ctir !130
  %and106 = and i32 %78, 61440, !dbg !6731
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !6731
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !6733

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6734, !tbaa !2993
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !6734, !ctir !313
  %80 = load i32, i32* %st_mode109, align 8, !dbg !6734, !tbaa !3176, !ctir !130
  %and110 = and i32 %80, 61440, !dbg !6734
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !6734
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !6735

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6736, !tbaa !2993
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !6736, !ctir !313
  %82 = load i64, i64* %st_ino113, align 8, !dbg !6736, !tbaa !3859, !ctir !225
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6736, !tbaa !2993
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !6736, !ctir !313
  %84 = load i64, i64* %st_ino114, align 8, !dbg !6736, !tbaa !3859, !ctir !225
  %cmp115 = icmp eq i64 %82, %84, !dbg !6736
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !6736

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6736, !tbaa !2993
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !6736, !ctir !313
  %86 = load i64, i64* %st_dev117, align 8, !dbg !6736, !tbaa !3862, !ctir !228
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6736, !tbaa !2993
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !6736, !ctir !313
  %88 = load i64, i64* %st_dev118, align 8, !dbg !6736, !tbaa !3862, !ctir !228
  %cmp119 = icmp eq i64 %86, %88, !dbg !6736
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !6739

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !6740
  br label %return, !dbg !6740

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6741, !tbaa !2993
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !6743, !ctir !250
  %90 = load i8, i8* %hard_link122, align 1, !dbg !6743, !tbaa !3402
  %tobool123 = trunc i8 %90 to i1, !dbg !6743, !ctir !117
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6744

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !6745, !tbaa !2993
  store i8 1, i8* %91, align 1, !dbg !6747, !tbaa !3104, !ctir !117
  store i1 true, i1* %retval, align 1, !dbg !6748
  br label %return, !dbg !6748

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !6749

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6750, !tbaa !2993
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !6752, !ctir !250
  %93 = load i8, i8* %move_mode127, align 8, !dbg !6752, !tbaa !3409
  %tobool128 = trunc i8 %93 to i1, !dbg !6752, !ctir !117
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !6753

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6754, !tbaa !2993
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !6754, !ctir !313
  %95 = load i32, i32* %st_mode130, align 8, !dbg !6754, !tbaa !3176, !ctir !130
  %and131 = and i32 %95, 61440, !dbg !6754
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !6754
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !6755

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6756, !tbaa !2993
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !6757, !ctir !313
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !6757, !tbaa !5395, !ctir !320
  %cmp135 = icmp ult i64 1, %97, !dbg !6758
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !6759

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !6760, metadata !DIExpression()), !dbg !6762
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !6763, !tbaa !2993
  %call137 = call i8* @canonicalize_file_name(i8* %98) #12, !dbg !6764
  store i8* %call137, i8** %abs_src, align 8, !dbg !6762, !tbaa !2993
  %99 = load i8*, i8** %abs_src, align 8, !dbg !6765, !tbaa !2993
  %tobool138 = icmp ne i8* %99, null, !dbg !6765
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !6767

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6768, metadata !DIExpression()), !dbg !6770
  %100 = load i8*, i8** %abs_src, align 8, !dbg !6771, !tbaa !2993
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !6772, !tbaa !2993
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !6773
  %lnot141 = xor i1 %call140, true, !dbg !6774
  %frombool142 = zext i1 %lnot141 to i8, !dbg !6770
  store i8 %frombool142, i8* %result, align 1, !dbg !6770, !tbaa !3104
  %102 = load i8*, i8** %abs_src, align 8, !dbg !6775, !tbaa !2993
  call void @free(i8* %102) #12, !dbg !6776
  %103 = load i8, i8* %result, align 1, !dbg !6777, !tbaa !3104
  %tobool143 = trunc i8 %103 to i1, !dbg !6777
  store i1 %tobool143, i1* %retval, align 1, !dbg !6778
  br label %return, !dbg !6778

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !6779

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6780, !tbaa !2993
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !6782, !ctir !250
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !6782, !tbaa !3480
  %tobool146 = trunc i8 %105 to i1, !dbg !6782, !ctir !117
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !6783

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6784, !tbaa !2993
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !6784, !ctir !313
  %107 = load i32, i32* %st_mode148, align 8, !dbg !6784, !tbaa !3176, !ctir !130
  %and149 = and i32 %107, 61440, !dbg !6784
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !6784
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !6785

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !6786
  br label %return, !dbg !6786

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6787, !tbaa !2993
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !6789, !ctir !250
  %109 = load i32, i32* %dereference153, align 4, !dbg !6789, !tbaa !3390, !ctir !73
  %cmp154 = icmp eq i32 %109, 2, !dbg !6790
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !6791

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6792, !tbaa !2993
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !6792, !ctir !313
  %111 = load i32, i32* %st_mode156, align 8, !dbg !6792, !tbaa !3176, !ctir !130
  %and157 = and i32 %111, 61440, !dbg !6792
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !6792
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !6795

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6796, !tbaa !2993
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !6797
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !6797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !6797, !tbaa.struct !6798
  br label %if.end165, !dbg !6799

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !6800, !tbaa !2993
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #12, !dbg !6802
  %cmp162 = icmp ne i32 %call161, 0, !dbg !6803
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !6804

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !6805
  br label %return, !dbg !6805

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6806, !tbaa !2993
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !6806, !ctir !313
  %117 = load i32, i32* %st_mode166, align 8, !dbg !6806, !tbaa !3176, !ctir !130
  %and167 = and i32 %117, 61440, !dbg !6806
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !6806
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !6808

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6809, !tbaa !2993
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !6810
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !6810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !6810, !tbaa.struct !6798
  br label %if.end175, !dbg !6811

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !6812, !tbaa !2993
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #12, !dbg !6814
  %cmp172 = icmp ne i32 %call171, 0, !dbg !6815
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !6816

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6817
  br label %return, !dbg !6817

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6818, !ctir !314
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6818, !tbaa !3859, !ctir !225
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6818, !ctir !314
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6818, !tbaa !3859, !ctir !225
  %cmp178 = icmp eq i64 %122, %123, !dbg !6818
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6818

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6818, !ctir !314
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6818, !tbaa !3862, !ctir !228
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6818, !ctir !314
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6818, !tbaa !3862, !ctir !228
  %cmp182 = icmp eq i64 %124, %125, !dbg !6818
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6820

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6821
  br label %return, !dbg !6821

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6822, !tbaa !2993
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6824, !ctir !250
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6824, !tbaa !3402
  %tobool186 = trunc i8 %127 to i1, !dbg !6824, !ctir !117
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6825

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6826, !tbaa !2993
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6826, !ctir !313
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6826, !tbaa !3176, !ctir !130
  %and189 = and i32 %129, 61440, !dbg !6826
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6826
  %lnot191 = xor i1 %cmp190, true, !dbg !6828
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6829, !tbaa !2993
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6830
  store i8 %frombool192, i8* %130, align 1, !dbg !6830, !tbaa !3104, !ctir !117
  store i1 true, i1* %retval, align 1, !dbg !6831
  br label %return, !dbg !6831

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6832

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6833
  br label %return, !dbg !6833

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6834
  ret i1 %131, !dbg !6834
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6835 !ctir !361 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %replace.addr = alloca i8, align 1, !ctir !117
  %verbose.addr = alloca i8, align 1, !ctir !117
  %dereference.addr = alloca i8, align 1, !ctir !117
  %err = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6836, metadata !DIExpression()), !dbg !6837
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6838, metadata !DIExpression()), !dbg !6839
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6840, metadata !DIExpression()), !dbg !6841
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6846, metadata !DIExpression()), !dbg !6847
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6848, !tbaa !2993
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6849, !tbaa !2993
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6850, !tbaa !3104
  %tobool = trunc i8 %2 to i1, !dbg !6850
  %3 = zext i1 %tobool to i64, !dbg !6850
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6850
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6851, !tbaa !3104
  %tobool3 = trunc i8 %4 to i1, !dbg !6851
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6852
  store i32 %call, i32* %err, align 4, !dbg !6847, !tbaa !2980
  %5 = load i32, i32* %err, align 4, !dbg !6853, !tbaa !2980
  %cmp = icmp slt i32 0, %5, !dbg !6855
  br i1 %cmp, label %if.then, label %if.end, !dbg !6856

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6857, !tbaa !2980
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.148, i64 0, i64 0)) #12, !dbg !6859
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6860, !tbaa !2993
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6860
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6861, !tbaa !2993
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6861
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6862
  store i1 false, i1* %retval, align 1, !dbg !6863
  br label %return, !dbg !6863

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6864, !tbaa !2980
  %cmp7 = icmp slt i32 %9, 0, !dbg !6866
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6867

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6868, !tbaa !3104
  %tobool8 = trunc i8 %10 to i1, !dbg !6868
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6869

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #12, !dbg !6870
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6871, !tbaa !2993
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6871
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6872
  br label %if.end13, !dbg !6872

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6873
  br label %return, !dbg !6873

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6874
  ret i1 %12, !dbg !6874
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6875 !ctir !363 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6876, metadata !DIExpression()), !dbg !6877
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6878, metadata !DIExpression()), !dbg !6879
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6880, metadata !DIExpression()), !dbg !6881
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6882, !tbaa !2993
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6882, !ctir !250
  %1 = load i8, i8* %move_mode, align 8, !dbg !6882, !tbaa !3409
  %tobool = trunc i8 %1 to i1, !dbg !6882, !ctir !117
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6882

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6882

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.147, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.96, i64 0, i64 0), i32 1782, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6882
  unreachable, !dbg !6882

2:                                                ; No predecessors!
  br label %cond.end, !dbg !6882

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6883, !tbaa !2993
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 2, !dbg !6884, !ctir !250
  %4 = load i32, i32* %interactive, align 8, !dbg !6884, !tbaa !3150, !ctir !80
  %cmp = icmp eq i32 %4, 2, !dbg !6885
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6886

lor.rhs:                                          ; preds = %cond.end
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6887, !tbaa !2993
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 2, !dbg !6888, !ctir !250
  %6 = load i32, i32* %interactive1, align 8, !dbg !6888, !tbaa !3150, !ctir !80
  %cmp2 = icmp eq i32 %6, 3, !dbg !6889
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6890

lor.lhs.false:                                    ; preds = %lor.rhs
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6891, !tbaa !2993
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !6892, !ctir !250
  %8 = load i32, i32* %interactive3, align 8, !dbg !6892, !tbaa !3150, !ctir !80
  %cmp4 = icmp eq i32 %8, 4, !dbg !6893
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6894

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6895, !tbaa !2993
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 32, !dbg !6896, !ctir !250
  %10 = load i8, i8* %stdin_tty, align 1, !dbg !6896, !tbaa !3493
  %tobool5 = trunc i8 %10 to i1, !dbg !6896, !ctir !117
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6897

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6898, !tbaa !2993
  %12 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6899, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !6900, !ctir !313
  %13 = load i32, i32* %st_mode, align 8, !dbg !6900, !tbaa !3176, !ctir !130
  %call = call zeroext i1 @writable_destination(i8* %11, i32 %13), !dbg !6901
  br i1 %call, label %land.end, label %land.rhs, !dbg !6902

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6903, !tbaa !2993
  %15 = load i8*, i8** %dst_name.addr, align 8, !dbg !6904, !tbaa !2993
  %16 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6905, !tbaa !2993
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %14, i8* %15, %struct.stat* %16), !dbg !6906
  %lnot = xor i1 %call7, true, !dbg !6907
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %17 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6908
  br label %lor.end, !dbg !6886

lor.end:                                          ; preds = %land.end, %cond.end
  %18 = phi i1 [ true, %cond.end ], [ %17, %land.end ]
  ret i1 %18, !dbg !6909
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6910 !ctir !363 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %perms = alloca [12 x i8], align 1, !ctir !367
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6915, metadata !DIExpression()), !dbg !6916
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6917, !tbaa !2993
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6919, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6920, !ctir !313
  %2 = load i32, i32* %st_mode, align 8, !dbg !6920, !tbaa !3176, !ctir !130
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6921
  br i1 %call, label %if.else, label %if.then, !dbg !6922

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6923, metadata !DIExpression()), !dbg !6925
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6926, !tbaa !2993
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6927, !ctir !313
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6927, !tbaa !3176, !ctir !130
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6928
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6929
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6930, !ctir !367
  store i8 0, i8* %arrayidx, align 1, !dbg !6931, !tbaa !3652
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6932, !tbaa !2993
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6933, !tbaa !2993
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6934, !ctir !250
  %7 = load i8, i8* %move_mode, align 8, !dbg !6934, !tbaa !3409
  %tobool = trunc i8 %7 to i1, !dbg !6934, !ctir !117
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6935

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6936, !tbaa !2993
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6937, !ctir !250
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6937, !tbaa !3394
  %tobool2 = trunc i8 %9 to i1, !dbg !6937, !ctir !117
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6938

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6939, !tbaa !2993
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6940, !ctir !250
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6940, !tbaa !3398
  %tobool4 = trunc i8 %11 to i1, !dbg !6940, !ctir !117
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6941

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.144, i64 0, i64 0)) #12, !dbg !6942
  br label %cond.end, !dbg !6941

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.145, i64 0, i64 0)) #12, !dbg !6943
  br label %cond.end, !dbg !6941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6941
  %12 = load i8*, i8** @program_name, align 8, !dbg !6944, !tbaa !2993
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6945, !tbaa !2993
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6945
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6946, !tbaa !2993
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6947, !ctir !313
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6947, !tbaa !3176, !ctir !130
  %and = and i32 %15, 4095, !dbg !6948
  %conv = zext i32 %and to i64, !dbg !6949
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6950, !ctir !367
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6951
  br label %if.end, !dbg !6952

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6953, !tbaa !2993
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.146, i64 0, i64 0)) #12, !dbg !6955
  %17 = load i8*, i8** @program_name, align 8, !dbg !6956, !tbaa !2993
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6957, !tbaa !2993
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6957
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6958
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6959
  ret i1 %call14, !dbg !6960
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot.106(i8* %file_name) #4 !dbg !6961 !ctir !197 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %file_name.addr = alloca i8*, align 8, !ctir !112
  %sep = alloca i8, align 1, !ctir !8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !6962, metadata !DIExpression()), !dbg !6963
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !6964, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6964, !ctir !112
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6964, !tbaa !3652
  %conv = sext i8 %1 to i32, !dbg !6964
  %cmp = icmp eq i32 %conv, 46, !dbg !6966
  br i1 %cmp, label %if.then, label %if.else, !dbg !6967

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !6968, metadata !DIExpression()), !dbg !6970
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !6971, !tbaa !2993
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !6972, !tbaa !2993
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6972, !ctir !112
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6972, !tbaa !3652
  %conv3 = sext i8 %4 to i32, !dbg !6972
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !6973
  %conv5 = zext i1 %cmp4 to i32, !dbg !6973
  %add = add nsw i32 %conv5, 1, !dbg !6974
  %idxprom = sext i32 %add to i64, !dbg !6971
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !6971, !ctir !112
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !6971, !tbaa !3652
  store i8 %5, i8* %sep, align 1, !dbg !6970, !tbaa !3652
  %6 = load i8, i8* %sep, align 1, !dbg !6975, !tbaa !3652
  %tobool = icmp ne i8 %6, 0, !dbg !6975
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6976

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !6977, !tbaa !3652
  %conv7 = sext i8 %7 to i32, !dbg !6977
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !6977
  br label %lor.end, !dbg !6976

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !6978
  br label %return, !dbg !6978

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6979
  br label %return, !dbg !6979

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !6980
  ret i1 %9, !dbg !6980
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !6981 !ctir !408 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %srcbase.addr = alloca i8*, align 8, !ctir !112
  %src_st.addr = alloca %struct.stat*, align 8, !ctir !312
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %srcbaselen = alloca i64, align 8, !ctir !52
  %dstbase = alloca i8*, align 8, !ctir !112
  %dstbaselen = alloca i64, align 8, !ctir !52
  %suffixlen = alloca i64, align 8, !ctir !52
  %dstlen = alloca i64, align 8, !ctir !52
  %dst_back = alloca i8*, align 8, !ctir !7
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !314
  %dst_back_status = alloca i32, align 4, !ctir !5
  store i8* %srcbase, i8** %srcbase.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !6982, metadata !DIExpression()), !dbg !6983
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !6984, metadata !DIExpression()), !dbg !6985
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6986, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !6988, metadata !DIExpression()), !dbg !6989
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !6990, !tbaa !2993
  %call = call i64 @strlen(i8* %0) #14, !dbg !6991
  store i64 %call, i64* %srcbaselen, align 8, !dbg !6989, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !6992, metadata !DIExpression()), !dbg !6993
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6994, !tbaa !2993
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !6995
  store i8* %call1, i8** %dstbase, align 8, !dbg !6993, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !6996, metadata !DIExpression()), !dbg !6997
  %2 = load i8*, i8** %dstbase, align 8, !dbg !6998, !tbaa !2993
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !6999
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !6997, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !7000, metadata !DIExpression()), !dbg !7001
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7002, !tbaa !2993
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !7003
  store i64 %call3, i64* %suffixlen, align 8, !dbg !7001, !tbaa !3837
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !7004, !tbaa !3837
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !7006, !tbaa !3837
  %6 = load i64, i64* %suffixlen, align 8, !dbg !7007, !tbaa !3837
  %add = add i64 %5, %6, !dbg !7008
  %cmp = icmp eq i64 %4, %add, !dbg !7009
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !7010

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !7011, !tbaa !2993
  %8 = load i8*, i8** %dstbase, align 8, !dbg !7012, !tbaa !2993
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !7013, !tbaa !3837
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !7014
  %cmp5 = icmp eq i32 %call4, 0, !dbg !7015
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !7016

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !7017, !tbaa !2993
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !7017, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !7017
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7017, !tbaa !2993
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !7017
  %cmp8 = icmp eq i32 %call7, 0, !dbg !7017
  br i1 %cmp8, label %if.end, label %if.then, !dbg !7018

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !7019
  br label %return, !dbg !7019

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !7020, metadata !DIExpression()), !dbg !7021
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !7022, !tbaa !2993
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !7023
  store i64 %call9, i64* %dstlen, align 8, !dbg !7021, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !7024, metadata !DIExpression()), !dbg !7025
  %14 = load i64, i64* %dstlen, align 8, !dbg !7026, !tbaa !3837
  %15 = load i64, i64* %suffixlen, align 8, !dbg !7027, !tbaa !3837
  %add10 = add i64 %14, %15, !dbg !7028
  %add11 = add i64 %add10, 1, !dbg !7029
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !7030
  store i8* %call12, i8** %dst_back, align 8, !dbg !7025, !tbaa !2993
  %16 = load i8*, i8** %dst_back, align 8, !dbg !7031, !tbaa !2993
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !7032, !tbaa !2993
  %18 = load i64, i64* %dstlen, align 8, !dbg !7033, !tbaa !3837
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #12, !dbg !7034
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !7035, !tbaa !2993
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #12, !dbg !7036
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !7037, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !7039, metadata !DIExpression()), !dbg !7040
  %20 = load i8*, i8** %dst_back, align 8, !dbg !7041, !tbaa !2993
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #12, !dbg !7042
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !7040, !tbaa !2980
  %21 = load i8*, i8** %dst_back, align 8, !dbg !7043, !tbaa !2993
  call void @free(i8* %21) #12, !dbg !7044
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !7045, !tbaa !2980
  %cmp16 = icmp eq i32 %22, 0, !dbg !7046
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !7047

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !7048, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !7048, !ctir !313
  %24 = load i64, i64* %st_ino, align 8, !dbg !7048, !tbaa !3859, !ctir !225
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !7048, !ctir !314
  %25 = load i64, i64* %st_ino17, align 8, !dbg !7048, !tbaa !3859, !ctir !225
  %cmp18 = icmp eq i64 %24, %25, !dbg !7048
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !7048

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !7048, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !7048, !ctir !313
  %27 = load i64, i64* %st_dev, align 8, !dbg !7048, !tbaa !3862, !ctir !228
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !7048, !ctir !314
  %28 = load i64, i64* %st_dev20, align 8, !dbg !7048, !tbaa !3862, !ctir !228
  %cmp21 = icmp eq i64 %27, %28, !dbg !7048
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !7049
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !7049
  store i1 %30, i1* %retval, align 1, !dbg !7050
  br label %return, !dbg !7050

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !7051
  ret i1 %31, !dbg !7051
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !7052 !ctir !410 {
entry:
  %src.addr = alloca i8*, align 8, !ctir !112
  %dst.addr = alloca i8*, align 8, !ctir !112
  %backup_dst_name.addr = alloca i8*, align 8, !ctir !112
  store i8* %src, i8** %src.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !7053, metadata !DIExpression()), !dbg !7054
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !7055, metadata !DIExpression()), !dbg !7056
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  %0 = load i8*, i8** %src.addr, align 8, !dbg !7059, !tbaa !2993
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !7059
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !7060, !tbaa !2993
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !7060
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.142, i64 0, i64 0), i8* %call, i8* %call1), !dbg !7061
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !7062, !tbaa !2993
  %tobool = icmp ne i8* %2, null, !dbg !7062
  br i1 %tobool, label %if.then, label %if.end, !dbg !7064

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.143, i64 0, i64 0)) #12, !dbg !7065
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !7066, !tbaa !2993
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !7066
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !7067
  br label %if.end, !dbg !7067

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !7068
  ret void, !dbg !7069
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #9 !dbg !7070 !ctir !412 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %ancestors.addr = alloca %struct.dir_list*, align 8, !ctir !414
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !7073, metadata !DIExpression()), !dbg !7074
  br label %while.cond, !dbg !7075

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7076, !tbaa !2993
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !7077
  br i1 %cmp, label %while.body, label %while.end, !dbg !7075

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7078, !tbaa !2993
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !7081, !ctir !415
  %2 = load i64, i64* %ino, align 8, !dbg !7081, !tbaa !5808, !ctir !224
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7082, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !7083, !ctir !313
  %4 = load i64, i64* %st_ino, align 8, !dbg !7083, !tbaa !3859, !ctir !225
  %cmp1 = icmp eq i64 %2, %4, !dbg !7084
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !7085

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7086, !tbaa !2993
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !7087, !ctir !415
  %6 = load i64, i64* %dev, align 8, !dbg !7087, !tbaa !5813, !ctir !227
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7088, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !7089, !ctir !313
  %8 = load i64, i64* %st_dev, align 8, !dbg !7089, !tbaa !3862, !ctir !228
  %cmp2 = icmp eq i64 %6, %8, !dbg !7090
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7091

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !7092
  br label %return, !dbg !7092

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7093, !tbaa !2993
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !7094, !ctir !415
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !7094, !tbaa !5802, !ctir !347
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !7095, !tbaa !2993
  br label %while.cond, !dbg !7075, !llvm.loop !7096

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !7098
  br label %return, !dbg !7098

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !7099
  ret i1 %11, !dbg !7099
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !7100 !ctir !416 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_name_in.addr = alloca i8*, align 8, !ctir !112
  %dst_name_in.addr = alloca i8*, align 8, !ctir !112
  %new_dst.addr = alloca i8, align 1, !ctir !117
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %ancestors.addr = alloca %struct.dir_list*, align 8, !ctir !347
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8, !ctir !299
  %copy_into_self.addr = alloca i8*, align 8, !ctir !299
  %name_space = alloca i8*, align 8, !ctir !7
  %namep = alloca i8*, align 8, !ctir !7
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !251
  %ok = alloca i8, align 1, !ctir !117
  %new_first_dir_created = alloca i8, align 1, !ctir !117
  %local_copy_into_self = alloca i8, align 1, !ctir !117
  %src_name = alloca i8*, align 8, !ctir !7
  %dst_name = alloca i8*, align 8, !ctir !7
  %first_dir_created = alloca i8, align 1, !ctir !117
  store i8* %src_name_in, i8** %src_name_in.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !7101, metadata !DIExpression()), !dbg !7102
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !7103, metadata !DIExpression()), !dbg !7104
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7105, metadata !DIExpression()), !dbg !7106
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7107, metadata !DIExpression()), !dbg !7108
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !7113, metadata !DIExpression()), !dbg !7114
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !7117, metadata !DIExpression()), !dbg !7118
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !7119, metadata !DIExpression()), !dbg !7120
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !7121, metadata !DIExpression()), !dbg !7122
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7123, !tbaa !2993
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !7124
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !7124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !7124, !tbaa.struct !7125
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7126, metadata !DIExpression()), !dbg !7127
  store i8 1, i8* %ok, align 1, !dbg !7127, !tbaa !3104
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7128, !tbaa !2993
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !7129
  store i8* %call, i8** %name_space, align 8, !dbg !7130, !tbaa !2993
  %4 = load i8*, i8** %name_space, align 8, !dbg !7131, !tbaa !2993
  %cmp = icmp eq i8* %4, null, !dbg !7133
  br i1 %cmp, label %if.then, label %if.end, !dbg !7134

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7135
  %5 = load i32, i32* %call1, align 4, !dbg !7135, !tbaa !2980, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.141, i64 0, i64 0)) #12, !dbg !7137
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7138, !tbaa !2993
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !7138
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !7139
  store i1 false, i1* %retval, align 1, !dbg !7140
  br label %return, !dbg !7140

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7141, !tbaa !2993
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !7143, !ctir !250
  %8 = load i32, i32* %dereference, align 4, !dbg !7143, !tbaa !3390, !ctir !73
  %cmp4 = icmp eq i32 %8, 3, !dbg !7144
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7145

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !7146, !ctir !251
  store i32 2, i32* %dereference6, align 4, !dbg !7147, !tbaa !3390, !ctir !73
  br label %if.end7, !dbg !7148

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !7149, metadata !DIExpression()), !dbg !7150
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !7150, !tbaa !3104
  %9 = load i8*, i8** %name_space, align 8, !dbg !7151, !tbaa !2993
  store i8* %9, i8** %namep, align 8, !dbg !7152, !tbaa !2993
  br label %while.cond, !dbg !7153

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !7154, !tbaa !2993
  %11 = load i8, i8* %10, align 1, !dbg !7155, !tbaa !3652, !ctir !8
  %conv = sext i8 %11 to i32, !dbg !7155
  %cmp8 = icmp ne i32 %conv, 0, !dbg !7156
  br i1 %cmp8, label %while.body, label %while.end, !dbg !7153

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !7157, metadata !DIExpression()), !dbg !7159
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !7160, metadata !DIExpression()), !dbg !7161
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !7162, !tbaa !2993
  %13 = load i8*, i8** %namep, align 8, !dbg !7163, !tbaa !2993
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !7164
  store i8* %call10, i8** %src_name, align 8, !dbg !7161, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !7165, metadata !DIExpression()), !dbg !7166
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !7167, !tbaa !2993
  %15 = load i8*, i8** %namep, align 8, !dbg !7168, !tbaa !2993
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !7169
  store i8* %call11, i8** %dst_name, align 8, !dbg !7166, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !7170, metadata !DIExpression()), !dbg !7171
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !7172, !tbaa !2993
  %17 = load i8, i8* %16, align 1, !dbg !7173, !tbaa !3104
  %tobool = trunc i8 %17 to i1, !dbg !7173, !ctir !117
  %frombool12 = zext i1 %tobool to i8, !dbg !7171
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !7171, !tbaa !3104
  %18 = load i8*, i8** %src_name, align 8, !dbg !7174, !tbaa !2993
  %19 = load i8*, i8** %dst_name, align 8, !dbg !7175, !tbaa !2993
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !7176, !tbaa !3104
  %tobool13 = trunc i8 %20 to i1, !dbg !7176
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7177, !tbaa !2993
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !7178, !tbaa !2993
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !7179
  %conv15 = zext i1 %call14 to i32, !dbg !7179
  %23 = load i8, i8* %ok, align 1, !dbg !7180, !tbaa !3104
  %tobool16 = trunc i8 %23 to i1, !dbg !7180
  %conv17 = zext i1 %tobool16 to i32, !dbg !7180
  %and = and i32 %conv17, %conv15, !dbg !7180
  %tobool18 = icmp ne i32 %and, 0, !dbg !7180
  %frombool19 = zext i1 %tobool18 to i8, !dbg !7180
  store i8 %frombool19, i8* %ok, align 1, !dbg !7180, !tbaa !3104
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !7181, !tbaa !3104
  %tobool20 = trunc i8 %24 to i1, !dbg !7181
  %conv21 = zext i1 %tobool20 to i32, !dbg !7181
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !7182, !tbaa !2993
  %26 = load i8, i8* %25, align 1, !dbg !7183, !tbaa !3104
  %tobool22 = trunc i8 %26 to i1, !dbg !7183, !ctir !117
  %conv23 = zext i1 %tobool22 to i32, !dbg !7183
  %or = or i32 %conv23, %conv21, !dbg !7183
  %tobool24 = icmp ne i32 %or, 0, !dbg !7183
  %frombool25 = zext i1 %tobool24 to i8, !dbg !7183
  store i8 %frombool25, i8* %25, align 1, !dbg !7183, !tbaa !3104, !ctir !117
  %27 = load i8*, i8** %dst_name, align 8, !dbg !7184, !tbaa !2993
  call void @free(i8* %27) #12, !dbg !7185
  %28 = load i8*, i8** %src_name, align 8, !dbg !7186, !tbaa !2993
  call void @free(i8* %28) #12, !dbg !7187
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !7188, !tbaa !3104
  %tobool26 = trunc i8 %29 to i1, !dbg !7188
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7190

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !7191

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !7192, !tbaa !3104
  %tobool29 = trunc i8 %30 to i1, !dbg !7192
  %conv30 = zext i1 %tobool29 to i32, !dbg !7192
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !7193, !tbaa !3104
  %tobool31 = trunc i8 %31 to i1, !dbg !7193
  %conv32 = zext i1 %tobool31 to i32, !dbg !7193
  %or33 = or i32 %conv32, %conv30, !dbg !7193
  %tobool34 = icmp ne i32 %or33, 0, !dbg !7193
  %frombool35 = zext i1 %tobool34 to i8, !dbg !7193
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !7193, !tbaa !3104
  %32 = load i8*, i8** %namep, align 8, !dbg !7194, !tbaa !2993
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !7195
  %add = add i64 %call36, 1, !dbg !7196
  %33 = load i8*, i8** %namep, align 8, !dbg !7197, !tbaa !2993
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !7197
  store i8* %add.ptr, i8** %namep, align 8, !dbg !7197, !tbaa !2993
  br label %while.cond, !dbg !7153, !llvm.loop !7198

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !7200, !tbaa !2993
  call void @free(i8* %34) #12, !dbg !7201
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !7202, !tbaa !3104
  %tobool37 = trunc i8 %35 to i1, !dbg !7202
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !7203, !tbaa !2993
  %frombool38 = zext i1 %tobool37 to i8, !dbg !7204
  store i8 %frombool38, i8* %36, align 1, !dbg !7204, !tbaa !3104, !ctir !117
  %37 = load i8, i8* %ok, align 1, !dbg !7205, !tbaa !3104
  %tobool39 = trunc i8 %37 to i1, !dbg !7205
  store i1 %tobool39, i1* %retval, align 1, !dbg !7206
  br label %return, !dbg !7206

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !7207
  ret i1 %38, !dbg !7207
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !7208 !ctir !418 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %dst_mode.addr = alloca i32, align 4, !ctir !157
  %omitted_permissions.addr = alloca i32, align 4, !ctir !157
  %new_dst.addr = alloca i8*, align 8, !ctir !299
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %buf = alloca i8*, align 8, !ctir !7
  %buf_alloc = alloca i8*, align 8, !ctir !7
  %name_alloc = alloca i8*, align 8, !ctir !7
  %dest_desc = alloca i32, align 4, !ctir !5
  %dest_errno = alloca i32, align 4, !ctir !5
  %source_desc = alloca i32, align 4, !ctir !5
  %src_mode = alloca i32, align 4, !ctir !157
  %sb = alloca %struct.stat, align 8, !ctir !314
  %src_open_sb = alloca %struct.stat, align 8, !ctir !314
  %return_val = alloca i8, align 1, !ctir !117
  %data_copy_required = alloca i8, align 1, !ctir !117
  %open_flags = alloca i32, align 4, !ctir !5
  %open_flags72 = alloca i32, align 4, !ctir !5
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !314
  %clone_ok = alloca i8, align 1, !ctir !117
  %buf_alignment = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %hole_size = alloca i64, align 8, !ctir !52
  %make_holes = alloca i8, align 1, !ctir !117
  %sparse_src = alloca i8, align 1, !ctir !117
  %blcm_max = alloca i64, align 8, !ctir !52
  %blcm = alloca i64, align 8, !ctir !52
  %normal_copy_required = alloca i8, align 1, !ctir !117
  %n_read = alloca i64, align 8, !ctir !245
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !117
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !354
  %tmp = alloca %struct.timespec, align 8, !ctir !334
  %tmp271 = alloca %struct.timespec, align 8, !ctir !334
  %access_changed = alloca i8, align 1, !ctir !117
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7209, metadata !DIExpression()), !dbg !7210
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  store i32 %dst_mode, i32* %dst_mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !7217, metadata !DIExpression()), !dbg !7218
  store i8* %new_dst, i8** %new_dst.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !7219, metadata !DIExpression()), !dbg !7220
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7221, metadata !DIExpression()), !dbg !7222
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !7223, metadata !DIExpression()), !dbg !7224
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !7225, metadata !DIExpression()), !dbg !7226
  store i8* null, i8** %buf_alloc, align 8, !dbg !7226, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !7227, metadata !DIExpression()), !dbg !7228
  store i8* null, i8** %name_alloc, align 8, !dbg !7228, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !7229, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !7231, metadata !DIExpression()), !dbg !7232
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !7233, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !7235, metadata !DIExpression()), !dbg !7236
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7237, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7238, !ctir !313
  %1 = load i32, i32* %st_mode, align 8, !dbg !7238, !tbaa !3176, !ctir !130
  store i32 %1, i32* %src_mode, align 4, !dbg !7236, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7239, metadata !DIExpression()), !dbg !7240
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !7243, metadata !DIExpression()), !dbg !7244
  store i8 1, i8* %return_val, align 1, !dbg !7244, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !7245, metadata !DIExpression()), !dbg !7246
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7247, !tbaa !2993
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !7248, !ctir !250
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !7248, !tbaa !3452
  %tobool = trunc i8 %3 to i1, !dbg !7248, !ctir !117
  %frombool = zext i1 %tobool to i8, !dbg !7246
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !7246, !tbaa !3104
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !7249, !tbaa !2993
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7250, !tbaa !2993
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !7251, !ctir !250
  %6 = load i32, i32* %dereference, align 4, !dbg !7251, !tbaa !3390, !ctir !73
  %cmp = icmp eq i32 %6, 2, !dbg !7252
  %7 = zext i1 %cmp to i64, !dbg !7250
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !7250
  %or = or i32 0, %cond, !dbg !7253
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !7254
  store i32 %call, i32* %source_desc, align 4, !dbg !7255, !tbaa !2980
  %8 = load i32, i32* %source_desc, align 4, !dbg !7256, !tbaa !2980
  %cmp2 = icmp slt i32 %8, 0, !dbg !7258
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7259

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #15, !dbg !7260
  %9 = load i32, i32* %call3, align 4, !dbg !7260, !tbaa !2980, !ctir !5
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.138, i64 0, i64 0)) #12, !dbg !7262
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !7263, !tbaa !2993
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !7263
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !7264
  store i1 false, i1* %retval, align 1, !dbg !7265
  br label %return, !dbg !7265

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !7266, !tbaa !2980
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #12, !dbg !7268
  %cmp7 = icmp ne i32 %call6, 0, !dbg !7269
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !7270

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #15, !dbg !7271
  %12 = load i32, i32* %call9, align 4, !dbg !7271, !tbaa !2980, !ctir !5
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #12, !dbg !7273
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !7274, !tbaa !2993
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !7274
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !7275
  store i8 0, i8* %return_val, align 1, !dbg !7276, !tbaa !3104
  br label %close_src_desc, !dbg !7277

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7278, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !7278, !ctir !313
  %15 = load i64, i64* %st_ino, align 8, !dbg !7278, !tbaa !3859, !ctir !225
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !7278, !ctir !314
  %16 = load i64, i64* %st_ino13, align 8, !dbg !7278, !tbaa !3859, !ctir !225
  %cmp14 = icmp eq i64 %15, %16, !dbg !7278
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !7278

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7278, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !7278, !ctir !313
  %18 = load i64, i64* %st_dev, align 8, !dbg !7278, !tbaa !3862, !ctir !228
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !7278, !ctir !314
  %19 = load i64, i64* %st_dev15, align 8, !dbg !7278, !tbaa !3862, !ctir !228
  %cmp16 = icmp eq i64 %18, %19, !dbg !7278
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !7280

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.140, i64 0, i64 0)) #12, !dbg !7281
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !7283, !tbaa !2993
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !7283
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !7284
  store i8 0, i8* %return_val, align 1, !dbg !7285, !tbaa !3104
  br label %close_src_desc, !dbg !7286

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !7287, !tbaa !2993
  %22 = load i8, i8* %21, align 1, !dbg !7289, !tbaa !3104
  %tobool21 = trunc i8 %22 to i1, !dbg !7289, !ctir !117
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !7290

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !7291, metadata !DIExpression()), !dbg !7293
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7294, !tbaa !2993
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !7295, !ctir !250
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !7295, !tbaa !3452
  %tobool24 = trunc i8 %24 to i1, !dbg !7295, !ctir !117
  %25 = zext i1 %tobool24 to i64, !dbg !7294
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !7294
  %or26 = or i32 1, %cond25, !dbg !7296
  store i32 %or26, i32* %open_flags, align 4, !dbg !7293, !tbaa !2980
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !7297, !tbaa !2993
  %27 = load i32, i32* %open_flags, align 4, !dbg !7298, !tbaa !2980
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !7299
  store i32 %call27, i32* %dest_desc, align 4, !dbg !7300, !tbaa !2980
  %call28 = call i32* @__errno_location() #15, !dbg !7301
  %28 = load i32, i32* %call28, align 4, !dbg !7301, !tbaa !2980, !ctir !5
  store i32 %28, i32* %dest_errno, align 4, !dbg !7302, !tbaa !2980
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7303, !tbaa !2993
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !7305, !ctir !250
  %30 = load i8, i8* %set_security_context, align 1, !dbg !7305, !tbaa !3208
  %tobool29 = trunc i8 %30 to i1, !dbg !7305, !ctir !117
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !7306

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7307, !tbaa !2993
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !7308, !ctir !250
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !7308, !tbaa !3205
  %tobool30 = trunc i8 %32 to i1, !dbg !7308, !ctir !117
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !7309

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !7310, !tbaa !2980
  %cmp32 = icmp sle i32 0, %33, !dbg !7311
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !7312

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !7313, !tbaa !2993
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7316, !tbaa !2993
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !7317, !ctir !250
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !7317, !tbaa !3205
  %tobool35 = trunc i8 %36 to i1, !dbg !7317, !ctir !117
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7318, !tbaa !2993
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !7319
  br i1 %call36, label %if.end41, label %if.then37, !dbg !7320

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7321, !tbaa !2993
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !7324, !ctir !250
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !7324, !tbaa !3460
  %tobool38 = trunc i8 %39 to i1, !dbg !7324, !ctir !117
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !7325

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !7326, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7328

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !7329

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !7330

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !7331, !tbaa !2980
  %cmp43 = icmp slt i32 %40, 0, !dbg !7333
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !7334

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7335, !tbaa !2993
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !7336, !ctir !250
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !7336, !tbaa !3398
  %tobool45 = trunc i8 %42 to i1, !dbg !7336, !ctir !117
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !7337

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !7338, !tbaa !2993
  %call47 = call i32 @unlink(i8* %43) #12, !dbg !7341
  %cmp48 = icmp ne i32 %call47, 0, !dbg !7342
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !7343

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #15, !dbg !7344
  %44 = load i32, i32* %call50, align 4, !dbg !7344, !tbaa !2980, !ctir !5
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.110, i64 0, i64 0)) #12, !dbg !7346
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !7347, !tbaa !2993
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !7347
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !7348
  store i8 0, i8* %return_val, align 1, !dbg !7349, !tbaa !3104
  br label %close_src_desc, !dbg !7350

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7351, !tbaa !2993
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !7353, !ctir !250
  %47 = load i8, i8* %verbose, align 2, !dbg !7353, !tbaa !3193
  %tobool54 = trunc i8 %47 to i1, !dbg !7353, !ctir !117
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !7354

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.111, i64 0, i64 0)) #12, !dbg !7355
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !7356, !tbaa !2993
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !7356
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !7357
  br label %if.end59, !dbg !7357

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !7358, !tbaa !2993
  store i8 1, i8* %49, align 1, !dbg !7359, !tbaa !3104, !ctir !117
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7360, !tbaa !2993
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !7362, !ctir !250
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !7362, !tbaa !3208
  %tobool61 = trunc i8 %51 to i1, !dbg !7362, !ctir !117
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !7363

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !7364, !tbaa !2993
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !7367, !tbaa !2993
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !7368, !tbaa !2980
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !7369, !tbaa !2993
  %56 = load i8, i8* %55, align 1, !dbg !7370, !tbaa !3104
  %tobool63 = trunc i8 %56 to i1, !dbg !7370, !ctir !117
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7371, !tbaa !2993
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !7372
  br i1 %call64, label %if.end66, label %if.then65, !dbg !7373

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !7374, !tbaa !3104
  br label %close_src_desc, !dbg !7376

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !7377

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !7378

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !7379

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !7380, !tbaa !2993
  %59 = load i8, i8* %58, align 1, !dbg !7382, !tbaa !3104
  %tobool70 = trunc i8 %59 to i1, !dbg !7382, !ctir !117
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !7383

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !7384

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !7385), !dbg !7387
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !7388, metadata !DIExpression()), !dbg !7389
  store i32 65, i32* %open_flags72, align 4, !dbg !7389, !tbaa !2980
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7390, !tbaa !2993
  %61 = load i32, i32* %open_flags72, align 4, !dbg !7391, !tbaa !2980
  %or73 = or i32 %61, 128, !dbg !7392
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !7393, !tbaa !2980
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7394, !tbaa !2980
  %neg = xor i32 %63, -1, !dbg !7395
  %and = and i32 %62, %neg, !dbg !7396
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !7397
  store i32 %call74, i32* %dest_desc, align 4, !dbg !7398, !tbaa !2980
  %call75 = call i32* @__errno_location() #15, !dbg !7399
  %64 = load i32, i32* %call75, align 4, !dbg !7399, !tbaa !2980, !ctir !5
  store i32 %64, i32* %dest_errno, align 4, !dbg !7400, !tbaa !2980
  %65 = load i32, i32* %dest_desc, align 4, !dbg !7401, !tbaa !2980
  %cmp76 = icmp slt i32 %65, 0, !dbg !7403
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !7404

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !7405, !tbaa !2980
  %cmp78 = icmp eq i32 %66, 17, !dbg !7406
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !7407

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7408, !tbaa !2993
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !7409, !ctir !250
  %68 = load i8, i8* %move_mode, align 8, !dbg !7409, !tbaa !3409
  %tobool80 = trunc i8 %68 to i1, !dbg !7409, !ctir !117
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !7410

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !7411, metadata !DIExpression()), !dbg !7413
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !7414, !tbaa !2993
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #12, !dbg !7416
  %cmp83 = icmp eq i32 %call82, 0, !dbg !7417
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !7418

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !7419, !ctir !314
  %70 = load i32, i32* %st_mode85, align 8, !dbg !7419, !tbaa !3176, !ctir !130
  %and86 = and i32 %70, 61440, !dbg !7419
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !7419
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !7420

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7421, !tbaa !2993
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !7424, !ctir !250
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !7424, !tbaa !3497
  %tobool89 = trunc i8 %72 to i1, !dbg !7424, !ctir !117
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !7425

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !7426, !tbaa !2993
  %74 = load i32, i32* %open_flags72, align 4, !dbg !7428, !tbaa !2980
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !7429, !tbaa !2980
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7430, !tbaa !2980
  %neg91 = xor i32 %76, -1, !dbg !7431
  %and92 = and i32 %75, %neg91, !dbg !7432
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !7433
  store i32 %call93, i32* %dest_desc, align 4, !dbg !7434, !tbaa !2980
  %call94 = call i32* @__errno_location() #15, !dbg !7435
  %77 = load i32, i32* %call94, align 4, !dbg !7435, !tbaa !2980, !ctir !5
  store i32 %77, i32* %dest_errno, align 4, !dbg !7436, !tbaa !2980
  br label %if.end97, !dbg !7437

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63, i64 0, i64 0)) #12, !dbg !7438
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !7440, !tbaa !2993
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !7440
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !7441
  store i8 0, i8* %return_val, align 1, !dbg !7442, !tbaa !3104
  br label %close_src_desc, !dbg !7443

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !7444

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !7445

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !7446, !tbaa !2980
  %cmp100 = icmp slt i32 %79, 0, !dbg !7448
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !7449

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !7450, !tbaa !2980
  %cmp102 = icmp eq i32 %80, 21, !dbg !7451
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !7452

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !7453, !tbaa !2993
  %82 = load i8, i8* %81, align 1, !dbg !7454, !tbaa !3652, !ctir !113
  %conv = sext i8 %82 to i32, !dbg !7454
  %tobool104 = icmp ne i32 %conv, 0, !dbg !7454
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !7455

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !7456, !tbaa !2993
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !7457, !tbaa !2993
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !7458
  %sub = sub i64 %call106, 1, !dbg !7459
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !7456, !ctir !112
  %85 = load i8, i8* %arrayidx, align 1, !dbg !7456, !tbaa !3652
  %conv107 = sext i8 %85 to i32, !dbg !7456
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !7460
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7461

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !7462, !tbaa !2980
  br label %if.end111, !dbg !7463

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !7464

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !7465, !tbaa !2980
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !7467, !tbaa !2980
  %cmp114 = icmp slt i32 %86, 0, !dbg !7469
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !7470

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !7471, !tbaa !2980
  %cmp117 = icmp eq i32 %87, 2, !dbg !7474
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !7475

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !7476, !tbaa !2993
  %89 = load i8, i8* %88, align 1, !dbg !7477, !tbaa !3104
  %tobool120 = trunc i8 %89 to i1, !dbg !7477, !ctir !117
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !7478

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7479, !tbaa !2993
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !7480, !ctir !250
  %91 = load i8, i8* %move_mode122, align 8, !dbg !7480, !tbaa !3409
  %tobool123 = trunc i8 %91 to i1, !dbg !7480, !ctir !117
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !7481

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !7482, !tbaa !2993
  store i8 1, i8* %92, align 1, !dbg !7484, !tbaa !3104, !ctir !117
  br label %open_with_O_CREAT, !dbg !7485

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !7486, !tbaa !2980
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i64 0, i64 0)) #12, !dbg !7487
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7488, !tbaa !2993
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7488
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !7489
  store i8 0, i8* %return_val, align 1, !dbg !7490, !tbaa !3104
  br label %close_src_desc, !dbg !7491

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !7492, !tbaa !2980
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #12, !dbg !7494
  %cmp130 = icmp ne i32 %call129, 0, !dbg !7495
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !7496

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #15, !dbg !7497
  %96 = load i32, i32* %call133, align 4, !dbg !7497, !tbaa !2980, !ctir !5
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.139, i64 0, i64 0)) #12, !dbg !7499
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !7500, !tbaa !2993
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !7500
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !7501
  store i8 0, i8* %return_val, align 1, !dbg !7502, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7503

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !7504, !tbaa !3104
  %tobool137 = trunc i8 %98 to i1, !dbg !7504
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !7506

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7507, !tbaa !2993
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !7508, !ctir !250
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !7508, !tbaa !3386, !ctir !92
  %tobool140 = icmp ne i32 %100, 0, !dbg !7507
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !7509

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !7510, metadata !DIExpression()), !dbg !7512
  %101 = load i32, i32* %dest_desc, align 4, !dbg !7513, !tbaa !2980
  %102 = load i32, i32* %source_desc, align 4, !dbg !7514, !tbaa !2980
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !7515
  %cmp143 = icmp eq i32 %call142, 0, !dbg !7516
  %frombool145 = zext i1 %cmp143 to i8, !dbg !7512
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !7512, !tbaa !3104
  %103 = load i8, i8* %clone_ok, align 1, !dbg !7517, !tbaa !3104
  %tobool146 = trunc i8 %103 to i1, !dbg !7517
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !7519

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7520, !tbaa !2993
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !7521, !ctir !250
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !7521, !tbaa !3386, !ctir !92
  %cmp150 = icmp eq i32 %105, 2, !dbg !7522
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !7523

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !7524, !tbaa !3104
  %tobool153 = trunc i8 %106 to i1, !dbg !7524
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !7527

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #15, !dbg !7528
  %107 = load i32, i32* %call155, align 4, !dbg !7528, !tbaa !2980, !ctir !5
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65, i64 0, i64 0)) #12, !dbg !7530
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !7531, !tbaa !2993
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !7531
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !7532, !tbaa !2993
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !7532
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !7533
  store i8 0, i8* %return_val, align 1, !dbg !7534, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7535

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !7536, !tbaa !3104
  br label %if.end160, !dbg !7537

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !7538

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !7539, !tbaa !3104
  %tobool162 = trunc i8 %110 to i1, !dbg !7539
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !7541

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !7542, metadata !DIExpression()), !dbg !7544
  %call164 = call i32 @getpagesize() #15, !dbg !7545
  %conv165 = sext i32 %call164 to i64, !dbg !7545
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !7544, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !7546, metadata !DIExpression()), !dbg !7547
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !7548
  store i64 %call166, i64* %buf_size, align 8, !dbg !7547, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !7549, metadata !DIExpression()), !dbg !7550
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7551, !ctir !314
  %111 = load i64, i64* %st_blksize, align 8, !dbg !7551, !tbaa !7552, !ctir !330
  %cmp167 = icmp slt i64 0, %111, !dbg !7551
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !7551

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7551, !ctir !314
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !7551, !tbaa !7552, !ctir !330
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !7551
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !7551

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7551, !ctir !314
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !7551, !tbaa !7552, !ctir !330
  br label %cond.end, !dbg !7551

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !7551

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !7551
  store i64 %cond174, i64* %hole_size, align 8, !dbg !7550, !tbaa !3837
  %114 = load i32, i32* %source_desc, align 4, !dbg !7553, !tbaa !2980
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !7554
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !7555, metadata !DIExpression()), !dbg !7556
  store i8 0, i8* %make_holes, align 1, !dbg !7556, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !7557, metadata !DIExpression()), !dbg !7558
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !7559
  %frombool176 = zext i1 %call175 to i8, !dbg !7558
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !7558, !tbaa !3104
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7560, !ctir !314
  %115 = load i32, i32* %st_mode177, align 8, !dbg !7560, !tbaa !3176, !ctir !130
  %and178 = and i32 %115, 61440, !dbg !7560
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !7560
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !7562

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7563, !tbaa !2993
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !7566, !ctir !250
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !7566, !tbaa !3476, !ctir !86
  %cmp182 = icmp eq i32 %117, 3, !dbg !7567
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !7568

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !7569, !tbaa !3104
  br label %if.end185, !dbg !7570

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7571, !tbaa !2993
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !7573, !ctir !250
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !7573, !tbaa !3476, !ctir !86
  %cmp187 = icmp eq i32 %119, 2, !dbg !7574
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !7575

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !7576, !tbaa !3104
  %tobool190 = trunc i8 %120 to i1, !dbg !7576
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !7577

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !7578, !tbaa !3104
  br label %if.end193, !dbg !7579

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !7580

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !7581, !tbaa !3104
  %tobool195 = trunc i8 %121 to i1, !dbg !7581
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !7583

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !7584, metadata !DIExpression()), !dbg !7586
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !7587, !tbaa !3837
  %sub197 = sub i64 9223372036854775807, %122, !dbg !7588
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !7586, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !7589, metadata !DIExpression()), !dbg !7590
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !7591
  %123 = load i64, i64* %buf_size, align 8, !dbg !7592, !tbaa !3837
  %124 = load i64, i64* %blcm_max, align 8, !dbg !7593, !tbaa !3837
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #15, !dbg !7594
  store i64 %call199, i64* %blcm, align 8, !dbg !7590, !tbaa !3837
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !7595, !ctir !314
  %125 = load i32, i32* %st_mode200, align 8, !dbg !7595, !tbaa !3176, !ctir !130
  %and201 = and i32 %125, 61440, !dbg !7595
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !7595
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !7597

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7598, !ctir !314
  %126 = load i64, i64* %st_size, align 8, !dbg !7598, !tbaa !4505, !ctir !30
  %127 = load i64, i64* %buf_size, align 8, !dbg !7599, !tbaa !3837
  %cmp205 = icmp ult i64 %126, %127, !dbg !7600
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !7601

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7602, !ctir !314
  %128 = load i64, i64* %st_size208, align 8, !dbg !7602, !tbaa !4505, !ctir !30
  %add = add nsw i64 %128, 1, !dbg !7603
  store i64 %add, i64* %buf_size, align 8, !dbg !7604, !tbaa !3837
  br label %if.end209, !dbg !7605

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !7606, !tbaa !3837
  %sub210 = sub i64 %129, 1, !dbg !7607
  %130 = load i64, i64* %buf_size, align 8, !dbg !7608, !tbaa !3837
  %add211 = add i64 %130, %sub210, !dbg !7608
  store i64 %add211, i64* %buf_size, align 8, !dbg !7608, !tbaa !3837
  %131 = load i64, i64* %buf_size, align 8, !dbg !7609, !tbaa !3837
  %132 = load i64, i64* %blcm, align 8, !dbg !7610, !tbaa !3837
  %rem = urem i64 %131, %132, !dbg !7611
  %133 = load i64, i64* %buf_size, align 8, !dbg !7612, !tbaa !3837
  %sub212 = sub i64 %133, %rem, !dbg !7612
  store i64 %sub212, i64* %buf_size, align 8, !dbg !7612, !tbaa !3837
  %134 = load i64, i64* %buf_size, align 8, !dbg !7613, !tbaa !3837
  %cmp213 = icmp eq i64 %134, 0, !dbg !7615
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !7616

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !7617, !tbaa !3837
  %136 = load i64, i64* %buf_size, align 8, !dbg !7618, !tbaa !3837
  %cmp216 = icmp ult i64 %135, %136, !dbg !7619
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !7620

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !7621, !tbaa !3837
  store i64 %137, i64* %buf_size, align 8, !dbg !7622, !tbaa !3837
  br label %if.end219, !dbg !7623

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !7624

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !7625, !tbaa !3837
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !7626, !tbaa !3837
  %add221 = add i64 %138, %139, !dbg !7627
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !7628
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !7629, !tbaa !2993
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !7630, !tbaa !2993
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !7631, !tbaa !3837
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !7632
  store i8* %call223, i8** %buf, align 8, !dbg !7633, !tbaa !2993
  %142 = load i8, i8* %sparse_src, align 1, !dbg !7634, !tbaa !3104
  %tobool224 = trunc i8 %142 to i1, !dbg !7634
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !7636

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !7637, metadata !DIExpression()), !dbg !7639
  %143 = load i32, i32* %source_desc, align 4, !dbg !7640, !tbaa !2980
  %144 = load i32, i32* %dest_desc, align 4, !dbg !7642, !tbaa !2980
  %145 = load i8*, i8** %buf, align 8, !dbg !7643, !tbaa !2993
  %146 = load i64, i64* %buf_size, align 8, !dbg !7644, !tbaa !3837
  %147 = load i64, i64* %hole_size, align 8, !dbg !7645, !tbaa !3837
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7646, !ctir !314
  %148 = load i64, i64* %st_size226, align 8, !dbg !7646, !tbaa !4505, !ctir !30
  %149 = load i8, i8* %make_holes, align 1, !dbg !7647, !tbaa !3104
  %tobool227 = trunc i8 %149 to i1, !dbg !7647
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !7647

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7648, !tbaa !2993
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !7649, !ctir !250
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !7649, !tbaa !3476, !ctir !86
  br label %cond.end232, !dbg !7647

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !7647

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !7647
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !7650, !tbaa !2993
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !7651, !tbaa !2993
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !7652
  br i1 %call234, label %if.then235, label %if.end236, !dbg !7653

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !7654

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !7655, !tbaa !3104
  %tobool237 = trunc i8 %154 to i1, !dbg !7655
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !7657

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !7658, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7660

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !7661

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7664, metadata !DIExpression()), !dbg !7665
  %155 = load i32, i32* %source_desc, align 4, !dbg !7666, !tbaa !2980
  %156 = load i32, i32* %dest_desc, align 4, !dbg !7668, !tbaa !2980
  %157 = load i8*, i8** %buf, align 8, !dbg !7669, !tbaa !2993
  %158 = load i64, i64* %buf_size, align 8, !dbg !7670, !tbaa !3837
  %159 = load i8, i8* %make_holes, align 1, !dbg !7671, !tbaa !3104
  %tobool241 = trunc i8 %159 to i1, !dbg !7671
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !7671

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !7672, !tbaa !3837
  br label %cond.end245, !dbg !7671

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !7671

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !7671
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7673, !tbaa !2993
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !7674, !ctir !250
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !7674, !tbaa !3476, !ctir !86
  %cmp248 = icmp eq i32 %162, 3, !dbg !7675
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !7676, !tbaa !2993
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !7677, !tbaa !2993
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !7678
  br i1 %call250, label %if.else252, label %if.then251, !dbg !7679

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !7680, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7682

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7683, !tbaa !3104
  %tobool253 = trunc i8 %165 to i1, !dbg !7683
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !7685

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !7686, !tbaa !2980
  %167 = load i64, i64* %n_read, align 8, !dbg !7687, !tbaa !3837
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #12, !dbg !7688
  %cmp257 = icmp slt i32 %call256, 0, !dbg !7689
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !7690

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #15, !dbg !7691
  %168 = load i32, i32* %call260, align 4, !dbg !7691, !tbaa !2980, !ctir !5
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !7693
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !7694, !tbaa !2993
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !7694
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !7695
  store i8 0, i8* %return_val, align 1, !dbg !7696, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7697

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !7698

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !7539

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !7699), !dbg !7700
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7701, !tbaa !2993
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !7703, !ctir !250
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !7703, !tbaa !3433
  %tobool266 = trunc i8 %171 to i1, !dbg !7703, !ctir !117
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !7704

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !7705, metadata !DIExpression()), !dbg !7707
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7708, !ctir !354
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7709, !tbaa !2993
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !7710
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !7710
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !7710
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !7710
  store i64 %175, i64* %174, align 8, !dbg !7710
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !7710
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !7710
  store i64 %177, i64* %176, align 8, !dbg !7710
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !7710
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !7710
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !7710, !tbaa.struct !6296
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !7711, !ctir !354
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7712, !tbaa !2993
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !7713
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !7713
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !7713
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !7713
  store i64 %183, i64* %182, align 8, !dbg !7713
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !7713
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !7713
  store i64 %185, i64* %184, align 8, !dbg !7713
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !7713
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !7713
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !7713, !tbaa.struct !6296
  %188 = load i32, i32* %dest_desc, align 4, !dbg !7714, !tbaa !2980
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !7716, !tbaa !2993
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7717
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !7718
  %cmp274 = icmp ne i32 %call273, 0, !dbg !7719
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !7720

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #15, !dbg !7721
  %190 = load i32, i32* %call277, align 4, !dbg !7721, !tbaa !2980, !ctir !5
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.134, i64 0, i64 0)) #12, !dbg !7723
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !7724, !tbaa !2993
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !7724
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !7725
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7726, !tbaa !2993
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !7728, !ctir !250
  %193 = load i8, i8* %require_preserve, align 4, !dbg !7728, !tbaa !3456
  %tobool280 = trunc i8 %193 to i1, !dbg !7728, !ctir !117
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !7729

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !7730, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7732

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !7733

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !7734

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7735, !tbaa !2993
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !7737, !ctir !250
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !7737, !tbaa !3421
  %tobool285 = trunc i8 %195 to i1, !dbg !7737, !ctir !117
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !7738

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7739, !tbaa !2993
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !7739, !ctir !313
  %197 = load i32, i32* %st_uid, align 4, !dbg !7739, !tbaa !6198, !ctir !323
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !7739, !ctir !314
  %198 = load i32, i32* %st_uid288, align 4, !dbg !7739, !tbaa !6198, !ctir !323
  %cmp289 = icmp eq i32 %197, %198, !dbg !7739
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !7739

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7739, !tbaa !2993
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !7739, !ctir !313
  %200 = load i32, i32* %st_gid, align 8, !dbg !7739, !tbaa !6200, !ctir !325
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !7739, !ctir !314
  %201 = load i32, i32* %st_gid292, align 8, !dbg !7739, !tbaa !6200, !ctir !325
  %cmp293 = icmp eq i32 %200, %201, !dbg !7739
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !7740

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7741, !tbaa !2993
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !7743, !tbaa !2993
  %204 = load i32, i32* %dest_desc, align 4, !dbg !7744, !tbaa !2980
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7745, !tbaa !2993
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !7746, !tbaa !2993
  %207 = load i8, i8* %206, align 1, !dbg !7747, !tbaa !3104
  %tobool296 = trunc i8 %207 to i1, !dbg !7747, !ctir !117
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !7748
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !7749

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !7750, !tbaa !3104
  br label %close_src_and_dst_desc, !dbg !7752

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !7753, !tbaa !2980
  %and299 = and i32 %208, -3585, !dbg !7753
  store i32 %and299, i32* %src_mode, align 4, !dbg !7753, !tbaa !2980
  br label %sw.epilog, !dbg !7754

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !7755

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7756, !tbaa !2993
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !7758, !ctir !250
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !7758, !tbaa !3464
  %tobool301 = trunc i8 %210 to i1, !dbg !7758, !ctir !117
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !7759

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !7760, metadata !DIExpression()), !dbg !7762
  store i8 0, i8* %access_changed, align 1, !dbg !7762, !tbaa !3104
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7763, !ctir !314
  %211 = load i32, i32* %st_mode303, align 8, !dbg !7763, !tbaa !3176, !ctir !130
  %and304 = and i32 %211, 128, !dbg !7765
  %tobool305 = icmp ne i32 %and304, 0, !dbg !7765
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !7766

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #12, !dbg !7767
  %cmp308 = icmp ne i32 %call307, 0, !dbg !7768
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !7769

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !7770, !tbaa !2980
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !7772, !tbaa !2993
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !7773
  %cmp312 = icmp eq i32 %call311, 0, !dbg !7774
  %frombool314 = zext i1 %cmp312 to i8, !dbg !7775
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !7775, !tbaa !3104
  br label %if.end315, !dbg !7776

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !7777, !tbaa !2993
  %215 = load i32, i32* %source_desc, align 4, !dbg !7779, !tbaa !2980
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !7780, !tbaa !2993
  %217 = load i32, i32* %dest_desc, align 4, !dbg !7781, !tbaa !2980
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7782, !tbaa !2993
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !7783
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !7784

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7785, !tbaa !2993
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !7786, !ctir !250
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7786, !tbaa !3468
  %tobool318 = trunc i8 %220 to i1, !dbg !7786, !ctir !117
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !7787

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !7788, !tbaa !3104
  br label %if.end321, !dbg !7789

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !7790, !tbaa !3104
  %tobool322 = trunc i8 %221 to i1, !dbg !7790
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !7792

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !7793, !tbaa !2980
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !7794, !tbaa !2993
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !7795, !tbaa !2980
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7796, !tbaa !2980
  %neg324 = xor i32 %225, -1, !dbg !7797
  %and325 = and i32 %224, %neg324, !dbg !7798
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !7799
  br label %if.end327, !dbg !7799

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7800

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7801, !tbaa !2993
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7802, !tbaa !2980
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7803, !tbaa !2993
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7804
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7805, !tbaa !2993
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7807, !ctir !250
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7807, !tbaa !3429
  %tobool329 = trunc i8 %230 to i1, !dbg !7807, !ctir !117
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7808

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7809, !tbaa !2993
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7810, !ctir !250
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7810, !tbaa !3409
  %tobool333 = trunc i8 %232 to i1, !dbg !7810, !ctir !117
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7811

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7812, !tbaa !2993
  %234 = load i32, i32* %source_desc, align 4, !dbg !7815, !tbaa !2980
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7816, !tbaa !2993
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7817, !tbaa !2980
  %237 = load i32, i32* %src_mode, align 4, !dbg !7818, !tbaa !2980
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7819
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7820
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7821

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7822, !tbaa !2993
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7823, !ctir !250
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7823, !tbaa !3456
  %tobool341 = trunc i8 %239 to i1, !dbg !7823, !ctir !117
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7824

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7825, !tbaa !3104
  br label %if.end344, !dbg !7826

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7827

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7828, !tbaa !2993
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7830, !ctir !250
  %241 = load i8, i8* %set_mode, align 1, !dbg !7830, !tbaa !3484
  %tobool346 = trunc i8 %241 to i1, !dbg !7830, !ctir !117
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7831

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7832, !tbaa !2993
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7835, !tbaa !2980
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7836, !tbaa !2993
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7837, !ctir !250
  %245 = load i32, i32* %mode, align 8, !dbg !7837, !tbaa !3488, !ctir !157
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7838
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7839
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7840

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7841, !tbaa !3104
  br label %if.end352, !dbg !7842

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7843

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7844, !tbaa !2993
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7846, !ctir !250
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7846, !tbaa !3437
  %tobool354 = trunc i8 %247 to i1, !dbg !7846, !ctir !117
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7847

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7848, !tbaa !2993
  %249 = load i8, i8* %248, align 1, !dbg !7849, !tbaa !3104
  %tobool357 = trunc i8 %249 to i1, !dbg !7849, !ctir !117
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7850

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7851, !tbaa !2993
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7854, !tbaa !2980
  %call360 = call i32 @cached_umask(), !dbg !7855
  %neg361 = xor i32 %call360, -1, !dbg !7856
  %and362 = and i32 438, %neg361, !dbg !7857
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7858
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7859
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7860

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7861, !tbaa !3104
  br label %if.end367, !dbg !7862

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7863

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7864, !tbaa !2980
  %tobool369 = icmp ne i32 %252, 0, !dbg !7864
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7866

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7867
  %neg372 = xor i32 %call371, -1, !dbg !7869
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7870, !tbaa !2980
  %and373 = and i32 %253, %neg372, !dbg !7870
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7870, !tbaa !2980
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7871, !tbaa !2980
  %tobool374 = icmp ne i32 %254, 0, !dbg !7871
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7873

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7874, !tbaa !2980
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7875, !tbaa !2993
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7876, !tbaa !2980
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7877
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7878
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7879

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #15, !dbg !7880
  %258 = load i32, i32* %call380, align 4, !dbg !7880, !tbaa !2980, !ctir !5
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.135, i64 0, i64 0)) #12, !dbg !7882
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7883, !tbaa !2993
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7883
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7884
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7885, !tbaa !2993
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7887, !ctir !250
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7887, !tbaa !3456
  %tobool384 = trunc i8 %261 to i1, !dbg !7887, !ctir !117
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7888

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7889, !tbaa !3104
  br label %if.end386, !dbg !7890

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7891

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7892

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7810

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7893), !dbg !7894
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7895, !tbaa !2980
  %call392 = call i32 @close(i32 %262), !dbg !7897
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7898
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7899

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #15, !dbg !7900
  %263 = load i32, i32* %call396, align 4, !dbg !7900, !tbaa !2980, !ctir !5
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #12, !dbg !7902
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7903, !tbaa !2993
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7903
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7904
  store i8 0, i8* %return_val, align 1, !dbg !7905, !tbaa !3104
  br label %if.end399, !dbg !7906

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7907

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7908), !dbg !7909
  %265 = load i32, i32* %source_desc, align 4, !dbg !7910, !tbaa !2980
  %call400 = call i32 @close(i32 %265), !dbg !7912
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7913
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7914

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #15, !dbg !7915
  %266 = load i32, i32* %call404, align 4, !dbg !7915, !tbaa !2980, !ctir !5
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0)) #12, !dbg !7917
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7918, !tbaa !2993
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7918
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7919
  store i8 0, i8* %return_val, align 1, !dbg !7920, !tbaa !3104
  br label %if.end407, !dbg !7921

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7922, !tbaa !2993
  call void @free(i8* %268) #12, !dbg !7923
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7924, !tbaa !2993
  call void @free(i8* %269) #12, !dbg !7925
  %270 = load i8, i8* %return_val, align 1, !dbg !7926, !tbaa !3104
  %tobool408 = trunc i8 %270 to i1, !dbg !7926
  store i1 %tobool408, i1* %retval, align 1, !dbg !7927
  br label %return, !dbg !7927

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7928
  ret i1 %271, !dbg !7928
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7929 !ctir !131 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7930
  %cmp = icmp ne i32 %call, 0, !dbg !7932
  br i1 %cmp, label %if.then, label %if.end, !dbg !7933

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7934
  %0 = load i32, i32* %call1, align 4, !dbg !7934, !tbaa !2980, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75, i64 0, i64 0)) #12, !dbg !7934
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7934
  unreachable, !dbg !7934

if.end:                                           ; preds = %entry
  ret void, !dbg !7935
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #9 !dbg !7936 !ctir !300 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7937, metadata !DIExpression()), !dbg !7938
  %call = call i32* @__errno_location() #15, !dbg !7939
  %0 = load i32, i32* %call, align 4, !dbg !7939, !tbaa !2980, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !7940
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7941

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7942
  %1 = load i32, i32* %call1, align 4, !dbg !7942, !tbaa !2980, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !7943
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7944

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7945, !tbaa !2993
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7946, !ctir !250
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7946, !tbaa !7947
  %tobool = trunc i8 %3 to i1, !dbg !7946, !ctir !117
  %lnot = xor i1 %tobool, true, !dbg !7948
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7949
  ret i1 %4, !dbg !7950
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7951 !ctir !471 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !473
  %err = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7956, metadata !DIExpression()), !dbg !7957
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7958, !tbaa !2993
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7959, !tbaa !2993
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7960
  store i32 %call, i32* %err, align 4, !dbg !7957, !tbaa !2980
  %2 = load i32, i32* %err, align 4, !dbg !7961, !tbaa !2980
  %tobool = icmp ne i32 %2, 0, !dbg !7961
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7963

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !7964
  %3 = load i32, i32* %call1, align 4, !dbg !7964, !tbaa !2980, !ctir !5
  %cmp = icmp eq i32 %3, 38, !dbg !7965
  br i1 %cmp, label %if.then, label %if.end, !dbg !7966

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !7967, !tbaa !2980
  br label %if.end, !dbg !7968

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !7969, !tbaa !2980
  ret i32 %4, !dbg !7970
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !7971 !ctir !475 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %new_dst.addr = alloca i8, align 1, !ctir !117
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  %uid = alloca i32, align 4, !ctir !477
  %gid = alloca i32, align 4, !ctir !478
  %old_mode = alloca i32, align 4, !ctir !157
  %new_mode = alloca i32, align 4, !ctir !157
  %restrictive_temp_mode = alloca i32, align 4, !ctir !157
  %saved_errno = alloca i32, align 4, !ctir !5
  %__x = alloca i32, align 4, !ctir !5
  %saved_errno60 = alloca i32, align 4, !ctir !5
  %__x62 = alloca i32, align 4, !ctir !5
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7974, metadata !DIExpression()), !dbg !7975
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7978, metadata !DIExpression()), !dbg !7979
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7980, metadata !DIExpression()), !dbg !7981
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !7982, metadata !DIExpression()), !dbg !7983
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7984, metadata !DIExpression()), !dbg !7985
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7986, !tbaa !2993
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !7987, !ctir !313
  %1 = load i32, i32* %st_uid, align 4, !dbg !7987, !tbaa !6198, !ctir !323
  store i32 %1, i32* %uid, align 4, !dbg !7985, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !7988, metadata !DIExpression()), !dbg !7989
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7990, !tbaa !2993
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !7991, !ctir !313
  %3 = load i32, i32* %st_gid, align 8, !dbg !7991, !tbaa !6200, !ctir !325
  store i32 %3, i32* %gid, align 4, !dbg !7989, !tbaa !2980
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !7992, !tbaa !3104
  %tobool = trunc i8 %4 to i1, !dbg !7992
  br i1 %tobool, label %if.end26, label %land.lhs.true, !dbg !7994

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7995, !tbaa !2993
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !7996, !ctir !250
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !7996, !tbaa !3429
  %tobool1 = trunc i8 %6 to i1, !dbg !7996, !ctir !117
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7997

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7998, !tbaa !2993
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !7999, !ctir !250
  %8 = load i8, i8* %move_mode, align 8, !dbg !7999, !tbaa !3409
  %tobool2 = trunc i8 %8 to i1, !dbg !7999, !ctir !117
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !8000

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8001, !tbaa !2993
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !8002, !ctir !250
  %10 = load i8, i8* %set_mode, align 1, !dbg !8002, !tbaa !3484
  %tobool4 = trunc i8 %10 to i1, !dbg !8002, !ctir !117
  br i1 %tobool4, label %if.then, label %if.end26, !dbg !8003

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !8004, metadata !DIExpression()), !dbg !8006
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !8007, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !8008, !ctir !313
  %12 = load i32, i32* %st_mode, align 8, !dbg !8008, !tbaa !3176, !ctir !130
  store i32 %12, i32* %old_mode, align 4, !dbg !8006, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !8009, metadata !DIExpression()), !dbg !8010
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8011, !tbaa !2993
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !8012, !ctir !250
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !8012, !tbaa !3429
  %tobool6 = trunc i8 %14 to i1, !dbg !8012, !ctir !117
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !8013

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8014, !tbaa !2993
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !8015, !ctir !250
  %16 = load i8, i8* %move_mode8, align 8, !dbg !8015, !tbaa !3409
  %tobool9 = trunc i8 %16 to i1, !dbg !8015, !ctir !117
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !8011

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8016, !tbaa !2993
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !8017, !ctir !313
  %18 = load i32, i32* %st_mode10, align 8, !dbg !8017, !tbaa !3176, !ctir !130
  br label %cond.end, !dbg !8011

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8018, !tbaa !2993
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !8019, !ctir !250
  %20 = load i32, i32* %mode, align 8, !dbg !8019, !tbaa !3488, !ctir !157
  br label %cond.end, !dbg !8011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !8011
  store i32 %cond, i32* %new_mode, align 4, !dbg !8010, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !8020, metadata !DIExpression()), !dbg !8021
  %21 = load i32, i32* %old_mode, align 4, !dbg !8022, !tbaa !2980
  %22 = load i32, i32* %new_mode, align 4, !dbg !8023, !tbaa !2980
  %and = and i32 %21, %22, !dbg !8024
  %and11 = and i32 %and, 448, !dbg !8025
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !8021, !tbaa !2980
  %23 = load i32, i32* %old_mode, align 4, !dbg !8026, !tbaa !2980
  %and12 = and i32 %23, 4095, !dbg !8028
  %24 = load i32, i32* %new_mode, align 4, !dbg !8029, !tbaa !2980
  %neg = xor i32 %24, -1, !dbg !8030
  %or = or i32 %neg, 2048, !dbg !8031
  %or13 = or i32 %or, 1024, !dbg !8032
  %or14 = or i32 %or13, 512, !dbg !8033
  %and15 = and i32 %and12, %or14, !dbg !8034
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8034
  br i1 %tobool16, label %land.lhs.true17, label %if.end25, !dbg !8035

land.lhs.true17:                                  ; preds = %cond.end
  %25 = load i8*, i8** %dst_name.addr, align 8, !dbg !8036, !tbaa !2993
  %26 = load i32, i32* %dest_desc.addr, align 4, !dbg !8037, !tbaa !2980
  %27 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !8038, !tbaa !2980
  %call = call i32 @qset_acl(i8* %25, i32 %26, i32 %27), !dbg !8039
  %cmp = icmp ne i32 %call, 0, !dbg !8040
  br i1 %cmp, label %if.then18, label %if.end25, !dbg !8041

if.then18:                                        ; preds = %land.lhs.true17
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8042, !tbaa !2993
  %call19 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %28), !dbg !8045
  br i1 %call19, label %if.end, label %if.then20, !dbg !8046

if.then20:                                        ; preds = %if.then18
  %call21 = call i32* @__errno_location() #15, !dbg !8047
  %29 = load i32, i32* %call21, align 4, !dbg !8047, !tbaa !2980, !ctir !5
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76, i64 0, i64 0)) #12, !dbg !8048
  %30 = load i8*, i8** %dst_name.addr, align 8, !dbg !8049, !tbaa !2993
  %call23 = call i8* @quotearg_style(i32 4, i8* %30), !dbg !8049
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %29, i8* %call22, i8* %call23), !dbg !8050
  br label %if.end, !dbg !8050

if.end:                                           ; preds = %if.then20, %if.then18
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8051, !tbaa !2993
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 21, !dbg !8052, !ctir !250
  %32 = load i8, i8* %require_preserve, align 4, !dbg !8052, !tbaa !3456
  %tobool24 = trunc i8 %32 to i1, !dbg !8052, !ctir !117
  %conv = zext i1 %tobool24 to i32, !dbg !8051
  %sub = sub nsw i32 0, %conv, !dbg !8053
  store i32 %sub, i32* %retval, align 4, !dbg !8054
  br label %return, !dbg !8054

if.end25:                                         ; preds = %land.lhs.true17, %cond.end
  br label %if.end26, !dbg !8055

if.end26:                                         ; preds = %if.end25, %lor.lhs.false3, %entry
  %33 = load i32, i32* %dest_desc.addr, align 4, !dbg !8056, !tbaa !2980
  %cmp27 = icmp ne i32 %33, -1, !dbg !8058
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !8059

if.then29:                                        ; preds = %if.end26
  %34 = load i32, i32* %dest_desc.addr, align 4, !dbg !8060, !tbaa !2980
  %35 = load i32, i32* %uid, align 4, !dbg !8063, !tbaa !2980
  %36 = load i32, i32* %gid, align 4, !dbg !8064, !tbaa !2980
  %call30 = call i32 @fchown(i32 %34, i32 %35, i32 %36) #12, !dbg !8065
  %cmp31 = icmp eq i32 %call30, 0, !dbg !8066
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !8067

if.then33:                                        ; preds = %if.then29
  store i32 1, i32* %retval, align 4, !dbg !8068
  br label %return, !dbg !8068

if.end34:                                         ; preds = %if.then29
  %call35 = call i32* @__errno_location() #15, !dbg !8069
  %37 = load i32, i32* %call35, align 4, !dbg !8069, !tbaa !2980, !ctir !5
  %cmp36 = icmp eq i32 %37, 1, !dbg !8071
  br i1 %cmp36, label %if.then42, label %lor.lhs.false38, !dbg !8072

lor.lhs.false38:                                  ; preds = %if.end34
  %call39 = call i32* @__errno_location() #15, !dbg !8073
  %38 = load i32, i32* %call39, align 4, !dbg !8073, !tbaa !2980, !ctir !5
  %cmp40 = icmp eq i32 %38, 22, !dbg !8074
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !8075

if.then42:                                        ; preds = %lor.lhs.false38, %if.end34
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !8076, metadata !DIExpression()), !dbg !8078
  %call43 = call i32* @__errno_location() #15, !dbg !8079
  %39 = load i32, i32* %call43, align 4, !dbg !8079, !tbaa !2980, !ctir !5
  store i32 %39, i32* %saved_errno, align 4, !dbg !8078, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !8080, metadata !DIExpression()), !dbg !8082
  %40 = load i32, i32* %dest_desc.addr, align 4, !dbg !8082, !tbaa !2980
  %41 = load i32, i32* %gid, align 4, !dbg !8082, !tbaa !2980
  %call44 = call i32 @fchown(i32 %40, i32 -1, i32 %41) #12, !dbg !8082
  store i32 %call44, i32* %__x, align 4, !dbg !8082, !tbaa !2980
  %42 = load i32, i32* %__x, align 4, !dbg !8082, !tbaa !2980
  %43 = load i32, i32* %saved_errno, align 4, !dbg !8083, !tbaa !2980
  %call45 = call i32* @__errno_location() #15, !dbg !8084
  store i32 %43, i32* %call45, align 4, !dbg !8085, !tbaa !2980, !ctir !5
  br label %if.end46, !dbg !8086

if.end46:                                         ; preds = %if.then42, %lor.lhs.false38
  br label %if.end66, !dbg !8087

if.else:                                          ; preds = %if.end26
  %44 = load i8*, i8** %dst_name.addr, align 8, !dbg !8088, !tbaa !2993
  %45 = load i32, i32* %uid, align 4, !dbg !8091, !tbaa !2980
  %46 = load i32, i32* %gid, align 4, !dbg !8092, !tbaa !2980
  %call47 = call i32 @lchown(i8* %44, i32 %45, i32 %46) #12, !dbg !8093
  %cmp48 = icmp eq i32 %call47, 0, !dbg !8094
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !8095

if.then50:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !8096
  br label %return, !dbg !8096

if.end51:                                         ; preds = %if.else
  %call52 = call i32* @__errno_location() #15, !dbg !8097
  %47 = load i32, i32* %call52, align 4, !dbg !8097, !tbaa !2980, !ctir !5
  %cmp53 = icmp eq i32 %47, 1, !dbg !8099
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !8100

lor.lhs.false55:                                  ; preds = %if.end51
  %call56 = call i32* @__errno_location() #15, !dbg !8101
  %48 = load i32, i32* %call56, align 4, !dbg !8101, !tbaa !2980, !ctir !5
  %cmp57 = icmp eq i32 %48, 22, !dbg !8102
  br i1 %cmp57, label %if.then59, label %if.end65, !dbg !8103

if.then59:                                        ; preds = %lor.lhs.false55, %if.end51
  call void @llvm.dbg.declare(metadata i32* %saved_errno60, metadata !8104, metadata !DIExpression()), !dbg !8106
  %call61 = call i32* @__errno_location() #15, !dbg !8107
  %49 = load i32, i32* %call61, align 4, !dbg !8107, !tbaa !2980, !ctir !5
  store i32 %49, i32* %saved_errno60, align 4, !dbg !8106, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %__x62, metadata !8108, metadata !DIExpression()), !dbg !8110
  %50 = load i8*, i8** %dst_name.addr, align 8, !dbg !8110, !tbaa !2993
  %51 = load i32, i32* %gid, align 4, !dbg !8110, !tbaa !2980
  %call63 = call i32 @lchown(i8* %50, i32 -1, i32 %51) #12, !dbg !8110
  store i32 %call63, i32* %__x62, align 4, !dbg !8110, !tbaa !2980
  %52 = load i32, i32* %__x62, align 4, !dbg !8110, !tbaa !2980
  %53 = load i32, i32* %saved_errno60, align 4, !dbg !8111, !tbaa !2980
  %call64 = call i32* @__errno_location() #15, !dbg !8112
  store i32 %53, i32* %call64, align 4, !dbg !8113, !tbaa !2980, !ctir !5
  br label %if.end65, !dbg !8114

if.end65:                                         ; preds = %if.then59, %lor.lhs.false55
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end46
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8115, !tbaa !2993
  %call67 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %54) #14, !dbg !8117
  br i1 %call67, label %if.end76, label %if.then68, !dbg !8118

if.then68:                                        ; preds = %if.end66
  %call69 = call i32* @__errno_location() #15, !dbg !8119
  %55 = load i32, i32* %call69, align 4, !dbg !8119, !tbaa !2980, !ctir !5
  %call70 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.132, i64 0, i64 0)) #12, !dbg !8121
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8122, !tbaa !2993
  %call71 = call i8* @quotearg_style(i32 4, i8* %56), !dbg !8122
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %55, i8* %call70, i8* %call71), !dbg !8123
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8124, !tbaa !2993
  %require_preserve72 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %57, i32 0, i32 21, !dbg !8126, !ctir !250
  %58 = load i8, i8* %require_preserve72, align 4, !dbg !8126, !tbaa !3456
  %tobool73 = trunc i8 %58 to i1, !dbg !8126, !ctir !117
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !8127

if.then74:                                        ; preds = %if.then68
  store i32 -1, i32* %retval, align 4, !dbg !8128
  br label %return, !dbg !8128

if.end75:                                         ; preds = %if.then68
  br label %if.end76, !dbg !8129

if.end76:                                         ; preds = %if.end75, %if.end66
  store i32 0, i32* %retval, align 4, !dbg !8130
  br label %return, !dbg !8130

return:                                           ; preds = %if.end76, %if.then74, %if.then50, %if.then33, %if.end
  %59 = load i32, i32* %retval, align 4, !dbg !8131
  ret i32 %59, !dbg !8131
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !8132 !ctir !479 {
entry:
  %src_path.addr = alloca i8*, align 8, !ctir !112
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %dst_path.addr = alloca i8*, align 8, !ctir !112
  %dst_fd.addr = alloca i32, align 4, !ctir !5
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  store i8* %src_path, i8** %src_path.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !8133, metadata !DIExpression()), !dbg !8134
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8135, metadata !DIExpression()), !dbg !8136
  store i8* %dst_path, i8** %dst_path.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !8137, metadata !DIExpression()), !dbg !8138
  store i32 %dst_fd, i32* %dst_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !8139, metadata !DIExpression()), !dbg !8140
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8141, metadata !DIExpression()), !dbg !8142
  ret i1 true, !dbg !8143
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !8144 !ctir !481 {
entry:
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !312
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8145, metadata !DIExpression()), !dbg !8146
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !8147, metadata !DIExpression()), !dbg !8148
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !8149, metadata !DIExpression()), !dbg !8150
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !8151, !tbaa !2993
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !8152, !tbaa !2980
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !8153, !tbaa !2993
  ret void, !dbg !8154
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !486 !ctir !302 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !8155, !tbaa !2980
  %cmp = icmp eq i32 %0, -1, !dbg !8157
  br i1 %cmp, label %if.then, label %if.end, !dbg !8158

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #12, !dbg !8159
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !8161, !tbaa !2980
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !8162, !tbaa !2980
  %call1 = call i32 @umask(i32 %1) #12, !dbg !8163
  br label %if.end, !dbg !8164

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !8165, !tbaa !2980
  ret i32 %2, !dbg !8166
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !8167 !ctir !300 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !249
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8168, metadata !DIExpression()), !dbg !8169
  %call = call i32* @__errno_location() #15, !dbg !8170
  %0 = load i32, i32* %call, align 4, !dbg !8170, !tbaa !2980, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !8171
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !8172

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8173
  %1 = load i32, i32* %call1, align 4, !dbg !8173, !tbaa !2980, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !8174
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !8175

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8176, !tbaa !2993
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8177, !ctir !250
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !8177, !tbaa !8178
  %tobool = trunc i8 %3 to i1, !dbg !8177, !ctir !117
  %lnot = xor i1 %tobool, true, !dbg !8179
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !8180
  ret i1 %4, !dbg !8181
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !8182 !ctir !420 {
entry:
  %dest_fd.addr = alloca i32, align 4, !ctir !5
  %src_fd.addr = alloca i32, align 4, !ctir !5
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8183, metadata !DIExpression()), !dbg !8184
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8185, metadata !DIExpression()), !dbg !8186
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !8187, !tbaa !2980
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !8188, !tbaa !2980
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #12, !dbg !8189
  ret i32 %call, !dbg !8190
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !8191 !ctir !422 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !8193, metadata !DIExpression()), !dbg !8194
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8195, !ctir !314
  %0 = load i64, i64* %st_blksize, align 8, !dbg !8195, !tbaa !7552, !ctir !330
  %cmp = icmp slt i64 0, %0, !dbg !8195
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !8195

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8195, !ctir !314
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !8195, !tbaa !7552, !ctir !330
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !8195
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !8195

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8195, !ctir !314
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !8195, !tbaa !7552, !ctir !330
  br label %cond.end, !dbg !8195

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !8195

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !8195
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !8195
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !8195

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !8195

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8195, !ctir !314
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !8195, !tbaa !7552, !ctir !330
  %cmp8 = icmp slt i64 0, %3, !dbg !8195
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !8195

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8195, !ctir !314
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !8195, !tbaa !7552, !ctir !330
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !8195
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !8195

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !8195, !ctir !314
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !8195, !tbaa !7552, !ctir !330
  br label %cond.end15, !dbg !8195

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !8195

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !8195
  br label %cond.end17, !dbg !8195

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !8195
  ret i64 %cond18, !dbg !8196
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !8197 !ctir !424 {
entry:
  %sb.addr = alloca %struct.stat*, align 8, !ctir !312
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !8198, metadata !DIExpression()), !dbg !8199
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8200, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !8200, !ctir !313
  %1 = load i32, i32* %st_mode, align 8, !dbg !8200, !tbaa !3176, !ctir !130
  %and = and i32 %1, 61440, !dbg !8200
  %cmp = icmp eq i32 %and, 32768, !dbg !8200
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8201

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8202, !tbaa !2993
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !8202, !ctir !313
  %3 = load i64, i64* %st_blocks, align 8, !dbg !8202, !tbaa !8203, !ctir !332
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !8204, !tbaa !2993
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !8205, !ctir !313
  %5 = load i64, i64* %st_size, align 8, !dbg !8205, !tbaa !4505, !ctir !30
  %div = sdiv i64 %5, 512, !dbg !8206
  %cmp1 = icmp slt i64 %3, %div, !dbg !8207
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !8208
  ret i1 %6, !dbg !8209
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !8210 !ctir !426 {
entry:
  %ptr.addr = alloca i8*, align 8, !ctir !428
  %alignment.addr = alloca i64, align 8, !ctir !52
  %p0 = alloca i8*, align 8, !ctir !112
  %p1 = alloca i8*, align 8, !ctir !112
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !8211, metadata !DIExpression()), !dbg !8212
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !8213, metadata !DIExpression()), !dbg !8214
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !8215, metadata !DIExpression()), !dbg !8216
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !8217, !tbaa !2993
  store i8* %0, i8** %p0, align 8, !dbg !8216, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !8218, metadata !DIExpression()), !dbg !8219
  %1 = load i8*, i8** %p0, align 8, !dbg !8220, !tbaa !2993
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !8221, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !8222
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !8223
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !8219, !tbaa !2993
  %3 = load i8*, i8** %p1, align 8, !dbg !8224, !tbaa !2993
  %4 = load i8*, i8** %p1, align 8, !dbg !8225, !tbaa !2993
  %5 = ptrtoint i8* %4 to i64, !dbg !8226
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !8227, !tbaa !3837
  %rem = urem i64 %5, %6, !dbg !8228
  %idx.neg = sub i64 0, %rem, !dbg !8229
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !8229
  ret i8* %add.ptr2, !dbg !8230
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !8231 !ctir !430 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %dest_fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !7
  %buf_size.addr = alloca i64, align 8, !ctir !52
  %hole_size.addr = alloca i64, align 8, !ctir !52
  %src_total_size.addr = alloca i64, align 8, !ctir !245
  %sparse_mode.addr = alloca i32, align 4, !ctir !86
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %require_normal_copy.addr = alloca i8*, align 8, !ctir !299
  %scan = alloca %struct.extent_scan, align 8, !ctir !442
  %last_ext_start = alloca i64, align 8, !ctir !245
  %last_ext_len = alloca i64, align 8, !ctir !245
  %dest_pos = alloca i64, align 8, !ctir !245
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !117
  %ok = alloca i8, align 1, !ctir !117
  %empty_extent = alloca i8, align 1, !ctir !117
  %i = alloca i32, align 4, !ctir !67
  %ext_start = alloca i64, align 8, !ctir !245
  %ext_len = alloca i64, align 8, !ctir !245
  %ext_hole_size = alloca i64, align 8, !ctir !245
  %nzeros = alloca i64, align 8, !ctir !245
  %n_read = alloca i64, align 8, !ctir !245
  %read_hole = alloca i8, align 1, !ctir !117
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8232, metadata !DIExpression()), !dbg !8233
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8234, metadata !DIExpression()), !dbg !8235
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8240, metadata !DIExpression()), !dbg !8241
  store i64 %src_total_size, i64* %src_total_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !8242, metadata !DIExpression()), !dbg !8243
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8248, metadata !DIExpression()), !dbg !8249
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !8252, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !8254, metadata !DIExpression()), !dbg !8255
  store i64 0, i64* %last_ext_start, align 8, !dbg !8255, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !8256, metadata !DIExpression()), !dbg !8257
  store i64 0, i64* %last_ext_len, align 8, !dbg !8257, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !8258, metadata !DIExpression()), !dbg !8259
  store i64 0, i64* %dest_pos, align 8, !dbg !8259, !tbaa !3837
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8260, !tbaa !2980
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !8261
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8262, !tbaa !2993
  store i8 0, i8* %1, align 1, !dbg !8263, !tbaa !3104, !ctir !117
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !8264, metadata !DIExpression()), !dbg !8265
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8265, !tbaa !3104
  br label %do.body, !dbg !8266

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8267, metadata !DIExpression()), !dbg !8269
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !8270
  %frombool = zext i1 %call to i8, !dbg !8269
  store i8 %frombool, i8* %ok, align 1, !dbg !8269, !tbaa !3104
  %2 = load i8, i8* %ok, align 1, !dbg !8271, !tbaa !3104
  %tobool = trunc i8 %2 to i1, !dbg !8271
  br i1 %tobool, label %if.end9, label %if.then, !dbg !8273

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8274, !ctir !442
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !8274, !tbaa !8277
  %tobool1 = trunc i8 %3 to i1, !dbg !8274, !ctir !117
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8279

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !8280

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !8281, !ctir !442
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !8281, !tbaa !8283
  %tobool3 = trunc i8 %4 to i1, !dbg !8281, !ctir !117
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8284

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8285, !tbaa !2993
  store i8 1, i8* %5, align 1, !dbg !8287, !tbaa !3104, !ctir !117
  store i1 false, i1* %retval, align 1, !dbg !8288
  br label %return, !dbg !8288

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #15, !dbg !8289
  %6 = load i32, i32* %call6, align 4, !dbg !8289, !tbaa !2980, !ctir !5
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68, i64 0, i64 0)) #12, !dbg !8290
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !8291, !tbaa !2993
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !8291
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !8292
  store i1 false, i1* %retval, align 1, !dbg !8293
  br label %return, !dbg !8293

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i8 0, i8* %empty_extent, align 1, !dbg !8295, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8296, metadata !DIExpression()), !dbg !8298
  store i32 0, i32* %i, align 4, !dbg !8298, !tbaa !2980
  br label %for.cond, !dbg !8299

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !8300, !tbaa !2980
  %conv = zext i32 %8 to i64, !dbg !8300
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8302, !ctir !442
  %9 = load i64, i64* %ei_count, align 8, !dbg !8302, !tbaa !8303, !ctir !52
  %cmp = icmp ult i64 %conv, %9, !dbg !8304
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8305

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !8306, !tbaa !3104
  %tobool11 = trunc i8 %10 to i1, !dbg !8306
  br label %lor.end, !dbg !8305

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !8307

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !8308, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !8313, metadata !DIExpression()), !dbg !8314
  %12 = load i32, i32* %i, align 4, !dbg !8315, !tbaa !2980
  %conv13 = zext i32 %12 to i64, !dbg !8315
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8317, !ctir !442
  %13 = load i64, i64* %ei_count14, align 8, !dbg !8317, !tbaa !8303, !ctir !52
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !8318
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8319

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8320, !ctir !442
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8320, !tbaa !8322, !ctir !432
  %15 = load i32, i32* %i, align 4, !dbg !8323, !tbaa !2980
  %idxprom = zext i32 %15 to i64, !dbg !8324
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !8324, !ctir !432
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !8325, !ctir !433
  %16 = load i64, i64* %ext_logical, align 8, !dbg !8325, !tbaa !8326, !ctir !245
  store i64 %16, i64* %ext_start, align 8, !dbg !8328, !tbaa !3837
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8329, !ctir !442
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !8329, !tbaa !8322, !ctir !432
  %18 = load i32, i32* %i, align 4, !dbg !8330, !tbaa !2980
  %idxprom19 = zext i32 %18 to i64, !dbg !8331
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !8331, !ctir !432
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !8332, !ctir !433
  %19 = load i64, i64* %ext_length, align 8, !dbg !8332, !tbaa !8333, !ctir !245
  store i64 %19, i64* %ext_len, align 8, !dbg !8334, !tbaa !3837
  br label %if.end25, !dbg !8335

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !8336, !tbaa !2980
  %dec = add i32 %20, -1, !dbg !8336
  store i32 %dec, i32* %i, align 4, !dbg !8336, !tbaa !2980
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !8338, !tbaa !3837
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8339, !ctir !442
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8339, !tbaa !8322, !ctir !432
  %23 = load i32, i32* %i, align 4, !dbg !8340, !tbaa !2980
  %idxprom22 = zext i32 %23 to i64, !dbg !8341
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !8341, !ctir !432
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !8342, !ctir !433
  %24 = load i64, i64* %ext_length24, align 8, !dbg !8342, !tbaa !8333, !ctir !245
  %add = add nsw i64 %21, %24, !dbg !8343
  store i64 %add, i64* %ext_start, align 8, !dbg !8344, !tbaa !3837
  store i64 0, i64* %ext_len, align 8, !dbg !8345, !tbaa !3837
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !8346, !tbaa !3837
  %26 = load i64, i64* %ext_start, align 8, !dbg !8348, !tbaa !3837
  %27 = load i64, i64* %ext_len, align 8, !dbg !8349, !tbaa !3837
  %add26 = add nsw i64 %26, %27, !dbg !8350
  %cmp27 = icmp slt i64 %25, %add26, !dbg !8351
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !8352

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !8353, !tbaa !3837
  %29 = load i64, i64* %ext_start, align 8, !dbg !8356, !tbaa !3837
  %cmp30 = icmp slt i64 %28, %29, !dbg !8357
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8358

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !8359, !tbaa !3837
  store i64 %30, i64* %ext_start, align 8, !dbg !8360, !tbaa !3837
  br label %if.end33, !dbg !8361

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !8362, !tbaa !3837
  %32 = load i64, i64* %ext_start, align 8, !dbg !8363, !tbaa !3837
  %sub = sub nsw i64 %31, %32, !dbg !8364
  store i64 %sub, i64* %ext_len, align 8, !dbg !8365, !tbaa !3837
  br label %if.end34, !dbg !8366

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !8367, !tbaa !3837
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !8368, !tbaa !3837
  %sub35 = sub nsw i64 %33, %34, !dbg !8369
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !8370, !tbaa !3837
  %sub36 = sub nsw i64 %sub35, %35, !dbg !8371
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !8372, !tbaa !3837
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !8373, !tbaa !3104
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !8374, !tbaa !3837
  %tobool37 = icmp ne i64 %36, 0, !dbg !8374
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !8376

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !8377, !tbaa !2980
  %38 = load i64, i64* %ext_start, align 8, !dbg !8380, !tbaa !3837
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #12, !dbg !8381
  %cmp40 = icmp slt i64 %call39, 0, !dbg !8382
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !8383

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #15, !dbg !8384
  %39 = load i32, i32* %call43, align 4, !dbg !8384, !tbaa !2980, !ctir !5
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !8386
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !8387, !tbaa !2993
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !8387
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !8388
  br label %fail, !dbg !8388

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !8389), !dbg !8390
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8391
  store i1 false, i1* %retval, align 1, !dbg !8392
  br label %return, !dbg !8392

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !8393, !tbaa !3104
  %tobool47 = trunc i8 %41 to i1, !dbg !8393
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !8395

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8396, !tbaa !3652
  %cmp49 = icmp eq i32 %42, 3, !dbg !8397
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !8398

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !8399, !tbaa !3104
  %tobool51 = trunc i8 %43 to i1, !dbg !8399
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !8400

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8401, !tbaa !3652
  %cmp53 = icmp ne i32 %44, 1, !dbg !8402
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !8403

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !8404, !tbaa !2980
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !8407, !tbaa !2993
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8408, !tbaa !3652
  %cmp56 = icmp eq i32 %47, 3, !dbg !8409
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !8410, !tbaa !3837
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !8411
  br i1 %call58, label %if.end60, label %if.then59, !dbg !8412

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !8413

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8414, !tbaa !3104
  br label %if.end81, !dbg !8415

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !8416, metadata !DIExpression()), !dbg !8418
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !8419, !tbaa !3837
  store i64 %49, i64* %nzeros, align 8, !dbg !8418, !tbaa !3837
  %50 = load i8, i8* %empty_extent, align 1, !dbg !8420, !tbaa !3104
  %tobool62 = trunc i8 %50 to i1, !dbg !8420
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !8422

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !8423, !tbaa !3837
  %52 = load i64, i64* %dest_pos, align 8, !dbg !8423, !tbaa !3837
  %sub64 = sub nsw i64 %51, %52, !dbg !8423
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !8423, !tbaa !3837
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !8423
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !8423

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !8423, !tbaa !3837
  %55 = load i64, i64* %dest_pos, align 8, !dbg !8423, !tbaa !3837
  %sub67 = sub nsw i64 %54, %55, !dbg !8423
  br label %cond.end, !dbg !8423

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !8423, !tbaa !3837
  br label %cond.end, !dbg !8423

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !8423
  store i64 %cond, i64* %nzeros, align 8, !dbg !8424, !tbaa !3837
  br label %if.end68, !dbg !8425

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !8426, !tbaa !2980
  %58 = load i64, i64* %nzeros, align 8, !dbg !8428, !tbaa !3837
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !8429
  br i1 %call69, label %if.end74, label %if.then70, !dbg !8430

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #15, !dbg !8431
  %59 = load i32, i32* %call71, align 4, !dbg !8431, !tbaa !2980, !ctir !5
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70, i64 0, i64 0)) #12, !dbg !8433
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !8434, !tbaa !2993
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !8434
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !8435
  br label %fail, !dbg !8436

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !8437, !tbaa !3837
  %62 = load i64, i64* %ext_start, align 8, !dbg !8437, !tbaa !3837
  %cmp75 = icmp slt i64 %61, %62, !dbg !8437
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !8437

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !8437, !tbaa !3837
  br label %cond.end79, !dbg !8437

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !8437, !tbaa !3837
  br label %cond.end79, !dbg !8437

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !8437
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !8438, !tbaa !3837
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !8439

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !8440, !tbaa !3837
  store i64 %65, i64* %last_ext_start, align 8, !dbg !8441, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8442, metadata !DIExpression()), !dbg !8445
  store i8 0, i8* %empty_extent, align 1, !dbg !8446, !tbaa !3104
  %66 = load i64, i64* %ext_len, align 8, !dbg !8447, !tbaa !3837
  store i64 %66, i64* %last_ext_len, align 8, !dbg !8448, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !8449, metadata !DIExpression()), !dbg !8450
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !8451, !tbaa !2980
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !8453, !tbaa !2980
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !8454, !tbaa !2993
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !8455, !tbaa !3837
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8456, !tbaa !3652
  %cmp83 = icmp eq i32 %71, 3, !dbg !8457
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !8456

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !8458, !tbaa !3837
  br label %cond.end87, !dbg !8456

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !8456

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !8456
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !8459, !tbaa !2993
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !8460, !tbaa !2993
  %75 = load i64, i64* %ext_len, align 8, !dbg !8461, !tbaa !3837
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !8462
  br i1 %call89, label %if.end91, label %if.then90, !dbg !8463

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !8464

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !8465, !tbaa !3837
  %77 = load i64, i64* %n_read, align 8, !dbg !8466, !tbaa !3837
  %add92 = add nsw i64 %76, %77, !dbg !8467
  store i64 %add92, i64* %dest_pos, align 8, !dbg !8468, !tbaa !3837
  %78 = load i64, i64* %n_read, align 8, !dbg !8469, !tbaa !3837
  %tobool93 = icmp ne i64 %78, 0, !dbg !8469
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !8471

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !8472, !tbaa !3104
  %tobool95 = trunc i8 %79 to i1, !dbg !8472
  %frombool96 = zext i1 %tobool95 to i8, !dbg !8473
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !8473, !tbaa !3104
  br label %if.end97, !dbg !8474

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !8475, !tbaa !3837
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !8477, !tbaa !3837
  %cmp98 = icmp eq i64 %80, %81, !dbg !8478
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !8479

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8480, !ctir !442
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !8482, !tbaa !8277, !ctir !117
  br label %for.end, !dbg !8483

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !8484

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !8485, !tbaa !2980
  %inc = add i32 %82, 1, !dbg !8485
  store i32 %inc, i32* %i, align 4, !dbg !8485, !tbaa !2980
  br label %for.cond, !dbg !8486, !llvm.loop !8487

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8489
  br label %do.cond, !dbg !8490

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8491, !ctir !442
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !8491, !tbaa !8277
  %tobool104 = trunc i8 %83 to i1, !dbg !8491, !ctir !117
  %lnot = xor i1 %tobool104, true, !dbg !8492
  br i1 %lnot, label %do.body, label %do.end, !dbg !8490, !llvm.loop !8493

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !8495, !tbaa !3837
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !8497, !tbaa !3837
  %cmp105 = icmp slt i64 %84, %85, !dbg !8498
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !8499

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !8500, !tbaa !3104
  %tobool108 = trunc i8 %86 to i1, !dbg !8500
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !8501

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8502, !tbaa !3652
  %cmp111 = icmp ne i32 %87, 1, !dbg !8503
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !8504

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !8505, !tbaa !2980
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !8506, !tbaa !3837
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #12, !dbg !8507
  %tobool115 = icmp ne i32 %call114, 0, !dbg !8507
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !8502

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !8508, !tbaa !2980
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !8509, !tbaa !3837
  %92 = load i64, i64* %dest_pos, align 8, !dbg !8510, !tbaa !3837
  %sub117 = sub nsw i64 %91, %92, !dbg !8511
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !8512
  br i1 %call118, label %if.end123, label %if.then119, !dbg !8504

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #15, !dbg !8513
  %93 = load i32, i32* %call120, align 4, !dbg !8513, !tbaa !2980, !ctir !5
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66, i64 0, i64 0)) #12, !dbg !8515
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !8516, !tbaa !2993
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !8516
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !8517
  store i1 false, i1* %retval, align 1, !dbg !8518
  br label %return, !dbg !8518

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8519, !tbaa !3652
  %cmp124 = icmp eq i32 %95, 3, !dbg !8521
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !8522

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !8523, !tbaa !3837
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !8524, !tbaa !3837
  %cmp127 = icmp slt i64 %96, %97, !dbg !8525
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !8526

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !8527, !tbaa !2980
  %99 = load i64, i64* %dest_pos, align 8, !dbg !8528, !tbaa !3837
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !8529, !tbaa !3837
  %101 = load i64, i64* %dest_pos, align 8, !dbg !8530, !tbaa !3837
  %sub130 = sub nsw i64 %100, %101, !dbg !8531
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !8532
  %cmp132 = icmp slt i32 %call131, 0, !dbg !8533
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !8534

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #15, !dbg !8535
  %102 = load i32, i32* %call135, align 4, !dbg !8535, !tbaa !2980, !ctir !5
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !8537
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !8538, !tbaa !2993
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !8538
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !8539
  store i1 false, i1* %retval, align 1, !dbg !8540
  br label %return, !dbg !8540

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !8541
  br label %return, !dbg !8541

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !8542
  ret i1 %104, !dbg !8542
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !8543 !ctir !457 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %dest_fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !7
  %buf_size.addr = alloca i64, align 8, !ctir !52
  %hole_size.addr = alloca i64, align 8, !ctir !52
  %punch_holes.addr = alloca i8, align 1, !ctir !117
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %max_n_read.addr = alloca i64, align 8, !ctir !459
  %total_n_read.addr = alloca i64*, align 8, !ctir !461
  %last_write_made_hole.addr = alloca i8*, align 8, !ctir !299
  %make_hole = alloca i8, align 1, !ctir !117
  %psize = alloca i64, align 8, !ctir !245
  %n_read = alloca i64, align 8, !ctir !462
  %csize = alloca i64, align 8, !ctir !52
  %cbuf = alloca i8*, align 8, !ctir !7
  %pbuf = alloca i8*, align 8, !ctir !7
  %prev_hole = alloca i8, align 1, !ctir !117
  %transition = alloca i8, align 1, !ctir !117
  %last_chunk = alloca i8, align 1, !ctir !117
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8544, metadata !DIExpression()), !dbg !8545
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8546, metadata !DIExpression()), !dbg !8547
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8548, metadata !DIExpression()), !dbg !8549
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8550, metadata !DIExpression()), !dbg !8551
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8552, metadata !DIExpression()), !dbg !8553
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8554, metadata !DIExpression()), !dbg !8555
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8556, metadata !DIExpression()), !dbg !8557
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8558, metadata !DIExpression()), !dbg !8559
  store i64 %max_n_read, i64* %max_n_read.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  store i64* %total_n_read, i64** %total_n_read.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !8562, metadata !DIExpression()), !dbg !8563
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !8564, metadata !DIExpression()), !dbg !8565
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8566, !tbaa !2993
  store i8 0, i8* %0, align 1, !dbg !8567, !tbaa !3104, !ctir !117
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8568, !tbaa !2993
  store i64 0, i64* %1, align 8, !dbg !8569, !tbaa !3837, !ctir !245
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !8570, metadata !DIExpression()), !dbg !8571
  store i8 0, i8* %make_hole, align 1, !dbg !8571, !tbaa !3104
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !8572, metadata !DIExpression()), !dbg !8573
  store i64 0, i64* %psize, align 8, !dbg !8573, !tbaa !3837
  br label %while.cond, !dbg !8574

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !8575, !tbaa !3837
  %tobool = icmp ne i64 %2, 0, !dbg !8574
  br i1 %tobool, label %while.body, label %while.end94, !dbg !8574

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8576, metadata !DIExpression()), !dbg !8578
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !8579, !tbaa !2980
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8580, !tbaa !2993
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !8581, !tbaa !3837
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !8581, !tbaa !3837
  %cmp = icmp ult i64 %5, %6, !dbg !8581
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8581

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !8581, !tbaa !3837
  br label %cond.end, !dbg !8581

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !8581, !tbaa !3837
  br label %cond.end, !dbg !8581

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !8581
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !8582
  store i64 %call, i64* %n_read, align 8, !dbg !8578, !tbaa !3837
  %9 = load i64, i64* %n_read, align 8, !dbg !8583, !tbaa !3837
  %cmp1 = icmp slt i64 %9, 0, !dbg !8585
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !8586

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #15, !dbg !8587
  %10 = load i32, i32* %call2, align 4, !dbg !8587, !tbaa !2980, !ctir !5
  %cmp3 = icmp eq i32 %10, 4, !dbg !8590
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8591

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !8592, !llvm.loop !8593

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #15, !dbg !8595
  %11 = load i32, i32* %call5, align 4, !dbg !8595, !tbaa !2980, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72, i64 0, i64 0)) #12, !dbg !8596
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !8597, !tbaa !2993
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !8597
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !8598
  store i1 false, i1* %retval, align 1, !dbg !8599
  br label %return, !dbg !8599

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !8600, !tbaa !3837
  %cmp9 = icmp eq i64 %13, 0, !dbg !8602
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8603

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !8604

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !8605, !tbaa !3837
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !8606, !tbaa !3837
  %sub = sub i64 %15, %14, !dbg !8606
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !8606, !tbaa !3837
  %16 = load i64, i64* %n_read, align 8, !dbg !8607, !tbaa !3837
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8608, !tbaa !2993
  %18 = load i64, i64* %17, align 8, !dbg !8609, !tbaa !3837, !ctir !245
  %add = add nsw i64 %18, %16, !dbg !8609
  store i64 %add, i64* %17, align 8, !dbg !8609, !tbaa !3837, !ctir !245
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !8610, metadata !DIExpression()), !dbg !8611
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !8612, !tbaa !3837
  %tobool12 = icmp ne i64 %19, 0, !dbg !8612
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !8612

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !8613, !tbaa !3837
  br label %cond.end15, !dbg !8612

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !8614, !tbaa !3837
  br label %cond.end15, !dbg !8612

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !8612
  store i64 %cond16, i64* %csize, align 8, !dbg !8611, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !8615, metadata !DIExpression()), !dbg !8616
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8617, !tbaa !2993
  store i8* %22, i8** %cbuf, align 8, !dbg !8616, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !8618, metadata !DIExpression()), !dbg !8619
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !8620, !tbaa !2993
  store i8* %23, i8** %pbuf, align 8, !dbg !8619, !tbaa !2993
  br label %while.cond17, !dbg !8621

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !8622, !tbaa !3837
  %tobool18 = icmp ne i64 %24, 0, !dbg !8621
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !8621

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !8623, metadata !DIExpression()), !dbg !8625
  %25 = load i8, i8* %make_hole, align 1, !dbg !8626, !tbaa !3104
  %tobool20 = trunc i8 %25 to i1, !dbg !8626
  %frombool21 = zext i1 %tobool20 to i8, !dbg !8625
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !8625, !tbaa !3104
  %26 = load i64, i64* %csize, align 8, !dbg !8627, !tbaa !3837
  %27 = load i64, i64* %n_read, align 8, !dbg !8627, !tbaa !3837
  %cmp22 = icmp ult i64 %26, %27, !dbg !8627
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !8627

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !8627, !tbaa !3837
  br label %cond.end25, !dbg !8627

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !8627, !tbaa !3837
  br label %cond.end25, !dbg !8627

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !8627
  store i64 %cond26, i64* %csize, align 8, !dbg !8628, !tbaa !3837
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !8629, !tbaa !3837
  %tobool27 = icmp ne i64 %30, 0, !dbg !8629
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !8631

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !8632, !tbaa !3837
  %tobool28 = icmp ne i64 %31, 0, !dbg !8632
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !8633

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !8634, !tbaa !2993
  %33 = load i64, i64* %csize, align 8, !dbg !8635, !tbaa !3837
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !8636
  %frombool31 = zext i1 %call30 to i8, !dbg !8637
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !8637, !tbaa !3104
  br label %if.end32, !dbg !8638

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !8639, metadata !DIExpression()), !dbg !8640
  %34 = load i8, i8* %make_hole, align 1, !dbg !8641, !tbaa !3104
  %tobool33 = trunc i8 %34 to i1, !dbg !8641
  %conv = zext i1 %tobool33 to i32, !dbg !8641
  %35 = load i8, i8* %prev_hole, align 1, !dbg !8642, !tbaa !3104
  %tobool34 = trunc i8 %35 to i1, !dbg !8642
  %conv35 = zext i1 %tobool34 to i32, !dbg !8642
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !8643
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !8644

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !8645, !tbaa !3837
  %tobool38 = icmp ne i64 %36, 0, !dbg !8644
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !8646
  %frombool39 = zext i1 %37 to i8, !dbg !8640
  store i8 %frombool39, i8* %transition, align 1, !dbg !8640, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !8647, metadata !DIExpression()), !dbg !8648
  %38 = load i64, i64* %n_read, align 8, !dbg !8649, !tbaa !3837
  %39 = load i64, i64* %csize, align 8, !dbg !8650, !tbaa !3837
  %cmp40 = icmp eq i64 %38, %39, !dbg !8651
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !8652

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !8653, !tbaa !3104
  %tobool43 = trunc i8 %40 to i1, !dbg !8653
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !8654

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !8655, !tbaa !3837
  %tobool44 = icmp ne i64 %41, 0, !dbg !8656
  %lnot = xor i1 %tobool44, true, !dbg !8656
  br label %lor.end, !dbg !8654

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !8648
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !8648, !tbaa !3104
  %43 = load i8, i8* %transition, align 1, !dbg !8657, !tbaa !3104
  %tobool46 = trunc i8 %43 to i1, !dbg !8657
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !8659

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !8660, !tbaa !3104
  %tobool48 = trunc i8 %44 to i1, !dbg !8660
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !8661

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !8662, !tbaa !3104
  %tobool51 = trunc i8 %45 to i1, !dbg !8662
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !8665

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !8666, !tbaa !3837
  %47 = load i64, i64* %psize, align 8, !dbg !8667, !tbaa !3837
  %add53 = add i64 %47, %46, !dbg !8667
  store i64 %add53, i64* %psize, align 8, !dbg !8667, !tbaa !3837
  br label %if.end54, !dbg !8668

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !8669, !tbaa !3104
  %tobool55 = trunc i8 %48 to i1, !dbg !8669
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !8671

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !8672, !tbaa !2980
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8675, !tbaa !2993
  %51 = load i64, i64* %psize, align 8, !dbg !8676, !tbaa !3837
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !8677
  %52 = load i64, i64* %psize, align 8, !dbg !8678, !tbaa !3837
  %cmp58 = icmp ne i64 %call57, %52, !dbg !8679
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !8680

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #15, !dbg !8681
  %53 = load i32, i32* %call61, align 4, !dbg !8681, !tbaa !2980, !ctir !5
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i64 0, i64 0)) #12, !dbg !8683
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8684, !tbaa !2993
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8684
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !8685
  store i1 false, i1* %retval, align 1, !dbg !8686
  br label %return, !dbg !8686

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !8687

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !8688, !tbaa !2980
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8691, !tbaa !2993
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !8692, !tbaa !3104
  %tobool65 = trunc i8 %57 to i1, !dbg !8692
  %58 = load i64, i64* %psize, align 8, !dbg !8693, !tbaa !3837
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !8694
  br i1 %call66, label %if.end68, label %if.then67, !dbg !8695

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !8696
  br label %return, !dbg !8696

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !8697, !tbaa !2993
  store i8* %59, i8** %pbuf, align 8, !dbg !8698, !tbaa !2993
  %60 = load i64, i64* %csize, align 8, !dbg !8699, !tbaa !3837
  store i64 %60, i64* %psize, align 8, !dbg !8700, !tbaa !3837
  %61 = load i8, i8* %last_chunk, align 1, !dbg !8701, !tbaa !3104
  %tobool70 = trunc i8 %61 to i1, !dbg !8701
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !8703

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !8704, !tbaa !3837
  %tobool72 = icmp ne i64 %62, 0, !dbg !8704
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8707

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !8708, !tbaa !3837
  br label %if.end74, !dbg !8709

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !8710, !tbaa !3104
  %tobool75 = trunc i8 %63 to i1, !dbg !8710
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8712

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !8713, !tbaa !3837
  br label %if.end78, !dbg !8714

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !8715, !tbaa !3837
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !8716

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !8717

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !8718, !tbaa !3837
  %65 = load i64, i64* %csize, align 8, !dbg !8721, !tbaa !3837
  %sub81 = sub i64 9223372036854775807, %65, !dbg !8722
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !8723
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8724

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !8725, !tbaa !3837
  %67 = load i64, i64* %psize, align 8, !dbg !8726, !tbaa !3837
  %add85 = add i64 %67, %66, !dbg !8726
  store i64 %add85, i64* %psize, align 8, !dbg !8726, !tbaa !3837
  br label %if.end89, !dbg !8727

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74, i64 0, i64 0)) #12, !dbg !8728
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !8730, !tbaa !2993
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !8730
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !8731
  store i1 false, i1* %retval, align 1, !dbg !8732
  br label %return, !dbg !8732

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !8733, !tbaa !3837
  %70 = load i64, i64* %n_read, align 8, !dbg !8734, !tbaa !3837
  %sub91 = sub i64 %70, %69, !dbg !8734
  store i64 %sub91, i64* %n_read, align 8, !dbg !8734, !tbaa !3837
  %71 = load i64, i64* %csize, align 8, !dbg !8735, !tbaa !3837
  %72 = load i8*, i8** %cbuf, align 8, !dbg !8736, !tbaa !2993
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !8736
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !8736, !tbaa !2993
  br label %while.cond17, !dbg !8621, !llvm.loop !8737

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !8739, !tbaa !3104
  %tobool92 = trunc i8 %73 to i1, !dbg !8739
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8740, !tbaa !2993
  %frombool93 = zext i1 %tobool92 to i8, !dbg !8741
  store i8 %frombool93, i8* %74, align 1, !dbg !8741, !tbaa !3104, !ctir !117
  br label %while.cond, !dbg !8574, !llvm.loop !8593

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !8742, !tbaa !3104
  %tobool95 = trunc i8 %75 to i1, !dbg !8742
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !8744

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !8745, !tbaa !2980
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !8746, !tbaa !2993
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !8747, !tbaa !3104
  %tobool98 = trunc i8 %78 to i1, !dbg !8747
  %79 = load i64, i64* %psize, align 8, !dbg !8748, !tbaa !3837
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !8749
  br i1 %call99, label %if.else101, label %if.then100, !dbg !8750

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !8751
  br label %return, !dbg !8751

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !8752
  br label %return, !dbg !8752

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !8753
  ret i1 %80, !dbg !8753
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !8754 !ctir !469 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %desc.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !112
  %mode.addr = alloca i32, align 4, !ctir !157
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8755, metadata !DIExpression()), !dbg !8756
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8757, metadata !DIExpression()), !dbg !8758
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8759, metadata !DIExpression()), !dbg !8760
  %0 = load i32, i32* %desc.addr, align 4, !dbg !8761, !tbaa !2980
  %cmp = icmp sle i32 0, %0, !dbg !8763
  br i1 %cmp, label %if.then, label %if.end, !dbg !8764

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8765, !tbaa !2980
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8766, !tbaa !2980
  %call = call i32 @fchmod(i32 %1, i32 %2) #12, !dbg !8767
  store i32 %call, i32* %retval, align 4, !dbg !8768
  br label %return, !dbg !8768

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8769, !tbaa !2993
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8770, !tbaa !2980
  %call1 = call i32 @chmod(i8* %3, i32 %4) #12, !dbg !8771
  store i32 %call1, i32* %retval, align 4, !dbg !8772
  br label %return, !dbg !8772

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8773
  ret i32 %5, !dbg !8773
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #9 !dbg !8774 !ctir !464 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %buf.addr = alloca i8*, align 8, !ctir !428
  %length.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !466
  %word = alloca i8, align 1, !ctir !468
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8775, metadata !DIExpression()), !dbg !8776
  store i64 %length, i64* %length.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8777, metadata !DIExpression()), !dbg !8778
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8779, metadata !DIExpression()), !dbg !8780
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8781, !tbaa !2993
  store i8* %0, i8** %p, align 8, !dbg !8780, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8782, metadata !DIExpression()), !dbg !8783
  %1 = load i64, i64* %length.addr, align 8, !dbg !8784, !tbaa !3837
  %tobool = icmp ne i64 %1, 0, !dbg !8784
  br i1 %tobool, label %if.end, label %if.then, !dbg !8786

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8787
  br label %return, !dbg !8787

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8788

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8789, !tbaa !3837
  %and = and i64 %2, 0, !dbg !8789
  %tobool1 = icmp ne i64 %and, 0, !dbg !8788
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8788

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8790, !tbaa !2993
  %4 = load i8, i8* %3, align 1, !dbg !8793, !tbaa !3652, !ctir !467
  %tobool2 = icmp ne i8 %4, 0, !dbg !8793
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8794

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8795
  br label %return, !dbg !8795

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8796, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8796
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8796, !tbaa !2993
  %6 = load i64, i64* %length.addr, align 8, !dbg !8797, !tbaa !3837
  %dec = add i64 %6, -1, !dbg !8797
  store i64 %dec, i64* %length.addr, align 8, !dbg !8797, !tbaa !3837
  %7 = load i64, i64* %length.addr, align 8, !dbg !8798, !tbaa !3837
  %tobool5 = icmp ne i64 %7, 0, !dbg !8798
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8800

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8801
  br label %return, !dbg !8801

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8788, !llvm.loop !8802

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8804

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8805, !tbaa !2993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8809
  %9 = load i8, i8* %word, align 1, !dbg !8810, !tbaa !3652
  %tobool8 = icmp ne i8 %9, 0, !dbg !8810
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8812

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8813
  br label %return, !dbg !8813

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8814, !tbaa !2993
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8814
  store i8* %add.ptr, i8** %p, align 8, !dbg !8814, !tbaa !2993
  %11 = load i64, i64* %length.addr, align 8, !dbg !8815, !tbaa !3837
  %sub = sub i64 %11, 1, !dbg !8815
  store i64 %sub, i64* %length.addr, align 8, !dbg !8815, !tbaa !3837
  %12 = load i64, i64* %length.addr, align 8, !dbg !8816, !tbaa !3837
  %tobool11 = icmp ne i64 %12, 0, !dbg !8816
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8818

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8819
  br label %return, !dbg !8819

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8820, !tbaa !3837
  %and14 = and i64 %13, 15, !dbg !8820
  %cmp = icmp eq i64 %and14, 0, !dbg !8822
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8823

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8824

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8825, !llvm.loop !8826

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8829, !tbaa !2993
  %15 = load i8*, i8** %p, align 8, !dbg !8830, !tbaa !2993
  %16 = load i64, i64* %length.addr, align 8, !dbg !8831, !tbaa !3837
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8832
  %cmp17 = icmp eq i32 %call, 0, !dbg !8833
  store i1 %cmp17, i1* %retval, align 1, !dbg !8834
  br label %return, !dbg !8834

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8835
  ret i1 %17, !dbg !8835
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8836 !ctir !451 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %fd.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !112
  %punch_holes.addr = alloca i8, align 1, !ctir !117
  %size.addr = alloca i64, align 8, !ctir !245
  %file_end = alloca i64, align 8, !ctir !245
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8839, metadata !DIExpression()), !dbg !8840
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8841, metadata !DIExpression()), !dbg !8842
  store i64 %size, i64* %size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8843, metadata !DIExpression()), !dbg !8844
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8845, metadata !DIExpression()), !dbg !8846
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8847, !tbaa !2980
  %1 = load i64, i64* %size.addr, align 8, !dbg !8848, !tbaa !3837
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #12, !dbg !8849
  store i64 %call, i64* %file_end, align 8, !dbg !8846, !tbaa !3837
  %2 = load i64, i64* %file_end, align 8, !dbg !8850, !tbaa !3837
  %cmp = icmp slt i64 %2, 0, !dbg !8852
  br i1 %cmp, label %if.then, label %if.end, !dbg !8853

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8854
  %3 = load i32, i32* %call1, align 4, !dbg !8854, !tbaa !2980, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i64 0, i64 0)) #12, !dbg !8856
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8857, !tbaa !2993
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !8857
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !8858
  store i1 false, i1* %retval, align 1, !dbg !8859
  br label %return, !dbg !8859

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !8860, !tbaa !3104
  %tobool = trunc i8 %5 to i1, !dbg !8860
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8862

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !8863, !tbaa !2980
  %7 = load i64, i64* %file_end, align 8, !dbg !8864, !tbaa !3837
  %8 = load i64, i64* %size.addr, align 8, !dbg !8865, !tbaa !3837
  %sub = sub nsw i64 %7, %8, !dbg !8866
  %9 = load i64, i64* %size.addr, align 8, !dbg !8867, !tbaa !3837
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !8868
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8869
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8870

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #15, !dbg !8871
  %10 = load i32, i32* %call7, align 4, !dbg !8871, !tbaa !2980, !ctir !5
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71, i64 0, i64 0)) #12, !dbg !8873
  %11 = load i8*, i8** %name.addr, align 8, !dbg !8874, !tbaa !2993
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !8874
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !8875
  store i1 false, i1* %retval, align 1, !dbg !8876
  br label %return, !dbg !8876

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !8877
  br label %return, !dbg !8877

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !8878
  ret i1 %12, !dbg !8878
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !8879 !ctir !455 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %offset.addr = alloca i64, align 8, !ctir !245
  %length.addr = alloca i64, align 8, !ctir !245
  %ret = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8880, metadata !DIExpression()), !dbg !8881
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8882, metadata !DIExpression()), !dbg !8883
  store i64 %length, i64* %length.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8884, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8886, metadata !DIExpression()), !dbg !8887
  store i32 0, i32* %ret, align 4, !dbg !8887, !tbaa !2980
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8888, !tbaa !2980
  %1 = load i64, i64* %offset.addr, align 8, !dbg !8889, !tbaa !3837
  %2 = load i64, i64* %length.addr, align 8, !dbg !8890, !tbaa !3837
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !8891
  store i32 %call, i32* %ret, align 4, !dbg !8892, !tbaa !2980
  %3 = load i32, i32* %ret, align 4, !dbg !8893, !tbaa !2980
  %cmp = icmp slt i32 %3, 0, !dbg !8895
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8896

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !8897
  %4 = load i32, i32* %call1, align 4, !dbg !8897, !tbaa !2980, !ctir !5
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !8898
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !8899

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #15, !dbg !8900
  %5 = load i32, i32* %call3, align 4, !dbg !8900, !tbaa !2980, !ctir !5
  %cmp4 = icmp eq i32 %5, 38, !dbg !8901
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8902

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !8903, !tbaa !2980
  br label %if.end, !dbg !8904

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8905, !tbaa !2980
  ret i32 %6, !dbg !8906
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !8907 !ctir !304 {
entry:
  %err.addr = alloca i32, align 4, !ctir !5
  store i32 %err, i32* %err.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8908, metadata !DIExpression()), !dbg !8909
  %0 = load i32, i32* %err.addr, align 4, !dbg !8910, !tbaa !2980
  %cmp = icmp eq i32 %0, 95, !dbg !8911
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8912

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8912

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8913
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !8914 !ctir !439 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8, !ctir !441
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8915, metadata !DIExpression()), !dbg !8916
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8917, !tbaa !2993
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8918, !ctir !442
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8918, !tbaa !8322, !ctir !432
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !8917
  call void @free(i8* %2) #12, !dbg !8919
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8920, !tbaa !2993
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8921, !ctir !442
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !8922, !tbaa !8322, !ctir !432
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8923, !tbaa !2993
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !8924, !ctir !442
  store i64 0, i64* %ei_count, align 8, !dbg !8925, !tbaa !8303, !ctir !52
  ret void, !dbg !8926
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !491 !ctir !453 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %fd.addr = alloca i32, align 4, !ctir !5
  %n_bytes.addr = alloca i64, align 8, !ctir !245
  %n = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8927, metadata !DIExpression()), !dbg !8928
  store i64 %n_bytes, i64* %n_bytes.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !8929, metadata !DIExpression()), !dbg !8930
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8931, !tbaa !2993
  %cmp = icmp eq i8* %0, null, !dbg !8933
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8934

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !8935, !tbaa !3837
  %call = call noalias i8* @calloc(i64 %1, i64 1) #12, !dbg !8937
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !8938, !tbaa !2993
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8939, !tbaa !2993
  %cmp1 = icmp eq i8* %2, null, !dbg !8941
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8942

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !8943, !tbaa !2993
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !8945, !tbaa !3837
  br label %if.end, !dbg !8946

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8947

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !8948

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !8949, !tbaa !3837
  %tobool = icmp ne i64 %3, 0, !dbg !8948
  br i1 %tobool, label %while.body, label %while.end, !dbg !8948

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8950, metadata !DIExpression()), !dbg !8952
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !8953, !tbaa !3837
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !8953, !tbaa !3837
  %cmp4 = icmp ult i64 %4, %5, !dbg !8953
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8953

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !8953, !tbaa !3837
  br label %cond.end, !dbg !8953

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !8953, !tbaa !3837
  br label %cond.end, !dbg !8953

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8953
  store i64 %cond, i64* %n, align 8, !dbg !8952, !tbaa !3837
  %8 = load i32, i32* %fd.addr, align 4, !dbg !8954, !tbaa !2980
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8956, !tbaa !2993
  %10 = load i64, i64* %n, align 8, !dbg !8957, !tbaa !3837
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !8958
  %11 = load i64, i64* %n, align 8, !dbg !8959, !tbaa !3837
  %cmp6 = icmp ne i64 %call5, %11, !dbg !8960
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8961

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !8962
  br label %return, !dbg !8962

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !8963, !tbaa !3837
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !8964, !tbaa !3837
  %sub = sub i64 %13, %12, !dbg !8964
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !8964, !tbaa !3837
  br label %while.cond, !dbg !8948, !llvm.loop !8965

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !8967
  br label %return, !dbg !8967

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !8968
  ret i1 %14, !dbg !8968
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !8969 !ctir !365 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %mode.addr = alloca i32, align 4, !ctir !157
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8970, metadata !DIExpression()), !dbg !8971
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8972, metadata !DIExpression()), !dbg !8973
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8974, !tbaa !2980
  %and = and i32 %0, 61440, !dbg !8974
  %cmp = icmp eq i32 %and, 40960, !dbg !8974
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8975

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !8976
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !8977

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !8978, !tbaa !2993
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #12, !dbg !8979
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8980
  br label %lor.end, !dbg !8977

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !8981
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !8982 !ctir !294 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !296
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8983, metadata !DIExpression()), !dbg !8984
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8985, !tbaa !2993
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !8986
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !8986
  %call = call i32 @geteuid() #12, !dbg !8987
  %cmp = icmp eq i32 %call, 0, !dbg !8988
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8989, !tbaa !2993
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8990, !ctir !251
  %frombool = zext i1 %cmp to i8, !dbg !8991
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !8991, !tbaa !8178, !ctir !117
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8992, !tbaa !2993
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !8993, !ctir !251
  %frombool1 = zext i1 %cmp to i8, !dbg !8994
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !8994, !tbaa !7947, !ctir !117
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8995, !tbaa !2993
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !8996, !ctir !251
  store i32 -1, i32* %rename_errno, align 4, !dbg !8997, !tbaa !3274, !ctir !5
  ret void, !dbg !8998
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !8999 !ctir !504 {
entry:
  %ino.addr = alloca i64, align 8, !ctir !224
  %dev.addr = alloca i64, align 8, !ctir !227
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !507
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !506
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9000, metadata !DIExpression()), !dbg !9001
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9002, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !9004, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !9006, metadata !DIExpression()), !dbg !9007
  %0 = load i64, i64* %ino.addr, align 8, !dbg !9008, !tbaa !3837
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !9009, !ctir !507
  store i64 %0, i64* %st_ino, align 8, !dbg !9010, !tbaa !9011, !ctir !224
  %1 = load i64, i64* %dev.addr, align 8, !dbg !9013, !tbaa !3837
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !9014, !ctir !507
  store i64 %1, i64* %st_dev, align 8, !dbg !9015, !tbaa !9016, !ctir !227
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !9017, !ctir !507
  store i8* null, i8** %name, align 8, !dbg !9018, !tbaa !9019, !ctir !7
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9020, !tbaa !2993
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !9021
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !9022
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9022
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !9023, !tbaa !2993
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9024, !tbaa !2993
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !9024
  br i1 %tobool, label %if.then, label %if.end, !dbg !9026

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9027, !tbaa !2993
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !9027
  call void @src_to_dest_free(i8* %7), !dbg !9028
  br label %if.end, !dbg !9028

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9029
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !9030 !ctir !518 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !506
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9031, metadata !DIExpression()), !dbg !9032
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !9033, metadata !DIExpression()), !dbg !9034
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9035, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9035
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !9034, !tbaa !2993
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9036, !tbaa !2993
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !9037, !ctir !507
  %3 = load i8*, i8** %name, align 8, !dbg !9037, !tbaa !9019, !ctir !7
  call void @free(i8* %3) #12, !dbg !9038
  %4 = load i8*, i8** %x.addr, align 8, !dbg !9039, !tbaa !2993
  call void @free(i8* %4) #12, !dbg !9040
  ret void, !dbg !9041
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !9042 !ctir !512 {
entry:
  %ino.addr = alloca i64, align 8, !ctir !224
  %dev.addr = alloca i64, align 8, !ctir !227
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !507
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !514
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9043, metadata !DIExpression()), !dbg !9044
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9045, metadata !DIExpression()), !dbg !9046
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !9047, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !9049, metadata !DIExpression()), !dbg !9050
  %0 = load i64, i64* %ino.addr, align 8, !dbg !9051, !tbaa !3837
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !9052, !ctir !507
  store i64 %0, i64* %st_ino, align 8, !dbg !9053, !tbaa !9011, !ctir !224
  %1 = load i64, i64* %dev.addr, align 8, !dbg !9054, !tbaa !3837
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !9055, !ctir !507
  store i64 %1, i64* %st_dev, align 8, !dbg !9056, !tbaa !9016, !ctir !227
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9057, !tbaa !2993
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !9058
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !9059
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9059
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !9060, !tbaa !2993
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !9061, !tbaa !2993
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !9061
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9061

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !9062, !tbaa !2993
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !9063, !ctir !515
  %7 = load i8*, i8** %name, align 8, !dbg !9063, !tbaa !9019, !ctir !7
  br label %cond.end, !dbg !9061

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9061

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !9061
  ret i8* %cond, !dbg !9064
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !9065 !ctir !516 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %name.addr = alloca i8*, align 8, !ctir !112
  %ino.addr = alloca i64, align 8, !ctir !224
  %dev.addr = alloca i64, align 8, !ctir !227
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !506
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !506
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9066, metadata !DIExpression()), !dbg !9067
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !9068, metadata !DIExpression()), !dbg !9069
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !9072, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !9074, metadata !DIExpression()), !dbg !9075
  %call = call noalias i8* @xmalloc(i64 24), !dbg !9076
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !9076
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !9077, !tbaa !2993
  %1 = load i8*, i8** %name.addr, align 8, !dbg !9078, !tbaa !2993
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !9079
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9080, !tbaa !2993
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !9081, !ctir !507
  store i8* %call1, i8** %name2, align 8, !dbg !9082, !tbaa !9019, !ctir !7
  %3 = load i64, i64* %ino.addr, align 8, !dbg !9083, !tbaa !3837
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9084, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !9085, !ctir !507
  store i64 %3, i64* %st_ino, align 8, !dbg !9086, !tbaa !9011, !ctir !224
  %5 = load i64, i64* %dev.addr, align 8, !dbg !9087, !tbaa !3837
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9088, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !9089, !ctir !507
  store i64 %5, i64* %st_dev, align 8, !dbg !9090, !tbaa !9016, !ctir !227
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9091, !tbaa !2993
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9092, !tbaa !2993
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !9092
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !9093
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !9093
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9094, !tbaa !2993
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9095, !tbaa !2993
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !9097
  br i1 %cmp, label %if.then, label %if.end, !dbg !9098

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9099
  unreachable, !dbg !9099

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9101, !tbaa !2993
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9103, !tbaa !2993
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !9104
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !9105

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !9106, !tbaa !2993
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !9106
  call void @src_to_dest_free(i8* %15), !dbg !9108
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !9109, !tbaa !2993
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !9110, !ctir !507
  %17 = load i8*, i8** %name6, align 8, !dbg !9110, !tbaa !9019, !ctir !7
  store i8* %17, i8** %retval, align 8, !dbg !9111
  br label %return, !dbg !9111

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !9112
  br label %return, !dbg !9112

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !9113
  ret i8* %18, !dbg !9113
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !9114 !ctir !131 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !9115
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !9116, !tbaa !2993
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9117, !tbaa !2993
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !9119
  br i1 %cmp, label %if.then, label %if.end, !dbg !9120

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !9121
  unreachable, !dbg !9121

if.end:                                           ; preds = %entry
  ret void, !dbg !9122
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !9123 !ctir !520 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !514
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9124, metadata !DIExpression()), !dbg !9125
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !9128, metadata !DIExpression()), !dbg !9129
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9130, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9130
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !9129, !tbaa !2993
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !9131, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !9132, !ctir !515
  %3 = load i64, i64* %st_ino, align 8, !dbg !9132, !tbaa !9011, !ctir !224
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !9133, !tbaa !3837
  %rem = urem i64 %3, %4, !dbg !9134
  ret i64 %rem, !dbg !9135
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !9136 !ctir !522 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %y.addr = alloca i8*, align 8, !ctir !428
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !514
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !514
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !9137, metadata !DIExpression()), !dbg !9138
  store i8* %y, i8** %y.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !9139, metadata !DIExpression()), !dbg !9140
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !9141, metadata !DIExpression()), !dbg !9142
  %0 = load i8*, i8** %x.addr, align 8, !dbg !9143, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !9143
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !9142, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !9144, metadata !DIExpression()), !dbg !9145
  %2 = load i8*, i8** %y.addr, align 8, !dbg !9146, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !9146
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !9145, !tbaa !2993
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9147, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !9147, !ctir !515
  %5 = load i64, i64* %st_ino, align 8, !dbg !9147, !tbaa !9011, !ctir !224
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !9147, !tbaa !2993
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !9147, !ctir !515
  %7 = load i64, i64* %st_ino1, align 8, !dbg !9147, !tbaa !9011, !ctir !224
  %cmp = icmp eq i64 %5, %7, !dbg !9147
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !9147

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !9147, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !9147, !ctir !515
  %9 = load i64, i64* %st_dev, align 8, !dbg !9147, !tbaa !9016, !ctir !227
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !9147, !tbaa !2993
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !9147, !ctir !515
  %11 = load i64, i64* %st_dev2, align 8, !dbg !9147, !tbaa !9016, !ctir !227
  %cmp3 = icmp eq i64 %9, %11, !dbg !9147
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !9148
  %13 = zext i1 %12 to i64, !dbg !9147
  %cond = select i1 %12, i32 1, i32 0, !dbg !9147
  %tobool = icmp ne i32 %cond, 0, !dbg !9147
  ret i1 %tobool, !dbg !9149
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !9150 !ctir !131 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !9151, !tbaa !2993
  call void @hash_free(%struct.hash_table* %0), !dbg !9152
  ret void, !dbg !9153
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !9154 !ctir !1527 {
entry:
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %scan.addr = alloca %struct.extent_scan*, align 8, !ctir !1529
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !9155, metadata !DIExpression()), !dbg !9156
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9157, metadata !DIExpression()), !dbg !9158
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !9159, !tbaa !2980
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9160, !tbaa !2993
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !9161, !ctir !1530
  store i32 %0, i32* %fd, align 8, !dbg !9162, !tbaa !9163, !ctir !5
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9164, !tbaa !2993
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !9165, !ctir !1530
  store i64 0, i64* %ei_count, align 8, !dbg !9166, !tbaa !8303, !ctir !52
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9167, !tbaa !2993
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !9168, !ctir !1530
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !9169, !tbaa !8322, !ctir !1539
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9170, !tbaa !2993
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !9171, !ctir !1530
  store i64 0, i64* %scan_start, align 8, !dbg !9172, !tbaa !9173, !ctir !1526
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9174, !tbaa !2993
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !9175, !ctir !1530
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !9176, !tbaa !8283, !ctir !117
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9177, !tbaa !2993
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !9178, !ctir !1530
  store i8 0, i8* %hit_final_extent, align 1, !dbg !9179, !tbaa !8277, !ctir !117
  %call = call zeroext i1 @extent_need_sync(), !dbg !9180
  %7 = zext i1 %call to i64, !dbg !9180
  %cond = select i1 %call, i32 1, i32 0, !dbg !9180
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9181, !tbaa !2993
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !9182, !ctir !1530
  store i32 %cond, i32* %fm_flags, align 8, !dbg !9183, !tbaa !9184, !ctir !67
  ret void, !dbg !9185
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !9186 !ctir !1234 {
entry:
  ret i1 true, !dbg !9187
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !9188 !ctir !1545 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %scan.addr = alloca %struct.extent_scan*, align 8, !ctir !1529
  %si = alloca i32, align 4, !ctir !67
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1539
  %fiemap_buf = alloca %union.anon.16, align 8, !ctir !9189
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1547
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1571
  %prev_idx = alloca i64, align 8, !ctir !52
  %i = alloca i32, align 4, !ctir !67
  %new_logical = alloca i64, align 8, !ctir !1552
  %length_adjust = alloca i64, align 8, !ctir !1552
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.declare(metadata i32* %si, metadata !9195, metadata !DIExpression()), !dbg !9196
  store i32 0, i32* %si, align 4, !dbg !9196, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !9197, metadata !DIExpression()), !dbg !9198
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9199, !tbaa !2993
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !9200, !ctir !1530
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !9200, !tbaa !8322, !ctir !1539
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !9198, !tbaa !2993
  br label %while.body, !dbg !9201

while.body:                                       ; preds = %entry, %if.end162
  call void @llvm.dbg.declare(metadata %union.anon.16* %fiemap_buf, metadata !9202, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !9205, metadata !DIExpression()), !dbg !9206
  %f = bitcast %union.anon.16* %fiemap_buf to %struct.fiemap*, !dbg !9207
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !9206, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !9208, metadata !DIExpression()), !dbg !9209
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9210, !tbaa !2993
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !9211, !ctir !1548
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !9210, !ctir !1560
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9209, !tbaa !2993
  %3 = bitcast %union.anon.16* %fiemap_buf to i8*, !dbg !9212
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !9212
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9213, !tbaa !2993
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !9214, !ctir !1530
  %5 = load i64, i64* %scan_start, align 8, !dbg !9214, !tbaa !9173, !ctir !1526
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9215, !tbaa !2993
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !9216, !ctir !1548
  store i64 %5, i64* %fm_start, align 8, !dbg !9217, !tbaa !3837, !ctir !1552
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9218, !tbaa !2993
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !9219, !ctir !1530
  %8 = load i32, i32* %fm_flags, align 8, !dbg !9219, !tbaa !9184, !ctir !67
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9220, !tbaa !2993
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !9221, !ctir !1548
  store i32 %8, i32* %fm_flags2, align 8, !dbg !9222, !tbaa !2980, !ctir !1555
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9223, !tbaa !2993
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !9224, !ctir !1548
  store i32 72, i32* %fm_extent_count, align 8, !dbg !9225, !tbaa !2980, !ctir !1555
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9226, !tbaa !2993
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !9227, !ctir !1530
  %12 = load i64, i64* %scan_start3, align 8, !dbg !9227, !tbaa !9173, !ctir !1526
  %sub = sub i64 -1, %12, !dbg !9228
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9229, !tbaa !2993
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !9230, !ctir !1548
  store i64 %sub, i64* %fm_length, align 8, !dbg !9231, !tbaa !3837, !ctir !1552
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9232, !tbaa !2993
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !9234, !ctir !1530
  %15 = load i32, i32* %fd, align 8, !dbg !9234, !tbaa !9163, !ctir !5
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9235, !tbaa !2993
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #12, !dbg !9236
  %cmp = icmp slt i32 %call, 0, !dbg !9237
  br i1 %cmp, label %if.then, label %if.end7, !dbg !9238

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9239, !tbaa !2993
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !9242, !ctir !1530
  %18 = load i64, i64* %scan_start4, align 8, !dbg !9242, !tbaa !9173, !ctir !1526
  %cmp5 = icmp eq i64 %18, 0, !dbg !9243
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9244

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9245, !tbaa !2993
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !9246, !ctir !1530
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !9247, !tbaa !8283, !ctir !117
  br label %if.end, !dbg !9245

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !9248
  br label %return, !dbg !9248

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9249, !tbaa !2993
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !9251, !ctir !1548
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !9251, !tbaa !2980, !ctir !1555
  %cmp8 = icmp eq i32 %21, 0, !dbg !9252
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !9253

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9254, !tbaa !2993
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !9256, !ctir !1530
  store i8 1, i8* %hit_final_extent, align 1, !dbg !9257, !tbaa !8277, !ctir !117
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9258, !tbaa !2993
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !9259, !ctir !1530
  %24 = load i64, i64* %scan_start10, align 8, !dbg !9259, !tbaa !9173, !ctir !1526
  %cmp11 = icmp ne i64 %24, 0, !dbg !9260
  store i1 %cmp11, i1* %retval, align 1, !dbg !9261
  br label %return, !dbg !9261

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9262, !tbaa !2993
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !9262, !ctir !1530
  %26 = load i64, i64* %ei_count, align 8, !dbg !9262, !tbaa !8303, !ctir !52
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9262, !tbaa !2993
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !9262, !ctir !1548
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !9262, !tbaa !2980, !ctir !1555
  %conv = zext i32 %28 to i64, !dbg !9262
  %sub14 = sub i64 -1, %conv, !dbg !9262
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !9262
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !9262

cond.true:                                        ; preds = %if.end12
  br label %cond.end, !dbg !9262

cond.false:                                       ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9262
  unreachable, !dbg !9262

29:                                               ; No predecessors!
  br label %cond.end, !dbg !9262

cond.end:                                         ; preds = %29, %cond.true
  %30 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9263, !tbaa !2993
  %fm_mapped_extents17 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %30, i32 0, i32 3, !dbg !9264, !ctir !1548
  %31 = load i32, i32* %fm_mapped_extents17, align 4, !dbg !9264, !tbaa !2980, !ctir !1555
  %conv18 = zext i32 %31 to i64, !dbg !9263
  %32 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9265, !tbaa !2993
  %ei_count19 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %32, i32 0, i32 3, !dbg !9266, !ctir !1530
  %33 = load i64, i64* %ei_count19, align 8, !dbg !9267, !tbaa !8303, !ctir !52
  %add = add i64 %33, %conv18, !dbg !9267
  store i64 %add, i64* %ei_count19, align 8, !dbg !9267, !tbaa !8303, !ctir !52
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !9268, metadata !DIExpression()), !dbg !9270
  %34 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9271, !tbaa !2993
  %35 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9272, !tbaa !2993
  %ext_info20 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %35, i32 0, i32 6, !dbg !9273, !ctir !1530
  %36 = load %struct.extent_info*, %struct.extent_info** %ext_info20, align 8, !dbg !9273, !tbaa !8322, !ctir !1539
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %34 to i64, !dbg !9274
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %36 to i64, !dbg !9274
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9274
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !9274
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !9270, !tbaa !3837
  %37 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9275, !tbaa !2993
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %37, i32 0, i32 6, !dbg !9276, !ctir !1530
  %38 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !9276, !tbaa !8322, !ctir !1539
  %39 = bitcast %struct.extent_info* %38 to i8*, !dbg !9275
  %40 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9277, !tbaa !2993
  %ei_count22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %40, i32 0, i32 3, !dbg !9278, !ctir !1530
  %41 = load i64, i64* %ei_count22, align 8, !dbg !9278, !tbaa !8303, !ctir !52
  %call23 = call i8* @xnrealloc(i8* %39, i64 %41, i64 24), !dbg !9279
  %42 = bitcast i8* %call23 to %struct.extent_info*, !dbg !9279
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9280, !tbaa !2993
  %ext_info24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !9281, !ctir !1530
  store %struct.extent_info* %42, %struct.extent_info** %ext_info24, align 8, !dbg !9282, !tbaa !8322, !ctir !1539
  %44 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9283, !tbaa !2993
  %ext_info25 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %44, i32 0, i32 6, !dbg !9284, !ctir !1530
  %45 = load %struct.extent_info*, %struct.extent_info** %ext_info25, align 8, !dbg !9284, !tbaa !8322, !ctir !1539
  %46 = load i64, i64* %prev_idx, align 8, !dbg !9285, !tbaa !3837
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %45, i64 %46, !dbg !9286
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !9287, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9288, metadata !DIExpression()), !dbg !9289
  store i32 0, i32* %i, align 4, !dbg !9289, !tbaa !2980
  store i32 0, i32* %i, align 4, !dbg !9290, !tbaa !2980
  br label %for.cond, !dbg !9292

for.cond:                                         ; preds = %for.inc, %cond.end
  %47 = load i32, i32* %i, align 4, !dbg !9293, !tbaa !2980
  %48 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9295, !tbaa !2993
  %fm_mapped_extents26 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %48, i32 0, i32 3, !dbg !9296, !ctir !1548
  %49 = load i32, i32* %fm_mapped_extents26, align 4, !dbg !9296, !tbaa !2980, !ctir !1555
  %cmp27 = icmp ult i32 %47, %49, !dbg !9297
  br i1 %cmp27, label %for.body, label %for.end, !dbg !9298

for.body:                                         ; preds = %for.cond
  %50 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9299, !tbaa !2993
  %51 = load i32, i32* %i, align 4, !dbg !9299, !tbaa !2980
  %idxprom = zext i32 %51 to i64, !dbg !9299
  %arrayidx29 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %50, i64 %idxprom, !dbg !9299, !ctir !1571
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx29, i32 0, i32 0, !dbg !9299, !ctir !1561
  %52 = load i64, i64* %fe_logical, align 8, !dbg !9299, !tbaa !9301, !ctir !1552
  %53 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9299, !tbaa !2993
  %54 = load i32, i32* %i, align 4, !dbg !9299, !tbaa !2980
  %idxprom30 = zext i32 %54 to i64, !dbg !9299
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %53, i64 %idxprom30, !dbg !9299, !ctir !1571
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 2, !dbg !9299, !ctir !1561
  %55 = load i64, i64* %fe_length, align 8, !dbg !9299, !tbaa !9303, !ctir !1552
  %sub32 = sub i64 9223372036854775807, %55, !dbg !9299
  %cmp33 = icmp ule i64 %52, %sub32, !dbg !9299
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !9299

cond.true35:                                      ; preds = %for.body
  br label %cond.end37, !dbg !9299

cond.false36:                                     ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.171, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.170, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9299
  unreachable, !dbg !9299

56:                                               ; No predecessors!
  br label %cond.end37, !dbg !9299

cond.end37:                                       ; preds = %56, %cond.true35
  %57 = load i32, i32* %si, align 4, !dbg !9304, !tbaa !2980
  %tobool = icmp ne i32 %57, 0, !dbg !9304
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !9306

land.lhs.true:                                    ; preds = %cond.end37
  %58 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9307, !tbaa !2993
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %58, i32 0, i32 2, !dbg !9308, !ctir !1540
  %59 = load i32, i32* %ext_flags, align 8, !dbg !9308, !tbaa !9309, !ctir !67
  %60 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9310, !tbaa !2993
  %61 = load i32, i32* %i, align 4, !dbg !9311, !tbaa !2980
  %idxprom38 = zext i32 %61 to i64, !dbg !9310
  %arrayidx39 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %60, i64 %idxprom38, !dbg !9310, !ctir !1571
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx39, i32 0, i32 4, !dbg !9312, !ctir !1561
  %62 = load i32, i32* %fe_flags, align 8, !dbg !9312, !tbaa !9313, !ctir !1555
  %and = and i32 %62, -2, !dbg !9314
  %cmp40 = icmp eq i32 %59, %and, !dbg !9315
  br i1 %cmp40, label %land.lhs.true42, label %if.else, !dbg !9316

land.lhs.true42:                                  ; preds = %land.lhs.true
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9317, !tbaa !2993
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 0, !dbg !9318, !ctir !1540
  %64 = load i64, i64* %ext_logical, align 8, !dbg !9318, !tbaa !8326, !ctir !1526
  %65 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9319, !tbaa !2993
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %65, i32 0, i32 1, !dbg !9320, !ctir !1540
  %66 = load i64, i64* %ext_length, align 8, !dbg !9320, !tbaa !8333, !ctir !1526
  %add43 = add nsw i64 %64, %66, !dbg !9321
  %67 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9322, !tbaa !2993
  %68 = load i32, i32* %i, align 4, !dbg !9323, !tbaa !2980
  %idxprom44 = zext i32 %68 to i64, !dbg !9322
  %arrayidx45 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %67, i64 %idxprom44, !dbg !9322, !ctir !1571
  %fe_logical46 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx45, i32 0, i32 0, !dbg !9324, !ctir !1561
  %69 = load i64, i64* %fe_logical46, align 8, !dbg !9324, !tbaa !9301, !ctir !1552
  %cmp47 = icmp eq i64 %add43, %69, !dbg !9325
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !9326

if.then49:                                        ; preds = %land.lhs.true42
  %70 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9327, !tbaa !2993
  %71 = load i32, i32* %i, align 4, !dbg !9329, !tbaa !2980
  %idxprom50 = zext i32 %71 to i64, !dbg !9327
  %arrayidx51 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %70, i64 %idxprom50, !dbg !9327, !ctir !1571
  %fe_length52 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx51, i32 0, i32 2, !dbg !9330, !ctir !1561
  %72 = load i64, i64* %fe_length52, align 8, !dbg !9330, !tbaa !9303, !ctir !1552
  %73 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9331, !tbaa !2993
  %ext_length53 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %73, i32 0, i32 1, !dbg !9332, !ctir !1540
  %74 = load i64, i64* %ext_length53, align 8, !dbg !9333, !tbaa !8333, !ctir !1526
  %add54 = add i64 %74, %72, !dbg !9333
  store i64 %add54, i64* %ext_length53, align 8, !dbg !9333, !tbaa !8333, !ctir !1526
  %75 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9334, !tbaa !2993
  %76 = load i32, i32* %i, align 4, !dbg !9335, !tbaa !2980
  %idxprom55 = zext i32 %76 to i64, !dbg !9334
  %arrayidx56 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %75, i64 %idxprom55, !dbg !9334, !ctir !1571
  %fe_flags57 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx56, i32 0, i32 4, !dbg !9336, !ctir !1561
  %77 = load i32, i32* %fe_flags57, align 8, !dbg !9336, !tbaa !9313, !ctir !1555
  %78 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9337, !tbaa !2993
  %ext_flags58 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %78, i32 0, i32 2, !dbg !9338, !ctir !1540
  store i32 %77, i32* %ext_flags58, align 8, !dbg !9339, !tbaa !9309, !ctir !67
  br label %if.end128, !dbg !9340

if.else:                                          ; preds = %land.lhs.true42, %land.lhs.true, %cond.end37
  %79 = load i32, i32* %si, align 4, !dbg !9341, !tbaa !2980
  %cmp59 = icmp eq i32 %79, 0, !dbg !9343
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false, !dbg !9344

land.lhs.true61:                                  ; preds = %if.else
  %80 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9345, !tbaa !2993
  %scan_start62 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %80, i32 0, i32 1, !dbg !9346, !ctir !1530
  %81 = load i64, i64* %scan_start62, align 8, !dbg !9346, !tbaa !9173, !ctir !1526
  %82 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9347, !tbaa !2993
  %83 = load i32, i32* %i, align 4, !dbg !9348, !tbaa !2980
  %idxprom63 = zext i32 %83 to i64, !dbg !9347
  %arrayidx64 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %82, i64 %idxprom63, !dbg !9347, !ctir !1571
  %fe_logical65 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx64, i32 0, i32 0, !dbg !9349, !ctir !1561
  %84 = load i64, i64* %fe_logical65, align 8, !dbg !9349, !tbaa !9301, !ctir !1552
  %cmp66 = icmp ugt i64 %81, %84, !dbg !9350
  br i1 %cmp66, label %if.then78, label %lor.lhs.false, !dbg !9351

lor.lhs.false:                                    ; preds = %land.lhs.true61, %if.else
  %85 = load i32, i32* %si, align 4, !dbg !9352, !tbaa !2980
  %tobool68 = icmp ne i32 %85, 0, !dbg !9352
  br i1 %tobool68, label %land.lhs.true69, label %if.else112, !dbg !9353

land.lhs.true69:                                  ; preds = %lor.lhs.false
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9354, !tbaa !2993
  %ext_logical70 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 0, !dbg !9355, !ctir !1540
  %87 = load i64, i64* %ext_logical70, align 8, !dbg !9355, !tbaa !8326, !ctir !1526
  %88 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9356, !tbaa !2993
  %ext_length71 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %88, i32 0, i32 1, !dbg !9357, !ctir !1540
  %89 = load i64, i64* %ext_length71, align 8, !dbg !9357, !tbaa !8333, !ctir !1526
  %add72 = add nsw i64 %87, %89, !dbg !9358
  %90 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9359, !tbaa !2993
  %91 = load i32, i32* %i, align 4, !dbg !9360, !tbaa !2980
  %idxprom73 = zext i32 %91 to i64, !dbg !9359
  %arrayidx74 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %90, i64 %idxprom73, !dbg !9359, !ctir !1571
  %fe_logical75 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx74, i32 0, i32 0, !dbg !9361, !ctir !1561
  %92 = load i64, i64* %fe_logical75, align 8, !dbg !9361, !tbaa !9301, !ctir !1552
  %cmp76 = icmp ugt i64 %add72, %92, !dbg !9362
  br i1 %cmp76, label %if.then78, label %if.else112, !dbg !9363

if.then78:                                        ; preds = %land.lhs.true69, %land.lhs.true61
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !9364, metadata !DIExpression()), !dbg !9366
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !9367, metadata !DIExpression()), !dbg !9368
  %93 = load i32, i32* %si, align 4, !dbg !9369, !tbaa !2980
  %cmp79 = icmp eq i32 %93, 0, !dbg !9371
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !9372

if.then81:                                        ; preds = %if.then78
  %94 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9373, !tbaa !2993
  %scan_start82 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %94, i32 0, i32 1, !dbg !9374, !ctir !1530
  %95 = load i64, i64* %scan_start82, align 8, !dbg !9374, !tbaa !9173, !ctir !1526
  store i64 %95, i64* %new_logical, align 8, !dbg !9375, !tbaa !3837
  br label %if.end87, !dbg !9376

if.else83:                                        ; preds = %if.then78
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9377, !tbaa !2993
  %ext_logical84 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 0, !dbg !9379, !ctir !1540
  %97 = load i64, i64* %ext_logical84, align 8, !dbg !9379, !tbaa !8326, !ctir !1526
  %98 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9380, !tbaa !2993
  %ext_length85 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %98, i32 0, i32 1, !dbg !9381, !ctir !1540
  %99 = load i64, i64* %ext_length85, align 8, !dbg !9381, !tbaa !8333, !ctir !1526
  %add86 = add nsw i64 %97, %99, !dbg !9382
  store i64 %add86, i64* %new_logical, align 8, !dbg !9383, !tbaa !3837
  br label %if.end87

if.end87:                                         ; preds = %if.else83, %if.then81
  %100 = load i64, i64* %new_logical, align 8, !dbg !9384, !tbaa !3837
  %101 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9385, !tbaa !2993
  %102 = load i32, i32* %i, align 4, !dbg !9386, !tbaa !2980
  %idxprom88 = zext i32 %102 to i64, !dbg !9385
  %arrayidx89 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %101, i64 %idxprom88, !dbg !9385, !ctir !1571
  %fe_logical90 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx89, i32 0, i32 0, !dbg !9387, !ctir !1561
  %103 = load i64, i64* %fe_logical90, align 8, !dbg !9387, !tbaa !9301, !ctir !1552
  %sub91 = sub i64 %100, %103, !dbg !9388
  store i64 %sub91, i64* %length_adjust, align 8, !dbg !9389, !tbaa !3837
  %104 = load i64, i64* %length_adjust, align 8, !dbg !9390, !tbaa !3837
  %105 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9392, !tbaa !2993
  %106 = load i32, i32* %i, align 4, !dbg !9393, !tbaa !2980
  %idxprom92 = zext i32 %106 to i64, !dbg !9392
  %arrayidx93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %105, i64 %idxprom92, !dbg !9392, !ctir !1571
  %fe_length94 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx93, i32 0, i32 2, !dbg !9394, !ctir !1561
  %107 = load i64, i64* %fe_length94, align 8, !dbg !9394, !tbaa !9303, !ctir !1552
  %cmp95 = icmp ult i64 %104, %107, !dbg !9395
  br i1 %cmp95, label %if.then97, label %if.end104, !dbg !9396

if.then97:                                        ; preds = %if.end87
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9397, !tbaa !2993
  %scan_start98 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 1, !dbg !9400, !ctir !1530
  %109 = load i64, i64* %scan_start98, align 8, !dbg !9400, !tbaa !9173, !ctir !1526
  %cmp99 = icmp eq i64 %109, 0, !dbg !9401
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !9402

if.then101:                                       ; preds = %if.then97
  %110 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9403, !tbaa !2993
  %initial_scan_failed102 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %110, i32 0, i32 4, !dbg !9404, !ctir !1530
  store i8 1, i8* %initial_scan_failed102, align 8, !dbg !9405, !tbaa !8283, !ctir !117
  br label %if.end103, !dbg !9403

if.end103:                                        ; preds = %if.then101, %if.then97
  store i1 false, i1* %retval, align 1, !dbg !9406
  br label %return, !dbg !9406

if.end104:                                        ; preds = %if.end87
  %111 = load i64, i64* %new_logical, align 8, !dbg !9407, !tbaa !3837
  %112 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9408, !tbaa !2993
  %113 = load i32, i32* %i, align 4, !dbg !9409, !tbaa !2980
  %idxprom105 = zext i32 %113 to i64, !dbg !9408
  %arrayidx106 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %112, i64 %idxprom105, !dbg !9408, !ctir !1571
  %fe_logical107 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx106, i32 0, i32 0, !dbg !9410, !ctir !1561
  store i64 %111, i64* %fe_logical107, align 8, !dbg !9411, !tbaa !9301, !ctir !1552
  %114 = load i64, i64* %length_adjust, align 8, !dbg !9412, !tbaa !3837
  %115 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9413, !tbaa !2993
  %116 = load i32, i32* %i, align 4, !dbg !9414, !tbaa !2980
  %idxprom108 = zext i32 %116 to i64, !dbg !9413
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %115, i64 %idxprom108, !dbg !9413, !ctir !1571
  %fe_length110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 2, !dbg !9415, !ctir !1561
  %117 = load i64, i64* %fe_length110, align 8, !dbg !9416, !tbaa !9303, !ctir !1552
  %sub111 = sub i64 %117, %114, !dbg !9416
  store i64 %sub111, i64* %fe_length110, align 8, !dbg !9416, !tbaa !9303, !ctir !1552
  %118 = load i32, i32* %i, align 4, !dbg !9417, !tbaa !2980
  %dec = add i32 %118, -1, !dbg !9417
  store i32 %dec, i32* %i, align 4, !dbg !9417, !tbaa !2980
  br label %for.inc, !dbg !9418

if.else112:                                       ; preds = %land.lhs.true69, %lor.lhs.false
  %119 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9419, !tbaa !2993
  %ext_info113 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %119, i32 0, i32 6, !dbg !9421, !ctir !1530
  %120 = load %struct.extent_info*, %struct.extent_info** %ext_info113, align 8, !dbg !9421, !tbaa !8322, !ctir !1539
  %121 = load i32, i32* %si, align 4, !dbg !9422, !tbaa !2980
  %idx.ext = zext i32 %121 to i64, !dbg !9423
  %add.ptr114 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %120, i64 %idx.ext, !dbg !9423
  store %struct.extent_info* %add.ptr114, %struct.extent_info** %last_ei, align 8, !dbg !9424, !tbaa !2993
  %122 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9425, !tbaa !2993
  %123 = load i32, i32* %i, align 4, !dbg !9426, !tbaa !2980
  %idxprom115 = zext i32 %123 to i64, !dbg !9425
  %arrayidx116 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %122, i64 %idxprom115, !dbg !9425, !ctir !1571
  %fe_logical117 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx116, i32 0, i32 0, !dbg !9427, !ctir !1561
  %124 = load i64, i64* %fe_logical117, align 8, !dbg !9427, !tbaa !9301, !ctir !1552
  %125 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9428, !tbaa !2993
  %ext_logical118 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %125, i32 0, i32 0, !dbg !9429, !ctir !1540
  store i64 %124, i64* %ext_logical118, align 8, !dbg !9430, !tbaa !8326, !ctir !1526
  %126 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9431, !tbaa !2993
  %127 = load i32, i32* %i, align 4, !dbg !9432, !tbaa !2980
  %idxprom119 = zext i32 %127 to i64, !dbg !9431
  %arrayidx120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %126, i64 %idxprom119, !dbg !9431, !ctir !1571
  %fe_length121 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx120, i32 0, i32 2, !dbg !9433, !ctir !1561
  %128 = load i64, i64* %fe_length121, align 8, !dbg !9433, !tbaa !9303, !ctir !1552
  %129 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9434, !tbaa !2993
  %ext_length122 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %129, i32 0, i32 1, !dbg !9435, !ctir !1540
  store i64 %128, i64* %ext_length122, align 8, !dbg !9436, !tbaa !8333, !ctir !1526
  %130 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9437, !tbaa !2993
  %131 = load i32, i32* %i, align 4, !dbg !9438, !tbaa !2980
  %idxprom123 = zext i32 %131 to i64, !dbg !9437
  %arrayidx124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %130, i64 %idxprom123, !dbg !9437, !ctir !1571
  %fe_flags125 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx124, i32 0, i32 4, !dbg !9439, !ctir !1561
  %132 = load i32, i32* %fe_flags125, align 8, !dbg !9439, !tbaa !9313, !ctir !1555
  %133 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9440, !tbaa !2993
  %ext_flags126 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %133, i32 0, i32 2, !dbg !9441, !ctir !1540
  store i32 %132, i32* %ext_flags126, align 8, !dbg !9442, !tbaa !9309, !ctir !67
  %134 = load i32, i32* %si, align 4, !dbg !9443, !tbaa !2980
  %inc = add i32 %134, 1, !dbg !9443
  store i32 %inc, i32* %si, align 4, !dbg !9443, !tbaa !2980
  br label %if.end127

if.end127:                                        ; preds = %if.else112
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then49
  br label %for.inc, !dbg !9444

for.inc:                                          ; preds = %if.end128, %if.end104
  %135 = load i32, i32* %i, align 4, !dbg !9445, !tbaa !2980
  %inc129 = add i32 %135, 1, !dbg !9445
  store i32 %inc129, i32* %i, align 4, !dbg !9445, !tbaa !2980
  br label %for.cond, !dbg !9446, !llvm.loop !9447

for.end:                                          ; preds = %for.cond
  %136 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9449, !tbaa !2993
  %ext_flags130 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %136, i32 0, i32 2, !dbg !9451, !ctir !1540
  %137 = load i32, i32* %ext_flags130, align 8, !dbg !9451, !tbaa !9309, !ctir !67
  %and131 = and i32 %137, 1, !dbg !9452
  %tobool132 = icmp ne i32 %and131, 0, !dbg !9452
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !9453

if.then133:                                       ; preds = %for.end
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9454, !tbaa !2993
  %hit_final_extent134 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !9455, !ctir !1530
  store i8 1, i8* %hit_final_extent134, align 1, !dbg !9456, !tbaa !8277, !ctir !117
  br label %if.end135, !dbg !9454

if.end135:                                        ; preds = %if.then133, %for.end
  %139 = load i32, i32* %si, align 4, !dbg !9457, !tbaa !2980
  %cmp136 = icmp ugt i32 %139, 72, !dbg !9459
  br i1 %cmp136, label %land.lhs.true138, label %if.end147, !dbg !9460

land.lhs.true138:                                 ; preds = %if.end135
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9461, !tbaa !2993
  %hit_final_extent139 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 5, !dbg !9462, !ctir !1530
  %141 = load i8, i8* %hit_final_extent139, align 1, !dbg !9462, !tbaa !8277
  %tobool140 = trunc i8 %141 to i1, !dbg !9462, !ctir !117
  br i1 %tobool140, label %if.end147, label %if.then141, !dbg !9463

if.then141:                                       ; preds = %land.lhs.true138
  %142 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9464, !tbaa !2993
  %ext_info142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %142, i32 0, i32 6, !dbg !9465, !ctir !1530
  %143 = load %struct.extent_info*, %struct.extent_info** %ext_info142, align 8, !dbg !9465, !tbaa !8322, !ctir !1539
  %144 = load i32, i32* %si, align 4, !dbg !9466, !tbaa !2980
  %dec143 = add i32 %144, -1, !dbg !9466
  store i32 %dec143, i32* %si, align 4, !dbg !9466, !tbaa !2980
  %idx.ext144 = zext i32 %dec143 to i64, !dbg !9467
  %add.ptr145 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %143, i64 %idx.ext144, !dbg !9467
  %add.ptr146 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr145, i64 -1, !dbg !9468
  store %struct.extent_info* %add.ptr146, %struct.extent_info** %last_ei, align 8, !dbg !9469, !tbaa !2993
  br label %if.end147, !dbg !9470

if.end147:                                        ; preds = %if.then141, %land.lhs.true138, %if.end135
  %145 = load i32, i32* %si, align 4, !dbg !9471, !tbaa !2980
  %conv148 = zext i32 %145 to i64, !dbg !9471
  %146 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9472, !tbaa !2993
  %ei_count149 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %146, i32 0, i32 3, !dbg !9473, !ctir !1530
  store i64 %conv148, i64* %ei_count149, align 8, !dbg !9474, !tbaa !8303, !ctir !52
  %147 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9475, !tbaa !2993
  %hit_final_extent150 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %147, i32 0, i32 5, !dbg !9477, !ctir !1530
  %148 = load i8, i8* %hit_final_extent150, align 1, !dbg !9477, !tbaa !8277
  %tobool151 = trunc i8 %148 to i1, !dbg !9477, !ctir !117
  br i1 %tobool151, label %if.then152, label %if.else153, !dbg !9478

if.then152:                                       ; preds = %if.end147
  br label %while.end, !dbg !9479

if.else153:                                       ; preds = %if.end147
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9480, !tbaa !2993
  %ext_logical154 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 0, !dbg !9481, !ctir !1540
  %150 = load i64, i64* %ext_logical154, align 8, !dbg !9481, !tbaa !8326, !ctir !1526
  %151 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9482, !tbaa !2993
  %ext_length155 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %151, i32 0, i32 1, !dbg !9483, !ctir !1540
  %152 = load i64, i64* %ext_length155, align 8, !dbg !9483, !tbaa !8333, !ctir !1526
  %add156 = add nsw i64 %150, %152, !dbg !9484
  %153 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9485, !tbaa !2993
  %scan_start157 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %153, i32 0, i32 1, !dbg !9486, !ctir !1530
  store i64 %add156, i64* %scan_start157, align 8, !dbg !9487, !tbaa !9173, !ctir !1526
  br label %if.end158

if.end158:                                        ; preds = %if.else153
  %154 = load i32, i32* %si, align 4, !dbg !9488, !tbaa !2980
  %cmp159 = icmp uge i32 %154, 72, !dbg !9490
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !9491

if.then161:                                       ; preds = %if.end158
  br label %while.end, !dbg !9492

if.end162:                                        ; preds = %if.end158
  br label %while.body, !dbg !9201, !llvm.loop !9493

while.end:                                        ; preds = %if.then161, %if.then152
  store i1 true, i1* %retval, align 1, !dbg !9495
  br label %return, !dbg !9495

return:                                           ; preds = %while.end, %if.end103, %if.then9, %if.end
  %155 = load i1, i1* %retval, align 1, !dbg !9496
  ret i1 %155, !dbg !9496
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !9497 !ctir !530 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %srcdir.addr = alloca i32, align 4, !ctir !5
  %srcname.addr = alloca i8*, align 8, !ctir !112
  %dstdir.addr = alloca i32, align 4, !ctir !5
  %dstname.addr = alloca i8*, align 8, !ctir !112
  %flags.addr = alloca i32, align 4, !ctir !5
  %force.addr = alloca i8, align 1, !ctir !117
  %linkat_errno.addr = alloca i32, align 4, !ctir !5
  %buf = alloca [256 x i8], align 16, !ctir !532
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.link_arg, align 8, !ctir !546
  %err = alloca i32, align 4, !ctir !5
  store i32 %srcdir, i32* %srcdir.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9500, metadata !DIExpression()), !dbg !9501
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9502, metadata !DIExpression()), !dbg !9503
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9504, metadata !DIExpression()), !dbg !9505
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9506, metadata !DIExpression()), !dbg !9507
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9508, metadata !DIExpression()), !dbg !9509
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !9510, metadata !DIExpression()), !dbg !9511
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9512, !tbaa !2980
  %cmp = icmp slt i32 %0, 0, !dbg !9514
  br i1 %cmp, label %if.then, label %if.end, !dbg !9515

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !9516, !tbaa !2980
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !9517, !tbaa !2993
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !9518, !tbaa !2980
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !9519, !tbaa !2993
  %5 = load i32, i32* %flags.addr, align 4, !dbg !9520, !tbaa !2980
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #12, !dbg !9521
  %cmp1 = icmp eq i32 %call, 0, !dbg !9522
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9521

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9521

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !9523
  %6 = load i32, i32* %call2, align 4, !dbg !9523, !tbaa !2980, !ctir !5
  br label %cond.end, !dbg !9521

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !9521
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !9524, !tbaa !2980
  br label %if.end, !dbg !9525

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !9526, !tbaa !3104
  %tobool = trunc i8 %7 to i1, !dbg !9526
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9528

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9529, !tbaa !2980
  %cmp3 = icmp ne i32 %8, 17, !dbg !9530
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9531

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9532, !tbaa !2980
  store i32 %9, i32* %retval, align 4, !dbg !9533
  br label %return, !dbg !9533

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9534, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9536, metadata !DIExpression()), !dbg !9537
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !9538, !tbaa !2993
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9539
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !9540
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9537, !tbaa !2993
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9541, !tbaa !2993
  %tobool7 = icmp ne i8* %11, null, !dbg !9541
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9543

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !9544
  %12 = load i32, i32* %call9, align 4, !dbg !9544, !tbaa !2980, !ctir !5
  store i32 %12, i32* %retval, align 4, !dbg !9545
  br label %return, !dbg !9545

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !9546, metadata !DIExpression()), !dbg !9547
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !9548
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !9549, !tbaa !2980
  store i32 %13, i32* %srcdir11, align 8, !dbg !9548, !tbaa !9550
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !9548
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !9552, !tbaa !2993
  store i8* %14, i8** %srcname12, align 8, !dbg !9548, !tbaa !9553
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !9548
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !9554, !tbaa !2980
  store i32 %15, i32* %dstdir13, align 8, !dbg !9548, !tbaa !9555
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !9548
  %16 = load i32, i32* %flags.addr, align 4, !dbg !9556, !tbaa !2980
  store i32 %16, i32* %flags14, align 4, !dbg !9548, !tbaa !9557
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9558, metadata !DIExpression()), !dbg !9559
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9560, !tbaa !2993
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !9562
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !9563
  %cmp16 = icmp ne i32 %call15, 0, !dbg !9564
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9565

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #15, !dbg !9566
  %19 = load i32, i32* %call18, align 4, !dbg !9566, !tbaa !2980, !ctir !5
  store i32 %19, i32* %err, align 4, !dbg !9567, !tbaa !2980
  br label %if.end27, !dbg !9568

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !9569, !tbaa !2980
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !9571, !tbaa !2993
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !9572, !tbaa !2980
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !9573, !tbaa !2993
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #12, !dbg !9574
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9575
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !9574

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !9574

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !9576
  %24 = load i32, i32* %call23, align 4, !dbg !9576, !tbaa !2980, !ctir !5
  br label %cond.end24, !dbg !9574

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !9574
  store i32 %cond25, i32* %err, align 4, !dbg !9577, !tbaa !2980
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !9578, !tbaa !2980
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !9579, !tbaa !2993
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #12, !dbg !9580
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !9581, !tbaa !2993
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9583
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !9584
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9585

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !9586, !tbaa !2993
  call void @free(i8* %28) #12, !dbg !9587
  br label %if.end31, !dbg !9587

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !9588, !tbaa !2980
  store i32 %29, i32* %retval, align 4, !dbg !9589
  br label %return, !dbg !9589

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !9590
  ret i32 %30, !dbg !9590
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !9591 !ctir !537 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dstname.addr = alloca i8*, align 8, !ctir !112
  %buf.addr = alloca i8*, align 8, !ctir !7
  %dstdirlen = alloca i64, align 8, !ctir !539
  %dsttmpsize = alloca i64, align 8, !ctir !52
  %dsttmp = alloca i8*, align 8, !ctir !7
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9592, metadata !DIExpression()), !dbg !9593
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9594, metadata !DIExpression()), !dbg !9595
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !9596, metadata !DIExpression()), !dbg !9597
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !9598, !tbaa !2993
  %call = call i8* @last_component(i8* %0) #14, !dbg !9599
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !9600, !tbaa !2993
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9601
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9601
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9601
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !9597, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !9602, metadata !DIExpression()), !dbg !9603
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !9604, !tbaa !3837
  %add = add i64 %2, 9, !dbg !9605
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !9603, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9606, metadata !DIExpression()), !dbg !9607
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !9608, !tbaa !3837
  %cmp = icmp ule i64 %3, 256, !dbg !9610
  br i1 %cmp, label %if.then, label %if.else, !dbg !9611

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !9612, !tbaa !2993
  store i8* %4, i8** %dsttmp, align 8, !dbg !9613, !tbaa !2993
  br label %if.end3, !dbg !9614

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !9615, !tbaa !3837
  %call1 = call noalias i8* @malloc(i64 %5) #12, !dbg !9617
  store i8* %call1, i8** %dsttmp, align 8, !dbg !9618, !tbaa !2993
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !9619, !tbaa !2993
  %tobool = icmp ne i8* %6, null, !dbg !9619
  br i1 %tobool, label %if.end, label %if.then2, !dbg !9621

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !9622, !tbaa !2993
  store i8* %7, i8** %retval, align 8, !dbg !9623
  br label %return, !dbg !9623

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !9624, !tbaa !2993
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !9625, !tbaa !2993
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !9626, !tbaa !3837
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #12, !dbg !9627
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #12, !dbg !9628
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9629, !tbaa !2993
  store i8* %11, i8** %retval, align 8, !dbg !9630
  br label %return, !dbg !9630

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !9631
  ret i8* %12, !dbg !9631
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !9632 !ctir !543 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !7
  %arg.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.link_arg*, align 8, !ctir !545
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9633, metadata !DIExpression()), !dbg !9634
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9635, metadata !DIExpression()), !dbg !9636
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !9637, metadata !DIExpression()), !dbg !9638
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9639, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !9639
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !9638, !tbaa !2993
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9640, !tbaa !2993
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !9641, !ctir !546
  %3 = load i32, i32* %srcdir, align 8, !dbg !9641, !tbaa !9550, !ctir !5
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9642, !tbaa !2993
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !9643, !ctir !546
  %5 = load i8*, i8** %srcname, align 8, !dbg !9643, !tbaa !9553, !ctir !112
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9644, !tbaa !2993
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !9645, !ctir !546
  %7 = load i32, i32* %dstdir, align 8, !dbg !9645, !tbaa !9555, !ctir !5
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !9646, !tbaa !2993
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9647, !tbaa !2993
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !9648, !ctir !546
  %10 = load i32, i32* %flags, align 4, !dbg !9648, !tbaa !9557, !ctir !5
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #12, !dbg !9649
  ret i32 %call, !dbg !9650
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !9651 !ctir !535 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %srcname.addr = alloca i8*, align 8, !ctir !112
  %dstdir.addr = alloca i32, align 4, !ctir !5
  %dstname.addr = alloca i8*, align 8, !ctir !112
  %force.addr = alloca i8, align 1, !ctir !117
  %symlinkat_errno.addr = alloca i32, align 4, !ctir !5
  %buf = alloca [256 x i8], align 16, !ctir !532
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.symlink_arg, align 8, !ctir !553
  %err = alloca i32, align 4, !ctir !5
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9652, metadata !DIExpression()), !dbg !9653
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9654, metadata !DIExpression()), !dbg !9655
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9656, metadata !DIExpression()), !dbg !9657
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9662, !tbaa !2980
  %cmp = icmp slt i32 %0, 0, !dbg !9664
  br i1 %cmp, label %if.then, label %if.end, !dbg !9665

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !9666, !tbaa !2993
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !9667, !tbaa !2980
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !9668, !tbaa !2993
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #12, !dbg !9669
  %cmp1 = icmp eq i32 %call, 0, !dbg !9670
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9669

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9669

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !9671
  %4 = load i32, i32* %call2, align 4, !dbg !9671, !tbaa !2980, !ctir !5
  br label %cond.end, !dbg !9669

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !9669
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !9672, !tbaa !2980
  br label %if.end, !dbg !9673

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !9674, !tbaa !3104
  %tobool = trunc i8 %5 to i1, !dbg !9674
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9676

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9677, !tbaa !2980
  %cmp3 = icmp ne i32 %6, 17, !dbg !9678
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9679

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9680, !tbaa !2980
  store i32 %7, i32* %retval, align 4, !dbg !9681
  br label %return, !dbg !9681

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9682, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9684, metadata !DIExpression()), !dbg !9685
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !9686, !tbaa !2993
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9687
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !9688
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9685, !tbaa !2993
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !9689, !tbaa !2993
  %tobool7 = icmp ne i8* %9, null, !dbg !9689
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9691

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #15, !dbg !9692
  %10 = load i32, i32* %call9, align 4, !dbg !9692, !tbaa !2980, !ctir !5
  store i32 %10, i32* %retval, align 4, !dbg !9693
  br label %return, !dbg !9693

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !9694, metadata !DIExpression()), !dbg !9695
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !9696
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !9697, !tbaa !2993
  store i8* %11, i8** %srcname11, align 8, !dbg !9696, !tbaa !9698
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !9696
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !9700, !tbaa !2980
  store i32 %12, i32* %dstdir12, align 8, !dbg !9696, !tbaa !9701
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9702, metadata !DIExpression()), !dbg !9703
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !9704, !tbaa !2993
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !9706
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !9707
  %cmp14 = icmp ne i32 %call13, 0, !dbg !9708
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9709

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #15, !dbg !9710
  %15 = load i32, i32* %call16, align 4, !dbg !9710, !tbaa !2980, !ctir !5
  store i32 %15, i32* %err, align 4, !dbg !9711, !tbaa !2980
  br label %if.end24, !dbg !9712

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !9713, !tbaa !2980
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9715, !tbaa !2993
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !9716, !tbaa !2980
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !9717, !tbaa !2993
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #12, !dbg !9718
  %cmp18 = icmp ne i32 %call17, 0, !dbg !9719
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !9720

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #15, !dbg !9721
  %20 = load i32, i32* %call20, align 4, !dbg !9721, !tbaa !2980, !ctir !5
  store i32 %20, i32* %err, align 4, !dbg !9723, !tbaa !2980
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !9724, !tbaa !2980
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !9725, !tbaa !2993
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #12, !dbg !9726
  br label %if.end23, !dbg !9727

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !9728, !tbaa !2980
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !9730, !tbaa !2993
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9732
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !9733
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9734

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !9735, !tbaa !2993
  call void @free(i8* %24) #12, !dbg !9736
  br label %if.end28, !dbg !9736

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !9737, !tbaa !2980
  store i32 %25, i32* %retval, align 4, !dbg !9738
  br label %return, !dbg !9738

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !9739
  ret i32 %26, !dbg !9739
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !9740 !ctir !543 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !7
  %arg.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.symlink_arg*, align 8, !ctir !552
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9741, metadata !DIExpression()), !dbg !9742
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !9745, metadata !DIExpression()), !dbg !9746
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9747, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !9747
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !9746, !tbaa !2993
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9748, !tbaa !2993
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !9749, !ctir !553
  %3 = load i8*, i8** %srcname, align 8, !dbg !9749, !tbaa !9698, !ctir !112
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9750, !tbaa !2993
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9751, !ctir !553
  %5 = load i32, i32* %dstdir, align 8, !dbg !9751, !tbaa !9701, !ctir !5
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9752, !tbaa !2993
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #12, !dbg !9753
  ret i32 %call, !dbg !9754
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9755 !ctir !1577 {
entry:
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %source_desc.addr = alloca i32, align 4, !ctir !5
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !157
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9757, metadata !DIExpression()), !dbg !9758
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9759, metadata !DIExpression()), !dbg !9760
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9761, metadata !DIExpression()), !dbg !9762
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9763, metadata !DIExpression()), !dbg !9764
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9765, metadata !DIExpression()), !dbg !9766
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9767, metadata !DIExpression()), !dbg !9768
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9769, !tbaa !2993
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9770, !tbaa !2980
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9771, !tbaa !2993
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9772, !tbaa !2980
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9773, !tbaa !2980
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9774
  store i32 %call, i32* %ret, align 4, !dbg !9768, !tbaa !2980
  %5 = load i32, i32* %ret, align 4, !dbg !9775, !tbaa !2980
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9776

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9777
  %6 = load i32, i32* %call1, align 4, !dbg !9777, !tbaa !2980, !ctir !5
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9779, !tbaa !2993
  %call2 = call i8* @quote(i8* %7), !dbg !9780
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.181, i64 0, i64 0), i8* %call2), !dbg !9781
  br label %sw.epilog, !dbg !9782

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #15, !dbg !9783
  %8 = load i32, i32* %call4, align 4, !dbg !9783, !tbaa !2980, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.182, i64 0, i64 0)) #12, !dbg !9784
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9785, !tbaa !2993
  %call6 = call i8* @quote(i8* %9), !dbg !9786
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9787
  br label %sw.epilog, !dbg !9788

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9789

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9790, !tbaa !2980
  ret i32 %10, !dbg !9791
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9792 !ctir !1582 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !157
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9800, metadata !DIExpression()), !dbg !9801
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9802, !tbaa !2993
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9803, !tbaa !2980
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9804, !tbaa !2980
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9805
  store i32 %call, i32* %ret, align 4, !dbg !9801, !tbaa !2980
  %3 = load i32, i32* %ret, align 4, !dbg !9806, !tbaa !2980
  %cmp = icmp ne i32 %3, 0, !dbg !9808
  br i1 %cmp, label %if.then, label %if.end, !dbg !9809

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !9810
  %4 = load i32, i32* %call1, align 4, !dbg !9810, !tbaa !2980, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.185, i64 0, i64 0)) #12, !dbg !9811
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9812, !tbaa !2993
  %call3 = call i8* @quote(i8* %5), !dbg !9813
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9814
  br label %if.end, !dbg !9814

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9815, !tbaa !2980
  ret i32 %6, !dbg !9816
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9817 !ctir !981 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %file.addr = alloca i8*, align 8, !ctir !112
  %size.addr = alloca i64, align 8, !ctir !52
  %symlink_max = alloca i64, align 8, !ctir !52
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !52
  %initial_limit = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !579
  %link_length = alloca i64, align 8, !ctir !52
  %stackbuf = alloca [128 x i8], align 16, !ctir !1587
  %buf = alloca i8*, align 8, !ctir !7
  %buffer = alloca i8*, align 8, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !5
  %shrinked_buffer = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9819, metadata !DIExpression()), !dbg !9820
  store i64 %size, i64* %size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9821, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9823, metadata !DIExpression()), !dbg !9824
  store i64 1024, i64* %symlink_max, align 8, !dbg !9824, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9825, metadata !DIExpression()), !dbg !9826
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9826, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9827, metadata !DIExpression()), !dbg !9828
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9829, !tbaa !3837
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9830, !tbaa !3837
  %cmp = icmp ult i64 %0, %1, !dbg !9831
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9829

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9832, !tbaa !3837
  %add = add i64 %2, 1, !dbg !9833
  br label %cond.end, !dbg !9829

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9834, !tbaa !3837
  br label %cond.end, !dbg !9829

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9829
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9828, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9835, metadata !DIExpression()), !dbg !9836
  %4 = load i64, i64* %size.addr, align 8, !dbg !9837, !tbaa !3837
  %cmp1 = icmp eq i64 %4, 0, !dbg !9838
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !9837

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9837

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !9839, !tbaa !3837
  %6 = load i64, i64* %initial_limit, align 8, !dbg !9840, !tbaa !3837
  %cmp4 = icmp ult i64 %5, %6, !dbg !9841
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !9839

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !9842, !tbaa !3837
  %add6 = add i64 %7, 1, !dbg !9843
  br label %cond.end8, !dbg !9839

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !9844, !tbaa !3837
  br label %cond.end8, !dbg !9839

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !9839
  br label %cond.end10, !dbg !9837

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !9837
  store i64 %cond11, i64* %buf_size, align 8, !dbg !9836, !tbaa !3837
  br label %while.body, !dbg !9845

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9846, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !9851, metadata !DIExpression()), !dbg !9852
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9853, metadata !DIExpression()), !dbg !9854
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !9855
  store i8* %arraydecay, i8** %buf, align 8, !dbg !9854, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9856, metadata !DIExpression()), !dbg !9857
  store i8* null, i8** %buffer, align 8, !dbg !9857, !tbaa !2993
  %9 = load i64, i64* %size.addr, align 8, !dbg !9858, !tbaa !3837
  %cmp12 = icmp eq i64 %9, 0, !dbg !9860
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !9861

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !9862, !tbaa !3837
  %cmp13 = icmp eq i64 %10, 128, !dbg !9863
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !9864

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !9865, !tbaa !3837
  %call = call noalias i8* @malloc(i64 %11) #12, !dbg !9867
  store i8* %call, i8** %buffer, align 8, !dbg !9868, !tbaa !2993
  store i8* %call, i8** %buf, align 8, !dbg !9869, !tbaa !2993
  %12 = load i8*, i8** %buffer, align 8, !dbg !9870, !tbaa !2993
  %tobool = icmp ne i8* %12, null, !dbg !9870
  br i1 %tobool, label %if.end, label %if.then14, !dbg !9872

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !9873
  br label %return, !dbg !9873

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !9874

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9875, !tbaa !2993
  %14 = load i8*, i8** %buf, align 8, !dbg !9876, !tbaa !2993
  %15 = load i64, i64* %buf_size, align 8, !dbg !9877, !tbaa !3837
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #12, !dbg !9878
  store i64 %call16, i64* %r, align 8, !dbg !9879, !tbaa !3837
  %16 = load i64, i64* %r, align 8, !dbg !9880, !tbaa !3837
  store i64 %16, i64* %link_length, align 8, !dbg !9881, !tbaa !3837
  %17 = load i64, i64* %r, align 8, !dbg !9882, !tbaa !3837
  %cmp17 = icmp slt i64 %17, 0, !dbg !9884
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !9885

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #15, !dbg !9886
  %18 = load i32, i32* %call19, align 4, !dbg !9886, !tbaa !2980, !ctir !5
  %cmp20 = icmp ne i32 %18, 34, !dbg !9887
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9888

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9889, metadata !DIExpression()), !dbg !9891
  %call22 = call i32* @__errno_location() #15, !dbg !9892
  %19 = load i32, i32* %call22, align 4, !dbg !9892, !tbaa !2980, !ctir !5
  store i32 %19, i32* %saved_errno, align 4, !dbg !9891, !tbaa !2980
  %20 = load i8*, i8** %buffer, align 8, !dbg !9893, !tbaa !2993
  call void @free(i8* %20) #12, !dbg !9894
  %21 = load i32, i32* %saved_errno, align 4, !dbg !9895, !tbaa !2980
  %call23 = call i32* @__errno_location() #15, !dbg !9896
  store i32 %21, i32* %call23, align 4, !dbg !9897, !tbaa !2980, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9898
  br label %return, !dbg !9898

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !9899, !tbaa !3837
  %23 = load i64, i64* %buf_size, align 8, !dbg !9901, !tbaa !3837
  %cmp25 = icmp ult i64 %22, %23, !dbg !9902
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !9903

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !9904, !tbaa !2993
  %25 = load i64, i64* %link_length, align 8, !dbg !9906, !tbaa !3837
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !9904, !ctir !7
  store i8 0, i8* %arrayidx, align 1, !dbg !9907, !tbaa !3652
  %26 = load i8*, i8** %buffer, align 8, !dbg !9908, !tbaa !2993
  %tobool27 = icmp ne i8* %26, null, !dbg !9908
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !9910

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !9911, !tbaa !3837
  %add29 = add i64 %27, 1, !dbg !9913
  %call30 = call noalias i8* @malloc(i64 %add29) #12, !dbg !9914
  store i8* %call30, i8** %buffer, align 8, !dbg !9915, !tbaa !2993
  %28 = load i8*, i8** %buffer, align 8, !dbg !9916, !tbaa !2993
  %tobool31 = icmp ne i8* %28, null, !dbg !9916
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !9918

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !9919, !tbaa !2993
  %30 = load i8*, i8** %buf, align 8, !dbg !9920, !tbaa !2993
  %31 = load i64, i64* %link_length, align 8, !dbg !9921, !tbaa !3837
  %add33 = add i64 %31, 1, !dbg !9922
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !9923
  store i8* %29, i8** %retval, align 8, !dbg !9924
  br label %return, !dbg !9924

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !9925

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !9926, !tbaa !3837
  %add35 = add i64 %32, 1, !dbg !9928
  %33 = load i64, i64* %buf_size, align 8, !dbg !9929, !tbaa !3837
  %cmp36 = icmp ult i64 %add35, %33, !dbg !9930
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !9931

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !9932, metadata !DIExpression()), !dbg !9934
  %34 = load i8*, i8** %buffer, align 8, !dbg !9935, !tbaa !2993
  %35 = load i64, i64* %link_length, align 8, !dbg !9936, !tbaa !3837
  %add38 = add i64 %35, 1, !dbg !9937
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #12, !dbg !9938
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !9934, !tbaa !2993
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9939, !tbaa !2993
  %cmp40 = icmp ne i8* %36, null, !dbg !9941
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !9942

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9943, !tbaa !2993
  store i8* %37, i8** %buffer, align 8, !dbg !9944, !tbaa !2993
  br label %if.end42, !dbg !9945

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !9946

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !9947, !tbaa !2993
  store i8* %38, i8** %retval, align 8, !dbg !9948
  br label %return, !dbg !9948

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !9949, !tbaa !2993
  call void @free(i8* %39) #12, !dbg !9950
  %40 = load i64, i64* %buf_size, align 8, !dbg !9951, !tbaa !3837
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !9953
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !9954

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !9955, !tbaa !3837
  %mul = mul i64 %41, 2, !dbg !9955
  store i64 %mul, i64* %buf_size, align 8, !dbg !9955, !tbaa !3837
  br label %if.end54, !dbg !9956

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !9957, !tbaa !3837
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !9959
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !9960

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9961, !tbaa !3837
  br label %if.end53, !dbg !9962

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #15, !dbg !9963
  store i32 12, i32* %call52, align 4, !dbg !9965, !tbaa !2980, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9966
  br label %return, !dbg !9966

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !9845, !llvm.loop !9967

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !9969
  ret i8* %43, !dbg !9969
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !9970 !ctir !133 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !112
  store i8* %s, i8** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9971, metadata !DIExpression()), !dbg !9972
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9973, !tbaa !2993
  %tobool = icmp ne i8* %0, null, !dbg !9973
  br i1 %tobool, label %if.end, label %if.then, !dbg !9975

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.192, i64 0, i64 0)) #12, !dbg !9976
  store i8* %call, i8** %s.addr, align 8, !dbg !9977, !tbaa !2993
  br label %if.end, !dbg !9978

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !9979, !tbaa !2993
  %tobool1 = icmp ne i8* %1, null, !dbg !9979
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !9980

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9981, !tbaa !2993
  %3 = load i8, i8* %2, align 1, !dbg !9982, !tbaa !3652, !ctir !113
  %conv = sext i8 %3 to i32, !dbg !9982
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9982
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !9983

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !9984, !tbaa !2993
  %5 = load i8*, i8** %s.addr, align 8, !dbg !9985, !tbaa !2993
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !9986
  %cmp = icmp eq i8* %4, %call4, !dbg !9987
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9979

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !9988, !tbaa !2993
  br label %cond.end, !dbg !9979

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !9979

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.193, i64 0, i64 0), %cond.false ], !dbg !9979
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !9989, !tbaa !2993
  ret void, !dbg !9990
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !9991 !ctir !577 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %backup_type.addr = alloca i32, align 4, !ctir !65
  %rename.addr = alloca i8, align 1, !ctir !117
  %base_offset = alloca i64, align 8, !ctir !539
  %filelen = alloca i64, align 8, !ctir !52
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !52
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !52
  %ssize = alloca i64, align 8, !ctir !579
  %s = alloca i8*, align 8, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !580
  %sdir = alloca i32, align 4, !ctir !5
  %base_max = alloca i64, align 8, !ctir !52
  %flags = alloca i32, align 4, !ctir !67
  %e = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9996, metadata !DIExpression()), !dbg !9997
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9998, metadata !DIExpression()), !dbg !9999
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !10000, metadata !DIExpression()), !dbg !10001
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10002, !tbaa !2993
  %call = call i8* @last_component(i8* %0) #14, !dbg !10003
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10004, !tbaa !2993
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10005
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !10005
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10005
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !10001, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !10006, metadata !DIExpression()), !dbg !10007
  %2 = load i64, i64* %base_offset, align 8, !dbg !10008, !tbaa !3837
  %3 = load i8*, i8** %file.addr, align 8, !dbg !10009, !tbaa !2993
  %4 = load i64, i64* %base_offset, align 8, !dbg !10010, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !10011
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !10012
  %add = add i64 %2, %call1, !dbg !10013
  store i64 %add, i64* %filelen, align 8, !dbg !10007, !tbaa !3837
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10014, !tbaa !2993
  %tobool = icmp ne i8* %5, null, !dbg !10014
  br i1 %tobool, label %if.end, label %if.then, !dbg !10016

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !10017
  br label %if.end, !dbg !10017

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !10018, metadata !DIExpression()), !dbg !10019
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10020, !tbaa !2993
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !10021
  %add3 = add i64 %call2, 1, !dbg !10022
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !10019, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !10023, metadata !DIExpression()), !dbg !10024
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10025, !tbaa !3837
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !10024, !tbaa !3837
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !10026, !tbaa !3837
  %cmp = icmp ult i64 %8, 9, !dbg !10028
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !10029

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !10030, !tbaa !3837
  br label %if.end5, !dbg !10031

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !10032, metadata !DIExpression()), !dbg !10033
  %9 = load i64, i64* %filelen, align 8, !dbg !10034, !tbaa !3837
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !10035, !tbaa !3837
  %add6 = add i64 %9, %10, !dbg !10036
  %add7 = add i64 %add6, 1, !dbg !10037
  store i64 %add7, i64* %ssize, align 8, !dbg !10033, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %s, metadata !10038, metadata !DIExpression()), !dbg !10039
  %11 = load i64, i64* %ssize, align 8, !dbg !10040, !tbaa !3837
  %call8 = call noalias i8* @malloc(i64 %11) #12, !dbg !10041
  store i8* %call8, i8** %s, align 8, !dbg !10039, !tbaa !2993
  %12 = load i8*, i8** %s, align 8, !dbg !10042, !tbaa !2993
  %tobool9 = icmp ne i8* %12, null, !dbg !10042
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10044

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !10045, !tbaa !2993
  store i8* %13, i8** %retval, align 8, !dbg !10046
  br label %return, !dbg !10046

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !10047, metadata !DIExpression()), !dbg !10048
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !10048, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i32 -1, i32* %sdir, align 4, !dbg !10050, !tbaa !2980
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !10051, metadata !DIExpression()), !dbg !10052
  store i64 0, i64* %base_max, align 8, !dbg !10052, !tbaa !3837
  br label %while.body, !dbg !10053

while.body:                                       ; preds = %if.end11, %if.end50
  %14 = load i8*, i8** %s, align 8, !dbg !10054, !tbaa !2993
  %15 = load i8*, i8** %file.addr, align 8, !dbg !10056, !tbaa !2993
  %16 = load i64, i64* %filelen, align 8, !dbg !10057, !tbaa !3837
  %add12 = add i64 %16, 1, !dbg !10058
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !10059
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !10060, !tbaa !3652
  %cmp13 = icmp eq i32 %17, 1, !dbg !10062
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !10063

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !10064, !tbaa !2993
  %19 = load i64, i64* %filelen, align 8, !dbg !10065, !tbaa !3837
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !10066
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10067, !tbaa !2993
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10068, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !10069
  br label %if.end29, !dbg !10069

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !10070, !tbaa !2980
  %23 = load i64, i64* %ssize, align 8, !dbg !10071, !tbaa !3837
  %24 = load i64, i64* %filelen, align 8, !dbg !10072, !tbaa !3837
  %25 = load i64, i64* %base_offset, align 8, !dbg !10073, !tbaa !3837
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !10074
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !10075

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !10076

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !10078, !tbaa !3652
  %cmp18 = icmp eq i32 %26, 2, !dbg !10080
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !10081

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !10082, !tbaa !3652
  %27 = load i8*, i8** %s, align 8, !dbg !10084, !tbaa !2993
  %28 = load i64, i64* %filelen, align 8, !dbg !10085, !tbaa !3837
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !10086
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !10087, !tbaa !2993
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !10088, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !10089
  br label %if.end21, !dbg !10090

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !10091

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !10092, !tbaa !2993
  %32 = load i64, i64* %filelen, align 8, !dbg !10093, !tbaa !3837
  %33 = load i32, i32* %sdir, align 4, !dbg !10094, !tbaa !2980
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !10095
  br label %sw.epilog, !dbg !10096

sw.bb23:                                          ; preds = %if.else
  %34 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10097, !tbaa !2993
  %tobool24 = icmp ne %struct.__dirstream* %34, null, !dbg !10097
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !10099

if.then25:                                        ; preds = %sw.bb23
  %35 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10100, !tbaa !2993
  %call26 = call i32 @closedir(%struct.__dirstream* %35), !dbg !10101
  br label %if.end27, !dbg !10101

if.end27:                                         ; preds = %if.then25, %sw.bb23
  %36 = load i8*, i8** %s, align 8, !dbg !10102, !tbaa !2993
  call void @free(i8* %36) #12, !dbg !10103
  %call28 = call i32* @__errno_location() #15, !dbg !10104
  store i32 12, i32* %call28, align 4, !dbg !10105, !tbaa !2980, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !10106
  br label %return, !dbg !10106

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end29

if.end29:                                         ; preds = %sw.epilog, %if.then14
  %37 = load i8, i8* %rename.addr, align 1, !dbg !10107, !tbaa !3104
  %tobool30 = trunc i8 %37 to i1, !dbg !10107
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !10109

if.then31:                                        ; preds = %if.end29
  br label %while.end, !dbg !10110

if.end32:                                         ; preds = %if.end29
  %38 = load i32, i32* %sdir, align 4, !dbg !10111, !tbaa !2980
  %cmp33 = icmp slt i32 %38, 0, !dbg !10113
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !10114

if.then34:                                        ; preds = %if.end32
  store i32 -100, i32* %sdir, align 4, !dbg !10115, !tbaa !2980
  store i64 0, i64* %base_offset, align 8, !dbg !10117, !tbaa !3837
  br label %if.end35, !dbg !10118

if.end35:                                         ; preds = %if.then34, %if.end32
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !10119, metadata !DIExpression()), !dbg !10120
  %39 = load i32, i32* %backup_type.addr, align 4, !dbg !10121, !tbaa !3652
  %cmp36 = icmp eq i32 %39, 1, !dbg !10122
  %40 = zext i1 %cmp36 to i64, !dbg !10121
  %cond = select i1 %cmp36, i32 0, i32 1, !dbg !10121
  store i32 %cond, i32* %flags, align 4, !dbg !10120, !tbaa !2980
  %41 = load i8*, i8** %file.addr, align 8, !dbg !10123, !tbaa !2993
  %42 = load i32, i32* %sdir, align 4, !dbg !10125, !tbaa !2980
  %43 = load i8*, i8** %s, align 8, !dbg !10126, !tbaa !2993
  %44 = load i64, i64* %base_offset, align 8, !dbg !10127, !tbaa !3837
  %add.ptr37 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !10128
  %45 = load i32, i32* %flags, align 4, !dbg !10129, !tbaa !2980
  %call38 = call i32 @renameatu(i32 -100, i8* %41, i32 %42, i8* %add.ptr37, i32 %45), !dbg !10130
  %cmp39 = icmp eq i32 %call38, 0, !dbg !10131
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !10132

if.then40:                                        ; preds = %if.end35
  br label %while.end, !dbg !10133

if.end41:                                         ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %e, metadata !10134, metadata !DIExpression()), !dbg !10135
  %call42 = call i32* @__errno_location() #15, !dbg !10136
  %46 = load i32, i32* %call42, align 4, !dbg !10136, !tbaa !2980, !ctir !5
  store i32 %46, i32* %e, align 4, !dbg !10135, !tbaa !2980
  %47 = load i32, i32* %e, align 4, !dbg !10137, !tbaa !2980
  %cmp43 = icmp ne i32 %47, 17, !dbg !10139
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !10140

if.then44:                                        ; preds = %if.end41
  %48 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10141, !tbaa !2993
  %tobool45 = icmp ne %struct.__dirstream* %48, null, !dbg !10141
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !10144

if.then46:                                        ; preds = %if.then44
  %49 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10145, !tbaa !2993
  %call47 = call i32 @closedir(%struct.__dirstream* %49), !dbg !10146
  br label %if.end48, !dbg !10146

if.end48:                                         ; preds = %if.then46, %if.then44
  %50 = load i8*, i8** %s, align 8, !dbg !10147, !tbaa !2993
  call void @free(i8* %50) #12, !dbg !10148
  %51 = load i32, i32* %e, align 4, !dbg !10149, !tbaa !2980
  %call49 = call i32* @__errno_location() #15, !dbg !10150
  store i32 %51, i32* %call49, align 4, !dbg !10151, !tbaa !2980, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !10152
  br label %return, !dbg !10152

if.end50:                                         ; preds = %if.end41
  br label %while.body, !dbg !10053, !llvm.loop !10153

while.end:                                        ; preds = %if.then40, %if.then31
  %52 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10155, !tbaa !2993
  %tobool51 = icmp ne %struct.__dirstream* %52, null, !dbg !10155
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !10157

if.then52:                                        ; preds = %while.end
  %53 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10158, !tbaa !2993
  %call53 = call i32 @closedir(%struct.__dirstream* %53), !dbg !10159
  br label %if.end54, !dbg !10159

if.end54:                                         ; preds = %if.then52, %while.end
  %54 = load i8*, i8** %s, align 8, !dbg !10160, !tbaa !2993
  store i8* %54, i8** %retval, align 8, !dbg !10161
  br label %return, !dbg !10161

return:                                           ; preds = %if.end54, %if.end48, %if.end27, %if.then10
  %55 = load i8*, i8** %retval, align 8, !dbg !10162
  ret i8* %55, !dbg !10162
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !10163 !ctir !584 {
entry:
  %retval = alloca i32, align 4, !ctir !569
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %buffer.addr = alloca i8**, align 8, !ctir !116
  %buffer_size.addr = alloca i64, align 8, !ctir !52
  %filelen.addr = alloca i64, align 8, !ctir !52
  %base_offset.addr = alloca i64, align 8, !ctir !539
  %dirpp.addr = alloca %struct.__dirstream**, align 8, !ctir !586
  %pnew_fd.addr = alloca i32*, align 8, !ctir !126
  %result = alloca i32, align 4, !ctir !569
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !580
  %dp = alloca %struct.dirent*, align 8, !ctir !587
  %buf = alloca i8*, align 8, !ctir !7
  %versionlenmax = alloca i64, align 8, !ctir !52
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %tmp = alloca [2 x i8], align 1, !ctir !596
  %p = alloca i8*, align 8, !ctir !112
  %q = alloca i8*, align 8, !ctir !7
  %all_9s = alloca i8, align 1, !ctir !117
  %versionlen = alloca i64, align 8, !ctir !52
  %new_buffer_size = alloca i64, align 8, !ctir !52
  %new_buf = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10164, metadata !DIExpression()), !dbg !10165
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !10166, metadata !DIExpression()), !dbg !10167
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  store i64 %base_offset, i64* %base_offset.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  call void @llvm.dbg.declare(metadata i32* %result, metadata !10178, metadata !DIExpression()), !dbg !10179
  store i32 2, i32* %result, align 4, !dbg !10179, !tbaa !3652
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !10180, metadata !DIExpression()), !dbg !10181
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !10182, !tbaa !2993
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !10183, !tbaa !2993, !ctir !580
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !10181, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !10184, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !10186, metadata !DIExpression()), !dbg !10187
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !10188, !tbaa !2993
  %3 = load i8*, i8** %2, align 8, !dbg !10189, !tbaa !2993, !ctir !7
  store i8* %3, i8** %buf, align 8, !dbg !10187, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !10190, metadata !DIExpression()), !dbg !10191
  store i64 1, i64* %versionlenmax, align 8, !dbg !10191, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10192, metadata !DIExpression()), !dbg !10193
  %4 = load i8*, i8** %buf, align 8, !dbg !10194, !tbaa !2993
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !10195, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !10196
  store i8* %add.ptr, i8** %base, align 8, !dbg !10193, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10197, metadata !DIExpression()), !dbg !10198
  %6 = load i8*, i8** %base, align 8, !dbg !10199, !tbaa !2993
  %call = call i64 @base_len(i8* %6) #14, !dbg !10200
  store i64 %call, i64* %baselen, align 8, !dbg !10198, !tbaa !3837
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10201, !tbaa !2993
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !10201
  br i1 %tobool, label %if.then, label %if.else, !dbg !10203

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10204, !tbaa !2993
  call void @rewinddir(%struct.__dirstream* %8) #12, !dbg !10205
  br label %if.end12, !dbg !10205

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10206, metadata !DIExpression()), !dbg !10208
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10209
  %9 = load i8*, i8** %base, align 8, !dbg !10210, !tbaa !2993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !10209
  %10 = load i8*, i8** %base, align 8, !dbg !10211, !tbaa !2993
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #12, !dbg !10212
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !10213, !tbaa !2980
  %12 = load i8*, i8** %buf, align 8, !dbg !10214, !tbaa !2993
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !10215, !tbaa !2993
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !10216
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !10217, !tbaa !2993
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10218, !tbaa !2993
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !10218
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !10220

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #15, !dbg !10221
  %15 = load i32, i32* %call4, align 4, !dbg !10221, !tbaa !2980, !ctir !5
  %cmp = icmp eq i32 %15, 12, !dbg !10222
  br i1 %cmp, label %if.then5, label %if.end, !dbg !10223

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !10224, !tbaa !3652
  br label %if.end, !dbg !10225

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !10226, !tbaa !2993
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10227
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !10227
  %17 = load i8*, i8** %base, align 8, !dbg !10228, !tbaa !2993
  %18 = load i64, i64* %baselen, align 8, !dbg !10229, !tbaa !3837
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !10230
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.195, i64 0, i64 0)) #12, !dbg !10231
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10232, !tbaa !2993
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !10232
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !10234

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !10235, !tbaa !3652
  store i32 %20, i32* %retval, align 4, !dbg !10236
  br label %return, !dbg !10236

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10237, !tbaa !2993
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !10238, !tbaa !2993
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !10239, !tbaa !2993, !ctir !580
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !10240

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !10241, !tbaa !2993
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !10242
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !10243, !tbaa !2993
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !10244
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !10240

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10245, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.declare(metadata i8** %q, metadata !10248, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !10250, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !10252, metadata !DIExpression()), !dbg !10253
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10254, !tbaa !2993
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !10254, !ctir !588
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !10254
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !10254
  %25 = load i64, i64* %baselen, align 8, !dbg !10256, !tbaa !3837
  %add = add i64 %25, 4, !dbg !10257
  %cmp17 = icmp ult i64 %call16, %add, !dbg !10258
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10259

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !10260, !llvm.loop !10261

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !10263, !tbaa !2993
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !10265, !tbaa !3837
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !10266
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10267, !tbaa !2993
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !10268, !ctir !588
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !10267
  %29 = load i64, i64* %baselen, align 8, !dbg !10269, !tbaa !3837
  %add23 = add i64 %29, 2, !dbg !10270
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !10271
  %cmp25 = icmp ne i32 %call24, 0, !dbg !10272
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !10273

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !10274, !llvm.loop !10261

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10275, !tbaa !2993
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !10276, !ctir !588
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !10275
  %31 = load i64, i64* %baselen, align 8, !dbg !10277, !tbaa !3837
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !10278
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !10279
  store i8* %add.ptr31, i8** %p, align 8, !dbg !10280, !tbaa !2993
  %32 = load i8*, i8** %p, align 8, !dbg !10281, !tbaa !2993
  %33 = load i8, i8* %32, align 1, !dbg !10283, !tbaa !3652, !ctir !113
  %conv = sext i8 %33 to i32, !dbg !10283
  %cmp32 = icmp sle i32 49, %conv, !dbg !10284
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !10285

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !10286, !tbaa !2993
  %35 = load i8, i8* %34, align 1, !dbg !10287, !tbaa !3652, !ctir !113
  %conv35 = sext i8 %35 to i32, !dbg !10287
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !10288
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !10289

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !10290, !llvm.loop !10261

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !10291, !tbaa !2993
  %37 = load i8, i8* %36, align 1, !dbg !10292, !tbaa !3652, !ctir !113
  %conv40 = sext i8 %37 to i32, !dbg !10292
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !10293
  %frombool = zext i1 %cmp41 to i8, !dbg !10294
  store i8 %frombool, i8* %all_9s, align 1, !dbg !10294, !tbaa !3104
  store i64 1, i64* %versionlen, align 8, !dbg !10295, !tbaa !3837
  br label %for.cond, !dbg !10297

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !10298, !tbaa !2993
  %39 = load i64, i64* %versionlen, align 8, !dbg !10298, !tbaa !3837
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !10298, !ctir !112
  %40 = load i8, i8* %arrayidx, align 1, !dbg !10298, !tbaa !3652
  %conv43 = sext i8 %40 to i32, !dbg !10298
  %sub = sub i32 %conv43, 48, !dbg !10298
  %cmp44 = icmp ule i32 %sub, 9, !dbg !10298
  br i1 %cmp44, label %for.body, label %for.end, !dbg !10300

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !10301, !tbaa !2993
  %42 = load i64, i64* %versionlen, align 8, !dbg !10302, !tbaa !3837
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !10301, !ctir !112
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !10301, !tbaa !3652
  %conv47 = sext i8 %43 to i32, !dbg !10301
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !10303
  %conv49 = zext i1 %cmp48 to i32, !dbg !10303
  %44 = load i8, i8* %all_9s, align 1, !dbg !10304, !tbaa !3104
  %tobool50 = trunc i8 %44 to i1, !dbg !10304
  %conv51 = zext i1 %tobool50 to i32, !dbg !10304
  %and = and i32 %conv51, %conv49, !dbg !10304
  %tobool52 = icmp ne i32 %and, 0, !dbg !10304
  %frombool53 = zext i1 %tobool52 to i8, !dbg !10304
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !10304, !tbaa !3104
  br label %for.inc, !dbg !10305

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !10306, !tbaa !3837
  %inc = add i64 %45, 1, !dbg !10306
  store i64 %inc, i64* %versionlen, align 8, !dbg !10306, !tbaa !3837
  br label %for.cond, !dbg !10307, !llvm.loop !10308

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !10310, !tbaa !2993
  %47 = load i64, i64* %versionlen, align 8, !dbg !10312, !tbaa !3837
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !10310, !ctir !112
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !10310, !tbaa !3652
  %conv55 = sext i8 %48 to i32, !dbg !10310
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !10313
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !10314

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !10315, !tbaa !2993
  %50 = load i64, i64* %versionlen, align 8, !dbg !10316, !tbaa !3837
  %add59 = add i64 %50, 1, !dbg !10317
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !10315, !ctir !112
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !10315, !tbaa !3652
  %tobool61 = icmp ne i8 %51, 0, !dbg !10315
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !10318

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !10319, !tbaa !3837
  %53 = load i64, i64* %versionlen, align 8, !dbg !10320, !tbaa !3837
  %cmp63 = icmp ult i64 %52, %53, !dbg !10321
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !10322

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !10323, !tbaa !3837
  %55 = load i64, i64* %versionlen, align 8, !dbg !10324, !tbaa !3837
  %cmp65 = icmp eq i64 %54, %55, !dbg !10325
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !10326

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !10327, !tbaa !2993
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !10328, !tbaa !3837
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !10329
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !10330
  %58 = load i8*, i8** %p, align 8, !dbg !10331, !tbaa !2993
  %59 = load i64, i64* %versionlen, align 8, !dbg !10332, !tbaa !3837
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !10333
  %cmp71 = icmp sle i32 %call70, 0, !dbg !10334
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !10335

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !10336, !llvm.loop !10261

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !10337, !tbaa !3104
  %tobool75 = trunc i8 %60 to i1, !dbg !10337
  %conv76 = zext i1 %tobool75 to i64, !dbg !10337
  %61 = load i64, i64* %versionlen, align 8, !dbg !10338, !tbaa !3837
  %add77 = add i64 %conv76, %61, !dbg !10339
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !10340, !tbaa !3837
  %62 = load i8, i8* %all_9s, align 1, !dbg !10341, !tbaa !3104
  %tobool78 = trunc i8 %62 to i1, !dbg !10341
  %63 = zext i1 %tobool78 to i64, !dbg !10341
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !10341
  store i32 %cond, i32* %result, align 4, !dbg !10342, !tbaa !3652
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !10343, metadata !DIExpression()), !dbg !10344
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !10345, !tbaa !3837
  %add80 = add i64 %64, 2, !dbg !10346
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !10347, !tbaa !3837
  %add81 = add i64 %add80, %65, !dbg !10348
  %add82 = add i64 %add81, 2, !dbg !10349
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !10344, !tbaa !3837
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !10350, !tbaa !3837
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !10352, !tbaa !3837
  %cmp83 = icmp ult i64 %66, %67, !dbg !10353
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !10354

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !10355, !tbaa !3837
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !10355
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !10358

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !10359, !tbaa !3837
  %mul = mul i64 %69, 2, !dbg !10359
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !10359, !tbaa !3837
  br label %if.end89, !dbg !10360

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !10361, metadata !DIExpression()), !dbg !10362
  %70 = load i8*, i8** %buf, align 8, !dbg !10363, !tbaa !2993
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !10364, !tbaa !3837
  %call90 = call i8* @realloc(i8* %70, i64 %71) #12, !dbg !10365
  store i8* %call90, i8** %new_buf, align 8, !dbg !10362, !tbaa !2993
  %72 = load i8*, i8** %new_buf, align 8, !dbg !10366, !tbaa !2993
  %tobool91 = icmp ne i8* %72, null, !dbg !10366
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !10368

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !10369, !tbaa !2993
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !10371, !tbaa !2993
  store i8* %73, i8** %74, align 8, !dbg !10372, !tbaa !2993, !ctir !7
  store i32 3, i32* %retval, align 4, !dbg !10373
  br label %return, !dbg !10373

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !10374, !tbaa !2993
  store i8* %75, i8** %buf, align 8, !dbg !10375, !tbaa !2993
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !10376, !tbaa !3837
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !10377, !tbaa !3837
  br label %if.end94, !dbg !10378

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !10379, !tbaa !2993
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !10380, !tbaa !3837
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !10381
  store i8* %add.ptr95, i8** %q, align 8, !dbg !10382, !tbaa !2993
  %79 = load i8*, i8** %q, align 8, !dbg !10383, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !10383
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !10383, !tbaa !2993
  store i8 46, i8* %79, align 1, !dbg !10384, !tbaa !3652, !ctir !8
  %80 = load i8*, i8** %q, align 8, !dbg !10385, !tbaa !2993
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !10385
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !10385, !tbaa !2993
  store i8 126, i8* %80, align 1, !dbg !10386, !tbaa !3652, !ctir !8
  %81 = load i8*, i8** %q, align 8, !dbg !10387, !tbaa !2993
  store i8 48, i8* %81, align 1, !dbg !10388, !tbaa !3652, !ctir !8
  %82 = load i8, i8* %all_9s, align 1, !dbg !10389, !tbaa !3104
  %tobool97 = trunc i8 %82 to i1, !dbg !10389
  %conv98 = zext i1 %tobool97 to i32, !dbg !10389
  %83 = load i8*, i8** %q, align 8, !dbg !10390, !tbaa !2993
  %idx.ext = sext i32 %conv98 to i64, !dbg !10390
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !10390
  store i8* %add.ptr99, i8** %q, align 8, !dbg !10390, !tbaa !2993
  %84 = load i8*, i8** %q, align 8, !dbg !10391, !tbaa !2993
  %85 = load i8*, i8** %p, align 8, !dbg !10392, !tbaa !2993
  %86 = load i64, i64* %versionlen, align 8, !dbg !10393, !tbaa !3837
  %add100 = add i64 %86, 2, !dbg !10394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !10395
  %87 = load i64, i64* %versionlen, align 8, !dbg !10396, !tbaa !3837
  %88 = load i8*, i8** %q, align 8, !dbg !10397, !tbaa !2993
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !10397
  store i8* %add.ptr101, i8** %q, align 8, !dbg !10397, !tbaa !2993
  br label %while.cond102, !dbg !10398

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !10399, !tbaa !2993
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !10399
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !10399, !tbaa !2993
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !10400, !tbaa !3652, !ctir !8
  %conv104 = sext i8 %90 to i32, !dbg !10400
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !10401
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !10398

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !10402, !tbaa !2993
  store i8 48, i8* %91, align 1, !dbg !10403, !tbaa !3652, !ctir !8
  br label %while.cond102, !dbg !10398, !llvm.loop !10404

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !10406, !tbaa !2993
  %93 = load i8, i8* %92, align 1, !dbg !10407, !tbaa !3652, !ctir !8
  %inc108 = add i8 %93, 1, !dbg !10407
  store i8 %inc108, i8* %92, align 1, !dbg !10407, !tbaa !3652, !ctir !8
  br label %while.cond, !dbg !10240, !llvm.loop !10261

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !10408, !tbaa !2993
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !10409, !tbaa !2993
  store i8* %94, i8** %95, align 8, !dbg !10410, !tbaa !2993, !ctir !7
  %96 = load i32, i32* %result, align 4, !dbg !10411, !tbaa !3652
  store i32 %96, i32* %retval, align 4, !dbg !10412
  br label %return, !dbg !10412

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !10413
  ret i32 %97, !dbg !10413
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !10414 !ctir !597 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !7
  %filelen.addr = alloca i64, align 8, !ctir !52
  %e.addr = alloca i8, align 1, !ctir !8
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %base_max.addr = alloca i64*, align 8, !ctir !599
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %baselen_max = alloca i64, align 8, !ctir !52
  %name_max = alloca i64, align 8, !ctir !32
  %tmp = alloca [2 x i8], align 1, !ctir !596
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10415, metadata !DIExpression()), !dbg !10416
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  store i8 %e, i8* %e.addr, align 1, !tbaa !3652
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !10419, metadata !DIExpression()), !dbg !10420
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10421, metadata !DIExpression()), !dbg !10422
  store i64* %base_max, i64** %base_max.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !10423, metadata !DIExpression()), !dbg !10424
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10425, metadata !DIExpression()), !dbg !10426
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10427, !tbaa !2993
  %call = call i8* @last_component(i8* %0) #14, !dbg !10428
  store i8* %call, i8** %base, align 8, !dbg !10426, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10429, metadata !DIExpression()), !dbg !10430
  %1 = load i8*, i8** %base, align 8, !dbg !10431, !tbaa !2993
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10432
  store i64 %call1, i64* %baselen, align 8, !dbg !10430, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !10433, metadata !DIExpression()), !dbg !10434
  store i64 255, i64* %baselen_max, align 8, !dbg !10434, !tbaa !3837
  %2 = load i64, i64* %baselen, align 8, !dbg !10435, !tbaa !3837
  %cmp = icmp ult i64 14, %2, !dbg !10437
  br i1 %cmp, label %if.then, label %if.end27, !dbg !10438

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !10439, !tbaa !2993
  %4 = load i64, i64* %3, align 8, !dbg !10442, !tbaa !3837, !ctir !52
  %cmp2 = icmp eq i64 %4, 0, !dbg !10443
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !10444

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !10445, metadata !DIExpression()), !dbg !10447
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !10448, !tbaa !2980
  %cmp4 = icmp slt i32 %5, 0, !dbg !10450
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10451

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10452, metadata !DIExpression()), !dbg !10454
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10455
  %6 = load i8*, i8** %base, align 8, !dbg !10456, !tbaa !2993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !10455
  %7 = load i8*, i8** %base, align 8, !dbg !10457, !tbaa !2993
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.194, i64 0, i64 0)) #12, !dbg !10458
  %call7 = call i32* @__errno_location() #15, !dbg !10459
  store i32 0, i32* %call7, align 4, !dbg !10460, !tbaa !2980, !ctir !5
  %8 = load i8*, i8** %file.addr, align 8, !dbg !10461, !tbaa !2993
  %call8 = call i64 @pathconf(i8* %8, i32 3) #12, !dbg !10462
  store i64 %call8, i64* %name_max, align 8, !dbg !10463, !tbaa !3837
  %call9 = call i32* @__errno_location() #15, !dbg !10464
  %9 = load i32, i32* %call9, align 4, !dbg !10464, !tbaa !2980, !ctir !5
  %tobool = icmp ne i32 %9, 0, !dbg !10465
  %lnot = xor i1 %tobool, true, !dbg !10465
  %lnot.ext = zext i1 %lnot to i32, !dbg !10465
  %conv = sext i32 %lnot.ext to i64, !dbg !10465
  %10 = load i64, i64* %name_max, align 8, !dbg !10466, !tbaa !3837
  %sub = sub nsw i64 %10, %conv, !dbg !10466
  store i64 %sub, i64* %name_max, align 8, !dbg !10466, !tbaa !3837
  %11 = load i8*, i8** %base, align 8, !dbg !10467, !tbaa !2993
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !10468
  br label %if.end, !dbg !10469

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #15, !dbg !10470
  store i32 0, i32* %call11, align 4, !dbg !10472, !tbaa !2980, !ctir !5
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !10473, !tbaa !2980
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #12, !dbg !10474
  store i64 %call12, i64* %name_max, align 8, !dbg !10475, !tbaa !3837
  %call13 = call i32* @__errno_location() #15, !dbg !10476
  %13 = load i32, i32* %call13, align 4, !dbg !10476, !tbaa !2980, !ctir !5
  %tobool14 = icmp ne i32 %13, 0, !dbg !10477
  %lnot15 = xor i1 %tobool14, true, !dbg !10477
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !10477
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !10477
  %14 = load i64, i64* %name_max, align 8, !dbg !10478, !tbaa !3837
  %sub18 = sub nsw i64 %14, %conv17, !dbg !10478
  store i64 %sub18, i64* %name_max, align 8, !dbg !10478, !tbaa !3837
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !10479, !tbaa !3837
  %cmp19 = icmp sle i64 0, %15, !dbg !10480
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !10481

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !10482, !tbaa !3837
  %cmp21 = icmp ule i64 %16, -1, !dbg !10483
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10484

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !10485, !tbaa !3837
  br label %cond.end, !dbg !10484

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !10486, !tbaa !3837
  %cmp23 = icmp slt i64 %18, -1, !dbg !10487
  %19 = zext i1 %cmp23 to i64, !dbg !10486
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !10486
  br label %cond.end, !dbg !10484

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !10484
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !10488, !tbaa !2993
  store i64 %cond25, i64* %20, align 8, !dbg !10489, !tbaa !3837, !ctir !52
  br label %if.end26, !dbg !10490

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !10491, !tbaa !2993
  %22 = load i64, i64* %21, align 8, !dbg !10492, !tbaa !3837, !ctir !52
  store i64 %22, i64* %baselen_max, align 8, !dbg !10493, !tbaa !3837
  br label %if.end27, !dbg !10494

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !10495, !tbaa !3837
  %24 = load i64, i64* %baselen, align 8, !dbg !10497, !tbaa !3837
  %cmp28 = icmp ult i64 %23, %24, !dbg !10498
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !10499

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !10500, !tbaa !2993
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !10502, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !10503
  %27 = load i8*, i8** %base, align 8, !dbg !10504, !tbaa !2993
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !10505
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !10505
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10505
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !10506, !tbaa !3837
  %28 = load i64, i64* %baselen_max, align 8, !dbg !10507, !tbaa !3837
  %29 = load i64, i64* %baselen, align 8, !dbg !10509, !tbaa !3837
  %cmp31 = icmp ule i64 %28, %29, !dbg !10510
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10511

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !10512, !tbaa !3837
  %sub34 = sub i64 %30, 1, !dbg !10513
  store i64 %sub34, i64* %baselen, align 8, !dbg !10514, !tbaa !3837
  br label %if.end35, !dbg !10515

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !10516, !tbaa !3652
  %32 = load i8*, i8** %base, align 8, !dbg !10517, !tbaa !2993
  %33 = load i64, i64* %baselen, align 8, !dbg !10518, !tbaa !3837
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !10517, !ctir !7
  store i8 %31, i8* %arrayidx, align 1, !dbg !10519, !tbaa !3652
  %34 = load i8*, i8** %base, align 8, !dbg !10520, !tbaa !2993
  %35 = load i64, i64* %baselen, align 8, !dbg !10521, !tbaa !3837
  %add = add i64 %35, 1, !dbg !10522
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !10520, !ctir !7
  store i8 0, i8* %arrayidx36, align 1, !dbg !10523, !tbaa !3652
  br label %if.end37, !dbg !10524

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !10525
}

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10526 !ctir !607 {
entry:
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %backup_type.addr = alloca i32, align 4, !ctir !65
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10528, metadata !DIExpression()), !dbg !10529
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10530, metadata !DIExpression()), !dbg !10531
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10532, metadata !DIExpression()), !dbg !10533
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10534, !tbaa !2980
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10535, !tbaa !2993
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10536, !tbaa !3652
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !10537
  ret i8* %call, !dbg !10538
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10539 !ctir !607 {
entry:
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %backup_type.addr = alloca i32, align 4, !ctir !65
  %result = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10540, metadata !DIExpression()), !dbg !10541
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10542, metadata !DIExpression()), !dbg !10543
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10544, metadata !DIExpression()), !dbg !10545
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10546, metadata !DIExpression()), !dbg !10547
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10548, !tbaa !2980
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10549, !tbaa !2993
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10550, !tbaa !3652
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !10551
  store i8* %call, i8** %result, align 8, !dbg !10547, !tbaa !2993
  %3 = load i8*, i8** %result, align 8, !dbg !10552, !tbaa !2993
  %tobool = icmp ne i8* %3, null, !dbg !10552
  br i1 %tobool, label %if.end, label %if.then, !dbg !10554

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10555
  unreachable, !dbg !10555

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !10556, !tbaa !2993
  ret i8* %4, !dbg !10557
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !10558 !ctir !609 {
entry:
  %retval = alloca i32, align 4, !ctir !65
  %context.addr = alloca i8*, align 8, !ctir !112
  %version.addr = alloca i8*, align 8, !ctir !112
  store i8* %context, i8** %context.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10559, metadata !DIExpression()), !dbg !10560
  store i8* %version, i8** %version.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10561, metadata !DIExpression()), !dbg !10562
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10563, !tbaa !2993
  %cmp = icmp eq i8* %0, null, !dbg !10565
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10566

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10567, !tbaa !2993
  %2 = load i8, i8* %1, align 1, !dbg !10568, !tbaa !3652, !ctir !113
  %conv = sext i8 %2 to i32, !dbg !10568
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10569
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10570

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !10571
  br label %return, !dbg !10571

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10572, !tbaa !2993
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10572, !tbaa !2993
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !10572, !tbaa !2993
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !10572
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !10572, !ctir !611
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10572, !tbaa !3652
  store i32 %6, i32* %retval, align 4, !dbg !10573
  br label %return, !dbg !10573

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10574
  ret i32 %7, !dbg !10574
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !10575 !ctir !609 {
entry:
  %retval = alloca i32, align 4, !ctir !65
  %context.addr = alloca i8*, align 8, !ctir !112
  %version.addr = alloca i8*, align 8, !ctir !112
  store i8* %context, i8** %context.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10576, metadata !DIExpression()), !dbg !10577
  store i8* %version, i8** %version.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10578, metadata !DIExpression()), !dbg !10579
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10580, !tbaa !2993
  %tobool = icmp ne i8* %0, null, !dbg !10580
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10582

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10583, !tbaa !2993
  %2 = load i8, i8* %1, align 1, !dbg !10584, !tbaa !3652, !ctir !113
  %conv = sext i8 %2 to i32, !dbg !10584
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10584
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10585

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10586, !tbaa !2993
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10587, !tbaa !2993
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !10588
  store i32 %call, i32* %retval, align 4, !dbg !10589
  br label %return, !dbg !10589

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.208, i64 0, i64 0)) #12, !dbg !10590
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.209, i64 0, i64 0), i8* %call2), !dbg !10591
  store i32 %call3, i32* %retval, align 4, !dbg !10592
  br label %return, !dbg !10592

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10593
  ret i32 %5, !dbg !10593
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #10 !dbg !10594 !ctir !1596 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %a.addr = alloca i64, align 8, !ctir !52
  %b.addr = alloca i64, align 8, !ctir !52
  %lcm_max.addr = alloca i64, align 8, !ctir !52
  %size = alloca i64, align 8, !ctir !52
  %lcm = alloca i64, align 8, !ctir !52
  %m = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %q = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !52
  store i64 %a, i64* %a.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10596, metadata !DIExpression()), !dbg !10597
  store i64 %b, i64* %b.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10598, metadata !DIExpression()), !dbg !10599
  store i64 %lcm_max, i64* %lcm_max.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10602, metadata !DIExpression()), !dbg !10603
  %0 = load i64, i64* %a.addr, align 8, !dbg !10604, !tbaa !3837
  %tobool = icmp ne i64 %0, 0, !dbg !10604
  br i1 %tobool, label %if.else, label %if.then, !dbg !10606

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !10607, !tbaa !3837
  %tobool1 = icmp ne i64 %1, 0, !dbg !10607
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10607

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !10608, !tbaa !3837
  br label %cond.end, !dbg !10607

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !10607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !10607
  store i64 %cond, i64* %size, align 8, !dbg !10609, !tbaa !3837
  br label %if.end9, !dbg !10610

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !10611, !tbaa !3837
  %tobool2 = icmp ne i64 %3, 0, !dbg !10611
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !10614

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !10615, metadata !DIExpression()), !dbg !10617
  call void @llvm.dbg.declare(metadata i64* %m, metadata !10618, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10620, metadata !DIExpression()), !dbg !10621
  call void @llvm.dbg.declare(metadata i64* %q, metadata !10622, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10624, metadata !DIExpression()), !dbg !10625
  %4 = load i64, i64* %a.addr, align 8, !dbg !10626, !tbaa !3837
  store i64 %4, i64* %m, align 8, !dbg !10628, !tbaa !3837
  %5 = load i64, i64* %b.addr, align 8, !dbg !10629, !tbaa !3837
  store i64 %5, i64* %n, align 8, !dbg !10630, !tbaa !3837
  br label %for.cond, !dbg !10631

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !10632, !tbaa !3837
  %7 = load i64, i64* %n, align 8, !dbg !10634, !tbaa !3837
  %rem = urem i64 %6, %7, !dbg !10635
  store i64 %rem, i64* %r, align 8, !dbg !10636, !tbaa !3837
  %cmp = icmp ne i64 %rem, 0, !dbg !10637
  br i1 %cmp, label %for.body, label %for.end, !dbg !10638

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10639

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !10640, !tbaa !3837
  store i64 %8, i64* %m, align 8, !dbg !10641, !tbaa !3837
  %9 = load i64, i64* %r, align 8, !dbg !10642, !tbaa !3837
  store i64 %9, i64* %n, align 8, !dbg !10643, !tbaa !3837
  br label %for.cond, !dbg !10644, !llvm.loop !10645

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !10647, !tbaa !3837
  %11 = load i64, i64* %n, align 8, !dbg !10648, !tbaa !3837
  %div = udiv i64 %10, %11, !dbg !10649
  store i64 %div, i64* %q, align 8, !dbg !10650, !tbaa !3837
  %12 = load i64, i64* %q, align 8, !dbg !10651, !tbaa !3837
  %13 = load i64, i64* %b.addr, align 8, !dbg !10652, !tbaa !3837
  %mul = mul i64 %12, %13, !dbg !10653
  store i64 %mul, i64* %lcm, align 8, !dbg !10654, !tbaa !3837
  %14 = load i64, i64* %lcm, align 8, !dbg !10655, !tbaa !3837
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !10657, !tbaa !3837
  %cmp4 = icmp ule i64 %14, %15, !dbg !10658
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !10659

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !10660, !tbaa !3837
  %17 = load i64, i64* %b.addr, align 8, !dbg !10661, !tbaa !3837
  %div5 = udiv i64 %16, %17, !dbg !10662
  %18 = load i64, i64* %q, align 8, !dbg !10663, !tbaa !3837
  %cmp6 = icmp eq i64 %div5, %18, !dbg !10664
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10665

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !10666, !tbaa !3837
  store i64 %19, i64* %retval, align 8, !dbg !10667
  br label %return, !dbg !10667

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !10668

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !10669, !tbaa !3837
  store i64 %20, i64* %size, align 8, !dbg !10670, !tbaa !3837
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !10671, !tbaa !3837
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !10672, !tbaa !3837
  %cmp10 = icmp ule i64 %21, %22, !dbg !10673
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10671

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !10674, !tbaa !3837
  br label %cond.end13, !dbg !10671

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !10675, !tbaa !3837
  br label %cond.end13, !dbg !10671

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !10671
  store i64 %cond14, i64* %retval, align 8, !dbg !10676
  br label %return, !dbg !10676

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !10677
  ret i64 %25, !dbg !10677
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !10678 !ctir !133 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10679, metadata !DIExpression()), !dbg !10680
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10681, !tbaa !2993
  store i8* %0, i8** @file_name, align 8, !dbg !10682, !tbaa !2993
  ret void, !dbg !10683
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !10684 !ctir !131 {
entry:
  %fail = alloca i8, align 1, !ctir !117
  %close_error = alloca i8*, align 8, !ctir !112
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10685, metadata !DIExpression()), !dbg !10686
  store i8 0, i8* %fail, align 1, !dbg !10686, !tbaa !3104
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10687, !tbaa !2993
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !10689
  %cmp = icmp ugt i64 %call, 0, !dbg !10690
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10691

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10692, !tbaa !2993
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !10695
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10696
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10697

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10698, !tbaa !2993
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !10699
  %cmp4 = icmp ne i32 %call3, 0, !dbg !10700
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10701

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !10702, !tbaa !3104
  br label %if.end, !dbg !10703

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !10704

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10705, !tbaa !2993
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !10707
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10708
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10709

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !10710, !tbaa !3104
  br label %if.end10, !dbg !10711

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !10712, !tbaa !3104
  %tobool = trunc i8 %4 to i1, !dbg !10712
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !10714

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !10715, metadata !DIExpression()), !dbg !10717
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.214, i64 0, i64 0)) #12, !dbg !10718
  store i8* %call12, i8** %close_error, align 8, !dbg !10717, !tbaa !2993
  %5 = load i8*, i8** @file_name, align 8, !dbg !10719, !tbaa !2993
  %tobool13 = icmp ne i8* %5, null, !dbg !10719
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10721

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !10722
  %6 = load i32, i32* %call15, align 4, !dbg !10722, !tbaa !2980, !ctir !5
  %7 = load i8*, i8** @file_name, align 8, !dbg !10723, !tbaa !2993
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !10724
  %8 = load i8*, i8** %close_error, align 8, !dbg !10725, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.215, i64 0, i64 0), i8* %call16, i8* %8), !dbg !10726
  br label %if.end18, !dbg !10726

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #15, !dbg !10727
  %9 = load i32, i32* %call17, align 4, !dbg !10727, !tbaa !2980, !ctir !5
  %10 = load i8*, i8** %close_error, align 8, !dbg !10728, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.216, i64 0, i64 0), i8* %10), !dbg !10729
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10730

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10731
  %11 = load i8, i8* %fail, align 1, !dbg !10732, !tbaa !3104
  %tobool20 = trunc i8 %11 to i1, !dbg !10732
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10734

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10735, !tbaa !2980
  call void @_exit(i32 %12) #16, !dbg !10736
  unreachable, !dbg !10736

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10737
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #11

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10738 !ctir !133 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10739, metadata !DIExpression()), !dbg !10740
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10741, !tbaa !2993
  store i8* %0, i8** @file_name.217, align 8, !dbg !10742, !tbaa !2993
  ret void, !dbg !10743
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10744 !ctir !675 {
entry:
  %ignore.addr = alloca i8, align 1, !ctir !117
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10745, metadata !DIExpression()), !dbg !10746
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10747, !tbaa !3104
  %tobool = trunc i8 %0 to i1, !dbg !10747
  %frombool1 = zext i1 %tobool to i8, !dbg !10748
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10748, !tbaa !3104
  ret void, !dbg !10749
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10750 !ctir !131 {
entry:
  %write_error = alloca i8*, align 8, !ctir !112
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10751, !tbaa !2993
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10753
  %cmp = icmp ne i32 %call, 0, !dbg !10754
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10755

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10756, !tbaa !3104
  %tobool = trunc i8 %1 to i1, !dbg !10756
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10757

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #15, !dbg !10758
  %2 = load i32, i32* %call2, align 4, !dbg !10758, !tbaa !2980, !ctir !5
  %cmp3 = icmp eq i32 %2, 32, !dbg !10759
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10760

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10761, metadata !DIExpression()), !dbg !10763
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.220, i64 0, i64 0)) #12, !dbg !10764
  store i8* %call4, i8** %write_error, align 8, !dbg !10763, !tbaa !2993
  %3 = load i8*, i8** @file_name.217, align 8, !dbg !10765, !tbaa !2993
  %tobool5 = icmp ne i8* %3, null, !dbg !10765
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10767

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #15, !dbg !10768
  %4 = load i32, i32* %call7, align 4, !dbg !10768, !tbaa !2980, !ctir !5
  %5 = load i8*, i8** @file_name.217, align 8, !dbg !10769, !tbaa !2993
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10770
  %6 = load i8*, i8** %write_error, align 8, !dbg !10771, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.221, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10772
  br label %if.end, !dbg !10772

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #15, !dbg !10773
  %7 = load i32, i32* %call9, align 4, !dbg !10773, !tbaa !2980, !ctir !5
  %8 = load i8*, i8** %write_error, align 8, !dbg !10774, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.222, i64 0, i64 0), i8* %8), !dbg !10775
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10776, !tbaa !2980
  call void @_exit(i32 %9) #16, !dbg !10777
  unreachable, !dbg !10777

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10778, !tbaa !2993
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10780
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10781
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10782

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10783, !tbaa !2980
  call void @_exit(i32 %11) #16, !dbg !10784
  unreachable, !dbg !10784

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10785
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10786 !ctir !979 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %result = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10788, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10790, metadata !DIExpression()), !dbg !10791
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10792, !tbaa !2993
  %call = call i8* @mdir_name(i8* %0), !dbg !10793
  store i8* %call, i8** %result, align 8, !dbg !10791, !tbaa !2993
  %1 = load i8*, i8** %result, align 8, !dbg !10794, !tbaa !2993
  %tobool = icmp ne i8* %1, null, !dbg !10794
  br i1 %tobool, label %if.end, label %if.then, !dbg !10796

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !10797
  unreachable, !dbg !10797

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10798, !tbaa !2993
  ret i8* %2, !dbg !10799
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #9 !dbg !10800 !ctir !1604 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %prefix_length = alloca i64, align 8, !ctir !52
  %length = alloca i64, align 8, !ctir !52
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10802, metadata !DIExpression()), !dbg !10803
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10804, metadata !DIExpression()), !dbg !10805
  store i64 0, i64* %prefix_length, align 8, !dbg !10805, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10806, metadata !DIExpression()), !dbg !10807
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10808, !tbaa !3837
  %cmp = icmp ne i64 %0, 0, !dbg !10809
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10808

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10808

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10810, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10810, !ctir !112
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10810, !tbaa !3652
  %conv = sext i8 %2 to i32, !dbg !10810
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10810
  %3 = zext i1 %cmp1 to i64, !dbg !10810
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10810
  br label %cond.end, !dbg !10808

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10808
  %conv4 = sext i32 %cond3 to i64, !dbg !10811
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10812, !tbaa !3837
  %add = add i64 %4, %conv4, !dbg !10812
  store i64 %add, i64* %prefix_length, align 8, !dbg !10812, !tbaa !3837
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10813, !tbaa !2993
  %call = call i8* @last_component(i8* %5) #14, !dbg !10815
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10816, !tbaa !2993
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10817
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10817
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10817
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10818, !tbaa !3837
  br label %for.cond, !dbg !10819

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10820, !tbaa !3837
  %8 = load i64, i64* %length, align 8, !dbg !10822, !tbaa !3837
  %cmp5 = icmp ult i64 %7, %8, !dbg !10823
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10824

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10825, !tbaa !2993
  %10 = load i64, i64* %length, align 8, !dbg !10825, !tbaa !3837
  %sub = sub i64 %10, 1, !dbg !10825
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10825, !ctir !112
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10825, !tbaa !3652
  %conv8 = sext i8 %11 to i32, !dbg !10825
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10825
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10827

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10828

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10825

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10829, !tbaa !3837
  %dec = add i64 %12, -1, !dbg !10829
  store i64 %dec, i64* %length, align 8, !dbg !10829, !tbaa !3837
  br label %for.cond, !dbg !10830, !llvm.loop !10831

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10833, !tbaa !3837
  ret i64 %13, !dbg !10834
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10835 !ctir !979 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %file.addr = alloca i8*, align 8, !ctir !112
  %length = alloca i64, align 8, !ctir !52
  %append_dot = alloca i8, align 1, !ctir !117
  %dir = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10836, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10838, metadata !DIExpression()), !dbg !10839
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10840, !tbaa !2993
  %call = call i64 @dir_len(i8* %0) #14, !dbg !10841
  store i64 %call, i64* %length, align 8, !dbg !10839, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10842, metadata !DIExpression()), !dbg !10843
  %1 = load i64, i64* %length, align 8, !dbg !10844, !tbaa !3837
  %cmp = icmp eq i64 %1, 0, !dbg !10845
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10846

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10846

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10843
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10843, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10847, metadata !DIExpression()), !dbg !10848
  %3 = load i64, i64* %length, align 8, !dbg !10849, !tbaa !3837
  %4 = load i8, i8* %append_dot, align 1, !dbg !10850, !tbaa !3104
  %tobool = trunc i8 %4 to i1, !dbg !10850
  %conv = zext i1 %tobool to i64, !dbg !10850
  %add = add i64 %3, %conv, !dbg !10851
  %add1 = add i64 %add, 1, !dbg !10852
  %call2 = call noalias i8* @malloc(i64 %add1) #12, !dbg !10853
  store i8* %call2, i8** %dir, align 8, !dbg !10848, !tbaa !2993
  %5 = load i8*, i8** %dir, align 8, !dbg !10854, !tbaa !2993
  %tobool3 = icmp ne i8* %5, null, !dbg !10854
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10856

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10857
  br label %return, !dbg !10857

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10858, !tbaa !2993
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10859, !tbaa !2993
  %8 = load i64, i64* %length, align 8, !dbg !10860, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10861
  %9 = load i8, i8* %append_dot, align 1, !dbg !10862, !tbaa !3104
  %tobool4 = trunc i8 %9 to i1, !dbg !10862
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10864

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10865, !tbaa !2993
  %11 = load i64, i64* %length, align 8, !dbg !10866, !tbaa !3837
  %inc = add i64 %11, 1, !dbg !10866
  store i64 %inc, i64* %length, align 8, !dbg !10866, !tbaa !3837
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10865, !ctir !7
  store i8 46, i8* %arrayidx, align 1, !dbg !10867, !tbaa !3652
  br label %if.end6, !dbg !10865

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10868, !tbaa !2993
  %13 = load i64, i64* %length, align 8, !dbg !10869, !tbaa !3837
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10868, !ctir !7
  store i8 0, i8* %arrayidx7, align 1, !dbg !10870, !tbaa !3652
  %14 = load i8*, i8** %dir, align 8, !dbg !10871, !tbaa !2993
  store i8* %14, i8** %retval, align 8, !dbg !10872
  br label %return, !dbg !10872

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10873
  ret i8* %15, !dbg !10873
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #9 !dbg !10874 !ctir !979 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  %base = alloca i8*, align 8, !ctir !112
  %p = alloca i8*, align 8, !ctir !112
  %saw_slash = alloca i8, align 1, !ctir !117
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10876, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10878, metadata !DIExpression()), !dbg !10879
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10880, !tbaa !2993
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10881
  store i8* %add.ptr, i8** %base, align 8, !dbg !10879, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10882, metadata !DIExpression()), !dbg !10883
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10884, metadata !DIExpression()), !dbg !10885
  store i8 0, i8* %saw_slash, align 1, !dbg !10885, !tbaa !3104
  br label %while.cond, !dbg !10886

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10887, !tbaa !2993
  %2 = load i8, i8* %1, align 1, !dbg !10887, !tbaa !3652, !ctir !113
  %conv = sext i8 %2 to i32, !dbg !10887
  %cmp = icmp eq i32 %conv, 47, !dbg !10887
  br i1 %cmp, label %while.body, label %while.end, !dbg !10886

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10888, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10888
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10888, !tbaa !2993
  br label %while.cond, !dbg !10886, !llvm.loop !10889

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10890, !tbaa !2993
  store i8* %4, i8** %p, align 8, !dbg !10892, !tbaa !2993
  br label %for.cond, !dbg !10893

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10894, !tbaa !2993
  %6 = load i8, i8* %5, align 1, !dbg !10896, !tbaa !3652, !ctir !113
  %tobool = icmp ne i8 %6, 0, !dbg !10897
  br i1 %tobool, label %for.body, label %for.end, !dbg !10897

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10898, !tbaa !2993
  %8 = load i8, i8* %7, align 1, !dbg !10898, !tbaa !3652, !ctir !113
  %conv2 = sext i8 %8 to i32, !dbg !10898
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10898
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10901

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10902, !tbaa !3104
  br label %if.end7, !dbg !10903

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10904, !tbaa !3104
  %tobool5 = trunc i8 %9 to i1, !dbg !10904
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10906

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10907, !tbaa !2993
  store i8* %10, i8** %base, align 8, !dbg !10909, !tbaa !2993
  store i8 0, i8* %saw_slash, align 1, !dbg !10910, !tbaa !3104
  br label %if.end, !dbg !10911

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10912

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10913, !tbaa !2993
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10913
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10913, !tbaa !2993
  br label %for.cond, !dbg !10914, !llvm.loop !10915

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10917, !tbaa !2993
  ret i8* %12, !dbg !10918
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #9 !dbg !10919 !ctir !1604 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  %len = alloca i64, align 8, !ctir !52
  %prefix_len = alloca i64, align 8, !ctir !52
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10920, metadata !DIExpression()), !dbg !10921
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10922, metadata !DIExpression()), !dbg !10923
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10924, metadata !DIExpression()), !dbg !10925
  store i64 0, i64* %prefix_len, align 8, !dbg !10925, !tbaa !3837
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10926, !tbaa !2993
  %call = call i64 @strlen(i8* %0) #14, !dbg !10928
  store i64 %call, i64* %len, align 8, !dbg !10929, !tbaa !3837
  br label %for.cond, !dbg !10930

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10931, !tbaa !3837
  %cmp = icmp ult i64 1, %1, !dbg !10933
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10934

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10935, !tbaa !2993
  %3 = load i64, i64* %len, align 8, !dbg !10935, !tbaa !3837
  %sub = sub i64 %3, 1, !dbg !10935
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10935, !ctir !112
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10935, !tbaa !3652
  %conv = sext i8 %4 to i32, !dbg !10935
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10935
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10936
  br i1 %5, label %for.body, label %for.end, !dbg !10937

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10938

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10939, !tbaa !3837
  %dec = add i64 %6, -1, !dbg !10939
  store i64 %dec, i64* %len, align 8, !dbg !10939, !tbaa !3837
  br label %for.cond, !dbg !10940, !llvm.loop !10941

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10943, !tbaa !3837
  ret i64 %7, !dbg !10944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @strip_trailing_slashes(i8* %file) #4 !dbg !10945 !ctir !1612 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !7
  %base = alloca i8*, align 8, !ctir !7
  %base_lim = alloca i8*, align 8, !ctir !7
  %had_slash = alloca i8, align 1, !ctir !117
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10947, metadata !DIExpression()), !dbg !10948
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10949, metadata !DIExpression()), !dbg !10950
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10951, !tbaa !2993
  %call = call i8* @last_component(i8* %0) #14, !dbg !10952
  store i8* %call, i8** %base, align 8, !dbg !10950, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %base_lim, metadata !10953, metadata !DIExpression()), !dbg !10954
  call void @llvm.dbg.declare(metadata i8* %had_slash, metadata !10955, metadata !DIExpression()), !dbg !10956
  %1 = load i8*, i8** %base, align 8, !dbg !10957, !tbaa !2993
  %2 = load i8, i8* %1, align 1, !dbg !10959, !tbaa !3652, !ctir !8
  %tobool = icmp ne i8 %2, 0, !dbg !10959
  br i1 %tobool, label %if.end, label %if.then, !dbg !10960

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !10961, !tbaa !2993
  store i8* %3, i8** %base, align 8, !dbg !10962, !tbaa !2993
  br label %if.end, !dbg !10963

if.end:                                           ; preds = %if.then, %entry
  %4 = load i8*, i8** %base, align 8, !dbg !10964, !tbaa !2993
  %5 = load i8*, i8** %base, align 8, !dbg !10965, !tbaa !2993
  %call1 = call i64 @base_len(i8* %5) #14, !dbg !10966
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %call1, !dbg !10967
  store i8* %add.ptr, i8** %base_lim, align 8, !dbg !10968, !tbaa !2993
  %6 = load i8*, i8** %base_lim, align 8, !dbg !10969, !tbaa !2993
  %7 = load i8, i8* %6, align 1, !dbg !10970, !tbaa !3652, !ctir !8
  %conv = sext i8 %7 to i32, !dbg !10970
  %cmp = icmp ne i32 %conv, 0, !dbg !10971
  %frombool = zext i1 %cmp to i8, !dbg !10972
  store i8 %frombool, i8* %had_slash, align 1, !dbg !10972, !tbaa !3104
  %8 = load i8*, i8** %base_lim, align 8, !dbg !10973, !tbaa !2993
  store i8 0, i8* %8, align 1, !dbg !10974, !tbaa !3652, !ctir !8
  %9 = load i8, i8* %had_slash, align 1, !dbg !10975, !tbaa !3104
  %tobool3 = trunc i8 %9 to i1, !dbg !10975
  ret i1 %tobool3, !dbg !10976
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !10977 !ctir !1627 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %offset.addr = alloca i64, align 8, !ctir !245
  %len.addr = alloca i64, align 8, !ctir !245
  %advice.addr = alloca i32, align 4, !ctir !1629
  %__x = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10979, metadata !DIExpression()), !dbg !10980
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10981, metadata !DIExpression()), !dbg !10982
  store i64 %len, i64* %len.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10983, metadata !DIExpression()), !dbg !10984
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10985, metadata !DIExpression()), !dbg !10986
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10987, metadata !DIExpression()), !dbg !10989
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10989, !tbaa !2980
  %1 = load i64, i64* %offset.addr, align 8, !dbg !10989, !tbaa !3837
  %2 = load i64, i64* %len.addr, align 8, !dbg !10989, !tbaa !3837
  %3 = load i32, i32* %advice.addr, align 4, !dbg !10989, !tbaa !3652
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #12, !dbg !10989
  store i32 %call, i32* %__x, align 4, !dbg !10989, !tbaa !2980
  %4 = load i32, i32* %__x, align 4, !dbg !10989, !tbaa !2980
  ret void, !dbg !10990
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !10991 !ctir !1630 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !1632
  %advice.addr = alloca i32, align 4, !ctir !1629
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10994, metadata !DIExpression()), !dbg !10995
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10996, !tbaa !2993
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10996
  br i1 %tobool, label %if.then, label %if.end, !dbg !10998

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10999, !tbaa !2993
  %call = call i32 @fileno(%struct._IO_FILE* %1) #12, !dbg !11000
  %2 = load i32, i32* %advice.addr, align 4, !dbg !11001, !tbaa !3652
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !11002
  br label %if.end, !dbg !11002

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11003
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !11004 !ctir !1675 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %flags.addr = alloca i32, align 4, !ctir !5
  %mode = alloca i32, align 4, !ctir !157
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1677
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11008, metadata !DIExpression()), !dbg !11009
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11010, metadata !DIExpression()), !dbg !11011
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !11012, metadata !DIExpression()), !dbg !11013
  store i32 0, i32* %mode, align 4, !dbg !11013, !tbaa !2980
  %0 = load i32, i32* %flags.addr, align 4, !dbg !11014, !tbaa !2980
  %and = and i32 %0, 64, !dbg !11016
  %tobool = icmp ne i32 %and, 0, !dbg !11016
  br i1 %tobool, label %if.then, label %if.end, !dbg !11017

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !11018, metadata !DIExpression()), !dbg !11020
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11021
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !11021
  call void @llvm.va_start(i8* %arraydecay1), !dbg !11021
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11022
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !11022
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !11022
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !11022
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !11022

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !11022
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !11022
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !11022
  %3 = bitcast i8* %2 to i32*, !dbg !11022
  %4 = add i32 %gp_offset, 8, !dbg !11022
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !11022
  br label %vaarg.end, !dbg !11022

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !11022
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !11022
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !11022
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !11022
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !11022
  br label %vaarg.end, !dbg !11022

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !11022
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !11022
  store i32 %6, i32* %mode, align 4, !dbg !11023, !tbaa !2980
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !11024
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !11024
  call void @llvm.va_end(i8* %arraydecay34), !dbg !11024
  br label %if.end, !dbg !11025

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !11026, !tbaa !2993
  %8 = load i32, i32* %flags.addr, align 4, !dbg !11027, !tbaa !2980
  %9 = load i32, i32* %mode, align 4, !dbg !11028, !tbaa !2980
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !11029
  %call5 = call i32 @fd_safer(i32 %call), !dbg !11030
  ret i32 %call5, !dbg !11031
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #12

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #12

declare dso_local i32 @open(i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !11032 !ctir !1689 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8, !ctir !192
  %file.addr = alloca i8*, align 8, !ctir !112
  %stats.addr = alloca %struct.stat*, align 8, !ctir !1691
  %ent = alloca %struct.F_triple*, align 8, !ctir !1714
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1714
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !11034, metadata !DIExpression()), !dbg !11035
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11036, metadata !DIExpression()), !dbg !11037
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !11038, metadata !DIExpression()), !dbg !11039
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !11040, metadata !DIExpression()), !dbg !11041
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11042, !tbaa !2993
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !11044
  br i1 %cmp, label %if.then, label %if.end, !dbg !11045

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !11046

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !11047
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !11047
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !11048, !tbaa !2993
  %2 = load i8*, i8** %file.addr, align 8, !dbg !11049, !tbaa !2993
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !11050
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11051, !tbaa !2993
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !11052, !ctir !1715
  store i8* %call1, i8** %name, align 8, !dbg !11053, !tbaa !11054, !ctir !7
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11056, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !11057, !ctir !1692
  %5 = load i64, i64* %st_ino, align 8, !dbg !11057, !tbaa !3859, !ctir !225
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11058, !tbaa !2993
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !11059, !ctir !1715
  store i64 %5, i64* %st_ino2, align 8, !dbg !11060, !tbaa !11061, !ctir !224
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11062, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !11063, !ctir !1692
  %8 = load i64, i64* %st_dev, align 8, !dbg !11063, !tbaa !3862, !ctir !228
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11064, !tbaa !2993
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !11065, !ctir !1715
  store i64 %8, i64* %st_dev3, align 8, !dbg !11066, !tbaa !11067, !ctir !227
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !11068, metadata !DIExpression()), !dbg !11070
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11071, !tbaa !2993
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11072, !tbaa !2993
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !11072
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !11073
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !11073
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !11070, !tbaa !2993
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !11074, !tbaa !2993
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !11076
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11077

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !11078
  unreachable, !dbg !11078

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !11080, !tbaa !2993
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11082, !tbaa !2993
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !11083
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11084

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !11085, !tbaa !2993
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !11085
  call void @triple_free(i8* %18), !dbg !11087
  br label %if.end10, !dbg !11088

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !11089
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !11090 !ctir !1721 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %ht.addr = alloca %struct.hash_table*, align 8, !ctir !1723
  %file.addr = alloca i8*, align 8, !ctir !112
  %stats.addr = alloca %struct.stat*, align 8, !ctir !1691
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1715
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !11091, metadata !DIExpression()), !dbg !11092
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !11093, metadata !DIExpression()), !dbg !11094
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !11095, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !11097, metadata !DIExpression()), !dbg !11098
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11099, !tbaa !2993
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !11101
  br i1 %cmp, label %if.then, label %if.end, !dbg !11102

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11103
  br label %return, !dbg !11103

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !11104, !tbaa !2993
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !11105, !ctir !1715
  store i8* %1, i8** %name, align 8, !dbg !11106, !tbaa !11054, !ctir !7
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11107, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !11108, !ctir !1692
  %3 = load i64, i64* %st_ino, align 8, !dbg !11108, !tbaa !3859, !ctir !225
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !11109, !ctir !1715
  store i64 %3, i64* %st_ino1, align 8, !dbg !11110, !tbaa !11061, !ctir !224
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !11111, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !11112, !ctir !1692
  %5 = load i64, i64* %st_dev, align 8, !dbg !11112, !tbaa !3862, !ctir !228
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !11113, !ctir !1715
  store i64 %5, i64* %st_dev2, align 8, !dbg !11114, !tbaa !11067, !ctir !227
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !11115, !tbaa !2993
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !11116
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !11117
  %tobool = icmp ne i8* %call, null, !dbg !11118
  %lnot = xor i1 %tobool, true, !dbg !11118
  %lnot3 = xor i1 %lnot, true, !dbg !11119
  store i1 %lnot3, i1* %retval, align 1, !dbg !11120
  br label %return, !dbg !11120

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !11121
  ret i1 %8, !dbg !11121
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @file_type(%struct.stat* %st) #9 !dbg !11122 !ctir !1728 {
entry:
  %retval = alloca i8*, align 8, !ctir !112
  %st.addr = alloca %struct.stat*, align 8, !ctir !1730
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !11124, metadata !DIExpression()), !dbg !11125
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11126, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11126, !ctir !1731
  %1 = load i32, i32* %st_mode, align 8, !dbg !11126, !tbaa !3176, !ctir !130
  %and = and i32 %1, 61440, !dbg !11126
  %cmp = icmp eq i32 %and, 32768, !dbg !11126
  br i1 %cmp, label %if.then, label %if.end, !dbg !11128

if.then:                                          ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11129, !tbaa !2993
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 8, !dbg !11130, !ctir !1731
  %3 = load i64, i64* %st_size, align 8, !dbg !11130, !tbaa !4505, !ctir !30
  %cmp1 = icmp eq i64 %3, 0, !dbg !11131
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11129

cond.true:                                        ; preds = %if.then
  %call = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.245, i64 0, i64 0)) #12, !dbg !11132
  br label %cond.end, !dbg !11129

cond.false:                                       ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.246, i64 0, i64 0)) #12, !dbg !11133
  br label %cond.end, !dbg !11129

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !11129
  store i8* %cond, i8** %retval, align 8, !dbg !11134
  br label %return, !dbg !11134

if.end:                                           ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11135, !tbaa !2993
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 3, !dbg !11135, !ctir !1731
  %5 = load i32, i32* %st_mode3, align 8, !dbg !11135, !tbaa !3176, !ctir !130
  %and4 = and i32 %5, 61440, !dbg !11135
  %cmp5 = icmp eq i32 %and4, 16384, !dbg !11135
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !11137

if.then6:                                         ; preds = %if.end
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2.247, i64 0, i64 0)) #12, !dbg !11138
  store i8* %call7, i8** %retval, align 8, !dbg !11139
  br label %return, !dbg !11139

if.end8:                                          ; preds = %if.end
  %6 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11140, !tbaa !2993
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 3, !dbg !11140, !ctir !1731
  %7 = load i32, i32* %st_mode9, align 8, !dbg !11140, !tbaa !3176, !ctir !130
  %and10 = and i32 %7, 61440, !dbg !11140
  %cmp11 = icmp eq i32 %and10, 40960, !dbg !11140
  br i1 %cmp11, label %if.then12, label %if.end14, !dbg !11142

if.then12:                                        ; preds = %if.end8
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3.248, i64 0, i64 0)) #12, !dbg !11143
  store i8* %call13, i8** %retval, align 8, !dbg !11144
  br label %return, !dbg !11144

if.end14:                                         ; preds = %if.end8
  %8 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11145, !tbaa !2993
  %st_mode15 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11145, !ctir !1731
  %9 = load i32, i32* %st_mode15, align 8, !dbg !11145, !tbaa !3176, !ctir !130
  %10 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11145, !tbaa !2993
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11145, !ctir !1731
  %11 = load i32, i32* %st_mode16, align 8, !dbg !11145, !tbaa !3176, !ctir !130
  %sub = sub i32 %9, %11, !dbg !11145
  %tobool = icmp ne i32 %sub, 0, !dbg !11145
  br i1 %tobool, label %if.then17, label %if.end19, !dbg !11147

if.then17:                                        ; preds = %if.end14
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4.249, i64 0, i64 0)) #12, !dbg !11148
  store i8* %call18, i8** %retval, align 8, !dbg !11149
  br label %return, !dbg !11149

if.end19:                                         ; preds = %if.end14
  %12 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11150, !tbaa !2993
  %st_mode20 = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !11150, !ctir !1731
  %13 = load i32, i32* %st_mode20, align 8, !dbg !11150, !tbaa !3176, !ctir !130
  %14 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11150, !tbaa !2993
  %st_mode21 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !11150, !ctir !1731
  %15 = load i32, i32* %st_mode21, align 8, !dbg !11150, !tbaa !3176, !ctir !130
  %sub22 = sub i32 %13, %15, !dbg !11150
  %tobool23 = icmp ne i32 %sub22, 0, !dbg !11150
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !11152

if.then24:                                        ; preds = %if.end19
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5.250, i64 0, i64 0)) #12, !dbg !11153
  store i8* %call25, i8** %retval, align 8, !dbg !11154
  br label %return, !dbg !11154

if.end26:                                         ; preds = %if.end19
  %16 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11155, !tbaa !2993
  %st_mode27 = getelementptr inbounds %struct.stat, %struct.stat* %16, i32 0, i32 3, !dbg !11155, !ctir !1731
  %17 = load i32, i32* %st_mode27, align 8, !dbg !11155, !tbaa !3176, !ctir !130
  %18 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11155, !tbaa !2993
  %st_mode28 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 3, !dbg !11155, !ctir !1731
  %19 = load i32, i32* %st_mode28, align 8, !dbg !11155, !tbaa !3176, !ctir !130
  %sub29 = sub i32 %17, %19, !dbg !11155
  %tobool30 = icmp ne i32 %sub29, 0, !dbg !11155
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !11157

if.then31:                                        ; preds = %if.end26
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6.251, i64 0, i64 0)) #12, !dbg !11158
  store i8* %call32, i8** %retval, align 8, !dbg !11159
  br label %return, !dbg !11159

if.end33:                                         ; preds = %if.end26
  %20 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11160, !tbaa !2993
  %st_mode34 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 3, !dbg !11160, !ctir !1731
  %21 = load i32, i32* %st_mode34, align 8, !dbg !11160, !tbaa !3176, !ctir !130
  %and35 = and i32 %21, 61440, !dbg !11160
  %cmp36 = icmp eq i32 %and35, 24576, !dbg !11160
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !11162

if.then37:                                        ; preds = %if.end33
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7.252, i64 0, i64 0)) #12, !dbg !11163
  store i8* %call38, i8** %retval, align 8, !dbg !11164
  br label %return, !dbg !11164

if.end39:                                         ; preds = %if.end33
  %22 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11165, !tbaa !2993
  %st_mode40 = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 3, !dbg !11165, !ctir !1731
  %23 = load i32, i32* %st_mode40, align 8, !dbg !11165, !tbaa !3176, !ctir !130
  %and41 = and i32 %23, 61440, !dbg !11165
  %cmp42 = icmp eq i32 %and41, 8192, !dbg !11165
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !11167

if.then43:                                        ; preds = %if.end39
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8.253, i64 0, i64 0)) #12, !dbg !11168
  store i8* %call44, i8** %retval, align 8, !dbg !11169
  br label %return, !dbg !11169

if.end45:                                         ; preds = %if.end39
  %24 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11170, !tbaa !2993
  %st_mode46 = getelementptr inbounds %struct.stat, %struct.stat* %24, i32 0, i32 3, !dbg !11170, !ctir !1731
  %25 = load i32, i32* %st_mode46, align 8, !dbg !11170, !tbaa !3176, !ctir !130
  %and47 = and i32 %25, 61440, !dbg !11170
  %cmp48 = icmp eq i32 %and47, 4096, !dbg !11170
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !11172

if.then49:                                        ; preds = %if.end45
  %call50 = call i8* @gettext(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9.254, i64 0, i64 0)) #12, !dbg !11173
  store i8* %call50, i8** %retval, align 8, !dbg !11174
  br label %return, !dbg !11174

if.end51:                                         ; preds = %if.end45
  %26 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !11175, !tbaa !2993
  %st_mode52 = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !11175, !ctir !1731
  %27 = load i32, i32* %st_mode52, align 8, !dbg !11175, !tbaa !3176, !ctir !130
  %and53 = and i32 %27, 61440, !dbg !11175
  %cmp54 = icmp eq i32 %and53, 49152, !dbg !11175
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !11177

if.then55:                                        ; preds = %if.end51
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10.255, i64 0, i64 0)) #12, !dbg !11178
  store i8* %call56, i8** %retval, align 8, !dbg !11179
  br label %return, !dbg !11179

if.end57:                                         ; preds = %if.end51
  %call58 = call i8* @gettext(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11.256, i64 0, i64 0)) #12, !dbg !11180
  store i8* %call58, i8** %retval, align 8, !dbg !11181
  br label %return, !dbg !11181

return:                                           ; preds = %if.end57, %if.then55, %if.then49, %if.then43, %if.then37, %if.then31, %if.then24, %if.then17, %if.then12, %if.then6, %cond.end
  %28 = load i8*, i8** %retval, align 8, !dbg !11182
  ret i8* %28, !dbg !11182
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !11183 !ctir !1756 {
entry:
  %mode.addr = alloca i32, align 4, !ctir !157
  %str.addr = alloca i8*, align 8, !ctir !7
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !11185, metadata !DIExpression()), !dbg !11186
  store i8* %str, i8** %str.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11187, metadata !DIExpression()), !dbg !11188
  %0 = load i32, i32* %mode.addr, align 4, !dbg !11189, !tbaa !2980
  %call = call signext i8 @ftypelet(i32 %0), !dbg !11190
  %1 = load i8*, i8** %str.addr, align 8, !dbg !11191, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !11191, !ctir !7
  store i8 %call, i8* %arrayidx, align 1, !dbg !11192, !tbaa !3652
  %2 = load i32, i32* %mode.addr, align 4, !dbg !11193, !tbaa !2980
  %and = and i32 %2, 256, !dbg !11194
  %tobool = icmp ne i32 %and, 0, !dbg !11193
  %3 = zext i1 %tobool to i64, !dbg !11193
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !11193
  %conv = trunc i32 %cond to i8, !dbg !11193
  %4 = load i8*, i8** %str.addr, align 8, !dbg !11195, !tbaa !2993
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !11195, !ctir !7
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !11196, !tbaa !3652
  %5 = load i32, i32* %mode.addr, align 4, !dbg !11197, !tbaa !2980
  %and2 = and i32 %5, 128, !dbg !11198
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11197
  %6 = zext i1 %tobool3 to i64, !dbg !11197
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !11197
  %conv5 = trunc i32 %cond4 to i8, !dbg !11197
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11199, !tbaa !2993
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !11199, !ctir !7
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !11200, !tbaa !3652
  %8 = load i32, i32* %mode.addr, align 4, !dbg !11201, !tbaa !2980
  %and7 = and i32 %8, 2048, !dbg !11202
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11202
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !11201

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !11203, !tbaa !2980
  %and9 = and i32 %9, 64, !dbg !11204
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11203
  %10 = zext i1 %tobool10 to i64, !dbg !11203
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !11203
  br label %cond.end, !dbg !11201

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !11205, !tbaa !2980
  %and12 = and i32 %11, 64, !dbg !11206
  %tobool13 = icmp ne i32 %and12, 0, !dbg !11205
  %12 = zext i1 %tobool13 to i64, !dbg !11205
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !11205
  br label %cond.end, !dbg !11201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !11201
  %conv16 = trunc i32 %cond15 to i8, !dbg !11207
  %13 = load i8*, i8** %str.addr, align 8, !dbg !11208, !tbaa !2993
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !11208, !ctir !7
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !11209, !tbaa !3652
  %14 = load i32, i32* %mode.addr, align 4, !dbg !11210, !tbaa !2980
  %and18 = and i32 %14, 32, !dbg !11211
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11210
  %15 = zext i1 %tobool19 to i64, !dbg !11210
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !11210
  %conv21 = trunc i32 %cond20 to i8, !dbg !11210
  %16 = load i8*, i8** %str.addr, align 8, !dbg !11212, !tbaa !2993
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !11212, !ctir !7
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !11213, !tbaa !3652
  %17 = load i32, i32* %mode.addr, align 4, !dbg !11214, !tbaa !2980
  %and23 = and i32 %17, 16, !dbg !11215
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11214
  %18 = zext i1 %tobool24 to i64, !dbg !11214
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !11214
  %conv26 = trunc i32 %cond25 to i8, !dbg !11214
  %19 = load i8*, i8** %str.addr, align 8, !dbg !11216, !tbaa !2993
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !11216, !ctir !7
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !11217, !tbaa !3652
  %20 = load i32, i32* %mode.addr, align 4, !dbg !11218, !tbaa !2980
  %and28 = and i32 %20, 1024, !dbg !11219
  %tobool29 = icmp ne i32 %and28, 0, !dbg !11219
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !11218

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !11220, !tbaa !2980
  %and31 = and i32 %21, 8, !dbg !11221
  %tobool32 = icmp ne i32 %and31, 0, !dbg !11220
  %22 = zext i1 %tobool32 to i64, !dbg !11220
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !11220
  br label %cond.end38, !dbg !11218

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !11222, !tbaa !2980
  %and35 = and i32 %23, 8, !dbg !11223
  %tobool36 = icmp ne i32 %and35, 0, !dbg !11222
  %24 = zext i1 %tobool36 to i64, !dbg !11222
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !11222
  br label %cond.end38, !dbg !11218

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !11218
  %conv40 = trunc i32 %cond39 to i8, !dbg !11224
  %25 = load i8*, i8** %str.addr, align 8, !dbg !11225, !tbaa !2993
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !11225, !ctir !7
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !11226, !tbaa !3652
  %26 = load i32, i32* %mode.addr, align 4, !dbg !11227, !tbaa !2980
  %and42 = and i32 %26, 4, !dbg !11228
  %tobool43 = icmp ne i32 %and42, 0, !dbg !11227
  %27 = zext i1 %tobool43 to i64, !dbg !11227
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !11227
  %conv45 = trunc i32 %cond44 to i8, !dbg !11227
  %28 = load i8*, i8** %str.addr, align 8, !dbg !11229, !tbaa !2993
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !11229, !ctir !7
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !11230, !tbaa !3652
  %29 = load i32, i32* %mode.addr, align 4, !dbg !11231, !tbaa !2980
  %and47 = and i32 %29, 2, !dbg !11232
  %tobool48 = icmp ne i32 %and47, 0, !dbg !11231
  %30 = zext i1 %tobool48 to i64, !dbg !11231
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !11231
  %conv50 = trunc i32 %cond49 to i8, !dbg !11231
  %31 = load i8*, i8** %str.addr, align 8, !dbg !11233, !tbaa !2993
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !11233, !ctir !7
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !11234, !tbaa !3652
  %32 = load i32, i32* %mode.addr, align 4, !dbg !11235, !tbaa !2980
  %and52 = and i32 %32, 512, !dbg !11236
  %tobool53 = icmp ne i32 %and52, 0, !dbg !11236
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !11235

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !11237, !tbaa !2980
  %and55 = and i32 %33, 1, !dbg !11238
  %tobool56 = icmp ne i32 %and55, 0, !dbg !11237
  %34 = zext i1 %tobool56 to i64, !dbg !11237
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !11237
  br label %cond.end62, !dbg !11235

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !11239, !tbaa !2980
  %and59 = and i32 %35, 1, !dbg !11240
  %tobool60 = icmp ne i32 %and59, 0, !dbg !11239
  %36 = zext i1 %tobool60 to i64, !dbg !11239
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !11239
  br label %cond.end62, !dbg !11235

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !11235
  %conv64 = trunc i32 %cond63 to i8, !dbg !11241
  %37 = load i8*, i8** %str.addr, align 8, !dbg !11242, !tbaa !2993
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !11242, !ctir !7
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !11243, !tbaa !3652
  %38 = load i8*, i8** %str.addr, align 8, !dbg !11244, !tbaa !2993
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !11244, !ctir !7
  store i8 32, i8* %arrayidx66, align 1, !dbg !11245, !tbaa !3652
  %39 = load i8*, i8** %str.addr, align 8, !dbg !11246, !tbaa !2993
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !11246, !ctir !7
  store i8 0, i8* %arrayidx67, align 1, !dbg !11247, !tbaa !3652
  ret void, !dbg !11248
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !11249 !ctir !1783 {
entry:
  %retval = alloca i8, align 1, !ctir !8
  %bits.addr = alloca i32, align 4, !ctir !157
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !11250, metadata !DIExpression()), !dbg !11251
  %0 = load i32, i32* %bits.addr, align 4, !dbg !11252, !tbaa !2980
  %and = and i32 %0, 61440, !dbg !11252
  %cmp = icmp eq i32 %and, 32768, !dbg !11252
  br i1 %cmp, label %if.then, label %if.end, !dbg !11254

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !11255
  br label %return, !dbg !11255

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !11256, !tbaa !2980
  %and1 = and i32 %1, 61440, !dbg !11256
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !11256
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11258

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !11259
  br label %return, !dbg !11259

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !11260, !tbaa !2980
  %and5 = and i32 %2, 61440, !dbg !11260
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !11260
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11262

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !11263
  br label %return, !dbg !11263

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !11264, !tbaa !2980
  %and9 = and i32 %3, 61440, !dbg !11264
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !11264
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !11266

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !11267
  br label %return, !dbg !11267

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !11268, !tbaa !2980
  %and13 = and i32 %4, 61440, !dbg !11268
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !11268
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !11270

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !11271
  br label %return, !dbg !11271

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !11272, !tbaa !2980
  %and17 = and i32 %5, 61440, !dbg !11272
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !11272
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !11274

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !11275
  br label %return, !dbg !11275

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !11276, !tbaa !2980
  %and21 = and i32 %6, 61440, !dbg !11276
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !11276
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !11278

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !11279
  br label %return, !dbg !11279

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !11280
  br label %return, !dbg !11280

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !11281
  ret i8 %7, !dbg !11281
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !11282 !ctir !1758 {
entry:
  %statp.addr = alloca %struct.stat*, align 8, !ctir !1760
  %str.addr = alloca i8*, align 8, !ctir !7
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !11283, metadata !DIExpression()), !dbg !11284
  store i8* %str, i8** %str.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !11285, metadata !DIExpression()), !dbg !11286
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11287, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !11288, !ctir !1761
  %1 = load i32, i32* %st_mode, align 8, !dbg !11288, !tbaa !3176, !ctir !130
  %2 = load i8*, i8** %str.addr, align 8, !dbg !11289, !tbaa !2993
  call void @strmode(i32 %1, i8* %2), !dbg !11290
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11291, !tbaa !2993
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !11291, !ctir !1761
  %4 = load i32, i32* %st_mode1, align 8, !dbg !11291, !tbaa !3176, !ctir !130
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11291, !tbaa !2993
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !11291, !ctir !1761
  %6 = load i32, i32* %st_mode2, align 8, !dbg !11291, !tbaa !3176, !ctir !130
  %sub = sub i32 %4, %6, !dbg !11291
  %tobool = icmp ne i32 %sub, 0, !dbg !11291
  br i1 %tobool, label %if.then, label %if.else, !dbg !11293

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !11294, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !11294, !ctir !7
  store i8 70, i8* %arrayidx, align 1, !dbg !11295, !tbaa !3652
  br label %if.end18, !dbg !11294

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11296, !tbaa !2993
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !11296, !ctir !1761
  %9 = load i32, i32* %st_mode3, align 8, !dbg !11296, !tbaa !3176, !ctir !130
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11296, !tbaa !2993
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !11296, !ctir !1761
  %11 = load i32, i32* %st_mode4, align 8, !dbg !11296, !tbaa !3176, !ctir !130
  %sub5 = sub i32 %9, %11, !dbg !11296
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !11296
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !11299

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !11300, !tbaa !2993
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !11300, !ctir !7
  store i8 81, i8* %arrayidx8, align 1, !dbg !11301, !tbaa !3652
  br label %if.end17, !dbg !11300

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11302, !tbaa !2993
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !11302, !ctir !1761
  %14 = load i32, i32* %st_mode10, align 8, !dbg !11302, !tbaa !3176, !ctir !130
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !11302, !tbaa !2993
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !11302, !ctir !1761
  %16 = load i32, i32* %st_mode11, align 8, !dbg !11302, !tbaa !3176, !ctir !130
  %sub12 = sub i32 %14, %16, !dbg !11302
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !11302
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !11304

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !11305, !tbaa !2993
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !11305, !ctir !7
  store i8 83, i8* %arrayidx15, align 1, !dbg !11306, !tbaa !3652
  br label %if.end, !dbg !11305

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !11307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !11308 !ctir !1788 {
entry:
  %dir.addr = alloca i8*, align 8, !ctir !112
  %base.addr = alloca i8*, align 8, !ctir !112
  %base_in_result.addr = alloca i8**, align 8, !ctir !116
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11310, metadata !DIExpression()), !dbg !11311
  store i8* %base, i8** %base.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11312, metadata !DIExpression()), !dbg !11313
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11314, metadata !DIExpression()), !dbg !11315
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11316, metadata !DIExpression()), !dbg !11317
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11318, !tbaa !2993
  %1 = load i8*, i8** %base.addr, align 8, !dbg !11319, !tbaa !2993
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11320, !tbaa !2993
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !11321
  store i8* %call, i8** %p, align 8, !dbg !11317, !tbaa !2993
  %3 = load i8*, i8** %p, align 8, !dbg !11322, !tbaa !2993
  %cmp = icmp eq i8* %3, null, !dbg !11324
  br i1 %cmp, label %if.then, label %if.end, !dbg !11325

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !11326
  unreachable, !dbg !11326

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !11327, !tbaa !2993
  ret i8* %4, !dbg !11328
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !11329 !ctir !1788 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dir.addr = alloca i8*, align 8, !ctir !112
  %base.addr = alloca i8*, align 8, !ctir !112
  %base_in_result.addr = alloca i8**, align 8, !ctir !116
  %dirbase = alloca i8*, align 8, !ctir !112
  %dirbaselen = alloca i64, align 8, !ctir !52
  %dirlen = alloca i64, align 8, !ctir !52
  %baselen = alloca i64, align 8, !ctir !52
  %sep = alloca i8, align 1, !ctir !8
  %p_concat = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !11331, metadata !DIExpression()), !dbg !11332
  store i8* %base, i8** %base.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !11333, metadata !DIExpression()), !dbg !11334
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !11335, metadata !DIExpression()), !dbg !11336
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !11337, metadata !DIExpression()), !dbg !11338
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11339, !tbaa !2993
  %call = call i8* @last_component(i8* %0) #14, !dbg !11340
  store i8* %call, i8** %dirbase, align 8, !dbg !11338, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !11341, metadata !DIExpression()), !dbg !11342
  %1 = load i8*, i8** %dirbase, align 8, !dbg !11343, !tbaa !2993
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !11344
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !11342, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !11345, metadata !DIExpression()), !dbg !11346
  %2 = load i8*, i8** %dirbase, align 8, !dbg !11347, !tbaa !2993
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !11348, !tbaa !2993
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11349
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11349
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11349
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !11350, !tbaa !3837
  %add = add i64 %sub.ptr.sub, %4, !dbg !11351
  store i64 %add, i64* %dirlen, align 8, !dbg !11346, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !11352, metadata !DIExpression()), !dbg !11353
  %5 = load i8*, i8** %base.addr, align 8, !dbg !11354, !tbaa !2993
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !11355
  store i64 %call2, i64* %baselen, align 8, !dbg !11353, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !11356, metadata !DIExpression()), !dbg !11357
  store i8 0, i8* %sep, align 1, !dbg !11357, !tbaa !3652
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !11358, !tbaa !3837
  %tobool = icmp ne i64 %6, 0, !dbg !11358
  br i1 %tobool, label %if.then, label %if.else, !dbg !11360

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !11361, !tbaa !2993
  %8 = load i64, i64* %dirlen, align 8, !dbg !11361, !tbaa !3837
  %sub = sub i64 %8, 1, !dbg !11361
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !11361, !ctir !112
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11361, !tbaa !3652
  %conv = sext i8 %9 to i32, !dbg !11361
  %cmp = icmp eq i32 %conv, 47, !dbg !11361
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11364

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !11365, !tbaa !2993
  %11 = load i8, i8* %10, align 1, !dbg !11365, !tbaa !3652, !ctir !113
  %conv4 = sext i8 %11 to i32, !dbg !11365
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !11365
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !11366

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !11367, !tbaa !3652
  br label %if.end, !dbg !11368

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !11369

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !11370, !tbaa !2993
  %13 = load i8, i8* %12, align 1, !dbg !11370, !tbaa !3652, !ctir !113
  %conv8 = sext i8 %13 to i32, !dbg !11370
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !11370
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11372

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !11373, !tbaa !3652
  br label %if.end12, !dbg !11375

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !11376, metadata !DIExpression()), !dbg !11377
  %14 = load i64, i64* %dirlen, align 8, !dbg !11378, !tbaa !3837
  %15 = load i8, i8* %sep, align 1, !dbg !11379, !tbaa !3652
  %conv14 = sext i8 %15 to i32, !dbg !11379
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11380
  %conv16 = zext i1 %cmp15 to i32, !dbg !11380
  %conv17 = sext i32 %conv16 to i64, !dbg !11381
  %add18 = add i64 %14, %conv17, !dbg !11382
  %16 = load i64, i64* %baselen, align 8, !dbg !11383, !tbaa !3837
  %add19 = add i64 %add18, %16, !dbg !11384
  %add20 = add i64 %add19, 1, !dbg !11385
  %call21 = call noalias i8* @malloc(i64 %add20) #12, !dbg !11386
  store i8* %call21, i8** %p_concat, align 8, !dbg !11377, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11387, metadata !DIExpression()), !dbg !11388
  %17 = load i8*, i8** %p_concat, align 8, !dbg !11389, !tbaa !2993
  %cmp22 = icmp eq i8* %17, null, !dbg !11391
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11392

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !11393
  br label %return, !dbg !11393

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !11394, !tbaa !2993
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !11395, !tbaa !2993
  %20 = load i64, i64* %dirlen, align 8, !dbg !11396, !tbaa !3837
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #12, !dbg !11397
  store i8* %call26, i8** %p, align 8, !dbg !11398, !tbaa !2993
  %21 = load i8, i8* %sep, align 1, !dbg !11399, !tbaa !3652
  %22 = load i8*, i8** %p, align 8, !dbg !11400, !tbaa !2993
  store i8 %21, i8* %22, align 1, !dbg !11401, !tbaa !3652, !ctir !8
  %23 = load i8, i8* %sep, align 1, !dbg !11402, !tbaa !3652
  %conv27 = sext i8 %23 to i32, !dbg !11402
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !11403
  %conv29 = zext i1 %cmp28 to i32, !dbg !11403
  %24 = load i8*, i8** %p, align 8, !dbg !11404, !tbaa !2993
  %idx.ext = sext i32 %conv29 to i64, !dbg !11404
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !11404
  store i8* %add.ptr, i8** %p, align 8, !dbg !11404, !tbaa !2993
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11405, !tbaa !2993
  %tobool30 = icmp ne i8** %25, null, !dbg !11405
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11407

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !11408, !tbaa !2993
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11409, !tbaa !2993
  store i8* %26, i8** %27, align 8, !dbg !11410, !tbaa !2993, !ctir !7
  br label %if.end32, !dbg !11411

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !11412, !tbaa !2993
  %29 = load i8*, i8** %base.addr, align 8, !dbg !11413, !tbaa !2993
  %30 = load i64, i64* %baselen, align 8, !dbg !11414, !tbaa !3837
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #12, !dbg !11415
  store i8* %call33, i8** %p, align 8, !dbg !11416, !tbaa !2993
  %31 = load i8*, i8** %p, align 8, !dbg !11417, !tbaa !2993
  store i8 0, i8* %31, align 1, !dbg !11418, !tbaa !3652, !ctir !8
  %32 = load i8*, i8** %p_concat, align 8, !dbg !11419, !tbaa !2993
  store i8* %32, i8** %retval, align 8, !dbg !11420
  br label %return, !dbg !11420

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11421
  ret i8* %33, !dbg !11421
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11422 !ctir !1796 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !428
  %count.addr = alloca i64, align 8, !ctir !52
  %total = alloca i64, align 8, !ctir !52
  %ptr = alloca i8*, align 8, !ctir !112
  %n_rw = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11424, metadata !DIExpression()), !dbg !11425
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11426, metadata !DIExpression()), !dbg !11427
  store i64 %count, i64* %count.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11428, metadata !DIExpression()), !dbg !11429
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11430, metadata !DIExpression()), !dbg !11431
  store i64 0, i64* %total, align 8, !dbg !11431, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11432, metadata !DIExpression()), !dbg !11433
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11434, !tbaa !2993
  store i8* %0, i8** %ptr, align 8, !dbg !11433, !tbaa !2993
  br label %while.cond, !dbg !11435

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11436, !tbaa !3837
  %cmp = icmp ugt i64 %1, 0, !dbg !11437
  br i1 %cmp, label %while.body, label %while.end, !dbg !11435

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11438, metadata !DIExpression()), !dbg !11440
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11441, !tbaa !2980
  %3 = load i8*, i8** %ptr, align 8, !dbg !11442, !tbaa !2993
  %4 = load i64, i64* %count.addr, align 8, !dbg !11443, !tbaa !3837
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !11444
  store i64 %call, i64* %n_rw, align 8, !dbg !11440, !tbaa !3837
  %5 = load i64, i64* %n_rw, align 8, !dbg !11445, !tbaa !3837
  %cmp1 = icmp eq i64 %5, -1, !dbg !11447
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11448

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11449

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11450, !tbaa !3837
  %cmp2 = icmp eq i64 %6, 0, !dbg !11452
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11453

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #15, !dbg !11454
  store i32 28, i32* %call4, align 4, !dbg !11456, !tbaa !2980, !ctir !5
  br label %while.end, !dbg !11457

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11458, !tbaa !3837
  %8 = load i64, i64* %total, align 8, !dbg !11459, !tbaa !3837
  %add = add i64 %8, %7, !dbg !11459
  store i64 %add, i64* %total, align 8, !dbg !11459, !tbaa !3837
  %9 = load i64, i64* %n_rw, align 8, !dbg !11460, !tbaa !3837
  %10 = load i8*, i8** %ptr, align 8, !dbg !11461, !tbaa !2993
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11461
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11461, !tbaa !2993
  %11 = load i64, i64* %n_rw, align 8, !dbg !11462, !tbaa !3837
  %12 = load i64, i64* %count.addr, align 8, !dbg !11463, !tbaa !3837
  %sub = sub i64 %12, %11, !dbg !11463
  store i64 %sub, i64* %count.addr, align 8, !dbg !11463, !tbaa !3837
  br label %while.cond, !dbg !11435, !llvm.loop !11464

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11466, !tbaa !3837
  ret i64 %13, !dbg !11467
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #9 !dbg !11468 !ctir !731 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11469, metadata !DIExpression()), !dbg !11470
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11471, !tbaa !2993
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11472, !ctir !734
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11472, !tbaa !11473, !ctir !52
  ret i64 %1, !dbg !11475
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #9 !dbg !11476 !ctir !731 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11477, metadata !DIExpression()), !dbg !11478
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11479, !tbaa !2993
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11480, !ctir !734
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11480, !tbaa !11481, !ctir !52
  ret i64 %1, !dbg !11482
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #9 !dbg !11483 !ctir !731 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11484, metadata !DIExpression()), !dbg !11485
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11486, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11487, !ctir !734
  %1 = load i64, i64* %n_entries, align 8, !dbg !11487, !tbaa !11488, !ctir !52
  ret i64 %1, !dbg !11489
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #9 !dbg !11490 !ctir !731 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !746
  %max_bucket_length = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !746
  %bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11491, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11493, metadata !DIExpression()), !dbg !11494
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11495, metadata !DIExpression()), !dbg !11496
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11496, !tbaa !3837
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11497, !tbaa !2993
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11499, !ctir !734
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11499, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11501, !tbaa !2993
  br label %for.cond, !dbg !11502

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11503, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11505, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11506, !ctir !734
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11506, !tbaa !11507, !ctir !746
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11508
  br i1 %cmp, label %for.body, label %for.end, !dbg !11509

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11510, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11513, !ctir !747
  %6 = load i8*, i8** %data, align 8, !dbg !11513, !tbaa !11514, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11510
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11516

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11517, metadata !DIExpression()), !dbg !11519
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11520, !tbaa !2993
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11519, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11521, metadata !DIExpression()), !dbg !11522
  store i64 1, i64* %bucket_length, align 8, !dbg !11522, !tbaa !3837
  br label %while.cond, !dbg !11523

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11524, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11525, !ctir !747
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11525, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11527, !tbaa !2993
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11528, !tbaa !2993
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11523
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11523

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11529, !tbaa !3837
  %inc = add i64 %11, 1, !dbg !11529
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11529, !tbaa !3837
  br label %while.cond, !dbg !11523, !llvm.loop !11530

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11531, !tbaa !3837
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11533, !tbaa !3837
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11534
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11535

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11536, !tbaa !3837
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11537, !tbaa !3837
  br label %if.end, !dbg !11538

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11539

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11540

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11541, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11541
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11541, !tbaa !2993
  br label %for.cond, !dbg !11542, !llvm.loop !11543

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11545, !tbaa !3837
  ret i64 %16, !dbg !11546
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #9 !dbg !11547 !ctir !773 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !746
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %n_entries = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !746
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11548, metadata !DIExpression()), !dbg !11549
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11550, metadata !DIExpression()), !dbg !11551
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11552, metadata !DIExpression()), !dbg !11553
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11553, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11554, metadata !DIExpression()), !dbg !11555
  store i64 0, i64* %n_entries, align 8, !dbg !11555, !tbaa !3837
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11556, !tbaa !2993
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11558, !ctir !734
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11558, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11559, !tbaa !2993
  br label %for.cond, !dbg !11560

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11561, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11563, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11564, !ctir !734
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11564, !tbaa !11507, !ctir !746
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11565
  br i1 %cmp, label %for.body, label %for.end, !dbg !11566

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11567, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11570, !ctir !747
  %6 = load i8*, i8** %data, align 8, !dbg !11570, !tbaa !11514, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11567
  br i1 %tobool, label %if.then, label %if.end, !dbg !11571

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11572, metadata !DIExpression()), !dbg !11574
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11575, !tbaa !2993
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11574, !tbaa !2993
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11576, !tbaa !3837
  %inc = add i64 %8, 1, !dbg !11576
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11576, !tbaa !3837
  %9 = load i64, i64* %n_entries, align 8, !dbg !11577, !tbaa !3837
  %inc2 = add i64 %9, 1, !dbg !11577
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11577, !tbaa !3837
  br label %while.cond, !dbg !11578

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11579, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11580, !ctir !747
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11580, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11581, !tbaa !2993
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11582, !tbaa !2993
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11578
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11578

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11583, !tbaa !3837
  %inc4 = add i64 %13, 1, !dbg !11583
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11583, !tbaa !3837
  br label %while.cond, !dbg !11578, !llvm.loop !11584

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11585

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11586

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11587, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11587
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11587, !tbaa !2993
  br label %for.cond, !dbg !11588, !llvm.loop !11589

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11591, !tbaa !3837
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11593, !tbaa !2993
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11594, !ctir !734
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11594, !tbaa !11481, !ctir !52
  %cmp6 = icmp eq i64 %15, %17, !dbg !11595
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11596

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11597, !tbaa !3837
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11598, !tbaa !2993
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11599, !ctir !734
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11599, !tbaa !11488, !ctir !52
  %cmp8 = icmp eq i64 %18, %20, !dbg !11600
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11601

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11602
  br label %return, !dbg !11602

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11603
  br label %return, !dbg !11603

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11604
  ret i1 %21, !dbg !11604
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11605 !ctir !775 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !777
  %n_entries = alloca i64, align 8, !ctir !52
  %n_buckets = alloca i64, align 8, !ctir !52
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %max_bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11608, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11610, metadata !DIExpression()), !dbg !11611
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11612, !tbaa !2993
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11613
  store i64 %call, i64* %n_entries, align 8, !dbg !11611, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11614, metadata !DIExpression()), !dbg !11615
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11616, !tbaa !2993
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11617
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11615, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11618, metadata !DIExpression()), !dbg !11619
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11620, !tbaa !2993
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11621
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11619, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11622, metadata !DIExpression()), !dbg !11623
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11624, !tbaa !2993
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11625
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11623, !tbaa !3837
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11626, !tbaa !2993
  %5 = load i64, i64* %n_entries, align 8, !dbg !11627, !tbaa !3837
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.265, i64 0, i64 0), i64 %5), !dbg !11628
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11629, !tbaa !2993
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11630, !tbaa !3837
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.266, i64 0, i64 0), i64 %7), !dbg !11631
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11632, !tbaa !2993
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11633, !tbaa !3837
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11634, !tbaa !3837
  %conv = uitofp i64 %10 to double, !dbg !11634
  %mul = fmul double 1.000000e+02, %conv, !dbg !11635
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11636, !tbaa !3837
  %conv6 = uitofp i64 %11 to double, !dbg !11636
  %div = fdiv double %mul, %conv6, !dbg !11637
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.267, i64 0, i64 0), i64 %9, double %div), !dbg !11638
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11639, !tbaa !2993
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11640, !tbaa !3837
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.268, i64 0, i64 0), i64 %13), !dbg !11641
  ret void, !dbg !11642
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11643 !ctir !817 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %entry.addr = alloca i8*, align 8, !ctir !428
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !746
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !746
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11644, metadata !DIExpression()), !dbg !11645
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11646, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11648, metadata !DIExpression()), !dbg !11649
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11650, !tbaa !2993
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11651, !tbaa !2993
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11652
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11649, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11653, metadata !DIExpression()), !dbg !11654
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11655, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11657, !ctir !747
  %3 = load i8*, i8** %data, align 8, !dbg !11657, !tbaa !11514, !ctir !47
  %cmp = icmp eq i8* %3, null, !dbg !11658
  br i1 %cmp, label %if.then, label %if.end, !dbg !11659

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11660
  br label %return, !dbg !11660

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11661, !tbaa !2993
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11663, !tbaa !2993
  br label %for.cond, !dbg !11664

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11665, !tbaa !2993
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11667
  br i1 %tobool, label %for.body, label %for.end, !dbg !11667

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11668, !tbaa !2993
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11670, !tbaa !2993
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11671, !ctir !747
  %8 = load i8*, i8** %data2, align 8, !dbg !11671, !tbaa !11514, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !11672
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11673

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11674, !tbaa !2993
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11675, !ctir !734
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11675, !tbaa !11676, !ctir !767
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11677, !tbaa !2993
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11678, !tbaa !2993
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11679, !ctir !747
  %13 = load i8*, i8** %data4, align 8, !dbg !11679, !tbaa !11514, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11674
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11680

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11681, !tbaa !2993
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11682, !ctir !747
  %15 = load i8*, i8** %data7, align 8, !dbg !11682, !tbaa !11514, !ctir !47
  store i8* %15, i8** %retval, align 8, !dbg !11683
  br label %return, !dbg !11683

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11684

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11685, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11686, !ctir !747
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11686, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11687, !tbaa !2993
  br label %for.cond, !dbg !11688, !llvm.loop !11689

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11691
  br label %return, !dbg !11691

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11692
  ret i8* %18, !dbg !11692
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11693 !ctir !847 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %key.addr = alloca i8*, align 8, !ctir !428
  %n = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11694, metadata !DIExpression()), !dbg !11695
  store i8* %key, i8** %key.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11698, metadata !DIExpression()), !dbg !11699
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11700, !tbaa !2993
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11701, !ctir !734
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11701, !tbaa !11702, !ctir !764
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11703, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11704, !tbaa !2993
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11705, !ctir !734
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11705, !tbaa !11473, !ctir !52
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11700
  store i64 %call, i64* %n, align 8, !dbg !11699, !tbaa !3837
  %5 = load i64, i64* %n, align 8, !dbg !11706, !tbaa !3837
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11708, !tbaa !2993
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11709, !ctir !734
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11709, !tbaa !11473, !ctir !52
  %cmp = icmp ult i64 %5, %7, !dbg !11710
  br i1 %cmp, label %if.end, label %if.then, !dbg !11711

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11712
  unreachable, !dbg !11712

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11713, !tbaa !2993
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11714, !ctir !734
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11714, !tbaa !11500, !ctir !740
  %10 = load i64, i64* %n, align 8, !dbg !11715, !tbaa !3837
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11716
  ret %struct.hash_entry* %add.ptr, !dbg !11717
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #9 !dbg !11718 !ctir !819 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !746
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11719, metadata !DIExpression()), !dbg !11720
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11721, metadata !DIExpression()), !dbg !11722
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11723, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11725, !ctir !734
  %1 = load i64, i64* %n_entries, align 8, !dbg !11725, !tbaa !11488, !ctir !52
  %cmp = icmp eq i64 %1, 0, !dbg !11726
  br i1 %cmp, label %if.then, label %if.end, !dbg !11727

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11728
  br label %return, !dbg !11728

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11729, !tbaa !2993
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11731, !ctir !734
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11731, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11732, !tbaa !2993
  br label %for.cond, !dbg !11733

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11734, !tbaa !2993
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11737, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11738, !ctir !734
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11738, !tbaa !11507, !ctir !746
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11739
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11740

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11741
  unreachable, !dbg !11741

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11742, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11744, !ctir !747
  %8 = load i8*, i8** %data, align 8, !dbg !11744, !tbaa !11514, !ctir !47
  %tobool = icmp ne i8* %8, null, !dbg !11742
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11745

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11746, !tbaa !2993
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11747, !ctir !747
  %10 = load i8*, i8** %data5, align 8, !dbg !11747, !tbaa !11514, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !11748
  br label %return, !dbg !11748

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11749

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11750, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11750
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11750, !tbaa !2993
  br label %for.cond, !dbg !11751, !llvm.loop !11752

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11755
  ret i8* %12, !dbg !11755
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11756 !ctir !817 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %entry.addr = alloca i8*, align 8, !ctir !428
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !746
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !746
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11757, metadata !DIExpression()), !dbg !11758
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11759, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11761, metadata !DIExpression()), !dbg !11762
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11763, !tbaa !2993
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11764, !tbaa !2993
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11765
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11762, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11766, metadata !DIExpression()), !dbg !11767
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11768, !tbaa !2993
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11769, !tbaa !2993
  br label %do.body, !dbg !11770

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11771, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11774, !ctir !747
  %4 = load i8*, i8** %data, align 8, !dbg !11774, !tbaa !11514, !ctir !47
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11775, !tbaa !2993
  %cmp = icmp eq i8* %4, %5, !dbg !11776
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11777

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11778, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11779, !ctir !747
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11779, !tbaa !11526, !ctir !740
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11778
  br i1 %tobool, label %if.then, label %if.end, !dbg !11780

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11781, !tbaa !2993
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11782, !ctir !747
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11782, !tbaa !11526, !ctir !740
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11783, !ctir !741
  %10 = load i8*, i8** %data3, align 8, !dbg !11783, !tbaa !11514, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !11784
  br label %return, !dbg !11784

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11785, !tbaa !2993
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11786, !ctir !747
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11786, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11787, !tbaa !2993
  br label %do.cond, !dbg !11788

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11789, !tbaa !2993
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11790
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11788, !llvm.loop !11791

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11793

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11794, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11794
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11794, !tbaa !2993
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11795, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11796, !ctir !734
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11796, !tbaa !11507, !ctir !746
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11797
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11793

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11798, !tbaa !2993
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11800, !ctir !747
  %18 = load i8*, i8** %data7, align 8, !dbg !11800, !tbaa !11514, !ctir !47
  %tobool8 = icmp ne i8* %18, null, !dbg !11798
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11801

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11802, !tbaa !2993
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11803, !ctir !747
  %20 = load i8*, i8** %data10, align 8, !dbg !11803, !tbaa !11514, !ctir !47
  store i8* %20, i8** %retval, align 8, !dbg !11804
  br label %return, !dbg !11804

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11793, !llvm.loop !11805

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11807
  br label %return, !dbg !11807

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11808
  ret i8* %21, !dbg !11808
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11809 !ctir !821 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %buffer.addr = alloca i8**, align 8, !ctir !823
  %buffer_size.addr = alloca i64, align 8, !ctir !52
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !746
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !746
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11814, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11816, metadata !DIExpression()), !dbg !11817
  store i64 0, i64* %counter, align 8, !dbg !11817, !tbaa !3837
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11818, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11820, metadata !DIExpression()), !dbg !11821
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11822, !tbaa !2993
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11824, !ctir !734
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11824, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11825, !tbaa !2993
  br label %for.cond, !dbg !11826

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11827, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11829, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11830, !ctir !734
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11830, !tbaa !11507, !ctir !746
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11831
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11832

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11833, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11836, !ctir !747
  %6 = load i8*, i8** %data, align 8, !dbg !11836, !tbaa !11514, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11833
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11837

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11838, !tbaa !2993
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11841, !tbaa !2993
  br label %for.cond2, !dbg !11842

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11843, !tbaa !2993
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11845
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11845

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11846, !tbaa !3837
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11849, !tbaa !3837
  %cmp5 = icmp uge i64 %9, %10, !dbg !11850
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11851

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11852, !tbaa !3837
  store i64 %11, i64* %retval, align 8, !dbg !11853
  br label %return, !dbg !11853

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11854, !tbaa !2993
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11855, !ctir !747
  %13 = load i8*, i8** %data7, align 8, !dbg !11855, !tbaa !11514, !ctir !47
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11856, !tbaa !2993
  %15 = load i64, i64* %counter, align 8, !dbg !11857, !tbaa !3837
  %inc = add i64 %15, 1, !dbg !11857
  store i64 %inc, i64* %counter, align 8, !dbg !11857, !tbaa !3837
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11856, !ctir !823
  store i8* %13, i8** %arrayidx, align 8, !dbg !11858, !tbaa !2993
  br label %for.inc, !dbg !11859

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11860, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11861, !ctir !747
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11861, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11862, !tbaa !2993
  br label %for.cond2, !dbg !11863, !llvm.loop !11864

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11866

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11867

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11868, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11868
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11868, !tbaa !2993
  br label %for.cond, !dbg !11869, !llvm.loop !11870

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11872, !tbaa !3837
  store i64 %19, i64* %retval, align 8, !dbg !11873
  br label %return, !dbg !11873

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11874
  ret i64 %20, !dbg !11874
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11875 !ctir !824 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !733
  %processor.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !826
  %processor_data.addr = alloca i8*, align 8, !ctir !47
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !746
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !746
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11876, metadata !DIExpression()), !dbg !11877
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11878, metadata !DIExpression()), !dbg !11879
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11880, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11882, metadata !DIExpression()), !dbg !11883
  store i64 0, i64* %counter, align 8, !dbg !11883, !tbaa !3837
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11884, metadata !DIExpression()), !dbg !11885
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11886, metadata !DIExpression()), !dbg !11887
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11888, !tbaa !2993
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11890, !ctir !734
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11890, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11891, !tbaa !2993
  br label %for.cond, !dbg !11892

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11893, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11895, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11896, !ctir !734
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11896, !tbaa !11507, !ctir !746
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11897
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11898

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11899, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11902, !ctir !747
  %6 = load i8*, i8** %data, align 8, !dbg !11902, !tbaa !11514, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11899
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11903

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11904, !tbaa !2993
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11907, !tbaa !2993
  br label %for.cond2, !dbg !11908

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11909, !tbaa !2993
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11911
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11911

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11912, !tbaa !2993
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11915, !tbaa !2993
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11916, !ctir !747
  %11 = load i8*, i8** %data5, align 8, !dbg !11916, !tbaa !11514, !ctir !47
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11917, !tbaa !2993
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11912
  br i1 %call, label %if.end, label %if.then6, !dbg !11918

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11919, !tbaa !3837
  store i64 %13, i64* %retval, align 8, !dbg !11920
  br label %return, !dbg !11920

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11921, !tbaa !3837
  %inc = add i64 %14, 1, !dbg !11921
  store i64 %inc, i64* %counter, align 8, !dbg !11921, !tbaa !3837
  br label %for.inc, !dbg !11922

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11923, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11924, !ctir !747
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11924, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11925, !tbaa !2993
  br label %for.cond2, !dbg !11926, !llvm.loop !11927

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11929

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11930

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11931, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11931
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11931, !tbaa !2993
  br label %for.cond, !dbg !11932, !llvm.loop !11933

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11935, !tbaa !3837
  store i64 %18, i64* %retval, align 8, !dbg !11936
  br label %return, !dbg !11936

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11937
  ret i64 %19, !dbg !11937
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #9 !dbg !11938 !ctir !830 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !112
  %n_buckets.addr = alloca i64, align 8, !ctir !52
  %value = alloca i64, align 8, !ctir !52
  %ch = alloca i8, align 1, !ctir !468
  store i8* %string, i8** %string.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11939, metadata !DIExpression()), !dbg !11940
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11941, metadata !DIExpression()), !dbg !11942
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11943, metadata !DIExpression()), !dbg !11944
  store i64 0, i64* %value, align 8, !dbg !11944, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11945, metadata !DIExpression()), !dbg !11946
  br label %for.cond, !dbg !11947

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11948, !tbaa !2993
  %1 = load i8, i8* %0, align 1, !dbg !11951, !tbaa !3652, !ctir !113
  store i8 %1, i8* %ch, align 1, !dbg !11952, !tbaa !3652
  %tobool = icmp ne i8 %1, 0, !dbg !11953
  br i1 %tobool, label %for.body, label %for.end, !dbg !11953

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11954, !tbaa !3837
  %mul = mul i64 %2, 31, !dbg !11955
  %3 = load i8, i8* %ch, align 1, !dbg !11956, !tbaa !3652
  %conv = zext i8 %3 to i64, !dbg !11956
  %add = add i64 %mul, %conv, !dbg !11957
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11958, !tbaa !3837
  %rem = urem i64 %add, %4, !dbg !11959
  store i64 %rem, i64* %value, align 8, !dbg !11960, !tbaa !3837
  br label %for.inc, !dbg !11961

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11962, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11962
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11962, !tbaa !2993
  br label %for.cond, !dbg !11963, !llvm.loop !11964

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11966, !tbaa !3837
  ret i64 %6, !dbg !11967
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11968 !ctir !832 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !834
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11969, metadata !DIExpression()), !dbg !11970
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11971, !tbaa !2993
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11972, !tbaa.struct !11973
  ret void, !dbg !11976
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11977 !ctir !835 {
entry:
  %retval = alloca %struct.hash_table*, align 8, !ctir !837
  %candidate.addr = alloca i64, align 8, !ctir !52
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !752
  %hasher.addr = alloca i64 (i8*, i64)*, align 8, !ctir !764
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !767
  %data_freer.addr = alloca void (i8*)*, align 8, !ctir !770
  %table = alloca %struct.hash_table*, align 8, !ctir !837
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11978, metadata !DIExpression()), !dbg !11979
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11980, metadata !DIExpression()), !dbg !11981
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11982, metadata !DIExpression()), !dbg !11983
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11986, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11988, metadata !DIExpression()), !dbg !11989
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11990, !tbaa !2993
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11992
  br i1 %cmp, label %if.then, label %if.end, !dbg !11993

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11994, !tbaa !2993
  br label %if.end, !dbg !11995

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11996, !tbaa !2993
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11998
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11999

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12000, !tbaa !2993
  br label %if.end3, !dbg !12001

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #12, !dbg !12002
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !12002
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !12003, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12004, !tbaa !2993
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !12006
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !12007

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12008
  br label %return, !dbg !12008

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12009, !tbaa !2993
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !12009
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !12011

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12012, !tbaa !2993
  br label %if.end8, !dbg !12013

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12014, !tbaa !2993
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12015, !tbaa !2993
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !12016, !ctir !735
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !12017, !tbaa !12018, !ctir !752
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12019, !tbaa !2993
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !12021
  br i1 %call10, label %if.end12, label %if.then11, !dbg !12022

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !12023

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12025, !tbaa !3837
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12026, !tbaa !2993
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !12027
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12028, !tbaa !2993
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !12029, !ctir !735
  store i64 %call13, i64* %n_buckets, align 8, !dbg !12030, !tbaa !11473, !ctir !52
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12031, !tbaa !2993
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12033, !ctir !735
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !12033, !tbaa !11473, !ctir !52
  %tobool15 = icmp ne i64 %12, 0, !dbg !12031
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12034

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !12035

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12036, !tbaa !2993
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12037, !ctir !735
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !12037, !tbaa !11473, !ctir !52
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #12, !dbg !12038
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !12038
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12039, !tbaa !2993
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !12040, !ctir !735
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !12041, !tbaa !11500, !ctir !740
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12042, !tbaa !2993
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !12044, !ctir !735
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !12044, !tbaa !11500, !ctir !740
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !12045
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !12046

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !12047

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12048, !tbaa !2993
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !12049, !ctir !735
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !12049, !tbaa !11500, !ctir !740
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12050, !tbaa !2993
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !12051, !ctir !735
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !12051, !tbaa !11473, !ctir !52
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !12052
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12053, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12054, !ctir !735
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12055, !tbaa !11507, !ctir !746
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12056, !tbaa !2993
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !12057, !ctir !735
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12058, !tbaa !11481, !ctir !52
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12059, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !12060, !ctir !735
  store i64 0, i64* %n_entries, align 8, !dbg !12061, !tbaa !11488, !ctir !52
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !12062, !tbaa !2993
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12063, !tbaa !2993
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !12064, !ctir !735
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !12065, !tbaa !11702, !ctir !764
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !12066, !tbaa !2993
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12067, !tbaa !2993
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !12068, !ctir !735
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !12069, !tbaa !11676, !ctir !767
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !12070, !tbaa !2993
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12071, !tbaa !2993
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12072, !ctir !735
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !12073, !tbaa !12074, !ctir !770
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12075, !tbaa !2993
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12076, !ctir !735
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !12077, !tbaa !12078, !ctir !740
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12079, !tbaa !2993
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !12080
  br label %return, !dbg !12080

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !12081), !dbg !12082
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !12083, !tbaa !2993
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !12083
  call void @free(i8* %35) #12, !dbg !12084
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !12085
  br label %return, !dbg !12085

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !12086
  ret %struct.hash_table* %36, !dbg !12086
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !12087 !ctir !520 {
entry:
  %data.addr = alloca i8*, align 8, !ctir !428
  %n.addr = alloca i64, align 8, !ctir !52
  %val = alloca i64, align 8, !ctir !52
  store i8* %data, i8** %data.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12088, metadata !DIExpression()), !dbg !12089
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12090, metadata !DIExpression()), !dbg !12091
  call void @llvm.dbg.declare(metadata i64* %val, metadata !12092, metadata !DIExpression()), !dbg !12093
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12094, !tbaa !2993
  %1 = ptrtoint i8* %0 to i64, !dbg !12095
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !12096
  store i64 %call, i64* %val, align 8, !dbg !12093, !tbaa !3837
  %2 = load i64, i64* %val, align 8, !dbg !12097, !tbaa !3837
  %3 = load i64, i64* %n.addr, align 8, !dbg !12098, !tbaa !3837
  %rem = urem i64 %2, %3, !dbg !12099
  ret i64 %rem, !dbg !12100
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !12101 !ctir !522 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !428
  %b.addr = alloca i8*, align 8, !ctir !428
  store i8* %a, i8** %a.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !12102, metadata !DIExpression()), !dbg !12103
  store i8* %b, i8** %b.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !12104, metadata !DIExpression()), !dbg !12105
  %0 = load i8*, i8** %a.addr, align 8, !dbg !12106, !tbaa !2993
  %1 = load i8*, i8** %b.addr, align 8, !dbg !12107, !tbaa !2993
  %cmp = icmp eq i8* %0, %1, !dbg !12108
  ret i1 %cmp, !dbg !12109
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !12110 !ctir !849 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !752
  %epsilon = alloca float, align 4, !ctir !758
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12111, metadata !DIExpression()), !dbg !12112
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !12113, metadata !DIExpression()), !dbg !12114
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12115, !tbaa !2993
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !12116, !ctir !735
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !12116, !tbaa !12018, !ctir !752
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !12114, !tbaa !2993
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !12117, metadata !DIExpression()), !dbg !12118
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12119, !tbaa !2993
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !12121
  br i1 %cmp, label %if.then, label %if.end, !dbg !12122

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !12123
  br label %return, !dbg !12123

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !12124, !tbaa !11974
  %3 = load float, float* %epsilon, align 4, !dbg !12125, !tbaa !11974
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12127, !tbaa !2993
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !12128, !ctir !753
  %5 = load float, float* %growth_threshold, align 4, !dbg !12128, !tbaa !12129, !ctir !758
  %cmp2 = fcmp olt float %3, %5, !dbg !12131
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !12132

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12133, !tbaa !2993
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !12134, !ctir !753
  %7 = load float, float* %growth_threshold3, align 4, !dbg !12134, !tbaa !12129, !ctir !758
  %8 = load float, float* %epsilon, align 4, !dbg !12135, !tbaa !11974
  %sub = fsub float 1.000000e+00, %8, !dbg !12136
  %cmp4 = fcmp olt float %7, %sub, !dbg !12137
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !12138

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !12139, !tbaa !11974
  %add = fadd float 1.000000e+00, %9, !dbg !12140
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12141, !tbaa !2993
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !12142, !ctir !753
  %11 = load float, float* %growth_factor, align 4, !dbg !12142, !tbaa !12143, !ctir !758
  %cmp6 = fcmp olt float %add, %11, !dbg !12144
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !12145

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12146, !tbaa !2993
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12147, !ctir !753
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12147, !tbaa !12148, !ctir !758
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !12149
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !12150

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12151, !tbaa !2993
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !12152, !ctir !753
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !12152, !tbaa !12148, !ctir !758
  %16 = load float, float* %epsilon, align 4, !dbg !12153, !tbaa !11974
  %add11 = fadd float %15, %16, !dbg !12154
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12155, !tbaa !2993
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !12156, !ctir !753
  %18 = load float, float* %shrink_factor, align 4, !dbg !12156, !tbaa !12157, !ctir !758
  %cmp12 = fcmp olt float %add11, %18, !dbg !12158
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !12159

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12160, !tbaa !2993
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !12161, !ctir !753
  %20 = load float, float* %shrink_factor14, align 4, !dbg !12161, !tbaa !12157, !ctir !758
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !12162
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !12163

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12164, !tbaa !2993
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !12165, !ctir !753
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !12165, !tbaa !12148, !ctir !758
  %23 = load float, float* %epsilon, align 4, !dbg !12166, !tbaa !11974
  %add18 = fadd float %22, %23, !dbg !12167
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12168, !tbaa !2993
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !12169, !ctir !753
  %25 = load float, float* %growth_threshold19, align 4, !dbg !12169, !tbaa !12129, !ctir !758
  %cmp20 = fcmp olt float %add18, %25, !dbg !12170
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !12171

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !12172
  br label %return, !dbg !12172

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12173, !tbaa !2993
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !12174, !ctir !735
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !12175, !tbaa !12018, !ctir !752
  store i1 false, i1* %retval, align 1, !dbg !12176
  br label %return, !dbg !12176

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !12177
  ret i1 %27, !dbg !12177
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #9 !dbg !12178 !ctir !851 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %candidate.addr = alloca i64, align 8, !ctir !52
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !752
  %new_candidate = alloca float, align 4, !ctir !758
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12179, metadata !DIExpression()), !dbg !12180
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !12181, metadata !DIExpression()), !dbg !12182
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12183, !tbaa !2993
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !12185, !ctir !753
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !12185, !tbaa !12186
  %tobool = trunc i8 %1 to i1, !dbg !12185, !ctir !117
  br i1 %tobool, label %if.end4, label %if.then, !dbg !12187

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !12188, metadata !DIExpression()), !dbg !12190
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12191, !tbaa !3837
  %conv = uitofp i64 %2 to float, !dbg !12191
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !12192, !tbaa !2993
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !12193, !ctir !753
  %4 = load float, float* %growth_threshold, align 4, !dbg !12193, !tbaa !12129, !ctir !758
  %div = fdiv float %conv, %4, !dbg !12194
  store float %div, float* %new_candidate, align 4, !dbg !12190, !tbaa !11974
  %5 = load float, float* %new_candidate, align 4, !dbg !12195, !tbaa !11974
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !12197
  br i1 %cmp, label %if.then2, label %if.end, !dbg !12198

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !12199
  br label %return, !dbg !12199

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !12200, !tbaa !11974
  %conv3 = fptoui float %6 to i64, !dbg !12200
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !12201, !tbaa !3837
  br label %if.end4, !dbg !12202

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !12203, !tbaa !3837
  %call = call i64 @next_prime(i64 %7) #15, !dbg !12204
  store i64 %call, i64* %candidate.addr, align 8, !dbg !12205, !tbaa !3837
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !12206, !tbaa !3837
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !12206
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !12208

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !12209
  br label %return, !dbg !12209

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !12210, !tbaa !3837
  store i64 %9, i64* %retval, align 8, !dbg !12211
  br label %return, !dbg !12211

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !12212
  ret i64 %10, !dbg !12212
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #10 !dbg !12213 !ctir !853 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12214, metadata !DIExpression()), !dbg !12215
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12216, !tbaa !3837
  %cmp = icmp ult i64 %0, 10, !dbg !12218
  br i1 %cmp, label %if.then, label %if.end, !dbg !12219

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !12220, !tbaa !3837
  br label %if.end, !dbg !12221

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !12222, !tbaa !3837
  %or = or i64 %1, 1, !dbg !12222
  store i64 %or, i64* %candidate.addr, align 8, !dbg !12222, !tbaa !3837
  br label %while.cond, !dbg !12223

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !12224, !tbaa !3837
  %cmp1 = icmp ne i64 -1, %2, !dbg !12225
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !12226

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12227, !tbaa !3837
  %call = call zeroext i1 @is_prime(i64 %3) #15, !dbg !12228
  %lnot = xor i1 %call, true, !dbg !12229
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12230
  br i1 %4, label %while.body, label %while.end, !dbg !12223

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !12231, !tbaa !3837
  %add = add i64 %5, 2, !dbg !12231
  store i64 %add, i64* %candidate.addr, align 8, !dbg !12231, !tbaa !3837
  br label %while.cond, !dbg !12223, !llvm.loop !12232

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !12234, !tbaa !3837
  ret i64 %6, !dbg !12235
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #10 !dbg !12236 !ctir !855 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !52
  %divisor = alloca i64, align 8, !ctir !52
  %square = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12237, metadata !DIExpression()), !dbg !12238
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !12239, metadata !DIExpression()), !dbg !12240
  store i64 3, i64* %divisor, align 8, !dbg !12240, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %square, metadata !12241, metadata !DIExpression()), !dbg !12242
  %0 = load i64, i64* %divisor, align 8, !dbg !12243, !tbaa !3837
  %1 = load i64, i64* %divisor, align 8, !dbg !12244, !tbaa !3837
  %mul = mul i64 %0, %1, !dbg !12245
  store i64 %mul, i64* %square, align 8, !dbg !12242, !tbaa !3837
  br label %while.cond, !dbg !12246

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !12247, !tbaa !3837
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !12248, !tbaa !3837
  %cmp = icmp ult i64 %2, %3, !dbg !12249
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12250

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !12251, !tbaa !3837
  %5 = load i64, i64* %divisor, align 8, !dbg !12252, !tbaa !3837
  %rem = urem i64 %4, %5, !dbg !12253
  %tobool = icmp ne i64 %rem, 0, !dbg !12250
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !12254
  br i1 %6, label %while.body, label %while.end, !dbg !12246

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !12255, !tbaa !3837
  %inc = add i64 %7, 1, !dbg !12255
  store i64 %inc, i64* %divisor, align 8, !dbg !12255, !tbaa !3837
  %8 = load i64, i64* %divisor, align 8, !dbg !12257, !tbaa !3837
  %mul1 = mul i64 4, %8, !dbg !12258
  %9 = load i64, i64* %square, align 8, !dbg !12259, !tbaa !3837
  %add = add i64 %9, %mul1, !dbg !12259
  store i64 %add, i64* %square, align 8, !dbg !12259, !tbaa !3837
  %10 = load i64, i64* %divisor, align 8, !dbg !12260, !tbaa !3837
  %inc2 = add i64 %10, 1, !dbg !12260
  store i64 %inc2, i64* %divisor, align 8, !dbg !12260, !tbaa !3837
  br label %while.cond, !dbg !12246, !llvm.loop !12261

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !12263, !tbaa !3837
  %12 = load i64, i64* %divisor, align 8, !dbg !12264, !tbaa !3837
  %rem3 = urem i64 %11, %12, !dbg !12265
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !12263
  %13 = zext i1 %tobool4 to i64, !dbg !12263
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !12263
  %tobool5 = icmp ne i32 %cond, 0, !dbg !12266
  ret i1 %tobool5, !dbg !12267
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !12268 !ctir !838 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !740
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !740
  %next = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12269, metadata !DIExpression()), !dbg !12270
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12271, metadata !DIExpression()), !dbg !12272
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12273, !tbaa !2993
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12275, !ctir !735
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12275, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12276, !tbaa !2993
  br label %for.cond, !dbg !12277

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12278, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12280, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12281, !ctir !735
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12281, !tbaa !11507, !ctir !746
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12282
  br i1 %cmp, label %for.body, label %for.end24, !dbg !12283

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12284, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12287, !ctir !741
  %6 = load i8*, i8** %data, align 8, !dbg !12287, !tbaa !11514, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12284
  br i1 %tobool, label %if.then, label %if.end22, !dbg !12288

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12289, metadata !DIExpression()), !dbg !12291
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12292, metadata !DIExpression()), !dbg !12293
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12294, !tbaa !2993
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12296, !ctir !741
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12296, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12297, !tbaa !2993
  br label %for.cond3, !dbg !12298

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12299, !tbaa !2993
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12301
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12301

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12302, !tbaa !2993
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12305, !ctir !735
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12305, !tbaa !12074, !ctir !770
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12302
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12306

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12307, !tbaa !2993
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12308, !ctir !735
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12308, !tbaa !12074, !ctir !770
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12309, !tbaa !2993
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12310, !ctir !741
  %15 = load i8*, i8** %data9, align 8, !dbg !12310, !tbaa !11514, !ctir !47
  call void %13(i8* %15), !dbg !12307
  br label %if.end, !dbg !12307

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12311, !tbaa !2993
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12312, !ctir !741
  store i8* null, i8** %data10, align 8, !dbg !12313, !tbaa !11514, !ctir !47
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12314, !tbaa !2993
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12315, !ctir !741
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12315, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12316, !tbaa !2993
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12317, !tbaa !2993
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12318, !ctir !735
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12318, !tbaa !12078, !ctir !740
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12319, !tbaa !2993
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12320, !ctir !741
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12321, !tbaa !11526, !ctir !740
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12322, !tbaa !2993
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12323, !tbaa !2993
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12324, !ctir !735
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12325, !tbaa !12078, !ctir !740
  br label %for.inc, !dbg !12326

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12327, !tbaa !2993
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12328, !tbaa !2993
  br label %for.cond3, !dbg !12329, !llvm.loop !12330

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12332, !tbaa !2993
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12334, !ctir !735
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12334, !tbaa !12074, !ctir !770
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12332
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12335

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12336, !tbaa !2993
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12337, !ctir !735
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12337, !tbaa !12074, !ctir !770
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12338, !tbaa !2993
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12339, !ctir !741
  %30 = load i8*, i8** %data18, align 8, !dbg !12339, !tbaa !11514, !ctir !47
  call void %28(i8* %30), !dbg !12336
  br label %if.end19, !dbg !12336

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12340, !tbaa !2993
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12341, !ctir !741
  store i8* null, i8** %data20, align 8, !dbg !12342, !tbaa !11514, !ctir !47
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12343, !tbaa !2993
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12344, !ctir !741
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12345, !tbaa !11526, !ctir !740
  br label %if.end22, !dbg !12346

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12347

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12348, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12348
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12348, !tbaa !2993
  br label %for.cond, !dbg !12349, !llvm.loop !12350

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12352, !tbaa !2993
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12353, !ctir !735
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12354, !tbaa !11481, !ctir !52
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12355, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12356, !ctir !735
  store i64 0, i64* %n_entries, align 8, !dbg !12357, !tbaa !11488, !ctir !52
  ret void, !dbg !12358
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !12359 !ctir !838 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !740
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !740
  %next = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12360, metadata !DIExpression()), !dbg !12361
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12362, metadata !DIExpression()), !dbg !12363
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12364, metadata !DIExpression()), !dbg !12365
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12366, metadata !DIExpression()), !dbg !12367
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12368, !tbaa !2993
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12370, !ctir !735
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12370, !tbaa !12074, !ctir !770
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12368
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12371

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12372, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12373, !ctir !735
  %3 = load i64, i64* %n_entries, align 8, !dbg !12373, !tbaa !11488, !ctir !52
  %tobool1 = icmp ne i64 %3, 0, !dbg !12372
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12374

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12375, !tbaa !2993
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12378, !ctir !735
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12378, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12379, !tbaa !2993
  br label %for.cond, !dbg !12380

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12381, !tbaa !2993
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12383, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12384, !ctir !735
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12384, !tbaa !11507, !ctir !746
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12385
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12386

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12387, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12390, !ctir !741
  %10 = load i8*, i8** %data, align 8, !dbg !12390, !tbaa !11514, !ctir !47
  %tobool3 = icmp ne i8* %10, null, !dbg !12387
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12391

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12392, !tbaa !2993
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12395, !tbaa !2993
  br label %for.cond5, !dbg !12396

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12397, !tbaa !2993
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12399
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12399

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12400, !tbaa !2993
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12401, !ctir !735
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12401, !tbaa !12074, !ctir !770
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12402, !tbaa !2993
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12403, !ctir !741
  %16 = load i8*, i8** %data9, align 8, !dbg !12403, !tbaa !11514, !ctir !47
  call void %14(i8* %16), !dbg !12400
  br label %for.inc, !dbg !12400

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12404, !tbaa !2993
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12405, !ctir !741
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12405, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12406, !tbaa !2993
  br label %for.cond5, !dbg !12407, !llvm.loop !12408

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12410

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12411

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12412, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12412
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12412, !tbaa !2993
  br label %for.cond, !dbg !12413, !llvm.loop !12414

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12416

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12417, !tbaa !2993
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12419, !ctir !735
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12419, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12420, !tbaa !2993
  br label %for.cond15, !dbg !12421

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12422, !tbaa !2993
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12424, !tbaa !2993
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12425, !ctir !735
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12425, !tbaa !11507, !ctir !746
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12426
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12427

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12428, !tbaa !2993
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12431, !ctir !741
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12431, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12432, !tbaa !2993
  br label %for.cond20, !dbg !12433

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12434, !tbaa !2993
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12436
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12436

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12437, !tbaa !2993
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12439, !ctir !741
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12439, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12440, !tbaa !2993
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12441, !tbaa !2993
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12441
  call void @free(i8* %31) #12, !dbg !12442
  br label %for.inc24, !dbg !12443

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12444, !tbaa !2993
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12445, !tbaa !2993
  br label %for.cond20, !dbg !12446, !llvm.loop !12447

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12449

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12450, !tbaa !2993
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12450
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12450, !tbaa !2993
  br label %for.cond15, !dbg !12451, !llvm.loop !12452

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12454, !tbaa !2993
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12456, !ctir !735
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12456, !tbaa !12078, !ctir !740
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12457, !tbaa !2993
  br label %for.cond29, !dbg !12458

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12459, !tbaa !2993
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12461
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12461

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12462, !tbaa !2993
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12464, !ctir !741
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12464, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12465, !tbaa !2993
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12466, !tbaa !2993
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12466
  call void @free(i8* %40) #12, !dbg !12467
  br label %for.inc33, !dbg !12468

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12469, !tbaa !2993
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12470, !tbaa !2993
  br label %for.cond29, !dbg !12471, !llvm.loop !12472

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12474, !tbaa !2993
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12475, !ctir !735
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12475, !tbaa !11500, !ctir !740
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12474
  call void @free(i8* %44) #12, !dbg !12476
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12477, !tbaa !2993
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12477
  call void @free(i8* %46) #12, !dbg !12478
  ret void, !dbg !12479
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12480 !ctir !840 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %candidate.addr = alloca i64, align 8, !ctir !52
  %storage = alloca %struct.hash_table, align 8, !ctir !735
  %new_table = alloca %struct.hash_table*, align 8, !ctir !837
  %new_size = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12481, metadata !DIExpression()), !dbg !12482
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12483, metadata !DIExpression()), !dbg !12484
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12485, metadata !DIExpression()), !dbg !12486
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12487, metadata !DIExpression()), !dbg !12488
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12489, metadata !DIExpression()), !dbg !12490
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12491, !tbaa !3837
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12492, !tbaa !2993
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12493, !ctir !735
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12493, !tbaa !12018, !ctir !752
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12494
  store i64 %call, i64* %new_size, align 8, !dbg !12490, !tbaa !3837
  %3 = load i64, i64* %new_size, align 8, !dbg !12495, !tbaa !3837
  %tobool = icmp ne i64 %3, 0, !dbg !12495
  br i1 %tobool, label %if.end, label %if.then, !dbg !12497

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12498
  br label %return, !dbg !12498

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12499, !tbaa !3837
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12501, !tbaa !2993
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12502, !ctir !735
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12502, !tbaa !11473, !ctir !52
  %cmp = icmp eq i64 %4, %6, !dbg !12503
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12504

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12505
  br label %return, !dbg !12505

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12506, !tbaa !2993
  %7 = load i64, i64* %new_size, align 8, !dbg !12507, !tbaa !3837
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #12, !dbg !12508
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12508
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12509, !tbaa !2993
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12510, !ctir !735
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12511, !tbaa !11500, !ctir !740
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12512, !tbaa !2993
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12514, !ctir !735
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12514, !tbaa !11500, !ctir !740
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12515
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12516

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12517
  br label %return, !dbg !12517

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12518, !tbaa !3837
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12519, !tbaa !2993
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12520, !ctir !735
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12521, !tbaa !11473, !ctir !52
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12522, !tbaa !2993
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12523, !ctir !735
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12523, !tbaa !11500, !ctir !740
  %16 = load i64, i64* %new_size, align 8, !dbg !12524, !tbaa !3837
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12525
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12526, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12527, !ctir !735
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12528, !tbaa !11507, !ctir !746
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12529, !tbaa !2993
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12530, !ctir !735
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12531, !tbaa !11481, !ctir !52
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12532, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12533, !ctir !735
  store i64 0, i64* %n_entries, align 8, !dbg !12534, !tbaa !11488, !ctir !52
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12535, !tbaa !2993
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12536, !ctir !735
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12536, !tbaa !12018, !ctir !752
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12537, !tbaa !2993
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12538, !ctir !735
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12539, !tbaa !12018, !ctir !752
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12540, !tbaa !2993
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12541, !ctir !735
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12541, !tbaa !11702, !ctir !764
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12542, !tbaa !2993
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12543, !ctir !735
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12544, !tbaa !11702, !ctir !764
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12545, !tbaa !2993
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12546, !ctir !735
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12546, !tbaa !11676, !ctir !767
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12547, !tbaa !2993
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12548, !ctir !735
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12549, !tbaa !11676, !ctir !767
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12550, !tbaa !2993
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12551, !ctir !735
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12551, !tbaa !12074, !ctir !770
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12552, !tbaa !2993
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12553, !ctir !735
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12554, !tbaa !12074, !ctir !770
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12555, !tbaa !2993
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12556, !ctir !735
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12556, !tbaa !12078, !ctir !740
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12557, !tbaa !2993
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12558, !ctir !735
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12559, !tbaa !12078, !ctir !740
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12560, !tbaa !2993
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12562, !tbaa !2993
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12563
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12564

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12565, !tbaa !2993
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12567, !ctir !735
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12567, !tbaa !11500, !ctir !740
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12565
  call void @free(i8* %39) #12, !dbg !12568
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12569, !tbaa !2993
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12570, !ctir !735
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12570, !tbaa !11500, !ctir !740
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12571, !tbaa !2993
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12572, !ctir !735
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12573, !tbaa !11500, !ctir !740
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12574, !tbaa !2993
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12575, !ctir !735
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12575, !tbaa !11507, !ctir !746
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12576, !tbaa !2993
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12577, !ctir !735
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12578, !tbaa !11507, !ctir !746
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12579, !tbaa !2993
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12580, !ctir !735
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12580, !tbaa !11473, !ctir !52
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12581, !tbaa !2993
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12582, !ctir !735
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12583, !tbaa !11473, !ctir !52
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12584, !tbaa !2993
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12585, !ctir !735
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12585, !tbaa !11481, !ctir !52
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12586, !tbaa !2993
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12587, !ctir !735
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12588, !tbaa !11481, !ctir !52
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12589, !tbaa !2993
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12590, !ctir !735
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12590, !tbaa !12078, !ctir !740
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12591, !tbaa !2993
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12592, !ctir !735
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12593, !tbaa !12078, !ctir !740
  store i1 true, i1* %retval, align 1, !dbg !12594
  br label %return, !dbg !12594

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12595, !tbaa !2993
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12596, !ctir !735
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12596, !tbaa !12078, !ctir !740
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12597, !tbaa !2993
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12598, !ctir !735
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12599, !tbaa !12078, !ctir !740
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12600, !tbaa !2993
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12602, !tbaa !2993
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12603
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12604

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12605, !tbaa !2993
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12606, !tbaa !2993
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12607
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12608

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12609
  unreachable, !dbg !12609

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12610, !tbaa !2993
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12611, !ctir !735
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12611, !tbaa !11500, !ctir !740
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12610
  call void @free(i8* %64) #12, !dbg !12612
  store i1 false, i1* %retval, align 1, !dbg !12613
  br label %return, !dbg !12613

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12614
  ret i1 %65, !dbg !12614
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12615 !ctir !857 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %dst.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %src.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %safe.addr = alloca i8, align 1, !ctir !117
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !740
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !740
  %next = alloca %struct.hash_entry*, align 8, !ctir !740
  %data2 = alloca i8*, align 8, !ctir !47
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !740
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12616, metadata !DIExpression()), !dbg !12617
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12618, metadata !DIExpression()), !dbg !12619
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12620, metadata !DIExpression()), !dbg !12621
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12622, metadata !DIExpression()), !dbg !12623
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12624, metadata !DIExpression()), !dbg !12625
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12626, metadata !DIExpression()), !dbg !12627
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12628, !tbaa !2993
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12630, !ctir !735
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12630, !tbaa !11500, !ctir !740
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12631, !tbaa !2993
  br label %for.cond, !dbg !12632

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12633, !tbaa !2993
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12635, !tbaa !2993
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12636, !ctir !735
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12636, !tbaa !11507, !ctir !746
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12637
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12638

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12639, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12641, !ctir !741
  %6 = load i8*, i8** %data, align 8, !dbg !12641, !tbaa !11514, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12639
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12642

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12643, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12646, metadata !DIExpression()), !dbg !12647
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12648, !tbaa !2993
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12650, !ctir !741
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12650, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12651, !tbaa !2993
  br label %for.cond4, !dbg !12652

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12653, !tbaa !2993
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12655
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12655

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12656, !tbaa !2993
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12658, !ctir !741
  %11 = load i8*, i8** %data7, align 8, !dbg !12658, !tbaa !11514, !ctir !47
  store i8* %11, i8** %data2, align 8, !dbg !12659, !tbaa !2993
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12660, !tbaa !2993
  %13 = load i8*, i8** %data2, align 8, !dbg !12661, !tbaa !2993
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12662
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12663, !tbaa !2993
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12664, !tbaa !2993
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12665, !ctir !741
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12665, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12666, !tbaa !2993
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12667, !tbaa !2993
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12669, !ctir !741
  %17 = load i8*, i8** %data9, align 8, !dbg !12669, !tbaa !11514, !ctir !47
  %tobool10 = icmp ne i8* %17, null, !dbg !12667
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12670

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12671, !tbaa !2993
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12673, !ctir !741
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12673, !tbaa !11526, !ctir !740
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12674, !tbaa !2993
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12675, !ctir !741
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12676, !tbaa !11526, !ctir !740
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12677, !tbaa !2993
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12678, !tbaa !2993
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12679, !ctir !741
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12680, !tbaa !11526, !ctir !740
  br label %if.end, !dbg !12681

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12682, !tbaa !2993
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12684, !tbaa !2993
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12685, !ctir !741
  store i8* %23, i8** %data15, align 8, !dbg !12686, !tbaa !11514, !ctir !47
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12687, !tbaa !2993
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12688, !ctir !735
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12689, !tbaa !11481, !ctir !52
  %inc = add i64 %26, 1, !dbg !12689
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12689, !tbaa !11481, !ctir !52
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12690, !tbaa !2993
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12691, !tbaa !2993
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12692
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12693

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12694, !tbaa !2993
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12695, !tbaa !2993
  br label %for.cond4, !dbg !12696, !llvm.loop !12697

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12699, !tbaa !2993
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12700, !ctir !741
  %31 = load i8*, i8** %data16, align 8, !dbg !12700, !tbaa !11514, !ctir !47
  store i8* %31, i8** %data2, align 8, !dbg !12701, !tbaa !2993
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12702, !tbaa !2993
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12703, !ctir !741
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12704, !tbaa !11526, !ctir !740
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12705, !tbaa !3104
  %tobool18 = trunc i8 %33 to i1, !dbg !12705
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12707

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12708

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12709, !tbaa !2993
  %35 = load i8*, i8** %data2, align 8, !dbg !12710, !tbaa !2993
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12711
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12712, !tbaa !2993
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12713, !tbaa !2993
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12715, !ctir !741
  %37 = load i8*, i8** %data22, align 8, !dbg !12715, !tbaa !11514, !ctir !47
  %tobool23 = icmp ne i8* %37, null, !dbg !12713
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12716

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12717, metadata !DIExpression()), !dbg !12719
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12720, !tbaa !2993
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12721
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12719, !tbaa !2993
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12722, !tbaa !2993
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12724
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12725

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12726
  br label %return, !dbg !12726

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12727, !tbaa !2993
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12728, !tbaa !2993
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12729, !ctir !741
  store i8* %40, i8** %data29, align 8, !dbg !12730, !tbaa !11514, !ctir !47
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12731, !tbaa !2993
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12732, !ctir !741
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12732, !tbaa !11526, !ctir !740
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12733, !tbaa !2993
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12734, !ctir !741
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12735, !tbaa !11526, !ctir !740
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12736, !tbaa !2993
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12737, !tbaa !2993
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12738, !ctir !741
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12739, !tbaa !11526, !ctir !740
  br label %if.end37, !dbg !12740

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12741, !tbaa !2993
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12743, !tbaa !2993
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12744, !ctir !741
  store i8* %47, i8** %data34, align 8, !dbg !12745, !tbaa !11514, !ctir !47
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12746, !tbaa !2993
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12747, !ctir !735
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12748, !tbaa !11481, !ctir !52
  %inc36 = add i64 %50, 1, !dbg !12748
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12748, !tbaa !11481, !ctir !52
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12749, !tbaa !2993
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12750, !ctir !741
  store i8* null, i8** %data38, align 8, !dbg !12751, !tbaa !11514, !ctir !47
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12752, !tbaa !2993
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12753, !ctir !735
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12754, !tbaa !11481, !ctir !52
  %dec = add i64 %53, -1, !dbg !12754
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12754, !tbaa !11481, !ctir !52
  br label %if.end40, !dbg !12755

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12641

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12756, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12756
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12756, !tbaa !2993
  br label %for.cond, !dbg !12757, !llvm.loop !12758

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12760
  br label %return, !dbg !12760

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12761
  ret i1 %55, !dbg !12761
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12762 !ctir !859 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %entry.addr = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12763, metadata !DIExpression()), !dbg !12764
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12765, metadata !DIExpression()), !dbg !12766
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12767, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12768, !ctir !741
  store i8* null, i8** %data, align 8, !dbg !12769, !tbaa !11514, !ctir !47
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12770, !tbaa !2993
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12771, !ctir !735
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12771, !tbaa !12078, !ctir !740
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12772, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12773, !ctir !741
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12774, !tbaa !11526, !ctir !740
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12775, !tbaa !2993
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12776, !tbaa !2993
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12777, !ctir !735
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12778, !tbaa !12078, !ctir !740
  ret void, !dbg !12779
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12780 !ctir !864 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %new = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12781, metadata !DIExpression()), !dbg !12782
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12783, metadata !DIExpression()), !dbg !12784
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12785, !tbaa !2993
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12787, !ctir !735
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12787, !tbaa !12078, !ctir !740
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12785
  br i1 %tobool, label %if.then, label %if.else, !dbg !12788

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12789, !tbaa !2993
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12791, !ctir !735
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12791, !tbaa !12078, !ctir !740
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12792, !tbaa !2993
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12793, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12794, !ctir !741
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12794, !tbaa !11526, !ctir !740
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12795, !tbaa !2993
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12796, !ctir !735
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12797, !tbaa !12078, !ctir !740
  br label %if.end, !dbg !12798

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #12, !dbg !12799
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12799
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12801, !tbaa !2993
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12802, !tbaa !2993
  ret %struct.hash_entry* %8, !dbg !12803
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12804 !ctir !842 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %entry.addr = alloca i8*, align 8, !ctir !428
  %matched_ent.addr = alloca i8**, align 8, !ctir !844
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !740
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !752
  %candidate = alloca float, align 4, !ctir !758
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12805, metadata !DIExpression()), !dbg !12806
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12807, metadata !DIExpression()), !dbg !12808
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12809, metadata !DIExpression()), !dbg !12810
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12811, metadata !DIExpression()), !dbg !12812
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12813, metadata !DIExpression()), !dbg !12814
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12815, !tbaa !2993
  %tobool = icmp ne i8* %0, null, !dbg !12815
  br i1 %tobool, label %if.end, label %if.then, !dbg !12817

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12818
  unreachable, !dbg !12818

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12819, !tbaa !2993
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12821, !tbaa !2993
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12822
  store i8* %call, i8** %data, align 8, !dbg !12823, !tbaa !2993
  %cmp = icmp ne i8* %call, null, !dbg !12824
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12825

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12826, !tbaa !2993
  %tobool3 = icmp ne i8** %3, null, !dbg !12826
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12829

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12830, !tbaa !2993
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12831, !tbaa !2993
  store i8* %4, i8** %5, align 8, !dbg !12832, !tbaa !2993, !ctir !428
  br label %if.end5, !dbg !12833

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12834
  br label %return, !dbg !12834

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12835, !tbaa !2993
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12837, !ctir !735
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12837, !tbaa !11481, !ctir !52
  %conv = uitofp i64 %7 to float, !dbg !12835
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12838, !tbaa !2993
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12839, !ctir !735
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12839, !tbaa !12018, !ctir !752
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12840, !ctir !753
  %10 = load float, float* %growth_threshold, align 4, !dbg !12840, !tbaa !12129, !ctir !758
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12841, !tbaa !2993
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12842, !ctir !735
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12842, !tbaa !11473, !ctir !52
  %conv7 = uitofp i64 %12 to float, !dbg !12841
  %mul = fmul float %10, %conv7, !dbg !12843
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12844
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12845

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12846, !tbaa !2993
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12848
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12849, !tbaa !2993
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12851, !ctir !735
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12851, !tbaa !11481, !ctir !52
  %conv13 = uitofp i64 %15 to float, !dbg !12849
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12852, !tbaa !2993
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12853, !ctir !735
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12853, !tbaa !12018, !ctir !752
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12854, !ctir !753
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12854, !tbaa !12129, !ctir !758
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12855, !tbaa !2993
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12856, !ctir !735
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12856, !tbaa !11473, !ctir !52
  %conv17 = uitofp i64 %20 to float, !dbg !12855
  %mul18 = fmul float %18, %conv17, !dbg !12857
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12858
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12859

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12860, metadata !DIExpression()), !dbg !12862
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12863, !tbaa !2993
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12864, !ctir !735
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12864, !tbaa !12018, !ctir !752
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12862, !tbaa !2993
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12865, metadata !DIExpression()), !dbg !12866
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12867, !tbaa !2993
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12868, !ctir !753
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12868, !tbaa !12186
  %tobool24 = trunc i8 %24 to i1, !dbg !12868, !ctir !117
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12867

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12869, !tbaa !2993
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12870, !ctir !735
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12870, !tbaa !11473, !ctir !52
  %conv27 = uitofp i64 %26 to float, !dbg !12869
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12871, !tbaa !2993
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12872, !ctir !753
  %28 = load float, float* %growth_factor, align 4, !dbg !12872, !tbaa !12143, !ctir !758
  %mul28 = fmul float %conv27, %28, !dbg !12873
  br label %cond.end, !dbg !12867

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12874, !tbaa !2993
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12875, !ctir !735
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12875, !tbaa !11473, !ctir !52
  %conv30 = uitofp i64 %30 to float, !dbg !12874
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12876, !tbaa !2993
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12877, !ctir !753
  %32 = load float, float* %growth_factor31, align 4, !dbg !12877, !tbaa !12143, !ctir !758
  %mul32 = fmul float %conv30, %32, !dbg !12878
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12879, !tbaa !2993
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12880, !ctir !753
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12880, !tbaa !12129, !ctir !758
  %mul34 = fmul float %mul32, %34, !dbg !12881
  br label %cond.end, !dbg !12867

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12867
  store float %cond, float* %candidate, align 4, !dbg !12866, !tbaa !11974
  %35 = load float, float* %candidate, align 4, !dbg !12882, !tbaa !11974
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12884
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12885

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12886
  br label %return, !dbg !12886

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12887, !tbaa !2993
  %37 = load float, float* %candidate, align 4, !dbg !12889, !tbaa !11974
  %conv39 = fptoui float %37 to i64, !dbg !12889
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12890
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12891

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12892
  br label %return, !dbg !12892

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12893, !tbaa !2993
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12895, !tbaa !2993
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12896
  %cmp44 = icmp ne i8* %call43, null, !dbg !12897
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12898

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12899
  unreachable, !dbg !12899

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12900

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12901

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12902, !tbaa !2993
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12904, !ctir !741
  %41 = load i8*, i8** %data50, align 8, !dbg !12904, !tbaa !11514, !ctir !47
  %tobool51 = icmp ne i8* %41, null, !dbg !12902
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12905

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12906, metadata !DIExpression()), !dbg !12908
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12909, !tbaa !2993
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12910
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12908, !tbaa !2993
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12911, !tbaa !2993
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12913
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12914

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12915
  br label %return, !dbg !12915

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12916, !tbaa !2993
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12917, !tbaa !2993
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12918, !ctir !741
  store i8* %44, i8** %data58, align 8, !dbg !12919, !tbaa !11514, !ctir !47
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12920, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12921, !ctir !741
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12921, !tbaa !11526, !ctir !740
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12922, !tbaa !2993
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12923, !ctir !741
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12924, !tbaa !11526, !ctir !740
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12925, !tbaa !2993
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12926, !tbaa !2993
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12927, !ctir !741
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12928, !tbaa !11526, !ctir !740
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12929, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12930, !ctir !735
  %52 = load i64, i64* %n_entries, align 8, !dbg !12931, !tbaa !11488, !ctir !52
  %inc = add i64 %52, 1, !dbg !12931
  store i64 %inc, i64* %n_entries, align 8, !dbg !12931, !tbaa !11488, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12932
  br label %return, !dbg !12932

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12933, !tbaa !2993
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12934, !tbaa !2993
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12935, !ctir !741
  store i8* %53, i8** %data62, align 8, !dbg !12936, !tbaa !11514, !ctir !47
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12937, !tbaa !2993
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12938, !ctir !735
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12939, !tbaa !11488, !ctir !52
  %inc64 = add i64 %56, 1, !dbg !12939
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12939, !tbaa !11488, !ctir !52
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12940, !tbaa !2993
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12941, !ctir !735
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12942, !tbaa !11481, !ctir !52
  %inc66 = add i64 %58, 1, !dbg !12942
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12942, !tbaa !11481, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12943
  br label %return, !dbg !12943

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12944
  ret i32 %59, !dbg !12944
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12945 !ctir !861 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %entry.addr = alloca i8*, align 8, !ctir !428
  %bucket_head.addr = alloca %struct.hash_entry**, align 8, !ctir !863
  %delete.addr = alloca i8, align 1, !ctir !117
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !740
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !740
  %data7 = alloca i8*, align 8, !ctir !47
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !740
  %data29 = alloca i8*, align 8, !ctir !47
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12948, metadata !DIExpression()), !dbg !12949
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12950, metadata !DIExpression()), !dbg !12951
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12952, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12954, metadata !DIExpression()), !dbg !12955
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12956, !tbaa !2993
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12957, !tbaa !2993
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12958
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12955, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12959, metadata !DIExpression()), !dbg !12960
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12961, !tbaa !2993
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12962, !tbaa !2993
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12963, !tbaa !2993, !ctir !740
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12964, !tbaa !2993
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12966, !ctir !741
  %5 = load i8*, i8** %data, align 8, !dbg !12966, !tbaa !11514, !ctir !47
  %cmp = icmp eq i8* %5, null, !dbg !12967
  br i1 %cmp, label %if.then, label %if.end, !dbg !12968

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12969
  br label %return, !dbg !12969

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12970, !tbaa !2993
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12972, !tbaa !2993
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12973, !ctir !741
  %8 = load i8*, i8** %data2, align 8, !dbg !12973, !tbaa !11514, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !12974
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12975

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12976, !tbaa !2993
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12977, !ctir !735
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12977, !tbaa !11676, !ctir !767
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12978, !tbaa !2993
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12979, !tbaa !2993
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12980, !ctir !741
  %13 = load i8*, i8** %data4, align 8, !dbg !12980, !tbaa !11514, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12976
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12981

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12982, metadata !DIExpression()), !dbg !12984
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12985, !tbaa !2993
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12986, !ctir !741
  %15 = load i8*, i8** %data8, align 8, !dbg !12986, !tbaa !11514, !ctir !47
  store i8* %15, i8** %data7, align 8, !dbg !12984, !tbaa !2993
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12987, !tbaa !3104
  %tobool = trunc i8 %16 to i1, !dbg !12987
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12989

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12990, !tbaa !2993
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12993, !ctir !741
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12993, !tbaa !11526, !ctir !740
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12990
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12994

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12995, metadata !DIExpression()), !dbg !12997
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12998, !tbaa !2993
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12999, !ctir !741
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12999, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12997, !tbaa !2993
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13000, !tbaa !2993
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13001, !tbaa !2993
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !13002
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !13002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !13002, !tbaa.struct !13003
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13004, !tbaa !2993
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !13005, !tbaa !2993
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !13006
  br label %if.end15, !dbg !13007

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13008, !tbaa !2993
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !13010, !ctir !741
  store i8* null, i8** %data14, align 8, !dbg !13011, !tbaa !11514, !ctir !47
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !13012

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !13013, !tbaa !2993
  store i8* %28, i8** %retval, align 8, !dbg !13014
  br label %return, !dbg !13014

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13015, !tbaa !2993
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !13017, !tbaa !2993
  br label %for.cond, !dbg !13018

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13019, !tbaa !2993
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !13021, !ctir !741
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !13021, !tbaa !11526, !ctir !740
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !13022
  br i1 %tobool19, label %for.body, label %for.end, !dbg !13022

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !13023, !tbaa !2993
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13026, !tbaa !2993
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !13027, !ctir !741
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !13027, !tbaa !11526, !ctir !740
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !13028, !ctir !741
  %35 = load i8*, i8** %data21, align 8, !dbg !13028, !tbaa !11514, !ctir !47
  %cmp22 = icmp eq i8* %32, %35, !dbg !13029
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !13030

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13031, !tbaa !2993
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !13032, !ctir !735
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !13032, !tbaa !11676, !ctir !767
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !13033, !tbaa !2993
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13034, !tbaa !2993
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !13035, !ctir !741
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !13035, !tbaa !11526, !ctir !740
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !13036, !ctir !741
  %41 = load i8*, i8** %data26, align 8, !dbg !13036, !tbaa !11514, !ctir !47
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !13031
  br i1 %call27, label %if.then28, label %if.end39, !dbg !13037

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !13038, metadata !DIExpression()), !dbg !13040
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13041, !tbaa !2993
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !13042, !ctir !741
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !13042, !tbaa !11526, !ctir !740
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !13043, !ctir !741
  %44 = load i8*, i8** %data31, align 8, !dbg !13043, !tbaa !11514, !ctir !47
  store i8* %44, i8** %data29, align 8, !dbg !13040, !tbaa !2993
  %45 = load i8, i8* %delete.addr, align 1, !dbg !13044, !tbaa !3104
  %tobool32 = trunc i8 %45 to i1, !dbg !13044
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !13046

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !13047, metadata !DIExpression()), !dbg !13049
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13050, !tbaa !2993
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !13051, !ctir !741
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !13051, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !13049, !tbaa !2993
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13052, !tbaa !2993
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !13053, !ctir !741
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !13053, !tbaa !11526, !ctir !740
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13054, !tbaa !2993
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !13055, !ctir !741
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !13056, !tbaa !11526, !ctir !740
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13057, !tbaa !2993
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !13058, !tbaa !2993
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !13059
  br label %if.end38, !dbg !13060

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !13061, !tbaa !2993
  store i8* %53, i8** %retval, align 8, !dbg !13062
  br label %return, !dbg !13062

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !13063

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13064, !tbaa !2993
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !13065, !ctir !741
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !13065, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !13066, !tbaa !2993
  br label %for.cond, !dbg !13067, !llvm.loop !13068

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !13070
  br label %return, !dbg !13070

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !13071
  ret i8* %56, !dbg !13071
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13072 !ctir !845 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %entry.addr = alloca i8*, align 8, !ctir !428
  %matched_ent = alloca i8*, align 8, !ctir !428
  %err = alloca i32, align 4, !ctir !5
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13073, metadata !DIExpression()), !dbg !13074
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13075, metadata !DIExpression()), !dbg !13076
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !13077, metadata !DIExpression()), !dbg !13078
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13079, metadata !DIExpression()), !dbg !13080
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13081, !tbaa !2993
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13082, !tbaa !2993
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !13083
  store i32 %call, i32* %err, align 4, !dbg !13080, !tbaa !2980
  %2 = load i32, i32* %err, align 4, !dbg !13084, !tbaa !2980
  %cmp = icmp eq i32 %2, -1, !dbg !13085
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13084

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !13084

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !13086, !tbaa !2980
  %cmp2 = icmp eq i32 %3, 0, !dbg !13087
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !13086

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !13088, !tbaa !2993
  br label %cond.end, !dbg !13086

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !13089, !tbaa !2993
  br label %cond.end, !dbg !13086

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !13086
  br label %cond.end5, !dbg !13084

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !13084
  ret i8* %cond6, !dbg !13090
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !13091 !ctir !845 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !837
  %entry.addr = alloca i8*, align 8, !ctir !428
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !740
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !752
  %candidate = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !740
  %next = alloca %struct.hash_entry*, align 8, !ctir !740
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !13092, metadata !DIExpression()), !dbg !13093
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !13094, metadata !DIExpression()), !dbg !13095
  call void @llvm.dbg.declare(metadata i8** %data, metadata !13096, metadata !DIExpression()), !dbg !13097
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !13098, metadata !DIExpression()), !dbg !13099
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13100, !tbaa !2993
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !13101, !tbaa !2993
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !13102
  store i8* %call, i8** %data, align 8, !dbg !13103, !tbaa !2993
  %2 = load i8*, i8** %data, align 8, !dbg !13104, !tbaa !2993
  %tobool = icmp ne i8* %2, null, !dbg !13104
  br i1 %tobool, label %if.end, label %if.then, !dbg !13106

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !13107
  br label %return, !dbg !13107

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13108, !tbaa !2993
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !13109, !ctir !735
  %4 = load i64, i64* %n_entries, align 8, !dbg !13110, !tbaa !11488, !ctir !52
  %dec = add i64 %4, -1, !dbg !13110
  store i64 %dec, i64* %n_entries, align 8, !dbg !13110, !tbaa !11488, !ctir !52
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !13111, !tbaa !2993
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !13113, !ctir !741
  %6 = load i8*, i8** %data2, align 8, !dbg !13113, !tbaa !11514, !ctir !47
  %tobool3 = icmp ne i8* %6, null, !dbg !13111
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !13114

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13115, !tbaa !2993
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !13117, !ctir !735
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !13118, !tbaa !11481, !ctir !52
  %dec5 = add i64 %8, -1, !dbg !13118
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !13118, !tbaa !11481, !ctir !52
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13119, !tbaa !2993
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !13121, !ctir !735
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !13121, !tbaa !11481, !ctir !52
  %conv = uitofp i64 %10 to float, !dbg !13119
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13122, !tbaa !2993
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !13123, !ctir !735
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !13123, !tbaa !12018, !ctir !752
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !13124, !ctir !753
  %13 = load float, float* %shrink_threshold, align 4, !dbg !13124, !tbaa !12148, !ctir !758
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13125, !tbaa !2993
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !13126, !ctir !735
  %15 = load i64, i64* %n_buckets, align 8, !dbg !13126, !tbaa !11473, !ctir !52
  %conv7 = uitofp i64 %15 to float, !dbg !13125
  %mul = fmul float %13, %conv7, !dbg !13127
  %cmp = fcmp olt float %conv, %mul, !dbg !13128
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !13129

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13130, !tbaa !2993
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !13132
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13133, !tbaa !2993
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !13135, !ctir !735
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !13135, !tbaa !11481, !ctir !52
  %conv12 = uitofp i64 %18 to float, !dbg !13133
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13136, !tbaa !2993
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !13137, !ctir !735
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !13137, !tbaa !12018, !ctir !752
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !13138, !ctir !753
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !13138, !tbaa !12148, !ctir !758
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13139, !tbaa !2993
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !13140, !ctir !735
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !13140, !tbaa !11473, !ctir !52
  %conv16 = uitofp i64 %23 to float, !dbg !13139
  %mul17 = fmul float %21, %conv16, !dbg !13141
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !13142
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !13143

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !13144, metadata !DIExpression()), !dbg !13146
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13147, !tbaa !2993
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !13148, !ctir !735
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !13148, !tbaa !12018, !ctir !752
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !13146, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !13149, metadata !DIExpression()), !dbg !13150
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13151, !tbaa !2993
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !13152, !ctir !753
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !13152, !tbaa !12186
  %tobool23 = trunc i8 %27 to i1, !dbg !13152, !ctir !117
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !13151

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13153, !tbaa !2993
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !13154, !ctir !735
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !13154, !tbaa !11473, !ctir !52
  %conv26 = uitofp i64 %29 to float, !dbg !13153
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13155, !tbaa !2993
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !13156, !ctir !753
  %31 = load float, float* %shrink_factor, align 4, !dbg !13156, !tbaa !12157, !ctir !758
  %mul27 = fmul float %conv26, %31, !dbg !13157
  br label %cond.end, !dbg !13151

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13158, !tbaa !2993
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !13159, !ctir !735
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !13159, !tbaa !11473, !ctir !52
  %conv29 = uitofp i64 %33 to float, !dbg !13158
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13160, !tbaa !2993
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !13161, !ctir !753
  %35 = load float, float* %shrink_factor30, align 4, !dbg !13161, !tbaa !12157, !ctir !758
  %mul31 = fmul float %conv29, %35, !dbg !13162
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !13163, !tbaa !2993
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !13164, !ctir !753
  %37 = load float, float* %growth_threshold, align 4, !dbg !13164, !tbaa !12129, !ctir !758
  %mul32 = fmul float %mul31, %37, !dbg !13165
  br label %cond.end, !dbg !13151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !13151
  %conv33 = fptoui float %cond to i64, !dbg !13166
  store i64 %conv33, i64* %candidate, align 8, !dbg !13150, !tbaa !3837
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13167, !tbaa !2993
  %39 = load i64, i64* %candidate, align 8, !dbg !13169, !tbaa !3837
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !13170
  br i1 %call34, label %if.end39, label %if.then35, !dbg !13171

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !13172, metadata !DIExpression()), !dbg !13174
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13175, !tbaa !2993
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !13176, !ctir !735
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !13176, !tbaa !12078, !ctir !740
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !13174, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !13177, metadata !DIExpression()), !dbg !13178
  br label %while.cond, !dbg !13179

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13180, !tbaa !2993
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !13179
  br i1 %tobool36, label %while.body, label %while.end, !dbg !13179

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13181, !tbaa !2993
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !13183, !ctir !741
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !13183, !tbaa !11526, !ctir !740
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !13184, !tbaa !2993
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !13185, !tbaa !2993
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !13185
  call void @free(i8* %46) #12, !dbg !13186
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !13187, !tbaa !2993
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !13188, !tbaa !2993
  br label %while.cond, !dbg !13179, !llvm.loop !13189

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !13191, !tbaa !2993
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !13192, !ctir !735
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !13193, !tbaa !12078, !ctir !740
  br label %if.end39, !dbg !13194

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !13195

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !13196

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !13197

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !13198, !tbaa !2993
  store i8* %49, i8** %retval, align 8, !dbg !13199
  br label %return, !dbg !13199

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !13200
  ret i8* %50, !dbg !13200
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #9 !dbg !13201 !ctir !520 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.F_triple*, align 8, !ctir !1801
  %tmp = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13203, metadata !DIExpression()), !dbg !13204
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13205, metadata !DIExpression()), !dbg !13206
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13207, metadata !DIExpression()), !dbg !13208
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13209, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13209
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13208, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !13210, metadata !DIExpression()), !dbg !13211
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13212, !tbaa !2993
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13213, !ctir !1802
  %3 = load i8*, i8** %name, align 8, !dbg !13213, !tbaa !11054, !ctir !7
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13214, !tbaa !3837
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !13215
  store i64 %call, i64* %tmp, align 8, !dbg !13211, !tbaa !3837
  %5 = load i64, i64* %tmp, align 8, !dbg !13216, !tbaa !3837
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13217, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13218, !ctir !1802
  %7 = load i64, i64* %st_ino, align 8, !dbg !13218, !tbaa !11061, !ctir !224
  %xor = xor i64 %5, %7, !dbg !13219
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !13220, !tbaa !3837
  %rem = urem i64 %xor, %8, !dbg !13221
  ret i64 %rem, !dbg !13222
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #9 !dbg !13223 !ctir !520 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.F_triple*, align 8, !ctir !1801
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13224, metadata !DIExpression()), !dbg !13225
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !13226, metadata !DIExpression()), !dbg !13227
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !13228, metadata !DIExpression()), !dbg !13229
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13230, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13230
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !13229, !tbaa !2993
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !13231, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !13232, !ctir !1802
  %3 = load i64, i64* %st_ino, align 8, !dbg !13232, !tbaa !11061, !ctir !224
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !13233, !tbaa !3837
  %rem = urem i64 %3, %4, !dbg !13234
  ret i64 %rem, !dbg !13235
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !13236 !ctir !522 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %y.addr = alloca i8*, align 8, !ctir !428
  %a = alloca %struct.F_triple*, align 8, !ctir !1801
  %b = alloca %struct.F_triple*, align 8, !ctir !1801
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13237, metadata !DIExpression()), !dbg !13238
  store i8* %y, i8** %y.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13239, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13241, metadata !DIExpression()), !dbg !13242
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13243, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13243
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13242, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13244, metadata !DIExpression()), !dbg !13245
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13246, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13246
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13245, !tbaa !2993
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13247, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13247, !ctir !1802
  %5 = load i64, i64* %st_ino, align 8, !dbg !13247, !tbaa !11061, !ctir !224
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13247, !tbaa !2993
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13247, !ctir !1802
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13247, !tbaa !11061, !ctir !224
  %cmp = icmp eq i64 %5, %7, !dbg !13247
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13247

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13247, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13247, !ctir !1802
  %9 = load i64, i64* %st_dev, align 8, !dbg !13247, !tbaa !11067, !ctir !227
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13247, !tbaa !2993
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13247, !ctir !1802
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13247, !tbaa !11067, !ctir !227
  %cmp3 = icmp eq i64 %9, %11, !dbg !13247
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13248

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13249, !tbaa !2993
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13250, !ctir !1802
  %13 = load i8*, i8** %name, align 8, !dbg !13250, !tbaa !11054, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13251, !tbaa !2993
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13252, !ctir !1802
  %15 = load i8*, i8** %name4, align 8, !dbg !13252, !tbaa !11054, !ctir !7
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !13253
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !13254
  %17 = zext i1 %16 to i64, !dbg !13255
  %cond = select i1 %16, i32 1, i32 0, !dbg !13255
  %tobool = icmp ne i32 %cond, 0, !dbg !13255
  ret i1 %tobool, !dbg !13256
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #9 !dbg !13257 !ctir !522 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %y.addr = alloca i8*, align 8, !ctir !428
  %a = alloca %struct.F_triple*, align 8, !ctir !1801
  %b = alloca %struct.F_triple*, align 8, !ctir !1801
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13258, metadata !DIExpression()), !dbg !13259
  store i8* %y, i8** %y.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !13260, metadata !DIExpression()), !dbg !13261
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13262, metadata !DIExpression()), !dbg !13263
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13264, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13264
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13263, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !13265, metadata !DIExpression()), !dbg !13266
  %2 = load i8*, i8** %y.addr, align 8, !dbg !13267, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !13267
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !13266, !tbaa !2993
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13268, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !13268, !ctir !1802
  %5 = load i64, i64* %st_ino, align 8, !dbg !13268, !tbaa !11061, !ctir !224
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13268, !tbaa !2993
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !13268, !ctir !1802
  %7 = load i64, i64* %st_ino1, align 8, !dbg !13268, !tbaa !11061, !ctir !224
  %cmp = icmp eq i64 %5, %7, !dbg !13268
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !13268

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13268, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !13268, !ctir !1802
  %9 = load i64, i64* %st_dev, align 8, !dbg !13268, !tbaa !11067, !ctir !227
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13268, !tbaa !2993
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !13268, !ctir !1802
  %11 = load i64, i64* %st_dev2, align 8, !dbg !13268, !tbaa !11067, !ctir !227
  %cmp3 = icmp eq i64 %9, %11, !dbg !13268
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !13269

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13270, !tbaa !2993
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !13270, !ctir !1802
  %13 = load i8*, i8** %name, align 8, !dbg !13270, !tbaa !11054, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !13270, !tbaa !2993
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !13270, !ctir !1802
  %15 = load i8*, i8** %name4, align 8, !dbg !13270, !tbaa !11054, !ctir !7
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !13270
  %cmp5 = icmp eq i32 %call, 0, !dbg !13270
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !13271
  %17 = zext i1 %16 to i64, !dbg !13272
  %cond = select i1 %16, i32 1, i32 0, !dbg !13272
  %tobool = icmp ne i32 %cond, 0, !dbg !13272
  ret i1 %tobool, !dbg !13273
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !13274 !ctir !518 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.F_triple*, align 8, !ctir !1808
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !13275, metadata !DIExpression()), !dbg !13276
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !13277, metadata !DIExpression()), !dbg !13278
  %0 = load i8*, i8** %x.addr, align 8, !dbg !13279, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !13279
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !13278, !tbaa !2993
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13280, !tbaa !2993
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !13281, !ctir !1803
  %3 = load i8*, i8** %name, align 8, !dbg !13281, !tbaa !11054, !ctir !7
  call void @free(i8* %3) #12, !dbg !13282
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !13283, !tbaa !2993
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !13283
  call void @free(i8* %5) #12, !dbg !13284
  ret void, !dbg !13285
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13286 !ctir !1812 {
entry:
  %retval = alloca %struct.__dirstream*, align 8, !ctir !580
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %dir.addr = alloca i8*, align 8, !ctir !112
  %extra_flags.addr = alloca i32, align 4, !ctir !5
  %pnew_fd.addr = alloca i32*, align 8, !ctir !126
  %open_flags = alloca i32, align 4, !ctir !5
  %new_fd = alloca i32, align 4, !ctir !5
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !580
  %fdopendir_errno = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13288, metadata !DIExpression()), !dbg !13289
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13290, metadata !DIExpression()), !dbg !13291
  store i32 %extra_flags, i32* %extra_flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13292, metadata !DIExpression()), !dbg !13293
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13294, metadata !DIExpression()), !dbg !13295
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13296, metadata !DIExpression()), !dbg !13297
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13298, !tbaa !2980
  %or = or i32 592128, %0, !dbg !13299
  store i32 %or, i32* %open_flags, align 4, !dbg !13297, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13300, metadata !DIExpression()), !dbg !13301
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13302, !tbaa !2980
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13303, !tbaa !2993
  %3 = load i32, i32* %open_flags, align 4, !dbg !13304, !tbaa !2980
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13305
  store i32 %call, i32* %new_fd, align 4, !dbg !13301, !tbaa !2980
  %4 = load i32, i32* %new_fd, align 4, !dbg !13306, !tbaa !2980
  %cmp = icmp slt i32 %4, 0, !dbg !13308
  br i1 %cmp, label %if.then, label %if.end, !dbg !13309

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13310
  br label %return, !dbg !13310

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13311, metadata !DIExpression()), !dbg !13312
  %5 = load i32, i32* %new_fd, align 4, !dbg !13313, !tbaa !2980
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13314
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13312, !tbaa !2993
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13315, !tbaa !2993
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13315
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13317

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13318, !tbaa !2980
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13319, !tbaa !2993
  store i32 %7, i32* %8, align 4, !dbg !13320, !tbaa !2980, !ctir !5
  br label %if.end6, !dbg !13321

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13322, metadata !DIExpression()), !dbg !13324
  %call3 = call i32* @__errno_location() #15, !dbg !13325
  %9 = load i32, i32* %call3, align 4, !dbg !13325, !tbaa !2980, !ctir !5
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13324, !tbaa !2980
  %10 = load i32, i32* %new_fd, align 4, !dbg !13326, !tbaa !2980
  %call4 = call i32 @close(i32 %10), !dbg !13327
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13328, !tbaa !2980
  %call5 = call i32* @__errno_location() #15, !dbg !13329
  store i32 %11, i32* %call5, align 4, !dbg !13330, !tbaa !2980, !ctir !5
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13331, !tbaa !2993
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13332
  br label %return, !dbg !13332

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13333
  ret %struct.__dirstream* %13, !dbg !13333
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_remove_linkdir() #4 !dbg !13334 !ctir !1817 {
entry:
  ret i32 -1, !dbg !13336
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @priv_set_restore_linkdir() #4 !dbg !13337 !ctir !1817 {
entry:
  ret i32 -1, !dbg !13338
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13339 !ctir !133 {
entry:
  %argv0.addr = alloca i8*, align 8, !ctir !112
  %slash = alloca i8*, align 8, !ctir !112
  %base = alloca i8*, align 8, !ctir !112
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13340, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13342, metadata !DIExpression()), !dbg !13343
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13344, metadata !DIExpression()), !dbg !13345
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13346, !tbaa !2993
  %cmp = icmp eq i8* %0, null, !dbg !13348
  br i1 %cmp, label %if.then, label %if.end, !dbg !13349

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13350, !tbaa !2993
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.295, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13352
  call void @abort() #13, !dbg !13353
  unreachable, !dbg !13353

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13354, !tbaa !2993
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13355
  store i8* %call1, i8** %slash, align 8, !dbg !13356, !tbaa !2993
  %3 = load i8*, i8** %slash, align 8, !dbg !13357, !tbaa !2993
  %cmp2 = icmp ne i8* %3, null, !dbg !13358
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13357

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13359, !tbaa !2993
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13360
  br label %cond.end, !dbg !13357

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13361, !tbaa !2993
  br label %cond.end, !dbg !13357

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13357
  store i8* %cond, i8** %base, align 8, !dbg !13362, !tbaa !2993
  %6 = load i8*, i8** %base, align 8, !dbg !13363, !tbaa !2993
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13365, !tbaa !2993
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13366
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13366
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13366
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13367
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13368

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13369, !tbaa !2993
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13370
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.296, i64 0, i64 0), i64 7) #14, !dbg !13371
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13372
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13373

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13374, !tbaa !2993
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13376, !tbaa !2993
  %10 = load i8*, i8** %base, align 8, !dbg !13377, !tbaa !2993
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.297, i64 0, i64 0), i64 3) #14, !dbg !13379
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13380
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13381

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13382, !tbaa !2993
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !13384
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !13385, !tbaa !2993
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !13386, !tbaa !2993
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !13387, !tbaa !2993
  br label %if.end12, !dbg !13388

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !13389

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !13390, !tbaa !2993
  store i8* %13, i8** @program_name, align 8, !dbg !13391, !tbaa !2993
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !13392, !tbaa !2993
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !13393, !tbaa !2993
  ret void, !dbg !13394
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !13395 !ctir !1577 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %src_name.addr = alloca i8*, align 8, !ctir !112
  %source_desc.addr = alloca i32, align 4, !ctir !5
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !157
  %ctx = alloca %struct.permission_context, align 4, !ctir !13397
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !13400, metadata !DIExpression()), !dbg !13401
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !13402, metadata !DIExpression()), !dbg !13403
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !13404, metadata !DIExpression()), !dbg !13405
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !13406, metadata !DIExpression()), !dbg !13407
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13408, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13410, metadata !DIExpression()), !dbg !13411
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13412, metadata !DIExpression()), !dbg !13413
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !13414, !tbaa !2993
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !13415, !tbaa !2980
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13416, !tbaa !2980
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !13417
  store i32 %call, i32* %ret, align 4, !dbg !13418, !tbaa !2980
  %3 = load i32, i32* %ret, align 4, !dbg !13419, !tbaa !2980
  %cmp = icmp ne i32 %3, 0, !dbg !13421
  br i1 %cmp, label %if.then, label %if.end, !dbg !13422

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !13423
  br label %return, !dbg !13423

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !13424, !tbaa !2993
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !13425, !tbaa !2980
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !13426
  store i32 %call1, i32* %ret, align 4, !dbg !13427, !tbaa !2980
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13428
  %6 = load i32, i32* %ret, align 4, !dbg !13429, !tbaa !2980
  store i32 %6, i32* %retval, align 4, !dbg !13430
  br label %return, !dbg !13430

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13431
  ret i32 %7, !dbg !13431
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !13432 !ctir !1582 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !157
  %ctx = alloca %struct.permission_context, align 4, !ctir !13434
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13437, metadata !DIExpression()), !dbg !13438
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !13439, metadata !DIExpression()), !dbg !13440
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13441, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13443, metadata !DIExpression()), !dbg !13444
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13445, metadata !DIExpression()), !dbg !13446
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !13447
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 4, i1 false), !dbg !13447
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13448, !tbaa !2980
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !13449, !ctir !13434
  store i32 %1, i32* %mode1, align 4, !dbg !13450, !tbaa !13451, !ctir !157
  %2 = load i8*, i8** %name.addr, align 8, !dbg !13453, !tbaa !2993
  %3 = load i32, i32* %desc.addr, align 4, !dbg !13454, !tbaa !2980
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !13455
  store i32 %call, i32* %ret, align 4, !dbg !13456, !tbaa !2980
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13457
  %4 = load i32, i32* %ret, align 4, !dbg !13458, !tbaa !2980
  ret i32 %4, !dbg !13459
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !13460 !ctir !939 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !941
  %e = alloca i32, align 4, !ctir !5
  %p = alloca %struct.quoting_options*, align 8, !ctir !941
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13461, metadata !DIExpression()), !dbg !13462
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13463, metadata !DIExpression()), !dbg !13464
  %call = call i32* @__errno_location() #15, !dbg !13465
  %0 = load i32, i32* %call, align 4, !dbg !13465, !tbaa !2980, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !13464, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13466, metadata !DIExpression()), !dbg !13467
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13468, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13468
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13468

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13469, !tbaa !2993
  br label %cond.end, !dbg !13468

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13468

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13468
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !13468
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !13470
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !13470
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !13467, !tbaa !2993
  %5 = load i32, i32* %e, align 4, !dbg !13471, !tbaa !2980
  %call2 = call i32* @__errno_location() #15, !dbg !13472
  store i32 %5, i32* %call2, align 4, !dbg !13473, !tbaa !2980, !ctir !5
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13474, !tbaa !2993
  ret %struct.quoting_options* %6, !dbg !13475
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !13476 !ctir !951 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !953
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13477, metadata !DIExpression()), !dbg !13478
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13479, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13479
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13479

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13480, !tbaa !2993
  br label %cond.end, !dbg !13479

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13479
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13481, !ctir !954
  %2 = load i32, i32* %style, align 8, !dbg !13481, !tbaa !13482, !ctir !917
  ret i32 %2, !dbg !13484
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !13485 !ctir !955 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !941
  %s.addr = alloca i32, align 4, !ctir !917
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13486, metadata !DIExpression()), !dbg !13487
  store i32 %s, i32* %s.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13488, metadata !DIExpression()), !dbg !13489
  %0 = load i32, i32* %s.addr, align 4, !dbg !13490, !tbaa !3652
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13491, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13491
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13491

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13492, !tbaa !2993
  br label %cond.end, !dbg !13491

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13491

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13491
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13493, !ctir !942
  store i32 %0, i32* %style, align 8, !dbg !13494, !tbaa !13482, !ctir !917
  ret void, !dbg !13495
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !13496 !ctir !957 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !941
  %c.addr = alloca i8, align 1, !ctir !8
  %i.addr = alloca i32, align 4, !ctir !5
  %uc = alloca i8, align 1, !ctir !468
  %p = alloca i32*, align 8, !ctir !959
  %shift = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13497, metadata !DIExpression()), !dbg !13498
  store i8 %c, i8* %c.addr, align 1, !tbaa !3652
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !13499, metadata !DIExpression()), !dbg !13500
  store i32 %i, i32* %i.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13501, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !13503, metadata !DIExpression()), !dbg !13504
  %0 = load i8, i8* %c.addr, align 1, !dbg !13505, !tbaa !3652
  store i8 %0, i8* %uc, align 1, !dbg !13504, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32** %p, metadata !13506, metadata !DIExpression()), !dbg !13507
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13508, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13508
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13508

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13509, !tbaa !2993
  br label %cond.end, !dbg !13508

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13508

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13508
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !13510, !ctir !942
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13511
  %3 = load i8, i8* %uc, align 1, !dbg !13512, !tbaa !3652
  %conv = zext i8 %3 to i64, !dbg !13512
  %div = udiv i64 %conv, 32, !dbg !13513
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !13514
  store i32* %add.ptr, i32** %p, align 8, !dbg !13507, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !13515, metadata !DIExpression()), !dbg !13516
  %4 = load i8, i8* %uc, align 1, !dbg !13517, !tbaa !3652
  %conv1 = zext i8 %4 to i64, !dbg !13517
  %rem = urem i64 %conv1, 32, !dbg !13518
  %conv2 = trunc i64 %rem to i32, !dbg !13517
  store i32 %conv2, i32* %shift, align 4, !dbg !13516, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13519, metadata !DIExpression()), !dbg !13520
  %5 = load i32*, i32** %p, align 8, !dbg !13521, !tbaa !2993
  %6 = load i32, i32* %5, align 4, !dbg !13522, !tbaa !2980, !ctir !67
  %7 = load i32, i32* %shift, align 4, !dbg !13523, !tbaa !2980
  %shr = lshr i32 %6, %7, !dbg !13524
  %and = and i32 %shr, 1, !dbg !13525
  store i32 %and, i32* %r, align 4, !dbg !13520, !tbaa !2980
  %8 = load i32, i32* %i.addr, align 4, !dbg !13526, !tbaa !2980
  %and3 = and i32 %8, 1, !dbg !13527
  %9 = load i32, i32* %r, align 4, !dbg !13528, !tbaa !2980
  %xor = xor i32 %and3, %9, !dbg !13529
  %10 = load i32, i32* %shift, align 4, !dbg !13530, !tbaa !2980
  %shl = shl i32 %xor, %10, !dbg !13531
  %11 = load i32*, i32** %p, align 8, !dbg !13532, !tbaa !2993
  %12 = load i32, i32* %11, align 4, !dbg !13533, !tbaa !2980, !ctir !67
  %xor4 = xor i32 %12, %shl, !dbg !13533
  store i32 %xor4, i32* %11, align 4, !dbg !13533, !tbaa !2980, !ctir !67
  %13 = load i32, i32* %r, align 4, !dbg !13534, !tbaa !2980
  ret i32 %13, !dbg !13535
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !13536 !ctir !960 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !941
  %i.addr = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13537, metadata !DIExpression()), !dbg !13538
  store i32 %i, i32* %i.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13539, metadata !DIExpression()), !dbg !13540
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13541, metadata !DIExpression()), !dbg !13542
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13543, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13543
  br i1 %tobool, label %if.end, label %if.then, !dbg !13545

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13546, !tbaa !2993
  br label %if.end, !dbg !13547

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13548, !tbaa !2993
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !13549, !ctir !942
  %2 = load i32, i32* %flags, align 4, !dbg !13549, !tbaa !13550, !ctir !5
  store i32 %2, i32* %r, align 4, !dbg !13551, !tbaa !2980
  %3 = load i32, i32* %i.addr, align 4, !dbg !13552, !tbaa !2980
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13553, !tbaa !2993
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !13554, !ctir !942
  store i32 %3, i32* %flags1, align 4, !dbg !13555, !tbaa !13550, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !13556, !tbaa !2980
  ret i32 %5, !dbg !13557
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !13558 !ctir !962 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !941
  %left_quote.addr = alloca i8*, align 8, !ctir !112
  %right_quote.addr = alloca i8*, align 8, !ctir !112
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13559, metadata !DIExpression()), !dbg !13560
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13561, metadata !DIExpression()), !dbg !13562
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13563, metadata !DIExpression()), !dbg !13564
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13565, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13565
  br i1 %tobool, label %if.end, label %if.then, !dbg !13567

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !13568, !tbaa !2993
  br label %if.end, !dbg !13569

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13570, !tbaa !2993
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !13571, !ctir !942
  store i32 10, i32* %style, align 8, !dbg !13572, !tbaa !13482, !ctir !917
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !13573, !tbaa !2993
  %tobool1 = icmp ne i8* %2, null, !dbg !13573
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !13575

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !13576, !tbaa !2993
  %tobool2 = icmp ne i8* %3, null, !dbg !13576
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13577

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !13578
  unreachable, !dbg !13578

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !13579, !tbaa !2993
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13580, !tbaa !2993
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !13581, !ctir !942
  store i8* %4, i8** %left_quote5, align 8, !dbg !13582, !tbaa !13583, !ctir !112
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !13584, !tbaa !2993
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13585, !tbaa !2993
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !13586, !ctir !942
  store i8* %6, i8** %right_quote6, align 8, !dbg !13587, !tbaa !13588, !ctir !112
  ret void, !dbg !13589
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !13590 !ctir !964 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !7
  %buffersize.addr = alloca i64, align 8, !ctir !52
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !953
  %p = alloca %struct.quoting_options*, align 8, !ctir !953
  %e = alloca i32, align 4, !ctir !5
  %r = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13591, metadata !DIExpression()), !dbg !13592
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13593, metadata !DIExpression()), !dbg !13594
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13595, metadata !DIExpression()), !dbg !13596
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13597, metadata !DIExpression()), !dbg !13598
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13599, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13601, metadata !DIExpression()), !dbg !13602
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13603, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13603
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13603

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13604, !tbaa !2993
  br label %cond.end, !dbg !13603

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13603
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !13602, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13605, metadata !DIExpression()), !dbg !13606
  %call = call i32* @__errno_location() #15, !dbg !13607
  %2 = load i32, i32* %call, align 4, !dbg !13607, !tbaa !2980, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !13606, !tbaa !2980
  call void @llvm.dbg.declare(metadata i64* %r, metadata !13608, metadata !DIExpression()), !dbg !13609
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !13610, !tbaa !2993
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13611, !tbaa !3837
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !13612, !tbaa !2993
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !13613, !tbaa !3837
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13614, !tbaa !2993
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !13615, !ctir !954
  %8 = load i32, i32* %style, align 8, !dbg !13615, !tbaa !13482, !ctir !917
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13616, !tbaa !2993
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !13617, !ctir !954
  %10 = load i32, i32* %flags, align 4, !dbg !13617, !tbaa !13550, !ctir !5
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13618, !tbaa !2993
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !13619, !ctir !954
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !13618
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13620, !tbaa !2993
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !13621, !ctir !954
  %13 = load i8*, i8** %left_quote, align 8, !dbg !13621, !tbaa !13583, !ctir !112
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13622, !tbaa !2993
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !13623, !ctir !954
  %15 = load i8*, i8** %right_quote, align 8, !dbg !13623, !tbaa !13588, !ctir !112
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !13624
  store i64 %call1, i64* %r, align 8, !dbg !13609, !tbaa !3837
  %16 = load i32, i32* %e, align 4, !dbg !13625, !tbaa !2980
  %call2 = call i32* @__errno_location() #15, !dbg !13626
  store i32 %16, i32* %call2, align 4, !dbg !13627, !tbaa !2980, !ctir !5
  %17 = load i64, i64* %r, align 8, !dbg !13628, !tbaa !3837
  ret i64 %17, !dbg !13629
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !13630 !ctir !1011 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %buffer.addr = alloca i8*, align 8, !ctir !7
  %buffersize.addr = alloca i64, align 8, !ctir !52
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %quoting_style.addr = alloca i32, align 4, !ctir !917
  %flags.addr = alloca i32, align 4, !ctir !5
  %quote_these_too.addr = alloca i32*, align 8, !ctir !1013
  %left_quote.addr = alloca i8*, align 8, !ctir !112
  %right_quote.addr = alloca i8*, align 8, !ctir !112
  %i = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %orig_buffersize = alloca i64, align 8, !ctir !52
  %quote_string = alloca i8*, align 8, !ctir !112
  %quote_string_len = alloca i64, align 8, !ctir !52
  %backslash_escapes = alloca i8, align 1, !ctir !117
  %unibyte_locale = alloca i8, align 1, !ctir !117
  %elide_outer_quotes = alloca i8, align 1, !ctir !117
  %pending_shell_escape_end = alloca i8, align 1, !ctir !117
  %encountered_single_quote = alloca i8, align 1, !ctir !117
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !117
  %c = alloca i8, align 1, !ctir !468
  %esc = alloca i8, align 1, !ctir !468
  %is_right_quote = alloca i8, align 1, !ctir !117
  %escaping = alloca i8, align 1, !ctir !117
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !117
  %m = alloca i64, align 8, !ctir !52
  %printable = alloca i8, align 1, !ctir !117
  %mbstate = alloca %struct.__mbstate_t, align 4, !ctir !1017
  %w = alloca i32, align 4, !ctir !1031
  %bytes = alloca i64, align 8, !ctir !52
  %j = alloca i64, align 8, !ctir !52
  %ilim = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !13631, metadata !DIExpression()), !dbg !13632
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !13633, metadata !DIExpression()), !dbg !13634
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !13635, metadata !DIExpression()), !dbg !13636
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !13637, metadata !DIExpression()), !dbg !13638
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !13639, metadata !DIExpression()), !dbg !13640
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13641, metadata !DIExpression()), !dbg !13642
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !13643, metadata !DIExpression()), !dbg !13644
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !13645, metadata !DIExpression()), !dbg !13646
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !13647, metadata !DIExpression()), !dbg !13648
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13649, metadata !DIExpression()), !dbg !13650
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13651, metadata !DIExpression()), !dbg !13652
  store i64 0, i64* %len, align 8, !dbg !13652, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !13653, metadata !DIExpression()), !dbg !13654
  store i64 0, i64* %orig_buffersize, align 8, !dbg !13654, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !13655, metadata !DIExpression()), !dbg !13656
  store i8* null, i8** %quote_string, align 8, !dbg !13656, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !13657, metadata !DIExpression()), !dbg !13658
  store i64 0, i64* %quote_string_len, align 8, !dbg !13658, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !13659, metadata !DIExpression()), !dbg !13660
  store i8 0, i8* %backslash_escapes, align 1, !dbg !13660, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !13661, metadata !DIExpression()), !dbg !13662
  %call = call i64 @__ctype_get_mb_cur_max() #12, !dbg !13663
  %cmp = icmp eq i64 %call, 1, !dbg !13664
  %frombool = zext i1 %cmp to i8, !dbg !13662
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !13662, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !13665, metadata !DIExpression()), !dbg !13666
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13667, !tbaa !2980
  %and = and i32 %0, 2, !dbg !13668
  %cmp1 = icmp ne i32 %and, 0, !dbg !13669
  %frombool2 = zext i1 %cmp1 to i8, !dbg !13666
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !13666, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !13670, metadata !DIExpression()), !dbg !13671
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !13671, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !13672, metadata !DIExpression()), !dbg !13673
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !13673, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !13674, metadata !DIExpression()), !dbg !13675
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !13675, !tbaa !3104
  br label %process_input, !dbg !13676

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !13677), !dbg !13678
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !13679, !tbaa !3652
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !13680

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !13681, !tbaa !3652
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13683, !tbaa !3104
  br label %sw.bb3, !dbg !13684

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13685, !tbaa !3104
  %tobool = trunc i8 %2 to i1, !dbg !13685
  br i1 %tobool, label %if.end6, label %if.then, !dbg !13687

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !13688

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !13689, !tbaa !3837
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !13689, !tbaa !3837
  %cmp4 = icmp ult i64 %3, %4, !dbg !13689
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !13692

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !13689, !tbaa !2993
  %6 = load i64, i64* %len, align 8, !dbg !13689, !tbaa !3837
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !13689, !ctir !7
  store i8 34, i8* %arrayidx, align 1, !dbg !13689, !tbaa !3652
  br label %if.end, !dbg !13689

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !13692, !tbaa !3837
  %inc = add i64 %7, 1, !dbg !13692
  store i64 %inc, i64* %len, align 8, !dbg !13692, !tbaa !3837
  br label %do.end, !dbg !13692

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !13692

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13693, !tbaa !3104
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13694, !tbaa !2993
  store i64 1, i64* %quote_string_len, align 8, !dbg !13695, !tbaa !3837
  br label %sw.epilog, !dbg !13696

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13697, !tbaa !3104
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13698, !tbaa !3104
  br label %sw.epilog, !dbg !13699

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !13700, !tbaa !3652
  %cmp9 = icmp ne i32 %8, 10, !dbg !13703
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !13704

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !13705, !tbaa !3652
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.313, i64 0, i64 0), i32 %9), !dbg !13707
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !13708, !tbaa !2993
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !13709, !tbaa !3652
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i32 %10), !dbg !13710
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !13711, !tbaa !2993
  br label %if.end13, !dbg !13712

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13713, !tbaa !3104
  %tobool14 = trunc i8 %11 to i1, !dbg !13713
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !13715

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !13716, !tbaa !2993
  store i8* %12, i8** %quote_string, align 8, !dbg !13718, !tbaa !2993
  br label %for.cond, !dbg !13719

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !13720, !tbaa !2993
  %14 = load i8, i8* %13, align 1, !dbg !13722, !tbaa !3652, !ctir !113
  %tobool16 = icmp ne i8 %14, 0, !dbg !13723
  br i1 %tobool16, label %for.body, label %for.end, !dbg !13723

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !13724

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !13725, !tbaa !3837
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !13725, !tbaa !3837
  %cmp18 = icmp ult i64 %15, %16, !dbg !13725
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !13728

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !13725, !tbaa !2993
  %18 = load i8, i8* %17, align 1, !dbg !13725, !tbaa !3652, !ctir !113
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !13725, !tbaa !2993
  %20 = load i64, i64* %len, align 8, !dbg !13725, !tbaa !3837
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !13725, !ctir !7
  store i8 %18, i8* %arrayidx20, align 1, !dbg !13725, !tbaa !3652
  br label %if.end21, !dbg !13725

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !13728, !tbaa !3837
  %inc22 = add i64 %21, 1, !dbg !13728
  store i64 %inc22, i64* %len, align 8, !dbg !13728, !tbaa !3837
  br label %do.end23, !dbg !13728

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !13728

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !13729, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !13729
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !13729, !tbaa !2993
  br label %for.cond, !dbg !13730, !llvm.loop !13731

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !13732

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13733, !tbaa !3104
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !13734, !tbaa !2993
  store i8* %23, i8** %quote_string, align 8, !dbg !13735, !tbaa !2993
  %24 = load i8*, i8** %quote_string, align 8, !dbg !13736, !tbaa !2993
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !13737
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !13738, !tbaa !3837
  br label %sw.epilog, !dbg !13739

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13740, !tbaa !3104
  br label %sw.bb27, !dbg !13741

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !13742, !tbaa !3104
  br label %sw.bb28, !dbg !13743

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13744, !tbaa !3104
  %tobool29 = trunc i8 %25 to i1, !dbg !13744
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !13746

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !13747, !tbaa !3104
  br label %if.end31, !dbg !13748

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !13749

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !13750, !tbaa !3652
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13751, !tbaa !3104
  %tobool33 = trunc i8 %26 to i1, !dbg !13751
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !13753

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !13754

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !13755, !tbaa !3837
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !13755, !tbaa !3837
  %cmp36 = icmp ult i64 %27, %28, !dbg !13755
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !13758

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !13755, !tbaa !2993
  %30 = load i64, i64* %len, align 8, !dbg !13755, !tbaa !3837
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !13755, !ctir !7
  store i8 39, i8* %arrayidx38, align 1, !dbg !13755, !tbaa !3652
  br label %if.end39, !dbg !13755

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !13758, !tbaa !3837
  %inc40 = add i64 %31, 1, !dbg !13758
  store i64 %inc40, i64* %len, align 8, !dbg !13758, !tbaa !3837
  br label %do.end41, !dbg !13758

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !13758

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), i8** %quote_string, align 8, !dbg !13759, !tbaa !2993
  store i64 1, i64* %quote_string_len, align 8, !dbg !13760, !tbaa !3837
  br label %sw.epilog, !dbg !13761

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !13762, !tbaa !3104
  br label %sw.epilog, !dbg !13763

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !13764
  unreachable, !dbg !13764

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !13765, !tbaa !3837
  br label %for.cond44, !dbg !13767

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !13768, !tbaa !3837
  %cmp45 = icmp eq i64 %32, -1, !dbg !13770
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !13768

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !13771, !tbaa !2993
  %34 = load i64, i64* %i, align 8, !dbg !13772, !tbaa !3837
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !13771, !ctir !112
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !13771, !tbaa !3652
  %conv = sext i8 %35 to i32, !dbg !13771
  %cmp47 = icmp eq i32 %conv, 0, !dbg !13773
  %conv48 = zext i1 %cmp47 to i32, !dbg !13773
  br label %cond.end, !dbg !13768

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !13774, !tbaa !3837
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !13775, !tbaa !3837
  %cmp49 = icmp eq i64 %36, %37, !dbg !13776
  %conv50 = zext i1 %cmp49 to i32, !dbg !13776
  br label %cond.end, !dbg !13768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !13768
  %tobool51 = icmp ne i32 %cond, 0, !dbg !13777
  %lnot = xor i1 %tobool51, true, !dbg !13777
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !13778

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13779, metadata !DIExpression()), !dbg !13781
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !13782, metadata !DIExpression()), !dbg !13783
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !13784, metadata !DIExpression()), !dbg !13785
  store i8 0, i8* %is_right_quote, align 1, !dbg !13785, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !13786, metadata !DIExpression()), !dbg !13787
  store i8 0, i8* %escaping, align 1, !dbg !13787, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !13788, metadata !DIExpression()), !dbg !13789
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !13789, !tbaa !3104
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !13790, !tbaa !3104
  %tobool53 = trunc i8 %38 to i1, !dbg !13790
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !13792

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !13793, !tbaa !3652
  %cmp55 = icmp ne i32 %39, 2, !dbg !13794
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !13795

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !13796, !tbaa !3837
  %tobool58 = icmp ne i64 %40, 0, !dbg !13796
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !13797

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !13798, !tbaa !3837
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !13799, !tbaa !3837
  %add = add i64 %41, %42, !dbg !13800
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !13801, !tbaa !3837
  %cmp60 = icmp eq i64 %43, -1, !dbg !13802
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !13803

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !13804, !tbaa !3837
  %cmp63 = icmp ult i64 1, %44, !dbg !13805
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !13801

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !13806, !tbaa !2993
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !13807
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !13808, !tbaa !3837
  br label %cond.end68, !dbg !13801

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !13809, !tbaa !3837
  br label %cond.end68, !dbg !13801

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !13801
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !13810
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !13811

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !13812, !tbaa !2993
  %48 = load i64, i64* %i, align 8, !dbg !13813, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !13814
  %49 = load i8*, i8** %quote_string, align 8, !dbg !13815, !tbaa !2993
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !13816, !tbaa !3837
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !13817
  %cmp74 = icmp eq i32 %call73, 0, !dbg !13818
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !13819

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13820, !tbaa !3104
  %tobool77 = trunc i8 %51 to i1, !dbg !13820
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !13823

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !13824

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !13825, !tbaa !3104
  br label %if.end80, !dbg !13826

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !13827, !tbaa !2993
  %53 = load i64, i64* %i, align 8, !dbg !13828, !tbaa !3837
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !13827, !ctir !112
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !13827, !tbaa !3652
  store i8 %54, i8* %c, align 1, !dbg !13829, !tbaa !3652
  %55 = load i8, i8* %c, align 1, !dbg !13830, !tbaa !3652
  %conv82 = zext i8 %55 to i32, !dbg !13830
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !13831

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !13832, !tbaa !3104
  %tobool84 = trunc i8 %56 to i1, !dbg !13832
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !13835

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !13836

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13838, !tbaa !3104
  %tobool87 = trunc i8 %57 to i1, !dbg !13838
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !13841

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !13838

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !13841, !tbaa !3104
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !13842, !tbaa !3652
  %cmp90 = icmp eq i32 %58, 2, !dbg !13842
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !13842

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !13842, !tbaa !3104
  %tobool93 = trunc i8 %59 to i1, !dbg !13842
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !13841

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !13844

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !13846, !tbaa !3837
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !13846, !tbaa !3837
  %cmp96 = icmp ult i64 %60, %61, !dbg !13846
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !13849

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !13846, !tbaa !2993
  %63 = load i64, i64* %len, align 8, !dbg !13846, !tbaa !3837
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !13846, !ctir !7
  store i8 39, i8* %arrayidx99, align 1, !dbg !13846, !tbaa !3652
  br label %if.end100, !dbg !13846

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !13849, !tbaa !3837
  %inc101 = add i64 %64, 1, !dbg !13849
  store i64 %inc101, i64* %len, align 8, !dbg !13849, !tbaa !3837
  br label %do.end102, !dbg !13849

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !13844

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !13850, !tbaa !3837
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !13850, !tbaa !3837
  %cmp104 = icmp ult i64 %65, %66, !dbg !13850
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !13853

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !13850, !tbaa !2993
  %68 = load i64, i64* %len, align 8, !dbg !13850, !tbaa !3837
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !13850, !ctir !7
  store i8 36, i8* %arrayidx107, align 1, !dbg !13850, !tbaa !3652
  br label %if.end108, !dbg !13850

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !13853, !tbaa !3837
  %inc109 = add i64 %69, 1, !dbg !13853
  store i64 %inc109, i64* %len, align 8, !dbg !13853, !tbaa !3837
  br label %do.end110, !dbg !13853

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !13844

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !13854, !tbaa !3837
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !13854, !tbaa !3837
  %cmp112 = icmp ult i64 %70, %71, !dbg !13854
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !13857

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !13854, !tbaa !2993
  %73 = load i64, i64* %len, align 8, !dbg !13854, !tbaa !3837
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !13854, !ctir !7
  store i8 39, i8* %arrayidx115, align 1, !dbg !13854, !tbaa !3652
  br label %if.end116, !dbg !13854

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !13857, !tbaa !3837
  %inc117 = add i64 %74, 1, !dbg !13857
  store i64 %inc117, i64* %len, align 8, !dbg !13857, !tbaa !3837
  br label %do.end118, !dbg !13857

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !13844, !tbaa !3104
  br label %if.end119, !dbg !13844

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !13841

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !13858, !tbaa !3837
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !13858, !tbaa !3837
  %cmp121 = icmp ult i64 %75, %76, !dbg !13858
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !13861

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !13858, !tbaa !2993
  %78 = load i64, i64* %len, align 8, !dbg !13858, !tbaa !3837
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !13858, !ctir !7
  store i8 92, i8* %arrayidx124, align 1, !dbg !13858, !tbaa !3652
  br label %if.end125, !dbg !13858

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !13861, !tbaa !3837
  %inc126 = add i64 %79, 1, !dbg !13861
  store i64 %inc126, i64* %len, align 8, !dbg !13861, !tbaa !3837
  br label %do.end127, !dbg !13861

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !13841

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !13862, !tbaa !3652
  %cmp129 = icmp ne i32 %80, 2, !dbg !13864
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !13865

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !13866, !tbaa !3837
  %add132 = add i64 %81, 1, !dbg !13867
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !13868, !tbaa !3837
  %cmp133 = icmp ult i64 %add132, %82, !dbg !13869
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !13870

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !13871, !tbaa !2993
  %84 = load i64, i64* %i, align 8, !dbg !13872, !tbaa !3837
  %add136 = add i64 %84, 1, !dbg !13873
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !13871, !ctir !112
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !13871, !tbaa !3652
  %conv138 = sext i8 %85 to i32, !dbg !13871
  %cmp139 = icmp sle i32 48, %conv138, !dbg !13874
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !13875

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !13876, !tbaa !2993
  %87 = load i64, i64* %i, align 8, !dbg !13877, !tbaa !3837
  %add142 = add i64 %87, 1, !dbg !13878
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !13876, !ctir !112
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !13876, !tbaa !3652
  %conv144 = sext i8 %88 to i32, !dbg !13876
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !13879
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !13880

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !13881

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !13883, !tbaa !3837
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !13883, !tbaa !3837
  %cmp149 = icmp ult i64 %89, %90, !dbg !13883
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !13886

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !13883, !tbaa !2993
  %92 = load i64, i64* %len, align 8, !dbg !13883, !tbaa !3837
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !13883, !ctir !7
  store i8 48, i8* %arrayidx152, align 1, !dbg !13883, !tbaa !3652
  br label %if.end153, !dbg !13883

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !13886, !tbaa !3837
  %inc154 = add i64 %93, 1, !dbg !13886
  store i64 %inc154, i64* %len, align 8, !dbg !13886, !tbaa !3837
  br label %do.end155, !dbg !13886

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !13887

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !13888, !tbaa !3837
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !13888, !tbaa !3837
  %cmp157 = icmp ult i64 %94, %95, !dbg !13888
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !13891

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !13888, !tbaa !2993
  %97 = load i64, i64* %len, align 8, !dbg !13888, !tbaa !3837
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !13888, !ctir !7
  store i8 48, i8* %arrayidx160, align 1, !dbg !13888, !tbaa !3652
  br label %if.end161, !dbg !13888

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !13891, !tbaa !3837
  %inc162 = add i64 %98, 1, !dbg !13891
  store i64 %inc162, i64* %len, align 8, !dbg !13891, !tbaa !3837
  br label %do.end163, !dbg !13891

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !13892

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !13893, !tbaa !3652
  br label %if.end169, !dbg !13894

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !13895, !tbaa !2980
  %and165 = and i32 %99, 1, !dbg !13897
  %tobool166 = icmp ne i32 %and165, 0, !dbg !13897
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !13898

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !13899

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !13900

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !13901, !tbaa !3652
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !13902

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13903, !tbaa !3104
  %tobool172 = trunc i8 %101 to i1, !dbg !13903
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !13906

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !13907

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !13908

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !13909, !tbaa !2980
  %and176 = and i32 %102, 4, !dbg !13911
  %tobool177 = icmp ne i32 %and176, 0, !dbg !13911
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !13912

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !13913, !tbaa !3837
  %add179 = add i64 %103, 2, !dbg !13914
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !13915, !tbaa !3837
  %cmp180 = icmp ult i64 %add179, %104, !dbg !13916
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !13917

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !13918, !tbaa !2993
  %106 = load i64, i64* %i, align 8, !dbg !13919, !tbaa !3837
  %add183 = add i64 %106, 1, !dbg !13920
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !13918, !ctir !112
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !13918, !tbaa !3652
  %conv185 = sext i8 %107 to i32, !dbg !13918
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !13921
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !13922

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !13923, !tbaa !2993
  %109 = load i64, i64* %i, align 8, !dbg !13924, !tbaa !3837
  %add189 = add i64 %109, 2, !dbg !13925
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !13923, !ctir !112
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !13923, !tbaa !3652
  %conv191 = sext i8 %110 to i32, !dbg !13923
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !13926

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13927, !tbaa !3104
  %tobool193 = trunc i8 %111 to i1, !dbg !13927
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !13930

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !13931

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !13932, !tbaa !2993
  %113 = load i64, i64* %i, align 8, !dbg !13933, !tbaa !3837
  %add196 = add i64 %113, 2, !dbg !13934
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !13932, !ctir !112
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !13932, !tbaa !3652
  store i8 %114, i8* %c, align 1, !dbg !13935, !tbaa !3652
  %115 = load i64, i64* %i, align 8, !dbg !13936, !tbaa !3837
  %add198 = add i64 %115, 2, !dbg !13936
  store i64 %add198, i64* %i, align 8, !dbg !13936, !tbaa !3837
  br label %do.body199, !dbg !13937

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !13938, !tbaa !3837
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !13938, !tbaa !3837
  %cmp200 = icmp ult i64 %116, %117, !dbg !13938
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !13941

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !13938, !tbaa !2993
  %119 = load i64, i64* %len, align 8, !dbg !13938, !tbaa !3837
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !13938, !ctir !7
  store i8 63, i8* %arrayidx203, align 1, !dbg !13938, !tbaa !3652
  br label %if.end204, !dbg !13938

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !13941, !tbaa !3837
  %inc205 = add i64 %120, 1, !dbg !13941
  store i64 %inc205, i64* %len, align 8, !dbg !13941, !tbaa !3837
  br label %do.end206, !dbg !13941

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !13942

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !13943, !tbaa !3837
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !13943, !tbaa !3837
  %cmp208 = icmp ult i64 %121, %122, !dbg !13943
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !13946

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !13943, !tbaa !2993
  %124 = load i64, i64* %len, align 8, !dbg !13943, !tbaa !3837
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !13943, !ctir !7
  store i8 34, i8* %arrayidx211, align 1, !dbg !13943, !tbaa !3652
  br label %if.end212, !dbg !13943

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !13946, !tbaa !3837
  %inc213 = add i64 %125, 1, !dbg !13946
  store i64 %inc213, i64* %len, align 8, !dbg !13946, !tbaa !3837
  br label %do.end214, !dbg !13946

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !13947

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !13948, !tbaa !3837
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !13948, !tbaa !3837
  %cmp216 = icmp ult i64 %126, %127, !dbg !13948
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !13951

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !13948, !tbaa !2993
  %129 = load i64, i64* %len, align 8, !dbg !13948, !tbaa !3837
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !13948, !ctir !7
  store i8 34, i8* %arrayidx219, align 1, !dbg !13948, !tbaa !3652
  br label %if.end220, !dbg !13948

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !13951, !tbaa !3837
  %inc221 = add i64 %130, 1, !dbg !13951
  store i64 %inc221, i64* %len, align 8, !dbg !13951, !tbaa !3837
  br label %do.end222, !dbg !13951

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !13952

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !13953, !tbaa !3837
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !13953, !tbaa !3837
  %cmp224 = icmp ult i64 %131, %132, !dbg !13953
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !13956

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !13953, !tbaa !2993
  %134 = load i64, i64* %len, align 8, !dbg !13953, !tbaa !3837
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !13953, !ctir !7
  store i8 63, i8* %arrayidx227, align 1, !dbg !13953, !tbaa !3652
  br label %if.end228, !dbg !13953

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !13956, !tbaa !3837
  %inc229 = add i64 %135, 1, !dbg !13956
  store i64 %inc229, i64* %len, align 8, !dbg !13956, !tbaa !3837
  br label %do.end230, !dbg !13956

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !13957

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !13958

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !13959

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !13960

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !13961

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !13962

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !13963, !tbaa !3652
  br label %c_escape, !dbg !13964

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !13965, !tbaa !3652
  br label %c_escape, !dbg !13966

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !13967, !tbaa !3652
  br label %c_escape, !dbg !13968

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !13969, !tbaa !3652
  br label %c_and_shell_escape, !dbg !13970

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !13971, !tbaa !3652
  br label %c_and_shell_escape, !dbg !13972

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !13973, !tbaa !3652
  br label %c_and_shell_escape, !dbg !13974

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !13975, !tbaa !3652
  br label %c_escape, !dbg !13976

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !13977, !tbaa !3652
  store i8 %136, i8* %esc, align 1, !dbg !13978, !tbaa !3652
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !13979, !tbaa !3652
  %cmp244 = icmp eq i32 %137, 2, !dbg !13981
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !13982

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13983, !tbaa !3104
  %tobool247 = trunc i8 %138 to i1, !dbg !13983
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !13986

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !13987

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !13988

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !13989, !tbaa !3104
  %tobool251 = trunc i8 %139 to i1, !dbg !13989
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !13991

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !13992, !tbaa !3104
  %tobool254 = trunc i8 %140 to i1, !dbg !13992
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !13993

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !13994, !tbaa !3837
  %tobool257 = icmp ne i64 %141, 0, !dbg !13994
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !13995

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !13996

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !13994

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !13997), !dbg !13998
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !13999, !tbaa !3652
  %cmp260 = icmp eq i32 %142, 2, !dbg !14001
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14002

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14003, !tbaa !3104
  %tobool263 = trunc i8 %143 to i1, !dbg !14003
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14004

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14005

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14003

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14006), !dbg !14007
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14008, !tbaa !3104
  %tobool267 = trunc i8 %144 to i1, !dbg !14008
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14010

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14011, !tbaa !3652
  store i8 %145, i8* %c, align 1, !dbg !14013, !tbaa !3652
  br label %store_escape, !dbg !14014

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14015

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14016, !tbaa !3837
  %cmp271 = icmp eq i64 %146, -1, !dbg !14018
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14019

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14020, !tbaa !2993
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14020, !ctir !112
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14020, !tbaa !3652
  %conv275 = sext i8 %148 to i32, !dbg !14020
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14021
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14016

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14022, !tbaa !3837
  %cmp279 = icmp eq i64 %149, 1, !dbg !14023
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14019

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14024

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14025

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14026, !tbaa !3837
  %cmp284 = icmp ne i64 %150, 0, !dbg !14028
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14029

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14030

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14031

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14032, !tbaa !3104
  br label %sw.bb289, !dbg !14033

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14034, !tbaa !3652
  %cmp290 = icmp eq i32 %151, 2, !dbg !14036
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14037

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14038, !tbaa !3104
  %tobool293 = trunc i8 %152 to i1, !dbg !14038
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14039

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14040

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14041

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14042, !tbaa !3104
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14043, !tbaa !3104
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14044, !tbaa !3652
  %cmp298 = icmp eq i32 %153, 2, !dbg !14046
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14047

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14048, !tbaa !3104
  %tobool301 = trunc i8 %154 to i1, !dbg !14048
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14051

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14052

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14053, !tbaa !3837
  %tobool304 = icmp ne i64 %155, 0, !dbg !14053
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14055

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14056, !tbaa !3837
  %tobool306 = icmp ne i64 %156, 0, !dbg !14056
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14057

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14058, !tbaa !3837
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14060, !tbaa !3837
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14061, !tbaa !3837
  br label %if.end308, !dbg !14062

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14063

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14064, !tbaa !3837
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14064, !tbaa !3837
  %cmp310 = icmp ult i64 %158, %159, !dbg !14064
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14067

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14064, !tbaa !2993
  %161 = load i64, i64* %len, align 8, !dbg !14064, !tbaa !3837
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14064, !ctir !7
  store i8 39, i8* %arrayidx313, align 1, !dbg !14064, !tbaa !3652
  br label %if.end314, !dbg !14064

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14067, !tbaa !3837
  %inc315 = add i64 %162, 1, !dbg !14067
  store i64 %inc315, i64* %len, align 8, !dbg !14067, !tbaa !3837
  br label %do.end316, !dbg !14067

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14068

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14069, !tbaa !3837
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14069, !tbaa !3837
  %cmp318 = icmp ult i64 %163, %164, !dbg !14069
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14072

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14069, !tbaa !2993
  %166 = load i64, i64* %len, align 8, !dbg !14069, !tbaa !3837
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14069, !ctir !7
  store i8 92, i8* %arrayidx321, align 1, !dbg !14069, !tbaa !3652
  br label %if.end322, !dbg !14069

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14072, !tbaa !3837
  %inc323 = add i64 %167, 1, !dbg !14072
  store i64 %inc323, i64* %len, align 8, !dbg !14072, !tbaa !3837
  br label %do.end324, !dbg !14072

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14073

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14074, !tbaa !3837
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14074, !tbaa !3837
  %cmp326 = icmp ult i64 %168, %169, !dbg !14074
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14077

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14074, !tbaa !2993
  %171 = load i64, i64* %len, align 8, !dbg !14074, !tbaa !3837
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14074, !ctir !7
  store i8 39, i8* %arrayidx329, align 1, !dbg !14074, !tbaa !3652
  br label %if.end330, !dbg !14074

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14077, !tbaa !3837
  %inc331 = add i64 %172, 1, !dbg !14077
  store i64 %inc331, i64* %len, align 8, !dbg !14077, !tbaa !3837
  br label %do.end332, !dbg !14077

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14078, !tbaa !3104
  br label %if.end333, !dbg !14079

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14080

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14081, !tbaa !3104
  br label %sw.epilog564, !dbg !14082

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14083, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14086, metadata !DIExpression()), !dbg !14087
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14088, !tbaa !3104
  %tobool336 = trunc i8 %173 to i1, !dbg !14088
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14090

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14091, !tbaa !3837
  %call338 = call i16** @__ctype_b_loc() #15, !dbg !14093
  %174 = load i16*, i16** %call338, align 8, !dbg !14093, !tbaa !2993, !ctir !1015
  %175 = load i8, i8* %c, align 1, !dbg !14093, !tbaa !3652
  %conv339 = zext i8 %175 to i32, !dbg !14093
  %idxprom = sext i32 %conv339 to i64, !dbg !14093
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14093, !ctir !1015
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14093, !tbaa !3799
  %conv341 = zext i16 %176 to i32, !dbg !14093
  %and342 = and i32 %conv341, 16384, !dbg !14093
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14094
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14095
  store i8 %frombool345, i8* %printable, align 1, !dbg !14095, !tbaa !3104
  br label %if.end410, !dbg !14096

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t* %mbstate, metadata !14097, metadata !DIExpression()), !dbg !14099
  %177 = bitcast %struct.__mbstate_t* %mbstate to i8*, !dbg !14100
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14100
  store i64 0, i64* %m, align 8, !dbg !14101, !tbaa !3837
  store i8 1, i8* %printable, align 1, !dbg !14102, !tbaa !3104
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14103, !tbaa !3837
  %cmp347 = icmp eq i64 %178, -1, !dbg !14105
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14106

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14107, !tbaa !2993
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14108
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14109, !tbaa !3837
  br label %if.end351, !dbg !14110

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14111

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14112, metadata !DIExpression()), !dbg !14114
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14115, metadata !DIExpression()), !dbg !14116
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14117, !tbaa !2993
  %181 = load i64, i64* %i, align 8, !dbg !14118, !tbaa !3837
  %182 = load i64, i64* %m, align 8, !dbg !14119, !tbaa !3837
  %add353 = add i64 %181, %182, !dbg !14120
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14117, !ctir !112
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14121, !tbaa !3837
  %184 = load i64, i64* %i, align 8, !dbg !14122, !tbaa !3837
  %185 = load i64, i64* %m, align 8, !dbg !14123, !tbaa !3837
  %add355 = add i64 %184, %185, !dbg !14124
  %sub = sub i64 %183, %add355, !dbg !14125
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.__mbstate_t* %mbstate), !dbg !14126
  store i64 %call356, i64* %bytes, align 8, !dbg !14116, !tbaa !3837
  %186 = load i64, i64* %bytes, align 8, !dbg !14127, !tbaa !3837
  %cmp357 = icmp eq i64 %186, 0, !dbg !14129
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14130

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14131

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14132, !tbaa !3837
  %cmp361 = icmp eq i64 %187, -1, !dbg !14134
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14135

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14136, !tbaa !3104
  br label %do.end409, !dbg !14138

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14139, !tbaa !3837
  %cmp365 = icmp eq i64 %188, -2, !dbg !14141
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14142

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14143, !tbaa !3104
  br label %while.cond, !dbg !14145

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14146, !tbaa !3837
  %190 = load i64, i64* %m, align 8, !dbg !14147, !tbaa !3837
  %add368 = add i64 %189, %190, !dbg !14148
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14149, !tbaa !3837
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14150
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14151

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14152, !tbaa !2993
  %193 = load i64, i64* %i, align 8, !dbg !14153, !tbaa !3837
  %194 = load i64, i64* %m, align 8, !dbg !14154, !tbaa !3837
  %add371 = add i64 %193, %194, !dbg !14155
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14152, !ctir !112
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14152, !tbaa !3652
  %conv373 = sext i8 %195 to i32, !dbg !14152
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14151
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14156
  br i1 %196, label %while.body, label %while.end, !dbg !14145

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14157, !tbaa !3837
  %inc375 = add i64 %197, 1, !dbg !14157
  store i64 %inc375, i64* %m, align 8, !dbg !14157, !tbaa !3837
  br label %while.cond, !dbg !14145, !llvm.loop !14158

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14159

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14160, !tbaa !3104
  %tobool377 = trunc i8 %198 to i1, !dbg !14160
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14163

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14164, !tbaa !3652
  %cmp380 = icmp eq i32 %199, 2, !dbg !14165
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14166

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14167, metadata !DIExpression()), !dbg !14169
  store i64 1, i64* %j, align 8, !dbg !14170, !tbaa !3837
  br label %for.cond383, !dbg !14172

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14173, !tbaa !3837
  %201 = load i64, i64* %bytes, align 8, !dbg !14175, !tbaa !3837
  %cmp384 = icmp ult i64 %200, %201, !dbg !14176
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14177

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14178, !tbaa !2993
  %203 = load i64, i64* %i, align 8, !dbg !14179, !tbaa !3837
  %204 = load i64, i64* %m, align 8, !dbg !14180, !tbaa !3837
  %add387 = add i64 %203, %204, !dbg !14181
  %205 = load i64, i64* %j, align 8, !dbg !14182, !tbaa !3837
  %add388 = add i64 %add387, %205, !dbg !14183
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14178, !ctir !112
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14178, !tbaa !3652
  %conv390 = sext i8 %206 to i32, !dbg !14178
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14184

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14185

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14187

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14188

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14189, !tbaa !3837
  %inc395 = add i64 %207, 1, !dbg !14189
  store i64 %inc395, i64* %j, align 8, !dbg !14189, !tbaa !3837
  br label %for.cond383, !dbg !14190, !llvm.loop !14191

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14193

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14194, !tbaa !2980
  %call398 = call i32 @iswprint(i32 %208) #12, !dbg !14196
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14196
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14197

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14198, !tbaa !3104
  br label %if.end401, !dbg !14199

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14200, !tbaa !3837
  %210 = load i64, i64* %m, align 8, !dbg !14201, !tbaa !3837
  %add402 = add i64 %210, %209, !dbg !14201
  store i64 %add402, i64* %m, align 8, !dbg !14201, !tbaa !3837
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14202

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.__mbstate_t* %mbstate) #14, !dbg !14203
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14204
  %lnot408 = xor i1 %tobool407, true, !dbg !14204
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14202, !llvm.loop !14205

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14207, !tbaa !3104
  %tobool411 = trunc i8 %211 to i1, !dbg !14207
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14208
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14208, !tbaa !3104
  %212 = load i64, i64* %m, align 8, !dbg !14209, !tbaa !3837
  %cmp413 = icmp ult i64 1, %212, !dbg !14211
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14212

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14213, !tbaa !3104
  %tobool415 = trunc i8 %213 to i1, !dbg !14213
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14214

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14215, !tbaa !3104
  %tobool418 = trunc i8 %214 to i1, !dbg !14215
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14216

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14217, metadata !DIExpression()), !dbg !14219
  %215 = load i64, i64* %i, align 8, !dbg !14220, !tbaa !3837
  %216 = load i64, i64* %m, align 8, !dbg !14221, !tbaa !3837
  %add420 = add i64 %215, %216, !dbg !14222
  store i64 %add420, i64* %ilim, align 8, !dbg !14219, !tbaa !3837
  br label %for.cond421, !dbg !14223

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14224, !tbaa !3104
  %tobool422 = trunc i8 %217 to i1, !dbg !14224
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14229

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14230, !tbaa !3104
  %tobool425 = trunc i8 %218 to i1, !dbg !14230
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14231

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14232

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14234, !tbaa !3104
  %tobool428 = trunc i8 %219 to i1, !dbg !14234
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14237

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14234

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14237, !tbaa !3104
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14238, !tbaa !3652
  %cmp431 = icmp eq i32 %220, 2, !dbg !14238
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14238

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14238, !tbaa !3104
  %tobool434 = trunc i8 %221 to i1, !dbg !14238
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14237

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14240

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14242, !tbaa !3837
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14242, !tbaa !3837
  %cmp437 = icmp ult i64 %222, %223, !dbg !14242
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14245

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14242, !tbaa !2993
  %225 = load i64, i64* %len, align 8, !dbg !14242, !tbaa !3837
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14242, !ctir !7
  store i8 39, i8* %arrayidx440, align 1, !dbg !14242, !tbaa !3652
  br label %if.end441, !dbg !14242

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14245, !tbaa !3837
  %inc442 = add i64 %226, 1, !dbg !14245
  store i64 %inc442, i64* %len, align 8, !dbg !14245, !tbaa !3837
  br label %do.end444, !dbg !14245

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14240

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14246, !tbaa !3837
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14246, !tbaa !3837
  %cmp446 = icmp ult i64 %227, %228, !dbg !14246
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14249

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14246, !tbaa !2993
  %230 = load i64, i64* %len, align 8, !dbg !14246, !tbaa !3837
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14246, !ctir !7
  store i8 36, i8* %arrayidx449, align 1, !dbg !14246, !tbaa !3652
  br label %if.end450, !dbg !14246

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14249, !tbaa !3837
  %inc451 = add i64 %231, 1, !dbg !14249
  store i64 %inc451, i64* %len, align 8, !dbg !14249, !tbaa !3837
  br label %do.end453, !dbg !14249

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14240

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14250, !tbaa !3837
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14250, !tbaa !3837
  %cmp455 = icmp ult i64 %232, %233, !dbg !14250
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14253

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14250, !tbaa !2993
  %235 = load i64, i64* %len, align 8, !dbg !14250, !tbaa !3837
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14250, !ctir !7
  store i8 39, i8* %arrayidx458, align 1, !dbg !14250, !tbaa !3652
  br label %if.end459, !dbg !14250

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14253, !tbaa !3837
  %inc460 = add i64 %236, 1, !dbg !14253
  store i64 %inc460, i64* %len, align 8, !dbg !14253, !tbaa !3837
  br label %do.end462, !dbg !14253

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14240, !tbaa !3104
  br label %if.end463, !dbg !14240

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14237

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14254, !tbaa !3837
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14254, !tbaa !3837
  %cmp465 = icmp ult i64 %237, %238, !dbg !14254
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14257

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14254, !tbaa !2993
  %240 = load i64, i64* %len, align 8, !dbg !14254, !tbaa !3837
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14254, !ctir !7
  store i8 92, i8* %arrayidx468, align 1, !dbg !14254, !tbaa !3652
  br label %if.end469, !dbg !14254

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14257, !tbaa !3837
  %inc470 = add i64 %241, 1, !dbg !14257
  store i64 %inc470, i64* %len, align 8, !dbg !14257, !tbaa !3837
  br label %do.end472, !dbg !14257

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14237

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14258

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14259, !tbaa !3837
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14259, !tbaa !3837
  %cmp476 = icmp ult i64 %242, %243, !dbg !14259
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14262

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14259, !tbaa !3652
  %conv479 = zext i8 %244 to i32, !dbg !14259
  %shr = ashr i32 %conv479, 6, !dbg !14259
  %add480 = add nsw i32 48, %shr, !dbg !14259
  %conv481 = trunc i32 %add480 to i8, !dbg !14259
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14259, !tbaa !2993
  %246 = load i64, i64* %len, align 8, !dbg !14259, !tbaa !3837
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14259, !ctir !7
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14259, !tbaa !3652
  br label %if.end483, !dbg !14259

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14262, !tbaa !3837
  %inc484 = add i64 %247, 1, !dbg !14262
  store i64 %inc484, i64* %len, align 8, !dbg !14262, !tbaa !3837
  br label %do.end486, !dbg !14262

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14263

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14264, !tbaa !3837
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14264, !tbaa !3837
  %cmp488 = icmp ult i64 %248, %249, !dbg !14264
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14267

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14264, !tbaa !3652
  %conv491 = zext i8 %250 to i32, !dbg !14264
  %shr492 = ashr i32 %conv491, 3, !dbg !14264
  %and493 = and i32 %shr492, 7, !dbg !14264
  %add494 = add nsw i32 48, %and493, !dbg !14264
  %conv495 = trunc i32 %add494 to i8, !dbg !14264
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14264, !tbaa !2993
  %252 = load i64, i64* %len, align 8, !dbg !14264, !tbaa !3837
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14264, !ctir !7
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14264, !tbaa !3652
  br label %if.end497, !dbg !14264

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14267, !tbaa !3837
  %inc498 = add i64 %253, 1, !dbg !14267
  store i64 %inc498, i64* %len, align 8, !dbg !14267, !tbaa !3837
  br label %do.end500, !dbg !14267

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14268, !tbaa !3652
  %conv501 = zext i8 %254 to i32, !dbg !14268
  %and502 = and i32 %conv501, 7, !dbg !14269
  %add503 = add nsw i32 48, %and502, !dbg !14270
  %conv504 = trunc i32 %add503 to i8, !dbg !14271
  store i8 %conv504, i8* %c, align 1, !dbg !14272, !tbaa !3652
  br label %if.end518, !dbg !14273

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14274, !tbaa !3104
  %tobool506 = trunc i8 %255 to i1, !dbg !14274
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14276

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14277

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14279, !tbaa !3837
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14279, !tbaa !3837
  %cmp509 = icmp ult i64 %256, %257, !dbg !14279
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14282

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14279, !tbaa !2993
  %259 = load i64, i64* %len, align 8, !dbg !14279, !tbaa !3837
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14279, !ctir !7
  store i8 92, i8* %arrayidx512, align 1, !dbg !14279, !tbaa !3652
  br label %if.end513, !dbg !14279

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14282, !tbaa !3837
  %inc514 = add i64 %260, 1, !dbg !14282
  store i64 %inc514, i64* %len, align 8, !dbg !14282, !tbaa !3837
  br label %do.end516, !dbg !14282

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14283, !tbaa !3104
  br label %if.end517, !dbg !14284

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14285, !tbaa !3837
  %262 = load i64, i64* %i, align 8, !dbg !14287, !tbaa !3837
  %add519 = add i64 %262, 1, !dbg !14288
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14289
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14290

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14291

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14292

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14293, !tbaa !3104
  %tobool525 = trunc i8 %263 to i1, !dbg !14293
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14293

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14293, !tbaa !3104
  %tobool528 = trunc i8 %264 to i1, !dbg !14293
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14296

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14297

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14299, !tbaa !3837
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14299, !tbaa !3837
  %cmp531 = icmp ult i64 %265, %266, !dbg !14299
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14302

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14299, !tbaa !2993
  %268 = load i64, i64* %len, align 8, !dbg !14299, !tbaa !3837
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14299, !ctir !7
  store i8 39, i8* %arrayidx534, align 1, !dbg !14299, !tbaa !3652
  br label %if.end535, !dbg !14299

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14302, !tbaa !3837
  %inc536 = add i64 %269, 1, !dbg !14302
  store i64 %inc536, i64* %len, align 8, !dbg !14302, !tbaa !3837
  br label %do.end538, !dbg !14302

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14297

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14303, !tbaa !3837
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14303, !tbaa !3837
  %cmp540 = icmp ult i64 %270, %271, !dbg !14303
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14306

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14303, !tbaa !2993
  %273 = load i64, i64* %len, align 8, !dbg !14303, !tbaa !3837
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14303, !ctir !7
  store i8 39, i8* %arrayidx543, align 1, !dbg !14303, !tbaa !3652
  br label %if.end544, !dbg !14303

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14306, !tbaa !3837
  %inc545 = add i64 %274, 1, !dbg !14306
  store i64 %inc545, i64* %len, align 8, !dbg !14306, !tbaa !3837
  br label %do.end547, !dbg !14306

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14297, !tbaa !3104
  br label %if.end548, !dbg !14297

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14296

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14307

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14308, !tbaa !3837
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14308, !tbaa !3837
  %cmp552 = icmp ult i64 %275, %276, !dbg !14308
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14311

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14308, !tbaa !3652
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14308, !tbaa !2993
  %279 = load i64, i64* %len, align 8, !dbg !14308, !tbaa !3837
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14308, !ctir !7
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14308, !tbaa !3652
  br label %if.end556, !dbg !14308

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14311, !tbaa !3837
  %inc557 = add i64 %280, 1, !dbg !14311
  store i64 %inc557, i64* %len, align 8, !dbg !14311, !tbaa !3837
  br label %do.end559, !dbg !14311

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14312, !tbaa !2993
  %282 = load i64, i64* %i, align 8, !dbg !14313, !tbaa !3837
  %inc560 = add i64 %282, 1, !dbg !14313
  store i64 %inc560, i64* %i, align 8, !dbg !14313, !tbaa !3837
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14312, !ctir !112
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14312, !tbaa !3652
  store i8 %283, i8* %c, align 1, !dbg !14314, !tbaa !3652
  br label %for.cond421, !dbg !14315, !llvm.loop !14316

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14319

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14320

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14321, !tbaa !3104
  %tobool565 = trunc i8 %284 to i1, !dbg !14321
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14323

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14324, !tbaa !3652
  %cmp568 = icmp ne i32 %285, 2, !dbg !14325
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14326

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14327, !tbaa !3104
  %tobool571 = trunc i8 %286 to i1, !dbg !14327
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14328

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14329, !tbaa !2993
  %tobool574 = icmp ne i32* %287, null, !dbg !14329
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14330

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14331, !tbaa !2993
  %289 = load i8, i8* %c, align 1, !dbg !14332, !tbaa !3652
  %conv576 = zext i8 %289 to i64, !dbg !14332
  %div = udiv i64 %conv576, 32, !dbg !14333
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14331, !ctir !1013
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14331, !tbaa !2980
  %291 = load i8, i8* %c, align 1, !dbg !14334, !tbaa !3652
  %conv578 = zext i8 %291 to i64, !dbg !14334
  %rem = urem i64 %conv578, 32, !dbg !14335
  %sh_prom = trunc i64 %rem to i32, !dbg !14336
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14336
  %and580 = and i32 %shr579, 1, !dbg !14337
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14337
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14338

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14339, !tbaa !3104
  %tobool583 = trunc i8 %292 to i1, !dbg !14339
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14340

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14341

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14339

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14342), !dbg !14343
  br label %do.body586, !dbg !14344

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14345, !tbaa !3104
  %tobool587 = trunc i8 %293 to i1, !dbg !14345
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14348

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14345

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14348, !tbaa !3104
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14349, !tbaa !3652
  %cmp590 = icmp eq i32 %294, 2, !dbg !14349
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14349

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14349, !tbaa !3104
  %tobool593 = trunc i8 %295 to i1, !dbg !14349
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14348

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14351

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14353, !tbaa !3837
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14353, !tbaa !3837
  %cmp596 = icmp ult i64 %296, %297, !dbg !14353
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14356

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14353, !tbaa !2993
  %299 = load i64, i64* %len, align 8, !dbg !14353, !tbaa !3837
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14353, !ctir !7
  store i8 39, i8* %arrayidx599, align 1, !dbg !14353, !tbaa !3652
  br label %if.end600, !dbg !14353

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14356, !tbaa !3837
  %inc601 = add i64 %300, 1, !dbg !14356
  store i64 %inc601, i64* %len, align 8, !dbg !14356, !tbaa !3837
  br label %do.end603, !dbg !14356

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14351

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14357, !tbaa !3837
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14357, !tbaa !3837
  %cmp605 = icmp ult i64 %301, %302, !dbg !14357
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14360

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14357, !tbaa !2993
  %304 = load i64, i64* %len, align 8, !dbg !14357, !tbaa !3837
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14357, !ctir !7
  store i8 36, i8* %arrayidx608, align 1, !dbg !14357, !tbaa !3652
  br label %if.end609, !dbg !14357

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14360, !tbaa !3837
  %inc610 = add i64 %305, 1, !dbg !14360
  store i64 %inc610, i64* %len, align 8, !dbg !14360, !tbaa !3837
  br label %do.end612, !dbg !14360

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14351

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14361, !tbaa !3837
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14361, !tbaa !3837
  %cmp614 = icmp ult i64 %306, %307, !dbg !14361
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14364

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14361, !tbaa !2993
  %309 = load i64, i64* %len, align 8, !dbg !14361, !tbaa !3837
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14361, !ctir !7
  store i8 39, i8* %arrayidx617, align 1, !dbg !14361, !tbaa !3652
  br label %if.end618, !dbg !14361

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14364, !tbaa !3837
  %inc619 = add i64 %310, 1, !dbg !14364
  store i64 %inc619, i64* %len, align 8, !dbg !14364, !tbaa !3837
  br label %do.end621, !dbg !14364

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14351, !tbaa !3104
  br label %if.end622, !dbg !14351

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14348

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14365, !tbaa !3837
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14365, !tbaa !3837
  %cmp624 = icmp ult i64 %311, %312, !dbg !14365
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14368

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14365, !tbaa !2993
  %314 = load i64, i64* %len, align 8, !dbg !14365, !tbaa !3837
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14365, !ctir !7
  store i8 92, i8* %arrayidx627, align 1, !dbg !14365, !tbaa !3652
  br label %if.end628, !dbg !14365

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14368, !tbaa !3837
  %inc629 = add i64 %315, 1, !dbg !14368
  store i64 %inc629, i64* %len, align 8, !dbg !14368, !tbaa !3837
  br label %do.end631, !dbg !14368

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14348

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14348

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14369), !dbg !14370
  br label %do.body634, !dbg !14371

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14372, !tbaa !3104
  %tobool635 = trunc i8 %316 to i1, !dbg !14372
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14372

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14372, !tbaa !3104
  %tobool638 = trunc i8 %317 to i1, !dbg !14372
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !14375

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !14376

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !14378, !tbaa !3837
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !14378, !tbaa !3837
  %cmp641 = icmp ult i64 %318, %319, !dbg !14378
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !14381

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !14378, !tbaa !2993
  %321 = load i64, i64* %len, align 8, !dbg !14378, !tbaa !3837
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !14378, !ctir !7
  store i8 39, i8* %arrayidx644, align 1, !dbg !14378, !tbaa !3652
  br label %if.end645, !dbg !14378

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !14381, !tbaa !3837
  %inc646 = add i64 %322, 1, !dbg !14381
  store i64 %inc646, i64* %len, align 8, !dbg !14381, !tbaa !3837
  br label %do.end648, !dbg !14381

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !14376

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !14382, !tbaa !3837
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !14382, !tbaa !3837
  %cmp650 = icmp ult i64 %323, %324, !dbg !14382
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !14385

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !14382, !tbaa !2993
  %326 = load i64, i64* %len, align 8, !dbg !14382, !tbaa !3837
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !14382, !ctir !7
  store i8 39, i8* %arrayidx653, align 1, !dbg !14382, !tbaa !3652
  br label %if.end654, !dbg !14382

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !14385, !tbaa !3837
  %inc655 = add i64 %327, 1, !dbg !14385
  store i64 %inc655, i64* %len, align 8, !dbg !14385, !tbaa !3837
  br label %do.end657, !dbg !14385

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14376, !tbaa !3104
  br label %if.end658, !dbg !14376

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !14375

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !14386

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !14387, !tbaa !3837
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !14387, !tbaa !3837
  %cmp662 = icmp ult i64 %328, %329, !dbg !14387
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !14390

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !14387, !tbaa !3652
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !14387, !tbaa !2993
  %332 = load i64, i64* %len, align 8, !dbg !14387, !tbaa !3837
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !14387, !ctir !7
  store i8 %330, i8* %arrayidx665, align 1, !dbg !14387, !tbaa !3652
  br label %if.end666, !dbg !14387

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !14390, !tbaa !3837
  %inc667 = add i64 %333, 1, !dbg !14390
  store i64 %inc667, i64* %len, align 8, !dbg !14390, !tbaa !3837
  br label %do.end669, !dbg !14390

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !14391, !tbaa !3104
  %tobool670 = trunc i8 %334 to i1, !dbg !14391
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !14393

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14394, !tbaa !3104
  br label %if.end672, !dbg !14395

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !14396

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !14397, !tbaa !3837
  %inc674 = add i64 %335, 1, !dbg !14397
  store i64 %inc674, i64* %i, align 8, !dbg !14397, !tbaa !3837
  br label %for.cond44, !dbg !14398, !llvm.loop !14399

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !14401, !tbaa !3837
  %cmp676 = icmp eq i64 %336, 0, !dbg !14403
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !14404

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !14405, !tbaa !3652
  %cmp679 = icmp eq i32 %337, 2, !dbg !14406
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !14407

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14408, !tbaa !3104
  %tobool682 = trunc i8 %338 to i1, !dbg !14408
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !14409

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !14410

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !14411, !tbaa !3652
  %cmp686 = icmp eq i32 %339, 2, !dbg !14413
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !14414

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14415, !tbaa !3104
  %tobool689 = trunc i8 %340 to i1, !dbg !14415
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !14416

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !14417, !tbaa !3104
  %tobool691 = trunc i8 %341 to i1, !dbg !14417
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !14418

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14419, !tbaa !3104
  %tobool694 = trunc i8 %342 to i1, !dbg !14419
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !14422

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !14423, !tbaa !2993
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !14424, !tbaa !3837
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !14425, !tbaa !2993
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !14426, !tbaa !3837
  %347 = load i32, i32* %flags.addr, align 4, !dbg !14427, !tbaa !2980
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14428, !tbaa !2993
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !14429, !tbaa !2993
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !14430, !tbaa !2993
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !14431
  store i64 %call696, i64* %retval, align 8, !dbg !14432
  br label %return, !dbg !14432

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !14433, !tbaa !3837
  %tobool698 = icmp ne i64 %351, 0, !dbg !14433
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !14435

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !14436, !tbaa !3837
  %tobool700 = icmp ne i64 %352, 0, !dbg !14436
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !14437

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !14438, !tbaa !3837
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !14440, !tbaa !3837
  store i64 0, i64* %len, align 8, !dbg !14441, !tbaa !3837
  br label %process_input, !dbg !14442

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !14443

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !14444, !tbaa !2993
  %tobool705 = icmp ne i8* %354, null, !dbg !14444
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !14446

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14447, !tbaa !3104
  %tobool707 = trunc i8 %355 to i1, !dbg !14447
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !14448

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !14449

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !14450, !tbaa !2993
  %357 = load i8, i8* %356, align 1, !dbg !14453, !tbaa !3652, !ctir !113
  %tobool710 = icmp ne i8 %357, 0, !dbg !14454
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14454

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14455

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14456, !tbaa !3837
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14456, !tbaa !3837
  %cmp713 = icmp ult i64 %358, %359, !dbg !14456
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !14459

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14456, !tbaa !2993
  %361 = load i8, i8* %360, align 1, !dbg !14456, !tbaa !3652, !ctir !113
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14456, !tbaa !2993
  %363 = load i64, i64* %len, align 8, !dbg !14456, !tbaa !3837
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14456, !ctir !7
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14456, !tbaa !3652
  br label %if.end717, !dbg !14456

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !14459, !tbaa !3837
  %inc718 = add i64 %364, 1, !dbg !14459
  store i64 %inc718, i64* %len, align 8, !dbg !14459, !tbaa !3837
  br label %do.end720, !dbg !14459

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !14459

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !14460, !tbaa !2993
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !14460
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !14460, !tbaa !2993
  br label %for.cond709, !dbg !14461, !llvm.loop !14462

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !14463

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !14464, !tbaa !3837
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !14466, !tbaa !3837
  %cmp725 = icmp ult i64 %366, %367, !dbg !14467
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !14468

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !14469, !tbaa !2993
  %369 = load i64, i64* %len, align 8, !dbg !14470, !tbaa !3837
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !14469, !ctir !7
  store i8 0, i8* %arrayidx728, align 1, !dbg !14471, !tbaa !3652
  br label %if.end729, !dbg !14469

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !14472, !tbaa !3837
  store i64 %370, i64* %retval, align 8, !dbg !14473
  br label %return, !dbg !14473

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !14474), !dbg !14475
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !14476, !tbaa !3652
  %cmp730 = icmp eq i32 %371, 2, !dbg !14478
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !14479

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !14480, !tbaa !3104
  %tobool733 = trunc i8 %372 to i1, !dbg !14480
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !14481

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !14482, !tbaa !3652
  br label %if.end736, !dbg !14483

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !14484, !tbaa !2993
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !14485, !tbaa !3837
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !14486, !tbaa !2993
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !14487, !tbaa !3837
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !14488, !tbaa !3652
  %378 = load i32, i32* %flags.addr, align 4, !dbg !14489, !tbaa !2980
  %and737 = and i32 %378, -3, !dbg !14490
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !14491, !tbaa !2993
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !14492, !tbaa !2993
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !14493
  store i64 %call738, i64* %retval, align 8, !dbg !14494
  br label %return, !dbg !14494

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !14495
  ret i64 %381, !dbg !14495
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !14496 !ctir !1032 {
entry:
  %retval = alloca i8*, align 8, !ctir !112
  %msgid.addr = alloca i8*, align 8, !ctir !112
  %s.addr = alloca i32, align 4, !ctir !917
  %translation = alloca i8*, align 8, !ctir !112
  %locale_code = alloca i8*, align 8, !ctir !112
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !14497, metadata !DIExpression()), !dbg !14498
  store i32 %s, i32* %s.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14499, metadata !DIExpression()), !dbg !14500
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !14501, metadata !DIExpression()), !dbg !14502
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !14503, !tbaa !2993
  %call = call i8* @gettext(i8* %0) #12, !dbg !14503
  store i8* %call, i8** %translation, align 8, !dbg !14502, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !14504, metadata !DIExpression()), !dbg !14505
  %1 = load i8*, i8** %translation, align 8, !dbg !14506, !tbaa !2993
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !14508, !tbaa !2993
  %cmp = icmp ne i8* %1, %2, !dbg !14509
  br i1 %cmp, label %if.then, label %if.end, !dbg !14510

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !14511, !tbaa !2993
  store i8* %3, i8** %retval, align 8, !dbg !14512
  br label %return, !dbg !14512

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !14513
  store i8* %call1, i8** %locale_code, align 8, !dbg !14514, !tbaa !2993
  %4 = load i8*, i8** %locale_code, align 8, !dbg !14515, !tbaa !2993
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.315, i64 0, i64 0)) #14, !dbg !14515
  %cmp3 = icmp eq i32 %call2, 0, !dbg !14515
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !14517

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !14518, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !14518, !ctir !112
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14518, !tbaa !3652
  %conv = sext i8 %6 to i32, !dbg !14518
  %cmp5 = icmp eq i32 %conv, 96, !dbg !14519
  %7 = zext i1 %cmp5 to i64, !dbg !14518
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.316, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.317, i64 0, i64 0), !dbg !14518
  store i8* %cond, i8** %retval, align 8, !dbg !14520
  br label %return, !dbg !14520

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !14521, !tbaa !2993
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.318, i64 0, i64 0)) #14, !dbg !14521
  %cmp9 = icmp eq i32 %call8, 0, !dbg !14521
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !14523

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !14524, !tbaa !2993
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !14524, !ctir !112
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !14524, !tbaa !3652
  %conv13 = sext i8 %10 to i32, !dbg !14524
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !14525
  %11 = zext i1 %cmp14 to i64, !dbg !14524
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.319, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.320, i64 0, i64 0), !dbg !14524
  store i8* %cond16, i8** %retval, align 8, !dbg !14526
  br label %return, !dbg !14526

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !14527, !tbaa !3652
  %cmp18 = icmp eq i32 %12, 9, !dbg !14528
  %13 = zext i1 %cmp18 to i64, !dbg !14527
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.312, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.314, i64 0, i64 0), !dbg !14527
  store i8* %cond20, i8** %retval, align 8, !dbg !14529
  br label %return, !dbg !14529

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !14530
  ret i8* %14, !dbg !14530
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.__mbstate_t*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14531 !ctir !966 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !953
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14532, metadata !DIExpression()), !dbg !14533
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14534, metadata !DIExpression()), !dbg !14535
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14536, metadata !DIExpression()), !dbg !14537
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14538, !tbaa !2993
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14539, !tbaa !3837
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14540, !tbaa !2993
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !14541
  ret i8* %call, !dbg !14542
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !14543 !ctir !968 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %size.addr = alloca i64*, align 8, !ctir !599
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !953
  %p = alloca %struct.quoting_options*, align 8, !ctir !953
  %e = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %bufsize = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14544, metadata !DIExpression()), !dbg !14545
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14546, metadata !DIExpression()), !dbg !14547
  store i64* %size, i64** %size.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !14548, metadata !DIExpression()), !dbg !14549
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14550, metadata !DIExpression()), !dbg !14551
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14552, metadata !DIExpression()), !dbg !14553
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14554, !tbaa !2993
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14554
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14554

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14555, !tbaa !2993
  br label %cond.end, !dbg !14554

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14554
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14553, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14556, metadata !DIExpression()), !dbg !14557
  %call = call i32* @__errno_location() #15, !dbg !14558
  %2 = load i32, i32* %call, align 4, !dbg !14558, !tbaa !2980, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !14557, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14559, metadata !DIExpression()), !dbg !14560
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14561, !tbaa !2993
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !14562, !ctir !954
  %4 = load i32, i32* %flags1, align 4, !dbg !14562, !tbaa !13550, !ctir !5
  %5 = load i64*, i64** %size.addr, align 8, !dbg !14563, !tbaa !2993
  %tobool2 = icmp ne i64* %5, null, !dbg !14563
  %6 = zext i1 %tobool2 to i64, !dbg !14563
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !14563
  %or = or i32 %4, %cond3, !dbg !14564
  store i32 %or, i32* %flags, align 4, !dbg !14560, !tbaa !2980
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !14565, metadata !DIExpression()), !dbg !14566
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !14567, !tbaa !2993
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !14568, !tbaa !3837
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14569, !tbaa !2993
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !14570, !ctir !954
  %10 = load i32, i32* %style, align 8, !dbg !14570, !tbaa !13482, !ctir !917
  %11 = load i32, i32* %flags, align 4, !dbg !14571, !tbaa !2980
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14572, !tbaa !2993
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !14573, !ctir !954
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14572
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14574, !tbaa !2993
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !14575, !ctir !954
  %14 = load i8*, i8** %left_quote, align 8, !dbg !14575, !tbaa !13583, !ctir !112
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14576, !tbaa !2993
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !14577, !ctir !954
  %16 = load i8*, i8** %right_quote, align 8, !dbg !14577, !tbaa !13588, !ctir !112
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !14578
  %add = add i64 %call4, 1, !dbg !14579
  store i64 %add, i64* %bufsize, align 8, !dbg !14566, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !14580, metadata !DIExpression()), !dbg !14581
  %17 = load i64, i64* %bufsize, align 8, !dbg !14582, !tbaa !3837
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !14583
  store i8* %call5, i8** %buf, align 8, !dbg !14581, !tbaa !2993
  %18 = load i8*, i8** %buf, align 8, !dbg !14584, !tbaa !2993
  %19 = load i64, i64* %bufsize, align 8, !dbg !14585, !tbaa !3837
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !14586, !tbaa !2993
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !14587, !tbaa !3837
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14588, !tbaa !2993
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !14589, !ctir !954
  %23 = load i32, i32* %style6, align 8, !dbg !14589, !tbaa !13482, !ctir !917
  %24 = load i32, i32* %flags, align 4, !dbg !14590, !tbaa !2980
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14591, !tbaa !2993
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !14592, !ctir !954
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !14591
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14593, !tbaa !2993
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !14594, !ctir !954
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !14594, !tbaa !13583, !ctir !112
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14595, !tbaa !2993
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !14596, !ctir !954
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !14596, !tbaa !13588, !ctir !112
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !14597
  %30 = load i32, i32* %e, align 4, !dbg !14598, !tbaa !2980
  %call12 = call i32* @__errno_location() #15, !dbg !14599
  store i32 %30, i32* %call12, align 4, !dbg !14600, !tbaa !2980, !ctir !5
  %31 = load i64*, i64** %size.addr, align 8, !dbg !14601, !tbaa !2993
  %tobool13 = icmp ne i64* %31, null, !dbg !14601
  br i1 %tobool13, label %if.then, label %if.end, !dbg !14603

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !14604, !tbaa !3837
  %sub = sub i64 %32, 1, !dbg !14605
  %33 = load i64*, i64** %size.addr, align 8, !dbg !14606, !tbaa !2993
  store i64 %sub, i64* %33, align 8, !dbg !14607, !tbaa !3837, !ctir !52
  br label %if.end, !dbg !14608

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !14609, !tbaa !2993
  ret i8* %34, !dbg !14610
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !14611 !ctir !131 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !970
  %i = alloca i32, align 4, !ctir !5
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14612, metadata !DIExpression()), !dbg !14613
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14614, !tbaa !2993
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !14613, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14615, metadata !DIExpression()), !dbg !14616
  store i32 1, i32* %i, align 4, !dbg !14617, !tbaa !2980
  br label %for.cond, !dbg !14619

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !14620, !tbaa !2980
  %2 = load i32, i32* @nslots, align 4, !dbg !14622, !tbaa !2980
  %cmp = icmp slt i32 %1, %2, !dbg !14623
  br i1 %cmp, label %for.body, label %for.end, !dbg !14624

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14625, !tbaa !2993
  %4 = load i32, i32* %i, align 4, !dbg !14626, !tbaa !2980
  %idxprom = sext i32 %4 to i64, !dbg !14625
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !14625, !ctir !970
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !14627, !ctir !971
  %5 = load i8*, i8** %val, align 8, !dbg !14627, !tbaa !14628, !ctir !7
  call void @free(i8* %5) #12, !dbg !14630
  br label %for.inc, !dbg !14630

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !14631, !tbaa !2980
  %inc = add nsw i32 %6, 1, !dbg !14631
  store i32 %inc, i32* %i, align 4, !dbg !14631, !tbaa !2980
  br label %for.cond, !dbg !14632, !llvm.loop !14633

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14635, !tbaa !2993
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !14635, !ctir !970
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !14637, !ctir !971
  %8 = load i8*, i8** %val2, align 8, !dbg !14637, !tbaa !14628, !ctir !7
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14638
  br i1 %cmp3, label %if.then, label %if.end, !dbg !14639

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14640, !tbaa !2993
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !14640, !ctir !970
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !14642, !ctir !971
  %10 = load i8*, i8** %val5, align 8, !dbg !14642, !tbaa !14628, !ctir !7
  call void @free(i8* %10) #12, !dbg !14643
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !14644, !tbaa !14645, !ctir !52
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !14646, !tbaa !14628, !ctir !7
  br label %if.end, !dbg !14647

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14648, !tbaa !2993
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !14650
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14651

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14652, !tbaa !2993
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !14652
  call void @free(i8* %13) #12, !dbg !14654
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !14655, !tbaa !2993
  br label %if.end8, !dbg !14656

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !14657, !tbaa !2980
  ret void, !dbg !14658
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !14659 !ctir !975 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14660, metadata !DIExpression()), !dbg !14661
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14662, metadata !DIExpression()), !dbg !14663
  %0 = load i32, i32* %n.addr, align 4, !dbg !14664, !tbaa !2980
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14665, !tbaa !2993
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !14666
  ret i8* %call, !dbg !14667
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !14668 !ctir !1034 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %options.addr = alloca %struct.quoting_options*, align 8, !ctir !953
  %e = alloca i32, align 4, !ctir !5
  %sv = alloca %struct.slotvec*, align 8, !ctir !970
  %preallocated = alloca i8, align 1, !ctir !117
  %nmax = alloca i32, align 4, !ctir !5
  %size = alloca i64, align 8, !ctir !52
  %val = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %qsize = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14669, metadata !DIExpression()), !dbg !14670
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14671, metadata !DIExpression()), !dbg !14672
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14673, metadata !DIExpression()), !dbg !14674
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !14675, metadata !DIExpression()), !dbg !14676
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14677, metadata !DIExpression()), !dbg !14678
  %call = call i32* @__errno_location() #15, !dbg !14679
  %0 = load i32, i32* %call, align 4, !dbg !14679, !tbaa !2980, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !14678, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !14680, metadata !DIExpression()), !dbg !14681
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !14682, !tbaa !2993
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !14681, !tbaa !2993
  %2 = load i32, i32* %n.addr, align 4, !dbg !14683, !tbaa !2980
  %cmp = icmp slt i32 %2, 0, !dbg !14685
  br i1 %cmp, label %if.then, label %if.end, !dbg !14686

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14687
  unreachable, !dbg !14687

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !14688, !tbaa !2980
  %4 = load i32, i32* %n.addr, align 4, !dbg !14690, !tbaa !2980
  %cmp1 = icmp sle i32 %3, %4, !dbg !14691
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !14692

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !14693, metadata !DIExpression()), !dbg !14695
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14696, !tbaa !2993
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !14697
  %frombool = zext i1 %cmp3 to i8, !dbg !14695
  store i8 %frombool, i8* %preallocated, align 1, !dbg !14695, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !14698, metadata !DIExpression()), !dbg !14699
  store i32 2147483646, i32* %nmax, align 4, !dbg !14699, !tbaa !2980
  %6 = load i32, i32* %nmax, align 4, !dbg !14700, !tbaa !2980
  %7 = load i32, i32* %n.addr, align 4, !dbg !14702, !tbaa !2980
  %cmp4 = icmp slt i32 %6, %7, !dbg !14703
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14704

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #16, !dbg !14705
  unreachable, !dbg !14705

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !14706, !tbaa !3104
  %tobool = trunc i8 %8 to i1, !dbg !14706
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14706

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !14706

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14707, !tbaa !2993
  br label %cond.end, !dbg !14706

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !14706
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !14706
  %11 = load i32, i32* %n.addr, align 4, !dbg !14708, !tbaa !2980
  %add = add nsw i32 %11, 1, !dbg !14709
  %conv = sext i32 %add to i64, !dbg !14710
  %mul = mul i64 %conv, 16, !dbg !14711
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !14712
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !14712
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !14713, !tbaa !2993
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !14714, !tbaa !2993
  %13 = load i8, i8* %preallocated, align 1, !dbg !14715, !tbaa !3104
  %tobool8 = trunc i8 %13 to i1, !dbg !14715
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !14717

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14718, !tbaa !2993
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !14719
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !14719, !tbaa.struct !14720
  br label %if.end10, !dbg !14721

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14722, !tbaa !2993
  %17 = load i32, i32* @nslots, align 4, !dbg !14723, !tbaa !2980
  %idx.ext = sext i32 %17 to i64, !dbg !14724
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !14724
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !14725
  %19 = load i32, i32* %n.addr, align 4, !dbg !14726, !tbaa !2980
  %add11 = add nsw i32 %19, 1, !dbg !14727
  %20 = load i32, i32* @nslots, align 4, !dbg !14728, !tbaa !2980
  %sub = sub nsw i32 %add11, %20, !dbg !14729
  %conv12 = sext i32 %sub to i64, !dbg !14730
  %mul13 = mul i64 %conv12, 16, !dbg !14731
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !14725
  %21 = load i32, i32* %n.addr, align 4, !dbg !14732, !tbaa !2980
  %add14 = add nsw i32 %21, 1, !dbg !14733
  store i32 %add14, i32* @nslots, align 4, !dbg !14734, !tbaa !2980
  br label %if.end15, !dbg !14735

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !14736, metadata !DIExpression()), !dbg !14738
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14739, !tbaa !2993
  %23 = load i32, i32* %n.addr, align 4, !dbg !14740, !tbaa !2980
  %idxprom = sext i32 %23 to i64, !dbg !14739
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !14739, !ctir !970
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !14741, !ctir !971
  %24 = load i64, i64* %size16, align 8, !dbg !14741, !tbaa !14645, !ctir !52
  store i64 %24, i64* %size, align 8, !dbg !14738, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8** %val, metadata !14742, metadata !DIExpression()), !dbg !14743
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14744, !tbaa !2993
  %26 = load i32, i32* %n.addr, align 4, !dbg !14745, !tbaa !2980
  %idxprom17 = sext i32 %26 to i64, !dbg !14744
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !14744, !ctir !970
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !14746, !ctir !971
  %27 = load i8*, i8** %val19, align 8, !dbg !14746, !tbaa !14628, !ctir !7
  store i8* %27, i8** %val, align 8, !dbg !14743, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !14747, metadata !DIExpression()), !dbg !14748
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14749, !tbaa !2993
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !14750, !ctir !954
  %29 = load i32, i32* %flags20, align 4, !dbg !14750, !tbaa !13550, !ctir !5
  %or = or i32 %29, 1, !dbg !14751
  store i32 %or, i32* %flags, align 4, !dbg !14748, !tbaa !2980
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !14752, metadata !DIExpression()), !dbg !14753
  %30 = load i8*, i8** %val, align 8, !dbg !14754, !tbaa !2993
  %31 = load i64, i64* %size, align 8, !dbg !14755, !tbaa !3837
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !14756, !tbaa !2993
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !14757, !tbaa !3837
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14758, !tbaa !2993
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !14759, !ctir !954
  %35 = load i32, i32* %style, align 8, !dbg !14759, !tbaa !13482, !ctir !917
  %36 = load i32, i32* %flags, align 4, !dbg !14760, !tbaa !2980
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14761, !tbaa !2993
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !14762, !ctir !954
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14761
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14763, !tbaa !2993
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !14764, !ctir !954
  %39 = load i8*, i8** %left_quote, align 8, !dbg !14764, !tbaa !13583, !ctir !112
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14765, !tbaa !2993
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !14766, !ctir !954
  %41 = load i8*, i8** %right_quote, align 8, !dbg !14766, !tbaa !13588, !ctir !112
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !14767
  store i64 %call21, i64* %qsize, align 8, !dbg !14753, !tbaa !3837
  %42 = load i64, i64* %size, align 8, !dbg !14768, !tbaa !3837
  %43 = load i64, i64* %qsize, align 8, !dbg !14770, !tbaa !3837
  %cmp22 = icmp ule i64 %42, %43, !dbg !14771
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !14772

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !14773, !tbaa !3837
  %add25 = add i64 %44, 1, !dbg !14775
  store i64 %add25, i64* %size, align 8, !dbg !14776, !tbaa !3837
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14777, !tbaa !2993
  %46 = load i32, i32* %n.addr, align 4, !dbg !14778, !tbaa !2980
  %idxprom26 = sext i32 %46 to i64, !dbg !14777
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !14777, !ctir !970
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !14779, !ctir !971
  store i64 %add25, i64* %size28, align 8, !dbg !14780, !tbaa !14645, !ctir !52
  %47 = load i8*, i8** %val, align 8, !dbg !14781, !tbaa !2993
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !14783
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !14784

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !14785, !tbaa !2993
  call void @free(i8* %48) #12, !dbg !14786
  br label %if.end32, !dbg !14786

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !14787, !tbaa !3837
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !14788
  store i8* %call33, i8** %val, align 8, !dbg !14789, !tbaa !2993
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !14790, !tbaa !2993
  %51 = load i32, i32* %n.addr, align 4, !dbg !14791, !tbaa !2980
  %idxprom34 = sext i32 %51 to i64, !dbg !14790
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !14790, !ctir !970
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !14792, !ctir !971
  store i8* %call33, i8** %val36, align 8, !dbg !14793, !tbaa !14628, !ctir !7
  %52 = load i8*, i8** %val, align 8, !dbg !14794, !tbaa !2993
  %53 = load i64, i64* %size, align 8, !dbg !14795, !tbaa !3837
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !14796, !tbaa !2993
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !14797, !tbaa !3837
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14798, !tbaa !2993
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !14799, !ctir !954
  %57 = load i32, i32* %style37, align 8, !dbg !14799, !tbaa !13482, !ctir !917
  %58 = load i32, i32* %flags, align 4, !dbg !14800, !tbaa !2980
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14801, !tbaa !2993
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !14802, !ctir !954
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !14801
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14803, !tbaa !2993
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !14804, !ctir !954
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !14804, !tbaa !13583, !ctir !112
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !14805, !tbaa !2993
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !14806, !ctir !954
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !14806, !tbaa !13588, !ctir !112
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !14807
  br label %if.end43, !dbg !14808

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !14809, !tbaa !2980
  %call44 = call i32* @__errno_location() #15, !dbg !14810
  store i32 %64, i32* %call44, align 4, !dbg !14811, !tbaa !2980, !ctir !5
  %65 = load i8*, i8** %val, align 8, !dbg !14812, !tbaa !2993
  ret i8* %65, !dbg !14813
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !14814 !ctir !977 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14815, metadata !DIExpression()), !dbg !14816
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14817, metadata !DIExpression()), !dbg !14818
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14819, metadata !DIExpression()), !dbg !14820
  %0 = load i32, i32* %n.addr, align 4, !dbg !14821, !tbaa !2980
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14822, !tbaa !2993
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14823, !tbaa !3837
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !14824
  ret i8* %call, !dbg !14825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !14826 !ctir !979 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14827, metadata !DIExpression()), !dbg !14828
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14829, !tbaa !2993
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !14830
  ret i8* %call, !dbg !14831
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !14832 !ctir !981 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14833, metadata !DIExpression()), !dbg !14834
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14835, metadata !DIExpression()), !dbg !14836
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14837, !tbaa !2993
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14838, !tbaa !3837
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !14839
  ret i8* %call, !dbg !14840
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !14841 !ctir !983 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !917
  %arg.addr = alloca i8*, align 8, !ctir !112
  %o = alloca %struct.quoting_options, align 8, !ctir !954
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14842, metadata !DIExpression()), !dbg !14843
  store i32 %s, i32* %s.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14844, metadata !DIExpression()), !dbg !14845
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14846, metadata !DIExpression()), !dbg !14847
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14848, metadata !DIExpression()), !dbg !14849
  %0 = load i32, i32* %s.addr, align 4, !dbg !14850, !tbaa !3652
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14851
  %1 = load i32, i32* %n.addr, align 4, !dbg !14852, !tbaa !2980
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14853, !tbaa !2993
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !14854
  ret i8* %call, !dbg !14855
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !14856 !ctir !1036 {
entry:
  %style.addr = alloca i32, align 4, !ctir !917
  store i32 %style, i32* %style.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !14857, metadata !DIExpression()), !dbg !14858
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !14859, metadata !DIExpression()), !dbg !14860
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !14860
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !14860
  %1 = load i32, i32* %style.addr, align 4, !dbg !14861, !tbaa !3652
  %cmp = icmp eq i32 %1, 10, !dbg !14863
  br i1 %cmp, label %if.then, label %if.end, !dbg !14864

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !14865
  unreachable, !dbg !14865

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !14866, !tbaa !3652
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !14867, !ctir !942
  store i32 %2, i32* %style1, align 8, !dbg !14868, !tbaa !13482, !ctir !917
  ret void, !dbg !14869
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14870 !ctir !985 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !917
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o = alloca %struct.quoting_options, align 8, !ctir !954
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14871, metadata !DIExpression()), !dbg !14872
  store i32 %s, i32* %s.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14873, metadata !DIExpression()), !dbg !14874
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14875, metadata !DIExpression()), !dbg !14876
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14877, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14879, metadata !DIExpression()), !dbg !14880
  %0 = load i32, i32* %s.addr, align 4, !dbg !14881, !tbaa !3652
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !14882
  %1 = load i32, i32* %n.addr, align 4, !dbg !14883, !tbaa !2980
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14884, !tbaa !2993
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14885, !tbaa !3837
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !14886
  ret i8* %call, !dbg !14887
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !14888 !ctir !987 {
entry:
  %s.addr = alloca i32, align 4, !ctir !917
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i32 %s, i32* %s.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14889, metadata !DIExpression()), !dbg !14890
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14891, metadata !DIExpression()), !dbg !14892
  %0 = load i32, i32* %s.addr, align 4, !dbg !14893, !tbaa !3652
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14894, !tbaa !2993
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !14895
  ret i8* %call, !dbg !14896
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !14897 !ctir !989 {
entry:
  %s.addr = alloca i32, align 4, !ctir !917
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %s, i32* %s.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14898, metadata !DIExpression()), !dbg !14899
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14900, metadata !DIExpression()), !dbg !14901
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14902, metadata !DIExpression()), !dbg !14903
  %0 = load i32, i32* %s.addr, align 4, !dbg !14904, !tbaa !3652
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !14905, !tbaa !2993
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !14906, !tbaa !3837
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !14907
  ret i8* %call, !dbg !14908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !14909 !ctir !991 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %ch.addr = alloca i8, align 1, !ctir !8
  %options = alloca %struct.quoting_options, align 8, !ctir !942
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14910, metadata !DIExpression()), !dbg !14911
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14912, metadata !DIExpression()), !dbg !14913
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3652
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14914, metadata !DIExpression()), !dbg !14915
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !14916, metadata !DIExpression()), !dbg !14917
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !14918
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !14918, !tbaa.struct !14919
  %1 = load i8, i8* %ch.addr, align 1, !dbg !14920, !tbaa !3652
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !14921
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !14922, !tbaa !2993
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !14923, !tbaa !3837
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !14924
  ret i8* %call1, !dbg !14925
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !14926 !ctir !993 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  %ch.addr = alloca i8, align 1, !ctir !8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14927, metadata !DIExpression()), !dbg !14928
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3652
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !14929, metadata !DIExpression()), !dbg !14930
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14931, !tbaa !2993
  %1 = load i8, i8* %ch.addr, align 1, !dbg !14932, !tbaa !3652
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !14933
  ret i8* %call, !dbg !14934
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !14935 !ctir !979 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14936, metadata !DIExpression()), !dbg !14937
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14938, !tbaa !2993
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !14939
  ret i8* %call, !dbg !14940
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !14941 !ctir !981 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14942, metadata !DIExpression()), !dbg !14943
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14944, metadata !DIExpression()), !dbg !14945
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !14946, !tbaa !2993
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !14947, !tbaa !3837
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !14948
  ret i8* %call, !dbg !14949
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !14950 !ctir !983 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !917
  %arg.addr = alloca i8*, align 8, !ctir !112
  %options = alloca %struct.quoting_options, align 8, !ctir !942
  %tmp = alloca %struct.quoting_options, align 8, !ctir !942
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14951, metadata !DIExpression()), !dbg !14952
  store i32 %s, i32* %s.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14953, metadata !DIExpression()), !dbg !14954
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14955, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !14957, metadata !DIExpression()), !dbg !14958
  %0 = load i32, i32* %s.addr, align 4, !dbg !14959, !tbaa !3652
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !14960
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !14960
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !14960
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !14960, !tbaa.struct !14919
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !14961
  %3 = load i32, i32* %n.addr, align 4, !dbg !14962, !tbaa !2980
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !14963, !tbaa !2993
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !14964
  ret i8* %call1, !dbg !14965
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !14966 !ctir !995 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %left_quote.addr = alloca i8*, align 8, !ctir !112
  %right_quote.addr = alloca i8*, align 8, !ctir !112
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14967, metadata !DIExpression()), !dbg !14968
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14969, metadata !DIExpression()), !dbg !14970
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14971, metadata !DIExpression()), !dbg !14972
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14973, metadata !DIExpression()), !dbg !14974
  %0 = load i32, i32* %n.addr, align 4, !dbg !14975, !tbaa !2980
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !14976, !tbaa !2993
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !14977, !tbaa !2993
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !14978, !tbaa !2993
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !14979
  ret i8* %call, !dbg !14980
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !14981 !ctir !997 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %left_quote.addr = alloca i8*, align 8, !ctir !112
  %right_quote.addr = alloca i8*, align 8, !ctir !112
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o = alloca %struct.quoting_options, align 8, !ctir !942
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14982, metadata !DIExpression()), !dbg !14983
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14984, metadata !DIExpression()), !dbg !14985
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14986, metadata !DIExpression()), !dbg !14987
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14988, metadata !DIExpression()), !dbg !14989
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14990, metadata !DIExpression()), !dbg !14991
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !14992, metadata !DIExpression()), !dbg !14993
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !14994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !14994, !tbaa.struct !14919
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !14995, !tbaa !2993
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !14996, !tbaa !2993
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !14997
  %3 = load i32, i32* %n.addr, align 4, !dbg !14998, !tbaa !2980
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !14999, !tbaa !2993
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15000, !tbaa !3837
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15001
  ret i8* %call, !dbg !15002
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15003 !ctir !999 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !112
  %right_quote.addr = alloca i8*, align 8, !ctir !112
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15004, metadata !DIExpression()), !dbg !15005
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15006, metadata !DIExpression()), !dbg !15007
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15008, metadata !DIExpression()), !dbg !15009
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15010, !tbaa !2993
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15011, !tbaa !2993
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15012, !tbaa !2993
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15013
  ret i8* %call, !dbg !15014
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15015 !ctir !1001 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !112
  %right_quote.addr = alloca i8*, align 8, !ctir !112
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15016, metadata !DIExpression()), !dbg !15017
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15018, metadata !DIExpression()), !dbg !15019
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15020, metadata !DIExpression()), !dbg !15021
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15022, metadata !DIExpression()), !dbg !15023
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15024, !tbaa !2993
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15025, !tbaa !2993
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15026, !tbaa !2993
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15027, !tbaa !3837
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15028
  ret i8* %call, !dbg !15029
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15030 !ctir !1003 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15031, metadata !DIExpression()), !dbg !15032
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15033, metadata !DIExpression()), !dbg !15034
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15035, metadata !DIExpression()), !dbg !15036
  %0 = load i32, i32* %n.addr, align 4, !dbg !15037, !tbaa !2980
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15038, !tbaa !2993
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15039, !tbaa !3837
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15040
  ret i8* %call, !dbg !15041
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15042 !ctir !1005 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15043, metadata !DIExpression()), !dbg !15044
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15045, metadata !DIExpression()), !dbg !15046
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15047, !tbaa !2993
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15048, !tbaa !3837
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15049
  ret i8* %call, !dbg !15050
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15051 !ctir !1007 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15052, metadata !DIExpression()), !dbg !15053
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15054, metadata !DIExpression()), !dbg !15055
  %0 = load i32, i32* %n.addr, align 4, !dbg !15056, !tbaa !2980
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15057, !tbaa !2993
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15058
  ret i8* %call, !dbg !15059
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15060 !ctir !1009 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !112
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15061, metadata !DIExpression()), !dbg !15062
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15063, !tbaa !2993
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15064
  ret i8* %call, !dbg !15065
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15066 !ctir !1826 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fd1.addr = alloca i32, align 4, !ctir !5
  %src.addr = alloca i8*, align 8, !ctir !112
  %fd2.addr = alloca i32, align 4, !ctir !5
  %dst.addr = alloca i8*, align 8, !ctir !112
  %flags.addr = alloca i32, align 4, !ctir !67
  %ret_val = alloca i32, align 4, !ctir !5
  %err = alloca i32, align 4, !ctir !5
  %src_len = alloca i64, align 8, !ctir !52
  %dst_len = alloca i64, align 8, !ctir !52
  %src_temp = alloca i8*, align 8, !ctir !7
  %dst_temp = alloca i8*, align 8, !ctir !7
  %src_slash = alloca i8, align 1, !ctir !117
  %dst_slash = alloca i8, align 1, !ctir !117
  %rename_errno = alloca i32, align 4, !ctir !5
  %src_st = alloca %struct.stat, align 8, !ctir !15068
  %dst_st = alloca %struct.stat, align 8, !ctir !15068
  %dst_found_nonexistent = alloca i8, align 1, !ctir !117
  store i32 %fd1, i32* %fd1.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15089, metadata !DIExpression()), !dbg !15090
  store i8* %src, i8** %src.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15091, metadata !DIExpression()), !dbg !15092
  store i32 %fd2, i32* %fd2.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15093, metadata !DIExpression()), !dbg !15094
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15095, metadata !DIExpression()), !dbg !15096
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15097, metadata !DIExpression()), !dbg !15098
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15099, metadata !DIExpression()), !dbg !15100
  store i32 -1, i32* %ret_val, align 4, !dbg !15100, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15101, metadata !DIExpression()), !dbg !15102
  store i32 22, i32* %err, align 4, !dbg !15102, !tbaa !2980
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15103, !tbaa !2980
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15104, !tbaa !2993
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15105, !tbaa !2980
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15106, !tbaa !2993
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15107, !tbaa !2980
  %call = call i64 (i64, ...) @syscall(i64 316, i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #12, !dbg !15108
  %conv = trunc i64 %call to i32, !dbg !15108
  store i32 %conv, i32* %ret_val, align 4, !dbg !15109, !tbaa !2980
  %call1 = call i32* @__errno_location() #15, !dbg !15110
  %5 = load i32, i32* %call1, align 4, !dbg !15110, !tbaa !2980, !ctir !5
  store i32 %5, i32* %err, align 4, !dbg !15111, !tbaa !2980
  %6 = load i32, i32* %ret_val, align 4, !dbg !15112, !tbaa !2980
  %cmp = icmp slt i32 %6, 0, !dbg !15114
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15115

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15116, !tbaa !2980
  %cmp3 = icmp eq i32 %7, 22, !dbg !15117
  br i1 %cmp3, label %if.end, label %lor.lhs.false, !dbg !15118

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15119, !tbaa !2980
  %cmp5 = icmp eq i32 %8, 38, !dbg !15120
  br i1 %cmp5, label %if.end, label %lor.lhs.false7, !dbg !15121

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15122, !tbaa !2980
  %cmp8 = icmp eq i32 %9, 95, !dbg !15123
  br i1 %cmp8, label %if.end, label %if.then, !dbg !15124

if.then:                                          ; preds = %lor.lhs.false7, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15125, !tbaa !2980
  store i32 %10, i32* %retval, align 4, !dbg !15126
  br label %return, !dbg !15126

if.end:                                           ; preds = %lor.lhs.false7, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15127, metadata !DIExpression()), !dbg !15129
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15130, metadata !DIExpression()), !dbg !15131
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15132, metadata !DIExpression()), !dbg !15133
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15134, !tbaa !2993
  store i8* %11, i8** %src_temp, align 8, !dbg !15133, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15135, metadata !DIExpression()), !dbg !15136
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15137, !tbaa !2993
  store i8* %12, i8** %dst_temp, align 8, !dbg !15136, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15138, metadata !DIExpression()), !dbg !15139
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15140, metadata !DIExpression()), !dbg !15141
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15142, metadata !DIExpression()), !dbg !15143
  store i32 20, i32* %rename_errno, align 4, !dbg !15143, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15144, metadata !DIExpression()), !dbg !15145
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15146, metadata !DIExpression()), !dbg !15147
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15148, metadata !DIExpression()), !dbg !15149
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15149, !tbaa !3104
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15150, !tbaa !2980
  %cmp10 = icmp ne i32 %13, 0, !dbg !15152
  br i1 %cmp10, label %if.then12, label %if.end31, !dbg !15153

if.then12:                                        ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15154, !tbaa !2980
  %and = and i32 %14, -2, !dbg !15157
  %tobool = icmp ne i32 %and, 0, !dbg !15157
  br i1 %tobool, label %if.then13, label %if.else, !dbg !15158

if.then13:                                        ; preds = %if.then12
  %call14 = call i32 @errno_fail(i32 95), !dbg !15159
  store i32 %call14, i32* %retval, align 4, !dbg !15160
  br label %return, !dbg !15160

if.else:                                          ; preds = %if.then12
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15161, !tbaa !2980
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15164, !tbaa !2993
  %call15 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15165
  %cmp16 = icmp eq i32 %call15, 0, !dbg !15166
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18, !dbg !15167

lor.lhs.false18:                                  ; preds = %if.else
  %call19 = call i32* @__errno_location() #15, !dbg !15168
  %17 = load i32, i32* %call19, align 4, !dbg !15168, !tbaa !2980, !ctir !5
  %cmp20 = icmp eq i32 %17, 75, !dbg !15169
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !15170

if.then22:                                        ; preds = %lor.lhs.false18, %if.else
  %call23 = call i32 @errno_fail(i32 17), !dbg !15171
  store i32 %call23, i32* %retval, align 4, !dbg !15172
  br label %return, !dbg !15172

if.end24:                                         ; preds = %lor.lhs.false18
  %call25 = call i32* @__errno_location() #15, !dbg !15173
  %18 = load i32, i32* %call25, align 4, !dbg !15173, !tbaa !2980, !ctir !5
  %cmp26 = icmp ne i32 %18, 2, !dbg !15175
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !15176

if.then28:                                        ; preds = %if.end24
  store i32 -1, i32* %retval, align 4, !dbg !15177
  br label %return, !dbg !15177

if.end29:                                         ; preds = %if.end24
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15178, !tbaa !3104
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  br label %if.end31, !dbg !15179

if.end31:                                         ; preds = %if.end30, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15180, !tbaa !2993
  %call32 = call i64 @strlen(i8* %19) #14, !dbg !15181
  store i64 %call32, i64* %src_len, align 8, !dbg !15182, !tbaa !3837
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15183, !tbaa !2993
  %call33 = call i64 @strlen(i8* %20) #14, !dbg !15184
  store i64 %call33, i64* %dst_len, align 8, !dbg !15185, !tbaa !3837
  %21 = load i64, i64* %src_len, align 8, !dbg !15186, !tbaa !3837
  %tobool34 = icmp ne i64 %21, 0, !dbg !15186
  br i1 %tobool34, label %lor.lhs.false35, label %if.then37, !dbg !15188

lor.lhs.false35:                                  ; preds = %if.end31
  %22 = load i64, i64* %dst_len, align 8, !dbg !15189, !tbaa !3837
  %tobool36 = icmp ne i64 %22, 0, !dbg !15189
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !15190

if.then37:                                        ; preds = %lor.lhs.false35, %if.end31
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15191, !tbaa !2980
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15192, !tbaa !2993
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15193, !tbaa !2980
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15194, !tbaa !2993
  %call38 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #12, !dbg !15195
  store i32 %call38, i32* %retval, align 4, !dbg !15196
  br label %return, !dbg !15196

if.end39:                                         ; preds = %lor.lhs.false35
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15197, !tbaa !2993
  %28 = load i64, i64* %src_len, align 8, !dbg !15198, !tbaa !3837
  %sub = sub i64 %28, 1, !dbg !15199
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15197, !ctir !112
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15197, !tbaa !3652
  %conv40 = sext i8 %29 to i32, !dbg !15197
  %cmp41 = icmp eq i32 %conv40, 47, !dbg !15200
  %frombool = zext i1 %cmp41 to i8, !dbg !15201
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15201, !tbaa !3104
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15202, !tbaa !2993
  %31 = load i64, i64* %dst_len, align 8, !dbg !15203, !tbaa !3837
  %sub43 = sub i64 %31, 1, !dbg !15204
  %arrayidx44 = getelementptr inbounds i8, i8* %30, i64 %sub43, !dbg !15202, !ctir !112
  %32 = load i8, i8* %arrayidx44, align 1, !dbg !15202, !tbaa !3652
  %conv45 = sext i8 %32 to i32, !dbg !15202
  %cmp46 = icmp eq i32 %conv45, 47, !dbg !15205
  %frombool48 = zext i1 %cmp46 to i8, !dbg !15206
  store i8 %frombool48, i8* %dst_slash, align 1, !dbg !15206, !tbaa !3104
  %33 = load i8, i8* %src_slash, align 1, !dbg !15207, !tbaa !3104
  %tobool49 = trunc i8 %33 to i1, !dbg !15207
  br i1 %tobool49, label %if.end54, label %land.lhs.true50, !dbg !15209

land.lhs.true50:                                  ; preds = %if.end39
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15210, !tbaa !3104
  %tobool51 = trunc i8 %34 to i1, !dbg !15210
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !15211

if.then52:                                        ; preds = %land.lhs.true50
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15212, !tbaa !2980
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15213, !tbaa !2993
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15214, !tbaa !2980
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15215, !tbaa !2993
  %call53 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #12, !dbg !15216
  store i32 %call53, i32* %retval, align 4, !dbg !15217
  br label %return, !dbg !15217

if.end54:                                         ; preds = %land.lhs.true50, %if.end39
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15218, !tbaa !2980
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15220, !tbaa !2993
  %call55 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15221
  %tobool56 = icmp ne i32 %call55, 0, !dbg !15221
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !15222

if.then57:                                        ; preds = %if.end54
  store i32 -1, i32* %retval, align 4, !dbg !15223
  br label %return, !dbg !15223

if.end58:                                         ; preds = %if.end54
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15224, !tbaa !3104
  %tobool59 = trunc i8 %41 to i1, !dbg !15224
  br i1 %tobool59, label %if.then60, label %if.else67, !dbg !15226

if.then60:                                        ; preds = %if.end58
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15227, !ctir !15068
  %42 = load i32, i32* %st_mode, align 8, !dbg !15227, !tbaa !3176, !ctir !130
  %and61 = and i32 %42, 61440, !dbg !15227
  %cmp62 = icmp eq i32 %and61, 16384, !dbg !15227
  br i1 %cmp62, label %if.end66, label %if.then64, !dbg !15230

if.then64:                                        ; preds = %if.then60
  %call65 = call i32 @errno_fail(i32 2), !dbg !15231
  store i32 %call65, i32* %retval, align 4, !dbg !15232
  br label %return, !dbg !15232

if.end66:                                         ; preds = %if.then60
  br label %if.end98, !dbg !15233

if.else67:                                        ; preds = %if.end58
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15234, !tbaa !2980
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15236, !tbaa !2993
  %call68 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15237
  %tobool69 = icmp ne i32 %call68, 0, !dbg !15237
  br i1 %tobool69, label %if.then70, label %if.else81, !dbg !15238

if.then70:                                        ; preds = %if.else67
  %call71 = call i32* @__errno_location() #15, !dbg !15239
  %45 = load i32, i32* %call71, align 4, !dbg !15239, !tbaa !2980, !ctir !5
  %cmp72 = icmp ne i32 %45, 2, !dbg !15242
  br i1 %cmp72, label %if.then79, label %lor.lhs.false74, !dbg !15243

lor.lhs.false74:                                  ; preds = %if.then70
  %st_mode75 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15244, !ctir !15068
  %46 = load i32, i32* %st_mode75, align 8, !dbg !15244, !tbaa !3176, !ctir !130
  %and76 = and i32 %46, 61440, !dbg !15244
  %cmp77 = icmp eq i32 %and76, 16384, !dbg !15244
  br i1 %cmp77, label %if.end80, label %if.then79, !dbg !15245

if.then79:                                        ; preds = %lor.lhs.false74, %if.then70
  store i32 -1, i32* %retval, align 4, !dbg !15246
  br label %return, !dbg !15246

if.end80:                                         ; preds = %lor.lhs.false74
  br label %if.end97, !dbg !15247

if.else81:                                        ; preds = %if.else67
  %st_mode82 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15248, !ctir !15068
  %47 = load i32, i32* %st_mode82, align 8, !dbg !15248, !tbaa !3176, !ctir !130
  %and83 = and i32 %47, 61440, !dbg !15248
  %cmp84 = icmp eq i32 %and83, 16384, !dbg !15248
  br i1 %cmp84, label %if.else88, label %if.then86, !dbg !15250

if.then86:                                        ; preds = %if.else81
  %call87 = call i32 @errno_fail(i32 20), !dbg !15251
  store i32 %call87, i32* %retval, align 4, !dbg !15252
  br label %return, !dbg !15252

if.else88:                                        ; preds = %if.else81
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15253, !ctir !15068
  %48 = load i32, i32* %st_mode89, align 8, !dbg !15253, !tbaa !3176, !ctir !130
  %and90 = and i32 %48, 61440, !dbg !15253
  %cmp91 = icmp eq i32 %and90, 16384, !dbg !15253
  br i1 %cmp91, label %if.end95, label %if.then93, !dbg !15255

if.then93:                                        ; preds = %if.else88
  %call94 = call i32 @errno_fail(i32 21), !dbg !15256
  store i32 %call94, i32* %retval, align 4, !dbg !15257
  br label %return, !dbg !15257

if.end95:                                         ; preds = %if.else88
  br label %if.end96

if.end96:                                         ; preds = %if.end95
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end80
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end66
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15258, !tbaa !2980
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15259, !tbaa !2993
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15260, !tbaa !2980
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15261, !tbaa !2993
  %call99 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #12, !dbg !15262
  store i32 %call99, i32* %ret_val, align 4, !dbg !15263, !tbaa !2980
  %call100 = call i32* @__errno_location() #15, !dbg !15264
  %53 = load i32, i32* %call100, align 4, !dbg !15264, !tbaa !2980, !ctir !5
  store i32 %53, i32* %rename_errno, align 4, !dbg !15265, !tbaa !2980
  br label %out, !dbg !15266

out:                                              ; preds = %if.end98
  call void @llvm.dbg.label(metadata !15267), !dbg !15268
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15269, !tbaa !2993
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15271, !tbaa !2993
  %cmp101 = icmp ne i8* %54, %55, !dbg !15272
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !15273

if.then103:                                       ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15274, !tbaa !2993
  call void @free(i8* %56) #12, !dbg !15275
  br label %if.end104, !dbg !15275

if.end104:                                        ; preds = %if.then103, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15276, !tbaa !2993
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15278, !tbaa !2993
  %cmp105 = icmp ne i8* %57, %58, !dbg !15279
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !15280

if.then107:                                       ; preds = %if.end104
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15281, !tbaa !2993
  call void @free(i8* %59) #12, !dbg !15282
  br label %if.end108, !dbg !15282

if.end108:                                        ; preds = %if.then107, %if.end104
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15283, !tbaa !2980
  %call109 = call i32* @__errno_location() #15, !dbg !15284
  store i32 %60, i32* %call109, align 4, !dbg !15285, !tbaa !2980, !ctir !5
  %61 = load i32, i32* %ret_val, align 4, !dbg !15286, !tbaa !2980
  store i32 %61, i32* %retval, align 4, !dbg !15287
  br label %return, !dbg !15287

return:                                           ; preds = %if.end108, %if.then93, %if.then86, %if.then79, %if.then64, %if.then57, %if.then52, %if.then37, %if.then28, %if.then22, %if.then13, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15288
  ret i32 %62, !dbg !15288
}

; Function Attrs: nounwind
declare dso_local i64 @syscall(i64, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15289 !ctir !1828 {
entry:
  %e.addr = alloca i32, align 4, !ctir !5
  store i32 %e, i32* %e.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15290, metadata !DIExpression()), !dbg !15291
  %0 = load i32, i32* %e.addr, align 4, !dbg !15292, !tbaa !2980
  %call = call i32* @__errno_location() #15, !dbg !15293
  store i32 %0, i32* %call, align 4, !dbg !15294, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15295
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.timespec* @get_root_dev_ino(%struct.timespec* %root_d_i) #4 !dbg !15296 !ctir !1833 {
entry:
  %retval = alloca %struct.timespec*, align 8, !ctir !1835
  %root_d_i.addr = alloca %struct.timespec*, align 8, !ctir !1835
  %statbuf = alloca %struct.stat, align 8, !ctir !15298
  store %struct.timespec* %root_d_i, %struct.timespec** %root_d_i.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %root_d_i.addr, metadata !15319, metadata !DIExpression()), !dbg !15320
  call void @llvm.dbg.declare(metadata %struct.stat* %statbuf, metadata !15321, metadata !DIExpression()), !dbg !15322
  %call = call i32 @lstat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.335, i64 0, i64 0), %struct.stat* %statbuf) #12, !dbg !15323
  %tobool = icmp ne i32 %call, 0, !dbg !15323
  br i1 %tobool, label %if.then, label %if.end, !dbg !15325

if.then:                                          ; preds = %entry
  store %struct.timespec* null, %struct.timespec** %retval, align 8, !dbg !15326
  br label %return, !dbg !15326

if.end:                                           ; preds = %entry
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 1, !dbg !15327, !ctir !15298
  %0 = load i64, i64* %st_ino, align 8, !dbg !15327, !tbaa !3859, !ctir !225
  %1 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15328, !tbaa !2993
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %1, i32 0, i32 0, !dbg !15329, !ctir !1836
  store i64 %0, i64* %st_ino1, align 8, !dbg !15330, !tbaa !3860, !ctir !224
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %statbuf, i32 0, i32 0, !dbg !15331, !ctir !15298
  %2 = load i64, i64* %st_dev, align 8, !dbg !15331, !tbaa !3862, !ctir !228
  %3 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15332, !tbaa !2993
  %st_dev2 = getelementptr inbounds %struct.timespec, %struct.timespec* %3, i32 0, i32 1, !dbg !15333, !ctir !1836
  store i64 %2, i64* %st_dev2, align 8, !dbg !15334, !tbaa !3863, !ctir !227
  %4 = load %struct.timespec*, %struct.timespec** %root_d_i.addr, align 8, !dbg !15335, !tbaa !2993
  store %struct.timespec* %4, %struct.timespec** %retval, align 8, !dbg !15336
  br label %return, !dbg !15336

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.timespec*, %struct.timespec** %retval, align 8, !dbg !15337
  ret %struct.timespec* %5, !dbg !15337
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15338 !ctir !1796 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !428
  %count.addr = alloca i64, align 8, !ctir !52
  %result = alloca i64, align 8, !ctir !579
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15340, metadata !DIExpression()), !dbg !15341
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15342, metadata !DIExpression()), !dbg !15343
  store i64 %count, i64* %count.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15344, metadata !DIExpression()), !dbg !15345
  br label %for.cond, !dbg !15346

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15347, metadata !DIExpression()), !dbg !15351
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15352, !tbaa !2980
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15353, !tbaa !2993
  %2 = load i64, i64* %count.addr, align 8, !dbg !15354, !tbaa !3837
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15355
  store i64 %call, i64* %result, align 8, !dbg !15351, !tbaa !3837
  %3 = load i64, i64* %result, align 8, !dbg !15356, !tbaa !3837
  %cmp = icmp sle i64 0, %3, !dbg !15358
  br i1 %cmp, label %if.then, label %if.else, !dbg !15359

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15360, !tbaa !3837
  store i64 %4, i64* %retval, align 8, !dbg !15361
  br label %return, !dbg !15361

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #15, !dbg !15362
  %5 = load i32, i32* %call1, align 4, !dbg !15362, !tbaa !2980, !ctir !5
  %cmp2 = icmp eq i32 %5, 4, !dbg !15362
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15364

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15365, !llvm.loop !15366

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #15, !dbg !15369
  %6 = load i32, i32* %call5, align 4, !dbg !15369, !tbaa !2980, !ctir !5
  %cmp6 = icmp eq i32 %6, 22, !dbg !15371
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15372

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15373, !tbaa !3837
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15374
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15375

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15376, !tbaa !3837
  br label %if.end, !dbg !15377

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15378, !tbaa !3837
  store i64 %8, i64* %retval, align 8, !dbg !15379
  br label %return, !dbg !15379

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15380, !llvm.loop !15366

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15381
  ret i64 %9, !dbg !15381
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !15382 !ctir !1846 {
entry:
  %source.addr = alloca i8*, align 8, !ctir !112
  %dest.addr = alloca i8*, align 8, !ctir !112
  store i8* %source, i8** %source.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15384, metadata !DIExpression()), !dbg !15385
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15386, metadata !DIExpression()), !dbg !15387
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15388, !tbaa !2993
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15389, !tbaa !2993
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !15390
  ret i1 %call, !dbg !15391
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !15392 !ctir !1848 {
entry:
  %source_dfd.addr = alloca i32, align 4, !ctir !5
  %source.addr = alloca i8*, align 8, !ctir !112
  %dest_dfd.addr = alloca i32, align 4, !ctir !5
  %dest.addr = alloca i8*, align 8, !ctir !112
  %source_basename = alloca i8*, align 8, !ctir !112
  %dest_basename = alloca i8*, align 8, !ctir !112
  %source_baselen = alloca i64, align 8, !ctir !52
  %dest_baselen = alloca i64, align 8, !ctir !52
  %identical_basenames = alloca i8, align 1, !ctir !117
  %compare_dirs = alloca i8, align 1, !ctir !117
  %same = alloca i8, align 1, !ctir !117
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !15393
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !15393
  %source_dirname = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %dest_dirname = alloca i8*, align 8, !ctir !7
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15414, metadata !DIExpression()), !dbg !15415
  store i8* %source, i8** %source.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15416, metadata !DIExpression()), !dbg !15417
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15418, metadata !DIExpression()), !dbg !15419
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15420, metadata !DIExpression()), !dbg !15421
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15422, metadata !DIExpression()), !dbg !15423
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15424, !tbaa !2993
  %call = call i8* @last_component(i8* %0) #14, !dbg !15425
  store i8* %call, i8** %source_basename, align 8, !dbg !15423, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15426, metadata !DIExpression()), !dbg !15427
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15428, !tbaa !2993
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15429
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15427, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15430, metadata !DIExpression()), !dbg !15431
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15432, !tbaa !2993
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15433
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15431, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15434, metadata !DIExpression()), !dbg !15435
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15436, !tbaa !2993
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15437
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15435, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15438, metadata !DIExpression()), !dbg !15439
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15440, !tbaa !3837
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15441, !tbaa !3837
  %cmp = icmp eq i64 %4, %5, !dbg !15442
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15443

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15444, !tbaa !2993
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15445, !tbaa !2993
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15446, !tbaa !3837
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15447
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15448
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15449
  %frombool = zext i1 %9 to i8, !dbg !15439
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15439, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15450, metadata !DIExpression()), !dbg !15451
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15452, !tbaa !3104
  %tobool = trunc i8 %10 to i1, !dbg !15452
  %frombool6 = zext i1 %tobool to i8, !dbg !15451
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15451, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15453, metadata !DIExpression()), !dbg !15454
  store i8 0, i8* %same, align 1, !dbg !15454, !tbaa !3104
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15455, !tbaa !3104
  %tobool7 = trunc i8 %11 to i1, !dbg !15455
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !15457

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !15458, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15461, metadata !DIExpression()), !dbg !15462
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15463, metadata !DIExpression()), !dbg !15464
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15465, !tbaa !2993
  %call8 = call i8* @dir_name(i8* %12), !dbg !15466
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15464, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15467, metadata !DIExpression()), !dbg !15468
  store i32 256, i32* %flags, align 4, !dbg !15468, !tbaa !2980
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15469, !tbaa !2980
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15471, !tbaa !2993
  %15 = load i32, i32* %flags, align 4, !dbg !15472, !tbaa !2980
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #12, !dbg !15473
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15474
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15475

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #15, !dbg !15476
  %16 = load i32, i32* %call12, align 4, !dbg !15476, !tbaa !2980, !ctir !5
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15478, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %17), !dbg !15479
  br label %if.end, !dbg !15480

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15481, !tbaa !2993
  call void @free(i8* %18) #12, !dbg !15482
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15483, metadata !DIExpression()), !dbg !15484
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15485, !tbaa !2993
  %call13 = call i8* @dir_name(i8* %19), !dbg !15486
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15484, !tbaa !2993
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15487, !tbaa !2980
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15489, !tbaa !2993
  %22 = load i32, i32* %flags, align 4, !dbg !15490, !tbaa !2980
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #12, !dbg !15491
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15492
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15493

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #15, !dbg !15494
  %23 = load i32, i32* %call17, align 4, !dbg !15494, !tbaa !2980, !ctir !5
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15496, !tbaa !2993
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.340, i64 0, i64 0), i8* %24), !dbg !15497
  br label %if.end18, !dbg !15498

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15499, !ctir !15393
  %25 = load i64, i64* %st_ino, align 8, !dbg !15499, !tbaa !3859, !ctir !225
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15499, !ctir !15393
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15499, !tbaa !3859, !ctir !225
  %cmp20 = icmp eq i64 %25, %26, !dbg !15499
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15499

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15499, !ctir !15393
  %27 = load i64, i64* %st_dev, align 8, !dbg !15499, !tbaa !3862, !ctir !228
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15499, !ctir !15393
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15499, !tbaa !3862, !ctir !228
  %cmp23 = icmp eq i64 %27, %28, !dbg !15499
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15500
  %frombool25 = zext i1 %29 to i8, !dbg !15501
  store i8 %frombool25, i8* %same, align 1, !dbg !15501, !tbaa !3104
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15502, !tbaa !2993
  call void @free(i8* %30) #12, !dbg !15503
  br label %if.end26, !dbg !15504

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15505, !tbaa !3104
  %tobool27 = trunc i8 %31 to i1, !dbg !15505
  ret i1 %tobool27, !dbg !15506
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !15507 !ctir !1066 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dirp.addr = alloca %struct.__dirstream*, align 8, !ctir !580
  %option.addr = alloca i32, align 4, !ctir !1058
  %name_space = alloca i8*, align 8, !ctir !7
  %allocated = alloca i64, align 8, !ctir !52
  %entries = alloca %struct.direntry_t*, align 8, !ctir !1068
  %entries_allocated = alloca i64, align 8, !ctir !52
  %entries_used = alloca i64, align 8, !ctir !52
  %used = alloca i64, align 8, !ctir !52
  %readdir_errno = alloca i32, align 4, !ctir !5
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !1076
  %dp = alloca %struct.dirent*, align 8, !ctir !1082
  %entry2 = alloca i8*, align 8, !ctir !112
  %entry_size = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %n36 = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %dest = alloca i8*, align 8, !ctir !7
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !15508, metadata !DIExpression()), !dbg !15509
  store i32 %option, i32* %option.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15510, metadata !DIExpression()), !dbg !15511
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15512, metadata !DIExpression()), !dbg !15513
  store i8* null, i8** %name_space, align 8, !dbg !15513, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !15514, metadata !DIExpression()), !dbg !15515
  store i64 0, i64* %allocated, align 8, !dbg !15515, !tbaa !3837
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !15516, metadata !DIExpression()), !dbg !15517
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !15517, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !15518, metadata !DIExpression()), !dbg !15519
  store i64 0, i64* %entries_allocated, align 8, !dbg !15519, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !15520, metadata !DIExpression()), !dbg !15521
  store i64 0, i64* %entries_used, align 8, !dbg !15521, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %used, metadata !15522, metadata !DIExpression()), !dbg !15523
  store i64 0, i64* %used, align 8, !dbg !15523, !tbaa !3837
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !15524, metadata !DIExpression()), !dbg !15525
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !15526, metadata !DIExpression()), !dbg !15527
  %0 = load i32, i32* %option.addr, align 4, !dbg !15528, !tbaa !3652
  %idxprom = zext i32 %0 to i64, !dbg !15529
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !15529, !ctir !1080
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !15529, !tbaa !2993
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !15527, !tbaa !2993
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15530, !tbaa !2993
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !15532
  br i1 %cmp1, label %if.then, label %if.end, !dbg !15533

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15534
  br label %return, !dbg !15534

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !15535

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !15536, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !15541, metadata !DIExpression()), !dbg !15542
  %call = call i32* @__errno_location() #15, !dbg !15543
  store i32 0, i32* %call, align 4, !dbg !15544, !tbaa !2980, !ctir !5
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !15545, !tbaa !2993
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !15546
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !15547, !tbaa !2993
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15548, !tbaa !2993
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !15548
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !15550

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !15551

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15552, !tbaa !2993
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !15553, !ctir !1083
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !15552
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !15554, !tbaa !2993
  %6 = load i8*, i8** %entry2, align 8, !dbg !15555, !tbaa !2993
  %7 = load i8*, i8** %entry2, align 8, !dbg !15557, !tbaa !2993
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !15557, !ctir !112
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !15557, !tbaa !3652
  %conv = sext i8 %8 to i32, !dbg !15557
  %cmp7 = icmp ne i32 %conv, 46, !dbg !15558
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !15557

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !15557

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !15559, !tbaa !2993
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !15559, !ctir !112
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !15559, !tbaa !3652
  %conv10 = sext i8 %10 to i32, !dbg !15559
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !15560
  %11 = zext i1 %cmp11 to i64, !dbg !15559
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !15559
  br label %cond.end, !dbg !15557

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !15557
  %idxprom14 = sext i32 %cond13 to i64, !dbg !15555
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !15555, !ctir !112
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !15555, !tbaa !3652
  %conv16 = sext i8 %12 to i32, !dbg !15555
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !15561
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !15562

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !15563, metadata !DIExpression()), !dbg !15565
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15566, !tbaa !2993
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !15566, !ctir !1083
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !15566
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !15566
  %add = add i64 %call22, 1, !dbg !15567
  store i64 %add, i64* %entry_size, align 8, !dbg !15565, !tbaa !3837
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15568, !tbaa !2993
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !15568
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !15570

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !15571, !tbaa !3837
  %16 = load i64, i64* %entries_used, align 8, !dbg !15574, !tbaa !3837
  %cmp25 = icmp eq i64 %15, %16, !dbg !15575
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !15576

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !15577, metadata !DIExpression()), !dbg !15579
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !15580, !tbaa !3837
  store i64 %17, i64* %n, align 8, !dbg !15579, !tbaa !3837
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15581, !tbaa !2993
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !15581
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !15582
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !15582
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !15583, !tbaa !2993
  %21 = load i64, i64* %n, align 8, !dbg !15584, !tbaa !3837
  store i64 %21, i64* %entries_allocated, align 8, !dbg !15585, !tbaa !3837
  br label %if.end29, !dbg !15586

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !15587, !tbaa !2993
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !15588
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15589, !tbaa !2993
  %24 = load i64, i64* %entries_used, align 8, !dbg !15590, !tbaa !3837
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !15589, !ctir !1068
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !15591, !ctir !1069
  store i8* %call30, i8** %name, align 8, !dbg !15592, !tbaa !15593, !ctir !7
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !15595, !tbaa !2993
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !15596, !ctir !1083
  %26 = load i64, i64* %d_ino, align 8, !dbg !15596, !tbaa !15597, !ctir !225
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15599, !tbaa !2993
  %28 = load i64, i64* %entries_used, align 8, !dbg !15600, !tbaa !3837
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !15599, !ctir !1068
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !15601, !ctir !1069
  store i64 %26, i64* %ino, align 8, !dbg !15602, !tbaa !15603, !ctir !1075
  %29 = load i64, i64* %entries_used, align 8, !dbg !15604, !tbaa !3837
  %inc = add i64 %29, 1, !dbg !15604
  store i64 %inc, i64* %entries_used, align 8, !dbg !15604, !tbaa !3837
  br label %if.end44, !dbg !15605

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !15606, !tbaa !3837
  %31 = load i64, i64* %used, align 8, !dbg !15609, !tbaa !3837
  %sub = sub i64 %30, %31, !dbg !15610
  %32 = load i64, i64* %entry_size, align 8, !dbg !15611, !tbaa !3837
  %cmp33 = icmp ule i64 %sub, %32, !dbg !15612
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !15613

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !15614, metadata !DIExpression()), !dbg !15616
  %33 = load i64, i64* %used, align 8, !dbg !15617, !tbaa !3837
  %34 = load i64, i64* %entry_size, align 8, !dbg !15618, !tbaa !3837
  %add37 = add i64 %33, %34, !dbg !15619
  store i64 %add37, i64* %n36, align 8, !dbg !15616, !tbaa !3837
  %35 = load i64, i64* %n36, align 8, !dbg !15620, !tbaa !3837
  %36 = load i64, i64* %used, align 8, !dbg !15622, !tbaa !3837
  %cmp38 = icmp ult i64 %35, %36, !dbg !15623
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !15624

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #16, !dbg !15625
  unreachable, !dbg !15625

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !15626, !tbaa !2993
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !15627
  store i8* %call42, i8** %name_space, align 8, !dbg !15628, !tbaa !2993
  %38 = load i64, i64* %n36, align 8, !dbg !15629, !tbaa !3837
  store i64 %38, i64* %allocated, align 8, !dbg !15630, !tbaa !3837
  br label %if.end43, !dbg !15631

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !15632, !tbaa !2993
  %40 = load i64, i64* %used, align 8, !dbg !15633, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !15634
  %41 = load i8*, i8** %entry2, align 8, !dbg !15635, !tbaa !2993
  %42 = load i64, i64* %entry_size, align 8, !dbg !15636, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !15637
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !15638, !tbaa !3837
  %44 = load i64, i64* %used, align 8, !dbg !15639, !tbaa !3837
  %add45 = add i64 %44, %43, !dbg !15639
  store i64 %add45, i64* %used, align 8, !dbg !15639, !tbaa !3837
  br label %if.end46, !dbg !15640

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !15641, !llvm.loop !15642

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #15, !dbg !15645
  %45 = load i32, i32* %call47, align 4, !dbg !15645, !tbaa !2980, !ctir !5
  store i32 %45, i32* %readdir_errno, align 4, !dbg !15646, !tbaa !2980
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !15647, !tbaa !2980
  %cmp48 = icmp ne i32 %46, 0, !dbg !15649
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !15650

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15651, !tbaa !2993
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !15651
  call void @free(i8* %48) #12, !dbg !15653
  %49 = load i8*, i8** %name_space, align 8, !dbg !15654, !tbaa !2993
  call void @free(i8* %49) #12, !dbg !15655
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !15656, !tbaa !2980
  %call51 = call i32* @__errno_location() #15, !dbg !15657
  store i32 %50, i32* %call51, align 4, !dbg !15658, !tbaa !2980, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !15659
  br label %return, !dbg !15659

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15660, !tbaa !2993
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !15660
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !15662

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15663, metadata !DIExpression()), !dbg !15665
  %52 = load i64, i64* %entries_used, align 8, !dbg !15666, !tbaa !3837
  %tobool55 = icmp ne i64 %52, 0, !dbg !15666
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !15668

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15669, !tbaa !2993
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !15669
  %55 = load i64, i64* %entries_used, align 8, !dbg !15670, !tbaa !3837
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !15671, !tbaa !2993
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !15672
  br label %if.end57, !dbg !15672

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !15673, !tbaa !3837
  %add58 = add i64 %57, 1, !dbg !15674
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !15675
  store i8* %call59, i8** %name_space, align 8, !dbg !15676, !tbaa !2993
  store i64 0, i64* %used, align 8, !dbg !15677, !tbaa !3837
  store i64 0, i64* %i, align 8, !dbg !15678, !tbaa !3837
  br label %for.cond60, !dbg !15680

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !15681, !tbaa !3837
  %59 = load i64, i64* %entries_used, align 8, !dbg !15683, !tbaa !3837
  %cmp61 = icmp ult i64 %58, %59, !dbg !15684
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !15685

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !15686, metadata !DIExpression()), !dbg !15688
  %60 = load i8*, i8** %name_space, align 8, !dbg !15689, !tbaa !2993
  %61 = load i64, i64* %used, align 8, !dbg !15690, !tbaa !3837
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !15691
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !15688, !tbaa !2993
  %62 = load i8*, i8** %dest, align 8, !dbg !15692, !tbaa !2993
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15693, !tbaa !2993
  %64 = load i64, i64* %i, align 8, !dbg !15694, !tbaa !3837
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !15693, !ctir !1068
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !15695, !ctir !1069
  %65 = load i8*, i8** %name65, align 8, !dbg !15695, !tbaa !15593, !ctir !7
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #12, !dbg !15696
  %66 = load i8*, i8** %dest, align 8, !dbg !15697, !tbaa !2993
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !15698
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !15698
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !15698
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !15699
  %67 = load i64, i64* %used, align 8, !dbg !15700, !tbaa !3837
  %add68 = add i64 %67, %add67, !dbg !15700
  store i64 %add68, i64* %used, align 8, !dbg !15700, !tbaa !3837
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15701, !tbaa !2993
  %69 = load i64, i64* %i, align 8, !dbg !15702, !tbaa !3837
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !15701, !ctir !1068
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !15703, !ctir !1069
  %70 = load i8*, i8** %name70, align 8, !dbg !15703, !tbaa !15593, !ctir !7
  call void @free(i8* %70) #12, !dbg !15704
  br label %for.inc, !dbg !15705

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !15706, !tbaa !3837
  %inc71 = add i64 %71, 1, !dbg !15706
  store i64 %inc71, i64* %i, align 8, !dbg !15706, !tbaa !3837
  br label %for.cond60, !dbg !15707, !llvm.loop !15708

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !15710, !tbaa !2993
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !15710
  call void @free(i8* %73) #12, !dbg !15711
  br label %if.end80, !dbg !15712

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !15713, !tbaa !3837
  %75 = load i64, i64* %allocated, align 8, !dbg !15715, !tbaa !3837
  %cmp74 = icmp eq i64 %74, %75, !dbg !15716
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !15717

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !15718, !tbaa !2993
  %77 = load i64, i64* %used, align 8, !dbg !15719, !tbaa !3837
  %add77 = add i64 %77, 1, !dbg !15720
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !15721
  store i8* %call78, i8** %name_space, align 8, !dbg !15722, !tbaa !2993
  br label %if.end79, !dbg !15723

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !15724, !tbaa !2993
  %79 = load i64, i64* %used, align 8, !dbg !15725, !tbaa !3837
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !15724, !ctir !7
  store i8 0, i8* %arrayidx81, align 1, !dbg !15726, !tbaa !3652
  %80 = load i8*, i8** %name_space, align 8, !dbg !15727, !tbaa !2993
  store i8* %80, i8** %retval, align 8, !dbg !15728
  br label %return, !dbg !15728

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !15729
  ret i8* %81, !dbg !15729
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !15730 !ctir !1078 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !428
  %b.addr = alloca i8*, align 8, !ctir !428
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1093
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1093
  store i8* %a, i8** %a.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15731, metadata !DIExpression()), !dbg !15732
  store i8* %b, i8** %b.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15733, metadata !DIExpression()), !dbg !15734
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15735, metadata !DIExpression()), !dbg !15736
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15737, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15737
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15736, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15738, metadata !DIExpression()), !dbg !15739
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15740, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15740
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15739, !tbaa !2993
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15741, !tbaa !2993
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !15742, !ctir !1094
  %5 = load i8*, i8** %name, align 8, !dbg !15742, !tbaa !15593, !ctir !7
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15743, !tbaa !2993
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !15744, !ctir !1094
  %7 = load i8*, i8** %name1, align 8, !dbg !15744, !tbaa !15593, !ctir !7
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !15745
  ret i32 %call, !dbg !15746
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !15747 !ctir !1078 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !428
  %b.addr = alloca i8*, align 8, !ctir !428
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1093
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1093
  store i8* %a, i8** %a.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !15748, metadata !DIExpression()), !dbg !15749
  store i8* %b, i8** %b.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !15750, metadata !DIExpression()), !dbg !15751
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !15752, metadata !DIExpression()), !dbg !15753
  %0 = load i8*, i8** %a.addr, align 8, !dbg !15754, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !15754
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !15753, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !15755, metadata !DIExpression()), !dbg !15756
  %2 = load i8*, i8** %b.addr, align 8, !dbg !15757, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !15757
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !15756, !tbaa !2993
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15758, !tbaa !2993
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !15759, !ctir !1094
  %5 = load i64, i64* %ino, align 8, !dbg !15759, !tbaa !15603, !ctir !1075
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15760, !tbaa !2993
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !15761, !ctir !1094
  %7 = load i64, i64* %ino1, align 8, !dbg !15761, !tbaa !15603, !ctir !1075
  %cmp = icmp ult i64 %5, %7, !dbg !15762
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15758

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15758

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !15763, !tbaa !2993
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !15764, !ctir !1094
  %9 = load i64, i64* %ino2, align 8, !dbg !15764, !tbaa !15603, !ctir !1075
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !15765, !tbaa !2993
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !15766, !ctir !1094
  %11 = load i64, i64* %ino3, align 8, !dbg !15766, !tbaa !15603, !ctir !1075
  %cmp4 = icmp ugt i64 %9, %11, !dbg !15767
  %conv = zext i1 %cmp4 to i32, !dbg !15767
  br label %cond.end, !dbg !15758

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !15758
  ret i32 %cond, !dbg !15768
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !15769 !ctir !1091 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dir.addr = alloca i8*, align 8, !ctir !112
  %option.addr = alloca i32, align 4, !ctir !1058
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !580
  %name_space = alloca i8*, align 8, !ctir !7
  %closedir_errno = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !15770, metadata !DIExpression()), !dbg !15771
  store i32 %option, i32* %option.addr, align 4, !tbaa !3652
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !15772, metadata !DIExpression()), !dbg !15773
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !15774, metadata !DIExpression()), !dbg !15775
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !15776, !tbaa !2993
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !15777
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !15775, !tbaa !2993
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15778, !tbaa !2993
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !15778
  br i1 %tobool, label %if.else, label %if.then, !dbg !15780

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15781
  br label %return, !dbg !15781

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !15782, metadata !DIExpression()), !dbg !15784
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15785, !tbaa !2993
  %3 = load i32, i32* %option.addr, align 4, !dbg !15786, !tbaa !3652
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !15787
  store i8* %call1, i8** %name_space, align 8, !dbg !15784, !tbaa !2993
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !15788, !tbaa !2993
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !15790
  %cmp = icmp ne i32 %call2, 0, !dbg !15791
  br i1 %cmp, label %if.then3, label %if.end, !dbg !15792

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !15793, metadata !DIExpression()), !dbg !15795
  %call4 = call i32* @__errno_location() #15, !dbg !15796
  %5 = load i32, i32* %call4, align 4, !dbg !15796, !tbaa !2980, !ctir !5
  store i32 %5, i32* %closedir_errno, align 4, !dbg !15795, !tbaa !2980
  %6 = load i8*, i8** %name_space, align 8, !dbg !15797, !tbaa !2993
  call void @free(i8* %6) #12, !dbg !15798
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !15799, !tbaa !2980
  %call5 = call i32* @__errno_location() #15, !dbg !15800
  store i32 %7, i32* %call5, align 4, !dbg !15801, !tbaa !2980, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !15802
  br label %return, !dbg !15802

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !15803, !tbaa !2993
  store i8* %8, i8** %retval, align 8, !dbg !15804
  br label %return, !dbg !15804

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !15805
  ret i8* %9, !dbg !15805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !15806 !ctir !1853 {
entry:
  %con.addr = alloca i8**, align 8, !ctir !1855
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15807, metadata !DIExpression()), !dbg !15808
  %call = call i32* @__errno_location() #15, !dbg !15809
  store i32 95, i32* %call, align 4, !dbg !15810, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15811
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !15812 !ctir !1858 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15813, metadata !DIExpression()), !dbg !15814
  ret void, !dbg !15815
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !15816 !ctir !1853 {
entry:
  %con.addr = alloca i8**, align 8, !ctir !1855
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15817, metadata !DIExpression()), !dbg !15818
  %call = call i32* @__errno_location() #15, !dbg !15819
  store i32 95, i32* %call, align 4, !dbg !15820, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15821
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !15822 !ctir !1860 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15823, metadata !DIExpression()), !dbg !15824
  %call = call i32* @__errno_location() #15, !dbg !15825
  store i32 95, i32* %call, align 4, !dbg !15826, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15827
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !15828 !ctir !1862 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %m.addr = alloca i32, align 4, !ctir !157
  %con.addr = alloca i8**, align 8, !ctir !1855
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15829, metadata !DIExpression()), !dbg !15830
  store i32 %m, i32* %m.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !15831, metadata !DIExpression()), !dbg !15832
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15833, metadata !DIExpression()), !dbg !15834
  %call = call i32* @__errno_location() #15, !dbg !15835
  store i32 95, i32* %call, align 4, !dbg !15836, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15837
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !15838 !ctir !1864 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %con.addr = alloca i8**, align 8, !ctir !1855
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15839, metadata !DIExpression()), !dbg !15840
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15841, metadata !DIExpression()), !dbg !15842
  %call = call i32* @__errno_location() #15, !dbg !15843
  store i32 95, i32* %call, align 4, !dbg !15844, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15845
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !15846 !ctir !1864 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %con.addr = alloca i8**, align 8, !ctir !1855
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15847, metadata !DIExpression()), !dbg !15848
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15849, metadata !DIExpression()), !dbg !15850
  %call = call i32* @__errno_location() #15, !dbg !15851
  store i32 95, i32* %call, align 4, !dbg !15852, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15853
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !15854 !ctir !1866 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %con.addr = alloca i8**, align 8, !ctir !1855
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15855, metadata !DIExpression()), !dbg !15856
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !15857, metadata !DIExpression()), !dbg !15858
  %call = call i32* @__errno_location() #15, !dbg !15859
  store i32 95, i32* %call, align 4, !dbg !15860, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15861
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !15862 !ctir !1868 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15863, metadata !DIExpression()), !dbg !15864
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15865, metadata !DIExpression()), !dbg !15866
  %call = call i32* @__errno_location() #15, !dbg !15867
  store i32 95, i32* %call, align 4, !dbg !15868, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15869
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !15870 !ctir !1868 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !15871, metadata !DIExpression()), !dbg !15872
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15873, metadata !DIExpression()), !dbg !15874
  %call = call i32* @__errno_location() #15, !dbg !15875
  store i32 95, i32* %call, align 4, !dbg !15876, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15877
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !15878 !ctir !1870 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15879, metadata !DIExpression()), !dbg !15880
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15881, metadata !DIExpression()), !dbg !15882
  %call = call i32* @__errno_location() #15, !dbg !15883
  store i32 95, i32* %call, align 4, !dbg !15884, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15885
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !15886 !ctir !1860 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15887, metadata !DIExpression()), !dbg !15888
  %call = call i32* @__errno_location() #15, !dbg !15889
  store i32 95, i32* %call, align 4, !dbg !15890, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15891
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !15892 !ctir !1860 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15893, metadata !DIExpression()), !dbg !15894
  %call = call i32* @__errno_location() #15, !dbg !15895
  store i32 95, i32* %call, align 4, !dbg !15896, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15897
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !15898 !ctir !1860 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1856
  store i8* %con, i8** %con.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !15899, metadata !DIExpression()), !dbg !15900
  %call = call i32* @__errno_location() #15, !dbg !15901
  store i32 95, i32* %call, align 4, !dbg !15902, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15903
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !15904 !ctir !1872 {
entry:
  %scon.addr = alloca i8*, align 8, !ctir !1856
  %tcon.addr = alloca i8*, align 8, !ctir !1856
  %tclass.addr = alloca i16, align 2, !ctir !1874
  %newcon.addr = alloca i8**, align 8, !ctir !1855
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !15905, metadata !DIExpression()), !dbg !15906
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !15907, metadata !DIExpression()), !dbg !15908
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !3799
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !15909, metadata !DIExpression()), !dbg !15910
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !15911, metadata !DIExpression()), !dbg !15912
  %call = call i32* @__errno_location() #15, !dbg !15913
  store i32 95, i32* %call, align 4, !dbg !15914, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15915
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !15916 !ctir !1875 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15917, metadata !DIExpression()), !dbg !15918
  %call = call i32* @__errno_location() #15, !dbg !15919
  store i32 95, i32* %call, align 4, !dbg !15920, !tbaa !2980, !ctir !5
  ret i16 0, !dbg !15921
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !15922 !ctir !1877 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !112
  %prefix.addr = alloca i8*, align 8, !ctir !112
  store i8* %path, i8** %path.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !15923, metadata !DIExpression()), !dbg !15924
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !15925, metadata !DIExpression()), !dbg !15926
  %call = call i32* @__errno_location() #15, !dbg !15927
  store i32 95, i32* %call, align 4, !dbg !15928, !tbaa !2980, !ctir !5
  ret i32 -1, !dbg !15929
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #9 !dbg !15930 !ctir !1882 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15932, metadata !DIExpression()), !dbg !15933
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15934, !tbaa !2993
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !15934, !ctir !1885
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !15935, !ctir !1900
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15935, !tbaa !15936, !ctir !340
  ret i64 %1, !dbg !15937
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #9 !dbg !15938 !ctir !1882 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15939, metadata !DIExpression()), !dbg !15940
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15941, !tbaa !2993
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !15941, !ctir !1885
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !15942, !ctir !1900
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15942, !tbaa !15943, !ctir !340
  ret i64 %1, !dbg !15944
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #9 !dbg !15945 !ctir !1882 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15946, metadata !DIExpression()), !dbg !15947
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15948, !tbaa !2993
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !15948, !ctir !1885
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !15949, !ctir !1900
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !15949, !tbaa !15950, !ctir !340
  ret i64 %1, !dbg !15951
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #9 !dbg !15952 !ctir !1882 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15953, metadata !DIExpression()), !dbg !15954
  ret i64 0, !dbg !15955
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #9 !dbg !15956 !ctir !1907 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1900
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15957, metadata !DIExpression()), !dbg !15958
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15959, !tbaa !2993
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !15959, !ctir !1885
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15959
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !15959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15959, !tbaa.struct !6296
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15960
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15960
  ret { i64, i64 } %4, !dbg !15960
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #9 !dbg !15961 !ctir !1907 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1900
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15962, metadata !DIExpression()), !dbg !15963
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15964, !tbaa !2993
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !15964, !ctir !1885
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15964
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !15964
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15964, !tbaa.struct !6296
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15965
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15965
  ret { i64, i64 } %4, !dbg !15965
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #9 !dbg !15966 !ctir !1907 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1900
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15967, metadata !DIExpression()), !dbg !15968
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !15969, !tbaa !2993
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !15969, !ctir !1885
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !15969
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !15969
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !15969, !tbaa.struct !6296
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15970
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !15970
  ret { i64, i64 } %4, !dbg !15970
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #9 !dbg !15971 !ctir !1907 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1900
  %st.addr = alloca %struct.stat*, align 8, !ctir !1884
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15972, metadata !DIExpression()), !dbg !15973
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !15974, metadata !DIExpression()), !dbg !15975
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !15976, !ctir !1900
  store i64 -1, i64* %tv_sec, align 8, !dbg !15977, !tbaa !15978, !ctir !338
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !15979, !ctir !1900
  store i64 -1, i64* %tv_nsec, align 8, !dbg !15980, !tbaa !15981, !ctir !340
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !15982
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !15982
  ret { i64, i64 } %1, !dbg !15982
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !15983 !ctir !1909 {
entry:
  %result.addr = alloca i32, align 4, !ctir !5
  %st.addr = alloca %struct.stat*, align 8, !ctir !1911
  store i32 %result, i32* %result.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !15984, metadata !DIExpression()), !dbg !15985
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15986, metadata !DIExpression()), !dbg !15987
  %0 = load i32, i32* %result.addr, align 4, !dbg !15988, !tbaa !2980
  ret i32 %0, !dbg !15989
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !15990 !ctir !1915 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !112
  %st.addr = alloca %struct.stat*, align 8, !ctir !1917
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15992, metadata !DIExpression()), !dbg !15993
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !15994, metadata !DIExpression()), !dbg !15995
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !15996, metadata !DIExpression()), !dbg !15997
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15998, !tbaa !2980
  %1 = load i8*, i8** %name.addr, align 8, !dbg !15999, !tbaa !2993
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16000, !tbaa !2993
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #12, !dbg !16001
  ret i32 %call, !dbg !16002
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16003 !ctir !1915 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !112
  %st.addr = alloca %struct.stat*, align 8, !ctir !1917
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16004, metadata !DIExpression()), !dbg !16005
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16006, metadata !DIExpression()), !dbg !16007
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16008, metadata !DIExpression()), !dbg !16009
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16010, !tbaa !2980
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16011, !tbaa !2993
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16012, !tbaa !2993
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #12, !dbg !16013
  ret i32 %call, !dbg !16014
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !16015 !ctir !1101 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %args.addr = alloca i8*, align 8, !ctir !47
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1103
  %x_suffix_len.addr = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %XXXXXX = alloca i8*, align 8, !ctir !7
  %count = alloca i32, align 4, !ctir !67
  %fd = alloca i32, align 4, !ctir !5
  %save_errno = alloca i32, align 4, !ctir !5
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1104
  %attempts = alloca i32, align 4, !ctir !67
  %i = alloca i64, align 8, !ctir !52
  %saved_errno = alloca i32, align 4, !ctir !5
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16016, metadata !DIExpression()), !dbg !16017
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16018, metadata !DIExpression()), !dbg !16019
  store i8* %args, i8** %args.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16020, metadata !DIExpression()), !dbg !16021
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16022, metadata !DIExpression()), !dbg !16023
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16024, metadata !DIExpression()), !dbg !16025
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16026, metadata !DIExpression()), !dbg !16027
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !16028, metadata !DIExpression()), !dbg !16029
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16030, metadata !DIExpression()), !dbg !16031
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16032, metadata !DIExpression()), !dbg !16033
  store i32 -1, i32* %fd, align 4, !dbg !16033, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !16034, metadata !DIExpression()), !dbg !16035
  %call = call i32* @__errno_location() #15, !dbg !16036
  %0 = load i32, i32* %call, align 4, !dbg !16036, !tbaa !2980, !ctir !5
  store i32 %0, i32* %save_errno, align 4, !dbg !16035, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !16037, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !16039, metadata !DIExpression()), !dbg !16040
  store i32 238328, i32* %attempts, align 4, !dbg !16040, !tbaa !2980
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16041, !tbaa !2993
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !16042
  store i64 %call1, i64* %len, align 8, !dbg !16043, !tbaa !3837
  %2 = load i64, i64* %len, align 8, !dbg !16044, !tbaa !3837
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16046, !tbaa !3837
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !16047, !tbaa !2980
  %conv = sext i32 %4 to i64, !dbg !16047
  %add = add i64 %3, %conv, !dbg !16048
  %cmp = icmp ult i64 %2, %add, !dbg !16049
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16050

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !16051, !tbaa !2993
  %6 = load i64, i64* %len, align 8, !dbg !16052, !tbaa !3837
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16053, !tbaa !3837
  %sub = sub i64 %6, %7, !dbg !16054
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !16055, !tbaa !2980
  %conv3 = sext i32 %8 to i64, !dbg !16055
  %sub4 = sub i64 %sub, %conv3, !dbg !16056
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !16051, !ctir !7
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16057, !tbaa !3837
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !16058
  br i1 %call5, label %if.end, label %if.then, !dbg !16059

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #15, !dbg !16060
  store i32 22, i32* %call6, align 4, !dbg !16060, !tbaa !2980, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16062
  br label %return, !dbg !16062

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !16063, !tbaa !2993
  %11 = load i64, i64* %len, align 8, !dbg !16064, !tbaa !3837
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16065, !tbaa !3837
  %sub7 = sub i64 %11, %12, !dbg !16066
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !16067, !tbaa !2980
  %conv8 = sext i32 %13 to i64, !dbg !16067
  %sub9 = sub i64 %sub7, %conv8, !dbg !16068
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !16063, !ctir !7
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !16069, !tbaa !2993
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16070, !tbaa !3837
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !16071
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !16072, !tbaa !2993
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16073, !tbaa !2993
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !16073
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !16075

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16076
  br label %return, !dbg !16076

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !16077, !tbaa !2980
  br label %for.cond, !dbg !16079

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !16080, !tbaa !2980
  %17 = load i32, i32* %attempts, align 4, !dbg !16082, !tbaa !2980
  %cmp14 = icmp ult i32 %16, %17, !dbg !16083
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !16084

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16085, metadata !DIExpression()), !dbg !16087
  store i64 0, i64* %i, align 8, !dbg !16088, !tbaa !3837
  br label %for.cond16, !dbg !16090

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !16091, !tbaa !3837
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16093, !tbaa !3837
  %cmp17 = icmp ult i64 %18, %19, !dbg !16094
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !16095

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16096, !tbaa !2993
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !16097
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !16098, !ctir !1107
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !16098, !tbaa !3652
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !16099, !tbaa !2993
  %23 = load i64, i64* %i, align 8, !dbg !16100, !tbaa !3837
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !16099, !ctir !7
  store i8 %21, i8* %arrayidx22, align 1, !dbg !16101, !tbaa !3652
  br label %for.inc, !dbg !16099

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !16102, !tbaa !3837
  %inc = add i64 %24, 1, !dbg !16102
  store i64 %inc, i64* %i, align 8, !dbg !16102, !tbaa !3837
  br label %for.cond16, !dbg !16103, !llvm.loop !16104

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16106, !tbaa !2993
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !16107, !tbaa !2993
  %27 = load i8*, i8** %args.addr, align 8, !dbg !16108, !tbaa !2993
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !16106
  store i32 %call23, i32* %fd, align 4, !dbg !16109, !tbaa !2980
  %28 = load i32, i32* %fd, align 4, !dbg !16110, !tbaa !2980
  %cmp24 = icmp sge i32 %28, 0, !dbg !16112
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !16113

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !16114, !tbaa !2980
  %call27 = call i32* @__errno_location() #15, !dbg !16114
  store i32 %29, i32* %call27, align 4, !dbg !16114, !tbaa !2980, !ctir !5
  br label %done, !dbg !16116

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #15, !dbg !16117
  %30 = load i32, i32* %call28, align 4, !dbg !16117, !tbaa !2980, !ctir !5
  %cmp29 = icmp ne i32 %30, 17, !dbg !16119
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !16120

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !16121, !tbaa !2980
  br label %done, !dbg !16123

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !16124

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !16125, !tbaa !2980
  %inc35 = add i32 %31, 1, !dbg !16125
  store i32 %inc35, i32* %count, align 4, !dbg !16125, !tbaa !2980
  br label %for.cond, !dbg !16126, !llvm.loop !16127

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16129, !tbaa !2993
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !16130
  %call38 = call i32* @__errno_location() #15, !dbg !16131
  store i32 17, i32* %call38, align 4, !dbg !16131, !tbaa !2980, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16132
  br label %return, !dbg !16132

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !16133), !dbg !16134
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !16135, metadata !DIExpression()), !dbg !16137
  %call39 = call i32* @__errno_location() #15, !dbg !16138
  %33 = load i32, i32* %call39, align 4, !dbg !16138, !tbaa !2980, !ctir !5
  store i32 %33, i32* %saved_errno, align 4, !dbg !16137, !tbaa !2980
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !16139, !tbaa !2993
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !16140
  %35 = load i32, i32* %saved_errno, align 4, !dbg !16141, !tbaa !2980
  %call41 = call i32* @__errno_location() #15, !dbg !16141
  store i32 %35, i32* %call41, align 4, !dbg !16141, !tbaa !2980, !ctir !5
  %36 = load i32, i32* %fd, align 4, !dbg !16142, !tbaa !2980
  store i32 %36, i32* %retval, align 4, !dbg !16143
  br label %return, !dbg !16143

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !16144
  ret i32 %37, !dbg !16144
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #9 !dbg !16145 !ctir !1116 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !112
  %len.addr = alloca i64, align 8, !ctir !52
  store i8* %s, i8** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !16146, metadata !DIExpression()), !dbg !16147
  store i64 %len, i64* %len.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !16148, metadata !DIExpression()), !dbg !16149
  %0 = load i64, i64* %len.addr, align 8, !dbg !16150, !tbaa !3837
  %1 = load i8*, i8** %s.addr, align 8, !dbg !16151, !tbaa !2993
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.357, i64 0, i64 0)) #14, !dbg !16152
  %cmp = icmp ule i64 %0, %call, !dbg !16153
  ret i1 %cmp, !dbg !16154
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !16155 !ctir !1110 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %flags.addr = alloca i32, align 4, !ctir !5
  %kind.addr = alloca i32, align 4, !ctir !5
  %x_suffix_len.addr = alloca i64, align 8, !ctir !52
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1103
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16156, metadata !DIExpression()), !dbg !16157
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16158, metadata !DIExpression()), !dbg !16159
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16160, metadata !DIExpression()), !dbg !16161
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16162, metadata !DIExpression()), !dbg !16163
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16164, metadata !DIExpression()), !dbg !16165
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !16166, metadata !DIExpression()), !dbg !16167
  %0 = load i32, i32* %kind.addr, align 4, !dbg !16168, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !16169

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16170, !tbaa !2993
  br label %sw.epilog, !dbg !16172

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16173, !tbaa !2993
  br label %sw.epilog, !dbg !16174

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16175, !tbaa !2993
  br label %sw.epilog, !dbg !16176

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.359, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !16177
  unreachable, !dbg !16177

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16178, !tbaa !2993
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !16179, !tbaa !2980
  %3 = bitcast i32* %flags.addr to i8*, !dbg !16180
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !16181, !tbaa !2993
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16182, !tbaa !3837
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !16183
  ret i32 %call, !dbg !16184
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !16185 !ctir !543 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %flags.addr = alloca i8*, align 8, !ctir !47
  %openflags = alloca i32*, align 8, !ctir !126
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16186, metadata !DIExpression()), !dbg !16187
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16188, metadata !DIExpression()), !dbg !16189
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !16190, metadata !DIExpression()), !dbg !16191
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !16192, !tbaa !2993
  %1 = bitcast i8* %0 to i32*, !dbg !16192
  store i32* %1, i32** %openflags, align 8, !dbg !16191, !tbaa !2993
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !16193, !tbaa !2993
  %3 = load i32*, i32** %openflags, align 8, !dbg !16194, !tbaa !2993
  %4 = load i32, i32* %3, align 4, !dbg !16195, !tbaa !2980, !ctir !5
  %and = and i32 %4, -4, !dbg !16196
  %or = or i32 %and, 2, !dbg !16197
  %or1 = or i32 %or, 64, !dbg !16198
  %or2 = or i32 %or1, 128, !dbg !16199
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !16200
  ret i32 %call, !dbg !16201
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !16202 !ctir !543 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %flags.addr = alloca i8*, align 8, !ctir !47
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16203, metadata !DIExpression()), !dbg !16204
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16205, metadata !DIExpression()), !dbg !16206
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16207, !tbaa !2993
  %call = call i32 @mkdir(i8* %0, i32 448) #12, !dbg !16208
  ret i32 %call, !dbg !16209
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !16210 !ctir !543 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %flags.addr = alloca i8*, align 8, !ctir !47
  %st = alloca %struct.stat, align 8, !ctir !16211
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16232, metadata !DIExpression()), !dbg !16233
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !16234, metadata !DIExpression()), !dbg !16235
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16236, metadata !DIExpression()), !dbg !16237
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16238, !tbaa !2993
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #12, !dbg !16238
  %cmp = icmp eq i32 %call, 0, !dbg !16240
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16241

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !16242
  %1 = load i32, i32* %call1, align 4, !dbg !16242, !tbaa !2980, !ctir !5
  %cmp2 = icmp eq i32 %1, 75, !dbg !16243
  br i1 %cmp2, label %if.then, label %if.end, !dbg !16244

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #15, !dbg !16245
  store i32 17, i32* %call3, align 4, !dbg !16245, !tbaa !2980, !ctir !5
  br label %if.end, !dbg !16245

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #15, !dbg !16246
  %2 = load i32, i32* %call4, align 4, !dbg !16246, !tbaa !2980, !ctir !5
  %cmp5 = icmp eq i32 %2, 2, !dbg !16247
  %3 = zext i1 %cmp5 to i64, !dbg !16246
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !16246
  ret i32 %cond, !dbg !16248
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !16249 !ctir !1112 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %flags.addr = alloca i32, align 4, !ctir !5
  %kind.addr = alloca i32, align 4, !ctir !5
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16250, metadata !DIExpression()), !dbg !16251
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16252, metadata !DIExpression()), !dbg !16253
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16254, metadata !DIExpression()), !dbg !16255
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !16256, metadata !DIExpression()), !dbg !16257
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16258, !tbaa !2993
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16259, !tbaa !2980
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16260, !tbaa !2980
  %3 = load i32, i32* %kind.addr, align 4, !dbg !16261, !tbaa !2980
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !16262
  ret i32 %call, !dbg !16263
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !16264 !ctir !1114 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %args.addr = alloca i8*, align 8, !ctir !47
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1103
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16265, metadata !DIExpression()), !dbg !16266
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16267, metadata !DIExpression()), !dbg !16268
  store i8* %args, i8** %args.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16269, metadata !DIExpression()), !dbg !16270
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16271, metadata !DIExpression()), !dbg !16272
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !16273, !tbaa !2993
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !16274, !tbaa !2980
  %2 = load i8*, i8** %args.addr, align 8, !dbg !16275, !tbaa !2993
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !16276, !tbaa !2993
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !16277
  ret i32 %call, !dbg !16278
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !16279 !ctir !1828 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16281, metadata !DIExpression()), !dbg !16282
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16283, !tbaa !2980
  %cmp = icmp sle i32 0, %0, !dbg !16285
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16286

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !16287, !tbaa !2980
  %cmp1 = icmp sle i32 %1, 2, !dbg !16288
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16289

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !16290, metadata !DIExpression()), !dbg !16292
  %2 = load i32, i32* %fd.addr, align 4, !dbg !16293, !tbaa !2980
  %call = call i32 @dup_safer(i32 %2), !dbg !16294
  store i32 %call, i32* %f, align 4, !dbg !16292, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16295, metadata !DIExpression()), !dbg !16296
  %call2 = call i32* @__errno_location() #15, !dbg !16297
  %3 = load i32, i32* %call2, align 4, !dbg !16297, !tbaa !2980, !ctir !5
  store i32 %3, i32* %e, align 4, !dbg !16296, !tbaa !2980
  %4 = load i32, i32* %fd.addr, align 4, !dbg !16298, !tbaa !2980
  %call3 = call i32 @close(i32 %4), !dbg !16299
  %5 = load i32, i32* %e, align 4, !dbg !16300, !tbaa !2980
  %call4 = call i32* @__errno_location() #15, !dbg !16301
  store i32 %5, i32* %call4, align 4, !dbg !16302, !tbaa !2980, !ctir !5
  %6 = load i32, i32* %f, align 4, !dbg !16303, !tbaa !2980
  store i32 %6, i32* %fd.addr, align 4, !dbg !16304, !tbaa !2980
  br label %if.end, !dbg !16305

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !16306, !tbaa !2980
  ret i32 %7, !dbg !16307
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !16308 !ctir !1152 {
entry:
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dst_stat.addr = alloca %struct.stat*, align 8, !ctir !1126
  %src_stat.addr = alloca %struct.stat*, align 8, !ctir !1126
  %options.addr = alloca i32, align 4, !ctir !5
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16309, metadata !DIExpression()), !dbg !16310
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16311, metadata !DIExpression()), !dbg !16312
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16313, metadata !DIExpression()), !dbg !16314
  store i32 %options, i32* %options.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16315, metadata !DIExpression()), !dbg !16316
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !16317, !tbaa !2993
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16318, !tbaa !2993
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16319, !tbaa !2993
  %3 = load i32, i32* %options.addr, align 4, !dbg !16320, !tbaa !2980
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !16321
  ret i32 %call, !dbg !16322
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1122 !ctir !1124 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %dfd.addr = alloca i32, align 4, !ctir !5
  %dst_name.addr = alloca i8*, align 8, !ctir !112
  %dst_stat.addr = alloca %struct.stat*, align 8, !ctir !1126
  %src_stat.addr = alloca %struct.stat*, align 8, !ctir !1126
  %options.addr = alloca i32, align 4, !ctir !5
  %dst_s = alloca i64, align 8, !ctir !1154
  %src_s = alloca i64, align 8, !ctir !1154
  %dst_ns = alloca i32, align 4, !ctir !5
  %src_ns = alloca i32, align 4, !ctir !5
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1155
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1156
  %res = alloca i32, align 4, !ctir !5
  %dst_a_s = alloca i64, align 8, !ctir !1154
  %dst_c_s = alloca i64, align 8, !ctir !1154
  %dst_m_s = alloca i64, align 8, !ctir !1154
  %dst_a_ns = alloca i32, align 4, !ctir !5
  %dst_c_ns = alloca i32, align 4, !ctir !5
  %dst_m_ns = alloca i32, align 4, !ctir !5
  %odd_second = alloca i8, align 1, !ctir !117
  %a = alloca i32, align 4, !ctir !5
  %c = alloca i32, align 4, !ctir !5
  %m = alloca i32, align 4, !ctir !5
  %SR10 = alloca i32, align 4, !ctir !5
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1161
  %dst_status = alloca %struct.stat, align 8, !ctir !1128
  %s = alloca i64, align 8, !ctir !1154
  %stat_result = alloca i32, align 4, !ctir !5
  %old_res = alloca i32, align 4, !ctir !5
  %a168 = alloca i32, align 4, !ctir !5
  store i32 %dfd, i32* %dfd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !16323, metadata !DIExpression()), !dbg !16324
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !16325, metadata !DIExpression()), !dbg !16326
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !16327, metadata !DIExpression()), !dbg !16328
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !16329, metadata !DIExpression()), !dbg !16330
  store i32 %options, i32* %options.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16331, metadata !DIExpression()), !dbg !16332
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !16333, metadata !DIExpression()), !dbg !16334
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16335, !tbaa !2993
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16336, !ctir !1127
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !16336, !ctir !1142
  %1 = load i64, i64* %tv_sec, align 8, !dbg !16336, !tbaa !16337, !ctir !338
  store i64 %1, i64* %dst_s, align 8, !dbg !16334, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !16338, metadata !DIExpression()), !dbg !16339
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16340, !tbaa !2993
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !16341, !ctir !1127
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !16341, !ctir !1142
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !16341, !tbaa !16337, !ctir !338
  store i64 %3, i64* %src_s, align 8, !dbg !16339, !tbaa !3837
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !16342, metadata !DIExpression()), !dbg !16343
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16344, !tbaa !2993
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !16345
  %conv = trunc i64 %call to i32, !dbg !16345
  store i32 %conv, i32* %dst_ns, align 4, !dbg !16343, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !16346, metadata !DIExpression()), !dbg !16347
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !16348, !tbaa !2993
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !16349
  %conv4 = trunc i64 %call3 to i32, !dbg !16349
  store i32 %conv4, i32* %src_ns, align 4, !dbg !16347, !tbaa !2980
  %6 = load i32, i32* %options.addr, align 4, !dbg !16350, !tbaa !2980
  %and = and i32 %6, 1, !dbg !16352
  %tobool = icmp ne i32 %and, 0, !dbg !16352
  br i1 %tobool, label %if.then, label %if.end207, !dbg !16353

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !16354, metadata !DIExpression()), !dbg !16356
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !16356, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !16357, metadata !DIExpression()), !dbg !16358
  call void @llvm.dbg.declare(metadata i32* %res, metadata !16359, metadata !DIExpression()), !dbg !16360
  %7 = load i64, i64* %dst_s, align 8, !dbg !16361, !tbaa !3837
  %8 = load i64, i64* %src_s, align 8, !dbg !16363, !tbaa !3837
  %cmp = icmp eq i64 %7, %8, !dbg !16364
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16365

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !16366, !tbaa !2980
  %10 = load i32, i32* %src_ns, align 4, !dbg !16367, !tbaa !2980
  %cmp6 = icmp eq i32 %9, %10, !dbg !16368
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !16369

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !16370
  br label %return, !dbg !16370

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !16371, !tbaa !3837
  %12 = load i64, i64* %src_s, align 8, !dbg !16373, !tbaa !3837
  %sub = sub nsw i64 %12, 2, !dbg !16374
  %cmp9 = icmp sle i64 %11, %sub, !dbg !16375
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16376

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16377
  br label %return, !dbg !16377

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !16378, !tbaa !3837
  %14 = load i64, i64* %dst_s, align 8, !dbg !16380, !tbaa !3837
  %sub13 = sub nsw i64 %14, 2, !dbg !16381
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !16382
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !16383

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !16384
  br label %return, !dbg !16384

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16385, !tbaa !2993
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !16385
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !16387

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !16388
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16389, !tbaa !2993
  br label %if.end21, !dbg !16390

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16391, !tbaa !2993
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !16391
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !16393

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16394, !tbaa !2993
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !16394
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !16397

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #12, !dbg !16398
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !16398
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16400, !tbaa !2993
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16401, !tbaa !2993
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !16401
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !16403

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !16404

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16405, !tbaa !2993
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !16406, !ctir !1156
  store i32 2000000000, i32* %resolution, align 8, !dbg !16407, !tbaa !16408, !ctir !5
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16410, !tbaa !2993
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !16411, !ctir !1156
  store i8 0, i8* %exact, align 4, !dbg !16412, !tbaa !16413, !ctir !117
  br label %if.end30, !dbg !16414

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16415, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !16416, !ctir !1127
  %23 = load i64, i64* %st_dev, align 8, !dbg !16416, !tbaa !3862, !ctir !228
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16417, !tbaa !2993
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !16418, !ctir !1156
  store i64 %23, i64* %dev, align 8, !dbg !16419, !tbaa !16420, !ctir !227
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16421, !tbaa !2993
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16422, !tbaa !2993
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !16422
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !16423
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !16423
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !16424, !tbaa !2993
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16425, !tbaa !2993
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !16425
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !16427

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !16428

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16429, !tbaa !2993
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16431, !tbaa !2993
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !16432
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !16433

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !16434, !tbaa !2993
  br label %if.end38, !dbg !16436

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !16437

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !16438

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !16439), !dbg !16441
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16442, !tbaa !2993
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !16442
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !16444

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16445, !tbaa !2993
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !16447, !ctir !1127
  %34 = load i64, i64* %st_dev41, align 8, !dbg !16447, !tbaa !3862, !ctir !228
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !16448, !ctir !1156
  store i64 %34, i64* %dev42, align 8, !dbg !16449, !tbaa !16420, !ctir !227
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !16450, !tbaa !2993
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !16451
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !16452
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !16452
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !16453, !tbaa !2993
  br label %if.end44, !dbg !16454

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16455, !tbaa !2993
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !16455
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !16457

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !16458, !tbaa !2993
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16460, !tbaa !2993
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !16461, !ctir !1156
  store i32 2000000000, i32* %resolution47, align 8, !dbg !16462, !tbaa !16408, !ctir !5
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16463, !tbaa !2993
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !16464, !ctir !1156
  store i8 0, i8* %exact48, align 4, !dbg !16465, !tbaa !16413, !ctir !117
  br label %if.end49, !dbg !16466

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16467, !tbaa !2993
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !16468, !ctir !1156
  %42 = load i32, i32* %resolution51, align 8, !dbg !16468, !tbaa !16408, !ctir !5
  store i32 %42, i32* %res, align 4, !dbg !16469, !tbaa !2980
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16470, !tbaa !2993
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !16472, !ctir !1156
  %44 = load i8, i8* %exact52, align 4, !dbg !16472, !tbaa !16413
  %tobool53 = trunc i8 %44 to i1, !dbg !16472, !ctir !117
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !16473

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !16474, metadata !DIExpression()), !dbg !16476
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16477, !tbaa !2993
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !16478, !ctir !1127
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !16478, !ctir !1142
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !16478, !tbaa !16479, !ctir !338
  store i64 %46, i64* %dst_a_s, align 8, !dbg !16476, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !16480, metadata !DIExpression()), !dbg !16481
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16482, !tbaa !2993
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !16483, !ctir !1127
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !16483, !ctir !1142
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !16483, !tbaa !16484, !ctir !338
  store i64 %48, i64* %dst_c_s, align 8, !dbg !16481, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !16485, metadata !DIExpression()), !dbg !16486
  %49 = load i64, i64* %dst_s, align 8, !dbg !16487, !tbaa !3837
  store i64 %49, i64* %dst_m_s, align 8, !dbg !16486, !tbaa !3837
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !16488, metadata !DIExpression()), !dbg !16489
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16490, !tbaa !2993
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !16491
  %conv58 = trunc i64 %call57 to i32, !dbg !16491
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !16489, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !16492, metadata !DIExpression()), !dbg !16493
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !16494, !tbaa !2993
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !16495
  %conv60 = trunc i64 %call59 to i32, !dbg !16495
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !16493, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !16496, metadata !DIExpression()), !dbg !16497
  %52 = load i32, i32* %dst_ns, align 4, !dbg !16498, !tbaa !2980
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !16497, !tbaa !2980
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !16499, metadata !DIExpression()), !dbg !16501
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !16502, !tbaa !3837
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !16503, !tbaa !3837
  %or = or i64 %53, %54, !dbg !16504
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !16505, !tbaa !3837
  %or61 = or i64 %or, %55, !dbg !16506
  %and62 = and i64 %or61, 1, !dbg !16507
  %tobool63 = icmp ne i64 %and62, 0, !dbg !16508
  %frombool = zext i1 %tobool63 to i8, !dbg !16501
  store i8 %frombool, i8* %odd_second, align 1, !dbg !16501, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %a, metadata !16509, metadata !DIExpression()), !dbg !16512
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !16513, !tbaa !2980
  store i32 %56, i32* %a, align 4, !dbg !16512, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c, metadata !16514, metadata !DIExpression()), !dbg !16515
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !16516, !tbaa !2980
  store i32 %57, i32* %c, align 4, !dbg !16515, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %m, metadata !16517, metadata !DIExpression()), !dbg !16518
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !16519, !tbaa !2980
  store i32 %58, i32* %m, align 4, !dbg !16518, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !16520, metadata !DIExpression()), !dbg !16521
  store i32 1, i32* %SR10, align 4, !dbg !16521, !tbaa !2980
  %59 = load i32, i32* %SR10, align 4, !dbg !16522, !tbaa !2980
  %mul = mul nsw i32 %59, 10, !dbg !16522
  store i32 %mul, i32* %SR10, align 4, !dbg !16522, !tbaa !2980
  %60 = load i32, i32* %a, align 4, !dbg !16523, !tbaa !2980
  %61 = load i32, i32* %SR10, align 4, !dbg !16525, !tbaa !2980
  %rem = srem i32 %60, %61, !dbg !16526
  %62 = load i32, i32* %c, align 4, !dbg !16527, !tbaa !2980
  %63 = load i32, i32* %SR10, align 4, !dbg !16528, !tbaa !2980
  %rem64 = srem i32 %62, %63, !dbg !16529
  %or65 = or i32 %rem, %rem64, !dbg !16530
  %64 = load i32, i32* %m, align 4, !dbg !16531, !tbaa !2980
  %65 = load i32, i32* %SR10, align 4, !dbg !16532, !tbaa !2980
  %rem66 = srem i32 %64, %65, !dbg !16533
  %or67 = or i32 %or65, %rem66, !dbg !16534
  %cmp68 = icmp ne i32 %or67, 0, !dbg !16535
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !16536

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !16537, !tbaa !2980
  br label %if.end96, !dbg !16538

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !16539, !tbaa !2980
  store i32 %66, i32* %res, align 4, !dbg !16541, !tbaa !2980
  %67 = load i32, i32* %SR10, align 4, !dbg !16542, !tbaa !2980
  %68 = load i32, i32* %a, align 4, !dbg !16543, !tbaa !2980
  %div = sdiv i32 %68, %67, !dbg !16543
  store i32 %div, i32* %a, align 4, !dbg !16543, !tbaa !2980
  %69 = load i32, i32* %SR10, align 4, !dbg !16544, !tbaa !2980
  %70 = load i32, i32* %c, align 4, !dbg !16545, !tbaa !2980
  %div72 = sdiv i32 %70, %69, !dbg !16545
  store i32 %div72, i32* %c, align 4, !dbg !16545, !tbaa !2980
  %71 = load i32, i32* %SR10, align 4, !dbg !16546, !tbaa !2980
  %72 = load i32, i32* %m, align 4, !dbg !16547, !tbaa !2980
  %div73 = sdiv i32 %72, %71, !dbg !16547
  store i32 %div73, i32* %m, align 4, !dbg !16547, !tbaa !2980
  br label %for.cond, !dbg !16548

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !16549, !tbaa !2980
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16551, !tbaa !2993
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !16552, !ctir !1156
  %75 = load i32, i32* %resolution74, align 8, !dbg !16552, !tbaa !16408, !ctir !5
  %cmp75 = icmp slt i32 %73, %75, !dbg !16553
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !16554

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !16555, !tbaa !2980
  %rem77 = srem i32 %76, 10, !dbg !16556
  %77 = load i32, i32* %c, align 4, !dbg !16557, !tbaa !2980
  %rem78 = srem i32 %77, 10, !dbg !16558
  %or79 = or i32 %rem77, %rem78, !dbg !16559
  %78 = load i32, i32* %m, align 4, !dbg !16560, !tbaa !2980
  %rem80 = srem i32 %78, 10, !dbg !16561
  %or81 = or i32 %or79, %rem80, !dbg !16562
  %cmp82 = icmp eq i32 %or81, 0, !dbg !16563
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !16564
  br i1 %79, label %for.body, label %for.end, !dbg !16565

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !16566, !tbaa !2980
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !16568
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !16569

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !16570, !tbaa !3104
  %tobool87 = trunc i8 %81 to i1, !dbg !16570
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !16573

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !16574, !tbaa !2980
  %mul89 = mul nsw i32 %82, 2, !dbg !16574
  store i32 %mul89, i32* %res, align 4, !dbg !16574, !tbaa !2980
  br label %if.end90, !dbg !16575

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !16576

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !16577

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !16578, !tbaa !2980
  %mul92 = mul nsw i32 %83, 10, !dbg !16578
  store i32 %mul92, i32* %res, align 4, !dbg !16578, !tbaa !2980
  %84 = load i32, i32* %a, align 4, !dbg !16579, !tbaa !2980
  %div93 = sdiv i32 %84, 10, !dbg !16579
  store i32 %div93, i32* %a, align 4, !dbg !16579, !tbaa !2980
  %85 = load i32, i32* %c, align 4, !dbg !16580, !tbaa !2980
  %div94 = sdiv i32 %85, 10, !dbg !16580
  store i32 %div94, i32* %c, align 4, !dbg !16580, !tbaa !2980
  %86 = load i32, i32* %m, align 4, !dbg !16581, !tbaa !2980
  %div95 = sdiv i32 %86, 10, !dbg !16581
  store i32 %div95, i32* %m, align 4, !dbg !16581, !tbaa !2980
  br label %for.cond, !dbg !16582, !llvm.loop !16583

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !16585, !tbaa !2980
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16586, !tbaa !2993
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !16587, !ctir !1156
  store i32 %87, i32* %resolution97, align 8, !dbg !16588, !tbaa !16408, !ctir !5
  %89 = load i32, i32* %res, align 4, !dbg !16589, !tbaa !2980
  %cmp98 = icmp slt i32 1, %89, !dbg !16591
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !16592

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !16593, metadata !DIExpression()), !dbg !16595
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !16596, metadata !DIExpression()), !dbg !16597
  %90 = load i32, i32* %src_ns, align 4, !dbg !16598, !tbaa !2980
  %rem101 = srem i32 %90, 1, !dbg !16599
  %91 = load i32, i32* %src_ns, align 4, !dbg !16600, !tbaa !2980
  %sub102 = sub nsw i32 %91, %rem101, !dbg !16600
  store i32 %sub102, i32* %src_ns, align 4, !dbg !16600, !tbaa !2980
  call void @llvm.dbg.declare(metadata i64* %s, metadata !16601, metadata !DIExpression()), !dbg !16603
  %92 = load i64, i64* %src_s, align 8, !dbg !16604, !tbaa !3837
  %93 = load i32, i32* %res, align 4, !dbg !16605, !tbaa !2980
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !16606
  %94 = zext i1 %cmp103 to i64, !dbg !16605
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !16605
  %neg = xor i32 %cond, -1, !dbg !16607
  %conv105 = sext i32 %neg to i64, !dbg !16607
  %and106 = and i64 %92, %conv105, !dbg !16608
  store i64 %and106, i64* %s, align 8, !dbg !16603, !tbaa !3837
  %95 = load i64, i64* %src_s, align 8, !dbg !16609, !tbaa !3837
  %96 = load i64, i64* %dst_s, align 8, !dbg !16611, !tbaa !3837
  %cmp107 = icmp slt i64 %95, %96, !dbg !16612
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !16613

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !16614, !tbaa !3837
  %98 = load i64, i64* %dst_s, align 8, !dbg !16615, !tbaa !3837
  %cmp109 = icmp eq i64 %97, %98, !dbg !16616
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !16617

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !16618, !tbaa !2980
  %100 = load i32, i32* %dst_ns, align 4, !dbg !16619, !tbaa !2980
  %cmp112 = icmp sle i32 %99, %100, !dbg !16620
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !16621

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !16622
  br label %return, !dbg !16622

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !16623, !tbaa !3837
  %102 = load i64, i64* %s, align 8, !dbg !16625, !tbaa !3837
  %cmp116 = icmp slt i64 %101, %102, !dbg !16626
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !16627

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !16628, !tbaa !3837
  %104 = load i64, i64* %s, align 8, !dbg !16629, !tbaa !3837
  %cmp119 = icmp eq i64 %103, %104, !dbg !16630
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !16631

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !16632, !tbaa !2980
  %106 = load i32, i32* %src_ns, align 4, !dbg !16633, !tbaa !2980
  %107 = load i32, i32* %src_ns, align 4, !dbg !16634, !tbaa !2980
  %108 = load i32, i32* %res, align 4, !dbg !16635, !tbaa !2980
  %rem122 = srem i32 %107, %108, !dbg !16636
  %sub123 = sub nsw i32 %106, %rem122, !dbg !16637
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !16638
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !16639

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !16640
  br label %return, !dbg !16640

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !16641, !tbaa !3837
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16642, !ctir !1161
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !16643, !ctir !1142
  store i64 %109, i64* %tv_sec128, align 16, !dbg !16644, !tbaa !15978, !ctir !338
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !16645, !tbaa !2980
  %conv129 = sext i32 %110 to i64, !dbg !16645
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16646, !ctir !1161
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !16647, !ctir !1142
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !16648, !tbaa !15981, !ctir !340
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !16649, !tbaa !3837
  %112 = load i32, i32* %res, align 4, !dbg !16650, !tbaa !2980
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !16651
  %conv132 = zext i1 %cmp131 to i32, !dbg !16651
  %conv133 = sext i32 %conv132 to i64, !dbg !16652
  %or134 = or i64 %111, %conv133, !dbg !16653
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16654, !ctir !1161
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !16655, !ctir !1142
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !16656, !tbaa !15978, !ctir !338
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !16657, !tbaa !2980
  %114 = load i32, i32* %res, align 4, !dbg !16658, !tbaa !2980
  %div137 = sdiv i32 %114, 9, !dbg !16659
  %add = add nsw i32 %113, %div137, !dbg !16660
  %conv138 = sext i32 %add to i64, !dbg !16657
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16661, !ctir !1161
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !16662, !ctir !1142
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !16663, !tbaa !15981, !ctir !340
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !16664, !tbaa !2980
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !16666, !tbaa !2993
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16667
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #12, !dbg !16668
  %tobool142 = icmp ne i32 %call141, 0, !dbg !16668
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !16669

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !16670
  br label %return, !dbg !16670

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !16671, metadata !DIExpression()), !dbg !16673
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !16674, !tbaa !2980
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !16675, !tbaa !2993
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #12, !dbg !16676
  store i32 %call145, i32* %stat_result, align 4, !dbg !16673, !tbaa !2980
  %119 = load i32, i32* %stat_result, align 4, !dbg !16677, !tbaa !2980
  %conv146 = sext i32 %119 to i64, !dbg !16677
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16679, !ctir !1128
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !16679, !ctir !1142
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !16679, !tbaa !16337, !ctir !338
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !16680, !tbaa !3837
  %xor = xor i64 %120, %121, !dbg !16681
  %or149 = or i64 %conv146, %xor, !dbg !16682
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16683
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !16684, !tbaa !2980
  %conv151 = sext i32 %122 to i64, !dbg !16684
  %xor152 = xor i64 %call150, %conv151, !dbg !16685
  %or153 = or i64 %or149, %xor152, !dbg !16686
  %tobool154 = icmp ne i64 %or153, 0, !dbg !16686
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !16687

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !16688, !tbaa !3837
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16690, !ctir !1161
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !16691, !ctir !1142
  store i64 %123, i64* %tv_sec157, align 16, !dbg !16692, !tbaa !15978, !ctir !338
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !16693, !tbaa !2980
  %conv158 = sext i32 %124 to i64, !dbg !16693
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !16694, !ctir !1161
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !16695, !ctir !1142
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !16696, !tbaa !15981, !ctir !340
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !16697, !tbaa !2980
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !16698, !tbaa !2993
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !16699
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #12, !dbg !16700
  br label %if.end163, !dbg !16701

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !16702, !tbaa !2980
  %cmp164 = icmp ne i32 %127, 0, !dbg !16704
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !16705

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !16706
  br label %return, !dbg !16706

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !16707, metadata !DIExpression()), !dbg !16709
  %128 = load i32, i32* %res, align 4, !dbg !16710, !tbaa !2980
  store i32 %128, i32* %old_res, align 4, !dbg !16709, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !16711, metadata !DIExpression()), !dbg !16712
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !16713, !ctir !1128
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !16713, !ctir !1142
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !16713, !tbaa !16337, !ctir !338
  %and171 = and i64 %129, 1, !dbg !16714
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !16715
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !16716
  %add174 = add nsw i64 %mul172, %call173, !dbg !16717
  %conv175 = trunc i64 %add174 to i32, !dbg !16718
  store i32 %conv175, i32* %a168, align 4, !dbg !16712, !tbaa !2980
  store i32 1, i32* %res, align 4, !dbg !16719, !tbaa !2980
  %130 = load i32, i32* %res, align 4, !dbg !16720, !tbaa !2980
  %131 = load i32, i32* %a168, align 4, !dbg !16722, !tbaa !2980
  %div176 = sdiv i32 %131, %130, !dbg !16722
  store i32 %div176, i32* %a168, align 4, !dbg !16722, !tbaa !2980
  br label %for.cond177, !dbg !16723

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !16724, !tbaa !2980
  %rem178 = srem i32 %132, 10, !dbg !16726
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !16727
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !16728

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !16729, !tbaa !2980
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !16732
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !16733

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !16734, !tbaa !2980
  %mul185 = mul nsw i32 %134, 2, !dbg !16734
  store i32 %mul185, i32* %res, align 4, !dbg !16734, !tbaa !2980
  br label %for.end194, !dbg !16736

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !16737, !tbaa !2980
  %mul187 = mul nsw i32 %135, 10, !dbg !16737
  store i32 %mul187, i32* %res, align 4, !dbg !16737, !tbaa !2980
  %136 = load i32, i32* %res, align 4, !dbg !16738, !tbaa !2980
  %137 = load i32, i32* %old_res, align 4, !dbg !16740, !tbaa !2980
  %cmp188 = icmp eq i32 %136, %137, !dbg !16741
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !16742

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !16743

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !16744

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !16745, !tbaa !2980
  %div193 = sdiv i32 %138, 10, !dbg !16745
  store i32 %div193, i32* %a168, align 4, !dbg !16745, !tbaa !2980
  br label %for.cond177, !dbg !16746, !llvm.loop !16747

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !16749

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !16750, !tbaa !2980
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16751, !tbaa !2993
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !16752, !ctir !1156
  store i32 %139, i32* %resolution196, align 8, !dbg !16753, !tbaa !16408, !ctir !5
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !16754, !tbaa !2993
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !16755, !ctir !1156
  store i8 1, i8* %exact197, align 4, !dbg !16756, !tbaa !16413, !ctir !117
  br label %if.end198, !dbg !16757

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !16758, !tbaa !2980
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !16759
  %143 = zext i1 %cmp199 to i64, !dbg !16758
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !16758
  %neg202 = xor i32 %cond201, -1, !dbg !16760
  %conv203 = sext i32 %neg202 to i64, !dbg !16760
  %144 = load i64, i64* %src_s, align 8, !dbg !16761, !tbaa !3837
  %and204 = and i64 %144, %conv203, !dbg !16761
  store i64 %and204, i64* %src_s, align 8, !dbg !16761, !tbaa !3837
  %145 = load i32, i32* %src_ns, align 4, !dbg !16762, !tbaa !2980
  %146 = load i32, i32* %res, align 4, !dbg !16763, !tbaa !2980
  %rem205 = srem i32 %145, %146, !dbg !16764
  %147 = load i32, i32* %src_ns, align 4, !dbg !16765, !tbaa !2980
  %sub206 = sub nsw i32 %147, %rem205, !dbg !16765
  store i32 %sub206, i32* %src_ns, align 4, !dbg !16765, !tbaa !2980
  br label %if.end207, !dbg !16766

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !16767, !tbaa !3837
  %149 = load i64, i64* %src_s, align 8, !dbg !16768, !tbaa !3837
  %cmp208 = icmp slt i64 %148, %149, !dbg !16769
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !16767

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !16767

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !16770, !tbaa !3837
  %151 = load i64, i64* %src_s, align 8, !dbg !16771, !tbaa !3837
  %cmp210 = icmp sgt i64 %150, %151, !dbg !16772
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !16770

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !16770

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !16773, !tbaa !2980
  %153 = load i32, i32* %src_ns, align 4, !dbg !16774, !tbaa !2980
  %cmp214 = icmp slt i32 %152, %153, !dbg !16775
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !16773

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !16773

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !16776, !tbaa !2980
  %155 = load i32, i32* %src_ns, align 4, !dbg !16777, !tbaa !2980
  %cmp218 = icmp sgt i32 %154, %155, !dbg !16778
  %conv219 = zext i1 %cmp218 to i32, !dbg !16778
  br label %cond.end, !dbg !16773

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !16773
  br label %cond.end221, !dbg !16770

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !16770
  br label %cond.end223, !dbg !16767

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !16767
  store i32 %cond224, i32* %retval, align 4, !dbg !16779
  br label %return, !dbg !16779

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !16780
  ret i32 %156, !dbg !16780
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !16781 !ctir !520 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.fs_res*, align 8, !ctir !1162
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16782, metadata !DIExpression()), !dbg !16783
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !16784, metadata !DIExpression()), !dbg !16785
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !16786, metadata !DIExpression()), !dbg !16787
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16788, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16788
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !16787, !tbaa !2993
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !16789, !tbaa !2993
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !16790, !ctir !1163
  %3 = load i64, i64* %dev, align 8, !dbg !16790, !tbaa !16420, !ctir !227
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !16791, !tbaa !3837
  %rem = urem i64 %3, %4, !dbg !16792
  ret i64 %rem, !dbg !16793
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !16794 !ctir !522 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %y.addr = alloca i8*, align 8, !ctir !428
  %a = alloca %struct.fs_res*, align 8, !ctir !1162
  %b = alloca %struct.fs_res*, align 8, !ctir !1162
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !16795, metadata !DIExpression()), !dbg !16796
  store i8* %y, i8** %y.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !16797, metadata !DIExpression()), !dbg !16798
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !16799, metadata !DIExpression()), !dbg !16800
  %0 = load i8*, i8** %x.addr, align 8, !dbg !16801, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !16801
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !16800, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !16802, metadata !DIExpression()), !dbg !16803
  %2 = load i8*, i8** %y.addr, align 8, !dbg !16804, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !16804
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !16803, !tbaa !2993
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !16805, !tbaa !2993
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !16806, !ctir !1163
  %5 = load i64, i64* %dev, align 8, !dbg !16806, !tbaa !16420, !ctir !227
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !16807, !tbaa !2993
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !16808, !ctir !1163
  %7 = load i64, i64* %dev1, align 8, !dbg !16808, !tbaa !16420, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !16809
  ret i1 %cmp, !dbg !16810
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !16811 !ctir !1172 {
entry:
  %dir.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %times.addr = alloca %struct.timespec*, align 8, !ctir !1174
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !16813, metadata !DIExpression()), !dbg !16814
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16815, metadata !DIExpression()), !dbg !16816
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !16817, metadata !DIExpression()), !dbg !16818
  %0 = load i32, i32* %dir.addr, align 4, !dbg !16819, !tbaa !2980
  %1 = load i8*, i8** %file.addr, align 8, !dbg !16820, !tbaa !2993
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !16821, !tbaa !2993
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #12, !dbg !16822
  ret i32 %call, !dbg !16823
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !16824 !ctir !1172 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1174
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1180
  %ts = alloca %struct.timespec*, align 8, !ctir !1181
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !1198
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8, !ctir !1176
  %tmp35 = alloca %struct.timespec, align 8, !ctir !1176
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1182
  %t = alloca %struct.timespec*, align 8, !ctir !1189
  %abig = alloca i8, align 1, !ctir !117
  %mbig = alloca i8, align 1, !ctir !117
  %adiff = alloca i64, align 8, !ctir !1154
  %mdiff = alloca i64, align 8, !ctir !1154
  %tt = alloca %struct.timespec*, align 8, !ctir !1189
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1182
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16825, metadata !DIExpression()), !dbg !16826
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16827, metadata !DIExpression()), !dbg !16828
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !16829, metadata !DIExpression()), !dbg !16830
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !16831, metadata !DIExpression()), !dbg !16832
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !16833, metadata !DIExpression()), !dbg !16834
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16835, !tbaa !2993
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !16835
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16835

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16836
  br label %cond.end, !dbg !16835

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16835

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !16835
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !16834, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !16837, metadata !DIExpression()), !dbg !16838
  store i32 0, i32* %adjustment_needed, align 4, !dbg !16838, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !16839, metadata !DIExpression()), !dbg !16840
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16841, !tbaa !2993
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !16841
  br i1 %tobool1, label %if.then, label %if.end, !dbg !16843

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !16844, !ctir !1180
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16846, !tbaa !2993
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !16846, !ctir !1174
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !16846
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !16846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !16846, !tbaa.struct !6296
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !16847, !ctir !1180
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !16848, !tbaa !2993
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !16848, !ctir !1174
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !16848
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !16848
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !16848, !tbaa.struct !6296
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16849, !tbaa !2993
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !16850
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !16851, !tbaa !2980
  br label %if.end, !dbg !16852

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !16853, !tbaa !2980
  %cmp = icmp slt i32 %9, 0, !dbg !16855
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !16856

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !16857
  br label %return, !dbg !16857

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !16858, !tbaa !2980
  %cmp7 = icmp slt i32 %10, 0, !dbg !16860
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !16861

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !16862, !tbaa !2993
  %tobool8 = icmp ne i8* %11, null, !dbg !16862
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !16863

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !16864
  store i32 9, i32* %call10, align 4, !dbg !16866, !tbaa !2980, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16867
  br label %return, !dbg !16867

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !16868, !tbaa !2980
  %cmp12 = icmp sle i32 0, %12, !dbg !16870
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !16871

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16872, metadata !DIExpression()), !dbg !16874
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !16875, !tbaa !2980
  %cmp14 = icmp eq i32 %13, 2, !dbg !16877
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !16878

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !16879, !tbaa !2980
  %cmp16 = icmp slt i32 %14, 0, !dbg !16882
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !16883

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !16884, !tbaa !2993
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #12, !dbg !16885
  %tobool19 = icmp ne i32 %call18, 0, !dbg !16885
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !16879

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !16886, !tbaa !2980
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #12, !dbg !16887
  %tobool22 = icmp ne i32 %call21, 0, !dbg !16887
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !16883

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !16888
  br label %return, !dbg !16888

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16889, !tbaa !2993
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !16889, !ctir !1181
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !16891, !ctir !1176
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !16891, !tbaa !15981, !ctir !340
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !16892
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !16893

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16894, !tbaa !2993
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !16894, !ctir !1181
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !16895
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !16895
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !16895
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !16895
  store i64 %22, i64* %21, align 8, !dbg !16895
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !16895
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !16895
  store i64 %24, i64* %23, align 8, !dbg !16895
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !16895
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !16895
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !16895, !tbaa.struct !6296
  br label %if.end38, !dbg !16894

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16896, !tbaa !2993
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !16896, !ctir !1181
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !16898, !ctir !1176
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !16898, !tbaa !15981, !ctir !340
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !16899
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !16900

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16901, !tbaa !2993
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !16901, !ctir !1181
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !16902
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !16902
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !16902
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !16902
  store i64 %32, i64* %31, align 8, !dbg !16902
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !16902
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !16902
  store i64 %34, i64* %33, align 8, !dbg !16902
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !16902
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !16902
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !16902, !tbaa.struct !6296
  br label %if.end37, !dbg !16901

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !16903, !tbaa !2980
  %inc = add nsw i32 %37, 1, !dbg !16903
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !16903, !tbaa !2980
  br label %if.end39, !dbg !16904

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !16905, !tbaa !2980
  %cmp40 = icmp slt i32 %38, 0, !dbg !16907
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !16908

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !16909, !tbaa !2993
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16911, !tbaa !2993
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #12, !dbg !16912
  store i32 %call42, i32* %result, align 4, !dbg !16913, !tbaa !2980
  %41 = load i32, i32* %result, align 4, !dbg !16914, !tbaa !2980
  %cmp43 = icmp slt i32 0, %41, !dbg !16916
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !16917

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #15, !dbg !16918
  store i32 38, i32* %call45, align 4, !dbg !16919, !tbaa !2980, !ctir !5
  br label %if.end46, !dbg !16918

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !16920, !tbaa !2980
  %cmp47 = icmp eq i32 %42, 0, !dbg !16922
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !16923

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #15, !dbg !16924
  %43 = load i32, i32* %call48, align 4, !dbg !16924, !tbaa !2980, !ctir !5
  %cmp49 = icmp ne i32 %43, 38, !dbg !16925
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !16926

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !16927, !tbaa !2980
  %44 = load i32, i32* %result, align 4, !dbg !16929, !tbaa !2980
  store i32 %44, i32* %retval, align 4, !dbg !16930
  br label %return, !dbg !16930

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !16931

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !16932, !tbaa !2980
  %cmp53 = icmp sle i32 0, %45, !dbg !16934
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !16935

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !16936, !tbaa !2980
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16938, !tbaa !2993
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #12, !dbg !16939
  store i32 %call55, i32* %result, align 4, !dbg !16940, !tbaa !2980
  %48 = load i32, i32* %result, align 4, !dbg !16941, !tbaa !2980
  %cmp56 = icmp slt i32 0, %48, !dbg !16943
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !16944

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #15, !dbg !16945
  store i32 38, i32* %call58, align 4, !dbg !16946, !tbaa !2980, !ctir !5
  br label %if.end59, !dbg !16945

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !16947, !tbaa !2980
  %cmp60 = icmp eq i32 %49, 0, !dbg !16949
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !16950

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #15, !dbg !16951
  %50 = load i32, i32* %call62, align 4, !dbg !16951, !tbaa !2980, !ctir !5
  %cmp63 = icmp ne i32 %50, 38, !dbg !16952
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !16953

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !16954, !tbaa !2980
  %51 = load i32, i32* %result, align 4, !dbg !16956, !tbaa !2980
  store i32 %51, i32* %retval, align 4, !dbg !16957
  br label %return, !dbg !16957

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !16958

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !16959

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !16960, !tbaa !2980
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !16961, !tbaa !2980
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !16962, !tbaa !2980
  %tobool68 = icmp ne i32 %52, 0, !dbg !16962
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !16964

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !16965, !tbaa !2980
  %cmp70 = icmp ne i32 %53, 3, !dbg !16968
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !16969

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !16970, !tbaa !2980
  %cmp72 = icmp slt i32 %54, 0, !dbg !16971
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !16972

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !16973, !tbaa !2993
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #12, !dbg !16974
  %tobool75 = icmp ne i32 %call74, 0, !dbg !16974
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !16970

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !16975, !tbaa !2980
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #12, !dbg !16976
  %tobool78 = icmp ne i32 %call77, 0, !dbg !16976
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !16972

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !16977
  br label %return, !dbg !16977

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16978, !tbaa !2993
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !16978
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !16980

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !16981
  br i1 %call83, label %if.then84, label %if.end85, !dbg !16982

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !16983
  br label %return, !dbg !16983

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !16984

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !16985, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !16988, metadata !DIExpression()), !dbg !16989
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16990, !tbaa !2993
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !16990
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !16992

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !16993, !tbaa !2993
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !16993, !ctir !1181
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !16995, !ctir !1176
  %60 = load i64, i64* %tv_sec, align 8, !dbg !16995, !tbaa !15978, !ctir !338
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !16996, !ctir !1182
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !16997, !ctir !1183
  store i64 %60, i64* %tv_sec91, align 16, !dbg !16998, !tbaa !16999, !ctir !338
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17001, !tbaa !2993
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !17001, !ctir !1181
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !17002, !ctir !1176
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !17002, !tbaa !15981, !ctir !340
  %div = sdiv i64 %62, 1000, !dbg !17003
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17004, !ctir !1182
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !17005, !ctir !1183
  store i64 %div, i64* %tv_usec, align 8, !dbg !17006, !tbaa !17007, !ctir !1188
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17008, !tbaa !2993
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !17008, !ctir !1181
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !17009, !ctir !1176
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !17009, !tbaa !15978, !ctir !338
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17010, !ctir !1182
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !17011, !ctir !1183
  store i64 %64, i64* %tv_sec98, align 16, !dbg !17012, !tbaa !16999, !ctir !338
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17013, !tbaa !2993
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !17013, !ctir !1181
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !17014, !ctir !1176
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !17014, !tbaa !15981, !ctir !340
  %div101 = sdiv i64 %66, 1000, !dbg !17015
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17016, !ctir !1182
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !17017, !ctir !1183
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !17018, !tbaa !17007, !ctir !1188
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17019
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !17020, !tbaa !2993
  br label %if.end106, !dbg !17021

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !17022, !tbaa !2993
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !17023, !tbaa !2980
  %cmp107 = icmp slt i32 %67, 0, !dbg !17025
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !17026

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !17027, !tbaa !2993
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17029, !tbaa !2993
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #12, !dbg !17030
  store i32 %call109, i32* %retval, align 4, !dbg !17031
  br label %return, !dbg !17031

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !17032, !tbaa !2980
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17032, !tbaa !2993
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #12, !dbg !17032
  %cmp112 = icmp eq i32 %call111, 0, !dbg !17035
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !17036

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17037, !tbaa !2993
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !17037
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !17040

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !17041, metadata !DIExpression()), !dbg !17043
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17044, !tbaa !2993
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !17044, !ctir !1189
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !17045, !ctir !1183
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !17045, !tbaa !17007, !ctir !1188
  %cmp118 = icmp sle i64 500000, %74, !dbg !17046
  %frombool = zext i1 %cmp118 to i8, !dbg !17043
  store i8 %frombool, i8* %abig, align 1, !dbg !17043, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !17047, metadata !DIExpression()), !dbg !17048
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17049, !tbaa !2993
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !17049, !ctir !1189
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !17050, !ctir !1183
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !17050, !tbaa !17007, !ctir !1188
  %cmp121 = icmp sle i64 500000, %76, !dbg !17051
  %frombool122 = zext i1 %cmp121 to i8, !dbg !17048
  store i8 %frombool122, i8* %mbig, align 1, !dbg !17048, !tbaa !3104
  %77 = load i8, i8* %abig, align 1, !dbg !17052, !tbaa !3104
  %tobool123 = trunc i8 %77 to i1, !dbg !17052
  %conv = zext i1 %tobool123 to i32, !dbg !17052
  %78 = load i8, i8* %mbig, align 1, !dbg !17054, !tbaa !3104
  %tobool124 = trunc i8 %78 to i1, !dbg !17054
  %conv125 = zext i1 %tobool124 to i32, !dbg !17054
  %or = or i32 %conv, %conv125, !dbg !17055
  %tobool126 = icmp ne i32 %or, 0, !dbg !17055
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !17056

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !17057, !tbaa !2980
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #12, !dbg !17058
  %cmp129 = icmp eq i32 %call128, 0, !dbg !17059
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !17060

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !17061, metadata !DIExpression()), !dbg !17063
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !17064, !ctir !1198
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17064, !ctir !1176
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !17064, !tbaa !16479, !ctir !338
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17065, !tbaa !2993
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !17065, !ctir !1189
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !17066, !ctir !1183
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !17066, !tbaa !16999, !ctir !338
  %sub = sub nsw i64 %80, %82, !dbg !17067
  store i64 %sub, i64* %adiff, align 8, !dbg !17063, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !17068, metadata !DIExpression()), !dbg !17069
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !17070, !ctir !1198
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17070, !ctir !1176
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !17070, !tbaa !16337, !ctir !338
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17071, !tbaa !2993
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !17071, !ctir !1189
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !17072, !ctir !1183
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !17072, !tbaa !16999, !ctir !338
  %sub138 = sub nsw i64 %83, %85, !dbg !17073
  store i64 %sub138, i64* %mdiff, align 8, !dbg !17069, !tbaa !3837
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !17074, metadata !DIExpression()), !dbg !17075
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !17075, !tbaa !2993
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !17076, metadata !DIExpression()), !dbg !17077
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17078, !ctir !1182
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17079, !tbaa !2993
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !17079, !ctir !1189
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !17079
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !17079
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !17079, !tbaa.struct !6296
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !17080, !ctir !1182
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17081, !tbaa !2993
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !17081, !ctir !1189
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !17081
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !17081
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !17081, !tbaa.struct !6296
  %92 = load i8, i8* %abig, align 1, !dbg !17082, !tbaa !3104
  %tobool143 = trunc i8 %92 to i1, !dbg !17082
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !17084

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !17085, !tbaa !3837
  %cmp146 = icmp eq i64 %93, 1, !dbg !17086
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !17087

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !17088
  %cmp150 = icmp eq i64 %call149, 0, !dbg !17089
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !17090

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17091
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !17093, !tbaa !2993
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17094, !tbaa !2993
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !17094, !ctir !1189
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !17095, !ctir !1183
  store i64 0, i64* %tv_usec155, align 8, !dbg !17096, !tbaa !17007, !ctir !1188
  br label %if.end156, !dbg !17097

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !17098, !tbaa !3104
  %tobool157 = trunc i8 %95 to i1, !dbg !17098
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !17100

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !17101, !tbaa !3837
  %cmp160 = icmp eq i64 %96, 1, !dbg !17102
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !17103

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !17104
  %cmp164 = icmp eq i64 %call163, 0, !dbg !17105
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !17106

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !17107
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !17109, !tbaa !2993
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17110, !tbaa !2993
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !17110, !ctir !1189
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !17111, !ctir !1183
  store i64 0, i64* %tv_usec169, align 8, !dbg !17112, !tbaa !17007, !ctir !1188
  br label %if.end170, !dbg !17113

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17114, !tbaa !2993
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !17114
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !17116

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !17117, !tbaa !2980
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !17117, !tbaa !2993
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #12, !dbg !17117
  br label %if.end174, !dbg !17117

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !17118

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !17119

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !17120
  br label %return, !dbg !17120

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !17121, !tbaa !2993
  %tobool179 = icmp ne i8* %101, null, !dbg !17121
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !17123

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !17124
  br label %return, !dbg !17124

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !17126, !tbaa !2993
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17127, !tbaa !2993
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #12, !dbg !17128
  store i32 %call182, i32* %retval, align 4, !dbg !17129
  br label %return, !dbg !17129

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !17130
  ret i32 %104, !dbg !17130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !17131 !ctir !1192 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1181
  %result = alloca i32, align 4, !ctir !5
  %utime_omit_count = alloca i32, align 4, !ctir !5
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17132, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17134, metadata !DIExpression()), !dbg !17135
  store i32 0, i32* %result, align 4, !dbg !17135, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !17136, metadata !DIExpression()), !dbg !17137
  store i32 0, i32* %utime_omit_count, align 4, !dbg !17137, !tbaa !2980
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17138, !tbaa !2993
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !17138, !ctir !1181
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17140, !ctir !1176
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17140, !tbaa !15981, !ctir !340
  %cmp = icmp ne i64 %1, 1073741823, !dbg !17141
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !17142

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17143, !tbaa !2993
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17143, !ctir !1181
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17144, !ctir !1176
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !17144, !tbaa !15981, !ctir !340
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !17145
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !17146

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17147, !tbaa !2993
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !17147, !ctir !1181
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !17148, !ctir !1176
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !17148, !tbaa !15981, !ctir !340
  %cmp7 = icmp sle i64 0, %5, !dbg !17149
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !17150

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17151, !tbaa !2993
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17151, !ctir !1181
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !17152, !ctir !1176
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !17152, !tbaa !15981, !ctir !340
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !17153
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !17154

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17155, !tbaa !2993
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17155, !ctir !1181
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !17156, !ctir !1176
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !17156, !tbaa !15981, !ctir !340
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !17157
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !17158

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17159, !tbaa !2993
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !17159, !ctir !1181
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !17160, !ctir !1176
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !17160, !tbaa !15981, !ctir !340
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !17161
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !17162

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17163, !tbaa !2993
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !17163, !ctir !1181
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17164, !ctir !1176
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !17164, !tbaa !15981, !ctir !340
  %cmp22 = icmp sle i64 0, %13, !dbg !17165
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !17166

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17167, !tbaa !2993
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !17167, !ctir !1181
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !17168, !ctir !1176
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !17168, !tbaa !15981, !ctir !340
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !17169
  br i1 %cmp26, label %if.end, label %if.then, !dbg !17170

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #15, !dbg !17171
  store i32 22, i32* %call, align 4, !dbg !17173, !tbaa !2980, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17174
  br label %return, !dbg !17174

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17175, !tbaa !2993
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !17175, !ctir !1181
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !17177, !ctir !1176
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !17177, !tbaa !15981, !ctir !340
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !17178
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !17179

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17180, !tbaa !2993
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !17180, !ctir !1181
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !17181, !ctir !1176
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !17181, !tbaa !15981, !ctir !340
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !17182
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !17183

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17184, !tbaa !2993
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !17184, !ctir !1181
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !17186, !ctir !1176
  store i64 0, i64* %tv_sec, align 8, !dbg !17187, !tbaa !15978, !ctir !338
  store i32 1, i32* %result, align 4, !dbg !17188, !tbaa !2980
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17189, !tbaa !2993
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !17189, !ctir !1181
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !17191, !ctir !1176
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !17191, !tbaa !15981, !ctir !340
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !17192
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !17193

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !17194, !tbaa !2980
  %inc = add nsw i32 %23, 1, !dbg !17194
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !17194, !tbaa !2980
  br label %if.end40, !dbg !17195

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !17196

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17197, !tbaa !2993
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !17197, !ctir !1181
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !17199, !ctir !1176
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !17199, !tbaa !15981, !ctir !340
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !17200
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !17201

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17202, !tbaa !2993
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !17202, !ctir !1181
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !17203, !ctir !1176
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !17203, !tbaa !15981, !ctir !340
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !17204
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !17205

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17206, !tbaa !2993
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !17206, !ctir !1181
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !17208, !ctir !1176
  store i64 0, i64* %tv_sec51, align 8, !dbg !17209, !tbaa !15978, !ctir !338
  store i32 1, i32* %result, align 4, !dbg !17210, !tbaa !2980
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17211, !tbaa !2993
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17211, !ctir !1181
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !17213, !ctir !1176
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !17213, !tbaa !15981, !ctir !340
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !17214
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !17215

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !17216, !tbaa !2980
  %inc56 = add nsw i32 %31, 1, !dbg !17216
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !17216, !tbaa !2980
  br label %if.end57, !dbg !17217

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !17218

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !17219, !tbaa !2980
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !17220, !tbaa !2980
  %cmp59 = icmp eq i32 %33, 1, !dbg !17221
  %conv = zext i1 %cmp59 to i32, !dbg !17221
  %add = add nsw i32 %32, %conv, !dbg !17222
  store i32 %add, i32* %retval, align 4, !dbg !17223
  br label %return, !dbg !17223

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !17224
  ret i32 %34, !dbg !17224
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !17225 !ctir !1194 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %statbuf.addr = alloca %struct.stat*, align 8, !ctir !1196
  %ts.addr = alloca %struct.timespec**, align 8, !ctir !1215
  %timespec = alloca %struct.timespec*, align 8, !ctir !1181
  %tmp = alloca %struct.timespec, align 8, !ctir !1176
  %tmp30 = alloca %struct.timespec, align 8, !ctir !1176
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !17226, metadata !DIExpression()), !dbg !17227
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !17228, metadata !DIExpression()), !dbg !17229
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !17230, metadata !DIExpression()), !dbg !17231
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17232, !tbaa !2993
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !17233, !tbaa !2993, !ctir !1181
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !17231, !tbaa !2993
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17234, !tbaa !2993
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17234, !ctir !1181
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !17236, !ctir !1176
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !17236, !tbaa !15981, !ctir !340
  %cmp = icmp eq i64 %3, 1073741822, !dbg !17237
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17238

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17239, !tbaa !2993
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !17239, !ctir !1181
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !17240, !ctir !1176
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !17240, !tbaa !15981, !ctir !340
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !17241
  br i1 %cmp3, label %if.then, label %if.end, !dbg !17242

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !17243
  br label %return, !dbg !17243

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17244, !tbaa !2993
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !17244, !ctir !1181
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !17246, !ctir !1176
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !17246, !tbaa !15981, !ctir !340
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !17247
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !17248

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17249, !tbaa !2993
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !17249, !ctir !1181
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !17250, !ctir !1176
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !17250, !tbaa !15981, !ctir !340
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !17251
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !17252

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !17253, !tbaa !2993
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !17255, !tbaa !2993, !ctir !1181
  store i1 false, i1* %retval, align 1, !dbg !17256
  br label %return, !dbg !17256

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17257, !tbaa !2993
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !17257, !ctir !1181
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !17259, !ctir !1176
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !17259, !tbaa !15981, !ctir !340
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !17260
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !17261

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17262, !tbaa !2993
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17262, !ctir !1181
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17263, !tbaa !2993
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !17264
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17264
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !17264
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !17264
  store i64 %17, i64* %16, align 8, !dbg !17264
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !17264
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !17264
  store i64 %19, i64* %18, align 8, !dbg !17264
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !17264
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !17264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !17264, !tbaa.struct !6296
  br label %if.end24, !dbg !17262

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17265, !tbaa !2993
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !17265, !ctir !1181
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !17267, !ctir !1176
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !17267, !tbaa !15981, !ctir !340
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !17268
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !17269

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17270, !tbaa !2993
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !17270, !ctir !1181
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !17271
  br label %if.end23, !dbg !17271

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17272, !tbaa !2993
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17272, !ctir !1181
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17274, !ctir !1176
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !17274, !tbaa !15981, !ctir !340
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !17275
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !17276

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17277, !tbaa !2993
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17277, !ctir !1181
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !17278, !tbaa !2993
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !17279
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !17279
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !17279
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !17279
  store i64 %31, i64* %30, align 8, !dbg !17279
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !17279
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !17279
  store i64 %33, i64* %32, align 8, !dbg !17279
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !17279
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !17279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !17279, !tbaa.struct !6296
  br label %if.end39, !dbg !17277

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17280, !tbaa !2993
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !17280, !ctir !1181
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !17282, !ctir !1176
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !17282, !tbaa !15981, !ctir !340
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !17283
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !17284

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !17285, !tbaa !2993
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !17285, !ctir !1181
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !17286
  br label %if.end38, !dbg !17286

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !17287
  br label %return, !dbg !17287

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !17288
  ret i1 %39, !dbg !17288
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17289 !ctir !1190 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !112
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1174
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17290, metadata !DIExpression()), !dbg !17291
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17292, metadata !DIExpression()), !dbg !17293
  %0 = load i8*, i8** %file.addr, align 8, !dbg !17294, !tbaa !2993
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17295, !tbaa !2993
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !17296
  ret i32 %call, !dbg !17297
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !17298 !ctir !1190 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1174
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1180
  %ts = alloca %struct.timespec*, align 8, !ctir !1181
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !1198
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8, !ctir !1176
  %tmp25 = alloca %struct.timespec, align 8, !ctir !1176
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17299, metadata !DIExpression()), !dbg !17300
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17301, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17303, metadata !DIExpression()), !dbg !17304
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17305, metadata !DIExpression()), !dbg !17306
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17307, !tbaa !2993
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17307
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17307

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17308
  br label %cond.end, !dbg !17307

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17307

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17307
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17306, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17309, metadata !DIExpression()), !dbg !17310
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17310, !tbaa !2980
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17311, metadata !DIExpression()), !dbg !17312
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17313, !tbaa !2993
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17313
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17315

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17316, !ctir !1180
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17318, !tbaa !2993
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17318, !ctir !1174
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17318
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17318, !tbaa.struct !6296
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17319, !ctir !1180
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17320, !tbaa !2993
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17320, !ctir !1174
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17320
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17320, !tbaa.struct !6296
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17321, !tbaa !2993
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17322
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17323, !tbaa !2980
  br label %if.end, !dbg !17324

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17325, !tbaa !2980
  %cmp = icmp slt i32 %9, 0, !dbg !17327
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17328

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17329
  br label %return, !dbg !17329

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !17330, !tbaa !2980
  %cmp7 = icmp sle i32 0, %10, !dbg !17332
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !17333

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17334, metadata !DIExpression()), !dbg !17336
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !17337, !tbaa !2980
  %cmp9 = icmp eq i32 %11, 2, !dbg !17339
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !17340

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !17341, !tbaa !2993
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #12, !dbg !17344
  %tobool12 = icmp ne i32 %call11, 0, !dbg !17344
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !17345

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !17346
  br label %return, !dbg !17346

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17347, !tbaa !2993
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !17347, !ctir !1181
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !17349, !ctir !1176
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !17349, !tbaa !15981, !ctir !340
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !17350
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !17351

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17352, !tbaa !2993
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !17352, !ctir !1181
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17353
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17353
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !17353
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !17353
  store i64 %18, i64* %17, align 8, !dbg !17353
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !17353
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !17353
  store i64 %20, i64* %19, align 8, !dbg !17353
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !17353
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !17353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !17353, !tbaa.struct !6296
  br label %if.end28, !dbg !17352

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17354, !tbaa !2993
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !17354, !ctir !1181
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !17356, !ctir !1176
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !17356, !tbaa !15981, !ctir !340
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !17357
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !17358

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17359, !tbaa !2993
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !17359, !ctir !1181
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17360
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !17360
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !17360
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !17360
  store i64 %28, i64* %27, align 8, !dbg !17360
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !17360
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !17360
  store i64 %30, i64* %29, align 8, !dbg !17360
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !17360
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !17360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !17360, !tbaa.struct !6296
  br label %if.end27, !dbg !17359

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !17361, !tbaa !2980
  %inc = add nsw i32 %33, 1, !dbg !17361
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17361, !tbaa !2980
  br label %if.end29, !dbg !17362

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !17363, !tbaa !2993
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17364, !tbaa !2993
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #12, !dbg !17365
  store i32 %call30, i32* %result, align 4, !dbg !17366, !tbaa !2980
  %36 = load i32, i32* %result, align 4, !dbg !17367, !tbaa !2980
  %cmp31 = icmp slt i32 0, %36, !dbg !17369
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !17370

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #15, !dbg !17371
  store i32 38, i32* %call33, align 4, !dbg !17372, !tbaa !2980, !ctir !5
  br label %if.end34, !dbg !17371

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !17373, !tbaa !2980
  %cmp35 = icmp eq i32 %37, 0, !dbg !17375
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !17376

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #15, !dbg !17377
  %38 = load i32, i32* %call36, align 4, !dbg !17377, !tbaa !2980, !ctir !5
  %cmp37 = icmp ne i32 %38, 38, !dbg !17378
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !17379

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17380, !tbaa !2980
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !17382, !tbaa !2980
  %39 = load i32, i32* %result, align 4, !dbg !17383, !tbaa !2980
  store i32 %39, i32* %retval, align 4, !dbg !17384
  br label %return, !dbg !17384

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !17385

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17386, !tbaa !2980
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !17387, !tbaa !2980
  %tobool41 = icmp ne i32 %40, 0, !dbg !17387
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !17389

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !17390, !tbaa !2980
  %cmp43 = icmp ne i32 %41, 3, !dbg !17393
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !17394

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !17395, !tbaa !2993
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #12, !dbg !17396
  %tobool45 = icmp ne i32 %call44, 0, !dbg !17396
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !17397

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !17398
  br label %return, !dbg !17398

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17399, !tbaa !2993
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !17399
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !17401

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17402
  br i1 %call50, label %if.then51, label %if.end52, !dbg !17403

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !17404
  br label %return, !dbg !17404

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !17405

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !17406, !tbaa !2980
  %tobool54 = icmp ne i32 %44, 0, !dbg !17406
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !17408

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !17409, !tbaa !2993
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #12, !dbg !17410
  %tobool57 = icmp ne i32 %call56, 0, !dbg !17410
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !17411

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !17412
  br label %return, !dbg !17412

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !17413, !ctir !1198
  %46 = load i32, i32* %st_mode, align 8, !dbg !17413, !tbaa !3176, !ctir !130
  %and = and i32 %46, 61440, !dbg !17413
  %cmp60 = icmp eq i32 %and, 40960, !dbg !17413
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !17415

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !17416, !tbaa !2993
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17417, !tbaa !2993
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !17418
  store i32 %call62, i32* %retval, align 4, !dbg !17419
  br label %return, !dbg !17419

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #15, !dbg !17420
  store i32 38, i32* %call64, align 4, !dbg !17421, !tbaa !2980, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17422
  br label %return, !dbg !17422

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !17423
  ret i32 %49, !dbg !17423
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !17424 !ctir !1945 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1947
  %command_name.addr = alloca i8*, align 8, !ctir !112
  %package.addr = alloca i8*, align 8, !ctir !112
  %version.addr = alloca i8*, align 8, !ctir !112
  %authors.addr = alloca i8**, align 8, !ctir !1249
  %n_authors.addr = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17426, metadata !DIExpression()), !dbg !17427
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17428, metadata !DIExpression()), !dbg !17429
  store i8* %package, i8** %package.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17430, metadata !DIExpression()), !dbg !17431
  store i8* %version, i8** %version.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17432, metadata !DIExpression()), !dbg !17433
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17434, metadata !DIExpression()), !dbg !17435
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !17436, metadata !DIExpression()), !dbg !17437
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !17438, !tbaa !2993
  %tobool = icmp ne i8* %0, null, !dbg !17438
  br i1 %tobool, label %if.then, label %if.else, !dbg !17440

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17441, !tbaa !2993
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !17442, !tbaa !2993
  %3 = load i8*, i8** %package.addr, align 8, !dbg !17443, !tbaa !2993
  %4 = load i8*, i8** %version.addr, align 8, !dbg !17444, !tbaa !2993
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.370, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !17445
  br label %if.end, !dbg !17445

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17446, !tbaa !2993
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17447, !tbaa !2993
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17448, !tbaa !2993
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.371, i64 0, i64 0), i8* %6, i8* %7), !dbg !17449
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17450, !tbaa !2993
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.372, i64 0, i64 0)) #12, !dbg !17451
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !17452
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17453, !tbaa !2993
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.373, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !17453
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17454, !tbaa !2993
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.374, i64 0, i64 0)) #12, !dbg !17455
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.375, i64 0, i64 0)), !dbg !17456
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17457, !tbaa !2993
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.373, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !17457
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !17458, !tbaa !3837
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !17459

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !17460

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17462, !tbaa !2993
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.376, i64 0, i64 0)) #12, !dbg !17463
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !17464, !tbaa !2993
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !17464, !ctir !1249
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !17464, !tbaa !2993
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !17465
  br label %sw.epilog, !dbg !17466

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17467, !tbaa !2993
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.377, i64 0, i64 0)) #12, !dbg !17468
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !17469, !tbaa !2993
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !17469, !ctir !1249
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !17469, !tbaa !2993
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !17470, !tbaa !2993
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !17470, !ctir !1249
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !17470, !tbaa !2993
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !17471
  br label %sw.epilog, !dbg !17472

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17473, !tbaa !2993
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.378, i64 0, i64 0)) #12, !dbg !17474
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !17475, !tbaa !2993
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !17475, !ctir !1249
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !17475, !tbaa !2993
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !17476, !tbaa !2993
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !17476, !ctir !1249
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !17476, !tbaa !2993
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !17477, !tbaa !2993
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !17477, !ctir !1249
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !17477, !tbaa !2993
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !17478
  br label %sw.epilog, !dbg !17479

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17480, !tbaa !2993
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.379, i64 0, i64 0)) #12, !dbg !17481
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !17482, !tbaa !2993
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !17482, !ctir !1249
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !17482, !tbaa !2993
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !17483, !tbaa !2993
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !17483, !ctir !1249
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !17483, !tbaa !2993
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !17484, !tbaa !2993
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !17484, !ctir !1249
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !17484, !tbaa !2993
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !17485, !tbaa !2993
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !17485, !ctir !1249
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !17485, !tbaa !2993
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !17486
  br label %sw.epilog, !dbg !17487

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17488, !tbaa !2993
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.380, i64 0, i64 0)) #12, !dbg !17489
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !17490, !tbaa !2993
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !17490, !ctir !1249
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !17490, !tbaa !2993
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !17491, !tbaa !2993
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !17491, !ctir !1249
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !17491, !tbaa !2993
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !17492, !tbaa !2993
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !17492, !ctir !1249
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !17492, !tbaa !2993
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !17493, !tbaa !2993
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !17493, !ctir !1249
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !17493, !tbaa !2993
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !17494, !tbaa !2993
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !17494, !ctir !1249
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !17494, !tbaa !2993
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !17495
  br label %sw.epilog, !dbg !17496

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17497, !tbaa !2993
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.381, i64 0, i64 0)) #12, !dbg !17498
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !17499, !tbaa !2993
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !17499, !ctir !1249
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !17499, !tbaa !2993
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !17500, !tbaa !2993
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !17500, !ctir !1249
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !17500, !tbaa !2993
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !17501, !tbaa !2993
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !17501, !ctir !1249
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !17501, !tbaa !2993
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !17502, !tbaa !2993
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !17502, !ctir !1249
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !17502, !tbaa !2993
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !17503, !tbaa !2993
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !17503, !ctir !1249
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !17503, !tbaa !2993
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !17504, !tbaa !2993
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !17504, !ctir !1249
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !17504, !tbaa !2993
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !17505
  br label %sw.epilog, !dbg !17506

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17507, !tbaa !2993
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.382, i64 0, i64 0)) #12, !dbg !17508
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !17509, !tbaa !2993
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !17509, !ctir !1249
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !17509, !tbaa !2993
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !17510, !tbaa !2993
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !17510, !ctir !1249
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !17510, !tbaa !2993
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !17511, !tbaa !2993
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !17511, !ctir !1249
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !17511, !tbaa !2993
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !17512, !tbaa !2993
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !17512, !ctir !1249
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !17512, !tbaa !2993
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !17513, !tbaa !2993
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !17513, !ctir !1249
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !17513, !tbaa !2993
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !17514, !tbaa !2993
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !17514, !ctir !1249
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !17514, !tbaa !2993
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !17515, !tbaa !2993
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !17515, !ctir !1249
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !17515, !tbaa !2993
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !17516
  br label %sw.epilog, !dbg !17517

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17518, !tbaa !2993
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.383, i64 0, i64 0)) #12, !dbg !17519
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !17520, !tbaa !2993
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !17520, !ctir !1249
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !17520, !tbaa !2993
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !17521, !tbaa !2993
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !17521, !ctir !1249
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !17521, !tbaa !2993
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !17522, !tbaa !2993
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !17522, !ctir !1249
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !17522, !tbaa !2993
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !17523, !tbaa !2993
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !17523, !ctir !1249
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !17523, !tbaa !2993
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !17524, !tbaa !2993
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !17524, !ctir !1249
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !17524, !tbaa !2993
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !17525, !tbaa !2993
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !17525, !ctir !1249
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !17525, !tbaa !2993
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !17526, !tbaa !2993
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !17526, !ctir !1249
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !17526, !tbaa !2993
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !17527, !tbaa !2993
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !17527, !ctir !1249
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !17527, !tbaa !2993
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !17528
  br label %sw.epilog, !dbg !17529

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17530, !tbaa !2993
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.384, i64 0, i64 0)) #12, !dbg !17531
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !17532, !tbaa !2993
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !17532, !ctir !1249
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !17532, !tbaa !2993
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !17533, !tbaa !2993
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !17533, !ctir !1249
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !17533, !tbaa !2993
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !17534, !tbaa !2993
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !17534, !ctir !1249
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !17534, !tbaa !2993
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !17535, !tbaa !2993
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !17535, !ctir !1249
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !17535, !tbaa !2993
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !17536, !tbaa !2993
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !17536, !ctir !1249
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !17536, !tbaa !2993
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !17537, !tbaa !2993
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !17537, !ctir !1249
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !17537, !tbaa !2993
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !17538, !tbaa !2993
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !17538, !ctir !1249
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !17538, !tbaa !2993
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !17539, !tbaa !2993
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !17539, !ctir !1249
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !17539, !tbaa !2993
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !17540, !tbaa !2993
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !17540, !ctir !1249
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !17540, !tbaa !2993
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !17541
  br label %sw.epilog, !dbg !17542

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17543, !tbaa !2993
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.385, i64 0, i64 0)) #12, !dbg !17544
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !17545, !tbaa !2993
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !17545, !ctir !1249
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !17545, !tbaa !2993
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !17546, !tbaa !2993
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !17546, !ctir !1249
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !17546, !tbaa !2993
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !17547, !tbaa !2993
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !17547, !ctir !1249
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !17547, !tbaa !2993
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !17548, !tbaa !2993
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !17548, !ctir !1249
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !17548, !tbaa !2993
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !17549, !tbaa !2993
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !17549, !ctir !1249
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !17549, !tbaa !2993
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !17550, !tbaa !2993
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !17550, !ctir !1249
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !17550, !tbaa !2993
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !17551, !tbaa !2993
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !17551, !ctir !1249
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !17551, !tbaa !2993
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !17552, !tbaa !2993
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !17552, !ctir !1249
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !17552, !tbaa !2993
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !17553, !tbaa !2993
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !17553, !ctir !1249
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !17553, !tbaa !2993
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !17554
  br label %sw.epilog, !dbg !17555

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !17556
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !17557 !ctir !1988 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1947
  %command_name.addr = alloca i8*, align 8, !ctir !112
  %package.addr = alloca i8*, align 8, !ctir !112
  %version.addr = alloca i8*, align 8, !ctir !112
  %authors.addr = alloca i8**, align 8, !ctir !1249
  %n_authors = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17558, metadata !DIExpression()), !dbg !17559
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17560, metadata !DIExpression()), !dbg !17561
  store i8* %package, i8** %package.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17562, metadata !DIExpression()), !dbg !17563
  store i8* %version, i8** %version.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17564, metadata !DIExpression()), !dbg !17565
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !17566, metadata !DIExpression()), !dbg !17567
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17568, metadata !DIExpression()), !dbg !17569
  store i64 0, i64* %n_authors, align 8, !dbg !17570, !tbaa !3837
  br label %for.cond, !dbg !17572

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !17573, !tbaa !2993
  %1 = load i64, i64* %n_authors, align 8, !dbg !17575, !tbaa !3837
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !17573, !ctir !1249
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !17573, !tbaa !2993
  %tobool = icmp ne i8* %2, null, !dbg !17576
  br i1 %tobool, label %for.body, label %for.end, !dbg !17576

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !17576

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !17577, !tbaa !3837
  %inc = add i64 %3, 1, !dbg !17577
  store i64 %inc, i64* %n_authors, align 8, !dbg !17577, !tbaa !3837
  br label %for.cond, !dbg !17578, !llvm.loop !17579

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17581, !tbaa !2993
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !17582, !tbaa !2993
  %6 = load i8*, i8** %package.addr, align 8, !dbg !17583, !tbaa !2993
  %7 = load i8*, i8** %version.addr, align 8, !dbg !17584, !tbaa !2993
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !17585, !tbaa !2993
  %9 = load i64, i64* %n_authors, align 8, !dbg !17586, !tbaa !3837
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !17587
  ret void, !dbg !17588
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !17589 !ctir !1990 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1947
  %command_name.addr = alloca i8*, align 8, !ctir !112
  %package.addr = alloca i8*, align 8, !ctir !112
  %version.addr = alloca i8*, align 8, !ctir !112
  %authors.addr = alloca %struct.__va_list_tag*, align 8, !ctir !1992
  %n_authors = alloca i64, align 8, !ctir !52
  %authtab = alloca [10 x i8*], align 16, !ctir !1999
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17590, metadata !DIExpression()), !dbg !17591
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17592, metadata !DIExpression()), !dbg !17593
  store i8* %package, i8** %package.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17594, metadata !DIExpression()), !dbg !17595
  store i8* %version, i8** %version.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17596, metadata !DIExpression()), !dbg !17597
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !17598, metadata !DIExpression()), !dbg !17599
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !17600, metadata !DIExpression()), !dbg !17601
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !17602, metadata !DIExpression()), !dbg !17603
  store i64 0, i64* %n_authors, align 8, !dbg !17604, !tbaa !3837
  br label %for.cond, !dbg !17606

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !17607, !tbaa !3837
  %cmp = icmp ult i64 %0, 10, !dbg !17609
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17610

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !17611, !tbaa !2993
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !17611
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !17611
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !17611
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !17611

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !17611
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !17611
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !17611
  %4 = bitcast i8* %3 to i8**, !dbg !17611
  %5 = add i32 %gp_offset, 8, !dbg !17611
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !17611
  br label %vaarg.end, !dbg !17611

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !17611
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !17611
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !17611
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !17611
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !17611
  br label %vaarg.end, !dbg !17611

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !17611
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !17611
  %8 = load i64, i64* %n_authors, align 8, !dbg !17612, !tbaa !3837
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !17613, !ctir !1999
  store i8* %7, i8** %arrayidx, align 8, !dbg !17614, !tbaa !2993
  %cmp1 = icmp ne i8* %7, null, !dbg !17615
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !17616
  br i1 %9, label %for.body, label %for.end, !dbg !17617

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !17617

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !17618, !tbaa !3837
  %inc = add i64 %10, 1, !dbg !17618
  store i64 %inc, i64* %n_authors, align 8, !dbg !17618, !tbaa !3837
  br label %for.cond, !dbg !17619, !llvm.loop !17620

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17622, !tbaa !2993
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !17623, !tbaa !2993
  %13 = load i8*, i8** %package.addr, align 8, !dbg !17624, !tbaa !2993
  %14 = load i8*, i8** %version.addr, align 8, !dbg !17625, !tbaa !2993
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !17626
  %15 = load i64, i64* %n_authors, align 8, !dbg !17627, !tbaa !3837
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !17628
  ret void, !dbg !17629
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !17630 !ctir !2000 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1947
  %command_name.addr = alloca i8*, align 8, !ctir !112
  %package.addr = alloca i8*, align 8, !ctir !112
  %version.addr = alloca i8*, align 8, !ctir !112
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2002
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17633, metadata !DIExpression()), !dbg !17634
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !17635, metadata !DIExpression()), !dbg !17636
  store i8* %package, i8** %package.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !17637, metadata !DIExpression()), !dbg !17638
  store i8* %version, i8** %version.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !17639, metadata !DIExpression()), !dbg !17640
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !17641, metadata !DIExpression()), !dbg !17642
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17643
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !17643
  call void @llvm.va_start(i8* %arraydecay1), !dbg !17643
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17644, !tbaa !2993
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !17645, !tbaa !2993
  %2 = load i8*, i8** %package.addr, align 8, !dbg !17646, !tbaa !2993
  %3 = load i8*, i8** %version.addr, align 8, !dbg !17647, !tbaa !2993
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17648
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !17649
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !17650
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !17650
  call void @llvm.va_end(i8* %arraydecay34), !dbg !17650
  ret void, !dbg !17651
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !17652 !ctir !131 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !17653, !tbaa !2993
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.373, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !17653
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.388, i64 0, i64 0)) #12, !dbg !17654
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.389, i64 0, i64 0)), !dbg !17655
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.390, i64 0, i64 0)) #12, !dbg !17656
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.391, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.392, i64 0, i64 0)), !dbg !17657
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.393, i64 0, i64 0)) #12, !dbg !17658
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.394, i64 0, i64 0)), !dbg !17659
  ret void, !dbg !17660
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1232 !ctir !1234 {
entry:
  %can = alloca i8, align 1, !ctir !117
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !17661, !tbaa !3104
  %tobool = trunc i8 %0 to i1, !dbg !17661
  br i1 %tobool, label %if.end, label %if.then, !dbg !17663

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !17664, metadata !DIExpression()), !dbg !17666
  store i8 0, i8* %can, align 1, !dbg !17666, !tbaa !3104
  %call = call i32 @geteuid() #12, !dbg !17667
  %cmp = icmp eq i32 %call, 0, !dbg !17668
  %frombool = zext i1 %cmp to i8, !dbg !17669
  store i8 %frombool, i8* %can, align 1, !dbg !17669, !tbaa !3104
  %1 = load i8, i8* %can, align 1, !dbg !17670, !tbaa !3104
  %tobool1 = trunc i8 %1 to i1, !dbg !17670
  %frombool2 = zext i1 %tobool1 to i8, !dbg !17671
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !17671, !tbaa !3104
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !17672, !tbaa !3104
  br label %if.end, !dbg !17673

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !17674, !tbaa !3104
  %tobool3 = trunc i8 %2 to i1, !dbg !17674
  ret i1 %tobool3, !dbg !17675
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !17676 !ctir !2009 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17678, metadata !DIExpression()), !dbg !17679
  store i64 %s, i64* %s.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17680, metadata !DIExpression()), !dbg !17681
  %0 = load i64, i64* %s.addr, align 8, !dbg !17682, !tbaa !3837
  %div = udiv i64 9223372036854775807, %0, !dbg !17682
  %1 = load i64, i64* %n.addr, align 8, !dbg !17682, !tbaa !3837
  %cmp = icmp ult i64 %div, %1, !dbg !17682
  br i1 %cmp, label %if.then, label %if.end, !dbg !17684

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17685
  unreachable, !dbg !17685

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17686, !tbaa !3837
  %3 = load i64, i64* %s.addr, align 8, !dbg !17687, !tbaa !3837
  %mul = mul i64 %2, %3, !dbg !17688
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !17689
  ret i8* %call, !dbg !17690
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !17691 !ctir !2017 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17693, metadata !DIExpression()), !dbg !17694
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17695, metadata !DIExpression()), !dbg !17696
  %0 = load i64, i64* %n.addr, align 8, !dbg !17697, !tbaa !3837
  %call = call noalias i8* @malloc(i64 %0) #12, !dbg !17698
  store i8* %call, i8** %p, align 8, !dbg !17696, !tbaa !2993
  %1 = load i8*, i8** %p, align 8, !dbg !17699, !tbaa !2993
  %tobool = icmp ne i8* %1, null, !dbg !17699
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17701

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17702, !tbaa !3837
  %cmp = icmp ne i64 %2, 0, !dbg !17703
  br i1 %cmp, label %if.then, label %if.end, !dbg !17704

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #16, !dbg !17705
  unreachable, !dbg !17705

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !17706, !tbaa !2993
  ret i8* %3, !dbg !17707
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !17708 !ctir !2011 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17709, metadata !DIExpression()), !dbg !17710
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17711, metadata !DIExpression()), !dbg !17712
  store i64 %s, i64* %s.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17713, metadata !DIExpression()), !dbg !17714
  %0 = load i64, i64* %s.addr, align 8, !dbg !17715, !tbaa !3837
  %div = udiv i64 9223372036854775807, %0, !dbg !17715
  %1 = load i64, i64* %n.addr, align 8, !dbg !17715, !tbaa !3837
  %cmp = icmp ult i64 %div, %1, !dbg !17715
  br i1 %cmp, label %if.then, label %if.end, !dbg !17717

if.then:                                          ; preds = %entry
  call void @xalloc_die() #16, !dbg !17718
  unreachable, !dbg !17718

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17719, !tbaa !2993
  %3 = load i64, i64* %n.addr, align 8, !dbg !17720, !tbaa !3837
  %4 = load i64, i64* %s.addr, align 8, !dbg !17721, !tbaa !3837
  %mul = mul i64 %3, %4, !dbg !17722
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !17723
  ret i8* %call, !dbg !17724
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !17725 !ctir !2019 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %p.addr = alloca i8*, align 8, !ctir !47
  %n.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17726, metadata !DIExpression()), !dbg !17727
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17728, metadata !DIExpression()), !dbg !17729
  %0 = load i64, i64* %n.addr, align 8, !dbg !17730, !tbaa !3837
  %tobool = icmp ne i64 %0, 0, !dbg !17730
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17732

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17733, !tbaa !2993
  %tobool1 = icmp ne i8* %1, null, !dbg !17733
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17734

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17735, !tbaa !2993
  call void @free(i8* %2) #12, !dbg !17737
  store i8* null, i8** %retval, align 8, !dbg !17738
  br label %return, !dbg !17738

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !17739, !tbaa !2993
  %4 = load i64, i64* %n.addr, align 8, !dbg !17740, !tbaa !3837
  %call = call i8* @realloc(i8* %3, i64 %4) #12, !dbg !17741
  store i8* %call, i8** %p.addr, align 8, !dbg !17742, !tbaa !2993
  %5 = load i8*, i8** %p.addr, align 8, !dbg !17743, !tbaa !2993
  %tobool2 = icmp ne i8* %5, null, !dbg !17743
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !17745

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !17746, !tbaa !3837
  %tobool4 = icmp ne i64 %6, 0, !dbg !17746
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !17747

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #16, !dbg !17748
  unreachable, !dbg !17748

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !17749, !tbaa !2993
  store i8* %7, i8** %retval, align 8, !dbg !17750
  br label %return, !dbg !17750

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !17751
  ret i8* %8, !dbg !17751
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !17752 !ctir !2013 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %pn.addr = alloca i64*, align 8, !ctir !599
  %s.addr = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17753, metadata !DIExpression()), !dbg !17754
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17755, metadata !DIExpression()), !dbg !17756
  store i64 %s, i64* %s.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17757, metadata !DIExpression()), !dbg !17758
  call void @llvm.dbg.declare(metadata i64* %n, metadata !17759, metadata !DIExpression()), !dbg !17760
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !17761, !tbaa !2993
  %1 = load i64, i64* %0, align 8, !dbg !17762, !tbaa !3837, !ctir !52
  store i64 %1, i64* %n, align 8, !dbg !17760, !tbaa !3837
  %2 = load i8*, i8** %p.addr, align 8, !dbg !17763, !tbaa !2993
  %tobool = icmp ne i8* %2, null, !dbg !17763
  br i1 %tobool, label %if.else, label %if.then, !dbg !17765

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !17766, !tbaa !3837
  %tobool1 = icmp ne i64 %3, 0, !dbg !17766
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !17769

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !17770, !tbaa !3837
  %div = udiv i64 128, %4, !dbg !17772
  store i64 %div, i64* %n, align 8, !dbg !17773, !tbaa !3837
  %5 = load i64, i64* %n, align 8, !dbg !17774, !tbaa !3837
  %tobool3 = icmp ne i64 %5, 0, !dbg !17775
  %lnot = xor i1 %tobool3, true, !dbg !17775
  %lnot.ext = zext i1 %lnot to i32, !dbg !17775
  %conv = sext i32 %lnot.ext to i64, !dbg !17775
  %6 = load i64, i64* %n, align 8, !dbg !17776, !tbaa !3837
  %add = add i64 %6, %conv, !dbg !17776
  store i64 %add, i64* %n, align 8, !dbg !17776, !tbaa !3837
  br label %if.end, !dbg !17777

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !17778, !tbaa !3837
  %div4 = udiv i64 9223372036854775807, %7, !dbg !17778
  %8 = load i64, i64* %n, align 8, !dbg !17778, !tbaa !3837
  %cmp = icmp ult i64 %div4, %8, !dbg !17778
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !17780

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #16, !dbg !17781
  unreachable, !dbg !17781

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !17782

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !17783, !tbaa !3837
  %div8 = udiv i64 6148914691236517204, %9, !dbg !17786
  %10 = load i64, i64* %n, align 8, !dbg !17787, !tbaa !3837
  %cmp9 = icmp ule i64 %div8, %10, !dbg !17788
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17789

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #16, !dbg !17790
  unreachable, !dbg !17790

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !17791, !tbaa !3837
  %div13 = udiv i64 %11, 2, !dbg !17792
  %add14 = add i64 %div13, 1, !dbg !17793
  %12 = load i64, i64* %n, align 8, !dbg !17794, !tbaa !3837
  %add15 = add i64 %12, %add14, !dbg !17794
  store i64 %add15, i64* %n, align 8, !dbg !17794, !tbaa !3837
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !17795, !tbaa !3837
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !17796, !tbaa !2993
  store i64 %13, i64* %14, align 8, !dbg !17797, !tbaa !3837, !ctir !52
  %15 = load i8*, i8** %p.addr, align 8, !dbg !17798, !tbaa !2993
  %16 = load i64, i64* %n, align 8, !dbg !17799, !tbaa !3837
  %17 = load i64, i64* %s.addr, align 8, !dbg !17800, !tbaa !3837
  %mul = mul i64 %16, %17, !dbg !17801
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !17802
  ret i8* %call, !dbg !17803
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !17804 !ctir !2015 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17805, metadata !DIExpression()), !dbg !17806
  %0 = load i64, i64* %n.addr, align 8, !dbg !17807, !tbaa !3837
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17807
  ret i8* %call, !dbg !17808
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !17809 !ctir !2021 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %pn.addr = alloca i64*, align 8, !ctir !599
  store i8* %p, i8** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17810, metadata !DIExpression()), !dbg !17811
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !17812, metadata !DIExpression()), !dbg !17813
  %0 = load i8*, i8** %p.addr, align 8, !dbg !17814, !tbaa !2993
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !17815, !tbaa !2993
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !17816
  ret i8* %call, !dbg !17817
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !17818 !ctir !2017 {
entry:
  %s.addr = alloca i64, align 8, !ctir !52
  store i64 %s, i64* %s.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17819, metadata !DIExpression()), !dbg !17820
  %0 = load i64, i64* %s.addr, align 8, !dbg !17821, !tbaa !3837
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17822
  %1 = load i64, i64* %s.addr, align 8, !dbg !17823, !tbaa !3837
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !17824
  ret i8* %call, !dbg !17825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !17826 !ctir !2009 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17827, metadata !DIExpression()), !dbg !17828
  store i64 %s, i64* %s.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17829, metadata !DIExpression()), !dbg !17830
  call void @llvm.dbg.declare(metadata i8** %p, metadata !17831, metadata !DIExpression()), !dbg !17832
  %0 = load i64, i64* %s.addr, align 8, !dbg !17833, !tbaa !3837
  %div = udiv i64 9223372036854775807, %0, !dbg !17833
  %1 = load i64, i64* %n.addr, align 8, !dbg !17833, !tbaa !3837
  %cmp = icmp ult i64 %div, %1, !dbg !17833
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17835

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !17836, !tbaa !3837
  %3 = load i64, i64* %s.addr, align 8, !dbg !17837, !tbaa !3837
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #12, !dbg !17838
  store i8* %call, i8** %p, align 8, !dbg !17839, !tbaa !2993
  %tobool = icmp ne i8* %call, null, !dbg !17839
  br i1 %tobool, label %if.end, label %if.then, !dbg !17840

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #16, !dbg !17841
  unreachable, !dbg !17841

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !17842, !tbaa !2993
  ret i8* %4, !dbg !17843
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !17844 !ctir !426 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !428
  %s.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !17845, metadata !DIExpression()), !dbg !17846
  store i64 %s, i64* %s.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !17847, metadata !DIExpression()), !dbg !17848
  %0 = load i64, i64* %s.addr, align 8, !dbg !17849, !tbaa !3837
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !17850
  %1 = load i8*, i8** %p.addr, align 8, !dbg !17851, !tbaa !2993
  %2 = load i64, i64* %s.addr, align 8, !dbg !17852, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !17853
  ret i8* %call, !dbg !17854
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !17855 !ctir !979 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !112
  store i8* %string, i8** %string.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !17856, metadata !DIExpression()), !dbg !17857
  %0 = load i8*, i8** %string.addr, align 8, !dbg !17858, !tbaa !2993
  %1 = load i8*, i8** %string.addr, align 8, !dbg !17859, !tbaa !2993
  %call = call i64 @strlen(i8* %1) #14, !dbg !17860
  %add = add i64 %call, 1, !dbg !17861
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !17862
  ret i8* %call1, !dbg !17863
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !17864 !ctir !131 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !17866, !tbaa !2980
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.415, i64 0, i64 0)) #12, !dbg !17867
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.416, i64 0, i64 0), i8* %call), !dbg !17868
  call void @abort() #13, !dbg !17869
  unreachable, !dbg !17869
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @xfts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !17870 !ctir !2029 {
entry:
  %argv.addr = alloca i8**, align 8, !ctir !1331
  %options.addr = alloca i32, align 4, !ctir !5
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8, !ctir !2113
  %fts = alloca %struct.FTS*, align 8, !ctir !2031
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !17872, metadata !DIExpression()), !dbg !17873
  store i32 %options, i32* %options.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17874, metadata !DIExpression()), !dbg !17875
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !17876, metadata !DIExpression()), !dbg !17877
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts, metadata !17878, metadata !DIExpression()), !dbg !17879
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !17880, !tbaa !2993
  %1 = load i32, i32* %options.addr, align 4, !dbg !17881, !tbaa !2980
  %or = or i32 %1, 512, !dbg !17882
  %2 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !17883, !tbaa !2993
  %call = call %struct.FTS* @rpl_fts_open(i8** %0, i32 %or, i32 (%struct._ftsent**, %struct._ftsent**)* %2), !dbg !17884
  store %struct.FTS* %call, %struct.FTS** %fts, align 8, !dbg !17879, !tbaa !2993
  %3 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !17885, !tbaa !2993
  %cmp = icmp eq %struct.FTS* %3, null, !dbg !17887
  br i1 %cmp, label %if.then, label %if.end, !dbg !17888

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #15, !dbg !17889
  %4 = load i32, i32* %call1, align 4, !dbg !17889, !tbaa !2980, !ctir !5
  %cmp2 = icmp ne i32 %4, 22, !dbg !17889
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !17889

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !17889

cond.false:                                       ; preds = %if.then
  call void @__assert_fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.419, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1.420, i64 0, i64 0), i32 41, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__.xfts_open, i64 0, i64 0)) #13, !dbg !17889
  unreachable, !dbg !17889

5:                                                ; No predecessors!
  br label %cond.end, !dbg !17889

cond.end:                                         ; preds = %5, %cond.true
  call void @xalloc_die() #16, !dbg !17891
  unreachable, !dbg !17891

if.end:                                           ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %fts, align 8, !dbg !17892, !tbaa !2993
  ret %struct.FTS* %6, !dbg !17893
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @cycle_warning_required(%struct.FTS* %fts, %struct._ftsent* %ent) #9 !dbg !17894 !ctir !2120 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !2122
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !2117
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !17895, metadata !DIExpression()), !dbg !17896
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !17897, metadata !DIExpression()), !dbg !17898
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17899, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !17899, !ctir !2123
  %1 = load i32, i32* %fts_options, align 8, !dbg !17899, !tbaa !17900, !ctir !5
  %and = and i32 %1, 16, !dbg !17899
  %tobool = icmp ne i32 %and, 0, !dbg !17899
  br i1 %tobool, label %land.lhs.true, label %lor.rhs, !dbg !17901

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17902, !tbaa !2993
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !17902, !ctir !2123
  %3 = load i32, i32* %fts_options1, align 8, !dbg !17902, !tbaa !17900, !ctir !5
  %and2 = and i32 %3, 1, !dbg !17902
  %tobool3 = icmp ne i32 %and2, 0, !dbg !17902
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !17903

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17904, !tbaa !2993
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !17904, !ctir !2123
  %5 = load i32, i32* %fts_options4, align 8, !dbg !17904, !tbaa !17900, !ctir !5
  %and5 = and i32 %5, 16, !dbg !17904
  %tobool6 = icmp ne i32 %and5, 0, !dbg !17904
  br i1 %tobool6, label %land.lhs.true7, label %land.end, !dbg !17905

land.lhs.true7:                                   ; preds = %lor.rhs
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !17906, !tbaa !2993
  %fts_options8 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 10, !dbg !17906, !ctir !2123
  %7 = load i32, i32* %fts_options8, align 8, !dbg !17906, !tbaa !17900, !ctir !5
  %and9 = and i32 %7, 1, !dbg !17906
  %tobool10 = icmp ne i32 %and9, 0, !dbg !17906
  br i1 %tobool10, label %land.rhs, label %land.end, !dbg !17907

land.rhs:                                         ; preds = %land.lhs.true7
  %8 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !17908, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 12, !dbg !17909, !ctir !2118
  %9 = load i64, i64* %fts_level, align 8, !dbg !17909, !tbaa !3837, !ctir !539
  %cmp = icmp ne i64 %9, 0, !dbg !17910
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true7, %lor.rhs
  %10 = phi i1 [ false, %land.lhs.true7 ], [ false, %lor.rhs ], [ %cmp, %land.rhs ], !dbg !17911
  br label %lor.end, !dbg !17903

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %11 = phi i1 [ true, %land.lhs.true ], [ %10, %land.end ]
  ret i1 %11, !dbg !17912
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !17913 !ctir !1234 {
entry:
  %yes = alloca i8, align 1, !ctir !117
  %response = alloca i8*, align 8, !ctir !7
  %response_size = alloca i64, align 8, !ctir !52
  %response_len = alloca i64, align 8, !ctir !579
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !17915, metadata !DIExpression()), !dbg !17916
  call void @llvm.dbg.declare(metadata i8** %response, metadata !17917, metadata !DIExpression()), !dbg !17918
  store i8* null, i8** %response, align 8, !dbg !17918, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !17919, metadata !DIExpression()), !dbg !17920
  store i64 0, i64* %response_size, align 8, !dbg !17920, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !17921, metadata !DIExpression()), !dbg !17922
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !17923, !tbaa !2993
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !17924
  store i64 %call, i64* %response_len, align 8, !dbg !17922, !tbaa !3837
  %1 = load i64, i64* %response_len, align 8, !dbg !17925, !tbaa !3837
  %cmp = icmp sle i64 %1, 0, !dbg !17927
  br i1 %cmp, label %if.then, label %if.else, !dbg !17928

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !17929, !tbaa !3104
  br label %if.end9, !dbg !17930

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !17931, !tbaa !2993
  %3 = load i64, i64* %response_len, align 8, !dbg !17934, !tbaa !3837
  %sub = sub nsw i64 %3, 1, !dbg !17935
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !17931, !ctir !7
  %4 = load i8, i8* %arrayidx, align 1, !dbg !17931, !tbaa !3652
  %conv = sext i8 %4 to i32, !dbg !17931
  %cmp1 = icmp eq i32 %conv, 10, !dbg !17936
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !17937

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !17938, !tbaa !2993
  %6 = load i64, i64* %response_len, align 8, !dbg !17939, !tbaa !3837
  %sub4 = sub nsw i64 %6, 1, !dbg !17940
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !17938, !ctir !7
  store i8 0, i8* %arrayidx5, align 1, !dbg !17941, !tbaa !3652
  br label %if.end, !dbg !17938

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !17942, !tbaa !2993
  %call6 = call i32 @rpmatch(i8* %7) #12, !dbg !17943
  %cmp7 = icmp slt i32 0, %call6, !dbg !17944
  %frombool = zext i1 %cmp7 to i8, !dbg !17945
  store i8 %frombool, i8* %yes, align 1, !dbg !17945, !tbaa !3104
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !17946, !tbaa !2993
  call void @free(i8* %8) #12, !dbg !17947
  %9 = load i8, i8* %yes, align 1, !dbg !17948, !tbaa !3104
  %tobool = trunc i8 %9 to i1, !dbg !17948
  ret i1 %tobool, !dbg !17949
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !17950 !ctir !2168 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2170
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !17952, metadata !DIExpression()), !dbg !17953
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17954, !tbaa !2993
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !17956
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17957

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17958, !tbaa !2993
  %call = call i32 @__freading(%struct._IO_FILE* %1) #12, !dbg !17958
  %cmp1 = icmp ne i32 %call, 0, !dbg !17958
  br i1 %cmp1, label %if.end, label %if.then, !dbg !17959

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17960, !tbaa !2993
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !17961
  store i32 %call2, i32* %retval, align 4, !dbg !17962
  br label %return, !dbg !17962

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17963, !tbaa !2993
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !17964
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !17965, !tbaa !2993
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !17966
  store i32 %call3, i32* %retval, align 4, !dbg !17967
  br label %return, !dbg !17967

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !17968
  ret i32 %5, !dbg !17968
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !17969 !ctir !2210 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2170
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17970, metadata !DIExpression()), !dbg !17971
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17972, !tbaa !2993
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !17974, !ctir !2171
  %1 = load i32, i32* %_flags, align 8, !dbg !17974, !tbaa !17975, !ctir !5
  %and = and i32 %1, 256, !dbg !17977
  %tobool = icmp ne i32 %and, 0, !dbg !17977
  br i1 %tobool, label %if.then, label %if.end, !dbg !17978

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17979, !tbaa !2993
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !17980
  br label %if.end, !dbg !17980

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17981
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #9 !dbg !17982 !ctir !2215 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2217
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !17984, metadata !DIExpression()), !dbg !17985
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17986, !tbaa !2993
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !17988, !ctir !2218
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !17988, !tbaa !17989, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17990, !tbaa !2993
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !17991, !ctir !2218
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !17991, !tbaa !17992, !ctir !7
  %cmp = icmp ugt i8* %1, %3, !dbg !17993
  br i1 %cmp, label %if.then, label %if.end, !dbg !17994

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !17995
  br label %return, !dbg !17995

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17996, !tbaa !2993
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !17997, !ctir !2218
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !17997, !tbaa !17998, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !17999, !tbaa !2993
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !18000, !ctir !2218
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18000, !tbaa !18001, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !18002
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !18002
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !18002
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18003, !tbaa !2993
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !18004, !ctir !2218
  %9 = load i32, i32* %_flags, align 8, !dbg !18004, !tbaa !17975, !ctir !5
  %and = and i32 %9, 256, !dbg !18005
  %tobool = icmp ne i32 %and, 0, !dbg !18005
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18003

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18006, !tbaa !2993
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !18007, !ctir !2218
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !18007, !tbaa !18008, !ctir !7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18009, !tbaa !2993
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !18010, !ctir !2218
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !18010, !tbaa !18011, !ctir !7
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !18012
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !18012
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !18012
  br label %cond.end, !dbg !18003

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !18003

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !18003
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !18013
  store i64 %add, i64* %retval, align 8, !dbg !18014
  br label %return, !dbg !18014

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !18015
  ret i64 %14, !dbg !18015
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !18016 !ctir !2260 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2262
  %offset.addr = alloca i64, align 8, !ctir !245
  %whence.addr = alloca i32, align 4, !ctir !5
  %pos = alloca i64, align 8, !ctir !245
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !18018, metadata !DIExpression()), !dbg !18019
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !18020, metadata !DIExpression()), !dbg !18021
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !18022, metadata !DIExpression()), !dbg !18023
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18024, !tbaa !2993
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !18026, !ctir !2263
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !18026, !tbaa !17998, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18027, !tbaa !2993
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !18028, !ctir !2263
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !18028, !tbaa !18001, !ctir !7
  %cmp = icmp eq i8* %1, %3, !dbg !18029
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !18030

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18031, !tbaa !2993
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !18032, !ctir !2263
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !18032, !tbaa !17989, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18033, !tbaa !2993
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !18034, !ctir !2263
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !18034, !tbaa !17992, !ctir !7
  %cmp1 = icmp eq i8* %5, %7, !dbg !18035
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !18036

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18037, !tbaa !2993
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !18038, !ctir !2263
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !18038, !tbaa !18011, !ctir !7
  %cmp3 = icmp eq i8* %9, null, !dbg !18039
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !18040

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !18041, metadata !DIExpression()), !dbg !18043
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18044, !tbaa !2993
  %call = call i32 @fileno(%struct._IO_FILE* %10) #12, !dbg !18045
  %11 = load i64, i64* %offset.addr, align 8, !dbg !18046, !tbaa !3837
  %12 = load i32, i32* %whence.addr, align 4, !dbg !18047, !tbaa !2980
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #12, !dbg !18048
  store i64 %call4, i64* %pos, align 8, !dbg !18043, !tbaa !3837
  %13 = load i64, i64* %pos, align 8, !dbg !18049, !tbaa !3837
  %cmp5 = icmp eq i64 %13, -1, !dbg !18051
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !18052

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !18053
  br label %return, !dbg !18053

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18055, !tbaa !2993
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !18056, !ctir !2263
  %15 = load i32, i32* %_flags, align 8, !dbg !18057, !tbaa !17975, !ctir !5
  %and = and i32 %15, -17, !dbg !18057
  store i32 %and, i32* %_flags, align 8, !dbg !18057, !tbaa !17975, !ctir !5
  %16 = load i64, i64* %pos, align 8, !dbg !18058, !tbaa !3837
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18059, !tbaa !2993
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !18060, !ctir !2263
  store i64 %16, i64* %_offset, align 8, !dbg !18061, !tbaa !18062, !ctir !45
  store i32 0, i32* %retval, align 4, !dbg !18063
  br label %return, !dbg !18063

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !18064, !tbaa !2993
  %19 = load i64, i64* %offset.addr, align 8, !dbg !18065, !tbaa !3837
  %20 = load i32, i32* %whence.addr, align 4, !dbg !18066, !tbaa !2980
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !18067
  store i32 %call8, i32* %retval, align 4, !dbg !18068
  br label %return, !dbg !18068

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !18069
  ret i32 %21, !dbg !18069
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.FTS* @rpl_fts_open(i8** %argv, i32 %options, i32 (%struct._ftsent**, %struct._ftsent**)* %compar) #4 !dbg !18070 !ctir !2409 {
entry:
  %retval = alloca %struct.FTS*, align 8, !ctir !2331
  %argv.addr = alloca i8**, align 8, !ctir !1331
  %options.addr = alloca i32, align 4, !ctir !5
  %compar.addr = alloca i32 (%struct._ftsent**, %struct._ftsent**)*, align 8, !ctir !2411
  %sp = alloca %struct.FTS*, align 8, !ctir !2331
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %root = alloca %struct._ftsent*, align 8, !ctir !2414
  %nitems = alloca i64, align 8, !ctir !52
  %parent = alloca %struct._ftsent*, align 8, !ctir !2414
  %tmp = alloca %struct._ftsent*, align 8, !ctir !2414
  %defer_stat = alloca i8, align 1, !ctir !117
  %fd = alloca i32, align 4, !ctir !5
  %maxarglen = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %v = alloca i8*, align 8, !ctir !112
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18071, metadata !DIExpression()), !dbg !18072
  store i32 %options, i32* %options.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !18073, metadata !DIExpression()), !dbg !18074
  store i32 (%struct._ftsent**, %struct._ftsent**)* %compar, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, metadata !18075, metadata !DIExpression()), !dbg !18076
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !18077, metadata !DIExpression()), !dbg !18078
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18079, metadata !DIExpression()), !dbg !18080
  call void @llvm.dbg.declare(metadata %struct._ftsent** %root, metadata !18081, metadata !DIExpression()), !dbg !18082
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !18083, metadata !DIExpression()), !dbg !18084
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !18085, metadata !DIExpression()), !dbg !18086
  store %struct._ftsent* null, %struct._ftsent** %parent, align 8, !dbg !18086, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !18087, metadata !DIExpression()), !dbg !18088
  store %struct._ftsent* null, %struct._ftsent** %tmp, align 8, !dbg !18088, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %defer_stat, metadata !18089, metadata !DIExpression()), !dbg !18090
  %0 = load i32, i32* %options.addr, align 4, !dbg !18091, !tbaa !2980
  %and = and i32 %0, -4096, !dbg !18093
  %tobool = icmp ne i32 %and, 0, !dbg !18093
  br i1 %tobool, label %if.then, label %if.end, !dbg !18094

if.then:                                          ; preds = %entry
  %call = call i32* @__errno_location() #15, !dbg !18095
  store i32 22, i32* %call, align 4, !dbg !18095, !tbaa !2980, !ctir !5
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18097
  br label %return, !dbg !18097

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !18098, !tbaa !2980
  %and1 = and i32 %1, 4, !dbg !18100
  %tobool2 = icmp ne i32 %and1, 0, !dbg !18100
  br i1 %tobool2, label %land.lhs.true, label %if.end7, !dbg !18101

land.lhs.true:                                    ; preds = %if.end
  %2 = load i32, i32* %options.addr, align 4, !dbg !18102, !tbaa !2980
  %and3 = and i32 %2, 512, !dbg !18103
  %tobool4 = icmp ne i32 %and3, 0, !dbg !18103
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !18104

if.then5:                                         ; preds = %land.lhs.true
  %call6 = call i32* @__errno_location() #15, !dbg !18105
  store i32 22, i32* %call6, align 4, !dbg !18105, !tbaa !2980, !ctir !5
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18107
  br label %return, !dbg !18107

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %3 = load i32, i32* %options.addr, align 4, !dbg !18108, !tbaa !2980
  %and8 = and i32 %3, 18, !dbg !18110
  %tobool9 = icmp ne i32 %and8, 0, !dbg !18110
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !18111

if.then10:                                        ; preds = %if.end7
  %call11 = call i32* @__errno_location() #15, !dbg !18112
  store i32 22, i32* %call11, align 4, !dbg !18112, !tbaa !2980, !ctir !5
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18114
  br label %return, !dbg !18114

if.end12:                                         ; preds = %if.end7
  %call13 = call noalias i8* @malloc(i64 128) #12, !dbg !18115
  %4 = bitcast i8* %call13 to %struct.FTS*, !dbg !18115
  store %struct.FTS* %4, %struct.FTS** %sp, align 8, !dbg !18117, !tbaa !2993
  %cmp = icmp eq %struct.FTS* %4, null, !dbg !18118
  br i1 %cmp, label %if.then14, label %if.end15, !dbg !18119

if.then14:                                        ; preds = %if.end12
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18120
  br label %return, !dbg !18120

if.end15:                                         ; preds = %if.end12
  %5 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18121, !tbaa !2993
  %6 = bitcast %struct.FTS* %5 to i8*, !dbg !18122
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 128, i1 false), !dbg !18122
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18123, !tbaa !2993
  %8 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18124, !tbaa !2993
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 9, !dbg !18125, !ctir !2332
  store i32 (%struct._ftsent**, %struct._ftsent**)* %7, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18126, !tbaa !18127, !ctir !2346
  %9 = load i32, i32* %options.addr, align 4, !dbg !18128, !tbaa !2980
  %10 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18129, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !18130, !ctir !2332
  store i32 %9, i32* %fts_options, align 8, !dbg !18131, !tbaa !17900, !ctir !5
  %11 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18132, !tbaa !2993
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !18132, !ctir !2332
  %12 = load i32, i32* %fts_options16, align 8, !dbg !18132, !tbaa !17900, !ctir !5
  %and17 = and i32 %12, 2, !dbg !18132
  %tobool18 = icmp ne i32 %and17, 0, !dbg !18132
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !18134

if.then19:                                        ; preds = %if.end15
  %13 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18135, !tbaa !2993
  %fts_options20 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 10, !dbg !18135, !ctir !2332
  %14 = load i32, i32* %fts_options20, align 8, !dbg !18135, !tbaa !17900, !ctir !5
  %or = or i32 %14, 4, !dbg !18135
  store i32 %or, i32* %fts_options20, align 8, !dbg !18135, !tbaa !17900, !ctir !5
  %15 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18137, !tbaa !2993
  %fts_options21 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 10, !dbg !18137, !ctir !2332
  %16 = load i32, i32* %fts_options21, align 8, !dbg !18137, !tbaa !17900, !ctir !5
  %and22 = and i32 %16, -513, !dbg !18137
  store i32 %and22, i32* %fts_options21, align 8, !dbg !18137, !tbaa !17900, !ctir !5
  br label %if.end23, !dbg !18138

if.end23:                                         ; preds = %if.then19, %if.end15
  %17 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18139, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18140, !ctir !2332
  store i32 -100, i32* %fts_cwd_fd, align 4, !dbg !18141, !tbaa !3812, !ctir !5
  %18 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18142, !tbaa !2993
  %fts_options24 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !18142, !ctir !2332
  %19 = load i32, i32* %fts_options24, align 8, !dbg !18142, !tbaa !17900, !ctir !5
  %and25 = and i32 %19, 512, !dbg !18142
  %tobool26 = icmp ne i32 %and25, 0, !dbg !18142
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !18144

land.lhs.true27:                                  ; preds = %if.end23
  br i1 true, label %if.end34, label %if.then28, !dbg !18145

if.then28:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18146, metadata !DIExpression()), !dbg !18148
  %call29 = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0), i32 0), !dbg !18149
  store i32 %call29, i32* %fd, align 4, !dbg !18148, !tbaa !2980
  %20 = load i32, i32* %fd, align 4, !dbg !18150, !tbaa !2980
  %cmp30 = icmp slt i32 %20, 0, !dbg !18152
  br i1 %cmp30, label %if.then31, label %if.else, !dbg !18153

if.then31:                                        ; preds = %if.then28
  br label %if.end33, !dbg !18154

if.else:                                          ; preds = %if.then28
  %21 = load i32, i32* %fd, align 4, !dbg !18156, !tbaa !2980
  %call32 = call i32 @close(i32 %21), !dbg !18158
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then31
  br label %if.end34, !dbg !18159

if.end34:                                         ; preds = %if.end33, %land.lhs.true27, %if.end23
  call void @llvm.dbg.declare(metadata i64* %maxarglen, metadata !18160, metadata !DIExpression()), !dbg !18162
  %22 = load i8**, i8*** %argv.addr, align 8, !dbg !18163, !tbaa !2993
  %call35 = call i64 @fts_maxarglen(i8** %22), !dbg !18164
  store i64 %call35, i64* %maxarglen, align 8, !dbg !18162, !tbaa !3837
  %23 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18165, !tbaa !2993
  %24 = load i64, i64* %maxarglen, align 8, !dbg !18167, !tbaa !3837
  %cmp36 = icmp ugt i64 %24, 4096, !dbg !18167
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !18167

cond.true:                                        ; preds = %if.end34
  %25 = load i64, i64* %maxarglen, align 8, !dbg !18167, !tbaa !3837
  br label %cond.end, !dbg !18167

cond.false:                                       ; preds = %if.end34
  br label %cond.end, !dbg !18167

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %25, %cond.true ], [ 4096, %cond.false ], !dbg !18167
  %call37 = call zeroext i1 @fts_palloc(%struct.FTS* %23, i64 %cond), !dbg !18168
  br i1 %call37, label %if.end39, label %if.then38, !dbg !18169

if.then38:                                        ; preds = %cond.end
  br label %mem1, !dbg !18170

if.end39:                                         ; preds = %cond.end
  %26 = load i8**, i8*** %argv.addr, align 8, !dbg !18171, !tbaa !2993
  %27 = load i8*, i8** %26, align 8, !dbg !18173, !tbaa !2993, !ctir !1332
  %cmp40 = icmp ne i8* %27, null, !dbg !18174
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !18175

if.then41:                                        ; preds = %if.end39
  %28 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18176, !tbaa !2993
  %call42 = call %struct._ftsent* @fts_alloc(%struct.FTS* %28, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.432, i64 0, i64 0), i64 0), !dbg !18179
  store %struct._ftsent* %call42, %struct._ftsent** %parent, align 8, !dbg !18180, !tbaa !2993
  %cmp43 = icmp eq %struct._ftsent* %call42, null, !dbg !18181
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !18182

if.then44:                                        ; preds = %if.then41
  br label %mem2, !dbg !18183

if.end45:                                         ; preds = %if.then41
  %29 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18184, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 12, !dbg !18185, !ctir !2315
  store i64 -1, i64* %fts_level, align 8, !dbg !18186, !tbaa !3837, !ctir !539
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18187, !tbaa !2993
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 14, !dbg !18188, !ctir !2315
  store i64 -1, i64* %fts_n_dirs_remaining, align 8, !dbg !18189, !tbaa !3837, !ctir !1376
  br label %if.end46, !dbg !18190

if.end46:                                         ; preds = %if.end45, %if.end39
  %31 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18191, !tbaa !2993
  %cmp47 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %31, null, !dbg !18192
  br i1 %cmp47, label %lor.end, label %lor.rhs, !dbg !18193

lor.rhs:                                          ; preds = %if.end46
  %32 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18194, !tbaa !2993
  %fts_options48 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !18194, !ctir !2332
  %33 = load i32, i32* %fts_options48, align 8, !dbg !18194, !tbaa !17900, !ctir !5
  %and49 = and i32 %33, 1024, !dbg !18194
  %tobool50 = icmp ne i32 %and49, 0, !dbg !18193
  br label %lor.end, !dbg !18193

lor.end:                                          ; preds = %lor.rhs, %if.end46
  %34 = phi i1 [ true, %if.end46 ], [ %tobool50, %lor.rhs ]
  %frombool = zext i1 %34 to i8, !dbg !18195
  store i8 %frombool, i8* %defer_stat, align 1, !dbg !18195, !tbaa !3104
  store %struct._ftsent* null, %struct._ftsent** %root, align 8, !dbg !18196, !tbaa !2993
  store i64 0, i64* %nitems, align 8, !dbg !18198, !tbaa !3837
  br label %for.cond, !dbg !18199

for.cond:                                         ; preds = %for.inc, %lor.end
  %35 = load i8**, i8*** %argv.addr, align 8, !dbg !18200, !tbaa !2993
  %36 = load i8*, i8** %35, align 8, !dbg !18202, !tbaa !2993, !ctir !1332
  %cmp51 = icmp ne i8* %36, null, !dbg !18203
  br i1 %cmp51, label %for.body, label %for.end, !dbg !18204

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18205, metadata !DIExpression()), !dbg !18207
  %37 = load i8**, i8*** %argv.addr, align 8, !dbg !18208, !tbaa !2993
  %38 = load i8*, i8** %37, align 8, !dbg !18209, !tbaa !2993, !ctir !1332
  %call52 = call i64 @strlen(i8* %38) #14, !dbg !18210
  store i64 %call52, i64* %len, align 8, !dbg !18207, !tbaa !3837
  %39 = load i32, i32* %options.addr, align 4, !dbg !18211, !tbaa !2980
  %and53 = and i32 %39, 2048, !dbg !18213
  %tobool54 = icmp ne i32 %and53, 0, !dbg !18213
  br i1 %tobool54, label %if.end69, label %if.then55, !dbg !18214

if.then55:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %v, metadata !18215, metadata !DIExpression()), !dbg !18217
  %40 = load i8**, i8*** %argv.addr, align 8, !dbg !18218, !tbaa !2993
  %41 = load i8*, i8** %40, align 8, !dbg !18219, !tbaa !2993, !ctir !1332
  store i8* %41, i8** %v, align 8, !dbg !18217, !tbaa !2993
  %42 = load i64, i64* %len, align 8, !dbg !18220, !tbaa !3837
  %cmp56 = icmp ult i64 2, %42, !dbg !18222
  br i1 %cmp56, label %land.lhs.true57, label %if.end68, !dbg !18223

land.lhs.true57:                                  ; preds = %if.then55
  %43 = load i8*, i8** %v, align 8, !dbg !18224, !tbaa !2993
  %44 = load i64, i64* %len, align 8, !dbg !18225, !tbaa !3837
  %sub = sub i64 %44, 1, !dbg !18226
  %arrayidx = getelementptr inbounds i8, i8* %43, i64 %sub, !dbg !18224, !ctir !112
  %45 = load i8, i8* %arrayidx, align 1, !dbg !18224, !tbaa !3652
  %conv = sext i8 %45 to i32, !dbg !18224
  %cmp58 = icmp eq i32 %conv, 47, !dbg !18227
  br i1 %cmp58, label %if.then60, label %if.end68, !dbg !18228

if.then60:                                        ; preds = %land.lhs.true57
  br label %while.cond, !dbg !18229

while.cond:                                       ; preds = %while.body, %if.then60
  %46 = load i64, i64* %len, align 8, !dbg !18230, !tbaa !3837
  %cmp61 = icmp ult i64 1, %46, !dbg !18231
  br i1 %cmp61, label %land.rhs, label %land.end, !dbg !18232

land.rhs:                                         ; preds = %while.cond
  %47 = load i8*, i8** %v, align 8, !dbg !18233, !tbaa !2993
  %48 = load i64, i64* %len, align 8, !dbg !18234, !tbaa !3837
  %sub63 = sub i64 %48, 2, !dbg !18235
  %arrayidx64 = getelementptr inbounds i8, i8* %47, i64 %sub63, !dbg !18233, !ctir !112
  %49 = load i8, i8* %arrayidx64, align 1, !dbg !18233, !tbaa !3652
  %conv65 = sext i8 %49 to i32, !dbg !18233
  %cmp66 = icmp eq i32 %conv65, 47, !dbg !18236
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %50 = phi i1 [ false, %while.cond ], [ %cmp66, %land.rhs ], !dbg !18237
  br i1 %50, label %while.body, label %while.end, !dbg !18229

while.body:                                       ; preds = %land.end
  %51 = load i64, i64* %len, align 8, !dbg !18238, !tbaa !3837
  %dec = add i64 %51, -1, !dbg !18238
  store i64 %dec, i64* %len, align 8, !dbg !18238, !tbaa !3837
  br label %while.cond, !dbg !18229, !llvm.loop !18239

while.end:                                        ; preds = %land.end
  br label %if.end68, !dbg !18229

if.end68:                                         ; preds = %while.end, %land.lhs.true57, %if.then55
  br label %if.end69, !dbg !18241

if.end69:                                         ; preds = %if.end68, %for.body
  %52 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18242, !tbaa !2993
  %53 = load i8**, i8*** %argv.addr, align 8, !dbg !18244, !tbaa !2993
  %54 = load i8*, i8** %53, align 8, !dbg !18245, !tbaa !2993, !ctir !1332
  %55 = load i64, i64* %len, align 8, !dbg !18246, !tbaa !3837
  %call70 = call %struct._ftsent* @fts_alloc(%struct.FTS* %52, i8* %54, i64 %55), !dbg !18247
  store %struct._ftsent* %call70, %struct._ftsent** %p, align 8, !dbg !18248, !tbaa !2993
  %cmp71 = icmp eq %struct._ftsent* %call70, null, !dbg !18249
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !18250

if.then73:                                        ; preds = %if.end69
  br label %mem3, !dbg !18251

if.end74:                                         ; preds = %if.end69
  %56 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18252, !tbaa !2993
  %fts_level75 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %56, i32 0, i32 12, !dbg !18253, !ctir !2315
  store i64 0, i64* %fts_level75, align 8, !dbg !18254, !tbaa !3837, !ctir !539
  %57 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18255, !tbaa !2993
  %58 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18256, !tbaa !2993
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %58, i32 0, i32 1, !dbg !18257, !ctir !2315
  store %struct._ftsent* %57, %struct._ftsent** %fts_parent, align 8, !dbg !18258, !tbaa !2993, !ctir !2319
  %59 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18259, !tbaa !2993
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %59, i32 0, i32 19, !dbg !18260, !ctir !2315
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18259
  %60 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18261, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %60, i32 0, i32 6, !dbg !18262, !ctir !2315
  store i8* %arraydecay, i8** %fts_accpath, align 8, !dbg !18263, !tbaa !2993, !ctir !7
  %61 = load i8, i8* %defer_stat, align 1, !dbg !18264, !tbaa !3104
  %tobool76 = trunc i8 %61 to i1, !dbg !18264
  br i1 %tobool76, label %land.lhs.true78, label %if.else82, !dbg !18266

land.lhs.true78:                                  ; preds = %if.end74
  %62 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18267, !tbaa !2993
  %cmp79 = icmp ne %struct._ftsent* %62, null, !dbg !18268
  br i1 %cmp79, label %if.then81, label %if.else82, !dbg !18269

if.then81:                                        ; preds = %land.lhs.true78
  %63 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18270, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %63, i32 0, i32 15, !dbg !18272, !ctir !2315
  store i16 11, i16* %fts_info, align 8, !dbg !18273, !tbaa !3799, !ctir !34
  %64 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18274, !tbaa !2993
  call void @fts_set_stat_required(%struct._ftsent* %64, i1 zeroext true), !dbg !18275
  br label %if.end85, !dbg !18276

if.else82:                                        ; preds = %land.lhs.true78, %if.end74
  %65 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18277, !tbaa !2993
  %66 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18279, !tbaa !2993
  %call83 = call zeroext i16 @fts_stat(%struct.FTS* %65, %struct._ftsent* %66, i1 zeroext false), !dbg !18280
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18281, !tbaa !2993
  %fts_info84 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %67, i32 0, i32 15, !dbg !18282, !ctir !2315
  store i16 %call83, i16* %fts_info84, align 8, !dbg !18283, !tbaa !3799, !ctir !34
  br label %if.end85

if.end85:                                         ; preds = %if.else82, %if.then81
  %68 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18284, !tbaa !2993
  %tobool86 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %68, null, !dbg !18284
  br i1 %tobool86, label %if.then87, label %if.else88, !dbg !18286

if.then87:                                        ; preds = %if.end85
  %69 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18287, !tbaa !2993
  %70 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18289, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %70, i32 0, i32 2, !dbg !18290, !ctir !2315
  store %struct._ftsent* %69, %struct._ftsent** %fts_link, align 8, !dbg !18291, !tbaa !2993, !ctir !2319
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18292, !tbaa !2993
  store %struct._ftsent* %71, %struct._ftsent** %root, align 8, !dbg !18293, !tbaa !2993
  br label %if.end96, !dbg !18294

if.else88:                                        ; preds = %if.end85
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18295, !tbaa !2993
  %fts_link89 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 2, !dbg !18297, !ctir !2315
  store %struct._ftsent* null, %struct._ftsent** %fts_link89, align 8, !dbg !18298, !tbaa !2993, !ctir !2319
  %73 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18299, !tbaa !2993
  %cmp90 = icmp eq %struct._ftsent* %73, null, !dbg !18301
  br i1 %cmp90, label %if.then92, label %if.else93, !dbg !18302

if.then92:                                        ; preds = %if.else88
  %74 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18303, !tbaa !2993
  store %struct._ftsent* %74, %struct._ftsent** %root, align 8, !dbg !18304, !tbaa !2993
  store %struct._ftsent* %74, %struct._ftsent** %tmp, align 8, !dbg !18305, !tbaa !2993
  br label %if.end95, !dbg !18306

if.else93:                                        ; preds = %if.else88
  %75 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18307, !tbaa !2993
  %76 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !18309, !tbaa !2993
  %fts_link94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %76, i32 0, i32 2, !dbg !18310, !ctir !2315
  store %struct._ftsent* %75, %struct._ftsent** %fts_link94, align 8, !dbg !18311, !tbaa !2993, !ctir !2319
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18312, !tbaa !2993
  store %struct._ftsent* %77, %struct._ftsent** %tmp, align 8, !dbg !18313, !tbaa !2993
  br label %if.end95

if.end95:                                         ; preds = %if.else93, %if.then92
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then87
  br label %for.inc, !dbg !18314

for.inc:                                          ; preds = %if.end96
  %78 = load i8**, i8*** %argv.addr, align 8, !dbg !18315, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8*, i8** %78, i32 1, !dbg !18315
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18315, !tbaa !2993
  %79 = load i64, i64* %nitems, align 8, !dbg !18316, !tbaa !3837
  %inc = add i64 %79, 1, !dbg !18316
  store i64 %inc, i64* %nitems, align 8, !dbg !18316, !tbaa !3837
  br label %for.cond, !dbg !18317, !llvm.loop !18318

for.end:                                          ; preds = %for.cond
  %80 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %compar.addr, align 8, !dbg !18320, !tbaa !2993
  %tobool97 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %80, null, !dbg !18320
  br i1 %tobool97, label %land.lhs.true98, label %if.end103, !dbg !18322

land.lhs.true98:                                  ; preds = %for.end
  %81 = load i64, i64* %nitems, align 8, !dbg !18323, !tbaa !3837
  %cmp99 = icmp ugt i64 %81, 1, !dbg !18324
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !18325

if.then101:                                       ; preds = %land.lhs.true98
  %82 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18326, !tbaa !2993
  %83 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18327, !tbaa !2993
  %84 = load i64, i64* %nitems, align 8, !dbg !18328, !tbaa !3837
  %call102 = call %struct._ftsent* @fts_sort(%struct.FTS* %82, %struct._ftsent* %83, i64 %84), !dbg !18329
  store %struct._ftsent* %call102, %struct._ftsent** %root, align 8, !dbg !18330, !tbaa !2993
  br label %if.end103, !dbg !18331

if.end103:                                        ; preds = %if.then101, %land.lhs.true98, %for.end
  %85 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18332, !tbaa !2993
  %call104 = call %struct._ftsent* @fts_alloc(%struct.FTS* %85, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1.432, i64 0, i64 0), i64 0), !dbg !18334
  %86 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18335, !tbaa !2993
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 0, !dbg !18336, !ctir !2332
  store %struct._ftsent* %call104, %struct._ftsent** %fts_cur, align 8, !dbg !18337, !tbaa !18338, !ctir !2319
  %cmp105 = icmp eq %struct._ftsent* %call104, null, !dbg !18339
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !18340

if.then107:                                       ; preds = %if.end103
  br label %mem3, !dbg !18341

if.end108:                                        ; preds = %if.end103
  %87 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18342, !tbaa !2993
  %88 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18343, !tbaa !2993
  %fts_cur109 = getelementptr inbounds %struct.FTS, %struct.FTS* %88, i32 0, i32 0, !dbg !18344, !ctir !2332
  %89 = load %struct._ftsent*, %struct._ftsent** %fts_cur109, align 8, !dbg !18344, !tbaa !18338, !ctir !2319
  %fts_link110 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 2, !dbg !18345, !ctir !2316
  store %struct._ftsent* %87, %struct._ftsent** %fts_link110, align 8, !dbg !18346, !tbaa !2993, !ctir !2319
  %90 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18347, !tbaa !2993
  %fts_cur111 = getelementptr inbounds %struct.FTS, %struct.FTS* %90, i32 0, i32 0, !dbg !18348, !ctir !2332
  %91 = load %struct._ftsent*, %struct._ftsent** %fts_cur111, align 8, !dbg !18348, !tbaa !18338, !ctir !2319
  %fts_info112 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !18349, !ctir !2316
  store i16 9, i16* %fts_info112, align 8, !dbg !18350, !tbaa !3799, !ctir !34
  %92 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18351, !tbaa !2993
  %fts_cur113 = getelementptr inbounds %struct.FTS, %struct.FTS* %92, i32 0, i32 0, !dbg !18352, !ctir !2332
  %93 = load %struct._ftsent*, %struct._ftsent** %fts_cur113, align 8, !dbg !18352, !tbaa !18338, !ctir !2319
  %fts_level114 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 12, !dbg !18353, !ctir !2316
  store i64 1, i64* %fts_level114, align 8, !dbg !18354, !tbaa !3837, !ctir !539
  %94 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18355, !tbaa !2993
  %call115 = call zeroext i1 @setup_dir(%struct.FTS* %94), !dbg !18357
  br i1 %call115, label %if.end117, label %if.then116, !dbg !18358

if.then116:                                       ; preds = %if.end108
  br label %mem3, !dbg !18359

if.end117:                                        ; preds = %if.end108
  %95 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18360, !tbaa !2993
  %fts_options118 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 10, !dbg !18360, !ctir !2332
  %96 = load i32, i32* %fts_options118, align 8, !dbg !18360, !tbaa !17900, !ctir !5
  %and119 = and i32 %96, 4, !dbg !18360
  %tobool120 = icmp ne i32 %and119, 0, !dbg !18360
  br i1 %tobool120, label %if.end132, label %land.lhs.true121, !dbg !18362

land.lhs.true121:                                 ; preds = %if.end117
  %97 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18363, !tbaa !2993
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 10, !dbg !18363, !ctir !2332
  %98 = load i32, i32* %fts_options122, align 8, !dbg !18363, !tbaa !17900, !ctir !5
  %and123 = and i32 %98, 512, !dbg !18363
  %tobool124 = icmp ne i32 %and123, 0, !dbg !18363
  br i1 %tobool124, label %if.end132, label %land.lhs.true125, !dbg !18364

land.lhs.true125:                                 ; preds = %land.lhs.true121
  %99 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18365, !tbaa !2993
  %call126 = call i32 @diropen(%struct.FTS* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !18366
  %100 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18367, !tbaa !2993
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 5, !dbg !18368, !ctir !2332
  store i32 %call126, i32* %fts_rfd, align 8, !dbg !18369, !tbaa !18370, !ctir !5
  %cmp127 = icmp slt i32 %call126, 0, !dbg !18371
  br i1 %cmp127, label %if.then129, label %if.end132, !dbg !18372

if.then129:                                       ; preds = %land.lhs.true125
  %101 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18373, !tbaa !2993
  %fts_options130 = getelementptr inbounds %struct.FTS, %struct.FTS* %101, i32 0, i32 10, !dbg !18373, !ctir !2332
  %102 = load i32, i32* %fts_options130, align 8, !dbg !18373, !tbaa !17900, !ctir !5
  %or131 = or i32 %102, 4, !dbg !18373
  store i32 %or131, i32* %fts_options130, align 8, !dbg !18373, !tbaa !17900, !ctir !5
  br label %if.end132, !dbg !18373

if.end132:                                        ; preds = %if.then129, %land.lhs.true125, %land.lhs.true121, %if.end117
  %103 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18374, !tbaa !2993
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %103, i32 0, i32 13, !dbg !18375, !ctir !2332
  call void @i_ring_init(%struct.I_ring* %fts_fd_ring, i32 -1), !dbg !18376
  %104 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18377, !tbaa !2993
  store %struct.FTS* %104, %struct.FTS** %retval, align 8, !dbg !18378
  br label %return, !dbg !18378

mem3:                                             ; preds = %if.then116, %if.then107, %if.then73
  call void @llvm.dbg.label(metadata !18379), !dbg !18380
  %105 = load %struct._ftsent*, %struct._ftsent** %root, align 8, !dbg !18381, !tbaa !2993
  call void @fts_lfree(%struct._ftsent* %105), !dbg !18382
  %106 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !18383, !tbaa !2993
  %107 = bitcast %struct._ftsent* %106 to i8*, !dbg !18383
  call void @free(i8* %107) #12, !dbg !18384
  br label %mem2, !dbg !18384

mem2:                                             ; preds = %mem3, %if.then44
  call void @llvm.dbg.label(metadata !18385), !dbg !18386
  %108 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18387, !tbaa !2993
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !18388, !ctir !2332
  %109 = load i8*, i8** %fts_path, align 8, !dbg !18388, !tbaa !18389, !ctir !7
  call void @free(i8* %109) #12, !dbg !18390
  br label %mem1, !dbg !18390

mem1:                                             ; preds = %mem2, %if.then38
  call void @llvm.dbg.label(metadata !18391), !dbg !18392
  %110 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !18393, !tbaa !2993
  %111 = bitcast %struct.FTS* %110 to i8*, !dbg !18393
  call void @free(i8* %111) #12, !dbg !18394
  store %struct.FTS* null, %struct.FTS** %retval, align 8, !dbg !18395
  br label %return, !dbg !18395

return:                                           ; preds = %mem1, %if.end132, %if.then14, %if.then10, %if.then5, %if.then
  %112 = load %struct.FTS*, %struct.FTS** %retval, align 8, !dbg !18396
  ret %struct.FTS* %112, !dbg !18396
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @fts_maxarglen(i8** %argv) #4 !dbg !18397 !ctir !2492 {
entry:
  %argv.addr = alloca i8**, align 8, !ctir !1331
  %len = alloca i64, align 8, !ctir !52
  %max = alloca i64, align 8, !ctir !52
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !18398, metadata !DIExpression()), !dbg !18399
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18400, metadata !DIExpression()), !dbg !18401
  call void @llvm.dbg.declare(metadata i64* %max, metadata !18402, metadata !DIExpression()), !dbg !18403
  store i64 0, i64* %max, align 8, !dbg !18404, !tbaa !3837
  br label %for.cond, !dbg !18406

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !18407, !tbaa !2993
  %1 = load i8*, i8** %0, align 8, !dbg !18409, !tbaa !2993, !ctir !1332
  %tobool = icmp ne i8* %1, null, !dbg !18410
  br i1 %tobool, label %for.body, label %for.end, !dbg !18410

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %argv.addr, align 8, !dbg !18411, !tbaa !2993
  %3 = load i8*, i8** %2, align 8, !dbg !18413, !tbaa !2993, !ctir !1332
  %call = call i64 @strlen(i8* %3) #14, !dbg !18414
  store i64 %call, i64* %len, align 8, !dbg !18415, !tbaa !3837
  %4 = load i64, i64* %max, align 8, !dbg !18416, !tbaa !3837
  %cmp = icmp ugt i64 %call, %4, !dbg !18417
  br i1 %cmp, label %if.then, label %if.end, !dbg !18418

if.then:                                          ; preds = %for.body
  %5 = load i64, i64* %len, align 8, !dbg !18419, !tbaa !3837
  store i64 %5, i64* %max, align 8, !dbg !18420, !tbaa !3837
  br label %if.end, !dbg !18421

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18416

for.inc:                                          ; preds = %if.end
  %6 = load i8**, i8*** %argv.addr, align 8, !dbg !18422, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8*, i8** %6, i32 1, !dbg !18422
  store i8** %incdec.ptr, i8*** %argv.addr, align 8, !dbg !18422, !tbaa !2993
  br label %for.cond, !dbg !18423, !llvm.loop !18424

for.end:                                          ; preds = %for.cond
  %7 = load i64, i64* %max, align 8, !dbg !18426, !tbaa !3837
  %add = add i64 %7, 1, !dbg !18427
  ret i64 %add, !dbg !18428
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @fts_palloc(%struct.FTS* %sp, i64 %more) #4 !dbg !18429 !ctir !2490 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %more.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !7
  %new_len = alloca i64, align 8, !ctir !52
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18430, metadata !DIExpression()), !dbg !18431
  store i64 %more, i64* %more.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %more.addr, metadata !18432, metadata !DIExpression()), !dbg !18433
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18434, metadata !DIExpression()), !dbg !18435
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !18436, metadata !DIExpression()), !dbg !18437
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18438, !tbaa !2993
  %fts_pathlen = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 7, !dbg !18439, !ctir !2332
  %1 = load i64, i64* %fts_pathlen, align 8, !dbg !18439, !tbaa !18440, !ctir !52
  %2 = load i64, i64* %more.addr, align 8, !dbg !18441, !tbaa !3837
  %add = add i64 %1, %2, !dbg !18442
  %add1 = add i64 %add, 256, !dbg !18443
  store i64 %add1, i64* %new_len, align 8, !dbg !18437, !tbaa !3837
  %3 = load i64, i64* %new_len, align 8, !dbg !18444, !tbaa !3837
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18446, !tbaa !2993
  %fts_pathlen2 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 7, !dbg !18447, !ctir !2332
  %5 = load i64, i64* %fts_pathlen2, align 8, !dbg !18447, !tbaa !18440, !ctir !52
  %cmp = icmp ult i64 %3, %5, !dbg !18448
  br i1 %cmp, label %if.then, label %if.end, !dbg !18449

if.then:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18450, !tbaa !2993
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 4, !dbg !18452, !ctir !2332
  %7 = load i8*, i8** %fts_path, align 8, !dbg !18452, !tbaa !18389, !ctir !7
  call void @free(i8* %7) #12, !dbg !18453
  %8 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18454, !tbaa !2993
  %fts_path3 = getelementptr inbounds %struct.FTS, %struct.FTS* %8, i32 0, i32 4, !dbg !18455, !ctir !2332
  store i8* null, i8** %fts_path3, align 8, !dbg !18456, !tbaa !18389, !ctir !7
  %call = call i32* @__errno_location() #15, !dbg !18457
  store i32 36, i32* %call, align 4, !dbg !18457, !tbaa !2980, !ctir !5
  store i1 false, i1* %retval, align 1, !dbg !18458
  br label %return, !dbg !18458

if.end:                                           ; preds = %entry
  %9 = load i64, i64* %new_len, align 8, !dbg !18459, !tbaa !3837
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18460, !tbaa !2993
  %fts_pathlen4 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 7, !dbg !18461, !ctir !2332
  store i64 %9, i64* %fts_pathlen4, align 8, !dbg !18462, !tbaa !18440, !ctir !52
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18463, !tbaa !2993
  %fts_path5 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 4, !dbg !18464, !ctir !2332
  %12 = load i8*, i8** %fts_path5, align 8, !dbg !18464, !tbaa !18389, !ctir !7
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18465, !tbaa !2993
  %fts_pathlen6 = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 7, !dbg !18466, !ctir !2332
  %14 = load i64, i64* %fts_pathlen6, align 8, !dbg !18466, !tbaa !18440, !ctir !52
  %call7 = call i8* @realloc(i8* %12, i64 %14) #12, !dbg !18467
  store i8* %call7, i8** %p, align 8, !dbg !18468, !tbaa !2993
  %15 = load i8*, i8** %p, align 8, !dbg !18469, !tbaa !2993
  %cmp8 = icmp eq i8* %15, null, !dbg !18471
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !18472

if.then9:                                         ; preds = %if.end
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18473, !tbaa !2993
  %fts_path10 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 4, !dbg !18475, !ctir !2332
  %17 = load i8*, i8** %fts_path10, align 8, !dbg !18475, !tbaa !18389, !ctir !7
  call void @free(i8* %17) #12, !dbg !18476
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18477, !tbaa !2993
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !18478, !ctir !2332
  store i8* null, i8** %fts_path11, align 8, !dbg !18479, !tbaa !18389, !ctir !7
  store i1 false, i1* %retval, align 1, !dbg !18480
  br label %return, !dbg !18480

if.end12:                                         ; preds = %if.end
  %19 = load i8*, i8** %p, align 8, !dbg !18481, !tbaa !2993
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18482, !tbaa !2993
  %fts_path13 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 4, !dbg !18483, !ctir !2332
  store i8* %19, i8** %fts_path13, align 8, !dbg !18484, !tbaa !18389, !ctir !7
  store i1 true, i1* %retval, align 1, !dbg !18485
  br label %return, !dbg !18485

return:                                           ; preds = %if.end12, %if.then9, %if.then
  %21 = load i1, i1* %retval, align 1, !dbg !18486
  ret i1 %21, !dbg !18486
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_alloc(%struct.FTS* %sp, i8* %name, i64 %namelen) #4 !dbg !18487 !ctir !2486 {
entry:
  %retval = alloca %struct._ftsent*, align 8, !ctir !2414
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %name.addr = alloca i8*, align 8, !ctir !112
  %namelen.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %len = alloca i64, align 8, !ctir !52
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18488, metadata !DIExpression()), !dbg !18489
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !18490, metadata !DIExpression()), !dbg !18491
  store i64 %namelen, i64* %namelen.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %namelen.addr, metadata !18492, metadata !DIExpression()), !dbg !18493
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18494, metadata !DIExpression()), !dbg !18495
  call void @llvm.dbg.declare(metadata i64* %len, metadata !18496, metadata !DIExpression()), !dbg !18497
  %0 = load i64, i64* %namelen.addr, align 8, !dbg !18498, !tbaa !3837
  %add = add i64 %0, 1, !dbg !18498
  %add1 = add i64 271, %add, !dbg !18498
  %and = and i64 %add1, -8, !dbg !18498
  store i64 %and, i64* %len, align 8, !dbg !18499, !tbaa !3837
  %1 = load i64, i64* %len, align 8, !dbg !18500, !tbaa !3837
  %call = call noalias i8* @malloc(i64 %1) #12, !dbg !18502
  %2 = bitcast i8* %call to %struct._ftsent*, !dbg !18502
  store %struct._ftsent* %2, %struct._ftsent** %p, align 8, !dbg !18503, !tbaa !2993
  %cmp = icmp eq %struct._ftsent* %2, null, !dbg !18504
  br i1 %cmp, label %if.then, label %if.end, !dbg !18505

if.then:                                          ; preds = %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !18506
  br label %return, !dbg !18506

if.end:                                           ; preds = %entry
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18507, !tbaa !2993
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 19, !dbg !18508, !ctir !2315
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18509
  %4 = load i8*, i8** %name.addr, align 8, !dbg !18510, !tbaa !2993
  %5 = load i64, i64* %namelen.addr, align 8, !dbg !18511, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %4, i64 %5, i1 false), !dbg !18509
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18512, !tbaa !2993
  %fts_name2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 19, !dbg !18513, !ctir !2315
  %7 = load i64, i64* %namelen.addr, align 8, !dbg !18514, !tbaa !3837
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name2, i64 0, i64 %7, !dbg !18512, !ctir !1404
  store i8 0, i8* %arrayidx, align 1, !dbg !18515, !tbaa !3652
  %8 = load i64, i64* %namelen.addr, align 8, !dbg !18516, !tbaa !3837
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18517, !tbaa !2993
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 13, !dbg !18518, !ctir !2315
  store i64 %8, i64* %fts_namelen, align 8, !dbg !18519, !tbaa !3837, !ctir !52
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18520, !tbaa !2993
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18521, !tbaa !2993
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 11, !dbg !18522, !ctir !2315
  store %struct.FTS* %10, %struct.FTS** %fts_fts, align 8, !dbg !18523, !tbaa !2993, !ctir !2331
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18524, !tbaa !2993
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 4, !dbg !18525, !ctir !2332
  %13 = load i8*, i8** %fts_path, align 8, !dbg !18525, !tbaa !18389, !ctir !7
  %14 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18526, !tbaa !2993
  %fts_path3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %14, i32 0, i32 7, !dbg !18527, !ctir !2315
  store i8* %13, i8** %fts_path3, align 8, !dbg !18528, !tbaa !2993, !ctir !7
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18529, !tbaa !2993
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !18530, !ctir !2315
  store i32 0, i32* %fts_errno, align 8, !dbg !18531, !tbaa !2980, !ctir !5
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18532, !tbaa !2993
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 3, !dbg !18533, !ctir !2315
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp, align 8, !dbg !18534, !tbaa !2993, !ctir !580
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18535, !tbaa !2993
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 16, !dbg !18536, !ctir !2315
  store i16 0, i16* %fts_flags, align 2, !dbg !18537, !tbaa !3799, !ctir !34
  %18 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18538, !tbaa !2993
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %18, i32 0, i32 17, !dbg !18539, !ctir !2315
  store i16 3, i16* %fts_instr, align 4, !dbg !18540, !tbaa !3799, !ctir !34
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18541, !tbaa !2993
  %fts_number = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 4, !dbg !18542, !ctir !2315
  store i64 0, i64* %fts_number, align 8, !dbg !18543, !tbaa !3837, !ctir !32
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18544, !tbaa !2993
  %fts_pointer = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 5, !dbg !18545, !ctir !2315
  store i8* null, i8** %fts_pointer, align 8, !dbg !18546, !tbaa !2993, !ctir !47
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18547, !tbaa !2993
  store %struct._ftsent* %21, %struct._ftsent** %retval, align 8, !dbg !18548
  br label %return, !dbg !18548

return:                                           ; preds = %if.end, %if.then
  %22 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18549
  ret %struct._ftsent* %22, !dbg !18549
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_set_stat_required(%struct._ftsent* %p, i1 zeroext %required) #4 !dbg !18550 !ctir !2423 {
entry:
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %required.addr = alloca i8, align 1, !ctir !117
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18551, metadata !DIExpression()), !dbg !18552
  %frombool = zext i1 %required to i8
  store i8 %frombool, i8* %required.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %required.addr, metadata !18553, metadata !DIExpression()), !dbg !18554
  br label %do.body, !dbg !18555

do.body:                                          ; preds = %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18556, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 15, !dbg !18556, !ctir !2315
  %1 = load i16, i16* %fts_info, align 8, !dbg !18556, !tbaa !3799, !ctir !34
  %conv = zext i16 %1 to i32, !dbg !18556
  %cmp = icmp eq i32 %conv, 11, !dbg !18556
  br i1 %cmp, label %if.end, label %if.then, !dbg !18559

if.then:                                          ; preds = %do.body
  call void @abort() #13, !dbg !18556
  unreachable, !dbg !18556

if.end:                                           ; preds = %do.body
  br label %do.end, !dbg !18559

do.end:                                           ; preds = %if.end
  %2 = load i8, i8* %required.addr, align 1, !dbg !18560, !tbaa !3104
  %tobool = trunc i8 %2 to i1, !dbg !18560
  %3 = zext i1 %tobool to i64, !dbg !18560
  %cond = select i1 %tobool, i32 2, i32 1, !dbg !18560
  %conv3 = sext i32 %cond to i64, !dbg !18561
  %4 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18562, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !18563, !ctir !2315
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18564
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 8, !dbg !18564, !ctir !2387
  store i64 %conv3, i64* %st_size, align 8, !dbg !18565, !tbaa !4505, !ctir !30
  ret void, !dbg !18566
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i16 @fts_stat(%struct.FTS* %sp, %struct._ftsent* %p, i1 zeroext %follow) #4 !dbg !18567 !ctir !2481 {
entry:
  %retval = alloca i16, align 2, !ctir !34
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %follow.addr = alloca i8, align 1, !ctir !117
  %sbp = alloca %struct.stat*, align 8, !ctir !2478
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18568, metadata !DIExpression()), !dbg !18569
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !18570, metadata !DIExpression()), !dbg !18571
  %frombool = zext i1 %follow to i8
  store i8 %frombool, i8* %follow.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %follow.addr, metadata !18572, metadata !DIExpression()), !dbg !18573
  call void @llvm.dbg.declare(metadata %struct.stat** %sbp, metadata !18574, metadata !DIExpression()), !dbg !18575
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18576, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !18577, !ctir !2315
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !18576
  store %struct.stat* %arraydecay, %struct.stat** %sbp, align 8, !dbg !18575, !tbaa !2993
  %1 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18578, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 12, !dbg !18580, !ctir !2315
  %2 = load i64, i64* %fts_level, align 8, !dbg !18580, !tbaa !3837, !ctir !539
  %cmp = icmp eq i64 %2, 0, !dbg !18581
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18582

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18583, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18583, !ctir !2332
  %4 = load i32, i32* %fts_options, align 8, !dbg !18583, !tbaa !17900, !ctir !5
  %and = and i32 %4, 1, !dbg !18583
  %tobool = icmp ne i32 %and, 0, !dbg !18583
  br i1 %tobool, label %if.then, label %if.end, !dbg !18584

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %follow.addr, align 1, !dbg !18585, !tbaa !3104
  br label %if.end, !dbg !18586

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18587, !tbaa !2993
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !18587, !ctir !2332
  %6 = load i32, i32* %fts_options1, align 8, !dbg !18587, !tbaa !17900, !ctir !5
  %and2 = and i32 %6, 2, !dbg !18587
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18587
  br i1 %tobool3, label %if.then5, label %lor.lhs.false, !dbg !18589

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i8, i8* %follow.addr, align 1, !dbg !18590, !tbaa !3104
  %tobool4 = trunc i8 %7 to i1, !dbg !18590
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !18591

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  %8 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18592, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 6, !dbg !18595, !ctir !2315
  %9 = load i8*, i8** %fts_accpath, align 8, !dbg !18595, !tbaa !2993, !ctir !7
  %10 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18596, !tbaa !2993
  %call = call i32 @stat(i8* %9, %struct.stat* %10) #12, !dbg !18597
  %tobool6 = icmp ne i32 %call, 0, !dbg !18597
  br i1 %tobool6, label %if.then7, label %if.end18, !dbg !18598

if.then7:                                         ; preds = %if.then5
  %call8 = call i32* @__errno_location() #15, !dbg !18599
  %11 = load i32, i32* %call8, align 4, !dbg !18599, !tbaa !2980, !ctir !5
  %cmp9 = icmp eq i32 %11, 2, !dbg !18602
  br i1 %cmp9, label %land.lhs.true10, label %if.end16, !dbg !18603

land.lhs.true10:                                  ; preds = %if.then7
  %12 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18604, !tbaa !2993
  %fts_accpath11 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 6, !dbg !18605, !ctir !2315
  %13 = load i8*, i8** %fts_accpath11, align 8, !dbg !18605, !tbaa !2993, !ctir !7
  %14 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18606, !tbaa !2993
  %call12 = call i32 @lstat(i8* %13, %struct.stat* %14) #12, !dbg !18607
  %cmp13 = icmp eq i32 %call12, 0, !dbg !18608
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !18609

if.then14:                                        ; preds = %land.lhs.true10
  %call15 = call i32* @__errno_location() #15, !dbg !18610
  store i32 0, i32* %call15, align 4, !dbg !18610, !tbaa !2980, !ctir !5
  store i16 13, i16* %retval, align 2, !dbg !18612
  br label %return, !dbg !18612

if.end16:                                         ; preds = %land.lhs.true10, %if.then7
  %call17 = call i32* @__errno_location() #15, !dbg !18613
  %15 = load i32, i32* %call17, align 4, !dbg !18613, !tbaa !2980, !ctir !5
  %16 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18614, !tbaa !2993
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 8, !dbg !18615, !ctir !2315
  store i32 %15, i32* %fts_errno, align 8, !dbg !18616, !tbaa !2980, !ctir !5
  br label %err, !dbg !18617

if.end18:                                         ; preds = %if.then5
  br label %if.end26, !dbg !18618

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18619, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 6, !dbg !18621, !ctir !2332
  %18 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18621, !tbaa !3812, !ctir !5
  %19 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18622, !tbaa !2993
  %fts_accpath19 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 6, !dbg !18623, !ctir !2315
  %20 = load i8*, i8** %fts_accpath19, align 8, !dbg !18623, !tbaa !2993, !ctir !7
  %21 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18624, !tbaa !2993
  %call20 = call i32 @fstatat(i32 %18, i8* %20, %struct.stat* %21, i32 256) #12, !dbg !18625
  %tobool21 = icmp ne i32 %call20, 0, !dbg !18625
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !18626

if.then22:                                        ; preds = %if.else
  %call23 = call i32* @__errno_location() #15, !dbg !18627
  %22 = load i32, i32* %call23, align 4, !dbg !18627, !tbaa !2980, !ctir !5
  %23 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18629, !tbaa !2993
  %fts_errno24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 8, !dbg !18630, !ctir !2315
  store i32 %22, i32* %fts_errno24, align 8, !dbg !18631, !tbaa !2980, !ctir !5
  br label %err, !dbg !18629

err:                                              ; preds = %if.then22, %if.end16
  call void @llvm.dbg.label(metadata !18632), !dbg !18633
  %24 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18634, !tbaa !2993
  %25 = bitcast %struct.stat* %24 to i8*, !dbg !18635
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 144, i1 false), !dbg !18635
  store i16 10, i16* %retval, align 2, !dbg !18636
  br label %return, !dbg !18636

if.end25:                                         ; preds = %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.end18
  %26 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18637, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 3, !dbg !18637, !ctir !2387
  %27 = load i32, i32* %st_mode, align 8, !dbg !18637, !tbaa !3176, !ctir !130
  %and27 = and i32 %27, 61440, !dbg !18637
  %cmp28 = icmp eq i32 %and27, 16384, !dbg !18637
  br i1 %cmp28, label %if.then29, label %if.end63, !dbg !18639

if.then29:                                        ; preds = %if.end26
  %28 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18640, !tbaa !2993
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 2, !dbg !18642, !ctir !2387
  %29 = load i64, i64* %st_nlink, align 8, !dbg !18642, !tbaa !5395, !ctir !320
  %cmp30 = icmp ult i64 %29, 2, !dbg !18643
  br i1 %cmp30, label %cond.true, label %lor.lhs.false31, !dbg !18644

lor.lhs.false31:                                  ; preds = %if.then29
  %30 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18645, !tbaa !2993
  %fts_level32 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 12, !dbg !18646, !ctir !2315
  %31 = load i64, i64* %fts_level32, align 8, !dbg !18646, !tbaa !3837, !ctir !539
  %cmp33 = icmp sle i64 %31, 0, !dbg !18647
  br i1 %cmp33, label %cond.true, label %cond.false, !dbg !18648

cond.true:                                        ; preds = %lor.lhs.false31, %if.then29
  br label %cond.end, !dbg !18648

cond.false:                                       ; preds = %lor.lhs.false31
  %32 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18649, !tbaa !2993
  %st_nlink34 = getelementptr inbounds %struct.stat, %struct.stat* %32, i32 0, i32 2, !dbg !18650, !ctir !2387
  %33 = load i64, i64* %st_nlink34, align 8, !dbg !18650, !tbaa !5395, !ctir !320
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18651, !tbaa !2993
  %fts_options35 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !18651, !ctir !2332
  %35 = load i32, i32* %fts_options35, align 8, !dbg !18651, !tbaa !17900, !ctir !5
  %and36 = and i32 %35, 32, !dbg !18651
  %tobool37 = icmp ne i32 %and36, 0, !dbg !18651
  %36 = zext i1 %tobool37 to i64, !dbg !18651
  %cond = select i1 %tobool37, i32 0, i32 2, !dbg !18651
  %conv = sext i32 %cond to i64, !dbg !18652
  %sub = sub i64 %33, %conv, !dbg !18653
  br label %cond.end, !dbg !18648

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond38 = phi i64 [ -1, %cond.true ], [ %sub, %cond.false ], !dbg !18648
  %37 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18654, !tbaa !2993
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 14, !dbg !18655, !ctir !2315
  store i64 %cond38, i64* %fts_n_dirs_remaining, align 8, !dbg !18656, !tbaa !3837, !ctir !1376
  %38 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18657, !tbaa !2993
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 19, !dbg !18657, !ctir !2315
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !18657, !ctir !1404
  %39 = load i8, i8* %arrayidx, align 8, !dbg !18657, !tbaa !3652
  %conv39 = sext i8 %39 to i32, !dbg !18657
  %cmp40 = icmp eq i32 %conv39, 46, !dbg !18657
  br i1 %cmp40, label %land.lhs.true42, label %if.end62, !dbg !18657

land.lhs.true42:                                  ; preds = %cond.end
  %40 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18657, !tbaa !2993
  %fts_name43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %40, i32 0, i32 19, !dbg !18657, !ctir !2315
  %arrayidx44 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name43, i64 0, i64 1, !dbg !18657, !ctir !1404
  %41 = load i8, i8* %arrayidx44, align 1, !dbg !18657, !tbaa !3652
  %tobool45 = icmp ne i8 %41, 0, !dbg !18657
  br i1 %tobool45, label %lor.lhs.false46, label %if.then56, !dbg !18657

lor.lhs.false46:                                  ; preds = %land.lhs.true42
  %42 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18657, !tbaa !2993
  %fts_name47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 19, !dbg !18657, !ctir !2315
  %arrayidx48 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name47, i64 0, i64 1, !dbg !18657, !ctir !1404
  %43 = load i8, i8* %arrayidx48, align 1, !dbg !18657, !tbaa !3652
  %conv49 = sext i8 %43 to i32, !dbg !18657
  %cmp50 = icmp eq i32 %conv49, 46, !dbg !18657
  br i1 %cmp50, label %land.lhs.true52, label %if.end62, !dbg !18657

land.lhs.true52:                                  ; preds = %lor.lhs.false46
  %44 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18657, !tbaa !2993
  %fts_name53 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 19, !dbg !18657, !ctir !2315
  %arrayidx54 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name53, i64 0, i64 2, !dbg !18657, !ctir !1404
  %45 = load i8, i8* %arrayidx54, align 2, !dbg !18657, !tbaa !3652
  %tobool55 = icmp ne i8 %45, 0, !dbg !18657
  br i1 %tobool55, label %if.end62, label %if.then56, !dbg !18659

if.then56:                                        ; preds = %land.lhs.true52, %land.lhs.true42
  %46 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !18660, !tbaa !2993
  %fts_level57 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %46, i32 0, i32 12, !dbg !18662, !ctir !2315
  %47 = load i64, i64* %fts_level57, align 8, !dbg !18662, !tbaa !3837, !ctir !539
  %cmp58 = icmp eq i64 %47, 0, !dbg !18663
  %48 = zext i1 %cmp58 to i64, !dbg !18660
  %cond60 = select i1 %cmp58, i32 1, i32 5, !dbg !18660
  %conv61 = trunc i32 %cond60 to i16, !dbg !18664
  store i16 %conv61, i16* %retval, align 2, !dbg !18665
  br label %return, !dbg !18665

if.end62:                                         ; preds = %land.lhs.true52, %lor.lhs.false46, %cond.end
  store i16 1, i16* %retval, align 2, !dbg !18666
  br label %return, !dbg !18666

if.end63:                                         ; preds = %if.end26
  %49 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18667, !tbaa !2993
  %st_mode64 = getelementptr inbounds %struct.stat, %struct.stat* %49, i32 0, i32 3, !dbg !18667, !ctir !2387
  %50 = load i32, i32* %st_mode64, align 8, !dbg !18667, !tbaa !3176, !ctir !130
  %and65 = and i32 %50, 61440, !dbg !18667
  %cmp66 = icmp eq i32 %and65, 40960, !dbg !18667
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !18669

if.then68:                                        ; preds = %if.end63
  store i16 12, i16* %retval, align 2, !dbg !18670
  br label %return, !dbg !18670

if.end69:                                         ; preds = %if.end63
  %51 = load %struct.stat*, %struct.stat** %sbp, align 8, !dbg !18671, !tbaa !2993
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %51, i32 0, i32 3, !dbg !18671, !ctir !2387
  %52 = load i32, i32* %st_mode70, align 8, !dbg !18671, !tbaa !3176, !ctir !130
  %and71 = and i32 %52, 61440, !dbg !18671
  %cmp72 = icmp eq i32 %and71, 32768, !dbg !18671
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !18673

if.then74:                                        ; preds = %if.end69
  store i16 8, i16* %retval, align 2, !dbg !18674
  br label %return, !dbg !18674

if.end75:                                         ; preds = %if.end69
  store i16 3, i16* %retval, align 2, !dbg !18675
  br label %return, !dbg !18675

return:                                           ; preds = %if.end75, %if.then74, %if.then68, %if.end62, %if.then56, %err, %if.then14
  %53 = load i16, i16* %retval, align 2, !dbg !18676
  ret i16 %53, !dbg !18676
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_sort(%struct.FTS* %sp, %struct._ftsent* %head, i64 %nitems) #4 !dbg !18677 !ctir !2483 {
entry:
  %retval = alloca %struct._ftsent*, align 8, !ctir !2414
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %head.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %nitems.addr = alloca i64, align 8, !ctir !52
  %ap = alloca %struct._ftsent**, align 8, !ctir !2485
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %dummy = alloca %struct._ftsent*, align 8, !ctir !2414
  %compare = alloca i32 (i8*, i8*)*, align 8, !ctir !1077
  %a = alloca %struct._ftsent**, align 8, !ctir !2485
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18678, metadata !DIExpression()), !dbg !18679
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !18680, metadata !DIExpression()), !dbg !18681
  store i64 %nitems, i64* %nitems.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %nitems.addr, metadata !18682, metadata !DIExpression()), !dbg !18683
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %ap, metadata !18684, metadata !DIExpression()), !dbg !18685
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18686, metadata !DIExpression()), !dbg !18687
  call void @llvm.dbg.declare(metadata %struct._ftsent** %dummy, metadata !18688, metadata !DIExpression()), !dbg !18689
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %compare, metadata !18690, metadata !DIExpression()), !dbg !18691
  %0 = ptrtoint %struct._ftsent** %dummy to i64, !dbg !18692
  %1 = bitcast %struct._ftsent** %dummy to i8*, !dbg !18693
  %2 = ptrtoint i8* %1 to i64, !dbg !18694
  %cmp = icmp eq i64 %0, %2, !dbg !18695
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !18696

cond.true:                                        ; preds = %entry
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18697, !tbaa !2993
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 9, !dbg !18698, !ctir !2332
  %4 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18698, !tbaa !18127, !ctir !2346
  %5 = bitcast i32 (%struct._ftsent**, %struct._ftsent**)* %4 to i32 (i8*, i8*)*, !dbg !18699
  br label %cond.end, !dbg !18696

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18696

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 (i8*, i8*)* [ %5, %cond.true ], [ @fts_compar, %cond.false ], !dbg !18696
  store i32 (i8*, i8*)* %cond, i32 (i8*, i8*)** %compare, align 8, !dbg !18691, !tbaa !2993
  %6 = load i64, i64* %nitems.addr, align 8, !dbg !18700, !tbaa !3837
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18702, !tbaa !2993
  %fts_nitems = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 8, !dbg !18703, !ctir !2332
  %8 = load i64, i64* %fts_nitems, align 8, !dbg !18703, !tbaa !18704, !ctir !52
  %cmp1 = icmp ugt i64 %6, %8, !dbg !18705
  br i1 %cmp1, label %if.then, label %if.end11, !dbg !18706

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a, metadata !18707, metadata !DIExpression()), !dbg !18709
  %9 = load i64, i64* %nitems.addr, align 8, !dbg !18710, !tbaa !3837
  %add = add i64 %9, 40, !dbg !18711
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18712, !tbaa !2993
  %fts_nitems2 = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 8, !dbg !18713, !ctir !2332
  store i64 %add, i64* %fts_nitems2, align 8, !dbg !18714, !tbaa !18704, !ctir !52
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18715, !tbaa !2993
  %fts_nitems3 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 8, !dbg !18717, !ctir !2332
  %12 = load i64, i64* %fts_nitems3, align 8, !dbg !18717, !tbaa !18704, !ctir !52
  %cmp4 = icmp ult i64 2305843009213693951, %12, !dbg !18718
  br i1 %cmp4, label %if.then6, label %lor.lhs.false, !dbg !18719

lor.lhs.false:                                    ; preds = %if.then
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18720, !tbaa !2993
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 2, !dbg !18721, !ctir !2332
  %14 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !18721, !tbaa !18722, !ctir !2338
  %15 = bitcast %struct._ftsent** %14 to i8*, !dbg !18720
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18723, !tbaa !2993
  %fts_nitems5 = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 8, !dbg !18724, !ctir !2332
  %17 = load i64, i64* %fts_nitems5, align 8, !dbg !18724, !tbaa !18704, !ctir !52
  %mul = mul i64 %17, 8, !dbg !18725
  %call = call i8* @realloc(i8* %15, i64 %mul) #12, !dbg !18726
  %18 = bitcast i8* %call to %struct._ftsent**, !dbg !18726
  store %struct._ftsent** %18, %struct._ftsent*** %a, align 8, !dbg !18727, !tbaa !2993
  %tobool = icmp ne %struct._ftsent** %18, null, !dbg !18727
  br i1 %tobool, label %if.end, label %if.then6, !dbg !18728

if.then6:                                         ; preds = %lor.lhs.false, %if.then
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18729, !tbaa !2993
  %fts_array7 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 2, !dbg !18731, !ctir !2332
  %20 = load %struct._ftsent**, %struct._ftsent*** %fts_array7, align 8, !dbg !18731, !tbaa !18722, !ctir !2338
  %21 = bitcast %struct._ftsent** %20 to i8*, !dbg !18729
  call void @free(i8* %21) #12, !dbg !18732
  %22 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18733, !tbaa !2993
  %fts_array8 = getelementptr inbounds %struct.FTS, %struct.FTS* %22, i32 0, i32 2, !dbg !18734, !ctir !2332
  store %struct._ftsent** null, %struct._ftsent*** %fts_array8, align 8, !dbg !18735, !tbaa !18722, !ctir !2338
  %23 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18736, !tbaa !2993
  %fts_nitems9 = getelementptr inbounds %struct.FTS, %struct.FTS* %23, i32 0, i32 8, !dbg !18737, !ctir !2332
  store i64 0, i64* %fts_nitems9, align 8, !dbg !18738, !tbaa !18704, !ctir !52
  %24 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18739, !tbaa !2993
  store %struct._ftsent* %24, %struct._ftsent** %retval, align 8, !dbg !18740
  br label %return, !dbg !18740

if.end:                                           ; preds = %lor.lhs.false
  %25 = load %struct._ftsent**, %struct._ftsent*** %a, align 8, !dbg !18741, !tbaa !2993
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18742, !tbaa !2993
  %fts_array10 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 2, !dbg !18743, !ctir !2332
  store %struct._ftsent** %25, %struct._ftsent*** %fts_array10, align 8, !dbg !18744, !tbaa !18722, !ctir !2338
  br label %if.end11, !dbg !18745

if.end11:                                         ; preds = %if.end, %cond.end
  %27 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18746, !tbaa !2993
  %fts_array12 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 2, !dbg !18748, !ctir !2332
  %28 = load %struct._ftsent**, %struct._ftsent*** %fts_array12, align 8, !dbg !18748, !tbaa !18722, !ctir !2338
  store %struct._ftsent** %28, %struct._ftsent*** %ap, align 8, !dbg !18749, !tbaa !2993
  %29 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18750, !tbaa !2993
  store %struct._ftsent* %29, %struct._ftsent** %p, align 8, !dbg !18751, !tbaa !2993
  br label %for.cond, !dbg !18752

for.cond:                                         ; preds = %for.inc, %if.end11
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18753, !tbaa !2993
  %tobool13 = icmp ne %struct._ftsent* %30, null, !dbg !18755
  br i1 %tobool13, label %for.body, label %for.end, !dbg !18755

for.body:                                         ; preds = %for.cond
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18756, !tbaa !2993
  %32 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18757, !tbaa !2993
  %incdec.ptr = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %32, i32 1, !dbg !18757
  store %struct._ftsent** %incdec.ptr, %struct._ftsent*** %ap, align 8, !dbg !18757, !tbaa !2993
  store %struct._ftsent* %31, %struct._ftsent** %32, align 8, !dbg !18758, !tbaa !2993, !ctir !2414
  br label %for.inc, !dbg !18759

for.inc:                                          ; preds = %for.body
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18760, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 2, !dbg !18761, !ctir !2315
  %34 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18761, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %34, %struct._ftsent** %p, align 8, !dbg !18762, !tbaa !2993
  br label %for.cond, !dbg !18763, !llvm.loop !18764

for.end:                                          ; preds = %for.cond
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18766, !tbaa !2993
  %fts_array14 = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 2, !dbg !18767, !ctir !2332
  %36 = load %struct._ftsent**, %struct._ftsent*** %fts_array14, align 8, !dbg !18767, !tbaa !18722, !ctir !2338
  %37 = bitcast %struct._ftsent** %36 to i8*, !dbg !18768
  %38 = load i64, i64* %nitems.addr, align 8, !dbg !18769, !tbaa !3837
  %39 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %compare, align 8, !dbg !18770, !tbaa !2993
  call void @qsort(i8* %37, i64 %38, i64 8, i32 (i8*, i8*)* %39), !dbg !18771
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18772, !tbaa !2993
  %fts_array15 = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 2, !dbg !18774, !ctir !2332
  %41 = load %struct._ftsent**, %struct._ftsent*** %fts_array15, align 8, !dbg !18774, !tbaa !18722, !ctir !2338
  store %struct._ftsent** %41, %struct._ftsent*** %ap, align 8, !dbg !18775, !tbaa !2993
  %42 = load %struct._ftsent*, %struct._ftsent** %41, align 8, !dbg !18776, !tbaa !2993, !ctir !2414
  store %struct._ftsent* %42, %struct._ftsent** %head.addr, align 8, !dbg !18777, !tbaa !2993
  br label %for.cond16, !dbg !18778

for.cond16:                                       ; preds = %for.inc21, %for.end
  %43 = load i64, i64* %nitems.addr, align 8, !dbg !18779, !tbaa !3837
  %dec = add i64 %43, -1, !dbg !18779
  store i64 %dec, i64* %nitems.addr, align 8, !dbg !18779, !tbaa !3837
  %tobool17 = icmp ne i64 %dec, 0, !dbg !18781
  br i1 %tobool17, label %for.body18, label %for.end23, !dbg !18781

for.body18:                                       ; preds = %for.cond16
  %44 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18782, !tbaa !2993
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %44, i64 1, !dbg !18782, !ctir !2485
  %45 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !18782, !tbaa !2993
  %46 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18783, !tbaa !2993
  %arrayidx19 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %46, i64 0, !dbg !18783, !ctir !2485
  %47 = load %struct._ftsent*, %struct._ftsent** %arrayidx19, align 8, !dbg !18783, !tbaa !2993
  %fts_link20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %47, i32 0, i32 2, !dbg !18784, !ctir !2315
  store %struct._ftsent* %45, %struct._ftsent** %fts_link20, align 8, !dbg !18785, !tbaa !2993, !ctir !2319
  br label %for.inc21, !dbg !18783

for.inc21:                                        ; preds = %for.body18
  %48 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18786, !tbaa !2993
  %incdec.ptr22 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %48, i32 1, !dbg !18786
  store %struct._ftsent** %incdec.ptr22, %struct._ftsent*** %ap, align 8, !dbg !18786, !tbaa !2993
  br label %for.cond16, !dbg !18787, !llvm.loop !18788

for.end23:                                        ; preds = %for.cond16
  %49 = load %struct._ftsent**, %struct._ftsent*** %ap, align 8, !dbg !18790, !tbaa !2993
  %arrayidx24 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %49, i64 0, !dbg !18790, !ctir !2485
  %50 = load %struct._ftsent*, %struct._ftsent** %arrayidx24, align 8, !dbg !18790, !tbaa !2993
  %fts_link25 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %50, i32 0, i32 2, !dbg !18791, !ctir !2315
  store %struct._ftsent* null, %struct._ftsent** %fts_link25, align 8, !dbg !18792, !tbaa !2993, !ctir !2319
  %51 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18793, !tbaa !2993
  store %struct._ftsent* %51, %struct._ftsent** %retval, align 8, !dbg !18794
  br label %return, !dbg !18794

return:                                           ; preds = %for.end23, %if.then6
  %52 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !18795
  ret %struct._ftsent* %52, !dbg !18795
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @setup_dir(%struct.FTS* %fts) #4 !dbg !18796 !ctir !2425 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !2331
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !18797, metadata !DIExpression()), !dbg !18798
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18799, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18801, !ctir !2332
  %1 = load i32, i32* %fts_options, align 8, !dbg !18801, !tbaa !17900, !ctir !5
  %and = and i32 %1, 258, !dbg !18802
  %tobool = icmp ne i32 %and, 0, !dbg !18802
  br i1 %tobool, label %if.then, label %if.else, !dbg !18803

if.then:                                          ; preds = %entry
  %call = call %struct.hash_table* @hash_initialize(i64 31, %struct.hash_tuning* null, i64 (i8*, i64)* @AD_hash, i1 (i8*, i8*)* @AD_compare, void (i8*)* @free), !dbg !18804
  %2 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18806, !tbaa !2993
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !18807, !ctir !2332
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !18808
  store %struct.hash_table* %call, %struct.hash_table** %ht, align 8, !dbg !18809, !tbaa !3652, !ctir !2355
  %3 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18810, !tbaa !2993
  %fts_cycle1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 12, !dbg !18812, !ctir !2332
  %ht2 = bitcast %union.anon* %fts_cycle1 to %struct.hash_table**, !dbg !18813
  %4 = load %struct.hash_table*, %struct.hash_table** %ht2, align 8, !dbg !18813, !tbaa !3652, !ctir !2355
  %tobool3 = icmp ne %struct.hash_table* %4, null, !dbg !18810
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !18814

if.then4:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !18815
  br label %return, !dbg !18815

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !18816

if.else:                                          ; preds = %entry
  %call5 = call noalias i8* @malloc(i64 32) #12, !dbg !18817
  %5 = bitcast i8* %call5 to %struct.cycle_check_state*, !dbg !18817
  %6 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18819, !tbaa !2993
  %fts_cycle6 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !18820, !ctir !2332
  %state = bitcast %union.anon* %fts_cycle6 to %struct.cycle_check_state**, !dbg !18821
  store %struct.cycle_check_state* %5, %struct.cycle_check_state** %state, align 8, !dbg !18822, !tbaa !3652, !ctir !2355
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18823, !tbaa !2993
  %fts_cycle7 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !18825, !ctir !2332
  %state8 = bitcast %union.anon* %fts_cycle7 to %struct.cycle_check_state**, !dbg !18826
  %8 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state8, align 8, !dbg !18826, !tbaa !3652, !ctir !2355
  %tobool9 = icmp ne %struct.cycle_check_state* %8, null, !dbg !18823
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !18827

if.then10:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !18828
  br label %return, !dbg !18828

if.end11:                                         ; preds = %if.else
  %9 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !18829, !tbaa !2993
  %fts_cycle12 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 12, !dbg !18830, !ctir !2332
  %state13 = bitcast %union.anon* %fts_cycle12 to %struct.cycle_check_state**, !dbg !18831
  %10 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state13, align 8, !dbg !18831, !tbaa !3652, !ctir !2355
  call void @cycle_check_init(%struct.cycle_check_state* %10), !dbg !18832
  br label %if.end14

if.end14:                                         ; preds = %if.end11, %if.end
  store i1 true, i1* %retval, align 1, !dbg !18833
  br label %return, !dbg !18833

return:                                           ; preds = %if.end14, %if.then10, %if.then4
  %11 = load i1, i1* %retval, align 1, !dbg !18834
  ret i1 %11, !dbg !18834
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @diropen(%struct.FTS* %sp, i8* %dir) #4 !dbg !18835 !ctir !2435 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2437
  %dir.addr = alloca i8*, align 8, !ctir !112
  %open_flags = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18836, metadata !DIExpression()), !dbg !18837
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !18838, metadata !DIExpression()), !dbg !18839
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !18840, metadata !DIExpression()), !dbg !18841
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18842, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !18842, !ctir !2438
  %1 = load i32, i32* %fts_options, align 8, !dbg !18842, !tbaa !17900, !ctir !5
  %and = and i32 %1, 16, !dbg !18842
  %tobool = icmp ne i32 %and, 0, !dbg !18842
  %2 = zext i1 %tobool to i64, !dbg !18842
  %cond = select i1 %tobool, i32 131072, i32 0, !dbg !18842
  %or = or i32 592128, %cond, !dbg !18843
  store i32 %or, i32* %open_flags, align 4, !dbg !18841, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !18844, metadata !DIExpression()), !dbg !18845
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18846, !tbaa !2993
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !18846, !ctir !2438
  %4 = load i32, i32* %fts_options1, align 8, !dbg !18846, !tbaa !17900, !ctir !5
  %and2 = and i32 %4, 512, !dbg !18846
  %tobool3 = icmp ne i32 %and2, 0, !dbg !18846
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !18846

cond.true:                                        ; preds = %entry
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18847, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 6, !dbg !18848, !ctir !2438
  %6 = load i32, i32* %fts_cwd_fd, align 4, !dbg !18848, !tbaa !3812, !ctir !5
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !18849, !tbaa !2993
  %8 = load i32, i32* %open_flags, align 4, !dbg !18850, !tbaa !2980
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %6, i8* %7, i32 %8), !dbg !18851
  br label %cond.end, !dbg !18846

cond.false:                                       ; preds = %entry
  %9 = load i8*, i8** %dir.addr, align 8, !dbg !18852, !tbaa !2993
  %10 = load i32, i32* %open_flags, align 4, !dbg !18853, !tbaa !2980
  %call4 = call i32 (i8*, i32, ...) @open_safer(i8* %9, i32 %10), !dbg !18854
  br label %cond.end, !dbg !18846

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond5 = phi i32 [ %call, %cond.true ], [ %call4, %cond.false ], !dbg !18846
  store i32 %cond5, i32* %fd, align 4, !dbg !18845, !tbaa !2980
  %11 = load i32, i32* %fd, align 4, !dbg !18855, !tbaa !2980
  ret i32 %11, !dbg !18856
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_lfree(%struct._ftsent* %head) #4 !dbg !18857 !ctir !2488 {
entry:
  %head.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !18858, metadata !DIExpression()), !dbg !18859
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18860, metadata !DIExpression()), !dbg !18861
  br label %while.cond, !dbg !18862

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18863, !tbaa !2993
  store %struct._ftsent* %0, %struct._ftsent** %p, align 8, !dbg !18864, !tbaa !2993
  %tobool = icmp ne %struct._ftsent* %0, null, !dbg !18862
  br i1 %tobool, label %while.body, label %while.end, !dbg !18862

while.body:                                       ; preds = %while.cond
  %1 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !18865, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 2, !dbg !18867, !ctir !2315
  %2 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18867, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %2, %struct._ftsent** %head.addr, align 8, !dbg !18868, !tbaa !2993
  %3 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18869, !tbaa !2993
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %3, i32 0, i32 3, !dbg !18871, !ctir !2315
  %4 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !18871, !tbaa !2993, !ctir !580
  %tobool1 = icmp ne %struct.__dirstream* %4, null, !dbg !18869
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18872

if.then:                                          ; preds = %while.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18873, !tbaa !2993
  %fts_dirp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !18874, !ctir !2315
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp2, align 8, !dbg !18874, !tbaa !2993, !ctir !580
  %call = call i32 @closedir(%struct.__dirstream* %6), !dbg !18875
  br label %if.end, !dbg !18875

if.end:                                           ; preds = %if.then, %while.body
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18876, !tbaa !2993
  %8 = bitcast %struct._ftsent* %7 to i8*, !dbg !18876
  call void @free(i8* %8) #12, !dbg !18877
  br label %while.cond, !dbg !18862, !llvm.loop !18878

while.end:                                        ; preds = %while.cond
  ret void, !dbg !18880
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @AD_hash(i8* %x, i64 %table_size) #4 !dbg !18881 !ctir !520 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %table_size.addr = alloca i64, align 8, !ctir !52
  %ax = alloca %struct.Active_dir*, align 8, !ctir !2427
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !18882, metadata !DIExpression()), !dbg !18883
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !18884, metadata !DIExpression()), !dbg !18885
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !18886, metadata !DIExpression()), !dbg !18887
  %0 = load i8*, i8** %x.addr, align 8, !dbg !18888, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !18888
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !18887, !tbaa !2993
  %2 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18889, !tbaa !2993
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %2, i32 0, i32 1, !dbg !18890, !ctir !2428
  %3 = load i64, i64* %ino, align 8, !dbg !18890, !tbaa !18891, !ctir !224
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !18893, !tbaa !3837
  %rem = urem i64 %3, %4, !dbg !18894
  ret i64 %rem, !dbg !18895
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @AD_compare(i8* %x, i8* %y) #4 !dbg !18896 !ctir !522 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %y.addr = alloca i8*, align 8, !ctir !428
  %ax = alloca %struct.Active_dir*, align 8, !ctir !2427
  %ay = alloca %struct.Active_dir*, align 8, !ctir !2427
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !18897, metadata !DIExpression()), !dbg !18898
  store i8* %y, i8** %y.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !18899, metadata !DIExpression()), !dbg !18900
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ax, metadata !18901, metadata !DIExpression()), !dbg !18902
  %0 = load i8*, i8** %x.addr, align 8, !dbg !18903, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.Active_dir*, !dbg !18903
  store %struct.Active_dir* %1, %struct.Active_dir** %ax, align 8, !dbg !18902, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ay, metadata !18904, metadata !DIExpression()), !dbg !18905
  %2 = load i8*, i8** %y.addr, align 8, !dbg !18906, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.Active_dir*, !dbg !18906
  store %struct.Active_dir* %3, %struct.Active_dir** %ay, align 8, !dbg !18905, !tbaa !2993
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18907, !tbaa !2993
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %4, i32 0, i32 1, !dbg !18908, !ctir !2428
  %5 = load i64, i64* %ino, align 8, !dbg !18908, !tbaa !18891, !ctir !224
  %6 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !18909, !tbaa !2993
  %ino1 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %6, i32 0, i32 1, !dbg !18910, !ctir !2428
  %7 = load i64, i64* %ino1, align 8, !dbg !18910, !tbaa !18891, !ctir !224
  %cmp = icmp eq i64 %5, %7, !dbg !18911
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18912

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Active_dir*, %struct.Active_dir** %ax, align 8, !dbg !18913, !tbaa !2993
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %8, i32 0, i32 0, !dbg !18914, !ctir !2428
  %9 = load i64, i64* %dev, align 8, !dbg !18914, !tbaa !18915, !ctir !227
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ay, align 8, !dbg !18916, !tbaa !2993
  %dev2 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 0, !dbg !18917, !ctir !2428
  %11 = load i64, i64* %dev2, align 8, !dbg !18917, !tbaa !18915, !ctir !227
  %cmp3 = icmp eq i64 %9, %11, !dbg !18918
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !18919
  ret i1 %12, !dbg !18920
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compar(i8* %a, i8* %b) #4 !dbg !18921 !ctir !1078 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !428
  %b.addr = alloca i8*, align 8, !ctir !428
  %pa = alloca %struct._ftsent**, align 8, !ctir !2312
  %pb = alloca %struct._ftsent**, align 8, !ctir !2312
  store i8* %a, i8** %a.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !18922, metadata !DIExpression()), !dbg !18923
  store i8* %b, i8** %b.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !18924, metadata !DIExpression()), !dbg !18925
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pa, metadata !18926, metadata !DIExpression()), !dbg !18927
  %0 = load i8*, i8** %a.addr, align 8, !dbg !18928, !tbaa !2993
  %1 = bitcast i8* %0 to %struct._ftsent**, !dbg !18929
  store %struct._ftsent** %1, %struct._ftsent*** %pa, align 8, !dbg !18927, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %pb, metadata !18930, metadata !DIExpression()), !dbg !18931
  %2 = load i8*, i8** %b.addr, align 8, !dbg !18932, !tbaa !2993
  %3 = bitcast i8* %2 to %struct._ftsent**, !dbg !18933
  store %struct._ftsent** %3, %struct._ftsent*** %pb, align 8, !dbg !18931, !tbaa !2993
  %4 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !18934, !tbaa !2993
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %4, i64 0, !dbg !18934, !ctir !2312
  %5 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !18934, !tbaa !2993
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 11, !dbg !18935, !ctir !2314
  %6 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !18935, !tbaa !2993, !ctir !2331
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 9, !dbg !18936, !ctir !2332
  %7 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !18936, !tbaa !18127, !ctir !2346
  %8 = load %struct._ftsent**, %struct._ftsent*** %pa, align 8, !dbg !18937, !tbaa !2993
  %9 = load %struct._ftsent**, %struct._ftsent*** %pb, align 8, !dbg !18938, !tbaa !2993
  %call = call i32 %7(%struct._ftsent** %8, %struct._ftsent** %9), !dbg !18934
  ret i32 %call, !dbg !18939
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_close(%struct.FTS* %sp) #4 !dbg !18940 !ctir !2415 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %freep = alloca %struct._ftsent*, align 8, !ctir !2414
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %saved_errno = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !18941, metadata !DIExpression()), !dbg !18942
  call void @llvm.dbg.declare(metadata %struct._ftsent** %freep, metadata !18943, metadata !DIExpression()), !dbg !18944
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !18945, metadata !DIExpression()), !dbg !18946
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !18947, metadata !DIExpression()), !dbg !18948
  store i32 0, i32* %saved_errno, align 4, !dbg !18948, !tbaa !2980
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18949, !tbaa !2993
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !18951, !ctir !2332
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !18951, !tbaa !18338, !ctir !2319
  %tobool = icmp ne %struct._ftsent* %1, null, !dbg !18949
  br i1 %tobool, label %if.then, label %if.end, !dbg !18952

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18953, !tbaa !2993
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !18956, !ctir !2332
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !18956, !tbaa !18338, !ctir !2319
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !18957, !tbaa !2993
  br label %for.cond, !dbg !18958

for.cond:                                         ; preds = %cond.end, %if.then
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18959, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 12, !dbg !18961, !ctir !2315
  %5 = load i64, i64* %fts_level, align 8, !dbg !18961, !tbaa !3837, !ctir !539
  %cmp = icmp sge i64 %5, 0, !dbg !18962
  br i1 %cmp, label %for.body, label %for.end, !dbg !18963

for.body:                                         ; preds = %for.cond
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18964, !tbaa !2993
  store %struct._ftsent* %6, %struct._ftsent** %freep, align 8, !dbg !18966, !tbaa !2993
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18967, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 2, !dbg !18968, !ctir !2315
  %8 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !18968, !tbaa !2993, !ctir !2319
  %cmp2 = icmp ne %struct._ftsent* %8, null, !dbg !18969
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !18967

cond.true:                                        ; preds = %for.body
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18970, !tbaa !2993
  %fts_link3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 2, !dbg !18971, !ctir !2315
  %10 = load %struct._ftsent*, %struct._ftsent** %fts_link3, align 8, !dbg !18971, !tbaa !2993, !ctir !2319
  br label %cond.end, !dbg !18967

cond.false:                                       ; preds = %for.body
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18972, !tbaa !2993
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 1, !dbg !18973, !ctir !2315
  %12 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !18973, !tbaa !2993, !ctir !2319
  br label %cond.end, !dbg !18967

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %10, %cond.true ], [ %12, %cond.false ], !dbg !18967
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !18974, !tbaa !2993
  %13 = load %struct._ftsent*, %struct._ftsent** %freep, align 8, !dbg !18975, !tbaa !2993
  %14 = bitcast %struct._ftsent* %13 to i8*, !dbg !18975
  call void @free(i8* %14) #12, !dbg !18976
  br label %for.cond, !dbg !18977, !llvm.loop !18978

for.end:                                          ; preds = %for.cond
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !18980, !tbaa !2993
  %16 = bitcast %struct._ftsent* %15 to i8*, !dbg !18980
  call void @free(i8* %16) #12, !dbg !18981
  br label %if.end, !dbg !18982

if.end:                                           ; preds = %for.end, %entry
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18983, !tbaa !2993
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 1, !dbg !18985, !ctir !2332
  %18 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !18985, !tbaa !18986, !ctir !2319
  %tobool4 = icmp ne %struct._ftsent* %18, null, !dbg !18983
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !18987

if.then5:                                         ; preds = %if.end
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18988, !tbaa !2993
  %fts_child6 = getelementptr inbounds %struct.FTS, %struct.FTS* %19, i32 0, i32 1, !dbg !18989, !ctir !2332
  %20 = load %struct._ftsent*, %struct._ftsent** %fts_child6, align 8, !dbg !18989, !tbaa !18986, !ctir !2319
  call void @fts_lfree(%struct._ftsent* %20), !dbg !18990
  br label %if.end7, !dbg !18990

if.end7:                                          ; preds = %if.then5, %if.end
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18991, !tbaa !2993
  %fts_array = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 2, !dbg !18992, !ctir !2332
  %22 = load %struct._ftsent**, %struct._ftsent*** %fts_array, align 8, !dbg !18992, !tbaa !18722, !ctir !2338
  %23 = bitcast %struct._ftsent** %22 to i8*, !dbg !18991
  call void @free(i8* %23) #12, !dbg !18993
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18994, !tbaa !2993
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 4, !dbg !18995, !ctir !2332
  %25 = load i8*, i8** %fts_path, align 8, !dbg !18995, !tbaa !18389, !ctir !7
  call void @free(i8* %25) #12, !dbg !18996
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !18997, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !18997, !ctir !2332
  %27 = load i32, i32* %fts_options, align 8, !dbg !18997, !tbaa !17900, !ctir !5
  %and = and i32 %27, 512, !dbg !18997
  %tobool8 = icmp ne i32 %and, 0, !dbg !18997
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !18999

if.then9:                                         ; preds = %if.end7
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19000, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 6, !dbg !19003, !ctir !2332
  %29 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19003, !tbaa !3812, !ctir !5
  %cmp10 = icmp sle i32 0, %29, !dbg !19004
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !19005

if.then11:                                        ; preds = %if.then9
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19006, !tbaa !2993
  %fts_cwd_fd12 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 6, !dbg !19008, !ctir !2332
  %31 = load i32, i32* %fts_cwd_fd12, align 4, !dbg !19008, !tbaa !3812, !ctir !5
  %call = call i32 @close(i32 %31), !dbg !19009
  %tobool13 = icmp ne i32 %call, 0, !dbg !19009
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !19010

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #15, !dbg !19011
  %32 = load i32, i32* %call15, align 4, !dbg !19011, !tbaa !2980, !ctir !5
  store i32 %32, i32* %saved_errno, align 4, !dbg !19012, !tbaa !2980
  br label %if.end16, !dbg !19013

if.end16:                                         ; preds = %if.then14, %if.then11
  br label %if.end17, !dbg !19014

if.end17:                                         ; preds = %if.end16, %if.then9
  br label %if.end37, !dbg !19015

if.else:                                          ; preds = %if.end7
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19016, !tbaa !2993
  %fts_options18 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 10, !dbg !19016, !ctir !2332
  %34 = load i32, i32* %fts_options18, align 8, !dbg !19016, !tbaa !17900, !ctir !5
  %and19 = and i32 %34, 4, !dbg !19016
  %tobool20 = icmp ne i32 %and19, 0, !dbg !19016
  br i1 %tobool20, label %if.end36, label %if.then21, !dbg !19018

if.then21:                                        ; preds = %if.else
  %35 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19019, !tbaa !2993
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %35, i32 0, i32 5, !dbg !19022, !ctir !2332
  %36 = load i32, i32* %fts_rfd, align 8, !dbg !19022, !tbaa !18370, !ctir !5
  %call22 = call i32 @fchdir(i32 %36) #12, !dbg !19023
  %tobool23 = icmp ne i32 %call22, 0, !dbg !19023
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !19024

if.then24:                                        ; preds = %if.then21
  %call25 = call i32* @__errno_location() #15, !dbg !19025
  %37 = load i32, i32* %call25, align 4, !dbg !19025, !tbaa !2980, !ctir !5
  store i32 %37, i32* %saved_errno, align 4, !dbg !19026, !tbaa !2980
  br label %if.end26, !dbg !19027

if.end26:                                         ; preds = %if.then24, %if.then21
  %38 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19028, !tbaa !2993
  %fts_rfd27 = getelementptr inbounds %struct.FTS, %struct.FTS* %38, i32 0, i32 5, !dbg !19030, !ctir !2332
  %39 = load i32, i32* %fts_rfd27, align 8, !dbg !19030, !tbaa !18370, !ctir !5
  %call28 = call i32 @close(i32 %39), !dbg !19031
  %tobool29 = icmp ne i32 %call28, 0, !dbg !19031
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !19032

if.then30:                                        ; preds = %if.end26
  %40 = load i32, i32* %saved_errno, align 4, !dbg !19033, !tbaa !2980
  %cmp31 = icmp eq i32 %40, 0, !dbg !19035
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !19036

if.then32:                                        ; preds = %if.then30
  %call33 = call i32* @__errno_location() #15, !dbg !19037
  %41 = load i32, i32* %call33, align 4, !dbg !19037, !tbaa !2980, !ctir !5
  store i32 %41, i32* %saved_errno, align 4, !dbg !19038, !tbaa !2980
  br label %if.end34, !dbg !19039

if.end34:                                         ; preds = %if.then32, %if.then30
  br label %if.end35, !dbg !19040

if.end35:                                         ; preds = %if.end34, %if.end26
  br label %if.end36, !dbg !19041

if.end36:                                         ; preds = %if.end35, %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end17
  %42 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19042, !tbaa !2993
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %42, i32 0, i32 13, !dbg !19043, !ctir !2332
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !19044
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19045, !tbaa !2993
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 11, !dbg !19047, !ctir !2332
  %44 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !19047, !tbaa !19048, !ctir !1425
  %tobool38 = icmp ne %struct.hash_table* %44, null, !dbg !19045
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !19049

if.then39:                                        ; preds = %if.end37
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19050, !tbaa !2993
  %fts_leaf_optimization_works_ht40 = getelementptr inbounds %struct.FTS, %struct.FTS* %45, i32 0, i32 11, !dbg !19051, !ctir !2332
  %46 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht40, align 8, !dbg !19051, !tbaa !19048, !ctir !1425
  call void @hash_free(%struct.hash_table* %46), !dbg !19052
  br label %if.end41, !dbg !19052

if.end41:                                         ; preds = %if.then39, %if.end37
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19053, !tbaa !2993
  call void @free_dir(%struct.FTS* %47), !dbg !19054
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19055, !tbaa !2993
  %49 = bitcast %struct.FTS* %48 to i8*, !dbg !19055
  call void @free(i8* %49) #12, !dbg !19056
  %50 = load i32, i32* %saved_errno, align 4, !dbg !19057, !tbaa !2980
  %tobool42 = icmp ne i32 %50, 0, !dbg !19057
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !19059

if.then43:                                        ; preds = %if.end41
  %51 = load i32, i32* %saved_errno, align 4, !dbg !19060, !tbaa !2980
  %call44 = call i32* @__errno_location() #15, !dbg !19060
  store i32 %51, i32* %call44, align 4, !dbg !19060, !tbaa !2980, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !19062
  br label %return, !dbg !19062

if.end45:                                         ; preds = %if.end41
  store i32 0, i32* %retval, align 4, !dbg !19063
  br label %return, !dbg !19063

return:                                           ; preds = %if.end45, %if.then43
  %52 = load i32, i32* %retval, align 4, !dbg !19064
  ret i32 %52, !dbg !19064
}

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fd_ring_clear(%struct.I_ring* %fd_ring) #4 !dbg !19065 !ctir !2439 {
entry:
  %fd_ring.addr = alloca %struct.I_ring*, align 8, !ctir !2441
  %fd = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %fd_ring, %struct.I_ring** %fd_ring.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.I_ring** %fd_ring.addr, metadata !19066, metadata !DIExpression()), !dbg !19067
  br label %while.cond, !dbg !19068

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19069, !tbaa !2993
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !19070
  %lnot = xor i1 %call, true, !dbg !19071
  br i1 %lnot, label %while.body, label %while.end, !dbg !19068

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19072, metadata !DIExpression()), !dbg !19074
  %1 = load %struct.I_ring*, %struct.I_ring** %fd_ring.addr, align 8, !dbg !19075, !tbaa !2993
  %call1 = call i32 @i_ring_pop(%struct.I_ring* %1), !dbg !19076
  store i32 %call1, i32* %fd, align 4, !dbg !19074, !tbaa !2980
  %2 = load i32, i32* %fd, align 4, !dbg !19077, !tbaa !2980
  %cmp = icmp sle i32 0, %2, !dbg !19079
  br i1 %cmp, label %if.then, label %if.end, !dbg !19080

if.then:                                          ; preds = %while.body
  %3 = load i32, i32* %fd, align 4, !dbg !19081, !tbaa !2980
  %call2 = call i32 @close(i32 %3), !dbg !19082
  br label %if.end, !dbg !19082

if.end:                                           ; preds = %if.then, %while.body
  br label %while.cond, !dbg !19068, !llvm.loop !19083

while.end:                                        ; preds = %while.cond
  ret void, !dbg !19085
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_dir(%struct.FTS* %sp) #4 !dbg !19086 !ctir !2442 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19087, metadata !DIExpression()), !dbg !19088
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19089, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !19091, !ctir !2332
  %1 = load i32, i32* %fts_options, align 8, !dbg !19091, !tbaa !17900, !ctir !5
  %and = and i32 %1, 258, !dbg !19092
  %tobool = icmp ne i32 %and, 0, !dbg !19092
  br i1 %tobool, label %if.then, label %if.else, !dbg !19093

if.then:                                          ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19094, !tbaa !2993
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 12, !dbg !19097, !ctir !2332
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19098
  %3 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !19098, !tbaa !3652, !ctir !2355
  %tobool1 = icmp ne %struct.hash_table* %3, null, !dbg !19094
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !19099

if.then2:                                         ; preds = %if.then
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19100, !tbaa !2993
  %fts_cycle3 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 12, !dbg !19101, !ctir !2332
  %ht4 = bitcast %union.anon* %fts_cycle3 to %struct.hash_table**, !dbg !19102
  %5 = load %struct.hash_table*, %struct.hash_table** %ht4, align 8, !dbg !19102, !tbaa !3652, !ctir !2355
  call void @hash_free(%struct.hash_table* %5), !dbg !19103
  br label %if.end, !dbg !19103

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end6, !dbg !19104

if.else:                                          ; preds = %entry
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19105, !tbaa !2993
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 12, !dbg !19106, !ctir !2332
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !19107
  %7 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !19107, !tbaa !3652, !ctir !2355
  %8 = bitcast %struct.cycle_check_state* %7 to i8*, !dbg !19105
  call void @free(i8* %8) #12, !dbg !19108
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  ret void, !dbg !19109
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_read(%struct.FTS* %sp) #4 !dbg !19110 !ctir !2417 {
entry:
  %retval = alloca %struct._ftsent*, align 8, !ctir !2414
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %tmp = alloca %struct._ftsent*, align 8, !ctir !2414
  %instr = alloca i16, align 2, !ctir !34
  %t = alloca i8*, align 8, !ctir !7
  %parent = alloca %struct._ftsent*, align 8, !ctir !2414
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19111, metadata !DIExpression()), !dbg !19112
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19113, metadata !DIExpression()), !dbg !19114
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tmp, metadata !19115, metadata !DIExpression()), !dbg !19116
  call void @llvm.dbg.declare(metadata i16* %instr, metadata !19117, metadata !DIExpression()), !dbg !19118
  call void @llvm.dbg.declare(metadata i8** %t, metadata !19119, metadata !DIExpression()), !dbg !19120
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19121, !tbaa !2993
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19123, !ctir !2332
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19123, !tbaa !18338, !ctir !2319
  %cmp = icmp eq %struct._ftsent* %1, null, !dbg !19124
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19125

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19126, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !19126, !ctir !2332
  %3 = load i32, i32* %fts_options, align 8, !dbg !19126, !tbaa !17900, !ctir !5
  %and = and i32 %3, 8192, !dbg !19126
  %tobool = icmp ne i32 %and, 0, !dbg !19126
  br i1 %tobool, label %if.then, label %if.end, !dbg !19127

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19128
  br label %return, !dbg !19128

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19129, !tbaa !2993
  %fts_cur1 = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 0, !dbg !19130, !ctir !2332
  %5 = load %struct._ftsent*, %struct._ftsent** %fts_cur1, align 8, !dbg !19130, !tbaa !18338, !ctir !2319
  store %struct._ftsent* %5, %struct._ftsent** %p, align 8, !dbg !19131, !tbaa !2993
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19132, !tbaa !2993
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !19133, !ctir !2315
  %7 = load i16, i16* %fts_instr, align 4, !dbg !19133, !tbaa !3799, !ctir !34
  store i16 %7, i16* %instr, align 2, !dbg !19134, !tbaa !3799
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19135, !tbaa !2993
  %fts_instr2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 17, !dbg !19136, !ctir !2315
  store i16 3, i16* %fts_instr2, align 4, !dbg !19137, !tbaa !3799, !ctir !34
  %9 = load i16, i16* %instr, align 2, !dbg !19138, !tbaa !3799
  %conv = zext i16 %9 to i32, !dbg !19138
  %cmp3 = icmp eq i32 %conv, 1, !dbg !19140
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !19141

if.then5:                                         ; preds = %if.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19142, !tbaa !2993
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19144, !tbaa !2993
  %call = call zeroext i16 @fts_stat(%struct.FTS* %10, %struct._ftsent* %11, i1 zeroext false), !dbg !19145
  %12 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19146, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 15, !dbg !19147, !ctir !2315
  store i16 %call, i16* %fts_info, align 8, !dbg !19148, !tbaa !3799, !ctir !34
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19149, !tbaa !2993
  store %struct._ftsent* %13, %struct._ftsent** %retval, align 8, !dbg !19150
  br label %return, !dbg !19150

if.end6:                                          ; preds = %if.end
  %14 = load i16, i16* %instr, align 2, !dbg !19151, !tbaa !3799
  %conv7 = zext i16 %14 to i32, !dbg !19151
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !19153
  br i1 %cmp8, label %land.lhs.true, label %if.end41, !dbg !19154

land.lhs.true:                                    ; preds = %if.end6
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19155, !tbaa !2993
  %fts_info10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 15, !dbg !19156, !ctir !2315
  %16 = load i16, i16* %fts_info10, align 8, !dbg !19156, !tbaa !3799, !ctir !34
  %conv11 = zext i16 %16 to i32, !dbg !19155
  %cmp12 = icmp eq i32 %conv11, 12, !dbg !19157
  br i1 %cmp12, label %if.then19, label %lor.lhs.false14, !dbg !19158

lor.lhs.false14:                                  ; preds = %land.lhs.true
  %17 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19159, !tbaa !2993
  %fts_info15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 15, !dbg !19160, !ctir !2315
  %18 = load i16, i16* %fts_info15, align 8, !dbg !19160, !tbaa !3799, !ctir !34
  %conv16 = zext i16 %18 to i32, !dbg !19159
  %cmp17 = icmp eq i32 %conv16, 13, !dbg !19161
  br i1 %cmp17, label %if.then19, label %if.end41, !dbg !19162

if.then19:                                        ; preds = %lor.lhs.false14, %land.lhs.true
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19163, !tbaa !2993
  %20 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19165, !tbaa !2993
  %call20 = call zeroext i16 @fts_stat(%struct.FTS* %19, %struct._ftsent* %20, i1 zeroext true), !dbg !19166
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19167, !tbaa !2993
  %fts_info21 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 15, !dbg !19168, !ctir !2315
  store i16 %call20, i16* %fts_info21, align 8, !dbg !19169, !tbaa !3799, !ctir !34
  %22 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19170, !tbaa !2993
  %fts_info22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 15, !dbg !19172, !ctir !2315
  %23 = load i16, i16* %fts_info22, align 8, !dbg !19172, !tbaa !3799, !ctir !34
  %conv23 = zext i16 %23 to i32, !dbg !19170
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !19173
  br i1 %cmp24, label %land.lhs.true26, label %if.end40, !dbg !19174

land.lhs.true26:                                  ; preds = %if.then19
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19175, !tbaa !2993
  %fts_options27 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !19175, !ctir !2332
  %25 = load i32, i32* %fts_options27, align 8, !dbg !19175, !tbaa !17900, !ctir !5
  %and28 = and i32 %25, 4, !dbg !19175
  %tobool29 = icmp ne i32 %and28, 0, !dbg !19175
  br i1 %tobool29, label %if.end40, label %if.then30, !dbg !19176

if.then30:                                        ; preds = %land.lhs.true26
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19177, !tbaa !2993
  %call31 = call i32 @diropen(%struct.FTS* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !19180
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19181, !tbaa !2993
  %fts_symfd = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 9, !dbg !19182, !ctir !2315
  store i32 %call31, i32* %fts_symfd, align 4, !dbg !19183, !tbaa !2980, !ctir !5
  %cmp32 = icmp slt i32 %call31, 0, !dbg !19184
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !19185

if.then34:                                        ; preds = %if.then30
  %call35 = call i32* @__errno_location() #15, !dbg !19186
  %28 = load i32, i32* %call35, align 4, !dbg !19186, !tbaa !2980, !ctir !5
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19188, !tbaa !2993
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 8, !dbg !19189, !ctir !2315
  store i32 %28, i32* %fts_errno, align 8, !dbg !19190, !tbaa !2980, !ctir !5
  %30 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19191, !tbaa !2993
  %fts_info36 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 15, !dbg !19192, !ctir !2315
  store i16 7, i16* %fts_info36, align 8, !dbg !19193, !tbaa !3799, !ctir !34
  br label %if.end39, !dbg !19194

if.else:                                          ; preds = %if.then30
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19195, !tbaa !2993
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 16, !dbg !19196, !ctir !2315
  %32 = load i16, i16* %fts_flags, align 2, !dbg !19197, !tbaa !3799, !ctir !34
  %conv37 = zext i16 %32 to i32, !dbg !19197
  %or = or i32 %conv37, 2, !dbg !19197
  %conv38 = trunc i32 %or to i16, !dbg !19197
  store i16 %conv38, i16* %fts_flags, align 2, !dbg !19197, !tbaa !3799, !ctir !34
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then34
  br label %if.end40, !dbg !19198

if.end40:                                         ; preds = %if.end39, %land.lhs.true26, %if.then19
  br label %check_for_dir, !dbg !19199

if.end41:                                         ; preds = %lor.lhs.false14, %if.end6
  %33 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19200, !tbaa !2993
  %fts_info42 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 15, !dbg !19202, !ctir !2315
  %34 = load i16, i16* %fts_info42, align 8, !dbg !19202, !tbaa !3799, !ctir !34
  %conv43 = zext i16 %34 to i32, !dbg !19200
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !19203
  br i1 %cmp44, label %if.then46, label %if.end132, !dbg !19204

if.then46:                                        ; preds = %if.end41
  %35 = load i16, i16* %instr, align 2, !dbg !19205, !tbaa !3799
  %conv47 = zext i16 %35 to i32, !dbg !19205
  %cmp48 = icmp eq i32 %conv47, 4, !dbg !19208
  br i1 %cmp48, label %if.then57, label %lor.lhs.false50, !dbg !19209

lor.lhs.false50:                                  ; preds = %if.then46
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19210, !tbaa !2993
  %fts_options51 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 10, !dbg !19210, !ctir !2332
  %37 = load i32, i32* %fts_options51, align 8, !dbg !19210, !tbaa !17900, !ctir !5
  %and52 = and i32 %37, 64, !dbg !19210
  %tobool53 = icmp ne i32 %and52, 0, !dbg !19210
  br i1 %tobool53, label %land.lhs.true54, label %if.end72, !dbg !19211

land.lhs.true54:                                  ; preds = %lor.lhs.false50
  %38 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19212, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 18, !dbg !19213, !ctir !2315
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19214
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !19214, !ctir !2387
  %39 = load i64, i64* %st_dev, align 8, !dbg !19214, !tbaa !3862, !ctir !228
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19215, !tbaa !2993
  %fts_dev = getelementptr inbounds %struct.FTS, %struct.FTS* %40, i32 0, i32 3, !dbg !19216, !ctir !2332
  %41 = load i64, i64* %fts_dev, align 8, !dbg !19216, !tbaa !3909, !ctir !227
  %cmp55 = icmp ne i64 %39, %41, !dbg !19217
  br i1 %cmp55, label %if.then57, label %if.end72, !dbg !19218

if.then57:                                        ; preds = %land.lhs.true54, %if.then46
  %42 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19219, !tbaa !2993
  %fts_flags58 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 16, !dbg !19222, !ctir !2315
  %43 = load i16, i16* %fts_flags58, align 2, !dbg !19222, !tbaa !3799, !ctir !34
  %conv59 = zext i16 %43 to i32, !dbg !19219
  %and60 = and i32 %conv59, 2, !dbg !19223
  %tobool61 = icmp ne i32 %and60, 0, !dbg !19223
  br i1 %tobool61, label %if.then62, label %if.end65, !dbg !19224

if.then62:                                        ; preds = %if.then57
  %44 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19225, !tbaa !2993
  %fts_symfd63 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %44, i32 0, i32 9, !dbg !19226, !ctir !2315
  %45 = load i32, i32* %fts_symfd63, align 4, !dbg !19226, !tbaa !2980, !ctir !5
  %call64 = call i32 @close(i32 %45), !dbg !19227
  br label %if.end65, !dbg !19228

if.end65:                                         ; preds = %if.then62, %if.then57
  %46 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19229, !tbaa !2993
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %46, i32 0, i32 1, !dbg !19231, !ctir !2332
  %47 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !19231, !tbaa !18986, !ctir !2319
  %tobool66 = icmp ne %struct._ftsent* %47, null, !dbg !19229
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !19232

if.then67:                                        ; preds = %if.end65
  %48 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19233, !tbaa !2993
  %fts_child68 = getelementptr inbounds %struct.FTS, %struct.FTS* %48, i32 0, i32 1, !dbg !19235, !ctir !2332
  %49 = load %struct._ftsent*, %struct._ftsent** %fts_child68, align 8, !dbg !19235, !tbaa !18986, !ctir !2319
  call void @fts_lfree(%struct._ftsent* %49), !dbg !19236
  %50 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19237, !tbaa !2993
  %fts_child69 = getelementptr inbounds %struct.FTS, %struct.FTS* %50, i32 0, i32 1, !dbg !19238, !ctir !2332
  store %struct._ftsent* null, %struct._ftsent** %fts_child69, align 8, !dbg !19239, !tbaa !18986, !ctir !2319
  br label %if.end70, !dbg !19240

if.end70:                                         ; preds = %if.then67, %if.end65
  %51 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19241, !tbaa !2993
  %fts_info71 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %51, i32 0, i32 15, !dbg !19242, !ctir !2315
  store i16 6, i16* %fts_info71, align 8, !dbg !19243, !tbaa !3799, !ctir !34
  br label %do.body, !dbg !19244

do.body:                                          ; preds = %if.end70
  %52 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19245, !tbaa !2993
  %53 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19245, !tbaa !2993
  call void @leave_dir(%struct.FTS* %52, %struct._ftsent* %53), !dbg !19245
  br label %do.end, !dbg !19245

do.end:                                           ; preds = %do.body
  %54 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19247, !tbaa !2993
  store %struct._ftsent* %54, %struct._ftsent** %retval, align 8, !dbg !19248
  br label %return, !dbg !19248

if.end72:                                         ; preds = %land.lhs.true54, %lor.lhs.false50
  %55 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19249, !tbaa !2993
  %fts_child73 = getelementptr inbounds %struct.FTS, %struct.FTS* %55, i32 0, i32 1, !dbg !19251, !ctir !2332
  %56 = load %struct._ftsent*, %struct._ftsent** %fts_child73, align 8, !dbg !19251, !tbaa !18986, !ctir !2319
  %cmp74 = icmp ne %struct._ftsent* %56, null, !dbg !19252
  br i1 %cmp74, label %land.lhs.true76, label %if.end85, !dbg !19253

land.lhs.true76:                                  ; preds = %if.end72
  %57 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19254, !tbaa !2993
  %fts_options77 = getelementptr inbounds %struct.FTS, %struct.FTS* %57, i32 0, i32 10, !dbg !19254, !ctir !2332
  %58 = load i32, i32* %fts_options77, align 8, !dbg !19254, !tbaa !17900, !ctir !5
  %and78 = and i32 %58, 4096, !dbg !19254
  %tobool79 = icmp ne i32 %and78, 0, !dbg !19254
  br i1 %tobool79, label %if.then80, label %if.end85, !dbg !19255

if.then80:                                        ; preds = %land.lhs.true76
  %59 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19256, !tbaa !2993
  %fts_options81 = getelementptr inbounds %struct.FTS, %struct.FTS* %59, i32 0, i32 10, !dbg !19256, !ctir !2332
  %60 = load i32, i32* %fts_options81, align 8, !dbg !19256, !tbaa !17900, !ctir !5
  %and82 = and i32 %60, -4097, !dbg !19256
  store i32 %and82, i32* %fts_options81, align 8, !dbg !19256, !tbaa !17900, !ctir !5
  %61 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19258, !tbaa !2993
  %fts_child83 = getelementptr inbounds %struct.FTS, %struct.FTS* %61, i32 0, i32 1, !dbg !19259, !ctir !2332
  %62 = load %struct._ftsent*, %struct._ftsent** %fts_child83, align 8, !dbg !19259, !tbaa !18986, !ctir !2319
  call void @fts_lfree(%struct._ftsent* %62), !dbg !19260
  %63 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19261, !tbaa !2993
  %fts_child84 = getelementptr inbounds %struct.FTS, %struct.FTS* %63, i32 0, i32 1, !dbg !19262, !ctir !2332
  store %struct._ftsent* null, %struct._ftsent** %fts_child84, align 8, !dbg !19263, !tbaa !18986, !ctir !2319
  br label %if.end85, !dbg !19264

if.end85:                                         ; preds = %if.then80, %land.lhs.true76, %if.end72
  %64 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19265, !tbaa !2993
  %fts_child86 = getelementptr inbounds %struct.FTS, %struct.FTS* %64, i32 0, i32 1, !dbg !19267, !ctir !2332
  %65 = load %struct._ftsent*, %struct._ftsent** %fts_child86, align 8, !dbg !19267, !tbaa !18986, !ctir !2319
  %cmp87 = icmp ne %struct._ftsent* %65, null, !dbg !19268
  br i1 %cmp87, label %if.then89, label %if.else105, !dbg !19269

if.then89:                                        ; preds = %if.end85
  %66 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19270, !tbaa !2993
  %67 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19273, !tbaa !2993
  %68 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19274, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %68, i32 0, i32 6, !dbg !19275, !ctir !2315
  %69 = load i8*, i8** %fts_accpath, align 8, !dbg !19275, !tbaa !2993, !ctir !7
  %call90 = call i32 @fts_safe_changedir(%struct.FTS* %66, %struct._ftsent* %67, i32 -1, i8* %69), !dbg !19276
  %tobool91 = icmp ne i32 %call90, 0, !dbg !19276
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !19277

if.then92:                                        ; preds = %if.then89
  %call93 = call i32* @__errno_location() #15, !dbg !19278
  %70 = load i32, i32* %call93, align 4, !dbg !19278, !tbaa !2980, !ctir !5
  %71 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19280, !tbaa !2993
  %fts_errno94 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %71, i32 0, i32 8, !dbg !19281, !ctir !2315
  store i32 %70, i32* %fts_errno94, align 8, !dbg !19282, !tbaa !2980, !ctir !5
  %72 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19283, !tbaa !2993
  %fts_flags95 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %72, i32 0, i32 16, !dbg !19284, !ctir !2315
  %73 = load i16, i16* %fts_flags95, align 2, !dbg !19285, !tbaa !3799, !ctir !34
  %conv96 = zext i16 %73 to i32, !dbg !19285
  %or97 = or i32 %conv96, 1, !dbg !19285
  %conv98 = trunc i32 %or97 to i16, !dbg !19285
  store i16 %conv98, i16* %fts_flags95, align 2, !dbg !19285, !tbaa !3799, !ctir !34
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19286, !tbaa !2993
  %fts_child99 = getelementptr inbounds %struct.FTS, %struct.FTS* %74, i32 0, i32 1, !dbg !19288, !ctir !2332
  %75 = load %struct._ftsent*, %struct._ftsent** %fts_child99, align 8, !dbg !19288, !tbaa !18986, !ctir !2319
  store %struct._ftsent* %75, %struct._ftsent** %p, align 8, !dbg !19289, !tbaa !2993
  br label %for.cond, !dbg !19290

for.cond:                                         ; preds = %for.inc, %if.then92
  %76 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19291, !tbaa !2993
  %cmp100 = icmp ne %struct._ftsent* %76, null, !dbg !19293
  br i1 %cmp100, label %for.body, label %for.end, !dbg !19294

for.body:                                         ; preds = %for.cond
  %77 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19295, !tbaa !2993
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %77, i32 0, i32 1, !dbg !19296, !ctir !2315
  %78 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19296, !tbaa !2993, !ctir !2319
  %fts_accpath102 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %78, i32 0, i32 6, !dbg !19297, !ctir !2316
  %79 = load i8*, i8** %fts_accpath102, align 8, !dbg !19297, !tbaa !2993, !ctir !7
  %80 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19298, !tbaa !2993
  %fts_accpath103 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 6, !dbg !19299, !ctir !2315
  store i8* %79, i8** %fts_accpath103, align 8, !dbg !19300, !tbaa !2993, !ctir !7
  br label %for.inc, !dbg !19298

for.inc:                                          ; preds = %for.body
  %81 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19301, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 2, !dbg !19302, !ctir !2315
  %82 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !19302, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %82, %struct._ftsent** %p, align 8, !dbg !19303, !tbaa !2993
  br label %for.cond, !dbg !19304, !llvm.loop !19305

for.end:                                          ; preds = %for.cond
  br label %if.end104, !dbg !19307

if.end104:                                        ; preds = %for.end, %if.then89
  br label %if.end129, !dbg !19308

if.else105:                                       ; preds = %if.end85
  %83 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19309, !tbaa !2993
  %call106 = call %struct._ftsent* @fts_build(%struct.FTS* %83, i32 3), !dbg !19311
  %84 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19312, !tbaa !2993
  %fts_child107 = getelementptr inbounds %struct.FTS, %struct.FTS* %84, i32 0, i32 1, !dbg !19313, !ctir !2332
  store %struct._ftsent* %call106, %struct._ftsent** %fts_child107, align 8, !dbg !19314, !tbaa !18986, !ctir !2319
  %cmp108 = icmp eq %struct._ftsent* %call106, null, !dbg !19315
  br i1 %cmp108, label %if.then110, label %if.end128, !dbg !19316

if.then110:                                       ; preds = %if.else105
  %85 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19317, !tbaa !2993
  %fts_options111 = getelementptr inbounds %struct.FTS, %struct.FTS* %85, i32 0, i32 10, !dbg !19317, !ctir !2332
  %86 = load i32, i32* %fts_options111, align 8, !dbg !19317, !tbaa !17900, !ctir !5
  %and112 = and i32 %86, 8192, !dbg !19317
  %tobool113 = icmp ne i32 %and112, 0, !dbg !19317
  br i1 %tobool113, label %if.then114, label %if.end115, !dbg !19320

if.then114:                                       ; preds = %if.then110
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19321
  br label %return, !dbg !19321

if.end115:                                        ; preds = %if.then110
  %87 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19322, !tbaa !2993
  %fts_errno116 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %87, i32 0, i32 8, !dbg !19324, !ctir !2315
  %88 = load i32, i32* %fts_errno116, align 8, !dbg !19324, !tbaa !2980, !ctir !5
  %tobool117 = icmp ne i32 %88, 0, !dbg !19322
  br i1 %tobool117, label %land.lhs.true118, label %if.end125, !dbg !19325

land.lhs.true118:                                 ; preds = %if.end115
  %89 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19326, !tbaa !2993
  %fts_info119 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %89, i32 0, i32 15, !dbg !19327, !ctir !2315
  %90 = load i16, i16* %fts_info119, align 8, !dbg !19327, !tbaa !3799, !ctir !34
  %conv120 = zext i16 %90 to i32, !dbg !19326
  %cmp121 = icmp ne i32 %conv120, 4, !dbg !19328
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !19329

if.then123:                                       ; preds = %land.lhs.true118
  %91 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19330, !tbaa !2993
  %fts_info124 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 15, !dbg !19331, !ctir !2315
  store i16 7, i16* %fts_info124, align 8, !dbg !19332, !tbaa !3799, !ctir !34
  br label %if.end125, !dbg !19330

if.end125:                                        ; preds = %if.then123, %land.lhs.true118, %if.end115
  br label %do.body126, !dbg !19333

do.body126:                                       ; preds = %if.end125
  %92 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19334, !tbaa !2993
  %93 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19334, !tbaa !2993
  call void @leave_dir(%struct.FTS* %92, %struct._ftsent* %93), !dbg !19334
  br label %do.end127, !dbg !19334

do.end127:                                        ; preds = %do.body126
  %94 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19336, !tbaa !2993
  store %struct._ftsent* %94, %struct._ftsent** %retval, align 8, !dbg !19337
  br label %return, !dbg !19337

if.end128:                                        ; preds = %if.else105
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end104
  %95 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19338, !tbaa !2993
  %fts_child130 = getelementptr inbounds %struct.FTS, %struct.FTS* %95, i32 0, i32 1, !dbg !19339, !ctir !2332
  %96 = load %struct._ftsent*, %struct._ftsent** %fts_child130, align 8, !dbg !19339, !tbaa !18986, !ctir !2319
  store %struct._ftsent* %96, %struct._ftsent** %p, align 8, !dbg !19340, !tbaa !2993
  %97 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19341, !tbaa !2993
  %fts_child131 = getelementptr inbounds %struct.FTS, %struct.FTS* %97, i32 0, i32 1, !dbg !19342, !ctir !2332
  store %struct._ftsent* null, %struct._ftsent** %fts_child131, align 8, !dbg !19343, !tbaa !18986, !ctir !2319
  br label %name, !dbg !19344

if.end132:                                        ; preds = %if.end41
  br label %next, !dbg !19345

next:                                             ; preds = %if.then173, %if.end132
  call void @llvm.dbg.label(metadata !19346), !dbg !19347
  %98 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19348, !tbaa !2993
  store %struct._ftsent* %98, %struct._ftsent** %tmp, align 8, !dbg !19349, !tbaa !2993
  %99 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19350, !tbaa !2993
  %fts_link133 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %99, i32 0, i32 2, !dbg !19352, !ctir !2315
  %100 = load %struct._ftsent*, %struct._ftsent** %fts_link133, align 8, !dbg !19352, !tbaa !2993, !ctir !2319
  %cmp134 = icmp eq %struct._ftsent* %100, null, !dbg !19353
  br i1 %cmp134, label %land.lhs.true136, label %if.end152, !dbg !19354

land.lhs.true136:                                 ; preds = %next
  %101 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19355, !tbaa !2993
  %fts_parent137 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %101, i32 0, i32 1, !dbg !19356, !ctir !2315
  %102 = load %struct._ftsent*, %struct._ftsent** %fts_parent137, align 8, !dbg !19356, !tbaa !2993, !ctir !2319
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %102, i32 0, i32 3, !dbg !19357, !ctir !2316
  %103 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19357, !tbaa !2993, !ctir !580
  %tobool138 = icmp ne %struct.__dirstream* %103, null, !dbg !19355
  br i1 %tobool138, label %if.then139, label %if.end152, !dbg !19358

if.then139:                                       ; preds = %land.lhs.true136
  %104 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19359, !tbaa !2993
  %fts_parent140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %104, i32 0, i32 1, !dbg !19361, !ctir !2315
  %105 = load %struct._ftsent*, %struct._ftsent** %fts_parent140, align 8, !dbg !19361, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %105, %struct._ftsent** %p, align 8, !dbg !19362, !tbaa !2993
  %106 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19363, !tbaa !2993
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19364, !tbaa !2993
  %fts_cur141 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 0, !dbg !19365, !ctir !2332
  store %struct._ftsent* %106, %struct._ftsent** %fts_cur141, align 8, !dbg !19366, !tbaa !18338, !ctir !2319
  %108 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19367, !tbaa !2993
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %108, i32 0, i32 4, !dbg !19368, !ctir !2332
  %109 = load i8*, i8** %fts_path, align 8, !dbg !19368, !tbaa !18389, !ctir !7
  %110 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19369, !tbaa !2993
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 10, !dbg !19370, !ctir !2315
  %111 = load i64, i64* %fts_pathlen, align 8, !dbg !19370, !tbaa !3837, !ctir !52
  %arrayidx = getelementptr inbounds i8, i8* %109, i64 %111, !dbg !19367, !ctir !7
  store i8 0, i8* %arrayidx, align 1, !dbg !19371, !tbaa !3652
  %112 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19372, !tbaa !2993
  %call142 = call %struct._ftsent* @fts_build(%struct.FTS* %112, i32 3), !dbg !19374
  store %struct._ftsent* %call142, %struct._ftsent** %p, align 8, !dbg !19375, !tbaa !2993
  %cmp143 = icmp eq %struct._ftsent* %call142, null, !dbg !19376
  br i1 %cmp143, label %if.then145, label %if.end151, !dbg !19377

if.then145:                                       ; preds = %if.then139
  %113 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19378, !tbaa !2993
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %113, i32 0, i32 10, !dbg !19378, !ctir !2332
  %114 = load i32, i32* %fts_options146, align 8, !dbg !19378, !tbaa !17900, !ctir !5
  %and147 = and i32 %114, 8192, !dbg !19378
  %tobool148 = icmp ne i32 %and147, 0, !dbg !19378
  br i1 %tobool148, label %if.then149, label %if.end150, !dbg !19381

if.then149:                                       ; preds = %if.then145
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19382
  br label %return, !dbg !19382

if.end150:                                        ; preds = %if.then145
  br label %cd_dot_dot, !dbg !19383

if.end151:                                        ; preds = %if.then139
  %115 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19384, !tbaa !2993
  %116 = bitcast %struct._ftsent* %115 to i8*, !dbg !19384
  call void @free(i8* %116) #12, !dbg !19385
  br label %name, !dbg !19386

if.end152:                                        ; preds = %land.lhs.true136, %next
  %117 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19387, !tbaa !2993
  %fts_link153 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %117, i32 0, i32 2, !dbg !19389, !ctir !2315
  %118 = load %struct._ftsent*, %struct._ftsent** %fts_link153, align 8, !dbg !19389, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %118, %struct._ftsent** %p, align 8, !dbg !19390, !tbaa !2993
  %cmp154 = icmp ne %struct._ftsent* %118, null, !dbg !19391
  br i1 %cmp154, label %if.then156, label %if.end305, !dbg !19392

if.then156:                                       ; preds = %if.end152
  %119 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19393, !tbaa !2993
  %120 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19395, !tbaa !2993
  %fts_cur157 = getelementptr inbounds %struct.FTS, %struct.FTS* %120, i32 0, i32 0, !dbg !19396, !ctir !2332
  store %struct._ftsent* %119, %struct._ftsent** %fts_cur157, align 8, !dbg !19397, !tbaa !18338, !ctir !2319
  %121 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19398, !tbaa !2993
  %122 = bitcast %struct._ftsent* %121 to i8*, !dbg !19398
  call void @free(i8* %122) #12, !dbg !19399
  %123 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19400, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %123, i32 0, i32 12, !dbg !19402, !ctir !2315
  %124 = load i64, i64* %fts_level, align 8, !dbg !19402, !tbaa !3837, !ctir !539
  %cmp158 = icmp eq i64 %124, 0, !dbg !19403
  br i1 %cmp158, label %if.then160, label %if.end168, !dbg !19404

if.then160:                                       ; preds = %if.then156
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19405, !tbaa !2993
  %call161 = call i32 @restore_initial_cwd(%struct.FTS* %125), !dbg !19408
  %tobool162 = icmp ne i32 %call161, 0, !dbg !19408
  br i1 %tobool162, label %if.then163, label %if.end166, !dbg !19409

if.then163:                                       ; preds = %if.then160
  %126 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19410, !tbaa !2993
  %fts_options164 = getelementptr inbounds %struct.FTS, %struct.FTS* %126, i32 0, i32 10, !dbg !19410, !ctir !2332
  %127 = load i32, i32* %fts_options164, align 8, !dbg !19410, !tbaa !17900, !ctir !5
  %or165 = or i32 %127, 8192, !dbg !19410
  store i32 %or165, i32* %fts_options164, align 8, !dbg !19410, !tbaa !17900, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19412
  br label %return, !dbg !19412

if.end166:                                        ; preds = %if.then160
  %128 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19413, !tbaa !2993
  call void @free_dir(%struct.FTS* %128), !dbg !19414
  %129 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19415, !tbaa !2993
  %130 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19416, !tbaa !2993
  call void @fts_load(%struct.FTS* %129, %struct._ftsent* %130), !dbg !19417
  %131 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19418, !tbaa !2993
  %call167 = call zeroext i1 @setup_dir(%struct.FTS* %131), !dbg !19419
  br label %check_for_dir, !dbg !19420

if.end168:                                        ; preds = %if.then156
  %132 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19421, !tbaa !2993
  %fts_instr169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %132, i32 0, i32 17, !dbg !19423, !ctir !2315
  %133 = load i16, i16* %fts_instr169, align 4, !dbg !19423, !tbaa !3799, !ctir !34
  %conv170 = zext i16 %133 to i32, !dbg !19421
  %cmp171 = icmp eq i32 %conv170, 4, !dbg !19424
  br i1 %cmp171, label %if.then173, label %if.end174, !dbg !19425

if.then173:                                       ; preds = %if.end168
  br label %next, !dbg !19426

if.end174:                                        ; preds = %if.end168
  %134 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19427, !tbaa !2993
  %fts_instr175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %134, i32 0, i32 17, !dbg !19429, !ctir !2315
  %135 = load i16, i16* %fts_instr175, align 4, !dbg !19429, !tbaa !3799, !ctir !34
  %conv176 = zext i16 %135 to i32, !dbg !19427
  %cmp177 = icmp eq i32 %conv176, 2, !dbg !19430
  br i1 %cmp177, label %if.then179, label %if.end207, !dbg !19431

if.then179:                                       ; preds = %if.end174
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19432, !tbaa !2993
  %137 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19434, !tbaa !2993
  %call180 = call zeroext i16 @fts_stat(%struct.FTS* %136, %struct._ftsent* %137, i1 zeroext true), !dbg !19435
  %138 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19436, !tbaa !2993
  %fts_info181 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %138, i32 0, i32 15, !dbg !19437, !ctir !2315
  store i16 %call180, i16* %fts_info181, align 8, !dbg !19438, !tbaa !3799, !ctir !34
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19439, !tbaa !2993
  %fts_info182 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %139, i32 0, i32 15, !dbg !19441, !ctir !2315
  %140 = load i16, i16* %fts_info182, align 8, !dbg !19441, !tbaa !3799, !ctir !34
  %conv183 = zext i16 %140 to i32, !dbg !19439
  %cmp184 = icmp eq i32 %conv183, 1, !dbg !19442
  br i1 %cmp184, label %land.lhs.true186, label %if.end205, !dbg !19443

land.lhs.true186:                                 ; preds = %if.then179
  %141 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19444, !tbaa !2993
  %fts_options187 = getelementptr inbounds %struct.FTS, %struct.FTS* %141, i32 0, i32 10, !dbg !19444, !ctir !2332
  %142 = load i32, i32* %fts_options187, align 8, !dbg !19444, !tbaa !17900, !ctir !5
  %and188 = and i32 %142, 4, !dbg !19444
  %tobool189 = icmp ne i32 %and188, 0, !dbg !19444
  br i1 %tobool189, label %if.end205, label %if.then190, !dbg !19445

if.then190:                                       ; preds = %land.lhs.true186
  %143 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19446, !tbaa !2993
  %call191 = call i32 @diropen(%struct.FTS* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !19449
  %144 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19450, !tbaa !2993
  %fts_symfd192 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %144, i32 0, i32 9, !dbg !19451, !ctir !2315
  store i32 %call191, i32* %fts_symfd192, align 4, !dbg !19452, !tbaa !2980, !ctir !5
  %cmp193 = icmp slt i32 %call191, 0, !dbg !19453
  br i1 %cmp193, label %if.then195, label %if.else199, !dbg !19454

if.then195:                                       ; preds = %if.then190
  %call196 = call i32* @__errno_location() #15, !dbg !19455
  %145 = load i32, i32* %call196, align 4, !dbg !19455, !tbaa !2980, !ctir !5
  %146 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19457, !tbaa !2993
  %fts_errno197 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %146, i32 0, i32 8, !dbg !19458, !ctir !2315
  store i32 %145, i32* %fts_errno197, align 8, !dbg !19459, !tbaa !2980, !ctir !5
  %147 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19460, !tbaa !2993
  %fts_info198 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %147, i32 0, i32 15, !dbg !19461, !ctir !2315
  store i16 7, i16* %fts_info198, align 8, !dbg !19462, !tbaa !3799, !ctir !34
  br label %if.end204, !dbg !19463

if.else199:                                       ; preds = %if.then190
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19464, !tbaa !2993
  %fts_flags200 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %148, i32 0, i32 16, !dbg !19465, !ctir !2315
  %149 = load i16, i16* %fts_flags200, align 2, !dbg !19466, !tbaa !3799, !ctir !34
  %conv201 = zext i16 %149 to i32, !dbg !19466
  %or202 = or i32 %conv201, 2, !dbg !19466
  %conv203 = trunc i32 %or202 to i16, !dbg !19466
  store i16 %conv203, i16* %fts_flags200, align 2, !dbg !19466, !tbaa !3799, !ctir !34
  br label %if.end204

if.end204:                                        ; preds = %if.else199, %if.then195
  br label %if.end205, !dbg !19467

if.end205:                                        ; preds = %if.end204, %land.lhs.true186, %if.then179
  %150 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19468, !tbaa !2993
  %fts_instr206 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %150, i32 0, i32 17, !dbg !19469, !ctir !2315
  store i16 3, i16* %fts_instr206, align 4, !dbg !19470, !tbaa !3799, !ctir !34
  br label %if.end207, !dbg !19471

if.end207:                                        ; preds = %if.end205, %if.end174
  br label %name, !dbg !19472

name:                                             ; preds = %if.end207, %if.end151, %if.end129
  call void @llvm.dbg.label(metadata !19473), !dbg !19474
  %151 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19475, !tbaa !2993
  %fts_path208 = getelementptr inbounds %struct.FTS, %struct.FTS* %151, i32 0, i32 4, !dbg !19476, !ctir !2332
  %152 = load i8*, i8** %fts_path208, align 8, !dbg !19476, !tbaa !18389, !ctir !7
  %153 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19477, !tbaa !2993
  %fts_parent209 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 1, !dbg !19477, !ctir !2315
  %154 = load %struct._ftsent*, %struct._ftsent** %fts_parent209, align 8, !dbg !19477, !tbaa !2993, !ctir !2319
  %fts_path210 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 7, !dbg !19477, !ctir !2316
  %155 = load i8*, i8** %fts_path210, align 8, !dbg !19477, !tbaa !2993, !ctir !7
  %156 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19477, !tbaa !2993
  %fts_parent211 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %156, i32 0, i32 1, !dbg !19477, !ctir !2315
  %157 = load %struct._ftsent*, %struct._ftsent** %fts_parent211, align 8, !dbg !19477, !tbaa !2993, !ctir !2319
  %fts_pathlen212 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %157, i32 0, i32 10, !dbg !19477, !ctir !2316
  %158 = load i64, i64* %fts_pathlen212, align 8, !dbg !19477, !tbaa !3837, !ctir !52
  %sub = sub i64 %158, 1, !dbg !19477
  %arrayidx213 = getelementptr inbounds i8, i8* %155, i64 %sub, !dbg !19477, !ctir !7
  %159 = load i8, i8* %arrayidx213, align 1, !dbg !19477, !tbaa !3652
  %conv214 = sext i8 %159 to i32, !dbg !19477
  %cmp215 = icmp eq i32 %conv214, 47, !dbg !19477
  br i1 %cmp215, label %cond.true, label %cond.false, !dbg !19477

cond.true:                                        ; preds = %name
  %160 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19477, !tbaa !2993
  %fts_parent217 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %160, i32 0, i32 1, !dbg !19477, !ctir !2315
  %161 = load %struct._ftsent*, %struct._ftsent** %fts_parent217, align 8, !dbg !19477, !tbaa !2993, !ctir !2319
  %fts_pathlen218 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %161, i32 0, i32 10, !dbg !19477, !ctir !2316
  %162 = load i64, i64* %fts_pathlen218, align 8, !dbg !19477, !tbaa !3837, !ctir !52
  %sub219 = sub i64 %162, 1, !dbg !19477
  br label %cond.end, !dbg !19477

cond.false:                                       ; preds = %name
  %163 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19477, !tbaa !2993
  %fts_parent220 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %163, i32 0, i32 1, !dbg !19477, !ctir !2315
  %164 = load %struct._ftsent*, %struct._ftsent** %fts_parent220, align 8, !dbg !19477, !tbaa !2993, !ctir !2319
  %fts_pathlen221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %164, i32 0, i32 10, !dbg !19477, !ctir !2316
  %165 = load i64, i64* %fts_pathlen221, align 8, !dbg !19477, !tbaa !3837, !ctir !52
  br label %cond.end, !dbg !19477

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub219, %cond.true ], [ %165, %cond.false ], !dbg !19477
  %add.ptr = getelementptr inbounds i8, i8* %152, i64 %cond, !dbg !19478
  store i8* %add.ptr, i8** %t, align 8, !dbg !19479, !tbaa !2993
  %166 = load i8*, i8** %t, align 8, !dbg !19480, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %166, i32 1, !dbg !19480
  store i8* %incdec.ptr, i8** %t, align 8, !dbg !19480, !tbaa !2993
  store i8 47, i8* %166, align 1, !dbg !19481, !tbaa !3652, !ctir !8
  %167 = load i8*, i8** %t, align 8, !dbg !19482, !tbaa !2993
  %168 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19483, !tbaa !2993
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %168, i32 0, i32 19, !dbg !19484, !ctir !2315
  %arraydecay222 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !19485
  %169 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19486, !tbaa !2993
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %169, i32 0, i32 13, !dbg !19487, !ctir !2315
  %170 = load i64, i64* %fts_namelen, align 8, !dbg !19487, !tbaa !3837, !ctir !52
  %add = add i64 %170, 1, !dbg !19488
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %167, i8* align 8 %arraydecay222, i64 %add, i1 false), !dbg !19485
  br label %check_for_dir, !dbg !19485

check_for_dir:                                    ; preds = %cond.end, %if.end166, %if.end40
  call void @llvm.dbg.label(metadata !19489), !dbg !19490
  %171 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19491, !tbaa !2993
  %172 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19492, !tbaa !2993
  %fts_cur223 = getelementptr inbounds %struct.FTS, %struct.FTS* %172, i32 0, i32 0, !dbg !19493, !ctir !2332
  store %struct._ftsent* %171, %struct._ftsent** %fts_cur223, align 8, !dbg !19494, !tbaa !18338, !ctir !2319
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19495, !tbaa !2993
  %fts_info224 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %173, i32 0, i32 15, !dbg !19497, !ctir !2315
  %174 = load i16, i16* %fts_info224, align 8, !dbg !19497, !tbaa !3799, !ctir !34
  %conv225 = zext i16 %174 to i32, !dbg !19495
  %cmp226 = icmp eq i32 %conv225, 11, !dbg !19498
  br i1 %cmp226, label %if.then228, label %if.end285, !dbg !19499

if.then228:                                       ; preds = %check_for_dir
  %175 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19500, !tbaa !2993
  %fts_statp229 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %175, i32 0, i32 18, !dbg !19503, !ctir !2315
  %arraydecay230 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp229, i64 0, i64 0, !dbg !19504
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay230, i32 0, i32 8, !dbg !19504, !ctir !2387
  %176 = load i64, i64* %st_size, align 8, !dbg !19504, !tbaa !4505, !ctir !30
  %cmp231 = icmp eq i64 %176, 2, !dbg !19505
  br i1 %cmp231, label %if.then233, label %if.else274, !dbg !19506

if.then233:                                       ; preds = %if.then228
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19507, metadata !DIExpression()), !dbg !19509
  %177 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19510, !tbaa !2993
  %fts_parent234 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %177, i32 0, i32 1, !dbg !19511, !ctir !2315
  %178 = load %struct._ftsent*, %struct._ftsent** %fts_parent234, align 8, !dbg !19511, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %178, %struct._ftsent** %parent, align 8, !dbg !19509, !tbaa !2993
  %179 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19512, !tbaa !2993
  %fts_n_dirs_remaining = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 14, !dbg !19514, !ctir !2315
  %180 = load i64, i64* %fts_n_dirs_remaining, align 8, !dbg !19514, !tbaa !3837, !ctir !1376
  %cmp235 = icmp eq i64 %180, 0, !dbg !19515
  br i1 %cmp235, label %land.lhs.true237, label %if.else250, !dbg !19516

land.lhs.true237:                                 ; preds = %if.then233
  %181 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19517, !tbaa !2993
  %fts_options238 = getelementptr inbounds %struct.FTS, %struct.FTS* %181, i32 0, i32 10, !dbg !19517, !ctir !2332
  %182 = load i32, i32* %fts_options238, align 8, !dbg !19517, !tbaa !17900, !ctir !5
  %and239 = and i32 %182, 8, !dbg !19517
  %tobool240 = icmp ne i32 %and239, 0, !dbg !19517
  br i1 %tobool240, label %land.lhs.true241, label %if.else250, !dbg !19518

land.lhs.true241:                                 ; preds = %land.lhs.true237
  %183 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19519, !tbaa !2993
  %fts_options242 = getelementptr inbounds %struct.FTS, %struct.FTS* %183, i32 0, i32 10, !dbg !19519, !ctir !2332
  %184 = load i32, i32* %fts_options242, align 8, !dbg !19519, !tbaa !17900, !ctir !5
  %and243 = and i32 %184, 16, !dbg !19519
  %tobool244 = icmp ne i32 %and243, 0, !dbg !19519
  br i1 %tobool244, label %land.lhs.true245, label %if.else250, !dbg !19520

land.lhs.true245:                                 ; preds = %land.lhs.true241
  %185 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19521, !tbaa !2993
  %186 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19522, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %186, i32 0, i32 6, !dbg !19523, !ctir !2332
  %187 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19523, !tbaa !3812, !ctir !5
  %call246 = call i32 @leaf_optimization(%struct._ftsent* %185, i32 %187), !dbg !19524
  %cmp247 = icmp eq i32 %call246, 2, !dbg !19525
  br i1 %cmp247, label %if.then249, label %if.else250, !dbg !19526

if.then249:                                       ; preds = %land.lhs.true245
  br label %if.end273, !dbg !19527

if.else250:                                       ; preds = %land.lhs.true245, %land.lhs.true241, %land.lhs.true237, %if.then233
  %188 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19529, !tbaa !2993
  %189 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19531, !tbaa !2993
  %call251 = call zeroext i16 @fts_stat(%struct.FTS* %188, %struct._ftsent* %189, i1 zeroext false), !dbg !19532
  %190 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19533, !tbaa !2993
  %fts_info252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %190, i32 0, i32 15, !dbg !19534, !ctir !2315
  store i16 %call251, i16* %fts_info252, align 8, !dbg !19535, !tbaa !3799, !ctir !34
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19536, !tbaa !2993
  %fts_statp253 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !19536, !ctir !2315
  %arraydecay254 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp253, i64 0, i64 0, !dbg !19536
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay254, i32 0, i32 3, !dbg !19536, !ctir !2387
  %192 = load i32, i32* %st_mode, align 8, !dbg !19536, !tbaa !3176, !ctir !130
  %and255 = and i32 %192, 61440, !dbg !19536
  %cmp256 = icmp eq i32 %and255, 16384, !dbg !19536
  br i1 %cmp256, label %land.lhs.true258, label %if.end272, !dbg !19538

land.lhs.true258:                                 ; preds = %if.else250
  %193 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19539, !tbaa !2993
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %193, i32 0, i32 12, !dbg !19540, !ctir !2315
  %194 = load i64, i64* %fts_level259, align 8, !dbg !19540, !tbaa !3837, !ctir !539
  %cmp260 = icmp ne i64 %194, 0, !dbg !19541
  br i1 %cmp260, label %land.lhs.true262, label %if.end272, !dbg !19542

land.lhs.true262:                                 ; preds = %land.lhs.true258
  %195 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19543, !tbaa !2993
  %fts_n_dirs_remaining263 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %195, i32 0, i32 14, !dbg !19544, !ctir !2315
  %196 = load i64, i64* %fts_n_dirs_remaining263, align 8, !dbg !19544, !tbaa !3837, !ctir !1376
  %cmp264 = icmp ult i64 0, %196, !dbg !19545
  br i1 %cmp264, label %land.lhs.true266, label %if.end272, !dbg !19546

land.lhs.true266:                                 ; preds = %land.lhs.true262
  %197 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19547, !tbaa !2993
  %fts_n_dirs_remaining267 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %197, i32 0, i32 14, !dbg !19548, !ctir !2315
  %198 = load i64, i64* %fts_n_dirs_remaining267, align 8, !dbg !19548, !tbaa !3837, !ctir !1376
  %cmp268 = icmp ne i64 %198, -1, !dbg !19549
  br i1 %cmp268, label %if.then270, label %if.end272, !dbg !19550

if.then270:                                       ; preds = %land.lhs.true266
  %199 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19551, !tbaa !2993
  %fts_n_dirs_remaining271 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 14, !dbg !19552, !ctir !2315
  %200 = load i64, i64* %fts_n_dirs_remaining271, align 8, !dbg !19553, !tbaa !3837, !ctir !1376
  %dec = add i64 %200, -1, !dbg !19553
  store i64 %dec, i64* %fts_n_dirs_remaining271, align 8, !dbg !19553, !tbaa !3837, !ctir !1376
  br label %if.end272, !dbg !19551

if.end272:                                        ; preds = %if.then270, %land.lhs.true266, %land.lhs.true262, %land.lhs.true258, %if.else250
  br label %if.end273

if.end273:                                        ; preds = %if.end272, %if.then249
  br label %if.end284, !dbg !19554

if.else274:                                       ; preds = %if.then228
  br label %do.body275, !dbg !19555

do.body275:                                       ; preds = %if.else274
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19556, !tbaa !2993
  %fts_statp276 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 18, !dbg !19556, !ctir !2315
  %arraydecay277 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp276, i64 0, i64 0, !dbg !19556
  %st_size278 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay277, i32 0, i32 8, !dbg !19556, !ctir !2387
  %202 = load i64, i64* %st_size278, align 8, !dbg !19556, !tbaa !4505, !ctir !30
  %cmp279 = icmp eq i64 %202, 1, !dbg !19556
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !19559

if.then281:                                       ; preds = %do.body275
  call void @abort() #13, !dbg !19556
  unreachable, !dbg !19556

if.end282:                                        ; preds = %do.body275
  br label %do.end283, !dbg !19559

do.end283:                                        ; preds = %if.end282
  br label %if.end284

if.end284:                                        ; preds = %do.end283, %if.end273
  br label %if.end285, !dbg !19560

if.end285:                                        ; preds = %if.end284, %check_for_dir
  %203 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19561, !tbaa !2993
  %fts_info286 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %203, i32 0, i32 15, !dbg !19563, !ctir !2315
  %204 = load i16, i16* %fts_info286, align 8, !dbg !19563, !tbaa !3799, !ctir !34
  %conv287 = zext i16 %204 to i32, !dbg !19561
  %cmp288 = icmp eq i32 %conv287, 1, !dbg !19564
  br i1 %cmp288, label %if.then290, label %if.end304, !dbg !19565

if.then290:                                       ; preds = %if.end285
  %205 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19566, !tbaa !2993
  %fts_level291 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %205, i32 0, i32 12, !dbg !19569, !ctir !2315
  %206 = load i64, i64* %fts_level291, align 8, !dbg !19569, !tbaa !3837, !ctir !539
  %cmp292 = icmp eq i64 %206, 0, !dbg !19570
  br i1 %cmp292, label %if.then294, label %if.end299, !dbg !19571

if.then294:                                       ; preds = %if.then290
  %207 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19572, !tbaa !2993
  %fts_statp295 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %207, i32 0, i32 18, !dbg !19573, !ctir !2315
  %arraydecay296 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp295, i64 0, i64 0, !dbg !19574
  %st_dev297 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay296, i32 0, i32 0, !dbg !19574, !ctir !2387
  %208 = load i64, i64* %st_dev297, align 8, !dbg !19574, !tbaa !3862, !ctir !228
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19575, !tbaa !2993
  %fts_dev298 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 3, !dbg !19576, !ctir !2332
  store i64 %208, i64* %fts_dev298, align 8, !dbg !19577, !tbaa !3909, !ctir !227
  br label %if.end299, !dbg !19575

if.end299:                                        ; preds = %if.then294, %if.then290
  %210 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19578, !tbaa !2993
  %211 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19580, !tbaa !2993
  %call300 = call zeroext i1 @enter_dir(%struct.FTS* %210, %struct._ftsent* %211), !dbg !19581
  br i1 %call300, label %if.end303, label %if.then301, !dbg !19582

if.then301:                                       ; preds = %if.end299
  %call302 = call i32* @__errno_location() #15, !dbg !19583
  store i32 12, i32* %call302, align 4, !dbg !19583, !tbaa !2980, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19585
  br label %return, !dbg !19585

if.end303:                                        ; preds = %if.end299
  br label %if.end304, !dbg !19586

if.end304:                                        ; preds = %if.end303, %if.end285
  %212 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19587, !tbaa !2993
  store %struct._ftsent* %212, %struct._ftsent** %retval, align 8, !dbg !19588
  br label %return, !dbg !19588

if.end305:                                        ; preds = %if.end152
  br label %cd_dot_dot, !dbg !19589

cd_dot_dot:                                       ; preds = %if.end305, %if.end150
  call void @llvm.dbg.label(metadata !19590), !dbg !19591
  %213 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19592, !tbaa !2993
  %fts_parent306 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %213, i32 0, i32 1, !dbg !19593, !ctir !2315
  %214 = load %struct._ftsent*, %struct._ftsent** %fts_parent306, align 8, !dbg !19593, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %214, %struct._ftsent** %p, align 8, !dbg !19594, !tbaa !2993
  %215 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19595, !tbaa !2993
  %216 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19596, !tbaa !2993
  %fts_cur307 = getelementptr inbounds %struct.FTS, %struct.FTS* %216, i32 0, i32 0, !dbg !19597, !ctir !2332
  store %struct._ftsent* %215, %struct._ftsent** %fts_cur307, align 8, !dbg !19598, !tbaa !18338, !ctir !2319
  %217 = load %struct._ftsent*, %struct._ftsent** %tmp, align 8, !dbg !19599, !tbaa !2993
  %218 = bitcast %struct._ftsent* %217 to i8*, !dbg !19599
  call void @free(i8* %218) #12, !dbg !19600
  %219 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19601, !tbaa !2993
  %fts_level308 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %219, i32 0, i32 12, !dbg !19603, !ctir !2315
  %220 = load i64, i64* %fts_level308, align 8, !dbg !19603, !tbaa !3837, !ctir !539
  %cmp309 = icmp eq i64 %220, -1, !dbg !19604
  br i1 %cmp309, label %if.then311, label %if.end314, !dbg !19605

if.then311:                                       ; preds = %cd_dot_dot
  %221 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19606, !tbaa !2993
  %222 = bitcast %struct._ftsent* %221 to i8*, !dbg !19606
  call void @free(i8* %222) #12, !dbg !19608
  %call312 = call i32* @__errno_location() #15, !dbg !19609
  store i32 0, i32* %call312, align 4, !dbg !19609, !tbaa !2980, !ctir !5
  %223 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19610, !tbaa !2993
  %fts_cur313 = getelementptr inbounds %struct.FTS, %struct.FTS* %223, i32 0, i32 0, !dbg !19611, !ctir !2332
  store %struct._ftsent* null, %struct._ftsent** %fts_cur313, align 8, !dbg !19612, !tbaa !18338, !ctir !2319
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19613
  br label %return, !dbg !19613

if.end314:                                        ; preds = %cd_dot_dot
  br label %do.body315, !dbg !19614

do.body315:                                       ; preds = %if.end314
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19615, !tbaa !2993
  %fts_info316 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !19615, !ctir !2315
  %225 = load i16, i16* %fts_info316, align 8, !dbg !19615, !tbaa !3799, !ctir !34
  %conv317 = zext i16 %225 to i32, !dbg !19615
  %cmp318 = icmp ne i32 %conv317, 11, !dbg !19615
  br i1 %cmp318, label %if.end321, label %if.then320, !dbg !19618

if.then320:                                       ; preds = %do.body315
  call void @abort() #13, !dbg !19615
  unreachable, !dbg !19615

if.end321:                                        ; preds = %do.body315
  br label %do.end322, !dbg !19618

do.end322:                                        ; preds = %if.end321
  %226 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19619, !tbaa !2993
  %fts_path323 = getelementptr inbounds %struct.FTS, %struct.FTS* %226, i32 0, i32 4, !dbg !19620, !ctir !2332
  %227 = load i8*, i8** %fts_path323, align 8, !dbg !19620, !tbaa !18389, !ctir !7
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19621, !tbaa !2993
  %fts_pathlen324 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %228, i32 0, i32 10, !dbg !19622, !ctir !2315
  %229 = load i64, i64* %fts_pathlen324, align 8, !dbg !19622, !tbaa !3837, !ctir !52
  %arrayidx325 = getelementptr inbounds i8, i8* %227, i64 %229, !dbg !19619, !ctir !7
  store i8 0, i8* %arrayidx325, align 1, !dbg !19623, !tbaa !3652
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19624, !tbaa !2993
  %fts_level326 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %230, i32 0, i32 12, !dbg !19626, !ctir !2315
  %231 = load i64, i64* %fts_level326, align 8, !dbg !19626, !tbaa !3837, !ctir !539
  %cmp327 = icmp eq i64 %231, 0, !dbg !19627
  br i1 %cmp327, label %if.then329, label %if.else338, !dbg !19628

if.then329:                                       ; preds = %do.end322
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19629, !tbaa !2993
  %call330 = call i32 @restore_initial_cwd(%struct.FTS* %232), !dbg !19632
  %tobool331 = icmp ne i32 %call330, 0, !dbg !19632
  br i1 %tobool331, label %if.then332, label %if.end337, !dbg !19633

if.then332:                                       ; preds = %if.then329
  %call333 = call i32* @__errno_location() #15, !dbg !19634
  %233 = load i32, i32* %call333, align 4, !dbg !19634, !tbaa !2980, !ctir !5
  %234 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19636, !tbaa !2993
  %fts_errno334 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %234, i32 0, i32 8, !dbg !19637, !ctir !2315
  store i32 %233, i32* %fts_errno334, align 8, !dbg !19638, !tbaa !2980, !ctir !5
  %235 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19639, !tbaa !2993
  %fts_options335 = getelementptr inbounds %struct.FTS, %struct.FTS* %235, i32 0, i32 10, !dbg !19639, !ctir !2332
  %236 = load i32, i32* %fts_options335, align 8, !dbg !19639, !tbaa !17900, !ctir !5
  %or336 = or i32 %236, 8192, !dbg !19639
  store i32 %or336, i32* %fts_options335, align 8, !dbg !19639, !tbaa !17900, !ctir !5
  br label %if.end337, !dbg !19640

if.end337:                                        ; preds = %if.then332, %if.then329
  br label %if.end381, !dbg !19641

if.else338:                                       ; preds = %do.end322
  %237 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19642, !tbaa !2993
  %fts_flags339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %237, i32 0, i32 16, !dbg !19644, !ctir !2315
  %238 = load i16, i16* %fts_flags339, align 2, !dbg !19644, !tbaa !3799, !ctir !34
  %conv340 = zext i16 %238 to i32, !dbg !19642
  %and341 = and i32 %conv340, 2, !dbg !19645
  %tobool342 = icmp ne i32 %and341, 0, !dbg !19645
  br i1 %tobool342, label %if.then343, label %if.else365, !dbg !19646

if.then343:                                       ; preds = %if.else338
  %239 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19647, !tbaa !2993
  %fts_options344 = getelementptr inbounds %struct.FTS, %struct.FTS* %239, i32 0, i32 10, !dbg !19647, !ctir !2332
  %240 = load i32, i32* %fts_options344, align 8, !dbg !19647, !tbaa !17900, !ctir !5
  %and345 = and i32 %240, 4, !dbg !19647
  %tobool346 = icmp ne i32 %and345, 0, !dbg !19647
  br i1 %tobool346, label %if.end362, label %land.lhs.true347, !dbg !19647

land.lhs.true347:                                 ; preds = %if.then343
  %241 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19647, !tbaa !2993
  %fts_options348 = getelementptr inbounds %struct.FTS, %struct.FTS* %241, i32 0, i32 10, !dbg !19647, !ctir !2332
  %242 = load i32, i32* %fts_options348, align 8, !dbg !19647, !tbaa !17900, !ctir !5
  %and349 = and i32 %242, 512, !dbg !19647
  %tobool350 = icmp ne i32 %and349, 0, !dbg !19647
  br i1 %tobool350, label %cond.true351, label %cond.false353, !dbg !19650

cond.true351:                                     ; preds = %land.lhs.true347
  %243 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19647, !tbaa !2993
  %244 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19647, !tbaa !2993
  %fts_symfd352 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %244, i32 0, i32 9, !dbg !19647, !ctir !2315
  %245 = load i32, i32* %fts_symfd352, align 4, !dbg !19647, !tbaa !2980, !ctir !5
  call void @cwd_advance_fd(%struct.FTS* %243, i32 %245, i1 zeroext true), !dbg !19647
  br i1 false, label %if.then357, label %if.end362, !dbg !19647

cond.false353:                                    ; preds = %land.lhs.true347
  %246 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19647, !tbaa !2993
  %fts_symfd354 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %246, i32 0, i32 9, !dbg !19647, !ctir !2315
  %247 = load i32, i32* %fts_symfd354, align 4, !dbg !19647, !tbaa !2980, !ctir !5
  %call355 = call i32 @fchdir(i32 %247) #12, !dbg !19647
  %tobool356 = icmp ne i32 %call355, 0, !dbg !19647
  br i1 %tobool356, label %if.then357, label %if.end362, !dbg !19650

if.then357:                                       ; preds = %cond.false353, %cond.true351
  %call358 = call i32* @__errno_location() #15, !dbg !19651
  %248 = load i32, i32* %call358, align 4, !dbg !19651, !tbaa !2980, !ctir !5
  %249 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19653, !tbaa !2993
  %fts_errno359 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %249, i32 0, i32 8, !dbg !19654, !ctir !2315
  store i32 %248, i32* %fts_errno359, align 8, !dbg !19655, !tbaa !2980, !ctir !5
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19656, !tbaa !2993
  %fts_options360 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 10, !dbg !19656, !ctir !2332
  %251 = load i32, i32* %fts_options360, align 8, !dbg !19656, !tbaa !17900, !ctir !5
  %or361 = or i32 %251, 8192, !dbg !19656
  store i32 %or361, i32* %fts_options360, align 8, !dbg !19656, !tbaa !17900, !ctir !5
  br label %if.end362, !dbg !19657

if.end362:                                        ; preds = %if.then357, %cond.false353, %cond.true351, %if.then343
  %252 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19658, !tbaa !2993
  %fts_symfd363 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %252, i32 0, i32 9, !dbg !19659, !ctir !2315
  %253 = load i32, i32* %fts_symfd363, align 4, !dbg !19659, !tbaa !2980, !ctir !5
  %call364 = call i32 @close(i32 %253), !dbg !19660
  br label %if.end380, !dbg !19661

if.else365:                                       ; preds = %if.else338
  %254 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19662, !tbaa !2993
  %fts_flags366 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %254, i32 0, i32 16, !dbg !19664, !ctir !2315
  %255 = load i16, i16* %fts_flags366, align 2, !dbg !19664, !tbaa !3799, !ctir !34
  %conv367 = zext i16 %255 to i32, !dbg !19662
  %and368 = and i32 %conv367, 1, !dbg !19665
  %tobool369 = icmp ne i32 %and368, 0, !dbg !19665
  br i1 %tobool369, label %if.end379, label %land.lhs.true370, !dbg !19666

land.lhs.true370:                                 ; preds = %if.else365
  %256 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19667, !tbaa !2993
  %257 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19668, !tbaa !2993
  %fts_parent371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %257, i32 0, i32 1, !dbg !19669, !ctir !2315
  %258 = load %struct._ftsent*, %struct._ftsent** %fts_parent371, align 8, !dbg !19669, !tbaa !2993, !ctir !2319
  %call372 = call i32 @fts_safe_changedir(%struct.FTS* %256, %struct._ftsent* %258, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)), !dbg !19670
  %tobool373 = icmp ne i32 %call372, 0, !dbg !19670
  br i1 %tobool373, label %if.then374, label %if.end379, !dbg !19671

if.then374:                                       ; preds = %land.lhs.true370
  %call375 = call i32* @__errno_location() #15, !dbg !19672
  %259 = load i32, i32* %call375, align 4, !dbg !19672, !tbaa !2980, !ctir !5
  %260 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19674, !tbaa !2993
  %fts_errno376 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %260, i32 0, i32 8, !dbg !19675, !ctir !2315
  store i32 %259, i32* %fts_errno376, align 8, !dbg !19676, !tbaa !2980, !ctir !5
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19677, !tbaa !2993
  %fts_options377 = getelementptr inbounds %struct.FTS, %struct.FTS* %261, i32 0, i32 10, !dbg !19677, !ctir !2332
  %262 = load i32, i32* %fts_options377, align 8, !dbg !19677, !tbaa !17900, !ctir !5
  %or378 = or i32 %262, 8192, !dbg !19677
  store i32 %or378, i32* %fts_options377, align 8, !dbg !19677, !tbaa !17900, !ctir !5
  br label %if.end379, !dbg !19678

if.end379:                                        ; preds = %if.then374, %land.lhs.true370, %if.else365
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.end362
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.end337
  %263 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19679, !tbaa !2993
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 15, !dbg !19681, !ctir !2315
  %264 = load i16, i16* %fts_info382, align 8, !dbg !19681, !tbaa !3799, !ctir !34
  %conv383 = zext i16 %264 to i32, !dbg !19679
  %cmp384 = icmp ne i32 %conv383, 2, !dbg !19682
  br i1 %cmp384, label %if.then386, label %if.end399, !dbg !19683

if.then386:                                       ; preds = %if.end381
  %265 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19684, !tbaa !2993
  %fts_errno387 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 8, !dbg !19686, !ctir !2315
  %266 = load i32, i32* %fts_errno387, align 8, !dbg !19686, !tbaa !2980, !ctir !5
  %tobool388 = icmp ne i32 %266, 0, !dbg !19684
  %267 = zext i1 %tobool388 to i64, !dbg !19684
  %cond389 = select i1 %tobool388, i32 7, i32 6, !dbg !19684
  %conv390 = trunc i32 %cond389 to i16, !dbg !19684
  %268 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19687, !tbaa !2993
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %268, i32 0, i32 15, !dbg !19688, !ctir !2315
  store i16 %conv390, i16* %fts_info391, align 8, !dbg !19689, !tbaa !3799, !ctir !34
  %269 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19690, !tbaa !2993
  %fts_errno392 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %269, i32 0, i32 8, !dbg !19692, !ctir !2315
  %270 = load i32, i32* %fts_errno392, align 8, !dbg !19692, !tbaa !2980, !ctir !5
  %cmp393 = icmp eq i32 %270, 0, !dbg !19693
  br i1 %cmp393, label %if.then395, label %if.end398, !dbg !19694

if.then395:                                       ; preds = %if.then386
  br label %do.body396, !dbg !19695

do.body396:                                       ; preds = %if.then395
  %271 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19696, !tbaa !2993
  %272 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19696, !tbaa !2993
  call void @leave_dir(%struct.FTS* %271, %struct._ftsent* %272), !dbg !19696
  br label %do.end397, !dbg !19696

do.end397:                                        ; preds = %do.body396
  br label %if.end398, !dbg !19696

if.end398:                                        ; preds = %do.end397, %if.then386
  br label %if.end399, !dbg !19698

if.end399:                                        ; preds = %if.end398, %if.end381
  %273 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19699, !tbaa !2993
  %fts_options400 = getelementptr inbounds %struct.FTS, %struct.FTS* %273, i32 0, i32 10, !dbg !19699, !ctir !2332
  %274 = load i32, i32* %fts_options400, align 8, !dbg !19699, !tbaa !17900, !ctir !5
  %and401 = and i32 %274, 8192, !dbg !19699
  %tobool402 = icmp ne i32 %and401, 0, !dbg !19699
  br i1 %tobool402, label %cond.true403, label %cond.false404, !dbg !19699

cond.true403:                                     ; preds = %if.end399
  br label %cond.end405, !dbg !19699

cond.false404:                                    ; preds = %if.end399
  %275 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !19700, !tbaa !2993
  br label %cond.end405, !dbg !19699

cond.end405:                                      ; preds = %cond.false404, %cond.true403
  %cond406 = phi %struct._ftsent* [ null, %cond.true403 ], [ %275, %cond.false404 ], !dbg !19699
  store %struct._ftsent* %cond406, %struct._ftsent** %retval, align 8, !dbg !19701
  br label %return, !dbg !19701

return:                                           ; preds = %cond.end405, %if.then311, %if.end304, %if.then301, %if.then163, %if.then149, %do.end127, %if.then114, %do.end, %if.then5, %if.then
  %276 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !19702
  ret %struct._ftsent* %276, !dbg !19702
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @leave_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !19703 !ctir !2444 {
entry:
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %st = alloca %struct.stat*, align 8, !ctir !2446
  %obj = alloca %struct.Active_dir, align 8, !ctir !2429
  %found = alloca i8*, align 8, !ctir !47
  %parent = alloca %struct._ftsent*, align 8, !ctir !2414
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !19704, metadata !DIExpression()), !dbg !19705
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !19706, metadata !DIExpression()), !dbg !19707
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !19708, metadata !DIExpression()), !dbg !19709
  %0 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !19710, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 18, !dbg !19711, !ctir !2315
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19710
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !19709, !tbaa !2993
  %1 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19712, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %1, i32 0, i32 10, !dbg !19714, !ctir !2332
  %2 = load i32, i32* %fts_options, align 8, !dbg !19714, !tbaa !17900, !ctir !5
  %and = and i32 %2, 258, !dbg !19715
  %tobool = icmp ne i32 %and, 0, !dbg !19715
  br i1 %tobool, label %if.then, label %if.else, !dbg !19716

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Active_dir* %obj, metadata !19717, metadata !DIExpression()), !dbg !19719
  call void @llvm.dbg.declare(metadata i8** %found, metadata !19720, metadata !DIExpression()), !dbg !19721
  %3 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19722, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 0, !dbg !19723, !ctir !2447
  %4 = load i64, i64* %st_dev, align 8, !dbg !19723, !tbaa !3862, !ctir !228
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 0, !dbg !19724, !ctir !2429
  store i64 %4, i64* %dev, align 8, !dbg !19725, !tbaa !18915, !ctir !227
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19726, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !19727, !ctir !2447
  %6 = load i64, i64* %st_ino, align 8, !dbg !19727, !tbaa !3859, !ctir !225
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %obj, i32 0, i32 1, !dbg !19728, !ctir !2429
  store i64 %6, i64* %ino, align 8, !dbg !19729, !tbaa !18891, !ctir !224
  %7 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19730, !tbaa !2993
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 12, !dbg !19731, !ctir !2332
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !19732
  %8 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !19732, !tbaa !3652, !ctir !2355
  %9 = bitcast %struct.Active_dir* %obj to i8*, !dbg !19733
  %call = call i8* @hash_delete(%struct.hash_table* %8, i8* %9), !dbg !19734
  store i8* %call, i8** %found, align 8, !dbg !19735, !tbaa !2993
  %10 = load i8*, i8** %found, align 8, !dbg !19736, !tbaa !2993
  %tobool1 = icmp ne i8* %10, null, !dbg !19736
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19738

if.then2:                                         ; preds = %if.then
  call void @abort() #13, !dbg !19739
  unreachable, !dbg !19739

if.end:                                           ; preds = %if.then
  %11 = load i8*, i8** %found, align 8, !dbg !19740, !tbaa !2993
  call void @free(i8* %11) #12, !dbg !19741
  br label %if.end38, !dbg !19742

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._ftsent** %parent, metadata !19743, metadata !DIExpression()), !dbg !19745
  %12 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !19746, !tbaa !2993
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %12, i32 0, i32 1, !dbg !19747, !ctir !2315
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !19747, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %13, %struct._ftsent** %parent, align 8, !dbg !19745, !tbaa !2993
  %14 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19748, !tbaa !2993
  %cmp = icmp ne %struct._ftsent* %14, null, !dbg !19750
  br i1 %cmp, label %land.lhs.true, label %if.end37, !dbg !19751

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19752, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 12, !dbg !19753, !ctir !2315
  %16 = load i64, i64* %fts_level, align 8, !dbg !19753, !tbaa !3837, !ctir !539
  %cmp3 = icmp sle i64 0, %16, !dbg !19754
  br i1 %cmp3, label %if.then4, label %if.end37, !dbg !19755

if.then4:                                         ; preds = %land.lhs.true
  br label %do.body, !dbg !19756

do.body:                                          ; preds = %if.then4
  %17 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19757, !tbaa !2993
  %fts_cycle5 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 12, !dbg !19757, !ctir !2332
  %state = bitcast %union.anon* %fts_cycle5 to %struct.cycle_check_state**, !dbg !19757
  %18 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !19757, !tbaa !3652, !ctir !2355
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %18, i32 0, i32 1, !dbg !19757, !ctir !2360
  %19 = load i64, i64* %chdir_counter, align 8, !dbg !19757, !tbaa !19760, !ctir !459
  %cmp6 = icmp eq i64 %19, 0, !dbg !19757
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !19762

if.then7:                                         ; preds = %do.body
  call void @abort() #13, !dbg !19757
  unreachable, !dbg !19757

if.end8:                                          ; preds = %do.body
  %20 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19763, !tbaa !2993
  %fts_cycle9 = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 12, !dbg !19763, !ctir !2332
  %state10 = bitcast %union.anon* %fts_cycle9 to %struct.cycle_check_state**, !dbg !19763
  %21 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state10, align 8, !dbg !19763, !tbaa !3652, !ctir !2355
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %21, i32 0, i32 0, !dbg !19763, !ctir !2360
  %st_ino11 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !19763, !ctir !2364
  %22 = load i64, i64* %st_ino11, align 8, !dbg !19763, !tbaa !19765, !ctir !224
  %23 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19763, !tbaa !2993
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !19763, !ctir !2447
  %24 = load i64, i64* %st_ino12, align 8, !dbg !19763, !tbaa !3859, !ctir !225
  %cmp13 = icmp eq i64 %22, %24, !dbg !19763
  br i1 %cmp13, label %land.lhs.true14, label %if.end36, !dbg !19763

land.lhs.true14:                                  ; preds = %if.end8
  %25 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19763, !tbaa !2993
  %fts_cycle15 = getelementptr inbounds %struct.FTS, %struct.FTS* %25, i32 0, i32 12, !dbg !19763, !ctir !2332
  %state16 = bitcast %union.anon* %fts_cycle15 to %struct.cycle_check_state**, !dbg !19763
  %26 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state16, align 8, !dbg !19763, !tbaa !3652, !ctir !2355
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %26, i32 0, i32 0, !dbg !19763, !ctir !2360
  %st_dev18 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino17, i32 0, i32 1, !dbg !19763, !ctir !2364
  %27 = load i64, i64* %st_dev18, align 8, !dbg !19763, !tbaa !19766, !ctir !227
  %28 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !19763, !tbaa !2993
  %st_dev19 = getelementptr inbounds %struct.stat, %struct.stat* %28, i32 0, i32 0, !dbg !19763, !ctir !2447
  %29 = load i64, i64* %st_dev19, align 8, !dbg !19763, !tbaa !3862, !ctir !228
  %cmp20 = icmp eq i64 %27, %29, !dbg !19763
  br i1 %cmp20, label %if.then21, label %if.end36, !dbg !19762

if.then21:                                        ; preds = %land.lhs.true14
  %30 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19767, !tbaa !2993
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %30, i32 0, i32 18, !dbg !19767, !ctir !2315
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !19767
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !19767, !ctir !2387
  %31 = load i64, i64* %st_dev24, align 8, !dbg !19767, !tbaa !3862, !ctir !228
  %32 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19767, !tbaa !2993
  %fts_cycle25 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 12, !dbg !19767, !ctir !2332
  %state26 = bitcast %union.anon* %fts_cycle25 to %struct.cycle_check_state**, !dbg !19767
  %33 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state26, align 8, !dbg !19767, !tbaa !3652, !ctir !2355
  %dev_ino27 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %33, i32 0, i32 0, !dbg !19767, !ctir !2360
  %st_dev28 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino27, i32 0, i32 1, !dbg !19767, !ctir !2364
  store i64 %31, i64* %st_dev28, align 8, !dbg !19767, !tbaa !19766, !ctir !227
  %34 = load %struct._ftsent*, %struct._ftsent** %parent, align 8, !dbg !19767, !tbaa !2993
  %fts_statp29 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 18, !dbg !19767, !ctir !2315
  %arraydecay30 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp29, i64 0, i64 0, !dbg !19767
  %st_ino31 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay30, i32 0, i32 1, !dbg !19767, !ctir !2387
  %35 = load i64, i64* %st_ino31, align 8, !dbg !19767, !tbaa !3859, !ctir !225
  %36 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !19767, !tbaa !2993
  %fts_cycle32 = getelementptr inbounds %struct.FTS, %struct.FTS* %36, i32 0, i32 12, !dbg !19767, !ctir !2332
  %state33 = bitcast %union.anon* %fts_cycle32 to %struct.cycle_check_state**, !dbg !19767
  %37 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state33, align 8, !dbg !19767, !tbaa !3652, !ctir !2355
  %dev_ino34 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %37, i32 0, i32 0, !dbg !19767, !ctir !2360
  %st_ino35 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino34, i32 0, i32 0, !dbg !19767, !ctir !2364
  store i64 %35, i64* %st_ino35, align 8, !dbg !19767, !tbaa !19765, !ctir !224
  br label %if.end36, !dbg !19767

if.end36:                                         ; preds = %if.then21, %land.lhs.true14, %if.end8
  br label %do.end, !dbg !19762

do.end:                                           ; preds = %if.end36
  br label %if.end37, !dbg !19762

if.end37:                                         ; preds = %do.end, %land.lhs.true, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end
  ret void, !dbg !19769
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_safe_changedir(%struct.FTS* %sp, %struct._ftsent* %p, i32 %fd, i8* %dir) #4 !dbg !19770 !ctir !2494 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %fd.addr = alloca i32, align 4, !ctir !5
  %dir.addr = alloca i8*, align 8, !ctir !112
  %ret = alloca i32, align 4, !ctir !5
  %is_dotdot = alloca i8, align 1, !ctir !117
  %newfd = alloca i32, align 4, !ctir !5
  %parent_fd = alloca i32, align 4, !ctir !5
  %sb = alloca %struct.stat, align 8, !ctir !2387
  %oerrno = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19771, metadata !DIExpression()), !dbg !19772
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !19773, metadata !DIExpression()), !dbg !19774
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !19775, metadata !DIExpression()), !dbg !19776
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !19777, metadata !DIExpression()), !dbg !19778
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19779, metadata !DIExpression()), !dbg !19780
  call void @llvm.dbg.declare(metadata i8* %is_dotdot, metadata !19781, metadata !DIExpression()), !dbg !19782
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !19783, !tbaa !2993
  %tobool = icmp ne i8* %0, null, !dbg !19783
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19784

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !19785, !tbaa !2993
  %call = call i32 @strcmp(i8* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)) #14, !dbg !19785
  %cmp = icmp eq i32 %call, 0, !dbg !19785
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !19786
  %frombool = zext i1 %2 to i8, !dbg !19782
  store i8 %frombool, i8* %is_dotdot, align 1, !dbg !19782, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %newfd, metadata !19787, metadata !DIExpression()), !dbg !19788
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19789, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 10, !dbg !19789, !ctir !2332
  %4 = load i32, i32* %fts_options, align 8, !dbg !19789, !tbaa !17900, !ctir !5
  %and = and i32 %4, 4, !dbg !19789
  %tobool1 = icmp ne i32 %and, 0, !dbg !19789
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !19791

if.then:                                          ; preds = %land.end
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19792, !tbaa !2993
  %fts_options2 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !19792, !ctir !2332
  %6 = load i32, i32* %fts_options2, align 8, !dbg !19792, !tbaa !17900, !ctir !5
  %and3 = and i32 %6, 512, !dbg !19792
  %tobool4 = icmp ne i32 %and3, 0, !dbg !19792
  br i1 %tobool4, label %land.lhs.true, label %if.end, !dbg !19795

land.lhs.true:                                    ; preds = %if.then
  %7 = load i32, i32* %fd.addr, align 4, !dbg !19796, !tbaa !2980
  %cmp5 = icmp sle i32 0, %7, !dbg !19797
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19798

if.then6:                                         ; preds = %land.lhs.true
  %8 = load i32, i32* %fd.addr, align 4, !dbg !19799, !tbaa !2980
  %call7 = call i32 @close(i32 %8), !dbg !19800
  br label %if.end, !dbg !19800

if.end:                                           ; preds = %if.then6, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !19801
  br label %return, !dbg !19801

if.end8:                                          ; preds = %land.end
  %9 = load i32, i32* %fd.addr, align 4, !dbg !19802, !tbaa !2980
  %cmp9 = icmp slt i32 %9, 0, !dbg !19804
  br i1 %cmp9, label %land.lhs.true10, label %if.end25, !dbg !19805

land.lhs.true10:                                  ; preds = %if.end8
  %10 = load i8, i8* %is_dotdot, align 1, !dbg !19806, !tbaa !3104
  %tobool11 = trunc i8 %10 to i1, !dbg !19806
  br i1 %tobool11, label %land.lhs.true12, label %if.end25, !dbg !19807

land.lhs.true12:                                  ; preds = %land.lhs.true10
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19808, !tbaa !2993
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 10, !dbg !19808, !ctir !2332
  %12 = load i32, i32* %fts_options13, align 8, !dbg !19808, !tbaa !17900, !ctir !5
  %and14 = and i32 %12, 512, !dbg !19808
  %tobool15 = icmp ne i32 %and14, 0, !dbg !19808
  br i1 %tobool15, label %if.then16, label %if.end25, !dbg !19809

if.then16:                                        ; preds = %land.lhs.true12
  %13 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19810, !tbaa !2993
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 13, !dbg !19813, !ctir !2332
  %call17 = call zeroext i1 @i_ring_empty(%struct.I_ring* %fts_fd_ring) #14, !dbg !19814
  br i1 %call17, label %if.end24, label %if.then18, !dbg !19815

if.then18:                                        ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i32* %parent_fd, metadata !19816, metadata !DIExpression()), !dbg !19818
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19819, !tbaa !2993
  %fts_fd_ring19 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !19820, !ctir !2332
  %call20 = call i32 @i_ring_pop(%struct.I_ring* %fts_fd_ring19), !dbg !19821
  store i32 %call20, i32* %parent_fd, align 4, !dbg !19822, !tbaa !2980
  %15 = load i32, i32* %parent_fd, align 4, !dbg !19823, !tbaa !2980
  %cmp21 = icmp sle i32 0, %15, !dbg !19825
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !19826

if.then22:                                        ; preds = %if.then18
  %16 = load i32, i32* %parent_fd, align 4, !dbg !19827, !tbaa !2980
  store i32 %16, i32* %fd.addr, align 4, !dbg !19829, !tbaa !2980
  store i8* null, i8** %dir.addr, align 8, !dbg !19830, !tbaa !2993
  br label %if.end23, !dbg !19831

if.end23:                                         ; preds = %if.then22, %if.then18
  br label %if.end24, !dbg !19832

if.end24:                                         ; preds = %if.end23, %if.then16
  br label %if.end25, !dbg !19833

if.end25:                                         ; preds = %if.end24, %land.lhs.true12, %land.lhs.true10, %if.end8
  %17 = load i32, i32* %fd.addr, align 4, !dbg !19834, !tbaa !2980
  store i32 %17, i32* %newfd, align 4, !dbg !19835, !tbaa !2980
  %18 = load i32, i32* %fd.addr, align 4, !dbg !19836, !tbaa !2980
  %cmp26 = icmp slt i32 %18, 0, !dbg !19838
  br i1 %cmp26, label %land.lhs.true27, label %if.end31, !dbg !19839

land.lhs.true27:                                  ; preds = %if.end25
  %19 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19840, !tbaa !2993
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !19841, !tbaa !2993
  %call28 = call i32 @diropen(%struct.FTS* %19, i8* %20), !dbg !19842
  store i32 %call28, i32* %newfd, align 4, !dbg !19843, !tbaa !2980
  %cmp29 = icmp slt i32 %call28, 0, !dbg !19844
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !19845

if.then30:                                        ; preds = %land.lhs.true27
  store i32 -1, i32* %retval, align 4, !dbg !19846
  br label %return, !dbg !19846

if.end31:                                         ; preds = %land.lhs.true27, %if.end25
  %21 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19847, !tbaa !2993
  %fts_options32 = getelementptr inbounds %struct.FTS, %struct.FTS* %21, i32 0, i32 10, !dbg !19847, !ctir !2332
  %22 = load i32, i32* %fts_options32, align 8, !dbg !19847, !tbaa !17900, !ctir !5
  %and33 = and i32 %22, 2, !dbg !19847
  %tobool34 = icmp ne i32 %and33, 0, !dbg !19847
  br i1 %tobool34, label %if.then39, label %lor.lhs.false, !dbg !19849

lor.lhs.false:                                    ; preds = %if.end31
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !19850, !tbaa !2993
  %tobool35 = icmp ne i8* %23, null, !dbg !19850
  br i1 %tobool35, label %land.lhs.true36, label %if.end54, !dbg !19851

land.lhs.true36:                                  ; preds = %lor.lhs.false
  %24 = load i8*, i8** %dir.addr, align 8, !dbg !19852, !tbaa !2993
  %call37 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)) #14, !dbg !19852
  %cmp38 = icmp eq i32 %call37, 0, !dbg !19852
  br i1 %cmp38, label %if.then39, label %if.end54, !dbg !19853

if.then39:                                        ; preds = %land.lhs.true36, %if.end31
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !19854, metadata !DIExpression()), !dbg !19856
  %25 = load i32, i32* %newfd, align 4, !dbg !19857, !tbaa !2980
  %call40 = call i32 @fstat(i32 %25, %struct.stat* %sb) #12, !dbg !19859
  %tobool41 = icmp ne i32 %call40, 0, !dbg !19859
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !19860

if.then42:                                        ; preds = %if.then39
  store i32 -1, i32* %ret, align 4, !dbg !19861, !tbaa !2980
  br label %bail, !dbg !19863

if.end43:                                         ; preds = %if.then39
  %26 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19864, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 18, !dbg !19866, !ctir !2315
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !19867
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !19867, !ctir !2387
  %27 = load i64, i64* %st_dev, align 8, !dbg !19867, !tbaa !3862, !ctir !228
  %st_dev44 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 0, !dbg !19868, !ctir !2387
  %28 = load i64, i64* %st_dev44, align 8, !dbg !19868, !tbaa !3862, !ctir !228
  %cmp45 = icmp ne i64 %27, %28, !dbg !19869
  br i1 %cmp45, label %if.then51, label %lor.lhs.false46, !dbg !19870

lor.lhs.false46:                                  ; preds = %if.end43
  %29 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !19871, !tbaa !2993
  %fts_statp47 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !19872, !ctir !2315
  %arraydecay48 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp47, i64 0, i64 0, !dbg !19873
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay48, i32 0, i32 1, !dbg !19873, !ctir !2387
  %30 = load i64, i64* %st_ino, align 8, !dbg !19873, !tbaa !3859, !ctir !225
  %st_ino49 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 1, !dbg !19874, !ctir !2387
  %31 = load i64, i64* %st_ino49, align 8, !dbg !19874, !tbaa !3859, !ctir !225
  %cmp50 = icmp ne i64 %30, %31, !dbg !19875
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !19876

if.then51:                                        ; preds = %lor.lhs.false46, %if.end43
  %call52 = call i32* @__errno_location() #15, !dbg !19877
  store i32 2, i32* %call52, align 4, !dbg !19877, !tbaa !2980, !ctir !5
  store i32 -1, i32* %ret, align 4, !dbg !19879, !tbaa !2980
  br label %bail, !dbg !19880

if.end53:                                         ; preds = %lor.lhs.false46
  br label %if.end54, !dbg !19881

if.end54:                                         ; preds = %if.end53, %land.lhs.true36, %lor.lhs.false
  %32 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19882, !tbaa !2993
  %fts_options55 = getelementptr inbounds %struct.FTS, %struct.FTS* %32, i32 0, i32 10, !dbg !19882, !ctir !2332
  %33 = load i32, i32* %fts_options55, align 8, !dbg !19882, !tbaa !17900, !ctir !5
  %and56 = and i32 %33, 512, !dbg !19882
  %tobool57 = icmp ne i32 %and56, 0, !dbg !19882
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !19884

if.then58:                                        ; preds = %if.end54
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19885, !tbaa !2993
  %35 = load i32, i32* %newfd, align 4, !dbg !19887, !tbaa !2980
  %36 = load i8, i8* %is_dotdot, align 1, !dbg !19888, !tbaa !3104
  %tobool59 = trunc i8 %36 to i1, !dbg !19888
  %lnot = xor i1 %tobool59, true, !dbg !19889
  call void @cwd_advance_fd(%struct.FTS* %34, i32 %35, i1 zeroext %lnot), !dbg !19890
  store i32 0, i32* %retval, align 4, !dbg !19891
  br label %return, !dbg !19891

if.end60:                                         ; preds = %if.end54
  %37 = load i32, i32* %newfd, align 4, !dbg !19892, !tbaa !2980
  %call61 = call i32 @fchdir(i32 %37) #12, !dbg !19893
  store i32 %call61, i32* %ret, align 4, !dbg !19894, !tbaa !2980
  br label %bail, !dbg !19895

bail:                                             ; preds = %if.end60, %if.then51, %if.then42
  call void @llvm.dbg.label(metadata !19896), !dbg !19897
  %38 = load i32, i32* %fd.addr, align 4, !dbg !19898, !tbaa !2980
  %cmp62 = icmp slt i32 %38, 0, !dbg !19900
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !19901

if.then63:                                        ; preds = %bail
  call void @llvm.dbg.declare(metadata i32* %oerrno, metadata !19902, metadata !DIExpression()), !dbg !19904
  %call64 = call i32* @__errno_location() #15, !dbg !19905
  %39 = load i32, i32* %call64, align 4, !dbg !19905, !tbaa !2980, !ctir !5
  store i32 %39, i32* %oerrno, align 4, !dbg !19904, !tbaa !2980
  %40 = load i32, i32* %newfd, align 4, !dbg !19906, !tbaa !2980
  %call65 = call i32 @close(i32 %40), !dbg !19907
  %41 = load i32, i32* %oerrno, align 4, !dbg !19908, !tbaa !2980
  %call66 = call i32* @__errno_location() #15, !dbg !19908
  store i32 %41, i32* %call66, align 4, !dbg !19908, !tbaa !2980, !ctir !5
  br label %if.end67, !dbg !19909

if.end67:                                         ; preds = %if.then63, %bail
  %42 = load i32, i32* %ret, align 4, !dbg !19910, !tbaa !2980
  store i32 %42, i32* %retval, align 4, !dbg !19911
  br label %return, !dbg !19911

return:                                           ; preds = %if.end67, %if.then58, %if.then30, %if.end
  %43 = load i32, i32* %retval, align 4, !dbg !19912
  ret i32 %43, !dbg !19912
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct._ftsent* @fts_build(%struct.FTS* %sp, i32 %type) #4 !dbg !19913 !ctir !2421 {
entry:
  %retval = alloca %struct._ftsent*, align 8, !ctir !2414
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %type.addr = alloca i32, align 4, !ctir !5
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %head = alloca %struct._ftsent*, align 8, !ctir !2414
  %nitems = alloca i64, align 8, !ctir !52
  %tail = alloca %struct._ftsent*, align 8, !ctir !2414
  %oldaddr = alloca i8*, align 8, !ctir !47
  %saved_errno = alloca i32, align 4, !ctir !5
  %descend = alloca i8, align 1, !ctir !117
  %doadjust = alloca i8, align 1, !ctir !117
  %level = alloca i64, align 8, !ctir !539
  %len = alloca i64, align 8, !ctir !52
  %maxlen = alloca i64, align 8, !ctir !52
  %new_len = alloca i64, align 8, !ctir !52
  %cp = alloca i8*, align 8, !ctir !7
  %dir_fd = alloca i32, align 4, !ctir !5
  %cur = alloca %struct._ftsent*, align 8, !ctir !2414
  %continue_readdir = alloca i8, align 1, !ctir !117
  %sort_by_inode = alloca i8, align 1, !ctir !117
  %max_entries = alloca i64, align 8, !ctir !52
  %dp = alloca %struct.__dirstream*, align 8, !ctir !580
  %d_namelen = alloca i64, align 8, !ctir !52
  %dp159 = alloca %struct.dirent*, align 8, !ctir !2468
  %skip_stat = alloca i8, align 1, !ctir !117
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !19914, metadata !DIExpression()), !dbg !19915
  store i32 %type, i32* %type.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !19916, metadata !DIExpression()), !dbg !19917
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !19918, metadata !DIExpression()), !dbg !19919
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head, metadata !19920, metadata !DIExpression()), !dbg !19921
  call void @llvm.dbg.declare(metadata i64* %nitems, metadata !19922, metadata !DIExpression()), !dbg !19923
  call void @llvm.dbg.declare(metadata %struct._ftsent** %tail, metadata !19924, metadata !DIExpression()), !dbg !19925
  call void @llvm.dbg.declare(metadata i8** %oldaddr, metadata !19926, metadata !DIExpression()), !dbg !19927
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19928, metadata !DIExpression()), !dbg !19929
  call void @llvm.dbg.declare(metadata i8* %descend, metadata !19930, metadata !DIExpression()), !dbg !19931
  call void @llvm.dbg.declare(metadata i8* %doadjust, metadata !19932, metadata !DIExpression()), !dbg !19933
  call void @llvm.dbg.declare(metadata i64* %level, metadata !19934, metadata !DIExpression()), !dbg !19935
  call void @llvm.dbg.declare(metadata i64* %len, metadata !19936, metadata !DIExpression()), !dbg !19937
  call void @llvm.dbg.declare(metadata i64* %maxlen, metadata !19938, metadata !DIExpression()), !dbg !19939
  call void @llvm.dbg.declare(metadata i64* %new_len, metadata !19940, metadata !DIExpression()), !dbg !19941
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !19942, metadata !DIExpression()), !dbg !19943
  call void @llvm.dbg.declare(metadata i32* %dir_fd, metadata !19944, metadata !DIExpression()), !dbg !19945
  call void @llvm.dbg.declare(metadata %struct._ftsent** %cur, metadata !19946, metadata !DIExpression()), !dbg !19947
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19948, !tbaa !2993
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 0, !dbg !19949, !ctir !2332
  %1 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !19949, !tbaa !18338, !ctir !2319
  store %struct._ftsent* %1, %struct._ftsent** %cur, align 8, !dbg !19947, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %continue_readdir, metadata !19950, metadata !DIExpression()), !dbg !19951
  %2 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19952, !tbaa !2993
  %fts_dirp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 3, !dbg !19953, !ctir !2315
  %3 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp, align 8, !dbg !19953, !tbaa !2993, !ctir !580
  %tobool = icmp ne %struct.__dirstream* %3, null, !dbg !19954
  %lnot = xor i1 %tobool, true, !dbg !19954
  %lnot1 = xor i1 %lnot, true, !dbg !19955
  %frombool = zext i1 %lnot1 to i8, !dbg !19951
  store i8 %frombool, i8* %continue_readdir, align 1, !dbg !19951, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %sort_by_inode, metadata !19956, metadata !DIExpression()), !dbg !19957
  store i8 0, i8* %sort_by_inode, align 1, !dbg !19957, !tbaa !3104
  call void @llvm.dbg.declare(metadata i64* %max_entries, metadata !19958, metadata !DIExpression()), !dbg !19959
  %4 = load i8, i8* %continue_readdir, align 1, !dbg !19960, !tbaa !3104
  %tobool2 = trunc i8 %4 to i1, !dbg !19960
  br i1 %tobool2, label %if.then, label %if.else, !dbg !19962

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !19963, metadata !DIExpression()), !dbg !19965
  %5 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19966, !tbaa !2993
  %fts_dirp3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 3, !dbg !19967, !ctir !2315
  %6 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp3, align 8, !dbg !19967, !tbaa !2993, !ctir !580
  store %struct.__dirstream* %6, %struct.__dirstream** %dp, align 8, !dbg !19965, !tbaa !2993
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19968, !tbaa !2993
  %call = call i32 @dirfd(%struct.__dirstream* %7) #12, !dbg !19969
  store i32 %call, i32* %dir_fd, align 4, !dbg !19970, !tbaa !2980
  %8 = load i32, i32* %dir_fd, align 4, !dbg !19971, !tbaa !2980
  %cmp = icmp slt i32 %8, 0, !dbg !19973
  br i1 %cmp, label %if.then4, label %if.end11, !dbg !19974

if.then4:                                         ; preds = %if.then
  br label %do.body, !dbg !19975

do.body:                                          ; preds = %if.then4
  %9 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19977, !tbaa !2993
  %fts_dirp5 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 3, !dbg !19977, !ctir !2315
  %10 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp5, align 8, !dbg !19977, !tbaa !2993, !ctir !580
  %call6 = call i32 @closedir(%struct.__dirstream* %10), !dbg !19977
  %11 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19977, !tbaa !2993
  %fts_dirp7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 3, !dbg !19977, !ctir !2315
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp7, align 8, !dbg !19977, !tbaa !2993, !ctir !580
  br label %do.end, !dbg !19977

do.end:                                           ; preds = %do.body
  %12 = load i32, i32* %type.addr, align 4, !dbg !19979, !tbaa !2980
  %cmp8 = icmp eq i32 %12, 3, !dbg !19981
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !19982

if.then9:                                         ; preds = %do.end
  %13 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19983, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 15, !dbg !19985, !ctir !2315
  store i16 4, i16* %fts_info, align 8, !dbg !19986, !tbaa !3799, !ctir !34
  %call10 = call i32* @__errno_location() #15, !dbg !19987
  %14 = load i32, i32* %call10, align 4, !dbg !19987, !tbaa !2980, !ctir !5
  %15 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19988, !tbaa !2993
  %fts_errno = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 8, !dbg !19989, !ctir !2315
  store i32 %14, i32* %fts_errno, align 8, !dbg !19990, !tbaa !2980, !ctir !5
  br label %if.end, !dbg !19991

if.end:                                           ; preds = %if.then9, %do.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !19992
  br label %return, !dbg !19992

if.end11:                                         ; preds = %if.then
  br label %if.end58, !dbg !19993

if.else:                                          ; preds = %entry
  %16 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19994, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %16, i32 0, i32 10, !dbg !19994, !ctir !2332
  %17 = load i32, i32* %fts_options, align 8, !dbg !19994, !tbaa !17900, !ctir !5
  %and = and i32 %17, 4, !dbg !19994
  %tobool12 = icmp ne i32 %and, 0, !dbg !19994
  br i1 %tobool12, label %cond.false, label %land.lhs.true, !dbg !19994

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19994, !tbaa !2993
  %fts_options13 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 10, !dbg !19994, !ctir !2332
  %19 = load i32, i32* %fts_options13, align 8, !dbg !19994, !tbaa !17900, !ctir !5
  %and14 = and i32 %19, 512, !dbg !19994
  %tobool15 = icmp ne i32 %and14, 0, !dbg !19994
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !19994

cond.true:                                        ; preds = %land.lhs.true
  %20 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19994, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %20, i32 0, i32 6, !dbg !19994, !ctir !2332
  %21 = load i32, i32* %fts_cwd_fd, align 4, !dbg !19994, !tbaa !3812, !ctir !5
  br label %cond.end, !dbg !19994

cond.false:                                       ; preds = %land.lhs.true, %if.else
  br label %cond.end, !dbg !19994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ -100, %cond.false ], !dbg !19994
  %22 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19994, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 6, !dbg !19994, !ctir !2315
  %23 = load i8*, i8** %fts_accpath, align 8, !dbg !19994, !tbaa !2993, !ctir !7
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19994, !tbaa !2993
  %fts_options16 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !19994, !ctir !2332
  %25 = load i32, i32* %fts_options16, align 8, !dbg !19994, !tbaa !17900, !ctir !5
  %and17 = and i32 %25, 16, !dbg !19994
  %tobool18 = icmp ne i32 %and17, 0, !dbg !19994
  br i1 %tobool18, label %land.rhs, label %land.end25, !dbg !19994

land.rhs:                                         ; preds = %cond.end
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !19994, !tbaa !2993
  %fts_options19 = getelementptr inbounds %struct.FTS, %struct.FTS* %26, i32 0, i32 10, !dbg !19994, !ctir !2332
  %27 = load i32, i32* %fts_options19, align 8, !dbg !19994, !tbaa !17900, !ctir !5
  %and20 = and i32 %27, 1, !dbg !19994
  %tobool21 = icmp ne i32 %and20, 0, !dbg !19994
  br i1 %tobool21, label %land.rhs22, label %land.end, !dbg !19994

land.rhs22:                                       ; preds = %land.rhs
  %28 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19994, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %28, i32 0, i32 12, !dbg !19994, !ctir !2315
  %29 = load i64, i64* %fts_level, align 8, !dbg !19994, !tbaa !3837, !ctir !539
  %cmp23 = icmp eq i64 %29, 0, !dbg !19994
  br label %land.end

land.end:                                         ; preds = %land.rhs22, %land.rhs
  %30 = phi i1 [ false, %land.rhs ], [ %cmp23, %land.rhs22 ], !dbg !19997
  %lnot24 = xor i1 %30, true, !dbg !19994
  br label %land.end25

land.end25:                                       ; preds = %land.end, %cond.end
  %31 = phi i1 [ false, %cond.end ], [ %lnot24, %land.end ], !dbg !19997
  %32 = zext i1 %31 to i64, !dbg !19994
  %cond26 = select i1 %31, i32 131072, i32 0, !dbg !19994
  %call27 = call %struct.__dirstream* @opendirat(i32 %cond, i8* %23, i32 %cond26, i32* %dir_fd), !dbg !19994
  %33 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !19998, !tbaa !2993
  %fts_dirp28 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %33, i32 0, i32 3, !dbg !19999, !ctir !2315
  store %struct.__dirstream* %call27, %struct.__dirstream** %fts_dirp28, align 8, !dbg !20000, !tbaa !2993, !ctir !580
  %cmp29 = icmp eq %struct.__dirstream* %call27, null, !dbg !20001
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !20002

if.then30:                                        ; preds = %land.end25
  %34 = load i32, i32* %type.addr, align 4, !dbg !20003, !tbaa !2980
  %cmp31 = icmp eq i32 %34, 3, !dbg !20006
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !20007

if.then32:                                        ; preds = %if.then30
  %35 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20008, !tbaa !2993
  %fts_info33 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %35, i32 0, i32 15, !dbg !20010, !ctir !2315
  store i16 4, i16* %fts_info33, align 8, !dbg !20011, !tbaa !3799, !ctir !34
  %call34 = call i32* @__errno_location() #15, !dbg !20012
  %36 = load i32, i32* %call34, align 4, !dbg !20012, !tbaa !2980, !ctir !5
  %37 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20013, !tbaa !2993
  %fts_errno35 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %37, i32 0, i32 8, !dbg !20014, !ctir !2315
  store i32 %36, i32* %fts_errno35, align 8, !dbg !20015, !tbaa !2980, !ctir !5
  br label %if.end36, !dbg !20016

if.end36:                                         ; preds = %if.then32, %if.then30
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20017
  br label %return, !dbg !20017

if.end37:                                         ; preds = %land.end25
  %38 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20018, !tbaa !2993
  %fts_info38 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %38, i32 0, i32 15, !dbg !20020, !ctir !2315
  %39 = load i16, i16* %fts_info38, align 8, !dbg !20020, !tbaa !3799, !ctir !34
  %conv = zext i16 %39 to i32, !dbg !20018
  %cmp39 = icmp eq i32 %conv, 11, !dbg !20021
  br i1 %cmp39, label %if.then41, label %if.else44, !dbg !20022

if.then41:                                        ; preds = %if.end37
  %40 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20023, !tbaa !2993
  %41 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20024, !tbaa !2993
  %call42 = call zeroext i16 @fts_stat(%struct.FTS* %40, %struct._ftsent* %41, i1 zeroext false), !dbg !20025
  %42 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20026, !tbaa !2993
  %fts_info43 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %42, i32 0, i32 15, !dbg !20027, !ctir !2315
  store i16 %call42, i16* %fts_info43, align 8, !dbg !20028, !tbaa !3799, !ctir !34
  br label %if.end57, !dbg !20026

if.else44:                                        ; preds = %if.end37
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20029, !tbaa !2993
  %fts_options45 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 10, !dbg !20031, !ctir !2332
  %44 = load i32, i32* %fts_options45, align 8, !dbg !20031, !tbaa !17900, !ctir !5
  %and46 = and i32 %44, 256, !dbg !20032
  %tobool47 = icmp ne i32 %and46, 0, !dbg !20032
  br i1 %tobool47, label %if.then48, label %if.end56, !dbg !20033

if.then48:                                        ; preds = %if.else44
  br label %do.body49, !dbg !20034

do.body49:                                        ; preds = %if.then48
  %45 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20036, !tbaa !2993
  %46 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20036, !tbaa !2993
  call void @leave_dir(%struct.FTS* %45, %struct._ftsent* %46), !dbg !20036
  br label %do.end50, !dbg !20036

do.end50:                                         ; preds = %do.body49
  %47 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20038, !tbaa !2993
  %48 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20039, !tbaa !2993
  %call51 = call zeroext i16 @fts_stat(%struct.FTS* %47, %struct._ftsent* %48, i1 zeroext false), !dbg !20040
  %49 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20041, !tbaa !2993
  %50 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20043, !tbaa !2993
  %call52 = call zeroext i1 @enter_dir(%struct.FTS* %49, %struct._ftsent* %50), !dbg !20044
  br i1 %call52, label %if.end55, label %if.then53, !dbg !20045

if.then53:                                        ; preds = %do.end50
  %call54 = call i32* @__errno_location() #15, !dbg !20046
  store i32 12, i32* %call54, align 4, !dbg !20046, !tbaa !2980, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20048
  br label %return, !dbg !20048

if.end55:                                         ; preds = %do.end50
  br label %if.end56, !dbg !20049

if.end56:                                         ; preds = %if.end55, %if.else44
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then41
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end11
  %51 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20050, !tbaa !2993
  %fts_compar = getelementptr inbounds %struct.FTS, %struct.FTS* %51, i32 0, i32 9, !dbg !20051, !ctir !2332
  %52 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar, align 8, !dbg !20051, !tbaa !18127, !ctir !2346
  %tobool59 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %52, null, !dbg !20050
  %53 = zext i1 %tobool59 to i64, !dbg !20050
  %cond60 = select i1 %tobool59, i64 -1, i64 100000, !dbg !20050
  store i64 %cond60, i64* %max_entries, align 8, !dbg !20052, !tbaa !3837
  %54 = load i8, i8* %continue_readdir, align 1, !dbg !20053, !tbaa !3104
  %tobool61 = trunc i8 %54 to i1, !dbg !20053
  br i1 %tobool61, label %if.then62, label %if.else63, !dbg !20055

if.then62:                                        ; preds = %if.end58
  store i8 1, i8* %descend, align 1, !dbg !20056, !tbaa !3104
  br label %if.end135, !dbg !20058

if.else63:                                        ; preds = %if.end58
  %55 = load i32, i32* %type.addr, align 4, !dbg !20059, !tbaa !2980
  %cmp64 = icmp ne i32 %55, 2, !dbg !20061
  br i1 %cmp64, label %land.rhs66, label %land.end87, !dbg !20062

land.rhs66:                                       ; preds = %if.else63
  %56 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20063, !tbaa !2993
  %fts_options67 = getelementptr inbounds %struct.FTS, %struct.FTS* %56, i32 0, i32 10, !dbg !20063, !ctir !2332
  %57 = load i32, i32* %fts_options67, align 8, !dbg !20063, !tbaa !17900, !ctir !5
  %and68 = and i32 %57, 8, !dbg !20063
  %tobool69 = icmp ne i32 %and68, 0, !dbg !20063
  br i1 %tobool69, label %land.lhs.true70, label %land.end85, !dbg !20064

land.lhs.true70:                                  ; preds = %land.rhs66
  %58 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20065, !tbaa !2993
  %fts_options71 = getelementptr inbounds %struct.FTS, %struct.FTS* %58, i32 0, i32 10, !dbg !20065, !ctir !2332
  %59 = load i32, i32* %fts_options71, align 8, !dbg !20065, !tbaa !17900, !ctir !5
  %and72 = and i32 %59, 16, !dbg !20065
  %tobool73 = icmp ne i32 %and72, 0, !dbg !20065
  br i1 %tobool73, label %land.lhs.true74, label %land.end85, !dbg !20066

land.lhs.true74:                                  ; preds = %land.lhs.true70
  %60 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20067, !tbaa !2993
  %fts_options75 = getelementptr inbounds %struct.FTS, %struct.FTS* %60, i32 0, i32 10, !dbg !20067, !ctir !2332
  %61 = load i32, i32* %fts_options75, align 8, !dbg !20067, !tbaa !17900, !ctir !5
  %and76 = and i32 %61, 32, !dbg !20067
  %tobool77 = icmp ne i32 %and76, 0, !dbg !20067
  br i1 %tobool77, label %land.end85, label %land.lhs.true78, !dbg !20068

land.lhs.true78:                                  ; preds = %land.lhs.true74
  %62 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20069, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %62, i32 0, i32 18, !dbg !20070, !ctir !2315
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20071
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 2, !dbg !20071, !ctir !2387
  %63 = load i64, i64* %st_nlink, align 8, !dbg !20071, !tbaa !5395, !ctir !320
  %cmp79 = icmp eq i64 %63, 2, !dbg !20072
  br i1 %cmp79, label %land.rhs81, label %land.end85, !dbg !20073

land.rhs81:                                       ; preds = %land.lhs.true78
  %64 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20074, !tbaa !2993
  %65 = load i32, i32* %dir_fd, align 4, !dbg !20075, !tbaa !2980
  %call82 = call i32 @leaf_optimization(%struct._ftsent* %64, i32 %65), !dbg !20076
  %cmp83 = icmp ne i32 %call82, 0, !dbg !20077
  br label %land.end85

land.end85:                                       ; preds = %land.rhs81, %land.lhs.true78, %land.lhs.true74, %land.lhs.true70, %land.rhs66
  %66 = phi i1 [ false, %land.lhs.true78 ], [ false, %land.lhs.true74 ], [ false, %land.lhs.true70 ], [ false, %land.rhs66 ], [ %cmp83, %land.rhs81 ], !dbg !20078
  %lnot86 = xor i1 %66, true, !dbg !20079
  br label %land.end87

land.end87:                                       ; preds = %land.end85, %if.else63
  %67 = phi i1 [ false, %if.else63 ], [ %lnot86, %land.end85 ], !dbg !20078
  %frombool88 = zext i1 %67 to i8, !dbg !20080
  store i8 %frombool88, i8* %descend, align 1, !dbg !20080, !tbaa !3104
  %68 = load i8, i8* %descend, align 1, !dbg !20081, !tbaa !3104
  %tobool89 = trunc i8 %68 to i1, !dbg !20081
  br i1 %tobool89, label %if.then93, label %lor.lhs.false, !dbg !20083

lor.lhs.false:                                    ; preds = %land.end87
  %69 = load i32, i32* %type.addr, align 4, !dbg !20084, !tbaa !2980
  %cmp91 = icmp eq i32 %69, 3, !dbg !20085
  br i1 %cmp91, label %if.then93, label %if.end134, !dbg !20086

if.then93:                                        ; preds = %lor.lhs.false, %land.end87
  %70 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20087, !tbaa !2993
  %fts_options94 = getelementptr inbounds %struct.FTS, %struct.FTS* %70, i32 0, i32 10, !dbg !20087, !ctir !2332
  %71 = load i32, i32* %fts_options94, align 8, !dbg !20087, !tbaa !17900, !ctir !5
  %and95 = and i32 %71, 512, !dbg !20087
  %tobool96 = icmp ne i32 %and95, 0, !dbg !20087
  br i1 %tobool96, label %if.then97, label %if.end99, !dbg !20090

if.then97:                                        ; preds = %if.then93
  %72 = load i32, i32* %dir_fd, align 4, !dbg !20091, !tbaa !2980
  %call98 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %72, i32 1030, i32 3), !dbg !20092
  store i32 %call98, i32* %dir_fd, align 4, !dbg !20093, !tbaa !2980
  br label %if.end99, !dbg !20094

if.end99:                                         ; preds = %if.then97, %if.then93
  %73 = load i32, i32* %dir_fd, align 4, !dbg !20095, !tbaa !2980
  %cmp100 = icmp slt i32 %73, 0, !dbg !20097
  br i1 %cmp100, label %if.then105, label %lor.lhs.false102, !dbg !20098

lor.lhs.false102:                                 ; preds = %if.end99
  %74 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20099, !tbaa !2993
  %75 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20100, !tbaa !2993
  %76 = load i32, i32* %dir_fd, align 4, !dbg !20101, !tbaa !2980
  %call103 = call i32 @fts_safe_changedir(%struct.FTS* %74, %struct._ftsent* %75, i32 %76, i8* null), !dbg !20102
  %tobool104 = icmp ne i32 %call103, 0, !dbg !20102
  br i1 %tobool104, label %if.then105, label %if.else132, !dbg !20103

if.then105:                                       ; preds = %lor.lhs.false102, %if.end99
  %77 = load i8, i8* %descend, align 1, !dbg !20104, !tbaa !3104
  %tobool106 = trunc i8 %77 to i1, !dbg !20104
  br i1 %tobool106, label %land.lhs.true108, label %if.end114, !dbg !20107

land.lhs.true108:                                 ; preds = %if.then105
  %78 = load i32, i32* %type.addr, align 4, !dbg !20108, !tbaa !2980
  %cmp109 = icmp eq i32 %78, 3, !dbg !20109
  br i1 %cmp109, label %if.then111, label %if.end114, !dbg !20110

if.then111:                                       ; preds = %land.lhs.true108
  %call112 = call i32* @__errno_location() #15, !dbg !20111
  %79 = load i32, i32* %call112, align 4, !dbg !20111, !tbaa !2980, !ctir !5
  %80 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20112, !tbaa !2993
  %fts_errno113 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %80, i32 0, i32 8, !dbg !20113, !ctir !2315
  store i32 %79, i32* %fts_errno113, align 8, !dbg !20114, !tbaa !2980, !ctir !5
  br label %if.end114, !dbg !20112

if.end114:                                        ; preds = %if.then111, %land.lhs.true108, %if.then105
  %81 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20115, !tbaa !2993
  %fts_flags = getelementptr inbounds %struct._ftsent, %struct._ftsent* %81, i32 0, i32 16, !dbg !20116, !ctir !2315
  %82 = load i16, i16* %fts_flags, align 2, !dbg !20117, !tbaa !3799, !ctir !34
  %conv115 = zext i16 %82 to i32, !dbg !20117
  %or = or i32 %conv115, 1, !dbg !20117
  %conv116 = trunc i32 %or to i16, !dbg !20117
  store i16 %conv116, i16* %fts_flags, align 2, !dbg !20117, !tbaa !3799, !ctir !34
  store i8 0, i8* %descend, align 1, !dbg !20118, !tbaa !3104
  br label %do.body117, !dbg !20119

do.body117:                                       ; preds = %if.end114
  %83 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20120, !tbaa !2993
  %fts_dirp118 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %83, i32 0, i32 3, !dbg !20120, !ctir !2315
  %84 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp118, align 8, !dbg !20120, !tbaa !2993, !ctir !580
  %call119 = call i32 @closedir(%struct.__dirstream* %84), !dbg !20120
  %85 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20120, !tbaa !2993
  %fts_dirp120 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %85, i32 0, i32 3, !dbg !20120, !ctir !2315
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp120, align 8, !dbg !20120, !tbaa !2993, !ctir !580
  br label %do.end121, !dbg !20120

do.end121:                                        ; preds = %do.body117
  %86 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20122, !tbaa !2993
  %fts_options122 = getelementptr inbounds %struct.FTS, %struct.FTS* %86, i32 0, i32 10, !dbg !20122, !ctir !2332
  %87 = load i32, i32* %fts_options122, align 8, !dbg !20122, !tbaa !17900, !ctir !5
  %and123 = and i32 %87, 512, !dbg !20122
  %tobool124 = icmp ne i32 %and123, 0, !dbg !20122
  br i1 %tobool124, label %land.lhs.true125, label %if.end130, !dbg !20124

land.lhs.true125:                                 ; preds = %do.end121
  %88 = load i32, i32* %dir_fd, align 4, !dbg !20125, !tbaa !2980
  %cmp126 = icmp sle i32 0, %88, !dbg !20126
  br i1 %cmp126, label %if.then128, label %if.end130, !dbg !20127

if.then128:                                       ; preds = %land.lhs.true125
  %89 = load i32, i32* %dir_fd, align 4, !dbg !20128, !tbaa !2980
  %call129 = call i32 @close(i32 %89), !dbg !20129
  br label %if.end130, !dbg !20129

if.end130:                                        ; preds = %if.then128, %land.lhs.true125, %do.end121
  %90 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20130, !tbaa !2993
  %fts_dirp131 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %90, i32 0, i32 3, !dbg !20131, !ctir !2315
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp131, align 8, !dbg !20132, !tbaa !2993, !ctir !580
  br label %if.end133, !dbg !20133

if.else132:                                       ; preds = %lor.lhs.false102
  store i8 1, i8* %descend, align 1, !dbg !20134, !tbaa !3104
  br label %if.end133

if.end133:                                        ; preds = %if.else132, %if.end130
  br label %if.end134, !dbg !20135

if.end134:                                        ; preds = %if.end133, %lor.lhs.false
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then62
  %91 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20136, !tbaa !2993
  %fts_path = getelementptr inbounds %struct._ftsent, %struct._ftsent* %91, i32 0, i32 7, !dbg !20136, !ctir !2315
  %92 = load i8*, i8** %fts_path, align 8, !dbg !20136, !tbaa !2993, !ctir !7
  %93 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20136, !tbaa !2993
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %93, i32 0, i32 10, !dbg !20136, !ctir !2315
  %94 = load i64, i64* %fts_pathlen, align 8, !dbg !20136, !tbaa !3837, !ctir !52
  %sub = sub i64 %94, 1, !dbg !20136
  %arrayidx = getelementptr inbounds i8, i8* %92, i64 %sub, !dbg !20136, !ctir !7
  %95 = load i8, i8* %arrayidx, align 1, !dbg !20136, !tbaa !3652
  %conv136 = sext i8 %95 to i32, !dbg !20136
  %cmp137 = icmp eq i32 %conv136, 47, !dbg !20136
  br i1 %cmp137, label %cond.true139, label %cond.false142, !dbg !20136

cond.true139:                                     ; preds = %if.end135
  %96 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20136, !tbaa !2993
  %fts_pathlen140 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %96, i32 0, i32 10, !dbg !20136, !ctir !2315
  %97 = load i64, i64* %fts_pathlen140, align 8, !dbg !20136, !tbaa !3837, !ctir !52
  %sub141 = sub i64 %97, 1, !dbg !20136
  br label %cond.end144, !dbg !20136

cond.false142:                                    ; preds = %if.end135
  %98 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20136, !tbaa !2993
  %fts_pathlen143 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %98, i32 0, i32 10, !dbg !20136, !ctir !2315
  %99 = load i64, i64* %fts_pathlen143, align 8, !dbg !20136, !tbaa !3837, !ctir !52
  br label %cond.end144, !dbg !20136

cond.end144:                                      ; preds = %cond.false142, %cond.true139
  %cond145 = phi i64 [ %sub141, %cond.true139 ], [ %99, %cond.false142 ], !dbg !20136
  store i64 %cond145, i64* %len, align 8, !dbg !20137, !tbaa !3837
  %100 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20138, !tbaa !2993
  %fts_options146 = getelementptr inbounds %struct.FTS, %struct.FTS* %100, i32 0, i32 10, !dbg !20138, !ctir !2332
  %101 = load i32, i32* %fts_options146, align 8, !dbg !20138, !tbaa !17900, !ctir !5
  %and147 = and i32 %101, 4, !dbg !20138
  %tobool148 = icmp ne i32 %and147, 0, !dbg !20138
  br i1 %tobool148, label %if.then149, label %if.else151, !dbg !20140

if.then149:                                       ; preds = %cond.end144
  %102 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20141, !tbaa !2993
  %fts_path150 = getelementptr inbounds %struct.FTS, %struct.FTS* %102, i32 0, i32 4, !dbg !20143, !ctir !2332
  %103 = load i8*, i8** %fts_path150, align 8, !dbg !20143, !tbaa !18389, !ctir !7
  %104 = load i64, i64* %len, align 8, !dbg !20144, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %103, i64 %104, !dbg !20145
  store i8* %add.ptr, i8** %cp, align 8, !dbg !20146, !tbaa !2993
  %105 = load i8*, i8** %cp, align 8, !dbg !20147, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %105, i32 1, !dbg !20147
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20147, !tbaa !2993
  store i8 47, i8* %105, align 1, !dbg !20148, !tbaa !3652, !ctir !8
  br label %if.end152, !dbg !20149

if.else151:                                       ; preds = %cond.end144
  store i8* null, i8** %cp, align 8, !dbg !20150, !tbaa !2993
  br label %if.end152

if.end152:                                        ; preds = %if.else151, %if.then149
  %106 = load i64, i64* %len, align 8, !dbg !20152, !tbaa !3837
  %inc = add i64 %106, 1, !dbg !20152
  store i64 %inc, i64* %len, align 8, !dbg !20152, !tbaa !3837
  %107 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20153, !tbaa !2993
  %fts_pathlen153 = getelementptr inbounds %struct.FTS, %struct.FTS* %107, i32 0, i32 7, !dbg !20154, !ctir !2332
  %108 = load i64, i64* %fts_pathlen153, align 8, !dbg !20154, !tbaa !18440, !ctir !52
  %109 = load i64, i64* %len, align 8, !dbg !20155, !tbaa !3837
  %sub154 = sub i64 %108, %109, !dbg !20156
  store i64 %sub154, i64* %maxlen, align 8, !dbg !20157, !tbaa !3837
  %110 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20158, !tbaa !2993
  %fts_level155 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %110, i32 0, i32 12, !dbg !20159, !ctir !2315
  %111 = load i64, i64* %fts_level155, align 8, !dbg !20159, !tbaa !3837, !ctir !539
  %add = add nsw i64 %111, 1, !dbg !20160
  store i64 %add, i64* %level, align 8, !dbg !20161, !tbaa !3837
  store i8 0, i8* %doadjust, align 1, !dbg !20162, !tbaa !3104
  store %struct._ftsent* null, %struct._ftsent** %head, align 8, !dbg !20163, !tbaa !2993
  store %struct._ftsent* null, %struct._ftsent** %tail, align 8, !dbg !20164, !tbaa !2993
  store i64 0, i64* %nitems, align 8, !dbg !20165, !tbaa !3837
  br label %while.cond, !dbg !20166

while.cond:                                       ; preds = %if.end334, %if.then200, %if.end152
  %112 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20167, !tbaa !2993
  %fts_dirp156 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %112, i32 0, i32 3, !dbg !20168, !ctir !2315
  %113 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp156, align 8, !dbg !20168, !tbaa !2993, !ctir !580
  %tobool157 = icmp ne %struct.__dirstream* %113, null, !dbg !20166
  br i1 %tobool157, label %while.body, label %while.end, !dbg !20166

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %d_namelen, metadata !20169, metadata !DIExpression()), !dbg !20171
  %call158 = call i32* @__errno_location() #15, !dbg !20172
  store i32 0, i32* %call158, align 4, !dbg !20172, !tbaa !2980, !ctir !5
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp159, metadata !20173, metadata !DIExpression()), !dbg !20174
  %114 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20175, !tbaa !2993
  %fts_dirp160 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %114, i32 0, i32 3, !dbg !20176, !ctir !2315
  %115 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp160, align 8, !dbg !20176, !tbaa !2993, !ctir !580
  %call161 = call %struct.dirent* @readdir(%struct.__dirstream* %115), !dbg !20177
  store %struct.dirent* %call161, %struct.dirent** %dp159, align 8, !dbg !20174, !tbaa !2993
  %116 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20178, !tbaa !2993
  %cmp162 = icmp eq %struct.dirent* %116, null, !dbg !20180
  br i1 %cmp162, label %if.then164, label %if.end177, !dbg !20181

if.then164:                                       ; preds = %while.body
  %call165 = call i32* @__errno_location() #15, !dbg !20182
  %117 = load i32, i32* %call165, align 4, !dbg !20182, !tbaa !2980, !ctir !5
  %tobool166 = icmp ne i32 %117, 0, !dbg !20182
  br i1 %tobool166, label %if.then167, label %if.end176, !dbg !20185

if.then167:                                       ; preds = %if.then164
  %call168 = call i32* @__errno_location() #15, !dbg !20186
  %118 = load i32, i32* %call168, align 4, !dbg !20186, !tbaa !2980, !ctir !5
  %119 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20188, !tbaa !2993
  %fts_errno169 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %119, i32 0, i32 8, !dbg !20189, !ctir !2315
  store i32 %118, i32* %fts_errno169, align 8, !dbg !20190, !tbaa !2980, !ctir !5
  %120 = load i8, i8* %continue_readdir, align 1, !dbg !20191, !tbaa !3104
  %tobool170 = trunc i8 %120 to i1, !dbg !20191
  br i1 %tobool170, label %lor.end, label %lor.rhs, !dbg !20192

lor.rhs:                                          ; preds = %if.then167
  %121 = load i64, i64* %nitems, align 8, !dbg !20193, !tbaa !3837
  %tobool172 = icmp ne i64 %121, 0, !dbg !20192
  br label %lor.end, !dbg !20192

lor.end:                                          ; preds = %lor.rhs, %if.then167
  %122 = phi i1 [ true, %if.then167 ], [ %tobool172, %lor.rhs ]
  %123 = zext i1 %122 to i64, !dbg !20194
  %cond173 = select i1 %122, i32 7, i32 4, !dbg !20194
  %conv174 = trunc i32 %cond173 to i16, !dbg !20194
  %124 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20195, !tbaa !2993
  %fts_info175 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %124, i32 0, i32 15, !dbg !20196, !ctir !2315
  store i16 %conv174, i16* %fts_info175, align 8, !dbg !20197, !tbaa !3799, !ctir !34
  br label %if.end176, !dbg !20198

if.end176:                                        ; preds = %lor.end, %if.then164
  br label %while.end, !dbg !20199

if.end177:                                        ; preds = %while.body
  %125 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20200, !tbaa !2993
  %fts_options178 = getelementptr inbounds %struct.FTS, %struct.FTS* %125, i32 0, i32 10, !dbg !20200, !ctir !2332
  %126 = load i32, i32* %fts_options178, align 8, !dbg !20200, !tbaa !17900, !ctir !5
  %and179 = and i32 %126, 32, !dbg !20200
  %tobool180 = icmp ne i32 %and179, 0, !dbg !20200
  br i1 %tobool180, label %if.end201, label %land.lhs.true181, !dbg !20202

land.lhs.true181:                                 ; preds = %if.end177
  %127 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20203, !tbaa !2993
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %127, i32 0, i32 4, !dbg !20203, !ctir !2469
  %arrayidx182 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !20203, !ctir !532
  %128 = load i8, i8* %arrayidx182, align 1, !dbg !20203, !tbaa !3652
  %conv183 = sext i8 %128 to i32, !dbg !20203
  %cmp184 = icmp eq i32 %conv183, 46, !dbg !20203
  br i1 %cmp184, label %land.lhs.true186, label %if.end201, !dbg !20203

land.lhs.true186:                                 ; preds = %land.lhs.true181
  %129 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20203, !tbaa !2993
  %d_name187 = getelementptr inbounds %struct.dirent, %struct.dirent* %129, i32 0, i32 4, !dbg !20203, !ctir !2469
  %arrayidx188 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name187, i64 0, i64 1, !dbg !20203, !ctir !532
  %130 = load i8, i8* %arrayidx188, align 1, !dbg !20203, !tbaa !3652
  %tobool189 = icmp ne i8 %130, 0, !dbg !20203
  br i1 %tobool189, label %lor.lhs.false190, label %if.then200, !dbg !20203

lor.lhs.false190:                                 ; preds = %land.lhs.true186
  %131 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20203, !tbaa !2993
  %d_name191 = getelementptr inbounds %struct.dirent, %struct.dirent* %131, i32 0, i32 4, !dbg !20203, !ctir !2469
  %arrayidx192 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name191, i64 0, i64 1, !dbg !20203, !ctir !532
  %132 = load i8, i8* %arrayidx192, align 1, !dbg !20203, !tbaa !3652
  %conv193 = sext i8 %132 to i32, !dbg !20203
  %cmp194 = icmp eq i32 %conv193, 46, !dbg !20203
  br i1 %cmp194, label %land.lhs.true196, label %if.end201, !dbg !20203

land.lhs.true196:                                 ; preds = %lor.lhs.false190
  %133 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20203, !tbaa !2993
  %d_name197 = getelementptr inbounds %struct.dirent, %struct.dirent* %133, i32 0, i32 4, !dbg !20203, !ctir !2469
  %arrayidx198 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name197, i64 0, i64 2, !dbg !20203, !ctir !532
  %134 = load i8, i8* %arrayidx198, align 1, !dbg !20203, !tbaa !3652
  %tobool199 = icmp ne i8 %134, 0, !dbg !20203
  br i1 %tobool199, label %if.end201, label %if.then200, !dbg !20204

if.then200:                                       ; preds = %land.lhs.true196, %land.lhs.true186
  br label %while.cond, !dbg !20205, !llvm.loop !20206

if.end201:                                        ; preds = %land.lhs.true196, %lor.lhs.false190, %land.lhs.true181, %if.end177
  %135 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20208, !tbaa !2993
  %d_name202 = getelementptr inbounds %struct.dirent, %struct.dirent* %135, i32 0, i32 4, !dbg !20208, !ctir !2469
  %arraydecay203 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name202, i64 0, i64 0, !dbg !20208
  %call204 = call i64 @strlen(i8* %arraydecay203) #14, !dbg !20208
  store i64 %call204, i64* %d_namelen, align 8, !dbg !20209, !tbaa !3837
  %136 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20210, !tbaa !2993
  %137 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20211, !tbaa !2993
  %d_name205 = getelementptr inbounds %struct.dirent, %struct.dirent* %137, i32 0, i32 4, !dbg !20212, !ctir !2469
  %arraydecay206 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name205, i64 0, i64 0, !dbg !20211
  %138 = load i64, i64* %d_namelen, align 8, !dbg !20213, !tbaa !3837
  %call207 = call %struct._ftsent* @fts_alloc(%struct.FTS* %136, i8* %arraydecay206, i64 %138), !dbg !20214
  store %struct._ftsent* %call207, %struct._ftsent** %p, align 8, !dbg !20215, !tbaa !2993
  %139 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20216, !tbaa !2993
  %tobool208 = icmp ne %struct._ftsent* %139, null, !dbg !20216
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !20218

if.then209:                                       ; preds = %if.end201
  br label %mem1, !dbg !20219

if.end210:                                        ; preds = %if.end201
  %140 = load i64, i64* %d_namelen, align 8, !dbg !20220, !tbaa !3837
  %141 = load i64, i64* %maxlen, align 8, !dbg !20222, !tbaa !3837
  %cmp211 = icmp uge i64 %140, %141, !dbg !20223
  br i1 %cmp211, label %if.then213, label %if.end244, !dbg !20224

if.then213:                                       ; preds = %if.end210
  %142 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20225, !tbaa !2993
  %fts_path214 = getelementptr inbounds %struct.FTS, %struct.FTS* %142, i32 0, i32 4, !dbg !20227, !ctir !2332
  %143 = load i8*, i8** %fts_path214, align 8, !dbg !20227, !tbaa !18389, !ctir !7
  store i8* %143, i8** %oldaddr, align 8, !dbg !20228, !tbaa !2993
  %144 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20229, !tbaa !2993
  %145 = load i64, i64* %d_namelen, align 8, !dbg !20231, !tbaa !3837
  %146 = load i64, i64* %len, align 8, !dbg !20232, !tbaa !3837
  %add215 = add i64 %145, %146, !dbg !20233
  %add216 = add i64 %add215, 1, !dbg !20234
  %call217 = call zeroext i1 @fts_palloc(%struct.FTS* %144, i64 %add216), !dbg !20235
  br i1 %call217, label %if.end229, label %if.then218, !dbg !20236

if.then218:                                       ; preds = %if.then213
  br label %mem1, !dbg !20237

mem1:                                             ; preds = %if.then218, %if.then209
  call void @llvm.dbg.label(metadata !20238), !dbg !20240
  %call219 = call i32* @__errno_location() #15, !dbg !20241
  %147 = load i32, i32* %call219, align 4, !dbg !20241, !tbaa !2980, !ctir !5
  store i32 %147, i32* %saved_errno, align 4, !dbg !20242, !tbaa !2980
  %148 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20243, !tbaa !2993
  %149 = bitcast %struct._ftsent* %148 to i8*, !dbg !20243
  call void @free(i8* %149) #12, !dbg !20244
  %150 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20245, !tbaa !2993
  call void @fts_lfree(%struct._ftsent* %150), !dbg !20246
  br label %do.body220, !dbg !20247

do.body220:                                       ; preds = %mem1
  %151 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20248, !tbaa !2993
  %fts_dirp221 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %151, i32 0, i32 3, !dbg !20248, !ctir !2315
  %152 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp221, align 8, !dbg !20248, !tbaa !2993, !ctir !580
  %call222 = call i32 @closedir(%struct.__dirstream* %152), !dbg !20248
  %153 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20248, !tbaa !2993
  %fts_dirp223 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %153, i32 0, i32 3, !dbg !20248, !ctir !2315
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp223, align 8, !dbg !20248, !tbaa !2993, !ctir !580
  br label %do.end224, !dbg !20248

do.end224:                                        ; preds = %do.body220
  %154 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20250, !tbaa !2993
  %fts_info225 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %154, i32 0, i32 15, !dbg !20251, !ctir !2315
  store i16 7, i16* %fts_info225, align 8, !dbg !20252, !tbaa !3799, !ctir !34
  %155 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20253, !tbaa !2993
  %fts_options226 = getelementptr inbounds %struct.FTS, %struct.FTS* %155, i32 0, i32 10, !dbg !20253, !ctir !2332
  %156 = load i32, i32* %fts_options226, align 8, !dbg !20253, !tbaa !17900, !ctir !5
  %or227 = or i32 %156, 8192, !dbg !20253
  store i32 %or227, i32* %fts_options226, align 8, !dbg !20253, !tbaa !17900, !ctir !5
  %157 = load i32, i32* %saved_errno, align 4, !dbg !20254, !tbaa !2980
  %call228 = call i32* @__errno_location() #15, !dbg !20254
  store i32 %157, i32* %call228, align 4, !dbg !20254, !tbaa !2980, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20255
  br label %return, !dbg !20255

if.end229:                                        ; preds = %if.then213
  %158 = load i8*, i8** %oldaddr, align 8, !dbg !20256, !tbaa !2993
  %159 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20258, !tbaa !2993
  %fts_path230 = getelementptr inbounds %struct.FTS, %struct.FTS* %159, i32 0, i32 4, !dbg !20259, !ctir !2332
  %160 = load i8*, i8** %fts_path230, align 8, !dbg !20259, !tbaa !18389, !ctir !7
  %cmp231 = icmp ne i8* %158, %160, !dbg !20260
  br i1 %cmp231, label %if.then233, label %if.end241, !dbg !20261

if.then233:                                       ; preds = %if.end229
  store i8 1, i8* %doadjust, align 1, !dbg !20262, !tbaa !3104
  %161 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20264, !tbaa !2993
  %fts_options234 = getelementptr inbounds %struct.FTS, %struct.FTS* %161, i32 0, i32 10, !dbg !20264, !ctir !2332
  %162 = load i32, i32* %fts_options234, align 8, !dbg !20264, !tbaa !17900, !ctir !5
  %and235 = and i32 %162, 4, !dbg !20264
  %tobool236 = icmp ne i32 %and235, 0, !dbg !20264
  br i1 %tobool236, label %if.then237, label %if.end240, !dbg !20266

if.then237:                                       ; preds = %if.then233
  %163 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20267, !tbaa !2993
  %fts_path238 = getelementptr inbounds %struct.FTS, %struct.FTS* %163, i32 0, i32 4, !dbg !20268, !ctir !2332
  %164 = load i8*, i8** %fts_path238, align 8, !dbg !20268, !tbaa !18389, !ctir !7
  %165 = load i64, i64* %len, align 8, !dbg !20269, !tbaa !3837
  %add.ptr239 = getelementptr inbounds i8, i8* %164, i64 %165, !dbg !20270
  store i8* %add.ptr239, i8** %cp, align 8, !dbg !20271, !tbaa !2993
  br label %if.end240, !dbg !20272

if.end240:                                        ; preds = %if.then237, %if.then233
  br label %if.end241, !dbg !20273

if.end241:                                        ; preds = %if.end240, %if.end229
  %166 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20274, !tbaa !2993
  %fts_pathlen242 = getelementptr inbounds %struct.FTS, %struct.FTS* %166, i32 0, i32 7, !dbg !20275, !ctir !2332
  %167 = load i64, i64* %fts_pathlen242, align 8, !dbg !20275, !tbaa !18440, !ctir !52
  %168 = load i64, i64* %len, align 8, !dbg !20276, !tbaa !3837
  %sub243 = sub i64 %167, %168, !dbg !20277
  store i64 %sub243, i64* %maxlen, align 8, !dbg !20278, !tbaa !3837
  br label %if.end244, !dbg !20279

if.end244:                                        ; preds = %if.end241, %if.end210
  %169 = load i64, i64* %len, align 8, !dbg !20280, !tbaa !3837
  %170 = load i64, i64* %d_namelen, align 8, !dbg !20281, !tbaa !3837
  %add245 = add i64 %169, %170, !dbg !20282
  store i64 %add245, i64* %new_len, align 8, !dbg !20283, !tbaa !3837
  %171 = load i64, i64* %new_len, align 8, !dbg !20284, !tbaa !3837
  %172 = load i64, i64* %len, align 8, !dbg !20286, !tbaa !3837
  %cmp246 = icmp ult i64 %171, %172, !dbg !20287
  br i1 %cmp246, label %if.then248, label %if.end258, !dbg !20288

if.then248:                                       ; preds = %if.end244
  %173 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20289, !tbaa !2993
  %174 = bitcast %struct._ftsent* %173 to i8*, !dbg !20289
  call void @free(i8* %174) #12, !dbg !20291
  %175 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20292, !tbaa !2993
  call void @fts_lfree(%struct._ftsent* %175), !dbg !20293
  br label %do.body249, !dbg !20294

do.body249:                                       ; preds = %if.then248
  %176 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20295, !tbaa !2993
  %fts_dirp250 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %176, i32 0, i32 3, !dbg !20295, !ctir !2315
  %177 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp250, align 8, !dbg !20295, !tbaa !2993, !ctir !580
  %call251 = call i32 @closedir(%struct.__dirstream* %177), !dbg !20295
  %178 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20295, !tbaa !2993
  %fts_dirp252 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %178, i32 0, i32 3, !dbg !20295, !ctir !2315
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp252, align 8, !dbg !20295, !tbaa !2993, !ctir !580
  br label %do.end253, !dbg !20295

do.end253:                                        ; preds = %do.body249
  %179 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20297, !tbaa !2993
  %fts_info254 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %179, i32 0, i32 15, !dbg !20298, !ctir !2315
  store i16 7, i16* %fts_info254, align 8, !dbg !20299, !tbaa !3799, !ctir !34
  %180 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20300, !tbaa !2993
  %fts_options255 = getelementptr inbounds %struct.FTS, %struct.FTS* %180, i32 0, i32 10, !dbg !20300, !ctir !2332
  %181 = load i32, i32* %fts_options255, align 8, !dbg !20300, !tbaa !17900, !ctir !5
  %or256 = or i32 %181, 8192, !dbg !20300
  store i32 %or256, i32* %fts_options255, align 8, !dbg !20300, !tbaa !17900, !ctir !5
  %call257 = call i32* @__errno_location() #15, !dbg !20301
  store i32 36, i32* %call257, align 4, !dbg !20301, !tbaa !2980, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20302
  br label %return, !dbg !20302

if.end258:                                        ; preds = %if.end244
  %182 = load i64, i64* %level, align 8, !dbg !20303, !tbaa !3837
  %183 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20304, !tbaa !2993
  %fts_level259 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %183, i32 0, i32 12, !dbg !20305, !ctir !2315
  store i64 %182, i64* %fts_level259, align 8, !dbg !20306, !tbaa !3837, !ctir !539
  %184 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20307, !tbaa !2993
  %fts_cur260 = getelementptr inbounds %struct.FTS, %struct.FTS* %184, i32 0, i32 0, !dbg !20308, !ctir !2332
  %185 = load %struct._ftsent*, %struct._ftsent** %fts_cur260, align 8, !dbg !20308, !tbaa !18338, !ctir !2319
  %186 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20309, !tbaa !2993
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %186, i32 0, i32 1, !dbg !20310, !ctir !2315
  store %struct._ftsent* %185, %struct._ftsent** %fts_parent, align 8, !dbg !20311, !tbaa !2993, !ctir !2319
  %187 = load i64, i64* %new_len, align 8, !dbg !20312, !tbaa !3837
  %188 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20313, !tbaa !2993
  %fts_pathlen261 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %188, i32 0, i32 10, !dbg !20314, !ctir !2315
  store i64 %187, i64* %fts_pathlen261, align 8, !dbg !20315, !tbaa !3837, !ctir !52
  %189 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20316, !tbaa !2993
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %189, i32 0, i32 0, !dbg !20316, !ctir !2469
  %190 = load i64, i64* %d_ino, align 8, !dbg !20316, !tbaa !15597, !ctir !225
  %191 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20317, !tbaa !2993
  %fts_statp262 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %191, i32 0, i32 18, !dbg !20318, !ctir !2315
  %arraydecay263 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp262, i64 0, i64 0, !dbg !20319
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay263, i32 0, i32 1, !dbg !20319, !ctir !2387
  store i64 %190, i64* %st_ino, align 8, !dbg !20320, !tbaa !3859, !ctir !225
  %192 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20321, !tbaa !2993
  %fts_options264 = getelementptr inbounds %struct.FTS, %struct.FTS* %192, i32 0, i32 10, !dbg !20321, !ctir !2332
  %193 = load i32, i32* %fts_options264, align 8, !dbg !20321, !tbaa !17900, !ctir !5
  %and265 = and i32 %193, 4, !dbg !20321
  %tobool266 = icmp ne i32 %and265, 0, !dbg !20321
  br i1 %tobool266, label %if.then267, label %if.else272, !dbg !20323

if.then267:                                       ; preds = %if.end258
  %194 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20324, !tbaa !2993
  %fts_path268 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %194, i32 0, i32 7, !dbg !20326, !ctir !2315
  %195 = load i8*, i8** %fts_path268, align 8, !dbg !20326, !tbaa !2993, !ctir !7
  %196 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20327, !tbaa !2993
  %fts_accpath269 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %196, i32 0, i32 6, !dbg !20328, !ctir !2315
  store i8* %195, i8** %fts_accpath269, align 8, !dbg !20329, !tbaa !2993, !ctir !7
  %197 = load i8*, i8** %cp, align 8, !dbg !20330, !tbaa !2993
  %198 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20331, !tbaa !2993
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %198, i32 0, i32 19, !dbg !20332, !ctir !2315
  %arraydecay270 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20333
  %199 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20334, !tbaa !2993
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %199, i32 0, i32 13, !dbg !20335, !ctir !2315
  %200 = load i64, i64* %fts_namelen, align 8, !dbg !20335, !tbaa !3837, !ctir !52
  %add271 = add i64 %200, 1, !dbg !20336
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %197, i8* align 8 %arraydecay270, i64 %add271, i1 false), !dbg !20333
  br label %if.end276, !dbg !20337

if.else272:                                       ; preds = %if.end258
  %201 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20338, !tbaa !2993
  %fts_name273 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %201, i32 0, i32 19, !dbg !20339, !ctir !2315
  %arraydecay274 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name273, i64 0, i64 0, !dbg !20338
  %202 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20340, !tbaa !2993
  %fts_accpath275 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %202, i32 0, i32 6, !dbg !20341, !ctir !2315
  store i8* %arraydecay274, i8** %fts_accpath275, align 8, !dbg !20342, !tbaa !2993, !ctir !7
  br label %if.end276

if.end276:                                        ; preds = %if.else272, %if.then267
  %203 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20343, !tbaa !2993
  %fts_compar277 = getelementptr inbounds %struct.FTS, %struct.FTS* %203, i32 0, i32 9, !dbg !20345, !ctir !2332
  %204 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar277, align 8, !dbg !20345, !tbaa !18127, !ctir !2346
  %cmp278 = icmp eq i32 (%struct._ftsent**, %struct._ftsent**)* %204, null, !dbg !20346
  br i1 %cmp278, label %if.then284, label %lor.lhs.false280, !dbg !20347

lor.lhs.false280:                                 ; preds = %if.end276
  %205 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20348, !tbaa !2993
  %fts_options281 = getelementptr inbounds %struct.FTS, %struct.FTS* %205, i32 0, i32 10, !dbg !20348, !ctir !2332
  %206 = load i32, i32* %fts_options281, align 8, !dbg !20348, !tbaa !17900, !ctir !5
  %and282 = and i32 %206, 1024, !dbg !20348
  %tobool283 = icmp ne i32 %and282, 0, !dbg !20348
  br i1 %tobool283, label %if.then284, label %if.else311, !dbg !20349

if.then284:                                       ; preds = %lor.lhs.false280, %if.end276
  call void @llvm.dbg.declare(metadata i8* %skip_stat, metadata !20350, metadata !DIExpression()), !dbg !20352
  %207 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20353, !tbaa !2993
  %fts_options285 = getelementptr inbounds %struct.FTS, %struct.FTS* %207, i32 0, i32 10, !dbg !20353, !ctir !2332
  %208 = load i32, i32* %fts_options285, align 8, !dbg !20353, !tbaa !17900, !ctir !5
  %and286 = and i32 %208, 16, !dbg !20353
  %tobool287 = icmp ne i32 %and286, 0, !dbg !20353
  br i1 %tobool287, label %land.lhs.true288, label %land.end302, !dbg !20354

land.lhs.true288:                                 ; preds = %if.then284
  %209 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20355, !tbaa !2993
  %fts_options289 = getelementptr inbounds %struct.FTS, %struct.FTS* %209, i32 0, i32 10, !dbg !20355, !ctir !2332
  %210 = load i32, i32* %fts_options289, align 8, !dbg !20355, !tbaa !17900, !ctir !5
  %and290 = and i32 %210, 8, !dbg !20355
  %tobool291 = icmp ne i32 %and290, 0, !dbg !20355
  br i1 %tobool291, label %land.lhs.true292, label %land.end302, !dbg !20356

land.lhs.true292:                                 ; preds = %land.lhs.true288
  %211 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20357, !tbaa !2993
  %d_type = getelementptr inbounds %struct.dirent, %struct.dirent* %211, i32 0, i32 3, !dbg !20357, !ctir !2469
  %212 = load i8, i8* %d_type, align 2, !dbg !20357, !tbaa !20358, !ctir !468
  %conv293 = zext i8 %212 to i32, !dbg !20357
  %cmp294 = icmp ne i32 %conv293, 0, !dbg !20357
  br i1 %cmp294, label %land.rhs296, label %land.end302, !dbg !20359

land.rhs296:                                      ; preds = %land.lhs.true292
  %213 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20360, !tbaa !2993
  %d_type297 = getelementptr inbounds %struct.dirent, %struct.dirent* %213, i32 0, i32 3, !dbg !20360, !ctir !2469
  %214 = load i8, i8* %d_type297, align 2, !dbg !20360, !tbaa !20358, !ctir !468
  %conv298 = zext i8 %214 to i32, !dbg !20360
  %cmp299 = icmp eq i32 %conv298, 4, !dbg !20360
  %lnot301 = xor i1 %cmp299, true, !dbg !20361
  br label %land.end302

land.end302:                                      ; preds = %land.rhs296, %land.lhs.true292, %land.lhs.true288, %if.then284
  %215 = phi i1 [ false, %land.lhs.true292 ], [ false, %land.lhs.true288 ], [ false, %if.then284 ], [ %lnot301, %land.rhs296 ], !dbg !20362
  %frombool303 = zext i1 %215 to i8, !dbg !20352
  store i8 %frombool303, i8* %skip_stat, align 1, !dbg !20352, !tbaa !3104
  %216 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20363, !tbaa !2993
  %fts_info304 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %216, i32 0, i32 15, !dbg !20364, !ctir !2315
  store i16 11, i16* %fts_info304, align 8, !dbg !20365, !tbaa !3799, !ctir !34
  %217 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20366, !tbaa !2993
  %fts_statp305 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %217, i32 0, i32 18, !dbg !20367, !ctir !2315
  %arraydecay306 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp305, i64 0, i64 0, !dbg !20366
  %218 = load %struct.dirent*, %struct.dirent** %dp159, align 8, !dbg !20368, !tbaa !2993
  %d_type307 = getelementptr inbounds %struct.dirent, %struct.dirent* %218, i32 0, i32 3, !dbg !20368, !ctir !2469
  %219 = load i8, i8* %d_type307, align 2, !dbg !20368, !tbaa !20358, !ctir !468
  %conv308 = zext i8 %219 to i32, !dbg !20368
  call void @set_stat_type(%struct.stat* %arraydecay306, i32 %conv308), !dbg !20369
  %220 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20370, !tbaa !2993
  %221 = load i8, i8* %skip_stat, align 1, !dbg !20371, !tbaa !3104
  %tobool309 = trunc i8 %221 to i1, !dbg !20371
  %lnot310 = xor i1 %tobool309, true, !dbg !20372
  call void @fts_set_stat_required(%struct._ftsent* %220, i1 zeroext %lnot310), !dbg !20373
  br label %if.end314, !dbg !20374

if.else311:                                       ; preds = %lor.lhs.false280
  %222 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20375, !tbaa !2993
  %223 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20377, !tbaa !2993
  %call312 = call zeroext i16 @fts_stat(%struct.FTS* %222, %struct._ftsent* %223, i1 zeroext false), !dbg !20378
  %224 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20379, !tbaa !2993
  %fts_info313 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %224, i32 0, i32 15, !dbg !20380, !ctir !2315
  store i16 %call312, i16* %fts_info313, align 8, !dbg !20381, !tbaa !3799, !ctir !34
  br label %if.end314

if.end314:                                        ; preds = %if.else311, %land.end302
  %225 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20382, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %225, i32 0, i32 2, !dbg !20383, !ctir !2315
  store %struct._ftsent* null, %struct._ftsent** %fts_link, align 8, !dbg !20384, !tbaa !2993, !ctir !2319
  %226 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20385, !tbaa !2993
  %cmp315 = icmp eq %struct._ftsent* %226, null, !dbg !20387
  br i1 %cmp315, label %if.then317, label %if.else318, !dbg !20388

if.then317:                                       ; preds = %if.end314
  %227 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20389, !tbaa !2993
  store %struct._ftsent* %227, %struct._ftsent** %tail, align 8, !dbg !20390, !tbaa !2993
  store %struct._ftsent* %227, %struct._ftsent** %head, align 8, !dbg !20391, !tbaa !2993
  br label %if.end320, !dbg !20392

if.else318:                                       ; preds = %if.end314
  %228 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20393, !tbaa !2993
  %229 = load %struct._ftsent*, %struct._ftsent** %tail, align 8, !dbg !20395, !tbaa !2993
  %fts_link319 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %229, i32 0, i32 2, !dbg !20396, !ctir !2315
  store %struct._ftsent* %228, %struct._ftsent** %fts_link319, align 8, !dbg !20397, !tbaa !2993, !ctir !2319
  %230 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20398, !tbaa !2993
  store %struct._ftsent* %230, %struct._ftsent** %tail, align 8, !dbg !20399, !tbaa !2993
  br label %if.end320

if.end320:                                        ; preds = %if.else318, %if.then317
  %231 = load i64, i64* %nitems, align 8, !dbg !20400, !tbaa !3837
  %cmp321 = icmp eq i64 %231, 10000, !dbg !20402
  br i1 %cmp321, label %land.lhs.true323, label %if.end329, !dbg !20403

land.lhs.true323:                                 ; preds = %if.end320
  %232 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20404, !tbaa !2993
  %fts_compar324 = getelementptr inbounds %struct.FTS, %struct.FTS* %232, i32 0, i32 9, !dbg !20405, !ctir !2332
  %233 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar324, align 8, !dbg !20405, !tbaa !18127, !ctir !2346
  %tobool325 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %233, null, !dbg !20404
  br i1 %tobool325, label %if.end329, label %if.then326, !dbg !20406

if.then326:                                       ; preds = %land.lhs.true323
  %234 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20407, !tbaa !2993
  %235 = load i32, i32* %dir_fd, align 4, !dbg !20408, !tbaa !2980
  %call327 = call zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %234, i32 %235), !dbg !20409
  %frombool328 = zext i1 %call327 to i8, !dbg !20410
  store i8 %frombool328, i8* %sort_by_inode, align 1, !dbg !20410, !tbaa !3104
  br label %if.end329, !dbg !20411

if.end329:                                        ; preds = %if.then326, %land.lhs.true323, %if.end320
  %236 = load i64, i64* %nitems, align 8, !dbg !20412, !tbaa !3837
  %inc330 = add i64 %236, 1, !dbg !20412
  store i64 %inc330, i64* %nitems, align 8, !dbg !20412, !tbaa !3837
  %237 = load i64, i64* %max_entries, align 8, !dbg !20413, !tbaa !3837
  %238 = load i64, i64* %nitems, align 8, !dbg !20415, !tbaa !3837
  %cmp331 = icmp ule i64 %237, %238, !dbg !20416
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !20417

if.then333:                                       ; preds = %if.end329
  br label %break_without_closedir, !dbg !20418

if.end334:                                        ; preds = %if.end329
  br label %while.cond, !dbg !20166, !llvm.loop !20206

while.end:                                        ; preds = %if.end176, %while.cond
  %239 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20420, !tbaa !2993
  %fts_dirp335 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %239, i32 0, i32 3, !dbg !20422, !ctir !2315
  %240 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp335, align 8, !dbg !20422, !tbaa !2993, !ctir !580
  %tobool336 = icmp ne %struct.__dirstream* %240, null, !dbg !20420
  br i1 %tobool336, label %if.then337, label %if.end343, !dbg !20423

if.then337:                                       ; preds = %while.end
  br label %do.body338, !dbg !20424

do.body338:                                       ; preds = %if.then337
  %241 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20425, !tbaa !2993
  %fts_dirp339 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %241, i32 0, i32 3, !dbg !20425, !ctir !2315
  %242 = load %struct.__dirstream*, %struct.__dirstream** %fts_dirp339, align 8, !dbg !20425, !tbaa !2993, !ctir !580
  %call340 = call i32 @closedir(%struct.__dirstream* %242), !dbg !20425
  %243 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20425, !tbaa !2993
  %fts_dirp341 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %243, i32 0, i32 3, !dbg !20425, !ctir !2315
  store %struct.__dirstream* null, %struct.__dirstream** %fts_dirp341, align 8, !dbg !20425, !tbaa !2993, !ctir !580
  br label %do.end342, !dbg !20425

do.end342:                                        ; preds = %do.body338
  br label %if.end343, !dbg !20425

if.end343:                                        ; preds = %do.end342, %while.end
  br label %break_without_closedir, !dbg !20422

break_without_closedir:                           ; preds = %if.end343, %if.then333
  call void @llvm.dbg.label(metadata !20427), !dbg !20428
  %244 = load i8, i8* %doadjust, align 1, !dbg !20429, !tbaa !3104
  %tobool344 = trunc i8 %244 to i1, !dbg !20429
  br i1 %tobool344, label %if.then345, label %if.end346, !dbg !20431

if.then345:                                       ; preds = %break_without_closedir
  %245 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20432, !tbaa !2993
  %246 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20433, !tbaa !2993
  call void @fts_padjust(%struct.FTS* %245, %struct._ftsent* %246), !dbg !20434
  br label %if.end346, !dbg !20434

if.end346:                                        ; preds = %if.then345, %break_without_closedir
  %247 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20435, !tbaa !2993
  %fts_options347 = getelementptr inbounds %struct.FTS, %struct.FTS* %247, i32 0, i32 10, !dbg !20435, !ctir !2332
  %248 = load i32, i32* %fts_options347, align 8, !dbg !20435, !tbaa !17900, !ctir !5
  %and348 = and i32 %248, 4, !dbg !20435
  %tobool349 = icmp ne i32 %and348, 0, !dbg !20435
  br i1 %tobool349, label %if.then350, label %if.end360, !dbg !20437

if.then350:                                       ; preds = %if.end346
  %249 = load i64, i64* %len, align 8, !dbg !20438, !tbaa !3837
  %250 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20441, !tbaa !2993
  %fts_pathlen351 = getelementptr inbounds %struct.FTS, %struct.FTS* %250, i32 0, i32 7, !dbg !20442, !ctir !2332
  %251 = load i64, i64* %fts_pathlen351, align 8, !dbg !20442, !tbaa !18440, !ctir !52
  %cmp352 = icmp eq i64 %249, %251, !dbg !20443
  br i1 %cmp352, label %if.then357, label %lor.lhs.false354, !dbg !20444

lor.lhs.false354:                                 ; preds = %if.then350
  %252 = load i64, i64* %nitems, align 8, !dbg !20445, !tbaa !3837
  %cmp355 = icmp eq i64 %252, 0, !dbg !20446
  br i1 %cmp355, label %if.then357, label %if.end359, !dbg !20447

if.then357:                                       ; preds = %lor.lhs.false354, %if.then350
  %253 = load i8*, i8** %cp, align 8, !dbg !20448, !tbaa !2993
  %incdec.ptr358 = getelementptr inbounds i8, i8* %253, i32 -1, !dbg !20448
  store i8* %incdec.ptr358, i8** %cp, align 8, !dbg !20448, !tbaa !2993
  br label %if.end359, !dbg !20448

if.end359:                                        ; preds = %if.then357, %lor.lhs.false354
  %254 = load i8*, i8** %cp, align 8, !dbg !20449, !tbaa !2993
  store i8 0, i8* %254, align 1, !dbg !20450, !tbaa !3652, !ctir !8
  br label %if.end360, !dbg !20451

if.end360:                                        ; preds = %if.end359, %if.end346
  %255 = load i8, i8* %continue_readdir, align 1, !dbg !20452, !tbaa !3104
  %tobool361 = trunc i8 %255 to i1, !dbg !20452
  br i1 %tobool361, label %if.end385, label %land.lhs.true362, !dbg !20454

land.lhs.true362:                                 ; preds = %if.end360
  %256 = load i8, i8* %descend, align 1, !dbg !20455, !tbaa !3104
  %tobool363 = trunc i8 %256 to i1, !dbg !20455
  br i1 %tobool363, label %land.lhs.true365, label %if.end385, !dbg !20456

land.lhs.true365:                                 ; preds = %land.lhs.true362
  %257 = load i32, i32* %type.addr, align 4, !dbg !20457, !tbaa !2980
  %cmp366 = icmp eq i32 %257, 1, !dbg !20458
  br i1 %cmp366, label %land.lhs.true370, label %lor.lhs.false368, !dbg !20459

lor.lhs.false368:                                 ; preds = %land.lhs.true365
  %258 = load i64, i64* %nitems, align 8, !dbg !20460, !tbaa !3837
  %tobool369 = icmp ne i64 %258, 0, !dbg !20460
  br i1 %tobool369, label %if.end385, label %land.lhs.true370, !dbg !20461

land.lhs.true370:                                 ; preds = %lor.lhs.false368, %land.lhs.true365
  %259 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20462, !tbaa !2993
  %fts_level371 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %259, i32 0, i32 12, !dbg !20463, !ctir !2315
  %260 = load i64, i64* %fts_level371, align 8, !dbg !20463, !tbaa !3837, !ctir !539
  %cmp372 = icmp eq i64 %260, 0, !dbg !20464
  br i1 %cmp372, label %cond.true374, label %cond.false377, !dbg !20465

cond.true374:                                     ; preds = %land.lhs.true370
  %261 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20466, !tbaa !2993
  %call375 = call i32 @restore_initial_cwd(%struct.FTS* %261), !dbg !20467
  %tobool376 = icmp ne i32 %call375, 0, !dbg !20467
  br i1 %tobool376, label %if.then381, label %if.end385, !dbg !20462

cond.false377:                                    ; preds = %land.lhs.true370
  %262 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20468, !tbaa !2993
  %263 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20469, !tbaa !2993
  %fts_parent378 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %263, i32 0, i32 1, !dbg !20470, !ctir !2315
  %264 = load %struct._ftsent*, %struct._ftsent** %fts_parent378, align 8, !dbg !20470, !tbaa !2993, !ctir !2319
  %call379 = call i32 @fts_safe_changedir(%struct.FTS* %262, %struct._ftsent* %264, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.437, i64 0, i64 0)), !dbg !20471
  %tobool380 = icmp ne i32 %call379, 0, !dbg !20471
  br i1 %tobool380, label %if.then381, label %if.end385, !dbg !20465

if.then381:                                       ; preds = %cond.false377, %cond.true374
  %265 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20472, !tbaa !2993
  %fts_info382 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %265, i32 0, i32 15, !dbg !20474, !ctir !2315
  store i16 7, i16* %fts_info382, align 8, !dbg !20475, !tbaa !3799, !ctir !34
  %266 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20476, !tbaa !2993
  %fts_options383 = getelementptr inbounds %struct.FTS, %struct.FTS* %266, i32 0, i32 10, !dbg !20476, !ctir !2332
  %267 = load i32, i32* %fts_options383, align 8, !dbg !20476, !tbaa !17900, !ctir !5
  %or384 = or i32 %267, 8192, !dbg !20476
  store i32 %or384, i32* %fts_options383, align 8, !dbg !20476, !tbaa !17900, !ctir !5
  %268 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20477, !tbaa !2993
  call void @fts_lfree(%struct._ftsent* %268), !dbg !20478
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20479
  br label %return, !dbg !20479

if.end385:                                        ; preds = %cond.false377, %cond.true374, %lor.lhs.false368, %land.lhs.true362, %if.end360
  %269 = load i64, i64* %nitems, align 8, !dbg !20480, !tbaa !3837
  %tobool386 = icmp ne i64 %269, 0, !dbg !20480
  br i1 %tobool386, label %if.end403, label %if.then387, !dbg !20482

if.then387:                                       ; preds = %if.end385
  %270 = load i32, i32* %type.addr, align 4, !dbg !20483, !tbaa !2980
  %cmp388 = icmp eq i32 %270, 3, !dbg !20486
  br i1 %cmp388, label %land.lhs.true390, label %if.end402, !dbg !20487

land.lhs.true390:                                 ; preds = %if.then387
  %271 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20488, !tbaa !2993
  %fts_info391 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %271, i32 0, i32 15, !dbg !20489, !ctir !2315
  %272 = load i16, i16* %fts_info391, align 8, !dbg !20489, !tbaa !3799, !ctir !34
  %conv392 = zext i16 %272 to i32, !dbg !20488
  %cmp393 = icmp ne i32 %conv392, 4, !dbg !20490
  br i1 %cmp393, label %land.lhs.true395, label %if.end402, !dbg !20491

land.lhs.true395:                                 ; preds = %land.lhs.true390
  %273 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20492, !tbaa !2993
  %fts_info396 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %273, i32 0, i32 15, !dbg !20493, !ctir !2315
  %274 = load i16, i16* %fts_info396, align 8, !dbg !20493, !tbaa !3799, !ctir !34
  %conv397 = zext i16 %274 to i32, !dbg !20492
  %cmp398 = icmp ne i32 %conv397, 7, !dbg !20494
  br i1 %cmp398, label %if.then400, label %if.end402, !dbg !20495

if.then400:                                       ; preds = %land.lhs.true395
  %275 = load %struct._ftsent*, %struct._ftsent** %cur, align 8, !dbg !20496, !tbaa !2993
  %fts_info401 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %275, i32 0, i32 15, !dbg !20497, !ctir !2315
  store i16 6, i16* %fts_info401, align 8, !dbg !20498, !tbaa !3799, !ctir !34
  br label %if.end402, !dbg !20496

if.end402:                                        ; preds = %if.then400, %land.lhs.true395, %land.lhs.true390, %if.then387
  %276 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20499, !tbaa !2993
  call void @fts_lfree(%struct._ftsent* %276), !dbg !20500
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !20501
  br label %return, !dbg !20501

if.end403:                                        ; preds = %if.end385
  %277 = load i8, i8* %sort_by_inode, align 1, !dbg !20502, !tbaa !3104
  %tobool404 = trunc i8 %277 to i1, !dbg !20502
  br i1 %tobool404, label %if.then405, label %if.end409, !dbg !20504

if.then405:                                       ; preds = %if.end403
  %278 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20505, !tbaa !2993
  %fts_compar406 = getelementptr inbounds %struct.FTS, %struct.FTS* %278, i32 0, i32 9, !dbg !20507, !ctir !2332
  store i32 (%struct._ftsent**, %struct._ftsent**)* @fts_compare_ino, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar406, align 8, !dbg !20508, !tbaa !18127, !ctir !2346
  %279 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20509, !tbaa !2993
  %280 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20510, !tbaa !2993
  %281 = load i64, i64* %nitems, align 8, !dbg !20511, !tbaa !3837
  %call407 = call %struct._ftsent* @fts_sort(%struct.FTS* %279, %struct._ftsent* %280, i64 %281), !dbg !20512
  store %struct._ftsent* %call407, %struct._ftsent** %head, align 8, !dbg !20513, !tbaa !2993
  %282 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20514, !tbaa !2993
  %fts_compar408 = getelementptr inbounds %struct.FTS, %struct.FTS* %282, i32 0, i32 9, !dbg !20515, !ctir !2332
  store i32 (%struct._ftsent**, %struct._ftsent**)* null, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar408, align 8, !dbg !20516, !tbaa !18127, !ctir !2346
  br label %if.end409, !dbg !20517

if.end409:                                        ; preds = %if.then405, %if.end403
  %283 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20518, !tbaa !2993
  %fts_compar410 = getelementptr inbounds %struct.FTS, %struct.FTS* %283, i32 0, i32 9, !dbg !20520, !ctir !2332
  %284 = load i32 (%struct._ftsent**, %struct._ftsent**)*, i32 (%struct._ftsent**, %struct._ftsent**)** %fts_compar410, align 8, !dbg !20520, !tbaa !18127, !ctir !2346
  %tobool411 = icmp ne i32 (%struct._ftsent**, %struct._ftsent**)* %284, null, !dbg !20518
  br i1 %tobool411, label %land.lhs.true412, label %if.end417, !dbg !20521

land.lhs.true412:                                 ; preds = %if.end409
  %285 = load i64, i64* %nitems, align 8, !dbg !20522, !tbaa !3837
  %cmp413 = icmp ugt i64 %285, 1, !dbg !20523
  br i1 %cmp413, label %if.then415, label %if.end417, !dbg !20524

if.then415:                                       ; preds = %land.lhs.true412
  %286 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20525, !tbaa !2993
  %287 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20526, !tbaa !2993
  %288 = load i64, i64* %nitems, align 8, !dbg !20527, !tbaa !3837
  %call416 = call %struct._ftsent* @fts_sort(%struct.FTS* %286, %struct._ftsent* %287, i64 %288), !dbg !20528
  store %struct._ftsent* %call416, %struct._ftsent** %head, align 8, !dbg !20529, !tbaa !2993
  br label %if.end417, !dbg !20530

if.end417:                                        ; preds = %if.then415, %land.lhs.true412, %if.end409
  %289 = load %struct._ftsent*, %struct._ftsent** %head, align 8, !dbg !20531, !tbaa !2993
  store %struct._ftsent* %289, %struct._ftsent** %retval, align 8, !dbg !20532
  br label %return, !dbg !20532

return:                                           ; preds = %if.end417, %if.end402, %if.then381, %do.end253, %do.end224, %if.then53, %if.end36, %if.end
  %290 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !20533
  ret %struct._ftsent* %290, !dbg !20533
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @restore_initial_cwd(%struct.FTS* %sp) #4 !dbg !20534 !ctir !2415 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %fail = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20535, metadata !DIExpression()), !dbg !20536
  call void @llvm.dbg.declare(metadata i32* %fail, metadata !20537, metadata !DIExpression()), !dbg !20538
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20539, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20539, !ctir !2332
  %1 = load i32, i32* %fts_options, align 8, !dbg !20539, !tbaa !17900, !ctir !5
  %and = and i32 %1, 4, !dbg !20539
  %tobool = icmp ne i32 %and, 0, !dbg !20539
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !20539

land.rhs:                                         ; preds = %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20539, !tbaa !2993
  %fts_options1 = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 10, !dbg !20539, !ctir !2332
  %3 = load i32, i32* %fts_options1, align 8, !dbg !20539, !tbaa !17900, !ctir !5
  %and2 = and i32 %3, 512, !dbg !20539
  %tobool3 = icmp ne i32 %and2, 0, !dbg !20539
  br i1 %tobool3, label %cond.true, label %cond.false8, !dbg !20539

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20539, !tbaa !2993
  %5 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20539, !tbaa !2993
  %fts_options4 = getelementptr inbounds %struct.FTS, %struct.FTS* %5, i32 0, i32 10, !dbg !20539, !ctir !2332
  %6 = load i32, i32* %fts_options4, align 8, !dbg !20539, !tbaa !17900, !ctir !5
  %and5 = and i32 %6, 512, !dbg !20539
  %tobool6 = icmp ne i32 %and5, 0, !dbg !20539
  br i1 %tobool6, label %cond.true7, label %cond.false, !dbg !20539

cond.true7:                                       ; preds = %cond.true
  br label %cond.end, !dbg !20539

cond.false:                                       ; preds = %cond.true
  %7 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20539, !tbaa !2993
  %fts_rfd = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 5, !dbg !20539, !ctir !2332
  %8 = load i32, i32* %fts_rfd, align 8, !dbg !20539, !tbaa !18370, !ctir !5
  br label %cond.end, !dbg !20539

cond.end:                                         ; preds = %cond.false, %cond.true7
  %cond = phi i32 [ -100, %cond.true7 ], [ %8, %cond.false ], !dbg !20539
  call void @cwd_advance_fd(%struct.FTS* %4, i32 %cond, i1 zeroext true), !dbg !20539
  br label %cond.end17, !dbg !20539

cond.false8:                                      ; preds = %land.rhs
  %9 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20539, !tbaa !2993
  %fts_options9 = getelementptr inbounds %struct.FTS, %struct.FTS* %9, i32 0, i32 10, !dbg !20539, !ctir !2332
  %10 = load i32, i32* %fts_options9, align 8, !dbg !20539, !tbaa !17900, !ctir !5
  %and10 = and i32 %10, 512, !dbg !20539
  %tobool11 = icmp ne i32 %and10, 0, !dbg !20539
  br i1 %tobool11, label %cond.true12, label %cond.false13, !dbg !20539

cond.true12:                                      ; preds = %cond.false8
  br label %cond.end15, !dbg !20539

cond.false13:                                     ; preds = %cond.false8
  %11 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20539, !tbaa !2993
  %fts_rfd14 = getelementptr inbounds %struct.FTS, %struct.FTS* %11, i32 0, i32 5, !dbg !20539, !ctir !2332
  %12 = load i32, i32* %fts_rfd14, align 8, !dbg !20539, !tbaa !18370, !ctir !5
  br label %cond.end15, !dbg !20539

cond.end15:                                       ; preds = %cond.false13, %cond.true12
  %cond16 = phi i32 [ -100, %cond.true12 ], [ %12, %cond.false13 ], !dbg !20539
  %call = call i32 @fchdir(i32 %cond16) #12, !dbg !20539
  br label %cond.end17, !dbg !20539

cond.end17:                                       ; preds = %cond.end15, %cond.end
  %cond18 = phi i32 [ 0, %cond.end ], [ %call, %cond.end15 ], !dbg !20539
  %tobool19 = icmp ne i32 %cond18, 0, !dbg !20539
  br label %land.end

land.end:                                         ; preds = %cond.end17, %entry
  %13 = phi i1 [ false, %entry ], [ %tobool19, %cond.end17 ], !dbg !20540
  %land.ext = zext i1 %13 to i32, !dbg !20539
  store i32 %land.ext, i32* %fail, align 4, !dbg !20538, !tbaa !2980
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20541, !tbaa !2993
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 13, !dbg !20542, !ctir !2332
  call void @fd_ring_clear(%struct.I_ring* %fts_fd_ring), !dbg !20543
  %15 = load i32, i32* %fail, align 4, !dbg !20544, !tbaa !2980
  ret i32 %15, !dbg !20545
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_load(%struct.FTS* %sp, %struct._ftsent* %p) #4 !dbg !20546 !ctir !2444 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %len = alloca i64, align 8, !ctir !52
  %cp = alloca i8*, align 8, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20547, metadata !DIExpression()), !dbg !20548
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20549, metadata !DIExpression()), !dbg !20550
  call void @llvm.dbg.declare(metadata i64* %len, metadata !20551, metadata !DIExpression()), !dbg !20552
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !20553, metadata !DIExpression()), !dbg !20554
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20555, !tbaa !2993
  %fts_namelen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 13, !dbg !20556, !ctir !2315
  %1 = load i64, i64* %fts_namelen, align 8, !dbg !20556, !tbaa !3837, !ctir !52
  %2 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20557, !tbaa !2993
  %fts_pathlen = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 10, !dbg !20558, !ctir !2315
  store i64 %1, i64* %fts_pathlen, align 8, !dbg !20559, !tbaa !3837, !ctir !52
  store i64 %1, i64* %len, align 8, !dbg !20560, !tbaa !3837
  %3 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20561, !tbaa !2993
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %3, i32 0, i32 4, !dbg !20562, !ctir !2332
  %4 = load i8*, i8** %fts_path, align 8, !dbg !20562, !tbaa !18389, !ctir !7
  %5 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20563, !tbaa !2993
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 19, !dbg !20564, !ctir !2315
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20565
  %6 = load i64, i64* %len, align 8, !dbg !20566, !tbaa !3837
  %add = add i64 %6, 1, !dbg !20567
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %4, i8* align 8 %arraydecay, i64 %add, i1 false), !dbg !20565
  %7 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20568, !tbaa !2993
  %fts_name1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20570, !ctir !2315
  %arraydecay2 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name1, i64 0, i64 0, !dbg !20568
  %call = call i8* @strrchr(i8* %arraydecay2, i32 47) #14, !dbg !20571
  store i8* %call, i8** %cp, align 8, !dbg !20572, !tbaa !2993
  %tobool = icmp ne i8* %call, null, !dbg !20572
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !20573

land.lhs.true:                                    ; preds = %entry
  %8 = load i8*, i8** %cp, align 8, !dbg !20574, !tbaa !2993
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20575, !tbaa !2993
  %fts_name3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 19, !dbg !20576, !ctir !2315
  %arraydecay4 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name3, i64 0, i64 0, !dbg !20575
  %cmp = icmp ne i8* %8, %arraydecay4, !dbg !20577
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20578

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load i8*, i8** %cp, align 8, !dbg !20579, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 1, !dbg !20579, !ctir !7
  %11 = load i8, i8* %arrayidx, align 1, !dbg !20579, !tbaa !3652
  %conv = sext i8 %11 to i32, !dbg !20579
  %tobool5 = icmp ne i32 %conv, 0, !dbg !20579
  br i1 %tobool5, label %if.then, label %if.end, !dbg !20580

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %12 = load i8*, i8** %cp, align 8, !dbg !20581, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %12, i32 1, !dbg !20581
  store i8* %incdec.ptr, i8** %cp, align 8, !dbg !20581, !tbaa !2993
  %call6 = call i64 @strlen(i8* %incdec.ptr) #14, !dbg !20583
  store i64 %call6, i64* %len, align 8, !dbg !20584, !tbaa !3837
  %13 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20585, !tbaa !2993
  %fts_name7 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 19, !dbg !20586, !ctir !2315
  %arraydecay8 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name7, i64 0, i64 0, !dbg !20587
  %14 = load i8*, i8** %cp, align 8, !dbg !20588, !tbaa !2993
  %15 = load i64, i64* %len, align 8, !dbg !20589, !tbaa !3837
  %add9 = add i64 %15, 1, !dbg !20590
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %arraydecay8, i8* align 1 %14, i64 %add9, i1 false), !dbg !20587
  %16 = load i64, i64* %len, align 8, !dbg !20591, !tbaa !3837
  %17 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20592, !tbaa !2993
  %fts_namelen10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %17, i32 0, i32 13, !dbg !20593, !ctir !2315
  store i64 %16, i64* %fts_namelen10, align 8, !dbg !20594, !tbaa !3837, !ctir !52
  br label %if.end, !dbg !20595

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %18 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20596, !tbaa !2993
  %fts_path11 = getelementptr inbounds %struct.FTS, %struct.FTS* %18, i32 0, i32 4, !dbg !20597, !ctir !2332
  %19 = load i8*, i8** %fts_path11, align 8, !dbg !20597, !tbaa !18389, !ctir !7
  %20 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20598, !tbaa !2993
  %fts_path12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %20, i32 0, i32 7, !dbg !20599, !ctir !2315
  store i8* %19, i8** %fts_path12, align 8, !dbg !20600, !tbaa !2993, !ctir !7
  %21 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20601, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !20602, !ctir !2315
  store i8* %19, i8** %fts_accpath, align 8, !dbg !20603, !tbaa !2993, !ctir !7
  ret void, !dbg !20604
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @leaf_optimization(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20605 !ctir !2448 {
entry:
  %retval = alloca i32, align 4, !ctir !2305
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2313
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20606, metadata !DIExpression()), !dbg !20607
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20608, metadata !DIExpression()), !dbg !20609
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20610, !tbaa !2993
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20611, !tbaa !2980
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20612
  switch i64 %call, label %sw.default [
    i64 1382369651, label %sw.bb
    i64 1481003842, label %sw.bb
    i64 0, label %sw.bb1
    i64 1397113167, label %sw.bb2
    i64 4283649346, label %sw.bb3
    i64 26985, label %sw.bb4
    i64 40864, label %sw.bb5
  ], !dbg !20613

sw.bb:                                            ; preds = %entry, %entry
  store i32 2, i32* %retval, align 4, !dbg !20614
  br label %return, !dbg !20614

sw.bb1:                                           ; preds = %entry
  br label %sw.bb2, !dbg !20616

sw.bb2:                                           ; preds = %entry, %sw.bb1
  br label %sw.bb3, !dbg !20617

sw.bb3:                                           ; preds = %entry, %sw.bb2
  br label %sw.bb4, !dbg !20618

sw.bb4:                                           ; preds = %entry, %sw.bb3
  br label %sw.bb5, !dbg !20619

sw.bb5:                                           ; preds = %entry, %sw.bb4
  store i32 0, i32* %retval, align 4, !dbg !20620
  br label %return, !dbg !20620

sw.default:                                       ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !20621
  br label %return, !dbg !20621

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb
  %2 = load i32, i32* %retval, align 4, !dbg !20622
  ret i32 %2, !dbg !20622
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @enter_dir(%struct.FTS* %fts, %struct._ftsent* %ent) #4 !dbg !20623 !ctir !2463 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %fts.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %ent.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %st = alloca %struct.stat*, align 8, !ctir !2446
  %ad = alloca %struct.Active_dir*, align 8, !ctir !2465
  %ad_from_table = alloca %struct.Active_dir*, align 8, !ctir !2465
  store %struct.FTS* %fts, %struct.FTS** %fts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %fts.addr, metadata !20624, metadata !DIExpression()), !dbg !20625
  store %struct._ftsent* %ent, %struct._ftsent** %ent.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %ent.addr, metadata !20626, metadata !DIExpression()), !dbg !20627
  %0 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20628, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 10, !dbg !20630, !ctir !2332
  %1 = load i32, i32* %fts_options, align 8, !dbg !20630, !tbaa !17900, !ctir !5
  %and = and i32 %1, 258, !dbg !20631
  %tobool = icmp ne i32 %and, 0, !dbg !20631
  br i1 %tobool, label %if.then, label %if.else, !dbg !20632

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.stat** %st, metadata !20633, metadata !DIExpression()), !dbg !20635
  %2 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20636, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %2, i32 0, i32 18, !dbg !20637, !ctir !2315
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20636
  store %struct.stat* %arraydecay, %struct.stat** %st, align 8, !dbg !20635, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad, metadata !20638, metadata !DIExpression()), !dbg !20639
  %call = call noalias i8* @malloc(i64 24) #12, !dbg !20640
  %3 = bitcast i8* %call to %struct.Active_dir*, !dbg !20640
  store %struct.Active_dir* %3, %struct.Active_dir** %ad, align 8, !dbg !20639, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.Active_dir** %ad_from_table, metadata !20641, metadata !DIExpression()), !dbg !20642
  %4 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20643, !tbaa !2993
  %tobool1 = icmp ne %struct.Active_dir* %4, null, !dbg !20643
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !20645

if.then2:                                         ; preds = %if.then
  store i1 false, i1* %retval, align 1, !dbg !20646
  br label %return, !dbg !20646

if.end:                                           ; preds = %if.then
  %5 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20647, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 0, !dbg !20648, !ctir !2447
  %6 = load i64, i64* %st_dev, align 8, !dbg !20648, !tbaa !3862, !ctir !228
  %7 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20649, !tbaa !2993
  %dev = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %7, i32 0, i32 0, !dbg !20650, !ctir !2429
  store i64 %6, i64* %dev, align 8, !dbg !20651, !tbaa !18915, !ctir !227
  %8 = load %struct.stat*, %struct.stat** %st, align 8, !dbg !20652, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 1, !dbg !20653, !ctir !2447
  %9 = load i64, i64* %st_ino, align 8, !dbg !20653, !tbaa !3859, !ctir !225
  %10 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20654, !tbaa !2993
  %ino = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %10, i32 0, i32 1, !dbg !20655, !ctir !2429
  store i64 %9, i64* %ino, align 8, !dbg !20656, !tbaa !18891, !ctir !224
  %11 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20657, !tbaa !2993
  %12 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20658, !tbaa !2993
  %fts_ent = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %12, i32 0, i32 2, !dbg !20659, !ctir !2429
  store %struct._ftsent* %11, %struct._ftsent** %fts_ent, align 8, !dbg !20660, !tbaa !20661, !ctir !2414
  %13 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20662, !tbaa !2993
  %fts_cycle = getelementptr inbounds %struct.FTS, %struct.FTS* %13, i32 0, i32 12, !dbg !20663, !ctir !2332
  %ht = bitcast %union.anon* %fts_cycle to %struct.hash_table**, !dbg !20664
  %14 = load %struct.hash_table*, %struct.hash_table** %ht, align 8, !dbg !20664, !tbaa !3652, !ctir !2355
  %15 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20665, !tbaa !2993
  %16 = bitcast %struct.Active_dir* %15 to i8*, !dbg !20665
  %call3 = call i8* @hash_insert(%struct.hash_table* %14, i8* %16), !dbg !20666
  %17 = bitcast i8* %call3 to %struct.Active_dir*, !dbg !20666
  store %struct.Active_dir* %17, %struct.Active_dir** %ad_from_table, align 8, !dbg !20667, !tbaa !2993
  %18 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20668, !tbaa !2993
  %19 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20670, !tbaa !2993
  %cmp = icmp ne %struct.Active_dir* %18, %19, !dbg !20671
  br i1 %cmp, label %if.then4, label %if.end10, !dbg !20672

if.then4:                                         ; preds = %if.end
  %20 = load %struct.Active_dir*, %struct.Active_dir** %ad, align 8, !dbg !20673, !tbaa !2993
  %21 = bitcast %struct.Active_dir* %20 to i8*, !dbg !20673
  call void @free(i8* %21) #12, !dbg !20675
  %22 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20676, !tbaa !2993
  %tobool5 = icmp ne %struct.Active_dir* %22, null, !dbg !20676
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !20678

if.then6:                                         ; preds = %if.then4
  store i1 false, i1* %retval, align 1, !dbg !20679
  br label %return, !dbg !20679

if.end7:                                          ; preds = %if.then4
  %23 = load %struct.Active_dir*, %struct.Active_dir** %ad_from_table, align 8, !dbg !20680, !tbaa !2993
  %fts_ent8 = getelementptr inbounds %struct.Active_dir, %struct.Active_dir* %23, i32 0, i32 2, !dbg !20681, !ctir !2429
  %24 = load %struct._ftsent*, %struct._ftsent** %fts_ent8, align 8, !dbg !20681, !tbaa !20661, !ctir !2414
  %25 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20682, !tbaa !2993
  %fts_cycle9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 0, !dbg !20683, !ctir !2315
  store %struct._ftsent* %24, %struct._ftsent** %fts_cycle9, align 8, !dbg !20684, !tbaa !2993, !ctir !2319
  %26 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20685, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %26, i32 0, i32 15, !dbg !20686, !ctir !2315
  store i16 2, i16* %fts_info, align 8, !dbg !20687, !tbaa !3799, !ctir !34
  br label %if.end10, !dbg !20688

if.end10:                                         ; preds = %if.end7, %if.end
  br label %if.end19, !dbg !20689

if.else:                                          ; preds = %entry
  %27 = load %struct.FTS*, %struct.FTS** %fts.addr, align 8, !dbg !20690, !tbaa !2993
  %fts_cycle11 = getelementptr inbounds %struct.FTS, %struct.FTS* %27, i32 0, i32 12, !dbg !20693, !ctir !2332
  %state = bitcast %union.anon* %fts_cycle11 to %struct.cycle_check_state**, !dbg !20694
  %28 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state, align 8, !dbg !20694, !tbaa !3652, !ctir !2355
  %29 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20695, !tbaa !2993
  %fts_statp12 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 18, !dbg !20696, !ctir !2315
  %arraydecay13 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp12, i64 0, i64 0, !dbg !20695
  %call14 = call zeroext i1 @cycle_check(%struct.cycle_check_state* %28, %struct.stat* %arraydecay13), !dbg !20697
  br i1 %call14, label %if.then15, label %if.end18, !dbg !20698

if.then15:                                        ; preds = %if.else
  %30 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20699, !tbaa !2993
  %31 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20701, !tbaa !2993
  %fts_cycle16 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 0, !dbg !20702, !ctir !2315
  store %struct._ftsent* %30, %struct._ftsent** %fts_cycle16, align 8, !dbg !20703, !tbaa !2993, !ctir !2319
  %32 = load %struct._ftsent*, %struct._ftsent** %ent.addr, align 8, !dbg !20704, !tbaa !2993
  %fts_info17 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 15, !dbg !20705, !ctir !2315
  store i16 2, i16* %fts_info17, align 8, !dbg !20706, !tbaa !3799, !ctir !34
  br label %if.end18, !dbg !20707

if.end18:                                         ; preds = %if.then15, %if.else
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.end10
  store i1 true, i1* %retval, align 1, !dbg !20708
  br label %return, !dbg !20708

return:                                           ; preds = %if.end19, %if.then6, %if.then2
  %33 = load i1, i1* %retval, align 1, !dbg !20709
  ret i1 %33, !dbg !20709
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cwd_advance_fd(%struct.FTS* %sp, i32 %fd, i1 zeroext %chdir_down_one) #4 !dbg !20710 !ctir !2466 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %fd.addr = alloca i32, align 4, !ctir !5
  %chdir_down_one.addr = alloca i8, align 1, !ctir !117
  %old = alloca i32, align 4, !ctir !5
  %prev_fd_in_slot = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20711, metadata !DIExpression()), !dbg !20712
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20713, metadata !DIExpression()), !dbg !20714
  %frombool = zext i1 %chdir_down_one to i8
  store i8 %frombool, i8* %chdir_down_one.addr, align 1, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %chdir_down_one.addr, metadata !20715, metadata !DIExpression()), !dbg !20716
  call void @llvm.dbg.declare(metadata i32* %old, metadata !20717, metadata !DIExpression()), !dbg !20718
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20719, !tbaa !2993
  %fts_cwd_fd = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 6, !dbg !20720, !ctir !2332
  %1 = load i32, i32* %fts_cwd_fd, align 4, !dbg !20720, !tbaa !3812, !ctir !5
  store i32 %1, i32* %old, align 4, !dbg !20718, !tbaa !2980
  br label %do.body, !dbg !20721

do.body:                                          ; preds = %entry
  %2 = load i32, i32* %old, align 4, !dbg !20722, !tbaa !2980
  %3 = load i32, i32* %fd.addr, align 4, !dbg !20722, !tbaa !2980
  %cmp = icmp ne i32 %2, %3, !dbg !20722
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !20722

lor.lhs.false:                                    ; preds = %do.body
  %4 = load i32, i32* %old, align 4, !dbg !20722, !tbaa !2980
  %cmp1 = icmp eq i32 %4, -100, !dbg !20722
  br i1 %cmp1, label %if.end, label %if.then, !dbg !20725

if.then:                                          ; preds = %lor.lhs.false
  call void @abort() #13, !dbg !20722
  unreachable, !dbg !20722

if.end:                                           ; preds = %lor.lhs.false, %do.body
  br label %do.end, !dbg !20725

do.end:                                           ; preds = %if.end
  %5 = load i8, i8* %chdir_down_one.addr, align 1, !dbg !20726, !tbaa !3104
  %tobool = trunc i8 %5 to i1, !dbg !20726
  br i1 %tobool, label %if.then2, label %if.else, !dbg !20728

if.then2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %prev_fd_in_slot, metadata !20729, metadata !DIExpression()), !dbg !20731
  %6 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20732, !tbaa !2993
  %fts_fd_ring = getelementptr inbounds %struct.FTS, %struct.FTS* %6, i32 0, i32 13, !dbg !20733, !ctir !2332
  %7 = load i32, i32* %old, align 4, !dbg !20734, !tbaa !2980
  %call = call i32 @i_ring_push(%struct.I_ring* %fts_fd_ring, i32 %7), !dbg !20735
  store i32 %call, i32* %prev_fd_in_slot, align 4, !dbg !20731, !tbaa !2980
  %8 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !20736, !tbaa !2980
  %cmp3 = icmp sle i32 0, %8, !dbg !20738
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !20739

if.then4:                                         ; preds = %if.then2
  %9 = load i32, i32* %prev_fd_in_slot, align 4, !dbg !20740, !tbaa !2980
  %call5 = call i32 @close(i32 %9), !dbg !20741
  br label %if.end6, !dbg !20741

if.end6:                                          ; preds = %if.then4, %if.then2
  br label %if.end14, !dbg !20742

if.else:                                          ; preds = %do.end
  %10 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20743, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %10, i32 0, i32 10, !dbg !20743, !ctir !2332
  %11 = load i32, i32* %fts_options, align 8, !dbg !20743, !tbaa !17900, !ctir !5
  %and = and i32 %11, 4, !dbg !20743
  %tobool7 = icmp ne i32 %and, 0, !dbg !20743
  br i1 %tobool7, label %if.end13, label %if.then8, !dbg !20745

if.then8:                                         ; preds = %if.else
  %12 = load i32, i32* %old, align 4, !dbg !20746, !tbaa !2980
  %cmp9 = icmp sle i32 0, %12, !dbg !20749
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !20750

if.then10:                                        ; preds = %if.then8
  %13 = load i32, i32* %old, align 4, !dbg !20751, !tbaa !2980
  %call11 = call i32 @close(i32 %13), !dbg !20752
  br label %if.end12, !dbg !20752

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %if.end13, !dbg !20753

if.end13:                                         ; preds = %if.end12, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.end6
  %14 = load i32, i32* %fd.addr, align 4, !dbg !20754, !tbaa !2980
  %15 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20755, !tbaa !2993
  %fts_cwd_fd15 = getelementptr inbounds %struct.FTS, %struct.FTS* %15, i32 0, i32 6, !dbg !20756, !ctir !2332
  store i32 %14, i32* %fts_cwd_fd15, align 4, !dbg !20757, !tbaa !3812, !ctir !5
  ret void, !dbg !20758
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @filesystem_type(%struct._ftsent* %p, i32 %fd) #4 !dbg !20759 !ctir !2450 {
entry:
  %retval = alloca i64, align 8, !ctir !2452
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2313
  %fd.addr = alloca i32, align 4, !ctir !5
  %sp = alloca %struct.FTS*, align 8, !ctir !2331
  %h = alloca %struct.hash_table*, align 8, !ctir !2454
  %ent = alloca %struct.timespec*, align 8, !ctir !2456
  %fs_buf = alloca %struct.statfs, align 8, !ctir !20760
  %tmp = alloca %struct.timespec, align 8, !ctir !2457
  %t2 = alloca %struct.timespec*, align 8, !ctir !2456
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20783, metadata !DIExpression()), !dbg !20784
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20785, metadata !DIExpression()), !dbg !20786
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp, metadata !20787, metadata !DIExpression()), !dbg !20788
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20789, !tbaa !2993
  %fts_fts = getelementptr inbounds %struct._ftsent, %struct._ftsent* %0, i32 0, i32 11, !dbg !20790, !ctir !2314
  %1 = load %struct.FTS*, %struct.FTS** %fts_fts, align 8, !dbg !20790, !tbaa !2993, !ctir !2331
  store %struct.FTS* %1, %struct.FTS** %sp, align 8, !dbg !20788, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.hash_table** %h, metadata !20791, metadata !DIExpression()), !dbg !20792
  %2 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20793, !tbaa !2993
  %fts_leaf_optimization_works_ht = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 11, !dbg !20794, !ctir !2332
  %3 = load %struct.hash_table*, %struct.hash_table** %fts_leaf_optimization_works_ht, align 8, !dbg !20794, !tbaa !19048, !ctir !1425
  store %struct.hash_table* %3, %struct.hash_table** %h, align 8, !dbg !20792, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %ent, metadata !20795, metadata !DIExpression()), !dbg !20796
  call void @llvm.dbg.declare(metadata %struct.statfs* %fs_buf, metadata !20797, metadata !DIExpression()), !dbg !20798
  %4 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20799, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !20799, !ctir !2332
  %5 = load i32, i32* %fts_options, align 8, !dbg !20799, !tbaa !17900, !ctir !5
  %and = and i32 %5, 512, !dbg !20799
  %tobool = icmp ne i32 %and, 0, !dbg !20799
  br i1 %tobool, label %if.end, label %if.then, !dbg !20801

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !20802
  br label %return, !dbg !20802

if.end:                                           ; preds = %entry
  %6 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20803, !tbaa !2993
  %tobool1 = icmp ne %struct.hash_table* %6, null, !dbg !20803
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !20805

if.then2:                                         ; preds = %if.end
  %call = call %struct.hash_table* @hash_initialize(i64 13, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_type_hash, i1 (i8*, i8*)* @dev_type_compare, void (i8*)* @free), !dbg !20806
  %7 = load %struct.FTS*, %struct.FTS** %sp, align 8, !dbg !20807, !tbaa !2993
  %fts_leaf_optimization_works_ht3 = getelementptr inbounds %struct.FTS, %struct.FTS* %7, i32 0, i32 11, !dbg !20808, !ctir !2332
  store %struct.hash_table* %call, %struct.hash_table** %fts_leaf_optimization_works_ht3, align 8, !dbg !20809, !tbaa !19048, !ctir !1425
  store %struct.hash_table* %call, %struct.hash_table** %h, align 8, !dbg !20810, !tbaa !2993
  br label %if.end4, !dbg !20811

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20812, !tbaa !2993
  %tobool5 = icmp ne %struct.hash_table* %8, null, !dbg !20812
  br i1 %tobool5, label %if.then6, label %if.end12, !dbg !20814

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata %struct.timespec* %tmp, metadata !20815, metadata !DIExpression()), !dbg !20817
  %9 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20818, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 18, !dbg !20819, !ctir !2314
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !20820
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 0, !dbg !20820, !ctir !2447
  %10 = load i64, i64* %st_dev, align 8, !dbg !20820, !tbaa !3862, !ctir !228
  %st_dev7 = getelementptr inbounds %struct.timespec, %struct.timespec* %tmp, i32 0, i32 0, !dbg !20821, !ctir !2457
  store i64 %10, i64* %st_dev7, align 8, !dbg !20822, !tbaa !20823, !ctir !227
  %11 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20825, !tbaa !2993
  %12 = bitcast %struct.timespec* %tmp to i8*, !dbg !20826
  %call8 = call i8* @hash_lookup(%struct.hash_table* %11, i8* %12), !dbg !20827
  %13 = bitcast i8* %call8 to %struct.timespec*, !dbg !20827
  store %struct.timespec* %13, %struct.timespec** %ent, align 8, !dbg !20828, !tbaa !2993
  %14 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20829, !tbaa !2993
  %tobool9 = icmp ne %struct.timespec* %14, null, !dbg !20829
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !20831

if.then10:                                        ; preds = %if.then6
  %15 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20832, !tbaa !2993
  %f_type = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i32 0, i32 1, !dbg !20833, !ctir !2457
  %16 = load i64, i64* %f_type, align 8, !dbg !20833, !tbaa !20834, !ctir !2452
  store i64 %16, i64* %retval, align 8, !dbg !20835
  br label %return, !dbg !20835

if.end11:                                         ; preds = %if.then6
  br label %if.end12, !dbg !20836

if.end12:                                         ; preds = %if.end11, %if.end4
  %17 = load i32, i32* %fd.addr, align 4, !dbg !20837, !tbaa !2980
  %cmp = icmp slt i32 %17, 0, !dbg !20839
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !20840

lor.lhs.false:                                    ; preds = %if.end12
  %18 = load i32, i32* %fd.addr, align 4, !dbg !20841, !tbaa !2980
  %call13 = call i32 @fstatfs(i32 %18, %struct.statfs* %fs_buf) #12, !dbg !20842
  %cmp14 = icmp ne i32 %call13, 0, !dbg !20843
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !20844

if.then15:                                        ; preds = %lor.lhs.false, %if.end12
  store i64 0, i64* %retval, align 8, !dbg !20845
  br label %return, !dbg !20845

if.end16:                                         ; preds = %lor.lhs.false
  %19 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20846, !tbaa !2993
  %tobool17 = icmp ne %struct.hash_table* %19, null, !dbg !20846
  br i1 %tobool17, label %if.then18, label %if.end36, !dbg !20848

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata %struct.timespec** %t2, metadata !20849, metadata !DIExpression()), !dbg !20851
  %call19 = call noalias i8* @malloc(i64 16) #12, !dbg !20852
  %20 = bitcast i8* %call19 to %struct.timespec*, !dbg !20852
  store %struct.timespec* %20, %struct.timespec** %t2, align 8, !dbg !20851, !tbaa !2993
  %21 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20853, !tbaa !2993
  %tobool20 = icmp ne %struct.timespec* %21, null, !dbg !20853
  br i1 %tobool20, label %if.then21, label %if.end35, !dbg !20855

if.then21:                                        ; preds = %if.then18
  %22 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20856, !tbaa !2993
  %fts_statp22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %22, i32 0, i32 18, !dbg !20858, !ctir !2314
  %arraydecay23 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp22, i64 0, i64 0, !dbg !20859
  %st_dev24 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay23, i32 0, i32 0, !dbg !20859, !ctir !2447
  %23 = load i64, i64* %st_dev24, align 8, !dbg !20859, !tbaa !3862, !ctir !228
  %24 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20860, !tbaa !2993
  %st_dev25 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i32 0, i32 0, !dbg !20861, !ctir !2457
  store i64 %23, i64* %st_dev25, align 8, !dbg !20862, !tbaa !20823, !ctir !227
  %f_type26 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !20863, !ctir !20760
  %25 = load i64, i64* %f_type26, align 8, !dbg !20863, !tbaa !20864, !ctir !2453
  %26 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20867, !tbaa !2993
  %f_type27 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i32 0, i32 1, !dbg !20868, !ctir !2457
  store i64 %25, i64* %f_type27, align 8, !dbg !20869, !tbaa !20834, !ctir !2452
  %27 = load %struct.hash_table*, %struct.hash_table** %h, align 8, !dbg !20870, !tbaa !2993
  %28 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20871, !tbaa !2993
  %29 = bitcast %struct.timespec* %28 to i8*, !dbg !20871
  %call28 = call i8* @hash_insert(%struct.hash_table* %27, i8* %29), !dbg !20872
  %30 = bitcast i8* %call28 to %struct.timespec*, !dbg !20872
  store %struct.timespec* %30, %struct.timespec** %ent, align 8, !dbg !20873, !tbaa !2993
  %31 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20874, !tbaa !2993
  %tobool29 = icmp ne %struct.timespec* %31, null, !dbg !20874
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !20876

if.then30:                                        ; preds = %if.then21
  br label %do.body, !dbg !20877

do.body:                                          ; preds = %if.then30
  %32 = load %struct.timespec*, %struct.timespec** %ent, align 8, !dbg !20878, !tbaa !2993
  %33 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20878, !tbaa !2993
  %cmp31 = icmp eq %struct.timespec* %32, %33, !dbg !20878
  br i1 %cmp31, label %if.end33, label %if.then32, !dbg !20881

if.then32:                                        ; preds = %do.body
  call void @abort() #13, !dbg !20878
  unreachable, !dbg !20878

if.end33:                                         ; preds = %do.body
  br label %do.end, !dbg !20881

do.end:                                           ; preds = %if.end33
  br label %if.end34, !dbg !20881

if.else:                                          ; preds = %if.then21
  %34 = load %struct.timespec*, %struct.timespec** %t2, align 8, !dbg !20882, !tbaa !2993
  %35 = bitcast %struct.timespec* %34 to i8*, !dbg !20882
  call void @free(i8* %35) #12, !dbg !20883
  br label %if.end34

if.end34:                                         ; preds = %if.else, %do.end
  br label %if.end35, !dbg !20884

if.end35:                                         ; preds = %if.end34, %if.then18
  br label %if.end36, !dbg !20885

if.end36:                                         ; preds = %if.end35, %if.end16
  %f_type37 = getelementptr inbounds %struct.statfs, %struct.statfs* %fs_buf, i32 0, i32 0, !dbg !20886, !ctir !20760
  %36 = load i64, i64* %f_type37, align 8, !dbg !20886, !tbaa !20864, !ctir !2453
  store i64 %36, i64* %retval, align 8, !dbg !20887
  br label %return, !dbg !20887

return:                                           ; preds = %if.end36, %if.then15, %if.then10, %if.then
  %37 = load i64, i64* %retval, align 8, !dbg !20888
  ret i64 %37, !dbg !20888
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_type_hash(i8* %x, i64 %table_size) #4 !dbg !20889 !ctir !520 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %table_size.addr = alloca i64, align 8, !ctir !52
  %ax = alloca %struct.timespec*, align 8, !ctir !2461
  %dev = alloca i64, align 8, !ctir !459
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20890, metadata !DIExpression()), !dbg !20891
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !20892, metadata !DIExpression()), !dbg !20893
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !20894, metadata !DIExpression()), !dbg !20895
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20896, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !20896
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !20895, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %dev, metadata !20897, metadata !DIExpression()), !dbg !20898
  %2 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !20899, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i32 0, i32 0, !dbg !20900, !ctir !2462
  %3 = load i64, i64* %st_dev, align 8, !dbg !20900, !tbaa !20823, !ctir !227
  store i64 %3, i64* %dev, align 8, !dbg !20898, !tbaa !3837
  %4 = load i64, i64* %dev, align 8, !dbg !20901, !tbaa !3837
  %5 = load i64, i64* %table_size.addr, align 8, !dbg !20902, !tbaa !3837
  %rem = urem i64 %4, %5, !dbg !20903
  ret i64 %rem, !dbg !20904
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_type_compare(i8* %x, i8* %y) #4 !dbg !20905 !ctir !522 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %y.addr = alloca i8*, align 8, !ctir !428
  %ax = alloca %struct.timespec*, align 8, !ctir !2461
  %ay = alloca %struct.timespec*, align 8, !ctir !2461
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20906, metadata !DIExpression()), !dbg !20907
  store i8* %y, i8** %y.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !20908, metadata !DIExpression()), !dbg !20909
  call void @llvm.dbg.declare(metadata %struct.timespec** %ax, metadata !20910, metadata !DIExpression()), !dbg !20911
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20912, !tbaa !2993
  %1 = bitcast i8* %0 to %struct.timespec*, !dbg !20912
  store %struct.timespec* %1, %struct.timespec** %ax, align 8, !dbg !20911, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %ay, metadata !20913, metadata !DIExpression()), !dbg !20914
  %2 = load i8*, i8** %y.addr, align 8, !dbg !20915, !tbaa !2993
  %3 = bitcast i8* %2 to %struct.timespec*, !dbg !20915
  store %struct.timespec* %3, %struct.timespec** %ay, align 8, !dbg !20914, !tbaa !2993
  %4 = load %struct.timespec*, %struct.timespec** %ax, align 8, !dbg !20916, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0, !dbg !20917, !ctir !2462
  %5 = load i64, i64* %st_dev, align 8, !dbg !20917, !tbaa !20823, !ctir !227
  %6 = load %struct.timespec*, %struct.timespec** %ay, align 8, !dbg !20918, !tbaa !2993
  %st_dev1 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i32 0, i32 0, !dbg !20919, !ctir !2462
  %7 = load i64, i64* %st_dev1, align 8, !dbg !20919, !tbaa !20823, !ctir !227
  %cmp = icmp eq i64 %5, %7, !dbg !20920
  ret i1 %cmp, !dbg !20921
}

; Function Attrs: nounwind
declare dso_local i32 @fstatfs(i32, %struct.statfs*) #2

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_stat_type(%struct.stat* %st, i32 %dtype) #4 !dbg !20922 !ctir !2476 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !2478
  %dtype.addr = alloca i32, align 4, !ctir !67
  %type = alloca i32, align 4, !ctir !157
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !20923, metadata !DIExpression()), !dbg !20924
  store i32 %dtype, i32* %dtype.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dtype.addr, metadata !20925, metadata !DIExpression()), !dbg !20926
  call void @llvm.dbg.declare(metadata i32* %type, metadata !20927, metadata !DIExpression()), !dbg !20928
  %0 = load i32, i32* %dtype.addr, align 4, !dbg !20929, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 6, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 1, label %sw.bb3
    i32 10, label %sw.bb4
    i32 8, label %sw.bb5
    i32 12, label %sw.bb6
  ], !dbg !20930

sw.bb:                                            ; preds = %entry
  store i32 24576, i32* %type, align 4, !dbg !20931, !tbaa !2980
  br label %sw.epilog, !dbg !20933

sw.bb1:                                           ; preds = %entry
  store i32 8192, i32* %type, align 4, !dbg !20934, !tbaa !2980
  br label %sw.epilog, !dbg !20935

sw.bb2:                                           ; preds = %entry
  store i32 16384, i32* %type, align 4, !dbg !20936, !tbaa !2980
  br label %sw.epilog, !dbg !20937

sw.bb3:                                           ; preds = %entry
  store i32 4096, i32* %type, align 4, !dbg !20938, !tbaa !2980
  br label %sw.epilog, !dbg !20939

sw.bb4:                                           ; preds = %entry
  store i32 40960, i32* %type, align 4, !dbg !20940, !tbaa !2980
  br label %sw.epilog, !dbg !20941

sw.bb5:                                           ; preds = %entry
  store i32 32768, i32* %type, align 4, !dbg !20942, !tbaa !2980
  br label %sw.epilog, !dbg !20943

sw.bb6:                                           ; preds = %entry
  store i32 49152, i32* %type, align 4, !dbg !20944, !tbaa !2980
  br label %sw.epilog, !dbg !20945

sw.default:                                       ; preds = %entry
  store i32 0, i32* %type, align 4, !dbg !20946, !tbaa !2980
  br label %sw.epilog, !dbg !20947

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i32, i32* %type, align 4, !dbg !20948, !tbaa !2980
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !20949, !tbaa !2993
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 3, !dbg !20950, !ctir !2387
  store i32 %1, i32* %st_mode, align 8, !dbg !20951, !tbaa !3176, !ctir !130
  ret void, !dbg !20952
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dirent_inode_sort_may_be_useful(%struct._ftsent* %p, i32 %dir_fd) #4 !dbg !20953 !ctir !2479 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2313
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !20954, metadata !DIExpression()), !dbg !20955
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !20956, metadata !DIExpression()), !dbg !20957
  %0 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !20958, !tbaa !2993
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !20959, !tbaa !2980
  %call = call i64 @filesystem_type(%struct._ftsent* %0, i32 %1), !dbg !20960
  switch i64 %call, label %sw.default [
    i64 4283649346, label %sw.bb
    i64 26985, label %sw.bb
    i64 16914836, label %sw.bb
  ], !dbg !20961

sw.bb:                                            ; preds = %entry, %entry, %entry
  store i1 false, i1* %retval, align 1, !dbg !20962
  br label %return, !dbg !20962

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !20964
  br label %return, !dbg !20964

return:                                           ; preds = %sw.default, %sw.bb
  %2 = load i1, i1* %retval, align 1, !dbg !20965
  ret i1 %2, !dbg !20965
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fts_padjust(%struct.FTS* %sp, %struct._ftsent* %head) #4 !dbg !20966 !ctir !2444 {
entry:
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %head.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %addr = alloca i8*, align 8, !ctir !7
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !20967, metadata !DIExpression()), !dbg !20968
  store %struct._ftsent* %head, %struct._ftsent** %head.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %head.addr, metadata !20969, metadata !DIExpression()), !dbg !20970
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !20971, metadata !DIExpression()), !dbg !20972
  call void @llvm.dbg.declare(metadata i8** %addr, metadata !20973, metadata !DIExpression()), !dbg !20974
  %0 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20975, !tbaa !2993
  %fts_path = getelementptr inbounds %struct.FTS, %struct.FTS* %0, i32 0, i32 4, !dbg !20976, !ctir !2332
  %1 = load i8*, i8** %fts_path, align 8, !dbg !20976, !tbaa !18389, !ctir !7
  store i8* %1, i8** %addr, align 8, !dbg !20974, !tbaa !2993
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !20977, !tbaa !2993
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 1, !dbg !20979, !ctir !2332
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !20979, !tbaa !18986, !ctir !2319
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !20980, !tbaa !2993
  br label %for.cond, !dbg !20981

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20982, !tbaa !2993
  %tobool = icmp ne %struct._ftsent* %4, null, !dbg !20984
  br i1 %tobool, label %for.body, label %for.end, !dbg !20984

for.body:                                         ; preds = %for.cond
  br label %do.body, !dbg !20985

do.body:                                          ; preds = %for.body
  %5 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20986, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %5, i32 0, i32 6, !dbg !20986, !ctir !2315
  %6 = load i8*, i8** %fts_accpath, align 8, !dbg !20986, !tbaa !2993, !ctir !7
  %7 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20986, !tbaa !2993
  %fts_name = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 19, !dbg !20986, !ctir !2315
  %arraydecay = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name, i64 0, i64 0, !dbg !20986
  %cmp = icmp ne i8* %6, %arraydecay, !dbg !20986
  br i1 %cmp, label %if.then, label %if.end, !dbg !20989

if.then:                                          ; preds = %do.body
  %8 = load i8*, i8** %addr, align 8, !dbg !20990, !tbaa !2993
  %9 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20990, !tbaa !2993
  %fts_accpath1 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %9, i32 0, i32 6, !dbg !20990, !ctir !2315
  %10 = load i8*, i8** %fts_accpath1, align 8, !dbg !20990, !tbaa !2993, !ctir !7
  %11 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20990, !tbaa !2993
  %fts_path2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %11, i32 0, i32 7, !dbg !20990, !ctir !2315
  %12 = load i8*, i8** %fts_path2, align 8, !dbg !20990, !tbaa !2993, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %10 to i64, !dbg !20990
  %sub.ptr.rhs.cast = ptrtoint i8* %12 to i64, !dbg !20990
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !20990
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %sub.ptr.sub, !dbg !20990
  %13 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20990, !tbaa !2993
  %fts_accpath3 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %13, i32 0, i32 6, !dbg !20990, !ctir !2315
  store i8* %add.ptr, i8** %fts_accpath3, align 8, !dbg !20990, !tbaa !2993, !ctir !7
  br label %if.end, !dbg !20990

if.end:                                           ; preds = %if.then, %do.body
  %14 = load i8*, i8** %addr, align 8, !dbg !20989, !tbaa !2993
  %15 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20989, !tbaa !2993
  %fts_path4 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %15, i32 0, i32 7, !dbg !20989, !ctir !2315
  store i8* %14, i8** %fts_path4, align 8, !dbg !20989, !tbaa !2993, !ctir !7
  br label %do.end, !dbg !20989

do.end:                                           ; preds = %if.end
  br label %for.inc, !dbg !20989

for.inc:                                          ; preds = %do.end
  %16 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !20992, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %16, i32 0, i32 2, !dbg !20993, !ctir !2315
  %17 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !20993, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %17, %struct._ftsent** %p, align 8, !dbg !20994, !tbaa !2993
  br label %for.cond, !dbg !20995, !llvm.loop !20996

for.end:                                          ; preds = %for.cond
  %18 = load %struct._ftsent*, %struct._ftsent** %head.addr, align 8, !dbg !20998, !tbaa !2993
  store %struct._ftsent* %18, %struct._ftsent** %p, align 8, !dbg !21000, !tbaa !2993
  br label %for.cond5, !dbg !21001

for.cond5:                                        ; preds = %cond.end, %for.end
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21002, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !21004, !ctir !2315
  %20 = load i64, i64* %fts_level, align 8, !dbg !21004, !tbaa !3837, !ctir !539
  %cmp6 = icmp sge i64 %20, 0, !dbg !21005
  br i1 %cmp6, label %for.body7, label %for.end27, !dbg !21006

for.body7:                                        ; preds = %for.cond5
  br label %do.body8, !dbg !21007

do.body8:                                         ; preds = %for.body7
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21009, !tbaa !2993
  %fts_accpath9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !21009, !ctir !2315
  %22 = load i8*, i8** %fts_accpath9, align 8, !dbg !21009, !tbaa !2993, !ctir !7
  %23 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21009, !tbaa !2993
  %fts_name10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %23, i32 0, i32 19, !dbg !21009, !ctir !2315
  %arraydecay11 = getelementptr inbounds [0 x i8], [0 x i8]* %fts_name10, i64 0, i64 0, !dbg !21009
  %cmp12 = icmp ne i8* %22, %arraydecay11, !dbg !21009
  br i1 %cmp12, label %if.then13, label %if.end21, !dbg !21012

if.then13:                                        ; preds = %do.body8
  %24 = load i8*, i8** %addr, align 8, !dbg !21013, !tbaa !2993
  %25 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21013, !tbaa !2993
  %fts_accpath14 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %25, i32 0, i32 6, !dbg !21013, !ctir !2315
  %26 = load i8*, i8** %fts_accpath14, align 8, !dbg !21013, !tbaa !2993, !ctir !7
  %27 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21013, !tbaa !2993
  %fts_path15 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %27, i32 0, i32 7, !dbg !21013, !ctir !2315
  %28 = load i8*, i8** %fts_path15, align 8, !dbg !21013, !tbaa !2993, !ctir !7
  %sub.ptr.lhs.cast16 = ptrtoint i8* %26 to i64, !dbg !21013
  %sub.ptr.rhs.cast17 = ptrtoint i8* %28 to i64, !dbg !21013
  %sub.ptr.sub18 = sub i64 %sub.ptr.lhs.cast16, %sub.ptr.rhs.cast17, !dbg !21013
  %add.ptr19 = getelementptr inbounds i8, i8* %24, i64 %sub.ptr.sub18, !dbg !21013
  %29 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21013, !tbaa !2993
  %fts_accpath20 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %29, i32 0, i32 6, !dbg !21013, !ctir !2315
  store i8* %add.ptr19, i8** %fts_accpath20, align 8, !dbg !21013, !tbaa !2993, !ctir !7
  br label %if.end21, !dbg !21013

if.end21:                                         ; preds = %if.then13, %do.body8
  %30 = load i8*, i8** %addr, align 8, !dbg !21012, !tbaa !2993
  %31 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21012, !tbaa !2993
  %fts_path22 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %31, i32 0, i32 7, !dbg !21012, !ctir !2315
  store i8* %30, i8** %fts_path22, align 8, !dbg !21012, !tbaa !2993, !ctir !7
  br label %do.end23, !dbg !21012

do.end23:                                         ; preds = %if.end21
  %32 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21015, !tbaa !2993
  %fts_link24 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %32, i32 0, i32 2, !dbg !21016, !ctir !2315
  %33 = load %struct._ftsent*, %struct._ftsent** %fts_link24, align 8, !dbg !21016, !tbaa !2993, !ctir !2319
  %tobool25 = icmp ne %struct._ftsent* %33, null, !dbg !21015
  br i1 %tobool25, label %cond.true, label %cond.false, !dbg !21015

cond.true:                                        ; preds = %do.end23
  %34 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21017, !tbaa !2993
  %fts_link26 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %34, i32 0, i32 2, !dbg !21018, !ctir !2315
  %35 = load %struct._ftsent*, %struct._ftsent** %fts_link26, align 8, !dbg !21018, !tbaa !2993, !ctir !2319
  br label %cond.end, !dbg !21015

cond.false:                                       ; preds = %do.end23
  %36 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21019, !tbaa !2993
  %fts_parent = getelementptr inbounds %struct._ftsent, %struct._ftsent* %36, i32 0, i32 1, !dbg !21020, !ctir !2315
  %37 = load %struct._ftsent*, %struct._ftsent** %fts_parent, align 8, !dbg !21020, !tbaa !2993, !ctir !2319
  br label %cond.end, !dbg !21015

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct._ftsent* [ %35, %cond.true ], [ %37, %cond.false ], !dbg !21015
  store %struct._ftsent* %cond, %struct._ftsent** %p, align 8, !dbg !21021, !tbaa !2993
  br label %for.cond5, !dbg !21022, !llvm.loop !21023

for.end27:                                        ; preds = %for.cond5
  ret void, !dbg !21025
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fts_compare_ino(%struct._ftsent** %a, %struct._ftsent** %b) #4 !dbg !21026 !ctir !2347 {
entry:
  %a.addr = alloca %struct._ftsent**, align 8, !ctir !2349
  %b.addr = alloca %struct._ftsent**, align 8, !ctir !2349
  store %struct._ftsent** %a, %struct._ftsent*** %a.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %a.addr, metadata !21027, metadata !DIExpression()), !dbg !21028
  store %struct._ftsent** %b, %struct._ftsent*** %b.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent*** %b.addr, metadata !21029, metadata !DIExpression()), !dbg !21030
  %0 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21031, !tbaa !2993
  %arrayidx = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %0, i64 0, !dbg !21031, !ctir !2349
  %1 = load %struct._ftsent*, %struct._ftsent** %arrayidx, align 8, !dbg !21031, !tbaa !2993
  %fts_statp = getelementptr inbounds %struct._ftsent, %struct._ftsent* %1, i32 0, i32 18, !dbg !21032, !ctir !2351
  %arraydecay = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp, i64 0, i64 0, !dbg !21033
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay, i32 0, i32 1, !dbg !21033, !ctir !2447
  %2 = load i64, i64* %st_ino, align 8, !dbg !21033, !tbaa !3859, !ctir !225
  %3 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21034, !tbaa !2993
  %arrayidx1 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %3, i64 0, !dbg !21034, !ctir !2349
  %4 = load %struct._ftsent*, %struct._ftsent** %arrayidx1, align 8, !dbg !21034, !tbaa !2993
  %fts_statp2 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %4, i32 0, i32 18, !dbg !21035, !ctir !2351
  %arraydecay3 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp2, i64 0, i64 0, !dbg !21036
  %st_ino4 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay3, i32 0, i32 1, !dbg !21036, !ctir !2447
  %5 = load i64, i64* %st_ino4, align 8, !dbg !21036, !tbaa !3859, !ctir !225
  %cmp = icmp ult i64 %2, %5, !dbg !21037
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21031

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !21031

cond.false:                                       ; preds = %entry
  %6 = load %struct._ftsent**, %struct._ftsent*** %b.addr, align 8, !dbg !21038, !tbaa !2993
  %arrayidx5 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %6, i64 0, !dbg !21038, !ctir !2349
  %7 = load %struct._ftsent*, %struct._ftsent** %arrayidx5, align 8, !dbg !21038, !tbaa !2993
  %fts_statp6 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %7, i32 0, i32 18, !dbg !21039, !ctir !2351
  %arraydecay7 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp6, i64 0, i64 0, !dbg !21040
  %st_ino8 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay7, i32 0, i32 1, !dbg !21040, !ctir !2447
  %8 = load i64, i64* %st_ino8, align 8, !dbg !21040, !tbaa !3859, !ctir !225
  %9 = load %struct._ftsent**, %struct._ftsent*** %a.addr, align 8, !dbg !21041, !tbaa !2993
  %arrayidx9 = getelementptr inbounds %struct._ftsent*, %struct._ftsent** %9, i64 0, !dbg !21041, !ctir !2349
  %10 = load %struct._ftsent*, %struct._ftsent** %arrayidx9, align 8, !dbg !21041, !tbaa !2993
  %fts_statp10 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 18, !dbg !21042, !ctir !2351
  %arraydecay11 = getelementptr inbounds [1 x %struct.stat], [1 x %struct.stat]* %fts_statp10, i64 0, i64 0, !dbg !21043
  %st_ino12 = getelementptr inbounds %struct.stat, %struct.stat* %arraydecay11, i32 0, i32 1, !dbg !21043, !ctir !2447
  %11 = load i64, i64* %st_ino12, align 8, !dbg !21043, !tbaa !3859, !ctir !225
  %cmp13 = icmp ult i64 %8, %11, !dbg !21044
  %12 = zext i1 %cmp13 to i64, !dbg !21038
  %cond = select i1 %cmp13, i32 1, i32 0, !dbg !21038
  br label %cond.end, !dbg !21031

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond14 = phi i32 [ -1, %cond.true ], [ %cond, %cond.false ], !dbg !21031
  ret i32 %cond14, !dbg !21045
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fts_set(%struct.FTS* %sp, %struct._ftsent* %p, i32 %instr) #4 !dbg !21046 !ctir !2419 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %p.addr = alloca %struct._ftsent*, align 8, !ctir !2414
  %instr.addr = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21047, metadata !DIExpression()), !dbg !21048
  store %struct._ftsent* %p, %struct._ftsent** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p.addr, metadata !21049, metadata !DIExpression()), !dbg !21050
  store i32 %instr, i32* %instr.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21051, metadata !DIExpression()), !dbg !21052
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21053, !tbaa !2980
  %cmp = icmp ne i32 %0, 0, !dbg !21055
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21056

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21057, !tbaa !2980
  %cmp1 = icmp ne i32 %1, 1, !dbg !21058
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !21059

land.lhs.true2:                                   ; preds = %land.lhs.true
  %2 = load i32, i32* %instr.addr, align 4, !dbg !21060, !tbaa !2980
  %cmp3 = icmp ne i32 %2, 2, !dbg !21061
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !21062

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %3 = load i32, i32* %instr.addr, align 4, !dbg !21063, !tbaa !2980
  %cmp5 = icmp ne i32 %3, 3, !dbg !21064
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !21065

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %4 = load i32, i32* %instr.addr, align 4, !dbg !21066, !tbaa !2980
  %cmp7 = icmp ne i32 %4, 4, !dbg !21067
  br i1 %cmp7, label %if.then, label %if.end, !dbg !21068

if.then:                                          ; preds = %land.lhs.true6
  %call = call i32* @__errno_location() #15, !dbg !21069
  store i32 22, i32* %call, align 4, !dbg !21069, !tbaa !2980, !ctir !5
  store i32 1, i32* %retval, align 4, !dbg !21071
  br label %return, !dbg !21071

if.end:                                           ; preds = %land.lhs.true6, %land.lhs.true4, %land.lhs.true2, %land.lhs.true, %entry
  %5 = load i32, i32* %instr.addr, align 4, !dbg !21072, !tbaa !2980
  %conv = trunc i32 %5 to i16, !dbg !21072
  %6 = load %struct._ftsent*, %struct._ftsent** %p.addr, align 8, !dbg !21073, !tbaa !2993
  %fts_instr = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 17, !dbg !21074, !ctir !2315
  store i16 %conv, i16* %fts_instr, align 4, !dbg !21075, !tbaa !3799, !ctir !34
  store i32 0, i32* %retval, align 4, !dbg !21076
  br label %return, !dbg !21076

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !21077
  ret i32 %7, !dbg !21077
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._ftsent* @rpl_fts_children(%struct.FTS* %sp, i32 %instr) #4 !dbg !21078 !ctir !2421 {
entry:
  %retval = alloca %struct._ftsent*, align 8, !ctir !2414
  %sp.addr = alloca %struct.FTS*, align 8, !ctir !2331
  %instr.addr = alloca i32, align 4, !ctir !5
  %p = alloca %struct._ftsent*, align 8, !ctir !2414
  %fd = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store %struct.FTS* %sp, %struct.FTS** %sp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.FTS** %sp.addr, metadata !21079, metadata !DIExpression()), !dbg !21080
  store i32 %instr, i32* %instr.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %instr.addr, metadata !21081, metadata !DIExpression()), !dbg !21082
  call void @llvm.dbg.declare(metadata %struct._ftsent** %p, metadata !21083, metadata !DIExpression()), !dbg !21084
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21085, metadata !DIExpression()), !dbg !21086
  %0 = load i32, i32* %instr.addr, align 4, !dbg !21087, !tbaa !2980
  %cmp = icmp ne i32 %0, 0, !dbg !21089
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !21090

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %instr.addr, align 4, !dbg !21091, !tbaa !2980
  %cmp1 = icmp ne i32 %1, 4096, !dbg !21092
  br i1 %cmp1, label %if.then, label %if.end, !dbg !21093

if.then:                                          ; preds = %land.lhs.true
  %call = call i32* @__errno_location() #15, !dbg !21094
  store i32 22, i32* %call, align 4, !dbg !21094, !tbaa !2980, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21096
  br label %return, !dbg !21096

if.end:                                           ; preds = %land.lhs.true, %entry
  %2 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21097, !tbaa !2993
  %fts_cur = getelementptr inbounds %struct.FTS, %struct.FTS* %2, i32 0, i32 0, !dbg !21098, !ctir !2332
  %3 = load %struct._ftsent*, %struct._ftsent** %fts_cur, align 8, !dbg !21098, !tbaa !18338, !ctir !2319
  store %struct._ftsent* %3, %struct._ftsent** %p, align 8, !dbg !21099, !tbaa !2993
  %call2 = call i32* @__errno_location() #15, !dbg !21100
  store i32 0, i32* %call2, align 4, !dbg !21100, !tbaa !2980, !ctir !5
  %4 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21101, !tbaa !2993
  %fts_options = getelementptr inbounds %struct.FTS, %struct.FTS* %4, i32 0, i32 10, !dbg !21101, !ctir !2332
  %5 = load i32, i32* %fts_options, align 8, !dbg !21101, !tbaa !17900, !ctir !5
  %and = and i32 %5, 8192, !dbg !21101
  %tobool = icmp ne i32 %and, 0, !dbg !21101
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !21103

if.then3:                                         ; preds = %if.end
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21104
  br label %return, !dbg !21104

if.end4:                                          ; preds = %if.end
  %6 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21105, !tbaa !2993
  %fts_info = getelementptr inbounds %struct._ftsent, %struct._ftsent* %6, i32 0, i32 15, !dbg !21107, !ctir !2315
  %7 = load i16, i16* %fts_info, align 8, !dbg !21107, !tbaa !3799, !ctir !34
  %conv = zext i16 %7 to i32, !dbg !21105
  %cmp5 = icmp eq i32 %conv, 9, !dbg !21108
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !21109

if.then7:                                         ; preds = %if.end4
  %8 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21110, !tbaa !2993
  %fts_link = getelementptr inbounds %struct._ftsent, %struct._ftsent* %8, i32 0, i32 2, !dbg !21111, !ctir !2315
  %9 = load %struct._ftsent*, %struct._ftsent** %fts_link, align 8, !dbg !21111, !tbaa !2993, !ctir !2319
  store %struct._ftsent* %9, %struct._ftsent** %retval, align 8, !dbg !21112
  br label %return, !dbg !21112

if.end8:                                          ; preds = %if.end4
  %10 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21113, !tbaa !2993
  %fts_info9 = getelementptr inbounds %struct._ftsent, %struct._ftsent* %10, i32 0, i32 15, !dbg !21115, !ctir !2315
  %11 = load i16, i16* %fts_info9, align 8, !dbg !21115, !tbaa !3799, !ctir !34
  %conv10 = zext i16 %11 to i32, !dbg !21113
  %cmp11 = icmp ne i32 %conv10, 1, !dbg !21116
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !21117

if.then13:                                        ; preds = %if.end8
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21118
  br label %return, !dbg !21118

if.end14:                                         ; preds = %if.end8
  %12 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21119, !tbaa !2993
  %fts_child = getelementptr inbounds %struct.FTS, %struct.FTS* %12, i32 0, i32 1, !dbg !21121, !ctir !2332
  %13 = load %struct._ftsent*, %struct._ftsent** %fts_child, align 8, !dbg !21121, !tbaa !18986, !ctir !2319
  %cmp15 = icmp ne %struct._ftsent* %13, null, !dbg !21122
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !21123

if.then17:                                        ; preds = %if.end14
  %14 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21124, !tbaa !2993
  %fts_child18 = getelementptr inbounds %struct.FTS, %struct.FTS* %14, i32 0, i32 1, !dbg !21125, !ctir !2332
  %15 = load %struct._ftsent*, %struct._ftsent** %fts_child18, align 8, !dbg !21125, !tbaa !18986, !ctir !2319
  call void @fts_lfree(%struct._ftsent* %15), !dbg !21126
  br label %if.end19, !dbg !21126

if.end19:                                         ; preds = %if.then17, %if.end14
  %16 = load i32, i32* %instr.addr, align 4, !dbg !21127, !tbaa !2980
  %cmp20 = icmp eq i32 %16, 4096, !dbg !21129
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !21130

if.then22:                                        ; preds = %if.end19
  %17 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21131, !tbaa !2993
  %fts_options23 = getelementptr inbounds %struct.FTS, %struct.FTS* %17, i32 0, i32 10, !dbg !21131, !ctir !2332
  %18 = load i32, i32* %fts_options23, align 8, !dbg !21131, !tbaa !17900, !ctir !5
  %or = or i32 %18, 4096, !dbg !21131
  store i32 %or, i32* %fts_options23, align 8, !dbg !21131, !tbaa !17900, !ctir !5
  store i32 2, i32* %instr.addr, align 4, !dbg !21133, !tbaa !2980
  br label %if.end24, !dbg !21134

if.else:                                          ; preds = %if.end19
  store i32 1, i32* %instr.addr, align 4, !dbg !21135, !tbaa !2980
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then22
  %19 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21136, !tbaa !2993
  %fts_level = getelementptr inbounds %struct._ftsent, %struct._ftsent* %19, i32 0, i32 12, !dbg !21138, !ctir !2315
  %20 = load i64, i64* %fts_level, align 8, !dbg !21138, !tbaa !3837, !ctir !539
  %cmp25 = icmp ne i64 %20, 0, !dbg !21139
  br i1 %cmp25, label %if.then34, label %lor.lhs.false, !dbg !21140

lor.lhs.false:                                    ; preds = %if.end24
  %21 = load %struct._ftsent*, %struct._ftsent** %p, align 8, !dbg !21141, !tbaa !2993
  %fts_accpath = getelementptr inbounds %struct._ftsent, %struct._ftsent* %21, i32 0, i32 6, !dbg !21142, !ctir !2315
  %22 = load i8*, i8** %fts_accpath, align 8, !dbg !21142, !tbaa !2993, !ctir !7
  %arrayidx = getelementptr inbounds i8, i8* %22, i64 0, !dbg !21141, !ctir !7
  %23 = load i8, i8* %arrayidx, align 1, !dbg !21141, !tbaa !3652
  %conv27 = sext i8 %23 to i32, !dbg !21141
  %cmp28 = icmp eq i32 %conv27, 47, !dbg !21143
  br i1 %cmp28, label %if.then34, label %lor.lhs.false30, !dbg !21144

lor.lhs.false30:                                  ; preds = %lor.lhs.false
  %24 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21145, !tbaa !2993
  %fts_options31 = getelementptr inbounds %struct.FTS, %struct.FTS* %24, i32 0, i32 10, !dbg !21145, !ctir !2332
  %25 = load i32, i32* %fts_options31, align 8, !dbg !21145, !tbaa !17900, !ctir !5
  %and32 = and i32 %25, 4, !dbg !21145
  %tobool33 = icmp ne i32 %and32, 0, !dbg !21145
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !21146

if.then34:                                        ; preds = %lor.lhs.false30, %lor.lhs.false, %if.end24
  %26 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21147, !tbaa !2993
  %27 = load i32, i32* %instr.addr, align 4, !dbg !21148, !tbaa !2980
  %call35 = call %struct._ftsent* @fts_build(%struct.FTS* %26, i32 %27), !dbg !21149
  %28 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21150, !tbaa !2993
  %fts_child36 = getelementptr inbounds %struct.FTS, %struct.FTS* %28, i32 0, i32 1, !dbg !21151, !ctir !2332
  store %struct._ftsent* %call35, %struct._ftsent** %fts_child36, align 8, !dbg !21152, !tbaa !18986, !ctir !2319
  store %struct._ftsent* %call35, %struct._ftsent** %retval, align 8, !dbg !21153
  br label %return, !dbg !21153

if.end37:                                         ; preds = %lor.lhs.false30
  %29 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21154, !tbaa !2993
  %call38 = call i32 @diropen(%struct.FTS* %29, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.431, i64 0, i64 0)), !dbg !21156
  store i32 %call38, i32* %fd, align 4, !dbg !21157, !tbaa !2980
  %cmp39 = icmp slt i32 %call38, 0, !dbg !21158
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !21159

if.then41:                                        ; preds = %if.end37
  %30 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21160, !tbaa !2993
  %fts_child42 = getelementptr inbounds %struct.FTS, %struct.FTS* %30, i32 0, i32 1, !dbg !21161, !ctir !2332
  store %struct._ftsent* null, %struct._ftsent** %fts_child42, align 8, !dbg !21162, !tbaa !18986, !ctir !2319
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21163
  br label %return, !dbg !21163

if.end43:                                         ; preds = %if.end37
  %31 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21164, !tbaa !2993
  %32 = load i32, i32* %instr.addr, align 4, !dbg !21165, !tbaa !2980
  %call44 = call %struct._ftsent* @fts_build(%struct.FTS* %31, i32 %32), !dbg !21166
  %33 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21167, !tbaa !2993
  %fts_child45 = getelementptr inbounds %struct.FTS, %struct.FTS* %33, i32 0, i32 1, !dbg !21168, !ctir !2332
  store %struct._ftsent* %call44, %struct._ftsent** %fts_child45, align 8, !dbg !21169, !tbaa !18986, !ctir !2319
  %34 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21170, !tbaa !2993
  %fts_options46 = getelementptr inbounds %struct.FTS, %struct.FTS* %34, i32 0, i32 10, !dbg !21170, !ctir !2332
  %35 = load i32, i32* %fts_options46, align 8, !dbg !21170, !tbaa !17900, !ctir !5
  %and47 = and i32 %35, 512, !dbg !21170
  %tobool48 = icmp ne i32 %and47, 0, !dbg !21170
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !21172

if.then49:                                        ; preds = %if.end43
  %36 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21173, !tbaa !2993
  %37 = load i32, i32* %fd, align 4, !dbg !21175, !tbaa !2980
  call void @cwd_advance_fd(%struct.FTS* %36, i32 %37, i1 zeroext true), !dbg !21176
  br label %if.end59, !dbg !21177

if.else50:                                        ; preds = %if.end43
  %38 = load i32, i32* %fd, align 4, !dbg !21178, !tbaa !2980
  %call51 = call i32 @fchdir(i32 %38) #12, !dbg !21181
  %tobool52 = icmp ne i32 %call51, 0, !dbg !21181
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !21182

if.then53:                                        ; preds = %if.else50
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21183, metadata !DIExpression()), !dbg !21185
  %call54 = call i32* @__errno_location() #15, !dbg !21186
  %39 = load i32, i32* %call54, align 4, !dbg !21186, !tbaa !2980, !ctir !5
  store i32 %39, i32* %saved_errno, align 4, !dbg !21185, !tbaa !2980
  %40 = load i32, i32* %fd, align 4, !dbg !21187, !tbaa !2980
  %call55 = call i32 @close(i32 %40), !dbg !21188
  %41 = load i32, i32* %saved_errno, align 4, !dbg !21189, !tbaa !2980
  %call56 = call i32* @__errno_location() #15, !dbg !21189
  store i32 %41, i32* %call56, align 4, !dbg !21189, !tbaa !2980, !ctir !5
  store %struct._ftsent* null, %struct._ftsent** %retval, align 8, !dbg !21190
  br label %return, !dbg !21190

if.end57:                                         ; preds = %if.else50
  %42 = load i32, i32* %fd, align 4, !dbg !21191, !tbaa !2980
  %call58 = call i32 @close(i32 %42), !dbg !21192
  br label %if.end59

if.end59:                                         ; preds = %if.end57, %if.then49
  %43 = load %struct.FTS*, %struct.FTS** %sp.addr, align 8, !dbg !21193, !tbaa !2993
  %fts_child60 = getelementptr inbounds %struct.FTS, %struct.FTS* %43, i32 0, i32 1, !dbg !21194, !ctir !2332
  %44 = load %struct._ftsent*, %struct._ftsent** %fts_child60, align 8, !dbg !21194, !tbaa !18986, !ctir !2319
  store %struct._ftsent* %44, %struct._ftsent** %retval, align 8, !dbg !21195
  br label %return, !dbg !21195

return:                                           ; preds = %if.end59, %if.then53, %if.then41, %if.then34, %if.then13, %if.then7, %if.then3, %if.then
  %45 = load %struct._ftsent*, %struct._ftsent** %retval, align 8, !dbg !21196
  ret %struct._ftsent* %45, !dbg !21196
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.__mbstate_t* %ps) #4 !dbg !21197 !ctir !2499 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %pwc.addr = alloca i32*, align 8, !ctir !2501
  %s.addr = alloca i8*, align 8, !ctir !112
  %n.addr = alloca i64, align 8, !ctir !52
  %ps.addr = alloca %struct.__mbstate_t*, align 8, !ctir !2502
  %ret = alloca i64, align 8, !ctir !52
  %wc = alloca i32, align 4, !ctir !1031
  %uc = alloca i8, align 1, !ctir !468
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !21199, metadata !DIExpression()), !dbg !21200
  store i8* %s, i8** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !21201, metadata !DIExpression()), !dbg !21202
  store i64 %n, i64* %n.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !21203, metadata !DIExpression()), !dbg !21204
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.__mbstate_t** %ps.addr, metadata !21205, metadata !DIExpression()), !dbg !21206
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !21207, metadata !DIExpression()), !dbg !21208
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !21209, metadata !DIExpression()), !dbg !21210
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !21211, !tbaa !2993
  %tobool = icmp ne i32* %0, null, !dbg !21211
  br i1 %tobool, label %if.end, label %if.then, !dbg !21213

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !21214, !tbaa !2993
  br label %if.end, !dbg !21215

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !21216, !tbaa !2993
  %2 = load i8*, i8** %s.addr, align 8, !dbg !21217, !tbaa !2993
  %3 = load i64, i64* %n.addr, align 8, !dbg !21218, !tbaa !3837
  %4 = load %struct.__mbstate_t*, %struct.__mbstate_t** %ps.addr, align 8, !dbg !21219, !tbaa !2993
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.__mbstate_t* %4) #12, !dbg !21220
  store i64 %call, i64* %ret, align 8, !dbg !21221, !tbaa !3837
  %5 = load i64, i64* %ret, align 8, !dbg !21222, !tbaa !3837
  %cmp = icmp ule i64 -2, %5, !dbg !21224
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !21225

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !21226, !tbaa !3837
  %cmp1 = icmp ne i64 %6, 0, !dbg !21227
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !21228

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !21229
  br i1 %call3, label %if.end5, label %if.then4, !dbg !21230

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !21231, metadata !DIExpression()), !dbg !21233
  %7 = load i8*, i8** %s.addr, align 8, !dbg !21234, !tbaa !2993
  %8 = load i8, i8* %7, align 1, !dbg !21235, !tbaa !3652, !ctir !113
  store i8 %8, i8* %uc, align 1, !dbg !21233, !tbaa !3652
  %9 = load i8, i8* %uc, align 1, !dbg !21236, !tbaa !3652
  %conv = zext i8 %9 to i32, !dbg !21236
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !21237, !tbaa !2993
  store i32 %conv, i32* %10, align 4, !dbg !21238, !tbaa !2980, !ctir !1031
  store i64 1, i64* %retval, align 8, !dbg !21239
  br label %return, !dbg !21239

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !21240, !tbaa !3837
  store i64 %11, i64* %retval, align 8, !dbg !21241
  br label %return, !dbg !21241

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !21242
  ret i64 %12, !dbg !21242
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.__mbstate_t*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !21243 !ctir !2516 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8, !ctir !2518
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21245, metadata !DIExpression()), !dbg !21246
  ret void, !dbg !21247
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !21248 !ctir !2526 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !157
  %ctx.addr = alloca %struct.permission_context*, align 8, !ctir !2528
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21250, metadata !DIExpression()), !dbg !21251
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21252, metadata !DIExpression()), !dbg !21253
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21254, metadata !DIExpression()), !dbg !21255
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21256, metadata !DIExpression()), !dbg !21257
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21258, !tbaa !2993
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !21259
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 4, i1 false), !dbg !21259
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21260, !tbaa !2980
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21261, !tbaa !2993
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !21262, !ctir !2529
  store i32 %2, i32* %mode1, align 4, !dbg !21263, !tbaa !13451, !ctir !157
  ret i32 0, !dbg !21264
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !21265 !ctir !1582 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !112
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !157
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21267, metadata !DIExpression()), !dbg !21268
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21269, metadata !DIExpression()), !dbg !21270
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !21271, metadata !DIExpression()), !dbg !21272
  %0 = load i32, i32* %desc.addr, align 4, !dbg !21273, !tbaa !2980
  %cmp = icmp ne i32 %0, -1, !dbg !21275
  br i1 %cmp, label %if.then, label %if.else, !dbg !21276

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !21277, !tbaa !2980
  %2 = load i32, i32* %mode.addr, align 4, !dbg !21278, !tbaa !2980
  %call = call i32 @fchmod(i32 %1, i32 %2) #12, !dbg !21279
  store i32 %call, i32* %retval, align 4, !dbg !21280
  br label %return, !dbg !21280

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !21281, !tbaa !2993
  %4 = load i32, i32* %mode.addr, align 4, !dbg !21282, !tbaa !2980
  %call1 = call i32 @chmod(i8* %3, i32 %4) #12, !dbg !21283
  store i32 %call1, i32* %retval, align 4, !dbg !21284
  br label %return, !dbg !21284

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !21285
  ret i32 %5, !dbg !21285
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !21286 !ctir !2535 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %ctx.addr = alloca %struct.permission_context*, align 8, !ctir !2537
  %name.addr = alloca i8*, align 8, !ctir !112
  %desc.addr = alloca i32, align 4, !ctir !5
  %acls_set = alloca i8, align 1, !ctir !117
  %early_chmod = alloca i8, align 1, !ctir !117
  %must_chmod = alloca i8, align 1, !ctir !117
  %ret = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !21287, metadata !DIExpression()), !dbg !21288
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21289, metadata !DIExpression()), !dbg !21290
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !21291, metadata !DIExpression()), !dbg !21292
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !21293, metadata !DIExpression()), !dbg !21294
  store i8 0, i8* %acls_set, align 1, !dbg !21294, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !21295, metadata !DIExpression()), !dbg !21296
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !21297, metadata !DIExpression()), !dbg !21298
  store i8 0, i8* %must_chmod, align 1, !dbg !21298, !tbaa !3104
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !21299, metadata !DIExpression()), !dbg !21300
  store i32 0, i32* %ret, align 4, !dbg !21300, !tbaa !2980
  store i8 1, i8* %early_chmod, align 1, !dbg !21301, !tbaa !3104
  %0 = load i8, i8* %early_chmod, align 1, !dbg !21302, !tbaa !3104
  %tobool = trunc i8 %0 to i1, !dbg !21302
  br i1 %tobool, label %if.then, label %if.end2, !dbg !21304

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !21305, !tbaa !2993
  %2 = load i32, i32* %desc.addr, align 4, !dbg !21307, !tbaa !2980
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21308, !tbaa !2993
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !21309, !ctir !2538
  %4 = load i32, i32* %mode, align 4, !dbg !21309, !tbaa !13451, !ctir !157
  %call = call i32 @chmod_or_fchmod(i8* %1, i32 %2, i32 %4), !dbg !21310
  store i32 %call, i32* %ret, align 4, !dbg !21311, !tbaa !2980
  %5 = load i32, i32* %ret, align 4, !dbg !21312, !tbaa !2980
  %cmp = icmp ne i32 %5, 0, !dbg !21314
  br i1 %cmp, label %if.then1, label %if.end, !dbg !21315

if.then1:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21316
  br label %return, !dbg !21316

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !21317

if.end2:                                          ; preds = %if.end, %entry
  %6 = load i8, i8* %must_chmod, align 1, !dbg !21318, !tbaa !3104
  %tobool3 = trunc i8 %6 to i1, !dbg !21318
  br i1 %tobool3, label %land.lhs.true, label %if.end14, !dbg !21320

land.lhs.true:                                    ; preds = %if.end2
  %7 = load i8, i8* %early_chmod, align 1, !dbg !21321, !tbaa !3104
  %tobool4 = trunc i8 %7 to i1, !dbg !21321
  br i1 %tobool4, label %if.end14, label %if.then5, !dbg !21322

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21323, metadata !DIExpression()), !dbg !21325
  %8 = load i32, i32* %ret, align 4, !dbg !21326, !tbaa !2980
  %tobool6 = icmp ne i32 %8, 0, !dbg !21326
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !21326

cond.true:                                        ; preds = %if.then5
  %call7 = call i32* @__errno_location() #15, !dbg !21327
  %9 = load i32, i32* %call7, align 4, !dbg !21327, !tbaa !2980, !ctir !5
  br label %cond.end, !dbg !21326

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !21326

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 0, %cond.false ], !dbg !21326
  store i32 %cond, i32* %saved_errno, align 4, !dbg !21325, !tbaa !2980
  %10 = load i8*, i8** %name.addr, align 8, !dbg !21328, !tbaa !2993
  %11 = load i32, i32* %desc.addr, align 4, !dbg !21329, !tbaa !2980
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !21330, !tbaa !2993
  %mode8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 0, !dbg !21331, !ctir !2538
  %13 = load i32, i32* %mode8, align 4, !dbg !21331, !tbaa !13451, !ctir !157
  %call9 = call i32 @chmod_or_fchmod(i8* %10, i32 %11, i32 %13), !dbg !21332
  store i32 %call9, i32* %ret, align 4, !dbg !21333, !tbaa !2980
  %14 = load i32, i32* %saved_errno, align 4, !dbg !21334, !tbaa !2980
  %tobool10 = icmp ne i32 %14, 0, !dbg !21334
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !21336

if.then11:                                        ; preds = %cond.end
  %15 = load i32, i32* %saved_errno, align 4, !dbg !21337, !tbaa !2980
  %call12 = call i32* @__errno_location() #15, !dbg !21339
  store i32 %15, i32* %call12, align 4, !dbg !21340, !tbaa !2980, !ctir !5
  store i32 -1, i32* %ret, align 4, !dbg !21341, !tbaa !2980
  br label %if.end13, !dbg !21342

if.end13:                                         ; preds = %if.then11, %cond.end
  br label %if.end14, !dbg !21343

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %if.end2
  %16 = load i32, i32* %ret, align 4, !dbg !21344, !tbaa !2980
  store i32 %16, i32* %retval, align 4, !dbg !21345
  br label %return, !dbg !21345

return:                                           ; preds = %if.end14, %if.then1
  %17 = load i32, i32* %retval, align 4, !dbg !21346
  ret i32 %17, !dbg !21346
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !21347 !ctir !131 {
entry:
  call void @usage(i32 1), !dbg !21348
  ret void, !dbg !21349
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !21350 !ctir !1247 {
entry:
  %retval = alloca i64, align 8, !ctir !539
  %arg.addr = alloca i8*, align 8, !ctir !112
  %arglist.addr = alloca i8**, align 8, !ctir !1249
  %vallist.addr = alloca i8*, align 8, !ctir !428
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %arglen = alloca i64, align 8, !ctir !52
  %matchind = alloca i64, align 8, !ctir !539
  %ambiguous = alloca i8, align 1, !ctir !117
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !21351, metadata !DIExpression()), !dbg !21352
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21353, metadata !DIExpression()), !dbg !21354
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21355, metadata !DIExpression()), !dbg !21356
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21357, metadata !DIExpression()), !dbg !21358
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21359, metadata !DIExpression()), !dbg !21360
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !21361, metadata !DIExpression()), !dbg !21362
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !21363, metadata !DIExpression()), !dbg !21364
  store i64 -1, i64* %matchind, align 8, !dbg !21364, !tbaa !3837
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !21365, metadata !DIExpression()), !dbg !21366
  store i8 0, i8* %ambiguous, align 1, !dbg !21366, !tbaa !3104
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !21367, !tbaa !2993
  %call = call i64 @strlen(i8* %0) #14, !dbg !21368
  store i64 %call, i64* %arglen, align 8, !dbg !21369, !tbaa !3837
  store i64 0, i64* %i, align 8, !dbg !21370, !tbaa !3837
  br label %for.cond, !dbg !21372

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21373, !tbaa !2993
  %2 = load i64, i64* %i, align 8, !dbg !21375, !tbaa !3837
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !21373, !ctir !1249
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !21373, !tbaa !2993
  %tobool = icmp ne i8* %3, null, !dbg !21376
  br i1 %tobool, label %for.body, label %for.end, !dbg !21376

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !21377, !tbaa !2993
  %5 = load i64, i64* %i, align 8, !dbg !21380, !tbaa !3837
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !21377, !ctir !1249
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !21377, !tbaa !2993
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !21381, !tbaa !2993
  %8 = load i64, i64* %arglen, align 8, !dbg !21382, !tbaa !3837
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !21383
  %tobool3 = icmp ne i32 %call2, 0, !dbg !21383
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !21384

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !21385, !tbaa !2993
  %10 = load i64, i64* %i, align 8, !dbg !21388, !tbaa !3837
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !21385, !ctir !1249
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !21385, !tbaa !2993
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !21389
  %12 = load i64, i64* %arglen, align 8, !dbg !21390, !tbaa !3837
  %cmp = icmp eq i64 %call5, %12, !dbg !21391
  br i1 %cmp, label %if.then6, label %if.else, !dbg !21392

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !21393, !tbaa !3837
  store i64 %13, i64* %retval, align 8, !dbg !21394
  br label %return, !dbg !21394

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !21395, !tbaa !3837
  %cmp7 = icmp eq i64 %14, -1, !dbg !21397
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !21398

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !21399, !tbaa !3837
  store i64 %15, i64* %matchind, align 8, !dbg !21400, !tbaa !3837
  br label %if.end16, !dbg !21401

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !21402, !tbaa !2993
  %cmp10 = icmp eq i8* %16, null, !dbg !21405
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !21406

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !21407, !tbaa !2993
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !21408, !tbaa !3837
  %19 = load i64, i64* %matchind, align 8, !dbg !21409, !tbaa !3837
  %mul = mul i64 %18, %19, !dbg !21410
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !21411
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !21412, !tbaa !2993
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !21413, !tbaa !3837
  %22 = load i64, i64* %i, align 8, !dbg !21414, !tbaa !3837
  %mul11 = mul i64 %21, %22, !dbg !21415
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !21416
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !21417, !tbaa !3837
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !21418
  %tobool14 = icmp ne i32 %call13, 0, !dbg !21418
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !21419

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !21420, !tbaa !3104
  br label %if.end, !dbg !21422

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !21423

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !21424

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !21425, !tbaa !3837
  %inc = add i64 %24, 1, !dbg !21425
  store i64 %inc, i64* %i, align 8, !dbg !21425, !tbaa !3837
  br label %for.cond, !dbg !21426, !llvm.loop !21427

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !21429, !tbaa !3104
  %tobool19 = trunc i8 %25 to i1, !dbg !21429
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !21431

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !21432
  br label %return, !dbg !21432

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !21433, !tbaa !3837
  store i64 %26, i64* %retval, align 8, !dbg !21434
  br label %return, !dbg !21434

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !21435
  ret i64 %27, !dbg !21435
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !21436 !ctir !1250 {
entry:
  %context.addr = alloca i8*, align 8, !ctir !112
  %value.addr = alloca i8*, align 8, !ctir !112
  %problem.addr = alloca i64, align 8, !ctir !539
  %format = alloca i8*, align 8, !ctir !112
  store i8* %context, i8** %context.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !21437, metadata !DIExpression()), !dbg !21438
  store i8* %value, i8** %value.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !21439, metadata !DIExpression()), !dbg !21440
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !21441, metadata !DIExpression()), !dbg !21442
  call void @llvm.dbg.declare(metadata i8** %format, metadata !21443, metadata !DIExpression()), !dbg !21444
  %0 = load i64, i64* %problem.addr, align 8, !dbg !21445, !tbaa !3837
  %cmp = icmp eq i64 %0, -1, !dbg !21446
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21445

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.450, i64 0, i64 0)) #12, !dbg !21447
  br label %cond.end, !dbg !21445

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.451, i64 0, i64 0)) #12, !dbg !21448
  br label %cond.end, !dbg !21445

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !21445
  store i8* %cond, i8** %format, align 8, !dbg !21444, !tbaa !2993
  %1 = load i8*, i8** %format, align 8, !dbg !21449, !tbaa !2993
  %2 = load i8*, i8** %value.addr, align 8, !dbg !21450, !tbaa !2993
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !21451
  %3 = load i8*, i8** %context.addr, align 8, !dbg !21452, !tbaa !2993
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !21453
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !21454
  ret void, !dbg !21455
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !21456 !ctir !1252 {
entry:
  %arglist.addr = alloca i8**, align 8, !ctir !1249
  %vallist.addr = alloca i8*, align 8, !ctir !428
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %last_val = alloca i8*, align 8, !ctir !112
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21457, metadata !DIExpression()), !dbg !21458
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21459, metadata !DIExpression()), !dbg !21460
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21461, metadata !DIExpression()), !dbg !21462
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21463, metadata !DIExpression()), !dbg !21464
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !21465, metadata !DIExpression()), !dbg !21466
  store i8* null, i8** %last_val, align 8, !dbg !21466, !tbaa !2993
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.452, i64 0, i64 0)) #12, !dbg !21467
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21467, !tbaa !2993
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !21467
  store i64 0, i64* %i, align 8, !dbg !21468, !tbaa !3837
  br label %for.cond, !dbg !21470

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21471, !tbaa !2993
  %2 = load i64, i64* %i, align 8, !dbg !21473, !tbaa !3837
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !21471, !ctir !1249
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !21471, !tbaa !2993
  %tobool = icmp ne i8* %3, null, !dbg !21474
  br i1 %tobool, label %for.body, label %for.end, !dbg !21474

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !21475, !tbaa !3837
  %cmp = icmp eq i64 %4, 0, !dbg !21477
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !21478

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !21479, !tbaa !2993
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !21480, !tbaa !2993
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !21481, !tbaa !3837
  %8 = load i64, i64* %i, align 8, !dbg !21482, !tbaa !3837
  %mul = mul i64 %7, %8, !dbg !21483
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !21484
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !21485, !tbaa !3837
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !21486
  %tobool3 = icmp ne i32 %call2, 0, !dbg !21486
  br i1 %tobool3, label %if.then, label %if.else, !dbg !21487

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21488, !tbaa !2993
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !21490, !tbaa !2993
  %12 = load i64, i64* %i, align 8, !dbg !21491, !tbaa !3837
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !21490, !ctir !1249
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !21490, !tbaa !2993
  %call5 = call i8* @quote(i8* %13), !dbg !21492
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.453, i64 0, i64 0), i8* %call5), !dbg !21493
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !21494, !tbaa !2993
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !21495, !tbaa !3837
  %16 = load i64, i64* %i, align 8, !dbg !21496, !tbaa !3837
  %mul7 = mul i64 %15, %16, !dbg !21497
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !21498
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !21499, !tbaa !2993
  br label %if.end, !dbg !21500

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21501, !tbaa !2993
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !21503, !tbaa !2993
  %19 = load i64, i64* %i, align 8, !dbg !21504, !tbaa !3837
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !21503, !ctir !1249
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !21503, !tbaa !2993
  %call10 = call i8* @quote(i8* %20), !dbg !21505
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.454, i64 0, i64 0), i8* %call10), !dbg !21506
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !21507

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !21508, !tbaa !3837
  %inc = add i64 %21, 1, !dbg !21508
  store i64 %inc, i64* %i, align 8, !dbg !21508, !tbaa !3837
  br label %for.cond, !dbg !21509, !llvm.loop !21510

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !21512, !tbaa !2993
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !21512
  ret void, !dbg !21513
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !21514 !ctir !1292 {
entry:
  %retval = alloca i64, align 8, !ctir !539
  %context.addr = alloca i8*, align 8, !ctir !112
  %arg.addr = alloca i8*, align 8, !ctir !112
  %arglist.addr = alloca i8**, align 8, !ctir !1249
  %vallist.addr = alloca i8*, align 8, !ctir !428
  %valsize.addr = alloca i64, align 8, !ctir !52
  %exit_fn.addr = alloca void ()*, align 8, !ctir !617
  %res = alloca i64, align 8, !ctir !539
  store i8* %context, i8** %context.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !21515, metadata !DIExpression()), !dbg !21516
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !21517, metadata !DIExpression()), !dbg !21518
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21519, metadata !DIExpression()), !dbg !21520
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21521, metadata !DIExpression()), !dbg !21522
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21523, metadata !DIExpression()), !dbg !21524
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !21525, metadata !DIExpression()), !dbg !21526
  call void @llvm.dbg.declare(metadata i64* %res, metadata !21527, metadata !DIExpression()), !dbg !21528
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !21529, !tbaa !2993
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !21530, !tbaa !2993
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !21531, !tbaa !2993
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !21532, !tbaa !3837
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !21533
  store i64 %call, i64* %res, align 8, !dbg !21528, !tbaa !3837
  %4 = load i64, i64* %res, align 8, !dbg !21534, !tbaa !3837
  %cmp = icmp sge i64 %4, 0, !dbg !21536
  br i1 %cmp, label %if.then, label %if.end, !dbg !21537

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !21538, !tbaa !3837
  store i64 %5, i64* %retval, align 8, !dbg !21539
  br label %return, !dbg !21539

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !21540, !tbaa !2993
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !21541, !tbaa !2993
  %8 = load i64, i64* %res, align 8, !dbg !21542, !tbaa !3837
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !21543
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !21544, !tbaa !2993
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !21545, !tbaa !2993
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !21546, !tbaa !3837
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !21547
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !21548, !tbaa !2993
  call void %12(), !dbg !21549
  store i64 -1, i64* %retval, align 8, !dbg !21550
  br label %return, !dbg !21550

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !21551
  ret i64 %13, !dbg !21551
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #9 !dbg !21552 !ctir !1294 {
entry:
  %retval = alloca i8*, align 8, !ctir !112
  %value.addr = alloca i8*, align 8, !ctir !428
  %arglist.addr = alloca i8**, align 8, !ctir !1249
  %vallist.addr = alloca i8*, align 8, !ctir !428
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  store i8* %value, i8** %value.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !21553, metadata !DIExpression()), !dbg !21554
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !21555, metadata !DIExpression()), !dbg !21556
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !21557, metadata !DIExpression()), !dbg !21558
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !21559, metadata !DIExpression()), !dbg !21560
  call void @llvm.dbg.declare(metadata i64* %i, metadata !21561, metadata !DIExpression()), !dbg !21562
  store i64 0, i64* %i, align 8, !dbg !21563, !tbaa !3837
  br label %for.cond, !dbg !21565

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !21566, !tbaa !2993
  %1 = load i64, i64* %i, align 8, !dbg !21568, !tbaa !3837
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !21566, !ctir !1249
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !21566, !tbaa !2993
  %tobool = icmp ne i8* %2, null, !dbg !21569
  br i1 %tobool, label %for.body, label %for.end, !dbg !21569

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !21570, !tbaa !2993
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !21572, !tbaa !2993
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !21573, !tbaa !3837
  %6 = load i64, i64* %i, align 8, !dbg !21574, !tbaa !3837
  %mul = mul i64 %5, %6, !dbg !21575
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !21576
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !21577, !tbaa !3837
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !21578
  %tobool1 = icmp ne i32 %call, 0, !dbg !21578
  br i1 %tobool1, label %if.end, label %if.then, !dbg !21579

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !21580, !tbaa !2993
  %9 = load i64, i64* %i, align 8, !dbg !21581, !tbaa !3837
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !21580, !ctir !1249
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !21580, !tbaa !2993
  store i8* %10, i8** %retval, align 8, !dbg !21582
  br label %return, !dbg !21582

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !21583

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !21584, !tbaa !3837
  %inc = add i64 %11, 1, !dbg !21584
  store i64 %inc, i64* %i, align 8, !dbg !21584, !tbaa !3837
  br label %for.cond, !dbg !21585, !llvm.loop !21586

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !21588
  br label %return, !dbg !21588

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !21589
  ret i8* %12, !dbg !21589
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !21590 !ctir !2544 {
entry:
  %x.addr = alloca i64, align 8, !ctir !1552
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21592, metadata !DIExpression()), !dbg !21593
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21594, metadata !DIExpression()), !dbg !21595
  %0 = load i64, i64* %x.addr, align 8, !dbg !21596, !tbaa !3837
  %1 = load i32, i32* %n.addr, align 4, !dbg !21597, !tbaa !2980
  %sh_prom = zext i32 %1 to i64, !dbg !21598
  %shl = shl i64 %0, %sh_prom, !dbg !21598
  %2 = load i64, i64* %x.addr, align 8, !dbg !21599, !tbaa !3837
  %3 = load i32, i32* %n.addr, align 4, !dbg !21600, !tbaa !2980
  %sub = sub nsw i32 64, %3, !dbg !21601
  %sh_prom1 = zext i32 %sub to i64, !dbg !21602
  %shr = lshr i64 %2, %sh_prom1, !dbg !21602
  %or = or i64 %shl, %shr, !dbg !21603
  ret i64 %or, !dbg !21604
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !21605 !ctir !2544 {
entry:
  %x.addr = alloca i64, align 8, !ctir !1552
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21606, metadata !DIExpression()), !dbg !21607
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21608, metadata !DIExpression()), !dbg !21609
  %0 = load i64, i64* %x.addr, align 8, !dbg !21610, !tbaa !3837
  %1 = load i32, i32* %n.addr, align 4, !dbg !21611, !tbaa !2980
  %sh_prom = zext i32 %1 to i64, !dbg !21612
  %shr = lshr i64 %0, %sh_prom, !dbg !21612
  %2 = load i64, i64* %x.addr, align 8, !dbg !21613, !tbaa !3837
  %3 = load i32, i32* %n.addr, align 4, !dbg !21614, !tbaa !2980
  %sub = sub nsw i32 64, %3, !dbg !21615
  %sh_prom1 = zext i32 %sub to i64, !dbg !21616
  %shl = shl i64 %2, %sh_prom1, !dbg !21616
  %or = or i64 %shr, %shl, !dbg !21617
  ret i64 %or, !dbg !21618
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !21619 !ctir !2546 {
entry:
  %x.addr = alloca i32, align 4, !ctir !1555
  %n.addr = alloca i32, align 4, !ctir !5
  store i32 %x, i32* %x.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21620, metadata !DIExpression()), !dbg !21621
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21622, metadata !DIExpression()), !dbg !21623
  %0 = load i32, i32* %x.addr, align 4, !dbg !21624, !tbaa !2980
  %1 = load i32, i32* %n.addr, align 4, !dbg !21625, !tbaa !2980
  %shl = shl i32 %0, %1, !dbg !21626
  %2 = load i32, i32* %x.addr, align 4, !dbg !21627, !tbaa !2980
  %3 = load i32, i32* %n.addr, align 4, !dbg !21628, !tbaa !2980
  %sub = sub nsw i32 32, %3, !dbg !21629
  %shr = lshr i32 %2, %sub, !dbg !21630
  %or = or i32 %shl, %shr, !dbg !21631
  ret i32 %or, !dbg !21632
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !21633 !ctir !2546 {
entry:
  %x.addr = alloca i32, align 4, !ctir !1555
  %n.addr = alloca i32, align 4, !ctir !5
  store i32 %x, i32* %x.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !21634, metadata !DIExpression()), !dbg !21635
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21636, metadata !DIExpression()), !dbg !21637
  %0 = load i32, i32* %x.addr, align 4, !dbg !21638, !tbaa !2980
  %1 = load i32, i32* %n.addr, align 4, !dbg !21639, !tbaa !2980
  %shr = lshr i32 %0, %1, !dbg !21640
  %2 = load i32, i32* %x.addr, align 4, !dbg !21641, !tbaa !2980
  %3 = load i32, i32* %n.addr, align 4, !dbg !21642, !tbaa !2980
  %sub = sub nsw i32 32, %3, !dbg !21643
  %shl = shl i32 %2, %sub, !dbg !21644
  %or = or i32 %shr, %shl, !dbg !21645
  ret i32 %or, !dbg !21646
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !21647 !ctir !2548 {
entry:
  %x.addr = alloca i64, align 8, !ctir !52
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21648, metadata !DIExpression()), !dbg !21649
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21650, metadata !DIExpression()), !dbg !21651
  %0 = load i64, i64* %x.addr, align 8, !dbg !21652, !tbaa !3837
  %1 = load i32, i32* %n.addr, align 4, !dbg !21653, !tbaa !2980
  %sh_prom = zext i32 %1 to i64, !dbg !21654
  %shl = shl i64 %0, %sh_prom, !dbg !21654
  %2 = load i64, i64* %x.addr, align 8, !dbg !21655, !tbaa !3837
  %3 = load i32, i32* %n.addr, align 4, !dbg !21656, !tbaa !2980
  %conv = sext i32 %3 to i64, !dbg !21656
  %sub = sub i64 64, %conv, !dbg !21657
  %shr = lshr i64 %2, %sub, !dbg !21658
  %or = or i64 %shl, %shr, !dbg !21659
  ret i64 %or, !dbg !21660
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !21661 !ctir !2548 {
entry:
  %x.addr = alloca i64, align 8, !ctir !52
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21662, metadata !DIExpression()), !dbg !21663
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21664, metadata !DIExpression()), !dbg !21665
  %0 = load i64, i64* %x.addr, align 8, !dbg !21666, !tbaa !3837
  %1 = load i32, i32* %n.addr, align 4, !dbg !21667, !tbaa !2980
  %sh_prom = zext i32 %1 to i64, !dbg !21668
  %shr = lshr i64 %0, %sh_prom, !dbg !21668
  %2 = load i64, i64* %x.addr, align 8, !dbg !21669, !tbaa !3837
  %3 = load i32, i32* %n.addr, align 4, !dbg !21670, !tbaa !2980
  %conv = sext i32 %3 to i64, !dbg !21670
  %sub = sub i64 64, %conv, !dbg !21671
  %shl = shl i64 %2, %sub, !dbg !21672
  %or = or i64 %shr, %shl, !dbg !21673
  ret i64 %or, !dbg !21674
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !21675 !ctir !2550 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2552
  %n.addr = alloca i32, align 4, !ctir !5
  store i16 %x, i16* %x.addr, align 2, !tbaa !3799
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21676, metadata !DIExpression()), !dbg !21677
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21678, metadata !DIExpression()), !dbg !21679
  %0 = load i16, i16* %x.addr, align 2, !dbg !21680, !tbaa !3799
  %conv = zext i16 %0 to i32, !dbg !21681
  %1 = load i32, i32* %n.addr, align 4, !dbg !21682, !tbaa !2980
  %shl = shl i32 %conv, %1, !dbg !21683
  %2 = load i16, i16* %x.addr, align 2, !dbg !21684, !tbaa !3799
  %conv1 = zext i16 %2 to i32, !dbg !21685
  %3 = load i32, i32* %n.addr, align 4, !dbg !21686, !tbaa !2980
  %sub = sub nsw i32 16, %3, !dbg !21687
  %shr = lshr i32 %conv1, %sub, !dbg !21688
  %or = or i32 %shl, %shr, !dbg !21689
  %and = and i32 %or, 65535, !dbg !21690
  %conv2 = trunc i32 %and to i16, !dbg !21691
  ret i16 %conv2, !dbg !21692
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !21693 !ctir !2550 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2552
  %n.addr = alloca i32, align 4, !ctir !5
  store i16 %x, i16* %x.addr, align 2, !tbaa !3799
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !21694, metadata !DIExpression()), !dbg !21695
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21696, metadata !DIExpression()), !dbg !21697
  %0 = load i16, i16* %x.addr, align 2, !dbg !21698, !tbaa !3799
  %conv = zext i16 %0 to i32, !dbg !21699
  %1 = load i32, i32* %n.addr, align 4, !dbg !21700, !tbaa !2980
  %shr = lshr i32 %conv, %1, !dbg !21701
  %2 = load i16, i16* %x.addr, align 2, !dbg !21702, !tbaa !3799
  %conv1 = zext i16 %2 to i32, !dbg !21703
  %3 = load i32, i32* %n.addr, align 4, !dbg !21704, !tbaa !2980
  %sub = sub nsw i32 16, %3, !dbg !21705
  %shl = shl i32 %conv1, %sub, !dbg !21706
  %or = or i32 %shr, %shl, !dbg !21707
  %and = and i32 %or, 65535, !dbg !21708
  %conv2 = trunc i32 %and to i16, !dbg !21709
  ret i16 %conv2, !dbg !21710
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !21711 !ctir !2553 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2555
  %n.addr = alloca i32, align 4, !ctir !5
  store i8 %x, i8* %x.addr, align 1, !tbaa !3652
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21712, metadata !DIExpression()), !dbg !21713
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21714, metadata !DIExpression()), !dbg !21715
  %0 = load i8, i8* %x.addr, align 1, !dbg !21716, !tbaa !3652
  %conv = zext i8 %0 to i32, !dbg !21717
  %1 = load i32, i32* %n.addr, align 4, !dbg !21718, !tbaa !2980
  %shl = shl i32 %conv, %1, !dbg !21719
  %2 = load i8, i8* %x.addr, align 1, !dbg !21720, !tbaa !3652
  %conv1 = zext i8 %2 to i32, !dbg !21721
  %3 = load i32, i32* %n.addr, align 4, !dbg !21722, !tbaa !2980
  %sub = sub nsw i32 8, %3, !dbg !21723
  %shr = lshr i32 %conv1, %sub, !dbg !21724
  %or = or i32 %shl, %shr, !dbg !21725
  %and = and i32 %or, 255, !dbg !21726
  %conv2 = trunc i32 %and to i8, !dbg !21727
  ret i8 %conv2, !dbg !21728
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !21729 !ctir !2553 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2555
  %n.addr = alloca i32, align 4, !ctir !5
  store i8 %x, i8* %x.addr, align 1, !tbaa !3652
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !21730, metadata !DIExpression()), !dbg !21731
  store i32 %n, i32* %n.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !21732, metadata !DIExpression()), !dbg !21733
  %0 = load i8, i8* %x.addr, align 1, !dbg !21734, !tbaa !3652
  %conv = zext i8 %0 to i32, !dbg !21735
  %1 = load i32, i32* %n.addr, align 4, !dbg !21736, !tbaa !2980
  %shr = lshr i32 %conv, %1, !dbg !21737
  %2 = load i8, i8* %x.addr, align 1, !dbg !21738, !tbaa !3652
  %conv1 = zext i8 %2 to i32, !dbg !21739
  %3 = load i32, i32* %n.addr, align 4, !dbg !21740, !tbaa !2980
  %sub = sub nsw i32 8, %3, !dbg !21741
  %shl = shl i32 %conv1, %sub, !dbg !21742
  %or = or i32 %shr, %shl, !dbg !21743
  %and = and i32 %or, 255, !dbg !21744
  %conv2 = trunc i32 %and to i8, !dbg !21745
  ret i8 %conv2, !dbg !21746
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #9 !dbg !21747 !ctir !1877 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !112
  %s2.addr = alloca i8*, align 8, !ctir !112
  %p1 = alloca i8*, align 8, !ctir !466
  %p2 = alloca i8*, align 8, !ctir !466
  %c1 = alloca i8, align 1, !ctir !468
  %c2 = alloca i8, align 1, !ctir !468
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !21749, metadata !DIExpression()), !dbg !21750
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !21751, metadata !DIExpression()), !dbg !21752
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !21753, metadata !DIExpression()), !dbg !21754
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !21755, !tbaa !2993
  store i8* %0, i8** %p1, align 8, !dbg !21754, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !21756, metadata !DIExpression()), !dbg !21757
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !21758, !tbaa !2993
  store i8* %1, i8** %p2, align 8, !dbg !21757, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !21759, metadata !DIExpression()), !dbg !21760
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !21761, metadata !DIExpression()), !dbg !21762
  %2 = load i8*, i8** %p1, align 8, !dbg !21763, !tbaa !2993
  %3 = load i8*, i8** %p2, align 8, !dbg !21765, !tbaa !2993
  %cmp = icmp eq i8* %2, %3, !dbg !21766
  br i1 %cmp, label %if.then, label %if.end, !dbg !21767

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !21768
  br label %return, !dbg !21768

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !21769

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !21770, !tbaa !2993
  %5 = load i8, i8* %4, align 1, !dbg !21772, !tbaa !3652, !ctir !467
  %conv = zext i8 %5 to i32, !dbg !21772
  %call = call i32 @c_tolower(i32 %conv), !dbg !21773
  %conv1 = trunc i32 %call to i8, !dbg !21773
  store i8 %conv1, i8* %c1, align 1, !dbg !21774, !tbaa !3652
  %6 = load i8*, i8** %p2, align 8, !dbg !21775, !tbaa !2993
  %7 = load i8, i8* %6, align 1, !dbg !21776, !tbaa !3652, !ctir !467
  %conv2 = zext i8 %7 to i32, !dbg !21776
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !21777
  %conv4 = trunc i32 %call3 to i8, !dbg !21777
  store i8 %conv4, i8* %c2, align 1, !dbg !21778, !tbaa !3652
  %8 = load i8, i8* %c1, align 1, !dbg !21779, !tbaa !3652
  %conv5 = zext i8 %8 to i32, !dbg !21779
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !21781
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !21782

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !21783

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !21784, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !21784
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !21784, !tbaa !2993
  %10 = load i8*, i8** %p2, align 8, !dbg !21785, !tbaa !2993
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !21785
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !21785, !tbaa !2993
  br label %do.cond, !dbg !21786

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !21787, !tbaa !3652
  %conv11 = zext i8 %11 to i32, !dbg !21787
  %12 = load i8, i8* %c2, align 1, !dbg !21788, !tbaa !3652
  %conv12 = zext i8 %12 to i32, !dbg !21788
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !21789
  br i1 %cmp13, label %do.body, label %do.end, !dbg !21786, !llvm.loop !21790

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !21792, !tbaa !3652
  %conv15 = zext i8 %13 to i32, !dbg !21792
  %14 = load i8, i8* %c2, align 1, !dbg !21794, !tbaa !3652
  %conv16 = zext i8 %14 to i32, !dbg !21794
  %sub = sub nsw i32 %conv15, %conv16, !dbg !21795
  store i32 %sub, i32* %retval, align 4, !dbg !21796
  br label %return, !dbg !21796

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !21797
  ret i32 %15, !dbg !21797
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !21798 !ctir !2562 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2564
  %some_pending = alloca i8, align 1, !ctir !2604
  %prev_fail = alloca i8, align 1, !ctir !2604
  %fclose_fail = alloca i8, align 1, !ctir !2604
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !21800, metadata !DIExpression()), !dbg !21801
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !21802, metadata !DIExpression()), !dbg !21803
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21804, !tbaa !2993
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #12, !dbg !21805
  %cmp = icmp ne i64 %call, 0, !dbg !21806
  %frombool = zext i1 %cmp to i8, !dbg !21803
  store i8 %frombool, i8* %some_pending, align 1, !dbg !21803, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !21807, metadata !DIExpression()), !dbg !21808
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21809, !tbaa !2993
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #12, !dbg !21809
  %cmp2 = icmp ne i32 %call1, 0, !dbg !21810
  %frombool3 = zext i1 %cmp2 to i8, !dbg !21808
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !21808, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !21811, metadata !DIExpression()), !dbg !21812
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !21813, !tbaa !2993
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !21814
  %cmp5 = icmp ne i32 %call4, 0, !dbg !21815
  %frombool6 = zext i1 %cmp5 to i8, !dbg !21812
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !21812, !tbaa !3104
  %3 = load i8, i8* %prev_fail, align 1, !dbg !21816, !tbaa !3104
  %tobool = trunc i8 %3 to i1, !dbg !21816
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !21818

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !21819, !tbaa !3104
  %tobool7 = trunc i8 %4 to i1, !dbg !21819
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !21820

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !21821, !tbaa !3104
  %tobool8 = trunc i8 %5 to i1, !dbg !21821
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !21822

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #15, !dbg !21823
  %6 = load i32, i32* %call10, align 4, !dbg !21823, !tbaa !2980, !ctir !5
  %cmp11 = icmp ne i32 %6, 9, !dbg !21824
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !21825

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !21826, !tbaa !3104
  %tobool12 = trunc i8 %7 to i1, !dbg !21826
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !21829

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #15, !dbg !21830
  store i32 0, i32* %call14, align 4, !dbg !21831, !tbaa !2980, !ctir !5
  br label %if.end, !dbg !21830

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !21832
  br label %return, !dbg !21832

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !21833
  br label %return, !dbg !21833

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !21834
  ret i32 %8, !dbg !21834
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cycle_check_init(%struct.cycle_check_state* %state) #4 !dbg !21835 !ctir !2608 {
entry:
  %state.addr = alloca %struct.cycle_check_state*, align 8, !ctir !2610
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !21837, metadata !DIExpression()), !dbg !21838
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21839, !tbaa !2993
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 1, !dbg !21840, !ctir !2611
  store i64 0, i64* %chdir_counter, align 8, !dbg !21841, !tbaa !19760, !ctir !459
  %1 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21842, !tbaa !2993
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %1, i32 0, i32 2, !dbg !21843, !ctir !2611
  store i32 9827862, i32* %magic, align 8, !dbg !21844, !tbaa !21845, !ctir !5
  ret void, !dbg !21846
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @cycle_check(%struct.cycle_check_state* %state, %struct.stat* %sb) #4 !dbg !21847 !ctir !2620 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %state.addr = alloca %struct.cycle_check_state*, align 8, !ctir !2610
  %sb.addr = alloca %struct.stat*, align 8, !ctir !2622
  store %struct.cycle_check_state* %state, %struct.cycle_check_state** %state.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.cycle_check_state** %state.addr, metadata !21848, metadata !DIExpression()), !dbg !21849
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !21850, metadata !DIExpression()), !dbg !21851
  %0 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21852, !tbaa !2993
  %magic = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %0, i32 0, i32 2, !dbg !21852, !ctir !2611
  %1 = load i32, i32* %magic, align 8, !dbg !21852, !tbaa !21845, !ctir !5
  %cmp = icmp eq i32 %1, 9827862, !dbg !21852
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21852

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !21852

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.467, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.468, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__.cycle_check, i64 0, i64 0)) #13, !dbg !21852
  unreachable, !dbg !21852

2:                                                ; No predecessors!
  br label %cond.end, !dbg !21852

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21853, !tbaa !2993
  %chdir_counter = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %3, i32 0, i32 1, !dbg !21855, !ctir !2611
  %4 = load i64, i64* %chdir_counter, align 8, !dbg !21855, !tbaa !19760, !ctir !459
  %tobool = icmp ne i64 %4, 0, !dbg !21853
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !21856

land.lhs.true:                                    ; preds = %cond.end
  %5 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21857, !tbaa !2993
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 1, !dbg !21857, !ctir !2623
  %6 = load i64, i64* %st_ino, align 8, !dbg !21857, !tbaa !3859, !ctir !225
  %7 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21857, !tbaa !2993
  %dev_ino = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %7, i32 0, i32 0, !dbg !21857, !ctir !2611
  %st_ino1 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino, i32 0, i32 0, !dbg !21857, !ctir !2614
  %8 = load i64, i64* %st_ino1, align 8, !dbg !21857, !tbaa !19765, !ctir !224
  %cmp2 = icmp eq i64 %6, %8, !dbg !21857
  br i1 %cmp2, label %land.lhs.true3, label %if.end, !dbg !21857

land.lhs.true3:                                   ; preds = %land.lhs.true
  %9 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21857, !tbaa !2993
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %9, i32 0, i32 0, !dbg !21857, !ctir !2623
  %10 = load i64, i64* %st_dev, align 8, !dbg !21857, !tbaa !3862, !ctir !228
  %11 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21857, !tbaa !2993
  %dev_ino4 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %11, i32 0, i32 0, !dbg !21857, !ctir !2611
  %st_dev5 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino4, i32 0, i32 1, !dbg !21857, !ctir !2614
  %12 = load i64, i64* %st_dev5, align 8, !dbg !21857, !tbaa !19766, !ctir !227
  %cmp6 = icmp eq i64 %10, %12, !dbg !21857
  br i1 %cmp6, label %if.then, label %if.end, !dbg !21858

if.then:                                          ; preds = %land.lhs.true3
  store i1 true, i1* %retval, align 1, !dbg !21859
  br label %return, !dbg !21859

if.end:                                           ; preds = %land.lhs.true3, %land.lhs.true, %cond.end
  %13 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21860, !tbaa !2993
  %chdir_counter7 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %13, i32 0, i32 1, !dbg !21862, !ctir !2611
  %14 = load i64, i64* %chdir_counter7, align 8, !dbg !21863, !tbaa !19760, !ctir !459
  %inc = add i64 %14, 1, !dbg !21863
  store i64 %inc, i64* %chdir_counter7, align 8, !dbg !21863, !tbaa !19760, !ctir !459
  %call = call zeroext i1 @is_zero_or_power_of_two(i64 %inc), !dbg !21864
  br i1 %call, label %if.then8, label %if.end19, !dbg !21865

if.then8:                                         ; preds = %if.end
  %15 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21866, !tbaa !2993
  %chdir_counter9 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %15, i32 0, i32 1, !dbg !21869, !ctir !2611
  %16 = load i64, i64* %chdir_counter9, align 8, !dbg !21869, !tbaa !19760, !ctir !459
  %cmp10 = icmp eq i64 %16, 0, !dbg !21870
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !21871

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, align 1, !dbg !21872
  br label %return, !dbg !21872

if.end12:                                         ; preds = %if.then8
  %17 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21873, !tbaa !2993
  %st_dev13 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !21874, !ctir !2623
  %18 = load i64, i64* %st_dev13, align 8, !dbg !21874, !tbaa !3862, !ctir !228
  %19 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21875, !tbaa !2993
  %dev_ino14 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %19, i32 0, i32 0, !dbg !21876, !ctir !2611
  %st_dev15 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino14, i32 0, i32 1, !dbg !21877, !ctir !2614
  store i64 %18, i64* %st_dev15, align 8, !dbg !21878, !tbaa !19766, !ctir !227
  %20 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !21879, !tbaa !2993
  %st_ino16 = getelementptr inbounds %struct.stat, %struct.stat* %20, i32 0, i32 1, !dbg !21880, !ctir !2623
  %21 = load i64, i64* %st_ino16, align 8, !dbg !21880, !tbaa !3859, !ctir !225
  %22 = load %struct.cycle_check_state*, %struct.cycle_check_state** %state.addr, align 8, !dbg !21881, !tbaa !2993
  %dev_ino17 = getelementptr inbounds %struct.cycle_check_state, %struct.cycle_check_state* %22, i32 0, i32 0, !dbg !21882, !ctir !2611
  %st_ino18 = getelementptr inbounds %struct.timespec, %struct.timespec* %dev_ino17, i32 0, i32 0, !dbg !21883, !ctir !2614
  store i64 %21, i64* %st_ino18, align 8, !dbg !21884, !tbaa !19765, !ctir !224
  br label %if.end19, !dbg !21885

if.end19:                                         ; preds = %if.end12, %if.end
  store i1 false, i1* %retval, align 1, !dbg !21886
  br label %return, !dbg !21886

return:                                           ; preds = %if.end19, %if.then11, %if.then
  %23 = load i1, i1* %retval, align 1, !dbg !21887
  ret i1 %23, !dbg !21887
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_zero_or_power_of_two(i64 %i) #4 !dbg !21888 !ctir !2645 {
entry:
  %i.addr = alloca i64, align 8, !ctir !459
  store i64 %i, i64* %i.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %i.addr, metadata !21889, metadata !DIExpression()), !dbg !21890
  %0 = load i64, i64* %i.addr, align 8, !dbg !21891, !tbaa !3837
  %1 = load i64, i64* %i.addr, align 8, !dbg !21892, !tbaa !3837
  %sub = sub i64 %1, 1, !dbg !21893
  %and = and i64 %0, %sub, !dbg !21894
  %cmp = icmp eq i64 %and, 0, !dbg !21895
  ret i1 %cmp, !dbg !21896
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !21897 !ctir !2650 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  %dp = alloca %struct.__dirstream*, align 8, !ctir !580
  %fd = alloca i32, align 4, !ctir !5
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !580
  %e = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21899, metadata !DIExpression()), !dbg !21900
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !21901, metadata !DIExpression()), !dbg !21902
  %0 = load i8*, i8** %name.addr, align 8, !dbg !21903, !tbaa !2993
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !21904
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !21902, !tbaa !2993
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21905, !tbaa !2993
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !21905
  br i1 %tobool, label %if.then, label %if.end17, !dbg !21907

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21908, metadata !DIExpression()), !dbg !21910
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21911, !tbaa !2993
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #12, !dbg !21912
  store i32 %call1, i32* %fd, align 4, !dbg !21910, !tbaa !2980
  %3 = load i32, i32* %fd, align 4, !dbg !21913, !tbaa !2980
  %cmp = icmp sle i32 0, %3, !dbg !21915
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !21916

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !21917, !tbaa !2980
  %cmp2 = icmp sle i32 %4, 2, !dbg !21918
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !21919

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !21920, metadata !DIExpression()), !dbg !21922
  call void @llvm.dbg.declare(metadata i32* %e, metadata !21923, metadata !DIExpression()), !dbg !21924
  call void @llvm.dbg.declare(metadata i32* %f, metadata !21925, metadata !DIExpression()), !dbg !21926
  %5 = load i32, i32* %fd, align 4, !dbg !21927, !tbaa !2980
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !21928
  store i32 %call4, i32* %f, align 4, !dbg !21926, !tbaa !2980
  %6 = load i32, i32* %f, align 4, !dbg !21929, !tbaa !2980
  %cmp5 = icmp slt i32 %6, 0, !dbg !21931
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !21932

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #15, !dbg !21933
  %7 = load i32, i32* %call7, align 4, !dbg !21933, !tbaa !2980, !ctir !5
  store i32 %7, i32* %e, align 4, !dbg !21935, !tbaa !2980
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !21936, !tbaa !2993
  br label %if.end13, !dbg !21937

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !21938, !tbaa !2980
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !21940
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !21941, !tbaa !2993
  %call9 = call i32* @__errno_location() #15, !dbg !21942
  %9 = load i32, i32* %call9, align 4, !dbg !21942, !tbaa !2980, !ctir !5
  store i32 %9, i32* %e, align 4, !dbg !21943, !tbaa !2980
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !21944, !tbaa !2993
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !21944
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !21946

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !21947, !tbaa !2980
  %call12 = call i32 @close(i32 %11), !dbg !21948
  br label %if.end, !dbg !21948

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21949, !tbaa !2993
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !21950
  %13 = load i32, i32* %e, align 4, !dbg !21951, !tbaa !2980
  %call15 = call i32* @__errno_location() #15, !dbg !21952
  store i32 %13, i32* %call15, align 4, !dbg !21953, !tbaa !2980, !ctir !5
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !21954, !tbaa !2993
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !21955, !tbaa !2993
  br label %if.end16, !dbg !21956

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !21957

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !21958, !tbaa !2993
  ret %struct.__dirstream* %15, !dbg !21959
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !21960 !ctir !2655 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8, !ctir !2657
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !21962, metadata !DIExpression()), !dbg !21963
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !21964, !tbaa !2993
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #12, !dbg !21965
  ret void, !dbg !21966
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !21967 !ctir !2662 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !2658
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !21968, metadata !DIExpression()), !dbg !21969
  call void @gettime(%struct.timespec* %retval), !dbg !21970
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !21971
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !21971
  ret { i64, i64 } %1, !dbg !21971
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !21972 !ctir !304 {
entry:
  %category.addr = alloca i32, align 4, !ctir !5
  %hard = alloca i8, align 1, !ctir !117
  %p = alloca i8*, align 8, !ctir !112
  store i32 %category, i32* %category.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !21974, metadata !DIExpression()), !dbg !21975
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !21976, metadata !DIExpression()), !dbg !21977
  store i8 1, i8* %hard, align 1, !dbg !21977, !tbaa !3104
  call void @llvm.dbg.declare(metadata i8** %p, metadata !21978, metadata !DIExpression()), !dbg !21979
  %0 = load i32, i32* %category.addr, align 4, !dbg !21980, !tbaa !2980
  %call = call i8* @setlocale(i32 %0, i8* null) #12, !dbg !21981
  store i8* %call, i8** %p, align 8, !dbg !21979, !tbaa !2993
  %1 = load i8*, i8** %p, align 8, !dbg !21982, !tbaa !2993
  %tobool = icmp ne i8* %1, null, !dbg !21982
  br i1 %tobool, label %if.then, label %if.end5, !dbg !21984

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !21985, !tbaa !2993
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.475, i64 0, i64 0)) #14, !dbg !21990
  %cmp = icmp eq i32 %call1, 0, !dbg !21991
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !21992

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !21993, !tbaa !2993
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.476, i64 0, i64 0)) #14, !dbg !21994
  %cmp3 = icmp eq i32 %call2, 0, !dbg !21995
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !21996

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !21997, !tbaa !3104
  br label %if.end, !dbg !21998

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !21999

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !22000, !tbaa !3104
  %tobool6 = trunc i8 %4 to i1, !dbg !22000
  ret i1 %tobool6, !dbg !22001
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #9 !dbg !22002 !ctir !520 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !428
  %tablesize.addr = alloca i64, align 8, !ctir !52
  %s = alloca i8*, align 8, !ctir !112
  %h = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !22004, metadata !DIExpression()), !dbg !22005
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !22006, metadata !DIExpression()), !dbg !22007
  call void @llvm.dbg.declare(metadata i8** %s, metadata !22008, metadata !DIExpression()), !dbg !22009
  call void @llvm.dbg.declare(metadata i64* %h, metadata !22010, metadata !DIExpression()), !dbg !22011
  store i64 0, i64* %h, align 8, !dbg !22011, !tbaa !3837
  %0 = load i8*, i8** %x.addr, align 8, !dbg !22012, !tbaa !2993
  store i8* %0, i8** %s, align 8, !dbg !22014, !tbaa !2993
  br label %for.cond, !dbg !22015

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !22016, !tbaa !2993
  %2 = load i8, i8* %1, align 1, !dbg !22018, !tbaa !3652, !ctir !113
  %tobool = icmp ne i8 %2, 0, !dbg !22019
  br i1 %tobool, label %for.body, label %for.end, !dbg !22019

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !22020, !tbaa !2993
  %4 = load i8, i8* %3, align 1, !dbg !22021, !tbaa !3652, !ctir !113
  %conv = sext i8 %4 to i64, !dbg !22021
  %5 = load i64, i64* %h, align 8, !dbg !22022, !tbaa !3837
  %shl = shl i64 %5, 9, !dbg !22023
  %6 = load i64, i64* %h, align 8, !dbg !22024, !tbaa !3837
  %shr = lshr i64 %6, 55, !dbg !22025
  %or = or i64 %shl, %shr, !dbg !22026
  %add = add i64 %conv, %or, !dbg !22027
  store i64 %add, i64* %h, align 8, !dbg !22028, !tbaa !3837
  br label %for.inc, !dbg !22029

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !22030, !tbaa !2993
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !22030
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !22030, !tbaa !2993
  br label %for.cond, !dbg !22031, !llvm.loop !22032

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !22034, !tbaa !3837
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !22035, !tbaa !3837
  %rem = urem i64 %8, %9, !dbg !22036
  ret i64 %rem, !dbg !22037
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @i_ring_init(%struct.I_ring* %ir, i32 %default_val) #4 !dbg !22038 !ctir !2673 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8, !ctir !2675
  %default_val.addr = alloca i32, align 4, !ctir !5
  %i = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22040, metadata !DIExpression()), !dbg !22041
  store i32 %default_val, i32* %default_val.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %default_val.addr, metadata !22042, metadata !DIExpression()), !dbg !22043
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22044, metadata !DIExpression()), !dbg !22045
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22046, !tbaa !2993
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22047, !ctir !2676
  store i8 1, i8* %ir_empty, align 4, !dbg !22048, !tbaa !22049, !ctir !117
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22050, !tbaa !2993
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 2, !dbg !22051, !ctir !2676
  store i32 0, i32* %ir_front, align 4, !dbg !22052, !tbaa !22053, !ctir !67
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22054, !tbaa !2993
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 3, !dbg !22055, !ctir !2676
  store i32 0, i32* %ir_back, align 4, !dbg !22056, !tbaa !22057, !ctir !67
  store i32 0, i32* %i, align 4, !dbg !22058, !tbaa !2980
  br label %for.cond, !dbg !22060

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !22061, !tbaa !2980
  %cmp = icmp slt i32 %3, 4, !dbg !22063
  br i1 %cmp, label %for.body, label %for.end, !dbg !22064

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %default_val.addr, align 4, !dbg !22065, !tbaa !2980
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22066, !tbaa !2993
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 0, !dbg !22067, !ctir !2676
  %6 = load i32, i32* %i, align 4, !dbg !22068, !tbaa !2980
  %idxprom = sext i32 %6 to i64, !dbg !22066
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22066, !ctir !1440
  store i32 %4, i32* %arrayidx, align 4, !dbg !22069, !tbaa !2980
  br label %for.inc, !dbg !22066

for.inc:                                          ; preds = %for.body
  %7 = load i32, i32* %i, align 4, !dbg !22070, !tbaa !2980
  %inc = add nsw i32 %7, 1, !dbg !22070
  store i32 %inc, i32* %i, align 4, !dbg !22070, !tbaa !2980
  br label %for.cond, !dbg !22071, !llvm.loop !22072

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %default_val.addr, align 4, !dbg !22074, !tbaa !2980
  %9 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22075, !tbaa !2993
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %9, i32 0, i32 1, !dbg !22076, !ctir !2676
  store i32 %8, i32* %ir_default_val, align 4, !dbg !22077, !tbaa !22078, !ctir !5
  ret void, !dbg !22079
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @i_ring_empty(%struct.I_ring* %ir) #9 !dbg !22080 !ctir !2684 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8, !ctir !2686
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22081, metadata !DIExpression()), !dbg !22082
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22083, !tbaa !2993
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 4, !dbg !22084, !ctir !2687
  %1 = load i8, i8* %ir_empty, align 4, !dbg !22084, !tbaa !22049
  %tobool = trunc i8 %1 to i1, !dbg !22084, !ctir !117
  ret i1 %tobool, !dbg !22085
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_push(%struct.I_ring* %ir, i32 %val) #4 !dbg !22086 !ctir !2688 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8, !ctir !2675
  %val.addr = alloca i32, align 4, !ctir !5
  %dest_idx = alloca i32, align 4, !ctir !67
  %old_val = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22087, metadata !DIExpression()), !dbg !22088
  store i32 %val, i32* %val.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !22089, metadata !DIExpression()), !dbg !22090
  call void @llvm.dbg.declare(metadata i32* %dest_idx, metadata !22091, metadata !DIExpression()), !dbg !22092
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22093, !tbaa !2993
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %0, i32 0, i32 2, !dbg !22094, !ctir !2676
  %1 = load i32, i32* %ir_front, align 4, !dbg !22094, !tbaa !22053, !ctir !67
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22095, !tbaa !2993
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 4, !dbg !22096, !ctir !2676
  %3 = load i8, i8* %ir_empty, align 4, !dbg !22096, !tbaa !22049
  %tobool = trunc i8 %3 to i1, !dbg !22096, !ctir !117
  %lnot = xor i1 %tobool, true, !dbg !22097
  %lnot.ext = zext i1 %lnot to i32, !dbg !22097
  %add = add i32 %1, %lnot.ext, !dbg !22098
  %rem = urem i32 %add, 4, !dbg !22099
  store i32 %rem, i32* %dest_idx, align 4, !dbg !22092, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %old_val, metadata !22100, metadata !DIExpression()), !dbg !22101
  %4 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22102, !tbaa !2993
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %4, i32 0, i32 0, !dbg !22103, !ctir !2676
  %5 = load i32, i32* %dest_idx, align 4, !dbg !22104, !tbaa !2980
  %idxprom = zext i32 %5 to i64, !dbg !22102
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22102, !ctir !1440
  %6 = load i32, i32* %arrayidx, align 4, !dbg !22102, !tbaa !2980
  store i32 %6, i32* %old_val, align 4, !dbg !22101, !tbaa !2980
  %7 = load i32, i32* %val.addr, align 4, !dbg !22105, !tbaa !2980
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22106, !tbaa !2993
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 0, !dbg !22107, !ctir !2676
  %9 = load i32, i32* %dest_idx, align 4, !dbg !22108, !tbaa !2980
  %idxprom2 = zext i32 %9 to i64, !dbg !22106
  %arrayidx3 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom2, !dbg !22106, !ctir !1440
  store i32 %7, i32* %arrayidx3, align 4, !dbg !22109, !tbaa !2980
  %10 = load i32, i32* %dest_idx, align 4, !dbg !22110, !tbaa !2980
  %11 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22111, !tbaa !2993
  %ir_front4 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %11, i32 0, i32 2, !dbg !22112, !ctir !2676
  store i32 %10, i32* %ir_front4, align 4, !dbg !22113, !tbaa !22053, !ctir !67
  %12 = load i32, i32* %dest_idx, align 4, !dbg !22114, !tbaa !2980
  %13 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22116, !tbaa !2993
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %13, i32 0, i32 3, !dbg !22117, !ctir !2676
  %14 = load i32, i32* %ir_back, align 4, !dbg !22117, !tbaa !22057, !ctir !67
  %cmp = icmp eq i32 %12, %14, !dbg !22118
  br i1 %cmp, label %if.then, label %if.end, !dbg !22119

if.then:                                          ; preds = %entry
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22120, !tbaa !2993
  %ir_back5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 3, !dbg !22121, !ctir !2676
  %16 = load i32, i32* %ir_back5, align 4, !dbg !22121, !tbaa !22057, !ctir !67
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22122, !tbaa !2993
  %ir_empty6 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 4, !dbg !22123, !ctir !2676
  %18 = load i8, i8* %ir_empty6, align 4, !dbg !22123, !tbaa !22049
  %tobool7 = trunc i8 %18 to i1, !dbg !22123, !ctir !117
  %lnot8 = xor i1 %tobool7, true, !dbg !22124
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !22124
  %add10 = add i32 %16, %lnot.ext9, !dbg !22125
  %rem11 = urem i32 %add10, 4, !dbg !22126
  %19 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22127, !tbaa !2993
  %ir_back12 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %19, i32 0, i32 3, !dbg !22128, !ctir !2676
  store i32 %rem11, i32* %ir_back12, align 4, !dbg !22129, !tbaa !22057, !ctir !67
  br label %if.end, !dbg !22127

if.end:                                           ; preds = %if.then, %entry
  %20 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22130, !tbaa !2993
  %ir_empty13 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %20, i32 0, i32 4, !dbg !22131, !ctir !2676
  store i8 0, i8* %ir_empty13, align 4, !dbg !22132, !tbaa !22049, !ctir !117
  %21 = load i32, i32* %old_val, align 4, !dbg !22133, !tbaa !2980
  ret i32 %21, !dbg !22134
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_ring_pop(%struct.I_ring* %ir) #4 !dbg !22135 !ctir !2690 {
entry:
  %ir.addr = alloca %struct.I_ring*, align 8, !ctir !2675
  %top_val = alloca i32, align 4, !ctir !5
  store %struct.I_ring* %ir, %struct.I_ring** %ir.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.I_ring** %ir.addr, metadata !22136, metadata !DIExpression()), !dbg !22137
  call void @llvm.dbg.declare(metadata i32* %top_val, metadata !22138, metadata !DIExpression()), !dbg !22139
  %0 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22140, !tbaa !2993
  %call = call zeroext i1 @i_ring_empty(%struct.I_ring* %0) #14, !dbg !22142
  br i1 %call, label %if.then, label %if.end, !dbg !22143

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !22144
  unreachable, !dbg !22144

if.end:                                           ; preds = %entry
  %1 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22145, !tbaa !2993
  %ir_data = getelementptr inbounds %struct.I_ring, %struct.I_ring* %1, i32 0, i32 0, !dbg !22146, !ctir !2676
  %2 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22147, !tbaa !2993
  %ir_front = getelementptr inbounds %struct.I_ring, %struct.I_ring* %2, i32 0, i32 2, !dbg !22148, !ctir !2676
  %3 = load i32, i32* %ir_front, align 4, !dbg !22148, !tbaa !22053, !ctir !67
  %idxprom = zext i32 %3 to i64, !dbg !22145
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data, i64 0, i64 %idxprom, !dbg !22145, !ctir !1440
  %4 = load i32, i32* %arrayidx, align 4, !dbg !22145, !tbaa !2980
  store i32 %4, i32* %top_val, align 4, !dbg !22149, !tbaa !2980
  %5 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22150, !tbaa !2993
  %ir_default_val = getelementptr inbounds %struct.I_ring, %struct.I_ring* %5, i32 0, i32 1, !dbg !22151, !ctir !2676
  %6 = load i32, i32* %ir_default_val, align 4, !dbg !22151, !tbaa !22078, !ctir !5
  %7 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22152, !tbaa !2993
  %ir_data1 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %7, i32 0, i32 0, !dbg !22153, !ctir !2676
  %8 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22154, !tbaa !2993
  %ir_front2 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %8, i32 0, i32 2, !dbg !22155, !ctir !2676
  %9 = load i32, i32* %ir_front2, align 4, !dbg !22155, !tbaa !22053, !ctir !67
  %idxprom3 = zext i32 %9 to i64, !dbg !22152
  %arrayidx4 = getelementptr inbounds [4 x i32], [4 x i32]* %ir_data1, i64 0, i64 %idxprom3, !dbg !22152, !ctir !1440
  store i32 %6, i32* %arrayidx4, align 4, !dbg !22156, !tbaa !2980
  %10 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22157, !tbaa !2993
  %ir_front5 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %10, i32 0, i32 2, !dbg !22159, !ctir !2676
  %11 = load i32, i32* %ir_front5, align 4, !dbg !22159, !tbaa !22053, !ctir !67
  %12 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22160, !tbaa !2993
  %ir_back = getelementptr inbounds %struct.I_ring, %struct.I_ring* %12, i32 0, i32 3, !dbg !22161, !ctir !2676
  %13 = load i32, i32* %ir_back, align 4, !dbg !22161, !tbaa !22057, !ctir !67
  %cmp = icmp eq i32 %11, %13, !dbg !22162
  br i1 %cmp, label %if.then6, label %if.else, !dbg !22163

if.then6:                                         ; preds = %if.end
  %14 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22164, !tbaa !2993
  %ir_empty = getelementptr inbounds %struct.I_ring, %struct.I_ring* %14, i32 0, i32 4, !dbg !22165, !ctir !2676
  store i8 1, i8* %ir_empty, align 4, !dbg !22166, !tbaa !22049, !ctir !117
  br label %if.end9, !dbg !22164

if.else:                                          ; preds = %if.end
  %15 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22167, !tbaa !2993
  %ir_front7 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %15, i32 0, i32 2, !dbg !22168, !ctir !2676
  %16 = load i32, i32* %ir_front7, align 4, !dbg !22168, !tbaa !22053, !ctir !67
  %add = add i32 %16, 4, !dbg !22169
  %sub = sub i32 %add, 1, !dbg !22170
  %rem = urem i32 %sub, 4, !dbg !22171
  %17 = load %struct.I_ring*, %struct.I_ring** %ir.addr, align 8, !dbg !22172, !tbaa !2993
  %ir_front8 = getelementptr inbounds %struct.I_ring, %struct.I_ring* %17, i32 0, i32 2, !dbg !22173, !ctir !2676
  store i32 %rem, i32* %ir_front8, align 4, !dbg !22174, !tbaa !22053, !ctir !67
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then6
  %18 = load i32, i32* %top_val, align 4, !dbg !22175, !tbaa !2980
  ret i32 %18, !dbg !22176
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !22177 !ctir !2695 {
entry:
  %codeset = alloca i8*, align 8, !ctir !112
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !22179, metadata !DIExpression()), !dbg !22180
  %call = call i8* @rpl_nl_langinfo(i32 14), !dbg !22181
  store i8* %call, i8** %codeset, align 8, !dbg !22182, !tbaa !2993
  %0 = load i8*, i8** %codeset, align 8, !dbg !22183, !tbaa !2993
  %cmp = icmp eq i8* %0, null, !dbg !22185
  br i1 %cmp, label %if.then, label %if.end, !dbg !22186

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.489, i64 0, i64 0), i8** %codeset, align 8, !dbg !22187, !tbaa !2993
  br label %if.end, !dbg !22188

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !22189, !tbaa !2993
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !22189, !ctir !112
  %2 = load i8, i8* %arrayidx, align 1, !dbg !22189, !tbaa !3652
  %conv = sext i8 %2 to i32, !dbg !22189
  %cmp1 = icmp eq i32 %conv, 0, !dbg !22193
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !22194

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.490, i64 0, i64 0), i8** %codeset, align 8, !dbg !22195, !tbaa !2993
  br label %if.end4, !dbg !22196

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !22197, !tbaa !2993
  ret i8* %3, !dbg !22198
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !22199 !ctir !2699 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !112
  %flags.addr = alloca i32, align 4, !ctir !5
  %mode = alloca i32, align 4, !ctir !157
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2701
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22203, metadata !DIExpression()), !dbg !22204
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !22205, metadata !DIExpression()), !dbg !22206
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !22207, metadata !DIExpression()), !dbg !22208
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !22209, metadata !DIExpression()), !dbg !22210
  store i32 0, i32* %mode, align 4, !dbg !22210, !tbaa !2980
  %0 = load i32, i32* %flags.addr, align 4, !dbg !22211, !tbaa !2980
  %and = and i32 %0, 64, !dbg !22213
  %tobool = icmp ne i32 %and, 0, !dbg !22213
  br i1 %tobool, label %if.then, label %if.end, !dbg !22214

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !22215, metadata !DIExpression()), !dbg !22217
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22218
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !22218
  call void @llvm.va_start(i8* %arraydecay1), !dbg !22218
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22219
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !22219
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !22219
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !22219
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !22219

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !22219
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !22219
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !22219
  %3 = bitcast i8* %2 to i32*, !dbg !22219
  %4 = add i32 %gp_offset, 8, !dbg !22219
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !22219
  br label %vaarg.end, !dbg !22219

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !22219
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !22219
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !22219
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !22219
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !22219
  br label %vaarg.end, !dbg !22219

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !22219
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !22219
  store i32 %6, i32* %mode, align 4, !dbg !22220, !tbaa !2980
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !22221
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !22221
  call void @llvm.va_end(i8* %arraydecay34), !dbg !22221
  br label %if.end, !dbg !22222

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !22223, !tbaa !2980
  %8 = load i8*, i8** %file.addr, align 8, !dbg !22224, !tbaa !2993
  %9 = load i32, i32* %flags.addr, align 4, !dbg !22225, !tbaa !2980
  %10 = load i32, i32* %mode, align 4, !dbg !22226, !tbaa !2980
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !22227
  %call5 = call i32 @fd_safer(i32 %call), !dbg !22228
  ret i32 %call5, !dbg !22229
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !22230 !ctir !2713 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8, !ctir !2720
  %s = alloca %struct.randint_source*, align 8, !ctir !2715
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !22231, metadata !DIExpression()), !dbg !22232
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !22233, metadata !DIExpression()), !dbg !22234
  %call = call noalias i8* @xmalloc(i64 24), !dbg !22235
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !22235
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !22234, !tbaa !2993
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !22236, !tbaa !2993
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22237, !tbaa !2993
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !22238, !ctir !2716
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !22239, !tbaa !22240, !ctir !2720
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22242, !tbaa !2993
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !22243, !ctir !2716
  store i64 0, i64* %randmax, align 8, !dbg !22244, !tbaa !22245, !ctir !2724
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22246, !tbaa !2993
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !22247, !ctir !2716
  store i64 0, i64* %randnum, align 8, !dbg !22248, !tbaa !22249, !ctir !2724
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22250, !tbaa !2993
  ret %struct.randint_source* %5, !dbg !22251
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !22252 !ctir !2726 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !112
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %source = alloca %struct.randread_source*, align 8, !ctir !2720
  %s = alloca %struct.randint_source*, align 8, !ctir !2715
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22253, metadata !DIExpression()), !dbg !22254
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22255, metadata !DIExpression()), !dbg !22256
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22257, metadata !DIExpression()), !dbg !22258
  %0 = load i8*, i8** %name.addr, align 8, !dbg !22259, !tbaa !2993
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22260, !tbaa !3837
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !22261
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !22258, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !22262, metadata !DIExpression()), !dbg !22263
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22264, !tbaa !2993
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %2), !dbg !22265
  store %struct.randint_source* %call1, %struct.randint_source** %s, align 8, !dbg !22263, !tbaa !2993
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22266, !tbaa !2993
  %source2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 0, !dbg !22267, !ctir !2716
  %4 = load %struct.randread_source*, %struct.randread_source** %source2, align 8, !dbg !22267, !tbaa !22240, !ctir !2720
  call void @randread(%struct.randread_source* %4, i8* null, i64 30), !dbg !22268
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !22269, !tbaa !2993
  ret %struct.randint_source* %5, !dbg !22270
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #9 !dbg !22271 !ctir !2728 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2730
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22272, metadata !DIExpression()), !dbg !22273
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22274, !tbaa !2993
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22275, !ctir !2731
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22275, !tbaa !22240, !ctir !2720
  ret %struct.randread_source* %1, !dbg !22276
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !22277 !ctir !2732 {
entry:
  %retval = alloca i64, align 8, !ctir !2724
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2715
  %genmax.addr = alloca i64, align 8, !ctir !2724
  %source = alloca %struct.randread_source*, align 8, !ctir !2720
  %randnum = alloca i64, align 8, !ctir !2724
  %randmax = alloca i64, align 8, !ctir !2724
  %choices = alloca i64, align 8, !ctir !2724
  %i = alloca i64, align 8, !ctir !52
  %rmax = alloca i64, align 8, !ctir !2724
  %buf = alloca [8 x i8], align 1, !ctir !2734
  %excess_choices = alloca i64, align 8, !ctir !2724
  %unusable_choices = alloca i64, align 8, !ctir !2724
  %last_usable_choice = alloca i64, align 8, !ctir !2724
  %reduced_randnum = alloca i64, align 8, !ctir !2724
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22278, metadata !DIExpression()), !dbg !22279
  store i64 %genmax, i64* %genmax.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !22280, metadata !DIExpression()), !dbg !22281
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !22282, metadata !DIExpression()), !dbg !22283
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22284, !tbaa !2993
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22285, !ctir !2716
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !22285, !tbaa !22240, !ctir !2720
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !22283, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !22286, metadata !DIExpression()), !dbg !22287
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22288, !tbaa !2993
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !22289, !ctir !2716
  %3 = load i64, i64* %randnum2, align 8, !dbg !22289, !tbaa !22249, !ctir !2724
  store i64 %3, i64* %randnum, align 8, !dbg !22287, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !22290, metadata !DIExpression()), !dbg !22291
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22292, !tbaa !2993
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !22293, !ctir !2716
  %5 = load i64, i64* %randmax3, align 8, !dbg !22293, !tbaa !22245, !ctir !2724
  store i64 %5, i64* %randmax, align 8, !dbg !22291, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !22294, metadata !DIExpression()), !dbg !22295
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !22296, !tbaa !3837
  %add = add i64 %6, 1, !dbg !22297
  store i64 %add, i64* %choices, align 8, !dbg !22295, !tbaa !3837
  br label %while.body, !dbg !22298

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !22299, !tbaa !3837
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !22302, !tbaa !3837
  %cmp = icmp ult i64 %7, %8, !dbg !22303
  br i1 %cmp, label %if.then, label %if.end, !dbg !22304

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !22305, metadata !DIExpression()), !dbg !22307
  store i64 0, i64* %i, align 8, !dbg !22307, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !22308, metadata !DIExpression()), !dbg !22309
  %9 = load i64, i64* %randmax, align 8, !dbg !22310, !tbaa !3837
  store i64 %9, i64* %rmax, align 8, !dbg !22309, !tbaa !3837
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !22311, metadata !DIExpression()), !dbg !22312
  br label %do.body, !dbg !22313

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !22314, !tbaa !3837
  %call = call i64 @shift_left(i64 %10), !dbg !22316
  %add4 = add i64 %call, 255, !dbg !22317
  store i64 %add4, i64* %rmax, align 8, !dbg !22318, !tbaa !3837
  %11 = load i64, i64* %i, align 8, !dbg !22319, !tbaa !3837
  %inc = add i64 %11, 1, !dbg !22319
  store i64 %inc, i64* %i, align 8, !dbg !22319, !tbaa !3837
  br label %do.cond, !dbg !22320

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !22321, !tbaa !3837
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !22322, !tbaa !3837
  %cmp5 = icmp ult i64 %12, %13, !dbg !22323
  br i1 %cmp5, label %do.body, label %do.end, !dbg !22320, !llvm.loop !22324

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22326, !tbaa !2993
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !22327
  %15 = load i64, i64* %i, align 8, !dbg !22328, !tbaa !3837
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !22329
  store i64 0, i64* %i, align 8, !dbg !22330, !tbaa !3837
  br label %do.body6, !dbg !22331

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !22332, !tbaa !3837
  %call7 = call i64 @shift_left(i64 %16), !dbg !22334
  %17 = load i64, i64* %i, align 8, !dbg !22335, !tbaa !3837
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !22336, !ctir !2734
  %18 = load i8, i8* %arrayidx, align 1, !dbg !22336, !tbaa !3652
  %conv = zext i8 %18 to i64, !dbg !22336
  %add8 = add i64 %call7, %conv, !dbg !22337
  store i64 %add8, i64* %randnum, align 8, !dbg !22338, !tbaa !3837
  %19 = load i64, i64* %randmax, align 8, !dbg !22339, !tbaa !3837
  %call9 = call i64 @shift_left(i64 %19), !dbg !22340
  %add10 = add i64 %call9, 255, !dbg !22341
  store i64 %add10, i64* %randmax, align 8, !dbg !22342, !tbaa !3837
  %20 = load i64, i64* %i, align 8, !dbg !22343, !tbaa !3837
  %inc11 = add i64 %20, 1, !dbg !22343
  store i64 %inc11, i64* %i, align 8, !dbg !22343, !tbaa !3837
  br label %do.cond12, !dbg !22344

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !22345, !tbaa !3837
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !22346, !tbaa !3837
  %cmp13 = icmp ult i64 %21, %22, !dbg !22347
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !22344, !llvm.loop !22348

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !22350

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !22351, !tbaa !3837
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !22353, !tbaa !3837
  %cmp16 = icmp eq i64 %23, %24, !dbg !22354
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !22355

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22356, !tbaa !2993
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !22358, !ctir !2716
  store i64 0, i64* %randmax19, align 8, !dbg !22359, !tbaa !22245, !ctir !2724
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22360, !tbaa !2993
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !22361, !ctir !2716
  store i64 0, i64* %randnum20, align 8, !dbg !22362, !tbaa !22249, !ctir !2724
  %27 = load i64, i64* %randnum, align 8, !dbg !22363, !tbaa !3837
  store i64 %27, i64* %retval, align 8, !dbg !22364
  br label %return, !dbg !22364

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !22365, metadata !DIExpression()), !dbg !22367
  %28 = load i64, i64* %randmax, align 8, !dbg !22368, !tbaa !3837
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !22369, !tbaa !3837
  %sub = sub i64 %28, %29, !dbg !22370
  store i64 %sub, i64* %excess_choices, align 8, !dbg !22367, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !22371, metadata !DIExpression()), !dbg !22372
  %30 = load i64, i64* %excess_choices, align 8, !dbg !22373, !tbaa !3837
  %31 = load i64, i64* %choices, align 8, !dbg !22374, !tbaa !3837
  %rem = urem i64 %30, %31, !dbg !22375
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !22372, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !22376, metadata !DIExpression()), !dbg !22377
  %32 = load i64, i64* %randmax, align 8, !dbg !22378, !tbaa !3837
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !22379, !tbaa !3837
  %sub21 = sub i64 %32, %33, !dbg !22380
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !22377, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !22381, metadata !DIExpression()), !dbg !22382
  %34 = load i64, i64* %randnum, align 8, !dbg !22383, !tbaa !3837
  %35 = load i64, i64* %choices, align 8, !dbg !22384, !tbaa !3837
  %rem22 = urem i64 %34, %35, !dbg !22385
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !22382, !tbaa !3837
  %36 = load i64, i64* %randnum, align 8, !dbg !22386, !tbaa !3837
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !22388, !tbaa !3837
  %cmp23 = icmp ule i64 %36, %37, !dbg !22389
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !22390

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !22391, !tbaa !3837
  %39 = load i64, i64* %choices, align 8, !dbg !22393, !tbaa !3837
  %div = udiv i64 %38, %39, !dbg !22394
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22395, !tbaa !2993
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !22396, !ctir !2716
  store i64 %div, i64* %randnum26, align 8, !dbg !22397, !tbaa !22249, !ctir !2724
  %41 = load i64, i64* %excess_choices, align 8, !dbg !22398, !tbaa !3837
  %42 = load i64, i64* %choices, align 8, !dbg !22399, !tbaa !3837
  %div27 = udiv i64 %41, %42, !dbg !22400
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22401, !tbaa !2993
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !22402, !ctir !2716
  store i64 %div27, i64* %randmax28, align 8, !dbg !22403, !tbaa !22245, !ctir !2724
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !22404, !tbaa !3837
  store i64 %44, i64* %retval, align 8, !dbg !22405
  br label %return, !dbg !22405

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !22406, !tbaa !3837
  store i64 %45, i64* %randnum, align 8, !dbg !22407, !tbaa !3837
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !22408, !tbaa !3837
  %sub30 = sub i64 %46, 1, !dbg !22409
  store i64 %sub30, i64* %randmax, align 8, !dbg !22410, !tbaa !3837
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !22298, !llvm.loop !22411

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !22413
  ret i64 %47, !dbg !22413
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !22414 !ctir !2739 {
entry:
  %x.addr = alloca i64, align 8, !ctir !2724
  store i64 %x, i64* %x.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22415, metadata !DIExpression()), !dbg !22416
  %0 = load i64, i64* %x.addr, align 8, !dbg !22417, !tbaa !3837
  %shl = shl i64 %0, 8, !dbg !22418
  ret i64 %shl, !dbg !22419
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !22420 !ctir !2735 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2715
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22421, metadata !DIExpression()), !dbg !22422
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22423, !tbaa !2993
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !22423
  call void @explicit_bzero(i8* %1, i64 24), !dbg !22424
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22425, !tbaa !2993
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !22425
  call void @free(i8* %3) #12, !dbg !22426
  ret void, !dbg !22427
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !22428 !ctir !2737 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2715
  %r = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !22429, metadata !DIExpression()), !dbg !22430
  call void @llvm.dbg.declare(metadata i32* %r, metadata !22431, metadata !DIExpression()), !dbg !22432
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22433, !tbaa !2993
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !22434, !ctir !2716
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !22434, !tbaa !22240, !ctir !2720
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !22435
  store i32 %call, i32* %r, align 4, !dbg !22432, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22436, metadata !DIExpression()), !dbg !22437
  %call1 = call i32* @__errno_location() #15, !dbg !22438
  %2 = load i32, i32* %call1, align 4, !dbg !22438, !tbaa !2980, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !22437, !tbaa !2980
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !22439, !tbaa !2993
  call void @randint_free(%struct.randint_source* %3), !dbg !22440
  %4 = load i32, i32* %e, align 4, !dbg !22441, !tbaa !2980
  %call2 = call i32* @__errno_location() #15, !dbg !22442
  store i32 %4, i32* %call2, align 4, !dbg !22443, !tbaa !2980, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !22444, !tbaa !2980
  ret i32 %5, !dbg !22445
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !22446 !ctir !2744 {
entry:
  %retval = alloca %struct.randread_source*, align 8, !ctir !2746
  %name.addr = alloca i8*, align 8, !ctir !112
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2751
  %s = alloca %struct.randread_source*, align 8, !ctir !2746
  store i8* %name, i8** %name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !22447, metadata !DIExpression()), !dbg !22448
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22449, metadata !DIExpression()), !dbg !22450
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22451, !tbaa !3837
  %cmp = icmp eq i64 %0, 0, !dbg !22453
  br i1 %cmp, label %if.then, label %if.else, !dbg !22454

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !22455
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !22456
  br label %return, !dbg !22456

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !22457, metadata !DIExpression()), !dbg !22459
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !22459, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !22460, metadata !DIExpression()), !dbg !22461
  %1 = load i8*, i8** %name.addr, align 8, !dbg !22462, !tbaa !2993
  %tobool = icmp ne i8* %1, null, !dbg !22462
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !22464

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !22465, !tbaa !2993
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.501, i64 0, i64 0)), !dbg !22467
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !22468, !tbaa !2993
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !22468
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !22469

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !22470
  br label %return, !dbg !22470

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !22471

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22472, !tbaa !2993
  %4 = load i8*, i8** %name.addr, align 8, !dbg !22473, !tbaa !2993
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !22474
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !22475, !tbaa !2993
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22476, !tbaa !2993
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !22476
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !22478

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22479, !tbaa !2993
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22480, !tbaa !2993
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !22481, !ctir !2747
  %c = bitcast %union.anon.110* %buf to [4096 x i8]*, !dbg !22482
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !22480
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22483, !tbaa !3837
  %cmp9 = icmp ult i64 4096, %8, !dbg !22483
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !22483

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !22483

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22483, !tbaa !3837
  br label %cond.end, !dbg !22483

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !22483
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #12, !dbg !22484
  br label %if.end19, !dbg !22484

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22485, !tbaa !2993
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !22487, !ctir !2747
  %isaac = bitcast %union.anon.110* %buf12 to %struct.isaac*, !dbg !22488
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !22489, !ctir !2804
  store i64 0, i64* %buffered, align 8, !dbg !22490, !tbaa !3652, !ctir !52
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22491, !tbaa !2993
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !22492, !ctir !2747
  %isaac14 = bitcast %union.anon.110* %buf13 to %struct.isaac*, !dbg !22493
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !22494, !ctir !2804
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !22495, !ctir !2808
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !22491
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !22491
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22496, !tbaa !3837
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !22497
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22498, !tbaa !2993
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !22499, !ctir !2747
  %isaac17 = bitcast %union.anon.110* %buf16 to %struct.isaac*, !dbg !22500
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !22501, !ctir !2804
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !22502
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22503, !tbaa !2993
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !22504
  br label %return, !dbg !22504

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !22505
  ret %struct.randread_source* %16, !dbg !22505
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !22506 !ctir !2834 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8, !ctir !2751
  %handler_arg.addr = alloca i8*, align 8, !ctir !428
  %s = alloca %struct.randread_source*, align 8, !ctir !2746
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !22507, metadata !DIExpression()), !dbg !22508
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !22509, metadata !DIExpression()), !dbg !22510
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !22511, metadata !DIExpression()), !dbg !22512
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !22513
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !22513
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !22512, !tbaa !2993
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !22514, !tbaa !2993
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22515, !tbaa !2993
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !22516, !ctir !2747
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !22517, !tbaa !22518, !ctir !2751
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22520, !tbaa !2993
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !22521, !ctir !2747
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !22522, !tbaa !22523, !ctir !2792
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !22524, !tbaa !2993
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22525, !tbaa !2993
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !22526, !ctir !2747
  store i8* %4, i8** %handler_arg2, align 8, !dbg !22527, !tbaa !22528, !ctir !428
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !22529, !tbaa !2993
  ret %struct.randread_source* %6, !dbg !22530
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !22531 !ctir !2836 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !47
  %bufsize.addr = alloca i64, align 8, !ctir !52
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  %seeded = alloca i64, align 8, !ctir !579
  %fd = alloca i32, align 4, !ctir !5
  %v = alloca %struct.timespec, align 8, !ctir !22532
  %nbytes = alloca i64, align 8, !ctir !52
  %v19 = alloca i32, align 4, !ctir !2838
  %nbytes20 = alloca i64, align 8, !ctir !52
  %v34 = alloca i32, align 4, !ctir !2838
  %nbytes35 = alloca i64, align 8, !ctir !52
  %v49 = alloca i32, align 4, !ctir !477
  %nbytes50 = alloca i64, align 8, !ctir !52
  %v64 = alloca i32, align 4, !ctir !477
  %nbytes65 = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !22536, metadata !DIExpression()), !dbg !22537
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !22538, metadata !DIExpression()), !dbg !22539
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !22540, metadata !DIExpression()), !dbg !22541
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !22542, metadata !DIExpression()), !dbg !22543
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !22544, !tbaa !2993
  store i8* %0, i8** %buf, align 8, !dbg !22543, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !22545, metadata !DIExpression()), !dbg !22546
  store i64 0, i64* %seeded, align 8, !dbg !22546, !tbaa !3837
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22547, metadata !DIExpression()), !dbg !22548
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.502, i64 0, i64 0), i32 0), !dbg !22549
  store i32 %call, i32* %fd, align 4, !dbg !22548, !tbaa !2980
  %1 = load i32, i32* %fd, align 4, !dbg !22550, !tbaa !2980
  %cmp = icmp sle i32 0, %1, !dbg !22552
  br i1 %cmp, label %if.then, label %if.end6, !dbg !22553

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !22554, !tbaa !2980
  %3 = load i8*, i8** %buf, align 8, !dbg !22556, !tbaa !2993
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !22557, !tbaa !3837
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22557, !tbaa !3837
  %cmp1 = icmp ult i64 %4, %5, !dbg !22557
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !22557

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !22557, !tbaa !3837
  br label %cond.end, !dbg !22557

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !22557, !tbaa !3837
  br label %cond.end, !dbg !22557

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !22557
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !22558
  store i64 %call2, i64* %seeded, align 8, !dbg !22559, !tbaa !3837
  %8 = load i64, i64* %seeded, align 8, !dbg !22560, !tbaa !3837
  %cmp3 = icmp slt i64 %8, 0, !dbg !22562
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !22563

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !22564, !tbaa !3837
  br label %if.end, !dbg !22565

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !22566, !tbaa !2980
  %call5 = call i32 @close(i32 %9), !dbg !22567
  br label %if.end6, !dbg !22568

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !22569, !tbaa !3837
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !22569, !tbaa !3837
  %cmp7 = icmp ult i64 %10, %11, !dbg !22569
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !22571

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !22572, metadata !DIExpression()), !dbg !22574
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !22575, metadata !DIExpression()), !dbg !22574
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !22574, !tbaa !3837
  %13 = load i64, i64* %seeded, align 8, !dbg !22574, !tbaa !3837
  %sub = sub i64 %12, %13, !dbg !22574
  %cmp9 = icmp ult i64 16, %sub, !dbg !22574
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !22574

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !22574

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !22574, !tbaa !3837
  %15 = load i64, i64* %seeded, align 8, !dbg !22574, !tbaa !3837
  %sub12 = sub i64 %14, %15, !dbg !22574
  br label %cond.end13, !dbg !22574

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !22574
  store i64 %cond14, i64* %nbytes, align 8, !dbg !22574, !tbaa !3837
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #12, !dbg !22574
  %16 = load i8*, i8** %buf, align 8, !dbg !22574, !tbaa !2993
  %17 = load i64, i64* %seeded, align 8, !dbg !22574, !tbaa !3837
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !22574
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !22574
  %19 = load i64, i64* %nbytes, align 8, !dbg !22574, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !22574
  %20 = load i64, i64* %nbytes, align 8, !dbg !22574, !tbaa !3837
  %21 = load i64, i64* %seeded, align 8, !dbg !22574, !tbaa !3837
  %add = add i64 %21, %20, !dbg !22574
  store i64 %add, i64* %seeded, align 8, !dbg !22574, !tbaa !3837
  br label %if.end16, !dbg !22574

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !22576, !tbaa !3837
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !22576, !tbaa !3837
  %cmp17 = icmp ult i64 %22, %23, !dbg !22576
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !22578

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !22579, metadata !DIExpression()), !dbg !22581
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !22582, metadata !DIExpression()), !dbg !22581
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !22581, !tbaa !3837
  %25 = load i64, i64* %seeded, align 8, !dbg !22581, !tbaa !3837
  %sub21 = sub i64 %24, %25, !dbg !22581
  %cmp22 = icmp ult i64 4, %sub21, !dbg !22581
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !22581

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !22581

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !22581, !tbaa !3837
  %27 = load i64, i64* %seeded, align 8, !dbg !22581, !tbaa !3837
  %sub25 = sub i64 %26, %27, !dbg !22581
  br label %cond.end26, !dbg !22581

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !22581
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !22581, !tbaa !3837
  %call28 = call i32 @getpid() #12, !dbg !22581
  store i32 %call28, i32* %v19, align 4, !dbg !22581, !tbaa !2980
  %28 = load i8*, i8** %buf, align 8, !dbg !22581, !tbaa !2993
  %29 = load i64, i64* %seeded, align 8, !dbg !22581, !tbaa !3837
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !22581
  %30 = bitcast i32* %v19 to i8*, !dbg !22581
  %31 = load i64, i64* %nbytes20, align 8, !dbg !22581, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !22581
  %32 = load i64, i64* %nbytes20, align 8, !dbg !22581, !tbaa !3837
  %33 = load i64, i64* %seeded, align 8, !dbg !22581, !tbaa !3837
  %add30 = add i64 %33, %32, !dbg !22581
  store i64 %add30, i64* %seeded, align 8, !dbg !22581, !tbaa !3837
  br label %if.end31, !dbg !22581

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !22583, !tbaa !3837
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !22583, !tbaa !3837
  %cmp32 = icmp ult i64 %34, %35, !dbg !22583
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !22585

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !22586, metadata !DIExpression()), !dbg !22588
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !22589, metadata !DIExpression()), !dbg !22588
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !22588, !tbaa !3837
  %37 = load i64, i64* %seeded, align 8, !dbg !22588, !tbaa !3837
  %sub36 = sub i64 %36, %37, !dbg !22588
  %cmp37 = icmp ult i64 4, %sub36, !dbg !22588
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !22588

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !22588

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !22588, !tbaa !3837
  %39 = load i64, i64* %seeded, align 8, !dbg !22588, !tbaa !3837
  %sub40 = sub i64 %38, %39, !dbg !22588
  br label %cond.end41, !dbg !22588

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !22588
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !22588, !tbaa !3837
  %call43 = call i32 @getppid() #12, !dbg !22588
  store i32 %call43, i32* %v34, align 4, !dbg !22588, !tbaa !2980
  %40 = load i8*, i8** %buf, align 8, !dbg !22588, !tbaa !2993
  %41 = load i64, i64* %seeded, align 8, !dbg !22588, !tbaa !3837
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !22588
  %42 = bitcast i32* %v34 to i8*, !dbg !22588
  %43 = load i64, i64* %nbytes35, align 8, !dbg !22588, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !22588
  %44 = load i64, i64* %nbytes35, align 8, !dbg !22588, !tbaa !3837
  %45 = load i64, i64* %seeded, align 8, !dbg !22588, !tbaa !3837
  %add45 = add i64 %45, %44, !dbg !22588
  store i64 %add45, i64* %seeded, align 8, !dbg !22588, !tbaa !3837
  br label %if.end46, !dbg !22588

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !22590, !tbaa !3837
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !22590, !tbaa !3837
  %cmp47 = icmp ult i64 %46, %47, !dbg !22590
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !22592

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !22593, metadata !DIExpression()), !dbg !22595
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !22596, metadata !DIExpression()), !dbg !22595
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !22595, !tbaa !3837
  %49 = load i64, i64* %seeded, align 8, !dbg !22595, !tbaa !3837
  %sub51 = sub i64 %48, %49, !dbg !22595
  %cmp52 = icmp ult i64 4, %sub51, !dbg !22595
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !22595

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !22595

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !22595, !tbaa !3837
  %51 = load i64, i64* %seeded, align 8, !dbg !22595, !tbaa !3837
  %sub55 = sub i64 %50, %51, !dbg !22595
  br label %cond.end56, !dbg !22595

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !22595
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !22595, !tbaa !3837
  %call58 = call i32 @getuid() #12, !dbg !22595
  store i32 %call58, i32* %v49, align 4, !dbg !22595, !tbaa !2980
  %52 = load i8*, i8** %buf, align 8, !dbg !22595, !tbaa !2993
  %53 = load i64, i64* %seeded, align 8, !dbg !22595, !tbaa !3837
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !22595
  %54 = bitcast i32* %v49 to i8*, !dbg !22595
  %55 = load i64, i64* %nbytes50, align 8, !dbg !22595, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !22595
  %56 = load i64, i64* %nbytes50, align 8, !dbg !22595, !tbaa !3837
  %57 = load i64, i64* %seeded, align 8, !dbg !22595, !tbaa !3837
  %add60 = add i64 %57, %56, !dbg !22595
  store i64 %add60, i64* %seeded, align 8, !dbg !22595, !tbaa !3837
  br label %if.end61, !dbg !22595

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !22597, !tbaa !3837
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !22597, !tbaa !3837
  %cmp62 = icmp ult i64 %58, %59, !dbg !22597
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !22599

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !22600, metadata !DIExpression()), !dbg !22602
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !22603, metadata !DIExpression()), !dbg !22602
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !22602, !tbaa !3837
  %61 = load i64, i64* %seeded, align 8, !dbg !22602, !tbaa !3837
  %sub66 = sub i64 %60, %61, !dbg !22602
  %cmp67 = icmp ult i64 4, %sub66, !dbg !22602
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !22602

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !22602

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !22602, !tbaa !3837
  %63 = load i64, i64* %seeded, align 8, !dbg !22602, !tbaa !3837
  %sub70 = sub i64 %62, %63, !dbg !22602
  br label %cond.end71, !dbg !22602

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !22602
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !22602, !tbaa !3837
  %call73 = call i32 @getgid() #12, !dbg !22602
  store i32 %call73, i32* %v64, align 4, !dbg !22602, !tbaa !2980
  %64 = load i8*, i8** %buf, align 8, !dbg !22602, !tbaa !2993
  %65 = load i64, i64* %seeded, align 8, !dbg !22602, !tbaa !3837
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !22602
  %66 = bitcast i32* %v64 to i8*, !dbg !22602
  %67 = load i64, i64* %nbytes65, align 8, !dbg !22602, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !22602
  %68 = load i64, i64* %nbytes65, align 8, !dbg !22602, !tbaa !3837
  %69 = load i64, i64* %seeded, align 8, !dbg !22602, !tbaa !3837
  %add75 = add i64 %69, %68, !dbg !22602
  store i64 %add75, i64* %seeded, align 8, !dbg !22602, !tbaa !3837
  br label %if.end76, !dbg !22602

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !22604
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !22605 !ctir !2793 {
entry:
  %file_name.addr = alloca i8*, align 8, !ctir !428
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !22606, metadata !DIExpression()), !dbg !22607
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !22608, !tbaa !2993
  %tobool = icmp ne i8* %0, null, !dbg !22608
  br i1 %tobool, label %if.then, label %if.end, !dbg !22610

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !22611, !tbaa !2980
  %call = call i32* @__errno_location() #15, !dbg !22612
  %2 = load i32, i32* %call, align 4, !dbg !22612, !tbaa !2980, !ctir !5
  %call1 = call i32* @__errno_location() #15, !dbg !22613
  %3 = load i32, i32* %call1, align 4, !dbg !22613, !tbaa !2980, !ctir !5
  %cmp = icmp eq i32 %3, 0, !dbg !22614
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !22613

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.503, i64 0, i64 0)) #12, !dbg !22615
  br label %cond.end, !dbg !22613

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.504, i64 0, i64 0)) #12, !dbg !22616
  br label %cond.end, !dbg !22613

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !22613
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !22617, !tbaa !2993
  %call4 = call i8* @quote(i8* %4), !dbg !22618
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !22619
  br label %if.end, !dbg !22619

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !22620
  unreachable, !dbg !22620
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !22621 !ctir !2826 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2746
  %handler.addr = alloca void (i8*)*, align 8, !ctir !2792
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22622, metadata !DIExpression()), !dbg !22623
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !22624, metadata !DIExpression()), !dbg !22625
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !22626, !tbaa !2993
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22627, !tbaa !2993
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !22628, !ctir !2747
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !22629, !tbaa !22523, !ctir !2792
  ret void, !dbg !22630
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !22631 !ctir !2828 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2746
  %handler_arg.addr = alloca i8*, align 8, !ctir !428
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22632, metadata !DIExpression()), !dbg !22633
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !22634, metadata !DIExpression()), !dbg !22635
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !22636, !tbaa !2993
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22637, !tbaa !2993
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !22638, !ctir !2747
  store i8* %0, i8** %handler_arg1, align 8, !dbg !22639, !tbaa !22528, !ctir !428
  ret void, !dbg !22640
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !22641 !ctir !2830 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2746
  %buf.addr = alloca i8*, align 8, !ctir !47
  %size.addr = alloca i64, align 8, !ctir !52
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22642, metadata !DIExpression()), !dbg !22643
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !22644, metadata !DIExpression()), !dbg !22645
  store i64 %size, i64* %size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22646, metadata !DIExpression()), !dbg !22647
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22648, !tbaa !2993
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !22650, !ctir !2747
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22650, !tbaa !22518, !ctir !2751
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !22648
  br i1 %tobool, label %if.then, label %if.else, !dbg !22651

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22652, !tbaa !2993
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !22653, !tbaa !2993
  %4 = load i64, i64* %size.addr, align 8, !dbg !22654, !tbaa !3837
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !22655
  br label %if.end, !dbg !22655

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22656, !tbaa !2993
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !22657, !ctir !2747
  %isaac = bitcast %union.anon.110* %buf1 to %struct.isaac*, !dbg !22658
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !22659, !tbaa !2993
  %7 = load i64, i64* %size.addr, align 8, !dbg !22660, !tbaa !3837
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !22661
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !22662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !22663 !ctir !2840 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2746
  %p.addr = alloca i8*, align 8, !ctir !2842
  %size.addr = alloca i64, align 8, !ctir !52
  %inbytes = alloca i64, align 8, !ctir !52
  %fread_errno = alloca i32, align 4, !ctir !5
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22664, metadata !DIExpression()), !dbg !22665
  store i8* %p, i8** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !22666, metadata !DIExpression()), !dbg !22667
  store i64 %size, i64* %size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22668, metadata !DIExpression()), !dbg !22669
  br label %while.body, !dbg !22670

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !22671, metadata !DIExpression()), !dbg !22673
  %0 = load i8*, i8** %p.addr, align 8, !dbg !22674, !tbaa !2993
  %1 = load i64, i64* %size.addr, align 8, !dbg !22674, !tbaa !3837
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22674, !tbaa !2993
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !22674, !ctir !2747
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22674, !tbaa !22518, !ctir !2751
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !22674
  store i64 %call, i64* %inbytes, align 8, !dbg !22673, !tbaa !3837
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !22675, metadata !DIExpression()), !dbg !22676
  %call1 = call i32* @__errno_location() #15, !dbg !22677
  %4 = load i32, i32* %call1, align 4, !dbg !22677, !tbaa !2980, !ctir !5
  store i32 %4, i32* %fread_errno, align 4, !dbg !22676, !tbaa !2980
  %5 = load i64, i64* %inbytes, align 8, !dbg !22678, !tbaa !3837
  %6 = load i8*, i8** %p.addr, align 8, !dbg !22679, !tbaa !2993
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !22679
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !22679, !tbaa !2993
  %7 = load i64, i64* %inbytes, align 8, !dbg !22680, !tbaa !3837
  %8 = load i64, i64* %size.addr, align 8, !dbg !22681, !tbaa !3837
  %sub = sub i64 %8, %7, !dbg !22681
  store i64 %sub, i64* %size.addr, align 8, !dbg !22681, !tbaa !3837
  %9 = load i64, i64* %size.addr, align 8, !dbg !22682, !tbaa !3837
  %cmp = icmp eq i64 %9, 0, !dbg !22684
  br i1 %cmp, label %if.then, label %if.end, !dbg !22685

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !22686

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22687, !tbaa !2993
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !22687, !ctir !2747
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !22687, !tbaa !22518, !ctir !2751
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #12, !dbg !22687
  %tobool = icmp ne i32 %call3, 0, !dbg !22687
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22687

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !22688, !tbaa !2980
  br label %cond.end, !dbg !22687

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !22687

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !22687
  %call4 = call i32* @__errno_location() #15, !dbg !22689
  store i32 %cond, i32* %call4, align 4, !dbg !22690, !tbaa !2980, !ctir !5
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22691, !tbaa !2993
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !22692, !ctir !2747
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !22692, !tbaa !22523, !ctir !2792
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22693, !tbaa !2993
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !22694, !ctir !2747
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !22694, !tbaa !22528, !ctir !428
  call void %14(i8* %16), !dbg !22691
  br label %while.body, !dbg !22670, !llvm.loop !22695

while.end:                                        ; preds = %if.then
  ret void, !dbg !22697
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !22698 !ctir !2843 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8, !ctir !2845
  %p.addr = alloca i8*, align 8, !ctir !47
  %size.addr = alloca i64, align 8, !ctir !52
  %inbytes = alloca i64, align 8, !ctir !52
  %char_p = alloca i8*, align 8, !ctir !7
  %wp = alloca i64*, align 8, !ctir !2846
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !22699, metadata !DIExpression()), !dbg !22700
  store i8* %p, i8** %p.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !22701, metadata !DIExpression()), !dbg !22702
  store i64 %size, i64* %size.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !22703, metadata !DIExpression()), !dbg !22704
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !22705, metadata !DIExpression()), !dbg !22706
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22707, !tbaa !2993
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !22708, !ctir !2804
  %1 = load i64, i64* %buffered, align 8, !dbg !22708, !tbaa !22709, !ctir !52
  store i64 %1, i64* %inbytes, align 8, !dbg !22706, !tbaa !3837
  br label %while.body, !dbg !22712

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !22713, metadata !DIExpression()), !dbg !22715
  %2 = load i8*, i8** %p.addr, align 8, !dbg !22716, !tbaa !2993
  store i8* %2, i8** %char_p, align 8, !dbg !22715, !tbaa !2993
  %3 = load i64, i64* %size.addr, align 8, !dbg !22717, !tbaa !3837
  %4 = load i64, i64* %inbytes, align 8, !dbg !22719, !tbaa !3837
  %cmp = icmp ule i64 %3, %4, !dbg !22720
  br i1 %cmp, label %if.then, label %if.end, !dbg !22721

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !22722, !tbaa !2993
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22724, !tbaa !2993
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !22725, !ctir !2804
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !22726
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !22724
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !22727
  %7 = load i64, i64* %inbytes, align 8, !dbg !22728, !tbaa !3837
  %idx.neg = sub i64 0, %7, !dbg !22729
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !22729
  %8 = load i64, i64* %size.addr, align 8, !dbg !22730, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !22731
  %9 = load i64, i64* %inbytes, align 8, !dbg !22732, !tbaa !3837
  %10 = load i64, i64* %size.addr, align 8, !dbg !22733, !tbaa !3837
  %sub = sub i64 %9, %10, !dbg !22734
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22735, !tbaa !2993
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !22736, !ctir !2804
  store i64 %sub, i64* %buffered2, align 8, !dbg !22737, !tbaa !22709, !ctir !52
  br label %return, !dbg !22738

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !22739, !tbaa !2993
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22740, !tbaa !2993
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !22741, !ctir !2804
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !22742
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !22740
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !22743
  %14 = load i64, i64* %inbytes, align 8, !dbg !22744, !tbaa !3837
  %idx.neg7 = sub i64 0, %14, !dbg !22745
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !22745
  %15 = load i64, i64* %inbytes, align 8, !dbg !22746, !tbaa !3837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !22747
  %16 = load i8*, i8** %char_p, align 8, !dbg !22748, !tbaa !2993
  %17 = load i64, i64* %inbytes, align 8, !dbg !22749, !tbaa !3837
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !22750
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !22751, !tbaa !2993
  %18 = load i64, i64* %inbytes, align 8, !dbg !22752, !tbaa !3837
  %19 = load i64, i64* %size.addr, align 8, !dbg !22753, !tbaa !3837
  %sub10 = sub i64 %19, %18, !dbg !22753
  store i64 %sub10, i64* %size.addr, align 8, !dbg !22753, !tbaa !3837
  %20 = load i8*, i8** %p.addr, align 8, !dbg !22754, !tbaa !2993
  %21 = ptrtoint i8* %20 to i64, !dbg !22754
  %rem = urem i64 %21, 8, !dbg !22754
  %cmp11 = icmp eq i64 %rem, 0, !dbg !22754
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !22756

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !22757, metadata !DIExpression()), !dbg !22759
  %22 = load i8*, i8** %p.addr, align 8, !dbg !22760, !tbaa !2993
  %23 = bitcast i8* %22 to i64*, !dbg !22760
  store i64* %23, i64** %wp, align 8, !dbg !22759, !tbaa !2993
  br label %while.cond13, !dbg !22761

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !22762, !tbaa !3837
  %cmp14 = icmp ule i64 2048, %24, !dbg !22763
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !22761

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22764, !tbaa !2993
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !22766, !ctir !2804
  %26 = load i64*, i64** %wp, align 8, !dbg !22767, !tbaa !2993
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !22768
  %27 = load i64*, i64** %wp, align 8, !dbg !22769, !tbaa !2993
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !22769
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !22769, !tbaa !2993
  %28 = load i64, i64* %size.addr, align 8, !dbg !22770, !tbaa !3837
  %sub17 = sub i64 %28, 2048, !dbg !22770
  store i64 %sub17, i64* %size.addr, align 8, !dbg !22770, !tbaa !3837
  %29 = load i64, i64* %size.addr, align 8, !dbg !22771, !tbaa !3837
  %cmp18 = icmp eq i64 %29, 0, !dbg !22773
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !22774

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22775, !tbaa !2993
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !22777, !ctir !2804
  store i64 0, i64* %buffered20, align 8, !dbg !22778, !tbaa !22709, !ctir !52
  br label %return, !dbg !22779

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !22761, !llvm.loop !22780

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !22782, !tbaa !2993
  %32 = bitcast i64* %31 to i8*, !dbg !22782
  store i8* %32, i8** %p.addr, align 8, !dbg !22783, !tbaa !2993
  br label %if.end22, !dbg !22784

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22785, !tbaa !2993
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !22786, !ctir !2804
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !22787, !tbaa !2993
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !22788, !ctir !2804
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !22789
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !22787
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !22790
  store i64 2048, i64* %inbytes, align 8, !dbg !22791, !tbaa !3837
  br label %while.body, !dbg !22712, !llvm.loop !22792

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !22794
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !22795 !ctir !2832 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2746
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2751
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !22796, metadata !DIExpression()), !dbg !22797
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !22798, metadata !DIExpression()), !dbg !22799
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22800, !tbaa !2993
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !22801, !ctir !2747
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !22801, !tbaa !22518, !ctir !2751
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !22799, !tbaa !2993
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22802, !tbaa !2993
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !22802
  call void @explicit_bzero(i8* %3, i64 4152), !dbg !22803
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !22804, !tbaa !2993
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !22804
  call void @free(i8* %5) #12, !dbg !22805
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22806, !tbaa !2993
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !22806
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !22806

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !22807, !tbaa !2993
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !22808
  br label %cond.end, !dbg !22806

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !22806

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !22806
  ret i32 %cond, !dbg !22809
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !22810 !ctir !2850 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8, !ctir !2852
  %result.addr = alloca i64*, align 8, !ctir !2846
  %a = alloca i64, align 8, !ctir !2813
  %b = alloca i64, align 8, !ctir !2813
  %m = alloca i64*, align 8, !ctir !2846
  %r = alloca i64*, align 8, !ctir !2846
  %x = alloca i64, align 8, !ctir !2813
  %y = alloca i64, align 8, !ctir !2813
  %x18 = alloca i64, align 8, !ctir !2813
  %y19 = alloca i64, align 8, !ctir !2813
  %x40 = alloca i64, align 8, !ctir !2813
  %y41 = alloca i64, align 8, !ctir !2813
  %x61 = alloca i64, align 8, !ctir !2813
  %y62 = alloca i64, align 8, !ctir !2813
  %x88 = alloca i64, align 8, !ctir !2813
  %y89 = alloca i64, align 8, !ctir !2813
  %x110 = alloca i64, align 8, !ctir !2813
  %y111 = alloca i64, align 8, !ctir !2813
  %x132 = alloca i64, align 8, !ctir !2813
  %y133 = alloca i64, align 8, !ctir !2813
  %x153 = alloca i64, align 8, !ctir !2813
  %y154 = alloca i64, align 8, !ctir !2813
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !22812, metadata !DIExpression()), !dbg !22813
  store i64* %result, i64** %result.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !22814, metadata !DIExpression()), !dbg !22815
  call void @llvm.dbg.declare(metadata i64* %a, metadata !22816, metadata !DIExpression()), !dbg !22817
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22818, !tbaa !2993
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !22819, !ctir !2853
  %1 = load i64, i64* %a1, align 8, !dbg !22819, !tbaa !22820, !ctir !2813
  store i64 %1, i64* %a, align 8, !dbg !22817, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %b, metadata !22821, metadata !DIExpression()), !dbg !22822
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22823, !tbaa !2993
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !22824, !ctir !2853
  %3 = load i64, i64* %b2, align 8, !dbg !22824, !tbaa !22825, !ctir !2813
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22826, !tbaa !2993
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !22827, !ctir !2853
  %5 = load i64, i64* %c, align 8, !dbg !22828, !tbaa !22829, !ctir !2813
  %inc = add i64 %5, 1, !dbg !22828
  store i64 %inc, i64* %c, align 8, !dbg !22828, !tbaa !22829, !ctir !2813
  %add = add i64 %3, %inc, !dbg !22830
  store i64 %add, i64* %b, align 8, !dbg !22822, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64** %m, metadata !22831, metadata !DIExpression()), !dbg !22832
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22833, !tbaa !2993
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !22834, !ctir !2853
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !22833
  store i64* %arraydecay, i64** %m, align 8, !dbg !22832, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %r, metadata !22835, metadata !DIExpression()), !dbg !22836
  %7 = load i64*, i64** %result.addr, align 8, !dbg !22837, !tbaa !2993
  store i64* %7, i64** %r, align 8, !dbg !22836, !tbaa !2993
  br label %do.body, !dbg !22838

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !22839, metadata !DIExpression()), !dbg !22842
  call void @llvm.dbg.declare(metadata i64* %y, metadata !22843, metadata !DIExpression()), !dbg !22842
  %8 = load i64, i64* %a, align 8, !dbg !22842, !tbaa !3837
  %9 = load i64, i64* %a, align 8, !dbg !22842, !tbaa !3837
  %shl = shl i64 %9, 21, !dbg !22842
  %xor = xor i64 %8, %shl, !dbg !22842
  %neg = xor i64 %xor, -1, !dbg !22842
  %xor4 = xor i64 0, %neg, !dbg !22842
  %10 = load i64*, i64** %m, align 8, !dbg !22842, !tbaa !2993
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !22842, !ctir !2846
  %11 = load i64, i64* %arrayidx, align 8, !dbg !22842, !tbaa !3837
  %add5 = add i64 %xor4, %11, !dbg !22842
  store i64 %add5, i64* %a, align 8, !dbg !22842, !tbaa !3837
  %12 = load i64*, i64** %m, align 8, !dbg !22842, !tbaa !2993
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !22842, !ctir !2846
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !22842, !tbaa !3837
  store i64 %13, i64* %x, align 8, !dbg !22842, !tbaa !3837
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22842, !tbaa !2993
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !22842, !ctir !2853
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !22842
  %15 = load i64, i64* %x, align 8, !dbg !22842, !tbaa !3837
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !22842
  %16 = load i64, i64* %a, align 8, !dbg !22842, !tbaa !3837
  %add9 = add i64 %call, %16, !dbg !22842
  %17 = load i64, i64* %b, align 8, !dbg !22842, !tbaa !3837
  %add10 = add i64 %add9, %17, !dbg !22842
  store i64 %add10, i64* %y, align 8, !dbg !22842, !tbaa !3837
  %18 = load i64*, i64** %m, align 8, !dbg !22842, !tbaa !2993
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !22842, !ctir !2846
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !22842, !tbaa !3837
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22842, !tbaa !2993
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !22842, !ctir !2853
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !22842
  %20 = load i64, i64* %y, align 8, !dbg !22842, !tbaa !3837
  %shr = lshr i64 %20, 8, !dbg !22842
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !22842
  %21 = load i64, i64* %x, align 8, !dbg !22842, !tbaa !3837
  %add15 = add i64 %call14, %21, !dbg !22842
  %call16 = call i64 @just(i64 %add15), !dbg !22842
  store i64 %call16, i64* %b, align 8, !dbg !22842, !tbaa !3837
  %22 = load i64*, i64** %r, align 8, !dbg !22842, !tbaa !2993
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !22842, !ctir !2846
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !22842, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !22844, metadata !DIExpression()), !dbg !22846
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !22847, metadata !DIExpression()), !dbg !22846
  %23 = load i64, i64* %a, align 8, !dbg !22846, !tbaa !3837
  %24 = load i64, i64* %a, align 8, !dbg !22846, !tbaa !3837
  %call20 = call i64 @just(i64 %24), !dbg !22846
  %shr21 = lshr i64 %call20, 5, !dbg !22846
  %xor22 = xor i64 %23, %shr21, !dbg !22846
  %xor23 = xor i64 0, %xor22, !dbg !22846
  %25 = load i64*, i64** %m, align 8, !dbg !22846, !tbaa !2993
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !22846, !ctir !2846
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !22846, !tbaa !3837
  %add25 = add i64 %xor23, %26, !dbg !22846
  store i64 %add25, i64* %a, align 8, !dbg !22846, !tbaa !3837
  %27 = load i64*, i64** %m, align 8, !dbg !22846, !tbaa !2993
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !22846, !ctir !2846
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !22846, !tbaa !3837
  store i64 %28, i64* %x18, align 8, !dbg !22846, !tbaa !3837
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22846, !tbaa !2993
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !22846, !ctir !2853
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !22846
  %30 = load i64, i64* %x18, align 8, !dbg !22846, !tbaa !3837
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !22846
  %31 = load i64, i64* %a, align 8, !dbg !22846, !tbaa !3837
  %add30 = add i64 %call29, %31, !dbg !22846
  %32 = load i64, i64* %b, align 8, !dbg !22846, !tbaa !3837
  %add31 = add i64 %add30, %32, !dbg !22846
  store i64 %add31, i64* %y19, align 8, !dbg !22846, !tbaa !3837
  %33 = load i64*, i64** %m, align 8, !dbg !22846, !tbaa !2993
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !22846, !ctir !2846
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !22846, !tbaa !3837
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22846, !tbaa !2993
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !22846, !ctir !2853
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !22846
  %35 = load i64, i64* %y19, align 8, !dbg !22846, !tbaa !3837
  %shr35 = lshr i64 %35, 8, !dbg !22846
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !22846
  %36 = load i64, i64* %x18, align 8, !dbg !22846, !tbaa !3837
  %add37 = add i64 %call36, %36, !dbg !22846
  %call38 = call i64 @just(i64 %add37), !dbg !22846
  store i64 %call38, i64* %b, align 8, !dbg !22846, !tbaa !3837
  %37 = load i64*, i64** %r, align 8, !dbg !22846, !tbaa !2993
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !22846, !ctir !2846
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !22846, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !22848, metadata !DIExpression()), !dbg !22850
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !22851, metadata !DIExpression()), !dbg !22850
  %38 = load i64, i64* %a, align 8, !dbg !22850, !tbaa !3837
  %39 = load i64, i64* %a, align 8, !dbg !22850, !tbaa !3837
  %shl42 = shl i64 %39, 12, !dbg !22850
  %xor43 = xor i64 %38, %shl42, !dbg !22850
  %xor44 = xor i64 0, %xor43, !dbg !22850
  %40 = load i64*, i64** %m, align 8, !dbg !22850, !tbaa !2993
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !22850, !ctir !2846
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !22850, !tbaa !3837
  %add46 = add i64 %xor44, %41, !dbg !22850
  store i64 %add46, i64* %a, align 8, !dbg !22850, !tbaa !3837
  %42 = load i64*, i64** %m, align 8, !dbg !22850, !tbaa !2993
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !22850, !ctir !2846
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !22850, !tbaa !3837
  store i64 %43, i64* %x40, align 8, !dbg !22850, !tbaa !3837
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22850, !tbaa !2993
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !22850, !ctir !2853
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !22850
  %45 = load i64, i64* %x40, align 8, !dbg !22850, !tbaa !3837
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !22850
  %46 = load i64, i64* %a, align 8, !dbg !22850, !tbaa !3837
  %add51 = add i64 %call50, %46, !dbg !22850
  %47 = load i64, i64* %b, align 8, !dbg !22850, !tbaa !3837
  %add52 = add i64 %add51, %47, !dbg !22850
  store i64 %add52, i64* %y41, align 8, !dbg !22850, !tbaa !3837
  %48 = load i64*, i64** %m, align 8, !dbg !22850, !tbaa !2993
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !22850, !ctir !2846
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !22850, !tbaa !3837
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22850, !tbaa !2993
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !22850, !ctir !2853
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !22850
  %50 = load i64, i64* %y41, align 8, !dbg !22850, !tbaa !3837
  %shr56 = lshr i64 %50, 8, !dbg !22850
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !22850
  %51 = load i64, i64* %x40, align 8, !dbg !22850, !tbaa !3837
  %add58 = add i64 %call57, %51, !dbg !22850
  %call59 = call i64 @just(i64 %add58), !dbg !22850
  store i64 %call59, i64* %b, align 8, !dbg !22850, !tbaa !3837
  %52 = load i64*, i64** %r, align 8, !dbg !22850, !tbaa !2993
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !22850, !ctir !2846
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !22850, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !22852, metadata !DIExpression()), !dbg !22854
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !22855, metadata !DIExpression()), !dbg !22854
  %53 = load i64, i64* %a, align 8, !dbg !22854, !tbaa !3837
  %54 = load i64, i64* %a, align 8, !dbg !22854, !tbaa !3837
  %call63 = call i64 @just(i64 %54), !dbg !22854
  %shr64 = lshr i64 %call63, 33, !dbg !22854
  %xor65 = xor i64 %53, %shr64, !dbg !22854
  %xor66 = xor i64 0, %xor65, !dbg !22854
  %55 = load i64*, i64** %m, align 8, !dbg !22854, !tbaa !2993
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !22854, !ctir !2846
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !22854, !tbaa !3837
  %add68 = add i64 %xor66, %56, !dbg !22854
  store i64 %add68, i64* %a, align 8, !dbg !22854, !tbaa !3837
  %57 = load i64*, i64** %m, align 8, !dbg !22854, !tbaa !2993
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !22854, !ctir !2846
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !22854, !tbaa !3837
  store i64 %58, i64* %x61, align 8, !dbg !22854, !tbaa !3837
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22854, !tbaa !2993
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !22854, !ctir !2853
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !22854
  %60 = load i64, i64* %x61, align 8, !dbg !22854, !tbaa !3837
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !22854
  %61 = load i64, i64* %a, align 8, !dbg !22854, !tbaa !3837
  %add73 = add i64 %call72, %61, !dbg !22854
  %62 = load i64, i64* %b, align 8, !dbg !22854, !tbaa !3837
  %add74 = add i64 %add73, %62, !dbg !22854
  store i64 %add74, i64* %y62, align 8, !dbg !22854, !tbaa !3837
  %63 = load i64*, i64** %m, align 8, !dbg !22854, !tbaa !2993
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !22854, !ctir !2846
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !22854, !tbaa !3837
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22854, !tbaa !2993
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !22854, !ctir !2853
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !22854
  %65 = load i64, i64* %y62, align 8, !dbg !22854, !tbaa !3837
  %shr78 = lshr i64 %65, 8, !dbg !22854
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !22854
  %66 = load i64, i64* %x61, align 8, !dbg !22854, !tbaa !3837
  %add80 = add i64 %call79, %66, !dbg !22854
  %call81 = call i64 @just(i64 %add80), !dbg !22854
  store i64 %call81, i64* %b, align 8, !dbg !22854, !tbaa !3837
  %67 = load i64*, i64** %r, align 8, !dbg !22854, !tbaa !2993
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !22854, !ctir !2846
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !22854, !tbaa !3837
  %68 = load i64*, i64** %r, align 8, !dbg !22856, !tbaa !2993
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !22856
  store i64* %add.ptr, i64** %r, align 8, !dbg !22856, !tbaa !2993
  br label %do.cond, !dbg !22857

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !22858, !tbaa !2993
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !22858
  store i64* %add.ptr83, i64** %m, align 8, !dbg !22858, !tbaa !2993
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22859, !tbaa !2993
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !22860, !ctir !2853
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !22859
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !22861
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !22862
  br i1 %cmp, label %do.body, label %do.end, !dbg !22857, !llvm.loop !22863

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !22865

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !22866, metadata !DIExpression()), !dbg !22869
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !22870, metadata !DIExpression()), !dbg !22869
  %71 = load i64, i64* %a, align 8, !dbg !22869, !tbaa !3837
  %72 = load i64, i64* %a, align 8, !dbg !22869, !tbaa !3837
  %shl90 = shl i64 %72, 21, !dbg !22869
  %xor91 = xor i64 %71, %shl90, !dbg !22869
  %neg92 = xor i64 %xor91, -1, !dbg !22869
  %xor93 = xor i64 0, %neg92, !dbg !22869
  %73 = load i64*, i64** %m, align 8, !dbg !22869, !tbaa !2993
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !22869, !ctir !2846
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !22869, !tbaa !3837
  %add95 = add i64 %xor93, %74, !dbg !22869
  store i64 %add95, i64* %a, align 8, !dbg !22869, !tbaa !3837
  %75 = load i64*, i64** %m, align 8, !dbg !22869, !tbaa !2993
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !22869, !ctir !2846
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !22869, !tbaa !3837
  store i64 %76, i64* %x88, align 8, !dbg !22869, !tbaa !3837
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22869, !tbaa !2993
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !22869, !ctir !2853
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !22869
  %78 = load i64, i64* %x88, align 8, !dbg !22869, !tbaa !3837
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !22869
  %79 = load i64, i64* %a, align 8, !dbg !22869, !tbaa !3837
  %add100 = add i64 %call99, %79, !dbg !22869
  %80 = load i64, i64* %b, align 8, !dbg !22869, !tbaa !3837
  %add101 = add i64 %add100, %80, !dbg !22869
  store i64 %add101, i64* %y89, align 8, !dbg !22869, !tbaa !3837
  %81 = load i64*, i64** %m, align 8, !dbg !22869, !tbaa !2993
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !22869, !ctir !2846
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !22869, !tbaa !3837
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22869, !tbaa !2993
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !22869, !ctir !2853
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !22869
  %83 = load i64, i64* %y89, align 8, !dbg !22869, !tbaa !3837
  %shr105 = lshr i64 %83, 8, !dbg !22869
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !22869
  %84 = load i64, i64* %x88, align 8, !dbg !22869, !tbaa !3837
  %add107 = add i64 %call106, %84, !dbg !22869
  %call108 = call i64 @just(i64 %add107), !dbg !22869
  store i64 %call108, i64* %b, align 8, !dbg !22869, !tbaa !3837
  %85 = load i64*, i64** %r, align 8, !dbg !22869, !tbaa !2993
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !22869, !ctir !2846
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !22869, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !22871, metadata !DIExpression()), !dbg !22873
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !22874, metadata !DIExpression()), !dbg !22873
  %86 = load i64, i64* %a, align 8, !dbg !22873, !tbaa !3837
  %87 = load i64, i64* %a, align 8, !dbg !22873, !tbaa !3837
  %call112 = call i64 @just(i64 %87), !dbg !22873
  %shr113 = lshr i64 %call112, 5, !dbg !22873
  %xor114 = xor i64 %86, %shr113, !dbg !22873
  %xor115 = xor i64 0, %xor114, !dbg !22873
  %88 = load i64*, i64** %m, align 8, !dbg !22873, !tbaa !2993
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !22873, !ctir !2846
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !22873, !tbaa !3837
  %add117 = add i64 %xor115, %89, !dbg !22873
  store i64 %add117, i64* %a, align 8, !dbg !22873, !tbaa !3837
  %90 = load i64*, i64** %m, align 8, !dbg !22873, !tbaa !2993
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !22873, !ctir !2846
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !22873, !tbaa !3837
  store i64 %91, i64* %x110, align 8, !dbg !22873, !tbaa !3837
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22873, !tbaa !2993
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !22873, !ctir !2853
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !22873
  %93 = load i64, i64* %x110, align 8, !dbg !22873, !tbaa !3837
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !22873
  %94 = load i64, i64* %a, align 8, !dbg !22873, !tbaa !3837
  %add122 = add i64 %call121, %94, !dbg !22873
  %95 = load i64, i64* %b, align 8, !dbg !22873, !tbaa !3837
  %add123 = add i64 %add122, %95, !dbg !22873
  store i64 %add123, i64* %y111, align 8, !dbg !22873, !tbaa !3837
  %96 = load i64*, i64** %m, align 8, !dbg !22873, !tbaa !2993
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !22873, !ctir !2846
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !22873, !tbaa !3837
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22873, !tbaa !2993
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !22873, !ctir !2853
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !22873
  %98 = load i64, i64* %y111, align 8, !dbg !22873, !tbaa !3837
  %shr127 = lshr i64 %98, 8, !dbg !22873
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !22873
  %99 = load i64, i64* %x110, align 8, !dbg !22873, !tbaa !3837
  %add129 = add i64 %call128, %99, !dbg !22873
  %call130 = call i64 @just(i64 %add129), !dbg !22873
  store i64 %call130, i64* %b, align 8, !dbg !22873, !tbaa !3837
  %100 = load i64*, i64** %r, align 8, !dbg !22873, !tbaa !2993
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !22873, !ctir !2846
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !22873, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !22875, metadata !DIExpression()), !dbg !22877
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !22878, metadata !DIExpression()), !dbg !22877
  %101 = load i64, i64* %a, align 8, !dbg !22877, !tbaa !3837
  %102 = load i64, i64* %a, align 8, !dbg !22877, !tbaa !3837
  %shl134 = shl i64 %102, 12, !dbg !22877
  %xor135 = xor i64 %101, %shl134, !dbg !22877
  %xor136 = xor i64 0, %xor135, !dbg !22877
  %103 = load i64*, i64** %m, align 8, !dbg !22877, !tbaa !2993
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !22877, !ctir !2846
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !22877, !tbaa !3837
  %add138 = add i64 %xor136, %104, !dbg !22877
  store i64 %add138, i64* %a, align 8, !dbg !22877, !tbaa !3837
  %105 = load i64*, i64** %m, align 8, !dbg !22877, !tbaa !2993
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !22877, !ctir !2846
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !22877, !tbaa !3837
  store i64 %106, i64* %x132, align 8, !dbg !22877, !tbaa !3837
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22877, !tbaa !2993
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !22877, !ctir !2853
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !22877
  %108 = load i64, i64* %x132, align 8, !dbg !22877, !tbaa !3837
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !22877
  %109 = load i64, i64* %a, align 8, !dbg !22877, !tbaa !3837
  %add143 = add i64 %call142, %109, !dbg !22877
  %110 = load i64, i64* %b, align 8, !dbg !22877, !tbaa !3837
  %add144 = add i64 %add143, %110, !dbg !22877
  store i64 %add144, i64* %y133, align 8, !dbg !22877, !tbaa !3837
  %111 = load i64*, i64** %m, align 8, !dbg !22877, !tbaa !2993
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !22877, !ctir !2846
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !22877, !tbaa !3837
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22877, !tbaa !2993
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !22877, !ctir !2853
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !22877
  %113 = load i64, i64* %y133, align 8, !dbg !22877, !tbaa !3837
  %shr148 = lshr i64 %113, 8, !dbg !22877
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !22877
  %114 = load i64, i64* %x132, align 8, !dbg !22877, !tbaa !3837
  %add150 = add i64 %call149, %114, !dbg !22877
  %call151 = call i64 @just(i64 %add150), !dbg !22877
  store i64 %call151, i64* %b, align 8, !dbg !22877, !tbaa !3837
  %115 = load i64*, i64** %r, align 8, !dbg !22877, !tbaa !2993
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !22877, !ctir !2846
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !22877, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !22879, metadata !DIExpression()), !dbg !22881
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !22882, metadata !DIExpression()), !dbg !22881
  %116 = load i64, i64* %a, align 8, !dbg !22881, !tbaa !3837
  %117 = load i64, i64* %a, align 8, !dbg !22881, !tbaa !3837
  %call155 = call i64 @just(i64 %117), !dbg !22881
  %shr156 = lshr i64 %call155, 33, !dbg !22881
  %xor157 = xor i64 %116, %shr156, !dbg !22881
  %xor158 = xor i64 0, %xor157, !dbg !22881
  %118 = load i64*, i64** %m, align 8, !dbg !22881, !tbaa !2993
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !22881, !ctir !2846
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !22881, !tbaa !3837
  %add160 = add i64 %xor158, %119, !dbg !22881
  store i64 %add160, i64* %a, align 8, !dbg !22881, !tbaa !3837
  %120 = load i64*, i64** %m, align 8, !dbg !22881, !tbaa !2993
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !22881, !ctir !2846
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !22881, !tbaa !3837
  store i64 %121, i64* %x153, align 8, !dbg !22881, !tbaa !3837
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22881, !tbaa !2993
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !22881, !ctir !2853
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !22881
  %123 = load i64, i64* %x153, align 8, !dbg !22881, !tbaa !3837
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !22881
  %124 = load i64, i64* %a, align 8, !dbg !22881, !tbaa !3837
  %add165 = add i64 %call164, %124, !dbg !22881
  %125 = load i64, i64* %b, align 8, !dbg !22881, !tbaa !3837
  %add166 = add i64 %add165, %125, !dbg !22881
  store i64 %add166, i64* %y154, align 8, !dbg !22881, !tbaa !3837
  %126 = load i64*, i64** %m, align 8, !dbg !22881, !tbaa !2993
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !22881, !ctir !2846
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !22881, !tbaa !3837
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22881, !tbaa !2993
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !22881, !ctir !2853
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !22881
  %128 = load i64, i64* %y154, align 8, !dbg !22881, !tbaa !3837
  %shr170 = lshr i64 %128, 8, !dbg !22881
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !22881
  %129 = load i64, i64* %x153, align 8, !dbg !22881, !tbaa !3837
  %add172 = add i64 %call171, %129, !dbg !22881
  %call173 = call i64 @just(i64 %add172), !dbg !22881
  store i64 %call173, i64* %b, align 8, !dbg !22881, !tbaa !3837
  %130 = load i64*, i64** %r, align 8, !dbg !22881, !tbaa !2993
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !22881, !ctir !2846
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !22881, !tbaa !3837
  %131 = load i64*, i64** %r, align 8, !dbg !22883, !tbaa !2993
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !22883
  store i64* %add.ptr175, i64** %r, align 8, !dbg !22883, !tbaa !2993
  br label %do.cond176, !dbg !22884

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !22885, !tbaa !2993
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !22885
  store i64* %add.ptr177, i64** %m, align 8, !dbg !22885, !tbaa !2993
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22886, !tbaa !2993
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !22887, !ctir !2853
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !22886
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !22888
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !22889
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !22884, !llvm.loop !22890

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !22892, !tbaa !3837
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22893, !tbaa !2993
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !22894, !ctir !2853
  store i64 %134, i64* %a183, align 8, !dbg !22895, !tbaa !22820, !ctir !2813
  %136 = load i64, i64* %b, align 8, !dbg !22896, !tbaa !3837
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22897, !tbaa !2993
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !22898, !ctir !2853
  store i64 %136, i64* %b184, align 8, !dbg !22899, !tbaa !22825, !ctir !2813
  ret void, !dbg !22900
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !22901 !ctir !2861 {
entry:
  %m.addr = alloca i64*, align 8, !ctir !2863
  %x.addr = alloca i64, align 8, !ctir !2813
  %void_m = alloca i8*, align 8, !ctir !428
  %base_p = alloca i8*, align 8, !ctir !112
  %word_p = alloca i8*, align 8, !ctir !428
  %p = alloca i64*, align 8, !ctir !2863
  store i64* %m, i64** %m.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !22902, metadata !DIExpression()), !dbg !22903
  store i64 %x, i64* %x.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !22904, metadata !DIExpression()), !dbg !22905
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !22906, metadata !DIExpression()), !dbg !22909
  %0 = load i64*, i64** %m.addr, align 8, !dbg !22910, !tbaa !2993
  %1 = bitcast i64* %0 to i8*, !dbg !22910
  store i8* %1, i8** %void_m, align 8, !dbg !22909, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !22911, metadata !DIExpression()), !dbg !22912
  %2 = load i8*, i8** %void_m, align 8, !dbg !22913, !tbaa !2993
  store i8* %2, i8** %base_p, align 8, !dbg !22912, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !22914, metadata !DIExpression()), !dbg !22915
  %3 = load i8*, i8** %base_p, align 8, !dbg !22916, !tbaa !2993
  %4 = load i64, i64* %x.addr, align 8, !dbg !22917, !tbaa !3837
  %and = and i64 %4, 2040, !dbg !22918
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !22919
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !22915, !tbaa !2993
  call void @llvm.dbg.declare(metadata i64** %p, metadata !22920, metadata !DIExpression()), !dbg !22921
  %5 = load i8*, i8** %word_p, align 8, !dbg !22922, !tbaa !2993
  %6 = bitcast i8* %5 to i64*, !dbg !22922
  store i64* %6, i64** %p, align 8, !dbg !22921, !tbaa !2993
  %7 = load i64*, i64** %p, align 8, !dbg !22923, !tbaa !2993
  %8 = load i64, i64* %7, align 8, !dbg !22924, !tbaa !3837, !ctir !2864
  ret i64 %8, !dbg !22925
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !22926 !ctir !2865 {
entry:
  %a.addr = alloca i64, align 8, !ctir !2813
  %desired_bits = alloca i64, align 8, !ctir !2813
  store i64 %a, i64* %a.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !22927, metadata !DIExpression()), !dbg !22928
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !22929, metadata !DIExpression()), !dbg !22930
  store i64 -1, i64* %desired_bits, align 8, !dbg !22930, !tbaa !3837
  %0 = load i64, i64* %a.addr, align 8, !dbg !22931, !tbaa !3837
  %1 = load i64, i64* %desired_bits, align 8, !dbg !22932, !tbaa !3837
  %and = and i64 %0, %1, !dbg !22933
  ret i64 %and, !dbg !22934
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !22935 !ctir !2859 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8, !ctir !2852
  %a = alloca i64, align 8, !ctir !2813
  %b = alloca i64, align 8, !ctir !2813
  %c = alloca i64, align 8, !ctir !2813
  %d = alloca i64, align 8, !ctir !2813
  %e = alloca i64, align 8, !ctir !2813
  %f = alloca i64, align 8, !ctir !2813
  %g = alloca i64, align 8, !ctir !2813
  %h = alloca i64, align 8, !ctir !2813
  %i = alloca i32, align 4, !ctir !5
  %i99 = alloca i32, align 4, !ctir !5
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !22936, metadata !DIExpression()), !dbg !22937
  call void @llvm.dbg.declare(metadata i64* %a, metadata !22938, metadata !DIExpression()), !dbg !22939
  store i64 7240739780546808700, i64* %a, align 8, !dbg !22939, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %b, metadata !22940, metadata !DIExpression()), !dbg !22941
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !22941, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %c, metadata !22942, metadata !DIExpression()), !dbg !22943
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !22943, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %d, metadata !22944, metadata !DIExpression()), !dbg !22945
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !22945, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %e, metadata !22946, metadata !DIExpression()), !dbg !22947
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !22947, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %f, metadata !22948, metadata !DIExpression()), !dbg !22949
  store i64 5259722845879046933, i64* %f, align 8, !dbg !22949, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %g, metadata !22950, metadata !DIExpression()), !dbg !22951
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !22951, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %h, metadata !22952, metadata !DIExpression()), !dbg !22953
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !22953, !tbaa !3837
  call void @llvm.dbg.declare(metadata i32* %i, metadata !22954, metadata !DIExpression()), !dbg !22956
  store i32 0, i32* %i, align 4, !dbg !22957, !tbaa !2980
  br label %for.cond, !dbg !22957

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !22959, !tbaa !2980
  %cmp = icmp slt i32 %0, 256, !dbg !22959
  br i1 %cmp, label %for.body, label %for.end, !dbg !22957

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !22961, !ctir !2853
  %2 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %idxprom = sext i32 %2 to i64, !dbg !22961
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !22961, !ctir !2812
  %3 = load i64, i64* %arrayidx, align 8, !dbg !22961, !tbaa !3837
  %4 = load i64, i64* %a, align 8, !dbg !22961, !tbaa !3837
  %add = add i64 %4, %3, !dbg !22961
  store i64 %add, i64* %a, align 8, !dbg !22961, !tbaa !3837
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !22961, !ctir !2853
  %6 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add2 = add nsw i32 %6, 1, !dbg !22961
  %idxprom3 = sext i32 %add2 to i64, !dbg !22961
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !22961, !ctir !2812
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !22961, !tbaa !3837
  %8 = load i64, i64* %b, align 8, !dbg !22961, !tbaa !3837
  %add5 = add i64 %8, %7, !dbg !22961
  store i64 %add5, i64* %b, align 8, !dbg !22961, !tbaa !3837
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !22961, !ctir !2853
  %10 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add7 = add nsw i32 %10, 2, !dbg !22961
  %idxprom8 = sext i32 %add7 to i64, !dbg !22961
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !22961, !ctir !2812
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !22961, !tbaa !3837
  %12 = load i64, i64* %c, align 8, !dbg !22961, !tbaa !3837
  %add10 = add i64 %12, %11, !dbg !22961
  store i64 %add10, i64* %c, align 8, !dbg !22961, !tbaa !3837
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !22961, !ctir !2853
  %14 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add12 = add nsw i32 %14, 3, !dbg !22961
  %idxprom13 = sext i32 %add12 to i64, !dbg !22961
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !22961, !ctir !2812
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !22961, !tbaa !3837
  %16 = load i64, i64* %d, align 8, !dbg !22961, !tbaa !3837
  %add15 = add i64 %16, %15, !dbg !22961
  store i64 %add15, i64* %d, align 8, !dbg !22961, !tbaa !3837
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !22961, !ctir !2853
  %18 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add17 = add nsw i32 %18, 4, !dbg !22961
  %idxprom18 = sext i32 %add17 to i64, !dbg !22961
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !22961, !ctir !2812
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !22961, !tbaa !3837
  %20 = load i64, i64* %e, align 8, !dbg !22961, !tbaa !3837
  %add20 = add i64 %20, %19, !dbg !22961
  store i64 %add20, i64* %e, align 8, !dbg !22961, !tbaa !3837
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !22961, !ctir !2853
  %22 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add22 = add nsw i32 %22, 5, !dbg !22961
  %idxprom23 = sext i32 %add22 to i64, !dbg !22961
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !22961, !ctir !2812
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !22961, !tbaa !3837
  %24 = load i64, i64* %f, align 8, !dbg !22961, !tbaa !3837
  %add25 = add i64 %24, %23, !dbg !22961
  store i64 %add25, i64* %f, align 8, !dbg !22961, !tbaa !3837
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !22961, !ctir !2853
  %26 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add27 = add nsw i32 %26, 6, !dbg !22961
  %idxprom28 = sext i32 %add27 to i64, !dbg !22961
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !22961, !ctir !2812
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !22961, !tbaa !3837
  %28 = load i64, i64* %g, align 8, !dbg !22961, !tbaa !3837
  %add30 = add i64 %28, %27, !dbg !22961
  store i64 %add30, i64* %g, align 8, !dbg !22961, !tbaa !3837
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !22961, !ctir !2853
  %30 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add32 = add nsw i32 %30, 7, !dbg !22961
  %idxprom33 = sext i32 %add32 to i64, !dbg !22961
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !22961, !ctir !2812
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !22961, !tbaa !3837
  %32 = load i64, i64* %h, align 8, !dbg !22961, !tbaa !3837
  %add35 = add i64 %32, %31, !dbg !22961
  store i64 %add35, i64* %h, align 8, !dbg !22961, !tbaa !3837
  %33 = load i64, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %34 = load i64, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %sub = sub i64 %34, %33, !dbg !22963
  store i64 %sub, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %35 = load i64, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %call = call i64 @just(i64 %35), !dbg !22963
  %shr = lshr i64 %call, 9, !dbg !22963
  %36 = load i64, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %xor = xor i64 %36, %shr, !dbg !22963
  store i64 %xor, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %37 = load i64, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %38 = load i64, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %add36 = add i64 %38, %37, !dbg !22963
  store i64 %add36, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %39 = load i64, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %40 = load i64, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %sub37 = sub i64 %40, %39, !dbg !22963
  store i64 %sub37, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %41 = load i64, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %shl = shl i64 %41, 9, !dbg !22963
  %42 = load i64, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %xor38 = xor i64 %42, %shl, !dbg !22963
  store i64 %xor38, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %43 = load i64, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %44 = load i64, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %add39 = add i64 %44, %43, !dbg !22963
  store i64 %add39, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %45 = load i64, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %46 = load i64, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %sub40 = sub i64 %46, %45, !dbg !22963
  store i64 %sub40, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %47 = load i64, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %call41 = call i64 @just(i64 %47), !dbg !22963
  %shr42 = lshr i64 %call41, 23, !dbg !22963
  %48 = load i64, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %xor43 = xor i64 %48, %shr42, !dbg !22963
  store i64 %xor43, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %49 = load i64, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %50 = load i64, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %add44 = add i64 %50, %49, !dbg !22963
  store i64 %add44, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %51 = load i64, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %52 = load i64, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %sub45 = sub i64 %52, %51, !dbg !22963
  store i64 %sub45, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %53 = load i64, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %shl46 = shl i64 %53, 15, !dbg !22963
  %54 = load i64, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %xor47 = xor i64 %54, %shl46, !dbg !22963
  store i64 %xor47, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %55 = load i64, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %56 = load i64, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %add48 = add i64 %56, %55, !dbg !22963
  store i64 %add48, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %57 = load i64, i64* %a, align 8, !dbg !22963, !tbaa !3837
  %58 = load i64, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %sub49 = sub i64 %58, %57, !dbg !22963
  store i64 %sub49, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %59 = load i64, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %call50 = call i64 @just(i64 %59), !dbg !22963
  %shr51 = lshr i64 %call50, 14, !dbg !22963
  %60 = load i64, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %xor52 = xor i64 %60, %shr51, !dbg !22963
  store i64 %xor52, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %61 = load i64, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %62 = load i64, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %add53 = add i64 %62, %61, !dbg !22963
  store i64 %add53, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %63 = load i64, i64* %b, align 8, !dbg !22963, !tbaa !3837
  %64 = load i64, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %sub54 = sub i64 %64, %63, !dbg !22963
  store i64 %sub54, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %65 = load i64, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %shl55 = shl i64 %65, 20, !dbg !22963
  %66 = load i64, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %xor56 = xor i64 %66, %shl55, !dbg !22963
  store i64 %xor56, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %67 = load i64, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %68 = load i64, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %add57 = add i64 %68, %67, !dbg !22963
  store i64 %add57, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %69 = load i64, i64* %c, align 8, !dbg !22963, !tbaa !3837
  %70 = load i64, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %sub58 = sub i64 %70, %69, !dbg !22963
  store i64 %sub58, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %71 = load i64, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %call59 = call i64 @just(i64 %71), !dbg !22963
  %shr60 = lshr i64 %call59, 17, !dbg !22963
  %72 = load i64, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %xor61 = xor i64 %72, %shr60, !dbg !22963
  store i64 %xor61, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %73 = load i64, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %74 = load i64, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %add62 = add i64 %74, %73, !dbg !22963
  store i64 %add62, i64* %f, align 8, !dbg !22963, !tbaa !3837
  %75 = load i64, i64* %d, align 8, !dbg !22963, !tbaa !3837
  %76 = load i64, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %sub63 = sub i64 %76, %75, !dbg !22963
  store i64 %sub63, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %77 = load i64, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %shl64 = shl i64 %77, 14, !dbg !22963
  %78 = load i64, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %xor65 = xor i64 %78, %shl64, !dbg !22963
  store i64 %xor65, i64* %e, align 8, !dbg !22963, !tbaa !3837
  %79 = load i64, i64* %h, align 8, !dbg !22963, !tbaa !3837
  %80 = load i64, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %add66 = add i64 %80, %79, !dbg !22963
  store i64 %add66, i64* %g, align 8, !dbg !22963, !tbaa !3837
  %81 = load i64, i64* %a, align 8, !dbg !22961, !tbaa !3837
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !22961, !ctir !2853
  %83 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %idxprom68 = sext i32 %83 to i64, !dbg !22961
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !22961, !ctir !2812
  store i64 %81, i64* %arrayidx69, align 8, !dbg !22961, !tbaa !3837
  %84 = load i64, i64* %b, align 8, !dbg !22961, !tbaa !3837
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !22961, !ctir !2853
  %86 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add71 = add nsw i32 %86, 1, !dbg !22961
  %idxprom72 = sext i32 %add71 to i64, !dbg !22961
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !22961, !ctir !2812
  store i64 %84, i64* %arrayidx73, align 8, !dbg !22961, !tbaa !3837
  %87 = load i64, i64* %c, align 8, !dbg !22961, !tbaa !3837
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !22961, !ctir !2853
  %89 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add75 = add nsw i32 %89, 2, !dbg !22961
  %idxprom76 = sext i32 %add75 to i64, !dbg !22961
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !22961, !ctir !2812
  store i64 %87, i64* %arrayidx77, align 8, !dbg !22961, !tbaa !3837
  %90 = load i64, i64* %d, align 8, !dbg !22961, !tbaa !3837
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !22961, !ctir !2853
  %92 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add79 = add nsw i32 %92, 3, !dbg !22961
  %idxprom80 = sext i32 %add79 to i64, !dbg !22961
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !22961, !ctir !2812
  store i64 %90, i64* %arrayidx81, align 8, !dbg !22961, !tbaa !3837
  %93 = load i64, i64* %e, align 8, !dbg !22961, !tbaa !3837
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !22961, !ctir !2853
  %95 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add83 = add nsw i32 %95, 4, !dbg !22961
  %idxprom84 = sext i32 %add83 to i64, !dbg !22961
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !22961, !ctir !2812
  store i64 %93, i64* %arrayidx85, align 8, !dbg !22961, !tbaa !3837
  %96 = load i64, i64* %f, align 8, !dbg !22961, !tbaa !3837
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !22961, !ctir !2853
  %98 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add87 = add nsw i32 %98, 5, !dbg !22961
  %idxprom88 = sext i32 %add87 to i64, !dbg !22961
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !22961, !ctir !2812
  store i64 %96, i64* %arrayidx89, align 8, !dbg !22961, !tbaa !3837
  %99 = load i64, i64* %g, align 8, !dbg !22961, !tbaa !3837
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !22961, !ctir !2853
  %101 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add91 = add nsw i32 %101, 6, !dbg !22961
  %idxprom92 = sext i32 %add91 to i64, !dbg !22961
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !22961, !ctir !2812
  store i64 %99, i64* %arrayidx93, align 8, !dbg !22961, !tbaa !3837
  %102 = load i64, i64* %h, align 8, !dbg !22961, !tbaa !3837
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22961, !tbaa !2993
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !22961, !ctir !2853
  %104 = load i32, i32* %i, align 4, !dbg !22961, !tbaa !2980
  %add95 = add nsw i32 %104, 7, !dbg !22961
  %idxprom96 = sext i32 %add95 to i64, !dbg !22961
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !22961, !ctir !2812
  store i64 %102, i64* %arrayidx97, align 8, !dbg !22961, !tbaa !3837
  br label %for.inc, !dbg !22961

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !22959, !tbaa !2980
  %add98 = add nsw i32 %105, 8, !dbg !22959
  store i32 %add98, i32* %i, align 4, !dbg !22959, !tbaa !2980
  br label %for.cond, !dbg !22959, !llvm.loop !22965

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !22966, metadata !DIExpression()), !dbg !22968
  store i32 0, i32* %i99, align 4, !dbg !22969, !tbaa !2980
  br label %for.cond100, !dbg !22969

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !22971, !tbaa !2980
  %cmp101 = icmp slt i32 %106, 256, !dbg !22971
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !22969

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !22973, !ctir !2853
  %108 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %idxprom104 = sext i32 %108 to i64, !dbg !22973
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !22973, !ctir !2812
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !22973, !tbaa !3837
  %110 = load i64, i64* %a, align 8, !dbg !22973, !tbaa !3837
  %add106 = add i64 %110, %109, !dbg !22973
  store i64 %add106, i64* %a, align 8, !dbg !22973, !tbaa !3837
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !22973, !ctir !2853
  %112 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add108 = add nsw i32 %112, 1, !dbg !22973
  %idxprom109 = sext i32 %add108 to i64, !dbg !22973
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !22973, !ctir !2812
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !22973, !tbaa !3837
  %114 = load i64, i64* %b, align 8, !dbg !22973, !tbaa !3837
  %add111 = add i64 %114, %113, !dbg !22973
  store i64 %add111, i64* %b, align 8, !dbg !22973, !tbaa !3837
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !22973, !ctir !2853
  %116 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add113 = add nsw i32 %116, 2, !dbg !22973
  %idxprom114 = sext i32 %add113 to i64, !dbg !22973
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !22973, !ctir !2812
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !22973, !tbaa !3837
  %118 = load i64, i64* %c, align 8, !dbg !22973, !tbaa !3837
  %add116 = add i64 %118, %117, !dbg !22973
  store i64 %add116, i64* %c, align 8, !dbg !22973, !tbaa !3837
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !22973, !ctir !2853
  %120 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add118 = add nsw i32 %120, 3, !dbg !22973
  %idxprom119 = sext i32 %add118 to i64, !dbg !22973
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !22973, !ctir !2812
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !22973, !tbaa !3837
  %122 = load i64, i64* %d, align 8, !dbg !22973, !tbaa !3837
  %add121 = add i64 %122, %121, !dbg !22973
  store i64 %add121, i64* %d, align 8, !dbg !22973, !tbaa !3837
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !22973, !ctir !2853
  %124 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add123 = add nsw i32 %124, 4, !dbg !22973
  %idxprom124 = sext i32 %add123 to i64, !dbg !22973
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !22973, !ctir !2812
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !22973, !tbaa !3837
  %126 = load i64, i64* %e, align 8, !dbg !22973, !tbaa !3837
  %add126 = add i64 %126, %125, !dbg !22973
  store i64 %add126, i64* %e, align 8, !dbg !22973, !tbaa !3837
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !22973, !ctir !2853
  %128 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add128 = add nsw i32 %128, 5, !dbg !22973
  %idxprom129 = sext i32 %add128 to i64, !dbg !22973
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !22973, !ctir !2812
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !22973, !tbaa !3837
  %130 = load i64, i64* %f, align 8, !dbg !22973, !tbaa !3837
  %add131 = add i64 %130, %129, !dbg !22973
  store i64 %add131, i64* %f, align 8, !dbg !22973, !tbaa !3837
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !22973, !ctir !2853
  %132 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add133 = add nsw i32 %132, 6, !dbg !22973
  %idxprom134 = sext i32 %add133 to i64, !dbg !22973
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !22973, !ctir !2812
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !22973, !tbaa !3837
  %134 = load i64, i64* %g, align 8, !dbg !22973, !tbaa !3837
  %add136 = add i64 %134, %133, !dbg !22973
  store i64 %add136, i64* %g, align 8, !dbg !22973, !tbaa !3837
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !22973, !ctir !2853
  %136 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add138 = add nsw i32 %136, 7, !dbg !22973
  %idxprom139 = sext i32 %add138 to i64, !dbg !22973
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !22973, !ctir !2812
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !22973, !tbaa !3837
  %138 = load i64, i64* %h, align 8, !dbg !22973, !tbaa !3837
  %add141 = add i64 %138, %137, !dbg !22973
  store i64 %add141, i64* %h, align 8, !dbg !22973, !tbaa !3837
  %139 = load i64, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %140 = load i64, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %sub142 = sub i64 %140, %139, !dbg !22975
  store i64 %sub142, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %141 = load i64, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %call143 = call i64 @just(i64 %141), !dbg !22975
  %shr144 = lshr i64 %call143, 9, !dbg !22975
  %142 = load i64, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %xor145 = xor i64 %142, %shr144, !dbg !22975
  store i64 %xor145, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %143 = load i64, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %144 = load i64, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %add146 = add i64 %144, %143, !dbg !22975
  store i64 %add146, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %145 = load i64, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %146 = load i64, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %sub147 = sub i64 %146, %145, !dbg !22975
  store i64 %sub147, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %147 = load i64, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %shl148 = shl i64 %147, 9, !dbg !22975
  %148 = load i64, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %xor149 = xor i64 %148, %shl148, !dbg !22975
  store i64 %xor149, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %149 = load i64, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %150 = load i64, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %add150 = add i64 %150, %149, !dbg !22975
  store i64 %add150, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %151 = load i64, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %152 = load i64, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %sub151 = sub i64 %152, %151, !dbg !22975
  store i64 %sub151, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %153 = load i64, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %call152 = call i64 @just(i64 %153), !dbg !22975
  %shr153 = lshr i64 %call152, 23, !dbg !22975
  %154 = load i64, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %xor154 = xor i64 %154, %shr153, !dbg !22975
  store i64 %xor154, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %155 = load i64, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %156 = load i64, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %add155 = add i64 %156, %155, !dbg !22975
  store i64 %add155, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %157 = load i64, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %158 = load i64, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %sub156 = sub i64 %158, %157, !dbg !22975
  store i64 %sub156, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %159 = load i64, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %shl157 = shl i64 %159, 15, !dbg !22975
  %160 = load i64, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %xor158 = xor i64 %160, %shl157, !dbg !22975
  store i64 %xor158, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %161 = load i64, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %162 = load i64, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %add159 = add i64 %162, %161, !dbg !22975
  store i64 %add159, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %163 = load i64, i64* %a, align 8, !dbg !22975, !tbaa !3837
  %164 = load i64, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %sub160 = sub i64 %164, %163, !dbg !22975
  store i64 %sub160, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %165 = load i64, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %call161 = call i64 @just(i64 %165), !dbg !22975
  %shr162 = lshr i64 %call161, 14, !dbg !22975
  %166 = load i64, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %xor163 = xor i64 %166, %shr162, !dbg !22975
  store i64 %xor163, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %167 = load i64, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %168 = load i64, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %add164 = add i64 %168, %167, !dbg !22975
  store i64 %add164, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %169 = load i64, i64* %b, align 8, !dbg !22975, !tbaa !3837
  %170 = load i64, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %sub165 = sub i64 %170, %169, !dbg !22975
  store i64 %sub165, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %171 = load i64, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %shl166 = shl i64 %171, 20, !dbg !22975
  %172 = load i64, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %xor167 = xor i64 %172, %shl166, !dbg !22975
  store i64 %xor167, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %173 = load i64, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %174 = load i64, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %add168 = add i64 %174, %173, !dbg !22975
  store i64 %add168, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %175 = load i64, i64* %c, align 8, !dbg !22975, !tbaa !3837
  %176 = load i64, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %sub169 = sub i64 %176, %175, !dbg !22975
  store i64 %sub169, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %177 = load i64, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %call170 = call i64 @just(i64 %177), !dbg !22975
  %shr171 = lshr i64 %call170, 17, !dbg !22975
  %178 = load i64, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %xor172 = xor i64 %178, %shr171, !dbg !22975
  store i64 %xor172, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %179 = load i64, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %180 = load i64, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %add173 = add i64 %180, %179, !dbg !22975
  store i64 %add173, i64* %f, align 8, !dbg !22975, !tbaa !3837
  %181 = load i64, i64* %d, align 8, !dbg !22975, !tbaa !3837
  %182 = load i64, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %sub174 = sub i64 %182, %181, !dbg !22975
  store i64 %sub174, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %183 = load i64, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %shl175 = shl i64 %183, 14, !dbg !22975
  %184 = load i64, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %xor176 = xor i64 %184, %shl175, !dbg !22975
  store i64 %xor176, i64* %e, align 8, !dbg !22975, !tbaa !3837
  %185 = load i64, i64* %h, align 8, !dbg !22975, !tbaa !3837
  %186 = load i64, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %add177 = add i64 %186, %185, !dbg !22975
  store i64 %add177, i64* %g, align 8, !dbg !22975, !tbaa !3837
  %187 = load i64, i64* %a, align 8, !dbg !22973, !tbaa !3837
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !22973, !ctir !2853
  %189 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %idxprom179 = sext i32 %189 to i64, !dbg !22973
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !22973, !ctir !2812
  store i64 %187, i64* %arrayidx180, align 8, !dbg !22973, !tbaa !3837
  %190 = load i64, i64* %b, align 8, !dbg !22973, !tbaa !3837
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !22973, !ctir !2853
  %192 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add182 = add nsw i32 %192, 1, !dbg !22973
  %idxprom183 = sext i32 %add182 to i64, !dbg !22973
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !22973, !ctir !2812
  store i64 %190, i64* %arrayidx184, align 8, !dbg !22973, !tbaa !3837
  %193 = load i64, i64* %c, align 8, !dbg !22973, !tbaa !3837
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !22973, !ctir !2853
  %195 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add186 = add nsw i32 %195, 2, !dbg !22973
  %idxprom187 = sext i32 %add186 to i64, !dbg !22973
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !22973, !ctir !2812
  store i64 %193, i64* %arrayidx188, align 8, !dbg !22973, !tbaa !3837
  %196 = load i64, i64* %d, align 8, !dbg !22973, !tbaa !3837
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !22973, !ctir !2853
  %198 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add190 = add nsw i32 %198, 3, !dbg !22973
  %idxprom191 = sext i32 %add190 to i64, !dbg !22973
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !22973, !ctir !2812
  store i64 %196, i64* %arrayidx192, align 8, !dbg !22973, !tbaa !3837
  %199 = load i64, i64* %e, align 8, !dbg !22973, !tbaa !3837
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !22973, !ctir !2853
  %201 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add194 = add nsw i32 %201, 4, !dbg !22973
  %idxprom195 = sext i32 %add194 to i64, !dbg !22973
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !22973, !ctir !2812
  store i64 %199, i64* %arrayidx196, align 8, !dbg !22973, !tbaa !3837
  %202 = load i64, i64* %f, align 8, !dbg !22973, !tbaa !3837
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !22973, !ctir !2853
  %204 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add198 = add nsw i32 %204, 5, !dbg !22973
  %idxprom199 = sext i32 %add198 to i64, !dbg !22973
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !22973, !ctir !2812
  store i64 %202, i64* %arrayidx200, align 8, !dbg !22973, !tbaa !3837
  %205 = load i64, i64* %g, align 8, !dbg !22973, !tbaa !3837
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !22973, !ctir !2853
  %207 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add202 = add nsw i32 %207, 6, !dbg !22973
  %idxprom203 = sext i32 %add202 to i64, !dbg !22973
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !22973, !ctir !2812
  store i64 %205, i64* %arrayidx204, align 8, !dbg !22973, !tbaa !3837
  %208 = load i64, i64* %h, align 8, !dbg !22973, !tbaa !3837
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22973, !tbaa !2993
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !22973, !ctir !2853
  %210 = load i32, i32* %i99, align 4, !dbg !22973, !tbaa !2980
  %add206 = add nsw i32 %210, 7, !dbg !22973
  %idxprom207 = sext i32 %add206 to i64, !dbg !22973
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !22973, !ctir !2812
  store i64 %208, i64* %arrayidx208, align 8, !dbg !22973, !tbaa !3837
  br label %for.inc209, !dbg !22973

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !22971, !tbaa !2980
  %add210 = add nsw i32 %211, 8, !dbg !22971
  store i32 %add210, i32* %i99, align 4, !dbg !22971, !tbaa !2980
  br label %for.cond100, !dbg !22971, !llvm.loop !22977

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22978, !tbaa !2993
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !22979, !ctir !2853
  store i64 0, i64* %c212, align 8, !dbg !22980, !tbaa !22829, !ctir !2813
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22981, !tbaa !2993
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !22982, !ctir !2853
  store i64 0, i64* %b213, align 8, !dbg !22983, !tbaa !22825, !ctir !2813
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !22984, !tbaa !2993
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !22985, !ctir !2853
  store i64 0, i64* %a214, align 8, !dbg !22986, !tbaa !22820, !ctir !2813
  ret void, !dbg !22987
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !22988 !ctir !1828 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !22990, metadata !DIExpression()), !dbg !22991
  %0 = load i32, i32* %fd.addr, align 4, !dbg !22992, !tbaa !2980
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !22993
  ret i32 %call, !dbg !22994
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @explicit_bzero(i8* nonnull %s, i64 %len) #4 !dbg !22995 !ctir !2872 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !47
  %len.addr = alloca i64, align 8, !ctir !52
  store i8* %s, i8** %s.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !22997, metadata !DIExpression()), !dbg !22998
  store i64 %len, i64* %len.addr, align 8, !tbaa !3837
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !22999, metadata !DIExpression()), !dbg !23000
  %0 = load i8*, i8** %s.addr, align 8, !dbg !23001, !tbaa !2993
  %1 = load i64, i64* %len.addr, align 8, !dbg !23002, !tbaa !3837
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !23003
  ret void, !dbg !23004
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !23005 !ctir !2877 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2879
  %saved_errno = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !23007, metadata !DIExpression()), !dbg !23008
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23009, metadata !DIExpression()), !dbg !23010
  store i32 0, i32* %saved_errno, align 4, !dbg !23010, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23011, metadata !DIExpression()), !dbg !23012
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23013, metadata !DIExpression()), !dbg !23014
  store i32 0, i32* %result, align 4, !dbg !23014, !tbaa !2980
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23015, !tbaa !2993
  %call = call i32 @fileno(%struct._IO_FILE* %0) #12, !dbg !23016
  store i32 %call, i32* %fd, align 4, !dbg !23017, !tbaa !2980
  %1 = load i32, i32* %fd, align 4, !dbg !23018, !tbaa !2980
  %cmp = icmp slt i32 %1, 0, !dbg !23020
  br i1 %cmp, label %if.then, label %if.end, !dbg !23021

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23022, !tbaa !2993
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !23023
  store i32 %call1, i32* %retval, align 4, !dbg !23024
  br label %return, !dbg !23024

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23025, !tbaa !2993
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #12, !dbg !23025
  %cmp3 = icmp ne i32 %call2, 0, !dbg !23025
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !23027

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23028, !tbaa !2993
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #12, !dbg !23029
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #12, !dbg !23030
  %cmp6 = icmp ne i64 %call5, -1, !dbg !23031
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !23032

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23033, !tbaa !2993
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !23034
  %tobool = icmp ne i32 %call7, 0, !dbg !23034
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !23035

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #15, !dbg !23036
  %6 = load i32, i32* %call9, align 4, !dbg !23036, !tbaa !2980, !ctir !5
  store i32 %6, i32* %saved_errno, align 4, !dbg !23037, !tbaa !2980
  br label %if.end10, !dbg !23038

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !23039, !tbaa !2993
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !23040
  store i32 %call11, i32* %result, align 4, !dbg !23041, !tbaa !2980
  %8 = load i32, i32* %saved_errno, align 4, !dbg !23042, !tbaa !2980
  %cmp12 = icmp ne i32 %8, 0, !dbg !23044
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !23045

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !23046, !tbaa !2980
  %call14 = call i32* @__errno_location() #15, !dbg !23048
  store i32 %9, i32* %call14, align 4, !dbg !23049, !tbaa !2980, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !23050, !tbaa !2980
  br label %if.end15, !dbg !23051

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !23052, !tbaa !2980
  store i32 %10, i32* %retval, align 4, !dbg !23053
  br label %return, !dbg !23053

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !23054
  ret i32 %11, !dbg !23054
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !23055 !ctir !420 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %action.addr = alloca i32, align 4, !ctir !5
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1305
  %result = alloca i32, align 4, !ctir !5
  %target = alloca i32, align 4, !ctir !5
  %target4 = alloca i32, align 4, !ctir !5
  %x = alloca i32, align 4, !ctir !5
  %p = alloca i8*, align 8, !ctir !47
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23058, metadata !DIExpression()), !dbg !23059
  store i32 %action, i32* %action.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !23060, metadata !DIExpression()), !dbg !23061
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !23062, metadata !DIExpression()), !dbg !23063
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23064, metadata !DIExpression()), !dbg !23065
  store i32 -1, i32* %result, align 4, !dbg !23065, !tbaa !2980
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23066
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !23066
  call void @llvm.va_start(i8* %arraydecay1), !dbg !23066
  %0 = load i32, i32* %action.addr, align 4, !dbg !23067, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !23068

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !23069, metadata !DIExpression()), !dbg !23072
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23073
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !23073
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !23073
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !23073
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !23073

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !23073
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !23073
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !23073
  %3 = bitcast i8* %2 to i32*, !dbg !23073
  %4 = add i32 %gp_offset, 8, !dbg !23073
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !23073
  br label %vaarg.end, !dbg !23073

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !23073
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !23073
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !23073
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !23073
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !23073
  br label %vaarg.end, !dbg !23073

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !23073
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !23073
  store i32 %6, i32* %target, align 4, !dbg !23072, !tbaa !2980
  %7 = load i32, i32* %fd.addr, align 4, !dbg !23074, !tbaa !2980
  %8 = load i32, i32* %target, align 4, !dbg !23075, !tbaa !2980
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !23076
  store i32 %call, i32* %result, align 4, !dbg !23077, !tbaa !2980
  br label %sw.epilog48, !dbg !23078

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !23079, metadata !DIExpression()), !dbg !23081
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23082
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !23082
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !23082
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !23082
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !23082

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !23082
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !23082
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !23082
  %11 = bitcast i8* %10 to i32*, !dbg !23082
  %12 = add i32 %gp_offset7, 8, !dbg !23082
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !23082
  br label %vaarg.end15, !dbg !23082

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !23082
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !23082
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !23082
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !23082
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !23082
  br label %vaarg.end15, !dbg !23082

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !23082
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !23082
  store i32 %14, i32* %target4, align 4, !dbg !23081, !tbaa !2980
  %15 = load i32, i32* %fd.addr, align 4, !dbg !23083, !tbaa !2980
  %16 = load i32, i32* %target4, align 4, !dbg !23084, !tbaa !2980
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !23085
  store i32 %call17, i32* %result, align 4, !dbg !23086, !tbaa !2980
  br label %sw.epilog48, !dbg !23087

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !23088, !tbaa !2980
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 11, label %sw.bb18
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !23090

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !23091, !tbaa !2980
  %19 = load i32, i32* %action.addr, align 4, !dbg !23093, !tbaa !2980
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !23094
  store i32 %call19, i32* %result, align 4, !dbg !23095, !tbaa !2980
  br label %sw.epilog, !dbg !23096

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !23097, metadata !DIExpression()), !dbg !23099
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23100
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !23100
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !23100
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !23100
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !23100

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !23100
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !23100
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !23100
  %22 = bitcast i8* %21 to i32*, !dbg !23100
  %23 = add i32 %gp_offset23, 8, !dbg !23100
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !23100
  br label %vaarg.end31, !dbg !23100

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !23100
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !23100
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !23100
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !23100
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !23100
  br label %vaarg.end31, !dbg !23100

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !23100
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !23100
  store i32 %25, i32* %x, align 4, !dbg !23099, !tbaa !2980
  %26 = load i32, i32* %fd.addr, align 4, !dbg !23101, !tbaa !2980
  %27 = load i32, i32* %action.addr, align 4, !dbg !23102, !tbaa !2980
  %28 = load i32, i32* %x, align 4, !dbg !23103, !tbaa !2980
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !23104
  store i32 %call33, i32* %result, align 4, !dbg !23105, !tbaa !2980
  br label %sw.epilog, !dbg !23106

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !23107, metadata !DIExpression()), !dbg !23109
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23110
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !23110
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !23110
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !23110
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !23110

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !23110
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !23110
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !23110
  %31 = bitcast i8* %30 to i8**, !dbg !23110
  %32 = add i32 %gp_offset37, 8, !dbg !23110
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !23110
  br label %vaarg.end45, !dbg !23110

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !23110
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !23110
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !23110
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !23110
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !23110
  br label %vaarg.end45, !dbg !23110

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !23110
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !23110
  store i8* %34, i8** %p, align 8, !dbg !23109, !tbaa !2993
  %35 = load i32, i32* %fd.addr, align 4, !dbg !23111, !tbaa !2980
  %36 = load i32, i32* %action.addr, align 4, !dbg !23112, !tbaa !2980
  %37 = load i8*, i8** %p, align 8, !dbg !23113, !tbaa !2993
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !23114
  store i32 %call47, i32* %result, align 4, !dbg !23115, !tbaa !2980
  br label %sw.epilog, !dbg !23116

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !23117

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !23118
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !23118
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !23118
  %38 = load i32, i32* %result, align 4, !dbg !23119, !tbaa !2980
  ret i32 %38, !dbg !23120
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !23121 !ctir !420 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %target.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23122, metadata !DIExpression()), !dbg !23123
  store i32 %target, i32* %target.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23124, metadata !DIExpression()), !dbg !23125
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23126, metadata !DIExpression()), !dbg !23127
  %0 = load i32, i32* %fd.addr, align 4, !dbg !23128, !tbaa !2980
  %1 = load i32, i32* %target.addr, align 4, !dbg !23129, !tbaa !2980
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !23130
  store i32 %call, i32* %result, align 4, !dbg !23131, !tbaa !2980
  %2 = load i32, i32* %result, align 4, !dbg !23132, !tbaa !2980
  ret i32 %2, !dbg !23133
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1300 !ctir !420 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %target.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !23134, metadata !DIExpression()), !dbg !23135
  store i32 %target, i32* %target.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !23136, metadata !DIExpression()), !dbg !23137
  call void @llvm.dbg.declare(metadata i32* %result, metadata !23138, metadata !DIExpression()), !dbg !23139
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23140, !tbaa !2980
  %cmp = icmp sle i32 0, %0, !dbg !23142
  br i1 %cmp, label %if.then, label %if.else9, !dbg !23143

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !23144, !tbaa !2980
  %2 = load i32, i32* %target.addr, align 4, !dbg !23146, !tbaa !2980
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !23147
  store i32 %call, i32* %result, align 4, !dbg !23148, !tbaa !2980
  %3 = load i32, i32* %result, align 4, !dbg !23149, !tbaa !2980
  %cmp1 = icmp sle i32 0, %3, !dbg !23151
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !23152

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #15, !dbg !23153
  %4 = load i32, i32* %call2, align 4, !dbg !23153, !tbaa !2980, !ctir !5
  %cmp3 = icmp ne i32 %4, 22, !dbg !23154
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !23155

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23156, !tbaa !2980
  br label %if.end8, !dbg !23158

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !23159, !tbaa !2980
  %6 = load i32, i32* %target.addr, align 4, !dbg !23161, !tbaa !2980
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !23162
  store i32 %call5, i32* %result, align 4, !dbg !23163, !tbaa !2980
  %7 = load i32, i32* %result, align 4, !dbg !23164, !tbaa !2980
  %cmp6 = icmp sge i32 %7, 0, !dbg !23166
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !23167

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23168, !tbaa !2980
  br label %if.end, !dbg !23169

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !23170

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !23171, !tbaa !2980
  %9 = load i32, i32* %target.addr, align 4, !dbg !23172, !tbaa !2980
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !23173
  store i32 %call10, i32* %result, align 4, !dbg !23174, !tbaa !2980
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !23175, !tbaa !2980
  %cmp12 = icmp sle i32 0, %10, !dbg !23177
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !23178

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !23179, !tbaa !2980
  %cmp13 = icmp eq i32 %11, -1, !dbg !23180
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !23181

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !23182, metadata !DIExpression()), !dbg !23184
  %12 = load i32, i32* %result, align 4, !dbg !23185, !tbaa !2980
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !23186
  store i32 %call15, i32* %flags, align 4, !dbg !23184, !tbaa !2980
  %13 = load i32, i32* %flags, align 4, !dbg !23187, !tbaa !2980
  %cmp16 = icmp slt i32 %13, 0, !dbg !23189
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !23190

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !23191, !tbaa !2980
  %15 = load i32, i32* %flags, align 4, !dbg !23192, !tbaa !2980
  %or = or i32 %15, 1, !dbg !23193
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !23194
  %cmp19 = icmp eq i32 %call18, -1, !dbg !23195
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !23196

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !23197, metadata !DIExpression()), !dbg !23199
  %call21 = call i32* @__errno_location() #15, !dbg !23200
  %16 = load i32, i32* %call21, align 4, !dbg !23200, !tbaa !2980, !ctir !5
  store i32 %16, i32* %saved_errno, align 4, !dbg !23199, !tbaa !2980
  %17 = load i32, i32* %result, align 4, !dbg !23201, !tbaa !2980
  %call22 = call i32 @close(i32 %17), !dbg !23202
  %18 = load i32, i32* %saved_errno, align 4, !dbg !23203, !tbaa !2980
  %call23 = call i32* @__errno_location() #15, !dbg !23204
  store i32 %18, i32* %call23, align 4, !dbg !23205, !tbaa !2980, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !23206, !tbaa !2980
  br label %if.end24, !dbg !23207

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !23208

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !23209, !tbaa !2980
  ret i32 %19, !dbg !23210
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @rpl_nl_langinfo(i32 %item) #4 !dbg !23211 !ctir !2922 {
entry:
  %item.addr = alloca i32, align 4, !ctir !2924
  store i32 %item, i32* %item.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !23213, metadata !DIExpression()), !dbg !23214
  %0 = load i32, i32* %item.addr, align 4, !dbg !23215, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 10200, label %sw.bb
    i32 10201, label %sw.bb
    i32 10202, label %sw.bb
    i32 10203, label %sw.bb
    i32 10204, label %sw.bb
    i32 10205, label %sw.bb
    i32 10206, label %sw.bb
    i32 10207, label %sw.bb
    i32 10208, label %sw.bb
    i32 10209, label %sw.bb
    i32 10210, label %sw.bb
    i32 10211, label %sw.bb
  ], !dbg !23216

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %item.addr, align 4, !dbg !23217, !tbaa !2980
  %sub = sub nsw i32 %1, 10200, !dbg !23219
  %add = add nsw i32 %sub, 131098, !dbg !23220
  store i32 %add, i32* %item.addr, align 4, !dbg !23221, !tbaa !2980
  br label %sw.epilog, !dbg !23222

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !23223

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %item.addr, align 4, !dbg !23224, !tbaa !2980
  %call = call i8* @nl_langinfo(i32 %2) #12, !dbg !23225
  ret i8* %call, !dbg !23226
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !23227 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23229, metadata !DIExpression()), !dbg !23230
  %0 = load i32, i32* %c.addr, align 4, !dbg !23231, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23232

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23233
  br label %return, !dbg !23233

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23235
  br label %return, !dbg !23235

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23236
  ret i1 %1, !dbg !23236
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !23237 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23238, metadata !DIExpression()), !dbg !23239
  %0 = load i32, i32* %c.addr, align 4, !dbg !23240, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23241

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23242
  br label %return, !dbg !23242

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23244
  br label %return, !dbg !23244

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23245
  ret i1 %1, !dbg !23245
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !23246 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23247, metadata !DIExpression()), !dbg !23248
  %0 = load i32, i32* %c.addr, align 4, !dbg !23249, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23250

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23251
  br label %return, !dbg !23251

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23253
  br label %return, !dbg !23253

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23254
  ret i1 %1, !dbg !23254
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !23255 !ctir !304 {
entry:
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23256, metadata !DIExpression()), !dbg !23257
  %0 = load i32, i32* %c.addr, align 4, !dbg !23258, !tbaa !2980
  %cmp = icmp eq i32 %0, 32, !dbg !23259
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !23260

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23261, !tbaa !2980
  %cmp1 = icmp eq i32 %1, 9, !dbg !23262
  br label %lor.end, !dbg !23260

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !23263
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !23264 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23265, metadata !DIExpression()), !dbg !23266
  %0 = load i32, i32* %c.addr, align 4, !dbg !23267, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !23268

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23269
  br label %return, !dbg !23269

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23271
  br label %return, !dbg !23271

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23272
  ret i1 %1, !dbg !23272
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !23273 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23274, metadata !DIExpression()), !dbg !23275
  %0 = load i32, i32* %c.addr, align 4, !dbg !23276, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !23277

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23278
  br label %return, !dbg !23278

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23280
  br label %return, !dbg !23280

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23281
  ret i1 %1, !dbg !23281
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !23282 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23283, metadata !DIExpression()), !dbg !23284
  %0 = load i32, i32* %c.addr, align 4, !dbg !23285, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23286

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23287
  br label %return, !dbg !23287

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23289
  br label %return, !dbg !23289

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23290
  ret i1 %1, !dbg !23290
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !23291 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23292, metadata !DIExpression()), !dbg !23293
  %0 = load i32, i32* %c.addr, align 4, !dbg !23294, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23295

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23296
  br label %return, !dbg !23296

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23298
  br label %return, !dbg !23298

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23299
  ret i1 %1, !dbg !23299
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !23300 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23301, metadata !DIExpression()), !dbg !23302
  %0 = load i32, i32* %c.addr, align 4, !dbg !23303, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23304

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23305
  br label %return, !dbg !23305

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23307
  br label %return, !dbg !23307

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23308
  ret i1 %1, !dbg !23308
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !23309 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23310, metadata !DIExpression()), !dbg !23311
  %0 = load i32, i32* %c.addr, align 4, !dbg !23312, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !23313

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23314
  br label %return, !dbg !23314

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23316
  br label %return, !dbg !23316

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23317
  ret i1 %1, !dbg !23317
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !23318 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23319, metadata !DIExpression()), !dbg !23320
  %0 = load i32, i32* %c.addr, align 4, !dbg !23321, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !23322

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23323
  br label %return, !dbg !23323

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23325
  br label %return, !dbg !23325

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23326
  ret i1 %1, !dbg !23326
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !23327 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23328, metadata !DIExpression()), !dbg !23329
  %0 = load i32, i32* %c.addr, align 4, !dbg !23330, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23331

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23332
  br label %return, !dbg !23332

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23334
  br label %return, !dbg !23334

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23335
  ret i1 %1, !dbg !23335
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !23336 !ctir !304 {
entry:
  %retval = alloca i1, align 1, !ctir !117
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23337, metadata !DIExpression()), !dbg !23338
  %0 = load i32, i32* %c.addr, align 4, !dbg !23339, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !23340

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !23341
  br label %return, !dbg !23341

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !23343
  br label %return, !dbg !23343

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !23344
  ret i1 %1, !dbg !23344
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !23345 !ctir !1828 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23346, metadata !DIExpression()), !dbg !23347
  %0 = load i32, i32* %c.addr, align 4, !dbg !23348, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !23349

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23350, !tbaa !2980
  %sub = sub nsw i32 %1, 65, !dbg !23352
  %add = add nsw i32 %sub, 97, !dbg !23353
  store i32 %add, i32* %retval, align 4, !dbg !23354
  br label %return, !dbg !23354

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23355, !tbaa !2980
  store i32 %2, i32* %retval, align 4, !dbg !23356
  br label %return, !dbg !23356

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23357
  ret i32 %3, !dbg !23357
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !23358 !ctir !1828 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2980
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !23359, metadata !DIExpression()), !dbg !23360
  %0 = load i32, i32* %c.addr, align 4, !dbg !23361, !tbaa !2980
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !23362

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !23363, !tbaa !2980
  %sub = sub nsw i32 %1, 97, !dbg !23365
  %add = add nsw i32 %sub, 65, !dbg !23366
  store i32 %add, i32* %retval, align 4, !dbg !23367
  br label %return, !dbg !23367

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !23368, !tbaa !2980
  store i32 %2, i32* %retval, align 4, !dbg !23369
  br label %return, !dbg !23369

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !23370
  ret i32 %3, !dbg !23370
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !23371 !ctir !2932 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8, !ctir !2934
  %file.addr = alloca i8*, align 8, !ctir !112
  %mode.addr = alloca i8*, align 8, !ctir !112
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2934
  %fd = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  %e15 = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !23373, metadata !DIExpression()), !dbg !23374
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2993
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !23375, metadata !DIExpression()), !dbg !23376
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !23377, metadata !DIExpression()), !dbg !23378
  %0 = load i8*, i8** %file.addr, align 8, !dbg !23379, !tbaa !2993
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !23380, !tbaa !2993
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !23381
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !23378, !tbaa !2993
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23382, !tbaa !2993
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !23382
  br i1 %tobool, label %if.then, label %if.end21, !dbg !23384

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !23385, metadata !DIExpression()), !dbg !23387
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23388, !tbaa !2993
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #12, !dbg !23389
  store i32 %call1, i32* %fd, align 4, !dbg !23387, !tbaa !2980
  %4 = load i32, i32* %fd, align 4, !dbg !23390, !tbaa !2980
  %cmp = icmp sle i32 0, %4, !dbg !23392
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !23393

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !23394, !tbaa !2980
  %cmp2 = icmp sle i32 %5, 2, !dbg !23395
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !23396

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !23397, metadata !DIExpression()), !dbg !23399
  %6 = load i32, i32* %fd, align 4, !dbg !23400, !tbaa !2980
  %call4 = call i32 @dup_safer(i32 %6), !dbg !23401
  store i32 %call4, i32* %f, align 4, !dbg !23399, !tbaa !2980
  %7 = load i32, i32* %f, align 4, !dbg !23402, !tbaa !2980
  %cmp5 = icmp slt i32 %7, 0, !dbg !23404
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !23405

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !23406, metadata !DIExpression()), !dbg !23408
  %call7 = call i32* @__errno_location() #15, !dbg !23409
  %8 = load i32, i32* %call7, align 4, !dbg !23409, !tbaa !2980, !ctir !5
  store i32 %8, i32* %e, align 4, !dbg !23408, !tbaa !2980
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23410, !tbaa !2993
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !23411
  %10 = load i32, i32* %e, align 4, !dbg !23412, !tbaa !2980
  %call9 = call i32* @__errno_location() #15, !dbg !23413
  store i32 %10, i32* %call9, align 4, !dbg !23414, !tbaa !2980, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !23415
  br label %return, !dbg !23415

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23416, !tbaa !2993
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !23418
  %cmp11 = icmp ne i32 %call10, 0, !dbg !23419
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !23420

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !23421, !tbaa !2980
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !23422, !tbaa !2993
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #12, !dbg !23423
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !23424, !tbaa !2993
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !23424
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !23425

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !23426, metadata !DIExpression()), !dbg !23428
  %call16 = call i32* @__errno_location() #15, !dbg !23429
  %14 = load i32, i32* %call16, align 4, !dbg !23429, !tbaa !2980, !ctir !5
  store i32 %14, i32* %e15, align 4, !dbg !23428, !tbaa !2980
  %15 = load i32, i32* %f, align 4, !dbg !23430, !tbaa !2980
  %call17 = call i32 @close(i32 %15), !dbg !23431
  %16 = load i32, i32* %e15, align 4, !dbg !23432, !tbaa !2980
  %call18 = call i32* @__errno_location() #15, !dbg !23433
  store i32 %16, i32* %call18, align 4, !dbg !23434, !tbaa !2980, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !23435
  br label %return, !dbg !23435

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !23436

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !23437

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !23438, !tbaa !2993
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !23439
  br label %return, !dbg !23439

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !23440
  ret %struct._IO_FILE* %18, !dbg !23440
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind readnone }
attributes #16 = { noreturn }

!llvm.dbg.cu = !{!62, !1316, !241, !501, !1523, !527, !1572, !560, !1574, !1579, !1584, !566, !1590, !603, !1593, !626, !672, !1598, !1601, !1606, !1609, !721, !1614, !1672, !1686, !1725, !1753, !1785, !1790, !1793, !728, !1798, !1809, !1814, !869, !1819, !1821, !914, !1823, !1830, !1840, !1843, !1055, !1850, !1879, !1912, !1098, !1939, !1149, !1169, !1942, !1222, !1236, !2006, !2023, !2026, !2124, !2165, !2212, !2257, !2302, !2496, !2513, !2523, !2532, !1244, !2541, !2556, !2559, !2605, !2647, !2652, !2664, !2667, !2670, !2692, !2696, !2710, !2741, !2847, !2867, !2869, !2874, !1302, !2919, !2926, !2929}
!llvm.ident = !{}
!llvm.module.flags = !{!2975, !2976, !2977, !2978}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !3)
!2 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!3 = !{!4, !6, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !26, !27, !28, !29, !33, !35, !37, !41, !44, !46, !48, !49, !50, !51, !55, !56}
!4 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1, file: !2, line: 242, baseType: !5, size: 32)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1, file: !2, line: 260, baseType: !20, size: 64, offset: 768)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !22)
!22 = !{!23, !24, !25}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21, file: !2, line: 157, baseType: !20, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21, file: !2, line: 158, baseType: !0, size: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1, file: !2, line: 262, baseType: !0, size: 64, offset: 832)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 131, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!32 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!34 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!36 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 1)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2, line: 150, baseType: null)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 132, baseType: !32)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !53, line: 46, baseType: !54)
!53 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mohamad/clone")
!54 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 160, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 20)
!60 = !DIGlobalVariableExpression(var: !61, expr: !DIExpression())
!61 = distinct !DIGlobalVariable(name: "long_options", scope: !62, file: !63, line: 56, type: !118, isLocal: true, isDefinition: true)
!62 = distinct !DICompileUnit(language: DW_LANG_C99, file: !63, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !64, retainedTypes: !109, globals: !233, nameTableKind: None)
!63 = !DIFile(filename: "src/mv.c", directory: "/home/mohamad/clone/coreutils")
!64 = !{!65, !73, !80, !86, !92, !97, !103}
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !66, line: 30, baseType: !67, size: 32, elements: !68)
!66 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mohamad/clone/coreutils")
!67 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!68 = !{!69, !70, !71, !72}
!69 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !74, line: 69, baseType: !67, size: 32, elements: !75)
!74 = !DIFile(filename: "src/copy.h", directory: "/home/mohamad/clone/coreutils")
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !74, line: 60, baseType: !67, size: 32, elements: !81)
!81 = !{!82, !83, !84, !85}
!82 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!85 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !74, line: 26, baseType: !67, size: 32, elements: !87)
!87 = !{!88, !89, !90, !91}
!88 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !74, line: 47, baseType: !67, size: 32, elements: !93)
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rm_interactive", file: !98, line: 23, baseType: !67, size: 32, elements: !99)
!98 = !DIFile(filename: "src/remove.h", directory: "/home/mohamad/clone/coreutils")
!99 = !{!100, !101, !102}
!100 = !DIEnumerator(name: "RMI_ALWAYS", value: 3, isUnsigned: true)
!101 = !DIEnumerator(name: "RMI_SOMETIMES", value: 4, isUnsigned: true)
!102 = !DIEnumerator(name: "RMI_NEVER", value: 5, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "RM_status", file: !98, line: 78, baseType: !67, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108}
!105 = !DIEnumerator(name: "RM_OK", value: 2, isUnsigned: true)
!106 = !DIEnumerator(name: "RM_USER_DECLINED", value: 3, isUnsigned: true)
!107 = !DIEnumerator(name: "RM_ERROR", value: 4, isUnsigned: true)
!108 = !DIEnumerator(name: "RM_NONEMPTY_DIR", value: 5, isUnsigned: true)
!109 = !{!7, !47, !110, !5, !0, !112, !114, !116, !117, !118, !130, !131, !133, !135, !146, !147, !149, !157, !192, !197, !199, !201, !203, !205, !208, !210, !219}
!110 = !DISubroutineType(types: !111)
!111 = !{null, !5}
!112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!114 = !DISubroutineType(types: !115)
!115 = !{!5, !5, !116}
!116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!117 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!118 = !DICompositeType(tag: DW_TAG_array_type, baseType: !119, size: 3584, elements: !128)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !121, line: 104, size: 256, elements: !122)
!121 = !DIFile(filename: "/usr/include/getopt.h", directory: "")
!122 = !{!123, !124, !125, !127}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !120, file: !121, line: 106, baseType: !112, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !120, file: !121, line: 109, baseType: !5, size: 32, offset: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !120, file: !121, line: 110, baseType: !126, size: 64, offset: 128)
!126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !120, file: !121, line: 111, baseType: !5, size: 32, offset: 192)
!128 = !{!129}
!129 = !DISubrange(count: 14)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !31, line: 129, baseType: !67)
!131 = !DISubroutineType(types: !132)
!132 = !{null}
!133 = !DISubroutineType(types: !134)
!134 = !{null, !112}
!135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !136, size: 896, elements: !144)
!136 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !139, file: !138, line: 633, size: 128, elements: !141)
!138 = !DIFile(filename: "src/system.h", directory: "/home/mohamad/clone/coreutils")
!139 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !138, file: !138, line: 631, type: !133, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!140 = !{}
!141 = !{!142, !143}
!142 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !137, file: !138, line: 633, baseType: !112, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !137, file: !138, line: 633, baseType: !112, size: 64, offset: 64)
!144 = !{!145}
!145 = !DISubrange(count: 7)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!147 = !DISubroutineType(types: !148)
!148 = !{null, !149}
!149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 64)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !151)
!151 = !{!152, !153, !154, !155, !156, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !196}
!152 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !150, file: !74, line: 100, baseType: !65, size: 32)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !150, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !150, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !150, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !150, file: !74, line: 115, baseType: !157, size: 32, offset: 128)
!157 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !158, line: 70, baseType: !130)
!158 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!159 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !150, file: !74, line: 119, baseType: !117, size: 8, offset: 160)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !150, file: !74, line: 123, baseType: !117, size: 8, offset: 168)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !150, file: !74, line: 130, baseType: !117, size: 8, offset: 176)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !150, file: !74, line: 134, baseType: !117, size: 8, offset: 184)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !150, file: !74, line: 138, baseType: !117, size: 8, offset: 192)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !150, file: !74, line: 141, baseType: !117, size: 8, offset: 200)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !150, file: !74, line: 145, baseType: !117, size: 8, offset: 208)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !150, file: !74, line: 152, baseType: !117, size: 8, offset: 216)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !150, file: !74, line: 156, baseType: !117, size: 8, offset: 224)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !150, file: !74, line: 160, baseType: !117, size: 8, offset: 232)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !150, file: !74, line: 161, baseType: !117, size: 8, offset: 240)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !150, file: !74, line: 162, baseType: !117, size: 8, offset: 248)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !150, file: !74, line: 163, baseType: !117, size: 8, offset: 256)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !150, file: !74, line: 166, baseType: !117, size: 8, offset: 264)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !150, file: !74, line: 178, baseType: !117, size: 8, offset: 272)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !150, file: !74, line: 182, baseType: !117, size: 8, offset: 280)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !150, file: !74, line: 188, baseType: !117, size: 8, offset: 288)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !150, file: !74, line: 192, baseType: !117, size: 8, offset: 296)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !150, file: !74, line: 201, baseType: !117, size: 8, offset: 304)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !150, file: !74, line: 205, baseType: !117, size: 8, offset: 312)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !150, file: !74, line: 214, baseType: !117, size: 8, offset: 320)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !150, file: !74, line: 223, baseType: !117, size: 8, offset: 328)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !150, file: !74, line: 227, baseType: !117, size: 8, offset: 336)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !150, file: !74, line: 231, baseType: !117, size: 8, offset: 344)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !150, file: !74, line: 235, baseType: !117, size: 8, offset: 352)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !150, file: !74, line: 239, baseType: !117, size: 8, offset: 360)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !150, file: !74, line: 242, baseType: !117, size: 8, offset: 368)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !150, file: !74, line: 245, baseType: !117, size: 8, offset: 376)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !150, file: !74, line: 250, baseType: !117, size: 8, offset: 384)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !150, file: !74, line: 254, baseType: !117, size: 8, offset: 392)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !150, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !150, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !150, file: !74, line: 273, baseType: !192, size: 64, offset: 512)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !193, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !194, line: 69, baseType: !195)
!194 = !DIFile(filename: "./lib/hash.h", directory: "/home/mohamad/clone/coreutils")
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !194, line: 67, flags: DIFlagFwdDecl)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !150, file: !74, line: 276, baseType: !192, size: 64, offset: 576)
!197 = !DISubroutineType(types: !198)
!198 = !{!117, !112}
!199 = !DISubroutineType(types: !200)
!200 = !{!117, !7, !7, !117, !201}
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !150)
!203 = !DISubroutineType(types: !204)
!204 = !{!117, !112, !112, !201}
!205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !112, size: 128, elements: !206)
!206 = !{!207}
!207 = !DISubrange(count: 2)
!208 = !DISubroutineType(types: !209)
!209 = !{null, !210}
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !98, line: 32, size: 256, elements: !212)
!212 = !{!213, !214, !215, !216, !217, !218, !229, !230, !231, !232}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !211, file: !98, line: 35, baseType: !117, size: 8)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !211, file: !98, line: 38, baseType: !97, size: 32, offset: 32)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !211, file: !98, line: 47, baseType: !117, size: 8, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !211, file: !98, line: 50, baseType: !117, size: 8, offset: 72)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !211, file: !98, line: 53, baseType: !117, size: 8, offset: 80)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !211, file: !98, line: 57, baseType: !219, size: 64, offset: 128)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !221, line: 7, size: 128, elements: !222)
!221 = !DIFile(filename: "./lib/dev-ino.h", directory: "/home/mohamad/clone/coreutils")
!222 = !{!223, !226}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !220, file: !221, line: 9, baseType: !224, size: 64)
!224 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !158, line: 48, baseType: !225)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !31, line: 127, baseType: !54)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !220, file: !221, line: 10, baseType: !227, size: 64, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !158, line: 60, baseType: !228)
!228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !31, line: 124, baseType: !54)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !211, file: !98, line: 61, baseType: !117, size: 8, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !211, file: !98, line: 64, baseType: !117, size: 8, offset: 200)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !211, file: !98, line: 67, baseType: !117, size: 8, offset: 208)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !211, file: !98, line: 75, baseType: !117, size: 8, offset: 216)
!233 = !{!234, !60, !236}
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(name: "remove_trailing_slashes", scope: !62, file: !63, line: 54, type: !117, isLocal: true, isDefinition: true)
!236 = !DIGlobalVariableExpression(var: !237, expr: !DIExpression())
!237 = distinct !DIGlobalVariable(name: "dev_ino_buf", scope: !238, file: !63, line: 96, type: !220, isLocal: true, isDefinition: true)
!238 = distinct !DISubprogram(name: "rm_option_init", scope: !63, file: !63, line: 75, type: !208, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !241, file: !242, line: 147, type: !112, isLocal: true, isDefinition: true)
!241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !243, retainedTypes: !244, globals: !483, nameTableKind: None)
!242 = !DIFile(filename: "src/copy.c", directory: "/home/mohamad/clone/coreutils")
!243 = !{!65, !73, !80, !86, !92}
!244 = !{!157, !47, !67, !7, !54, !52, !245, !247, !117, !112, !249, !5, !292, !294, !296, !192, !297, !299, !300, !302, !304, !306, !308, !310, !312, !347, !130, !228, !225, !320, !353, !224, !227, !113, !30, !323, !325, !354, !355, !357, !359, !361, !363, !365, !367, !370, !197, !8, !408, !410, !412, !414, !416, !418, !330, !420, !422, !424, !332, !426, !428, !430, !432, !439, !441, !451, !453, !455, !457, !459, !461, !462, !464, !466, !468, !467, !469, !131, !471, !473, !475, !477, !478, !479, !481}
!245 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !246, line: 90, baseType: !30)
!246 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!247 = !DISubroutineType(types: !248)
!248 = !{!117, !112, !112, !157, !117, !249}
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !251)
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !252)
!252 = !{!253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !251, file: !74, line: 100, baseType: !65, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !251, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !251, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !251, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !251, file: !74, line: 115, baseType: !157, size: 32, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !251, file: !74, line: 119, baseType: !117, size: 8, offset: 160)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !251, file: !74, line: 123, baseType: !117, size: 8, offset: 168)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !251, file: !74, line: 130, baseType: !117, size: 8, offset: 176)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !251, file: !74, line: 134, baseType: !117, size: 8, offset: 184)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !251, file: !74, line: 138, baseType: !117, size: 8, offset: 192)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !251, file: !74, line: 141, baseType: !117, size: 8, offset: 200)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !251, file: !74, line: 145, baseType: !117, size: 8, offset: 208)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !251, file: !74, line: 152, baseType: !117, size: 8, offset: 216)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !251, file: !74, line: 156, baseType: !117, size: 8, offset: 224)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !251, file: !74, line: 160, baseType: !117, size: 8, offset: 232)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !251, file: !74, line: 161, baseType: !117, size: 8, offset: 240)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !251, file: !74, line: 162, baseType: !117, size: 8, offset: 248)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !251, file: !74, line: 163, baseType: !117, size: 8, offset: 256)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !251, file: !74, line: 166, baseType: !117, size: 8, offset: 264)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !251, file: !74, line: 178, baseType: !117, size: 8, offset: 272)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !251, file: !74, line: 182, baseType: !117, size: 8, offset: 280)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !251, file: !74, line: 188, baseType: !117, size: 8, offset: 288)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !251, file: !74, line: 192, baseType: !117, size: 8, offset: 296)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !251, file: !74, line: 201, baseType: !117, size: 8, offset: 304)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !251, file: !74, line: 205, baseType: !117, size: 8, offset: 312)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !251, file: !74, line: 214, baseType: !117, size: 8, offset: 320)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !251, file: !74, line: 223, baseType: !117, size: 8, offset: 328)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !251, file: !74, line: 227, baseType: !117, size: 8, offset: 336)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !251, file: !74, line: 231, baseType: !117, size: 8, offset: 344)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !251, file: !74, line: 235, baseType: !117, size: 8, offset: 352)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !251, file: !74, line: 239, baseType: !117, size: 8, offset: 360)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !251, file: !74, line: 242, baseType: !117, size: 8, offset: 368)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !251, file: !74, line: 245, baseType: !117, size: 8, offset: 376)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !251, file: !74, line: 250, baseType: !117, size: 8, offset: 384)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !251, file: !74, line: 254, baseType: !117, size: 8, offset: 392)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !251, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !251, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !251, file: !74, line: 273, baseType: !192, size: 64, offset: 512)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !251, file: !74, line: 276, baseType: !192, size: 64, offset: 576)
!292 = !DISubroutineType(types: !293)
!293 = !{!117, !112, !117, !117, !249}
!294 = !DISubroutineType(types: !295)
!295 = !{null, !296}
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{!117, !112, !112, !117, !249, !299, !299}
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!117, !249}
!302 = !DISubroutineType(types: !303)
!303 = !{!157}
!304 = !DISubroutineType(types: !305)
!305 = !{!117, !5}
!306 = !DISubroutineType(types: !307)
!307 = !{!5, !112, !157}
!308 = !DISubroutineType(types: !309)
!309 = !{!117, !112, !117, !117}
!310 = !DISubroutineType(types: !311)
!311 = !{!117, !112, !112, !117, !312, !347, !249, !117, !299, !299, !299}
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !314)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !316)
!315 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!316 = !{!317, !318, !319, !321, !322, !324, !326, !327, !328, !329, !331, !333, !341, !342, !343}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !314, file: !315, line: 48, baseType: !228, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !314, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !314, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !31, line: 130, baseType: !54)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !314, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !314, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !31, line: 125, baseType: !67)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !314, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !31, line: 126, baseType: !67)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !314, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !314, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !314, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !314, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!330 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !31, line: 153, baseType: !32)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !314, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !31, line: 158, baseType: !32)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !314, file: !315, line: 91, baseType: !334, size: 128, offset: 576)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !336)
!335 = !DIFile(filename: "/usr/include/time.h", directory: "")
!336 = !{!337, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !334, file: !335, line: 122, baseType: !338, size: 64)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !31, line: 139, baseType: !32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !334, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !31, line: 175, baseType: !32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !314, file: !315, line: 92, baseType: !334, size: 128, offset: 704)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !314, file: !315, line: 93, baseType: !334, size: 128, offset: 832)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !314, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !340, size: 192, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 3)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !242, line: 125, size: 192, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !348, file: !242, line: 127, baseType: !347, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !348, file: !242, line: 128, baseType: !224, size: 64, offset: 64)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !348, file: !242, line: 129, baseType: !227, size: 64, offset: 128)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !334, size: 256, elements: !206)
!355 = !DISubroutineType(types: !356)
!356 = !{!5, !5, !112, !353, !5}
!357 = !DISubroutineType(types: !358)
!358 = !{!117, !249, !117}
!359 = !DISubroutineType(types: !360)
!360 = !{!117, !112, !312, !112, !312, !249, !299}
!361 = !DISubroutineType(types: !362)
!362 = !{!117, !112, !112, !117, !117, !117}
!363 = !DISubroutineType(types: !364)
!364 = !{!117, !249, !112, !312}
!365 = !DISubroutineType(types: !366)
!366 = !{!117, !112, !157}
!367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !368)
!368 = !{!369}
!369 = !DISubrange(count: 12)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !372)
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !371, file: !2, line: 242, baseType: !5, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !371, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !371, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !371, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !371, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !371, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !371, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !371, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !371, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !371, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !371, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !371, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !371, file: !2, line: 260, baseType: !386, size: 64, offset: 768)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !388)
!388 = !{!389, !390, !391}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !387, file: !2, line: 157, baseType: !386, size: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !387, file: !2, line: 158, baseType: !370, size: 64, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !387, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !371, file: !2, line: 262, baseType: !370, size: 64, offset: 832)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !371, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !371, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !371, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !371, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !371, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !371, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !371, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !371, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !371, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !371, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !371, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !371, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !371, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !371, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !371, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!408 = !DISubroutineType(types: !409)
!409 = !{!117, !112, !312, !112}
!410 = !DISubroutineType(types: !411)
!411 = !{null, !112, !112, !112}
!412 = !DISubroutineType(types: !413)
!413 = !{!117, !312, !414}
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!416 = !DISubroutineType(types: !417)
!417 = !{!117, !112, !112, !117, !312, !347, !249, !299, !299}
!418 = !DISubroutineType(types: !419)
!419 = !{!117, !112, !112, !249, !157, !157, !299, !312}
!420 = !DISubroutineType(types: !421)
!421 = !{!5, !5, !5}
!422 = !DISubroutineType(types: !423)
!423 = !{!52, !314}
!424 = !DISubroutineType(types: !425)
!425 = !{!117, !312}
!426 = !DISubroutineType(types: !427)
!427 = !{!47, !428, !52}
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!430 = !DISubroutineType(types: !431)
!431 = !{!117, !5, !5, !7, !52, !52, !245, !86, !112, !112, !299}
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !434, line: 23, size: 192, elements: !435)
!434 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mohamad/clone/coreutils")
!435 = !{!436, !437, !438}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !433, file: !434, line: 26, baseType: !245, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !433, file: !434, line: 29, baseType: !245, size: 64, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !433, file: !434, line: 32, baseType: !67, size: 32, offset: 128)
!439 = !DISubroutineType(types: !440)
!440 = !{null, !441}
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !434, line: 36, size: 384, elements: !443)
!443 = !{!444, !445, !446, !447, !448, !449, !450}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !442, file: !434, line: 39, baseType: !5, size: 32)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !442, file: !434, line: 42, baseType: !245, size: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !442, file: !434, line: 45, baseType: !67, size: 32, offset: 128)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !442, file: !434, line: 48, baseType: !52, size: 64, offset: 192)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !442, file: !434, line: 52, baseType: !117, size: 8, offset: 256)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !442, file: !434, line: 55, baseType: !117, size: 8, offset: 264)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !442, file: !434, line: 58, baseType: !432, size: 64, offset: 320)
!451 = !DISubroutineType(types: !452)
!452 = !{!117, !5, !112, !117, !245}
!453 = !DISubroutineType(types: !454)
!454 = !{!117, !5, !245}
!455 = !DISubroutineType(types: !456)
!456 = !{!5, !5, !245, !245}
!457 = !DISubroutineType(types: !458)
!458 = !{!117, !5, !5, !7, !52, !52, !117, !112, !112, !459, !461, !299}
!459 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !460, line: 135, baseType: !54)
!460 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !246, line: 102, baseType: !463)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 172, baseType: !32)
!464 = !DISubroutineType(types: !465)
!465 = !{!117, !428, !52}
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!468 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!469 = !DISubroutineType(types: !470)
!470 = !{!5, !5, !112, !157}
!471 = !DISubroutineType(types: !472)
!472 = !{!5, !112, !473}
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !334)
!475 = !DISubroutineType(types: !476)
!476 = !{!5, !249, !112, !5, !312, !117, !312}
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !158, line: 80, baseType: !323)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !158, line: 65, baseType: !325)
!479 = !DISubroutineType(types: !480)
!480 = !{!117, !112, !5, !112, !5, !249}
!481 = !DISubroutineType(types: !482)
!482 = !{null, !112, !5, !312}
!483 = !{!484, !239, !487, !489, !492, !494}
!484 = !DIGlobalVariableExpression(var: !485, expr: !DIExpression())
!485 = distinct !DIGlobalVariable(name: "mask", scope: !486, file: !242, line: 3089, type: !157, isLocal: true, isDefinition: true)
!486 = distinct !DISubprogram(name: "cached_umask", scope: !242, file: !242, line: 3087, type: !302, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !241, file: !242, line: 148, type: !112, isLocal: true, isDefinition: true)
!489 = !DIGlobalVariableExpression(var: !490, expr: !DIExpression())
!490 = distinct !DIGlobalVariable(name: "zeros", scope: !491, file: !242, line: 387, type: !7, isLocal: true, isDefinition: true)
!491 = distinct !DISubprogram(name: "write_zeros", scope: !242, file: !242, line: 385, type: !453, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!492 = !DIGlobalVariableExpression(var: !493, expr: !DIExpression())
!493 = distinct !DIGlobalVariable(name: "nz", scope: !491, file: !242, line: 388, type: !52, isLocal: true, isDefinition: true)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "fallback", scope: !491, file: !242, line: 395, type: !496, isLocal: true, isDefinition: true)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8192, elements: !497)
!497 = !{!498}
!498 = !DISubrange(count: 1024)
!499 = !DIGlobalVariableExpression(var: !500, expr: !DIExpression())
!500 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !501, file: !502, line: 45, type: !192, isLocal: true, isDefinition: true)
!501 = distinct !DICompileUnit(language: DW_LANG_C99, file: !502, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !503, globals: !524, nameTableKind: None)
!502 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mohamad/clone/coreutils")
!503 = !{!47, !7, !459, !504, !224, !227, !506, !192, !512, !514, !516, !112, !131, !518, !520, !52, !428, !522, !117}
!504 = !DISubroutineType(types: !505)
!505 = !{null, !224, !227}
!506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !502, line: 33, size: 192, elements: !508)
!508 = !{!509, !510, !511}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !507, file: !502, line: 35, baseType: !224, size: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !507, file: !502, line: 36, baseType: !227, size: 64, offset: 64)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !507, file: !502, line: 40, baseType: !7, size: 64, offset: 128)
!512 = !DISubroutineType(types: !513)
!513 = !{!7, !224, !227}
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !507)
!516 = !DISubroutineType(types: !517)
!517 = !{!7, !112, !224, !227}
!518 = !DISubroutineType(types: !519)
!519 = !{null, !47}
!520 = !DISubroutineType(types: !521)
!521 = !{!52, !428, !52}
!522 = !DISubroutineType(types: !523)
!523 = !{!117, !428, !428}
!524 = !{!499}
!525 = !DIGlobalVariableExpression(var: !526, expr: !DIExpression())
!526 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !527, file: !528, line: 38, type: !540, isLocal: true, isDefinition: true)
!527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !528, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !529, globals: !557, nameTableKind: None)
!528 = !DIFile(filename: "src/force-link.c", directory: "/home/mohamad/clone/coreutils")
!529 = !{!530, !5, !112, !117, !532, !7, !535, !537, !539, !52, !540, !543, !47, !545, !552}
!530 = !DISubroutineType(types: !531)
!531 = !{!5, !5, !112, !5, !112, !5, !117, !5}
!532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2048, elements: !533)
!533 = !{!534}
!534 = !DISubrange(count: 256)
!535 = !DISubroutineType(types: !536)
!536 = !{!5, !112, !5, !112, !117, !5}
!537 = !DISubroutineType(types: !538)
!538 = !{!7, !112, !7}
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !53, line: 35, baseType: !32)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 72, elements: !541)
!541 = !{!542}
!542 = !DISubrange(count: 9)
!543 = !DISubroutineType(types: !544)
!544 = !{!5, !7, !47}
!545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !546, size: 64)
!546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !528, line: 71, size: 192, elements: !547)
!547 = !{!548, !549, !550, !551}
!548 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !546, file: !528, line: 73, baseType: !5, size: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !546, file: !528, line: 74, baseType: !112, size: 64, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !546, file: !528, line: 75, baseType: !5, size: 32, offset: 128)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !546, file: !528, line: 76, baseType: !5, size: 32, offset: 160)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !528, line: 131, size: 128, elements: !554)
!554 = !{!555, !556}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !553, file: !528, line: 133, baseType: !112, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !553, file: !528, line: 134, baseType: !5, size: 32, offset: 64)
!557 = !{!525}
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "Version", scope: !560, file: !561, line: 2, type: !112, isLocal: false, isDefinition: true)
!560 = distinct !DICompileUnit(language: DW_LANG_C99, file: !561, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !562, globals: !563, nameTableKind: None)
!561 = !DIFile(filename: "src/version.c", directory: "/home/mohamad/clone/coreutils")
!562 = !{!112}
!563 = !{!558}
!564 = !DIGlobalVariableExpression(var: !565, expr: !DIExpression())
!565 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !566, file: !570, line: 82, type: !112, isLocal: false, isDefinition: true)
!566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !567, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !568, retainedTypes: !576, globals: !600, nameTableKind: None)
!567 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!568 = !{!65, !569}
!569 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !570, line: 172, baseType: !67, size: 32, elements: !571)
!570 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!571 = !{!572, !573, !574, !575}
!572 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!573 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!574 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!575 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!576 = !{!47, !67, !52, !112, !133, !113, !577, !7, !5, !117, !539, !579, !580, !584, !116, !586, !126, !587, !596, !8, !597, !599, !32}
!577 = !DISubroutineType(types: !578)
!578 = !{!7, !5, !112, !65, !117}
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !158, line: 109, baseType: !463)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !582, line: 127, baseType: !583)
!582 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!583 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !582, line: 127, flags: DIFlagFwdDecl)
!584 = !DISubroutineType(types: !585)
!585 = !{!569, !5, !116, !52, !52, !539, !586, !126}
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !589, line: 22, size: 2240, elements: !590)
!589 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!590 = !{!591, !592, !593, !594, !595}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !588, file: !589, line: 25, baseType: !225, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !588, file: !589, line: 26, baseType: !30, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !588, file: !589, line: 31, baseType: !34, size: 16, offset: 128)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !588, file: !589, line: 32, baseType: !468, size: 8, offset: 144)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !588, file: !589, line: 33, baseType: !532, size: 2048, offset: 152)
!596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 16, elements: !206)
!597 = !DISubroutineType(types: !598)
!598 = !{null, !7, !52, !8, !5, !599}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!600 = !{!564}
!601 = !DIGlobalVariableExpression(var: !602, expr: !DIExpression())
!602 = distinct !DIGlobalVariable(name: "backup_args", scope: !603, file: !623, line: 42, type: !615, isLocal: true, isDefinition: true)
!603 = distinct !DICompileUnit(language: DW_LANG_C99, file: !604, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !605, retainedTypes: !606, globals: !620, nameTableKind: None)
!604 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!605 = !{!65}
!606 = !{!428, !607, !7, !5, !112, !609, !113, !611, !615, !617}
!607 = !DISubroutineType(types: !608)
!608 = !{!7, !5, !112, !65}
!609 = !DISubroutineType(types: !610)
!610 = !{!65, !112, !112}
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !612, size: 256, elements: !613)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!613 = !{!614}
!614 = !DISubrange(count: 8)
!615 = !DICompositeType(tag: DW_TAG_array_type, baseType: !616, size: 576, elements: !541)
!616 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !112)
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !618, line: 61, baseType: !619)
!618 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mohamad/clone/coreutils")
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !131, size: 64)
!620 = !{!621, !601}
!621 = !DIGlobalVariableExpression(var: !622, expr: !DIExpression())
!622 = distinct !DIGlobalVariable(name: "backup_types", scope: !603, file: !623, line: 53, type: !611, isLocal: true, isDefinition: true)
!623 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!624 = !DIGlobalVariableExpression(var: !625, expr: !DIExpression())
!625 = distinct !DIGlobalVariable(name: "file_name", scope: !626, file: !669, line: 37, type: !112, isLocal: true, isDefinition: true)
!626 = distinct !DICompileUnit(language: DW_LANG_C99, file: !627, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !628, globals: !668, nameTableKind: None)
!627 = !DIFile(filename: "./lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!628 = !{!133, !112, !131, !117, !629, !5, !667}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !631)
!631 = !{!632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !630, file: !2, line: 242, baseType: !5, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !630, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !630, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !630, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !630, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !630, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !630, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !630, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !630, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !630, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !630, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !630, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !630, file: !2, line: 260, baseType: !645, size: 64, offset: 768)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !647)
!647 = !{!648, !649, !650}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !646, file: !2, line: 157, baseType: !645, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !646, file: !2, line: 158, baseType: !629, size: 64, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !646, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !630, file: !2, line: 262, baseType: !629, size: 64, offset: 832)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !630, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !630, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !630, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !630, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !630, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !630, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !630, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !630, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !630, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !630, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !630, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !630, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !630, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !630, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !630, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!667 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5)
!668 = !{!624}
!669 = !DIFile(filename: "lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!670 = !DIGlobalVariableExpression(var: !671, expr: !DIExpression())
!671 = distinct !DIGlobalVariable(name: "file_name", scope: !672, file: !718, line: 46, type: !112, isLocal: true, isDefinition: true)
!672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !673, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !674, globals: !715, nameTableKind: None)
!673 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!674 = !{!133, !112, !675, !117, !131, !677, !5, !667}
!675 = !DISubroutineType(types: !676)
!676 = !{null, !117}
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !679)
!679 = !{!680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !678, file: !2, line: 242, baseType: !5, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !678, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !678, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !678, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !678, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !678, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !678, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !678, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !678, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !678, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !678, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !678, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !678, file: !2, line: 260, baseType: !693, size: 64, offset: 768)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !695)
!695 = !{!696, !697, !698}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !694, file: !2, line: 157, baseType: !693, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !694, file: !2, line: 158, baseType: !677, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !694, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !678, file: !2, line: 262, baseType: !677, size: 64, offset: 832)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !678, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !678, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !678, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !678, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !678, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !678, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !678, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !678, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !678, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !678, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !678, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !678, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !678, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !678, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !678, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!715 = !{!670, !716}
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !672, file: !718, line: 56, type: !117, isLocal: true, isDefinition: true)
!718 = !DIFile(filename: "lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "exit_failure", scope: !721, file: !725, line: 24, type: !667, isLocal: false, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !723, globals: !724, nameTableKind: None)
!722 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!723 = !{!667}
!724 = !{!719}
!725 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!726 = !DIGlobalVariableExpression(var: !727, expr: !DIExpression())
!727 = distinct !DIGlobalVariable(name: "default_tuning", scope: !728, file: !737, line: 130, type: !753, isLocal: true, isDefinition: true)
!728 = distinct !DICompileUnit(language: DW_LANG_C99, file: !729, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !730, globals: !866, nameTableKind: None)
!729 = !DIFile(filename: "./lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!730 = !{!54, !47, !52, !731, !733, !734, !746, !740, !773, !117, !775, !777, !817, !428, !767, !819, !821, !823, !824, !826, !830, !112, !468, !113, !832, !834, !753, !835, !837, !752, !764, !770, !735, !838, !840, !842, !5, !844, !758, !845, !847, !520, !522, !849, !851, !853, !855, !857, !859, !861, !863, !864}
!731 = !DISubroutineType(types: !732)
!732 = !{!52, !733}
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !735)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !194, line: 69, baseType: !736)
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !737, line: 52, size: 640, elements: !738)
!737 = !DIFile(filename: "lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!738 = !{!739, !745, !748, !749, !750, !751, !763, !766, !769, !772}
!739 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !736, file: !737, line: 57, baseType: !740, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !737, line: 46, size: 128, elements: !742)
!742 = !{!743, !744}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !741, file: !737, line: 48, baseType: !47, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !741, file: !737, line: 49, baseType: !740, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !736, file: !737, line: 58, baseType: !746, size: 64, offset: 64)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !741)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !736, file: !737, line: 59, baseType: !52, size: 64, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !736, file: !737, line: 60, baseType: !52, size: 64, offset: 192)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !736, file: !737, line: 61, baseType: !52, size: 64, offset: 256)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !736, file: !737, line: 64, baseType: !752, size: 64, offset: 320)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !194, line: 65, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !194, line: 53, size: 160, elements: !756)
!756 = !{!757, !759, !760, !761, !762}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !755, file: !194, line: 58, baseType: !758, size: 32)
!758 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !755, file: !194, line: 59, baseType: !758, size: 32, offset: 32)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !755, file: !194, line: 60, baseType: !758, size: 32, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !755, file: !194, line: 61, baseType: !758, size: 32, offset: 96)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !755, file: !194, line: 62, baseType: !117, size: 8, offset: 128)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !736, file: !737, line: 71, baseType: !764, size: 64, offset: 384)
!764 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !194, line: 48, baseType: !765)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !736, file: !737, line: 72, baseType: !767, size: 64, offset: 448)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !194, line: 49, baseType: !768)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !736, file: !737, line: 73, baseType: !770, size: 64, offset: 512)
!770 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !194, line: 50, baseType: !771)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !736, file: !737, line: 76, baseType: !740, size: 64, offset: 576)
!773 = !DISubroutineType(types: !774)
!774 = !{!117, !733}
!775 = !DISubroutineType(types: !776)
!776 = !{null, !733, !777}
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !780)
!780 = !{!781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !779, file: !2, line: 242, baseType: !5, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !779, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !779, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !779, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !779, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !779, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !779, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !779, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !779, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !779, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !779, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !779, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !779, file: !2, line: 260, baseType: !794, size: 64, offset: 768)
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !796)
!796 = !{!797, !798, !800}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !795, file: !2, line: 157, baseType: !794, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !795, file: !2, line: 158, baseType: !799, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !795, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !779, file: !2, line: 262, baseType: !799, size: 64, offset: 832)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !779, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !779, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !779, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !779, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !779, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !779, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !779, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !779, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !779, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !779, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !779, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !779, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !779, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !779, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !779, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!817 = !DISubroutineType(types: !818)
!818 = !{!47, !733, !428}
!819 = !DISubroutineType(types: !820)
!820 = !{!47, !733}
!821 = !DISubroutineType(types: !822)
!822 = !{!52, !733, !823, !52}
!823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!824 = !DISubroutineType(types: !825)
!825 = !{!52, !733, !826, !47}
!826 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !194, line: 51, baseType: !827)
!827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !828, size: 64)
!828 = !DISubroutineType(types: !829)
!829 = !{!117, !47, !47}
!830 = !DISubroutineType(types: !831)
!831 = !{!52, !112, !52}
!832 = !DISubroutineType(types: !833)
!833 = !{null, !834}
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{!837, !52, !752, !764, !767, !770}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !837}
!840 = !DISubroutineType(types: !841)
!841 = !{!117, !837, !52}
!842 = !DISubroutineType(types: !843)
!843 = !{!5, !837, !428, !844}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !428, size: 64)
!845 = !DISubroutineType(types: !846)
!846 = !{!47, !837, !428}
!847 = !DISubroutineType(types: !848)
!848 = !{!740, !733, !428}
!849 = !DISubroutineType(types: !850)
!850 = !{!117, !837}
!851 = !DISubroutineType(types: !852)
!852 = !{!52, !52, !752}
!853 = !DISubroutineType(types: !854)
!854 = !{!52, !52}
!855 = !DISubroutineType(types: !856)
!856 = !{!117, !52}
!857 = !DISubroutineType(types: !858)
!858 = !{!117, !837, !837, !117}
!859 = !DISubroutineType(types: !860)
!860 = !{null, !837, !740}
!861 = !DISubroutineType(types: !862)
!862 = !{!47, !837, !428, !863, !117}
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !740, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!740, !837}
!866 = !{!726}
!867 = !DIGlobalVariableExpression(var: !868, expr: !DIExpression())
!868 = distinct !DIGlobalVariable(name: "program_name", scope: !869, file: !911, line: 33, type: !112, isLocal: false, isDefinition: true)
!869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !870, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !871, globals: !910, nameTableKind: None)
!870 = !DIFile(filename: "./lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!871 = !{!47, !7, !112, !133, !872}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !874)
!874 = !{!875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !873, file: !2, line: 242, baseType: !5, size: 32)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !873, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !873, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !873, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !873, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !873, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !873, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !873, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !873, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !873, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !873, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !873, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !873, file: !2, line: 260, baseType: !888, size: 64, offset: 768)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !890)
!890 = !{!891, !892, !893}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !889, file: !2, line: 157, baseType: !888, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !889, file: !2, line: 158, baseType: !872, size: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !889, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !873, file: !2, line: 262, baseType: !872, size: 64, offset: 832)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !873, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !873, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !873, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !873, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !873, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !873, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !873, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !873, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !873, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !873, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !873, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !873, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !873, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !873, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !873, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!910 = !{!867}
!911 = !DIFile(filename: "lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!912 = !DIGlobalVariableExpression(var: !913, expr: !DIExpression())
!913 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !914, file: !943, line: 85, type: !932, isLocal: false, isDefinition: true)
!914 = distinct !DICompileUnit(language: DW_LANG_C99, file: !915, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !916, retainedTypes: !931, globals: !1038, nameTableKind: None)
!915 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!916 = !{!917}
!917 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !918, line: 32, baseType: !67, size: 32, elements: !919)
!918 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mohamad/clone/coreutils")
!919 = !{!920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930}
!920 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!921 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!922 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!923 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!924 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!925 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!926 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!927 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!928 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!929 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!930 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!931 = !{!5, !34, !52, !932, !935, !939, !941, !951, !953, !955, !957, !8, !468, !959, !67, !960, !962, !112, !964, !7, !966, !968, !599, !131, !970, !532, !975, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995, !997, !999, !1001, !1003, !1005, !1007, !1009, !1011, !1013, !117, !113, !1015, !1017, !1031, !1032, !1034, !1036}
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !616, size: 704, elements: !933)
!933 = !{!934}
!934 = !DISubrange(count: 11)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !936, size: 320, elements: !937)
!936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !917)
!937 = !{!938}
!938 = !DISubrange(count: 10)
!939 = !DISubroutineType(types: !940)
!940 = !{!941, !941}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !943, line: 65, size: 448, elements: !944)
!943 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!944 = !{!945, !946, !947, !949, !950}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !942, file: !943, line: 68, baseType: !917, size: 32)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !942, file: !943, line: 71, baseType: !5, size: 32, offset: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !942, file: !943, line: 75, baseType: !948, size: 256, offset: 64)
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, elements: !613)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !942, file: !943, line: 78, baseType: !112, size: 64, offset: 320)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !942, file: !943, line: 81, baseType: !112, size: 64, offset: 384)
!951 = !DISubroutineType(types: !952)
!952 = !{!917, !953}
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !942)
!955 = !DISubroutineType(types: !956)
!956 = !{null, !941, !917}
!957 = !DISubroutineType(types: !958)
!958 = !{!5, !941, !8, !5}
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!960 = !DISubroutineType(types: !961)
!961 = !{!5, !941, !5}
!962 = !DISubroutineType(types: !963)
!963 = !{null, !941, !112, !112}
!964 = !DISubroutineType(types: !965)
!965 = !{!52, !7, !52, !112, !52, !953}
!966 = !DISubroutineType(types: !967)
!967 = !{!7, !112, !52, !953}
!968 = !DISubroutineType(types: !969)
!969 = !{!7, !112, !52, !599, !953}
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !943, line: 834, size: 128, elements: !972)
!972 = !{!973, !974}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !971, file: !943, line: 836, baseType: !52, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !971, file: !943, line: 837, baseType: !7, size: 64, offset: 64)
!975 = !DISubroutineType(types: !976)
!976 = !{!7, !5, !112}
!977 = !DISubroutineType(types: !978)
!978 = !{!7, !5, !112, !52}
!979 = !DISubroutineType(types: !980)
!980 = !{!7, !112}
!981 = !DISubroutineType(types: !982)
!982 = !{!7, !112, !52}
!983 = !DISubroutineType(types: !984)
!984 = !{!7, !5, !917, !112}
!985 = !DISubroutineType(types: !986)
!986 = !{!7, !5, !917, !112, !52}
!987 = !DISubroutineType(types: !988)
!988 = !{!7, !917, !112}
!989 = !DISubroutineType(types: !990)
!990 = !{!7, !917, !112, !52}
!991 = !DISubroutineType(types: !992)
!992 = !{!7, !112, !52, !8}
!993 = !DISubroutineType(types: !994)
!994 = !{!7, !112, !8}
!995 = !DISubroutineType(types: !996)
!996 = !{!7, !5, !112, !112, !112}
!997 = !DISubroutineType(types: !998)
!998 = !{!7, !5, !112, !112, !112, !52}
!999 = !DISubroutineType(types: !1000)
!1000 = !{!7, !112, !112, !112}
!1001 = !DISubroutineType(types: !1002)
!1002 = !{!7, !112, !112, !112, !52}
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!112, !5, !112, !52}
!1005 = !DISubroutineType(types: !1006)
!1006 = !{!112, !112, !52}
!1007 = !DISubroutineType(types: !1008)
!1008 = !{!112, !5, !112}
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!112, !112}
!1011 = !DISubroutineType(types: !1012)
!1012 = !{!52, !7, !52, !112, !52, !917, !5, !1013, !112, !112}
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1018, line: 106, baseType: !1019)
!1018 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1018, line: 94, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1018, line: 82, size: 64, elements: !1021)
!1021 = !{!1022, !1023}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1020, file: !1018, line: 84, baseType: !5, size: 32)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1020, file: !1018, line: 93, baseType: !1024, size: 32, offset: 32)
!1024 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1020, file: !1018, line: 85, size: 32, elements: !1025)
!1025 = !{!1026, !1027}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1024, file: !1018, line: 88, baseType: !67, size: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1024, file: !1018, line: 92, baseType: !1028, size: 32)
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !1029)
!1029 = !{!1030}
!1030 = !DISubrange(count: 4)
!1031 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !53, line: 74, baseType: !5)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!112, !112, !917}
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!7, !5, !112, !52, !953}
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!942, !917}
!1038 = !{!912, !1039, !1041, !1043, !1045, !1047, !1049, !1051}
!1039 = !DIGlobalVariableExpression(var: !1040, expr: !DIExpression())
!1040 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !914, file: !943, line: 101, type: !935, isLocal: false, isDefinition: true)
!1041 = !DIGlobalVariableExpression(var: !1042, expr: !DIExpression())
!1042 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !914, file: !943, line: 1052, type: !942, isLocal: false, isDefinition: true)
!1043 = !DIGlobalVariableExpression(var: !1044, expr: !DIExpression())
!1044 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !914, file: !943, line: 116, type: !942, isLocal: true, isDefinition: true)
!1045 = !DIGlobalVariableExpression(var: !1046, expr: !DIExpression())
!1046 = distinct !DIGlobalVariable(name: "slot0", scope: !914, file: !943, line: 842, type: !532, isLocal: true, isDefinition: true)
!1047 = !DIGlobalVariableExpression(var: !1048, expr: !DIExpression())
!1048 = distinct !DIGlobalVariable(name: "slotvec", scope: !914, file: !943, line: 845, type: !970, isLocal: true, isDefinition: true)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "nslots", scope: !914, file: !943, line: 843, type: !5, isLocal: true, isDefinition: true)
!1051 = !DIGlobalVariableExpression(var: !1052, expr: !DIExpression())
!1052 = distinct !DIGlobalVariable(name: "slotvec0", scope: !914, file: !943, line: 844, type: !971, isLocal: true, isDefinition: true)
!1053 = !DIGlobalVariableExpression(var: !1054, expr: !DIExpression())
!1054 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !1055, file: !1070, line: 74, type: !1080, isLocal: true, isDefinition: true)
!1055 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1056, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1057, retainedTypes: !1065, globals: !1095, nameTableKind: None)
!1056 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!1057 = !{!1058}
!1058 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !1059, line: 26, baseType: !67, size: 32, elements: !1060)
!1059 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mohamad/clone/coreutils")
!1060 = !{!1061, !1062, !1063, !1064}
!1061 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!1062 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!1063 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!1064 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!1065 = !{!47, !1066, !7, !580, !52, !1068, !5, !1076, !1080, !1082, !112, !1069, !225, !1075, !1091, !1078, !428, !1093, !1094}
!1066 = !DISubroutineType(types: !1067)
!1067 = !{!7, !580, !1058}
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !1070, line: 46, baseType: !1071)
!1070 = !DIFile(filename: "lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!1071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1070, line: 40, size: 128, elements: !1072)
!1072 = !{!1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1071, file: !1070, line: 42, baseType: !7, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1071, file: !1070, line: 44, baseType: !1075, size: 64, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !582, line: 34, baseType: !225)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1070, line: 72, baseType: !1077)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!5, !428, !428}
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1081, size: 192, elements: !345)
!1081 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1076)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1084)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !589, line: 22, size: 2240, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1084, file: !589, line: 25, baseType: !225, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1084, file: !589, line: 26, baseType: !30, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1084, file: !589, line: 31, baseType: !34, size: 16, offset: 128)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1084, file: !589, line: 32, baseType: !468, size: 8, offset: 144)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1084, file: !589, line: 33, baseType: !532, size: 2048, offset: 152)
!1091 = !DISubroutineType(types: !1092)
!1092 = !{!7, !112, !1058}
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1069)
!1095 = !{!1053}
!1096 = !DIGlobalVariableExpression(var: !1097, expr: !DIExpression())
!1097 = distinct !DIGlobalVariable(name: "letters", scope: !1098, file: !1119, line: 184, type: !1107, isLocal: true, isDefinition: true)
!1098 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1099, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1100, globals: !1118, nameTableKind: None)
!1099 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!1100 = !{!1101, !5, !7, !47, !1103, !52, !67, !1104, !1107, !1110, !1112, !1114, !1116, !117, !112, !543, !126}
!1101 = !DISubroutineType(types: !1102)
!1102 = !{!5, !7, !5, !47, !1103, !52}
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1106, line: 33, flags: DIFlagFwdDecl)
!1106 = !DIFile(filename: "./lib/randint.h", directory: "/home/mohamad/clone/coreutils")
!1107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 504, elements: !1108)
!1108 = !{!1109}
!1109 = !DISubrange(count: 63)
!1110 = !DISubroutineType(types: !1111)
!1111 = !{!5, !7, !5, !5, !5, !52}
!1112 = !DISubroutineType(types: !1113)
!1113 = !{!5, !7, !5, !5, !5}
!1114 = !DISubroutineType(types: !1115)
!1115 = !{!5, !7, !5, !47, !1103}
!1116 = !DISubroutineType(types: !1117)
!1117 = !{!117, !112, !52}
!1118 = !{!1096}
!1119 = !DIFile(filename: "lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!1120 = !DIGlobalVariableExpression(var: !1121, expr: !DIExpression())
!1121 = distinct !DIGlobalVariable(name: "ht", scope: !1122, file: !1123, line: 163, type: !192, isLocal: true, isDefinition: true)
!1122 = distinct !DISubprogram(name: "utimecmpat", scope: !1123, file: !1123, line: 132, type: !1124, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1149, retainedNodes: !140)
!1123 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!1124 = !DISubroutineType(types: !1125)
!1125 = !{!5, !5, !112, !1126, !1126, !5}
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1128)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1146, !1147, !1148}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1128, file: !315, line: 48, baseType: !228, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1128, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1128, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1128, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1128, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1128, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1128, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1128, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1128, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1128, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1128, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1128, file: !315, line: 91, baseType: !1142, size: 128, offset: 576)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1143)
!1143 = !{!1144, !1145}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1142, file: !335, line: 122, baseType: !338, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1142, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1128, file: !315, line: 92, baseType: !1142, size: 128, offset: 704)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1128, file: !315, line: 93, baseType: !1142, size: 128, offset: 832)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1128, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1150, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1151, globals: !1164, nameTableKind: None)
!1150 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!1151 = !{!1152, !5, !112, !1126, !1124, !1154, !338, !1155, !117, !228, !227, !1161, !340, !520, !52, !428, !1162, !522}
!1152 = !DISubroutineType(types: !1153)
!1153 = !{!5, !112, !1126, !1126, !5}
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !335, line: 75, baseType: !338)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1123, line: 66, size: 128, elements: !1157)
!1157 = !{!1158, !1159, !1160}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1156, file: !1123, line: 69, baseType: !227, size: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1156, file: !1123, line: 76, baseType: !5, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1156, file: !1123, line: 80, baseType: !117, size: 8, offset: 96)
!1161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1142, size: 256, elements: !206)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1164 = !{!1120, !1165}
!1165 = !DIGlobalVariableExpression(var: !1166, expr: !DIExpression())
!1166 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1122, file: !1123, line: 166, type: !1155, isLocal: true, isDefinition: true)
!1167 = !DIGlobalVariableExpression(var: !1168, expr: !DIExpression())
!1168 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1169, file: !1219, line: 75, type: !5, isLocal: true, isDefinition: true)
!1169 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1170, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1171, globals: !1216, nameTableKind: None)
!1170 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!1171 = !{!1172, !5, !112, !1180, !1181, !340, !1182, !1189, !338, !1188, !117, !1154, !1190, !130, !1192, !1194, !1196}
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!5, !5, !112, !1174}
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1176)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1176, file: !335, line: 122, baseType: !338, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1176, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1176, size: 256, elements: !206)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1183, size: 256, elements: !206)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1184, line: 30, size: 128, elements: !1185)
!1184 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "")
!1185 = !{!1186, !1187}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1183, file: !1184, line: 32, baseType: !338, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1183, file: !1184, line: 33, baseType: !1188, size: 64, offset: 64)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !31, line: 141, baseType: !32)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 64)
!1190 = !DISubroutineType(types: !1191)
!1191 = !{!5, !112, !1174}
!1192 = !DISubroutineType(types: !1193)
!1193 = !{!5, !1181}
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!117, !1196, !1215}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1198)
!1198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1199)
!1199 = !{!1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214}
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1198, file: !315, line: 48, baseType: !228, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1198, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1198, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1198, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1198, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1198, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1198, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1198, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1198, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1198, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1198, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1198, file: !315, line: 91, baseType: !1176, size: 128, offset: 576)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1198, file: !315, line: 92, baseType: !1176, size: 128, offset: 704)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1198, file: !315, line: 93, baseType: !1176, size: 128, offset: 832)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1198, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1216 = !{!1167, !1217}
!1217 = !DIGlobalVariableExpression(var: !1218, expr: !DIExpression())
!1218 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1169, file: !1219, line: 76, type: !5, isLocal: true, isDefinition: true)
!1219 = !DIFile(filename: "lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!1220 = !DIGlobalVariableExpression(var: !1221, expr: !DIExpression())
!1221 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1222, file: !1229, line: 26, type: !1225, isLocal: false, isDefinition: true)
!1222 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1223, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1224, globals: !1228, nameTableKind: None)
!1223 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1224 = !{!1225}
!1225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 376, elements: !1226)
!1226 = !{!1227}
!1227 = !DISubrange(count: 47)
!1228 = !{!1220}
!1229 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1230 = !DIGlobalVariableExpression(var: !1231, expr: !DIExpression())
!1231 = distinct !DIGlobalVariable(name: "initialized", scope: !1232, file: !1233, line: 34, type: !117, isLocal: true, isDefinition: true)
!1232 = distinct !DISubprogram(name: "can_write_any_file", scope: !1233, file: !1233, line: 32, type: !1234, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1236, retainedNodes: !140)
!1233 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!117}
!1236 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1237, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1238, globals: !1239, nameTableKind: None)
!1237 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!1238 = !{!1234, !117}
!1239 = !{!1230, !1240}
!1240 = !DIGlobalVariableExpression(var: !1241, expr: !DIExpression())
!1241 = distinct !DIGlobalVariable(name: "can_write", scope: !1232, file: !1233, line: 35, type: !117, isLocal: true, isDefinition: true)
!1242 = !DIGlobalVariableExpression(var: !1243, expr: !DIExpression())
!1243 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1244, file: !1297, line: 67, type: !617, isLocal: false, isDefinition: true)
!1244 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1245, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1246, globals: !1296, nameTableKind: None)
!1245 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1246 = !{!47, !112, !617, !1247, !539, !1249, !428, !52, !117, !1250, !1252, !1254, !1292, !1294, !131}
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!539, !112, !1249, !428, !52}
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !616, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{null, !112, !112, !539}
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !1249, !428, !52}
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1255, file: !2, line: 242, baseType: !5, size: 32)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1255, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1255, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1255, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1255, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1255, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1255, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1255, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1255, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1255, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1255, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1255, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1255, file: !2, line: 260, baseType: !1270, size: 64, offset: 768)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1272)
!1272 = !{!1273, !1274, !1275}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1271, file: !2, line: 157, baseType: !1270, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1271, file: !2, line: 158, baseType: !1254, size: 64, offset: 64)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1271, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1255, file: !2, line: 262, baseType: !1254, size: 64, offset: 832)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1255, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1255, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1255, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1255, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1255, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1255, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1255, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1255, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1255, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1255, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1255, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1255, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1255, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1255, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1255, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1292 = !DISubroutineType(types: !1293)
!1293 = !{!539, !112, !112, !1249, !428, !52, !617}
!1294 = !DISubroutineType(types: !1295)
!1295 = !{!112, !428, !1249, !428, !52}
!1296 = !{!1242}
!1297 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1298 = !DIGlobalVariableExpression(var: !1299, expr: !DIExpression())
!1299 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1300, file: !1301, line: 507, type: !5, isLocal: true, isDefinition: true)
!1300 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1301, file: !1301, line: 488, type: !420, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1302, retainedNodes: !140)
!1301 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1303, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1304, globals: !1315, nameTableKind: None)
!1303 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1304 = !{!420, !5, !1305, !47}
!1305 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1306, line: 14, baseType: !1307)
!1306 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mohamad/clone")
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1303, line: 208, baseType: !1308)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1309, size: 192, elements: !39)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1303, line: 208, size: 192, elements: !1310)
!1310 = !{!1311, !1312, !1313, !1314}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1309, file: !1303, line: 208, baseType: !67, size: 32)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1309, file: !1303, line: 208, baseType: !67, size: 32, offset: 32)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1309, file: !1303, line: 208, baseType: !47, size: 64, offset: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1309, file: !1303, line: 208, baseType: !47, size: 64, offset: 128)
!1315 = !{!1298}
!1316 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1317, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1318, retainedTypes: !1328, nameTableKind: None)
!1317 = !DIFile(filename: "src/remove.c", directory: "/home/mohamad/clone/coreutils")
!1318 = !{!103, !97, !1319, !1324}
!1319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Ternary", file: !1317, line: 35, baseType: !67, size: 32, elements: !1320)
!1320 = !{!1321, !1322, !1323}
!1321 = !DIEnumerator(name: "T_UNKNOWN", value: 2, isUnsigned: true)
!1322 = !DIEnumerator(name: "T_NO", value: 3, isUnsigned: true)
!1323 = !DIEnumerator(name: "T_YES", value: 4, isUnsigned: true)
!1324 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Prompt_action", file: !1317, line: 46, baseType: !67, size: 32, elements: !1325)
!1325 = !{!1326, !1327}
!1326 = !DIEnumerator(name: "PA_DESCEND_INTO_DIR", value: 2, isUnsigned: true)
!1327 = !DIEnumerator(name: "PA_REMOVE_DIR", value: 3, isUnsigned: true)
!1328 = !{!47, !5, !1329, !1331, !1333, !1332, !117, !1352, !1445, !1447, !1446, !34, !1353, !7, !539, !1343, !225, !224, !228, !227, !1449, !1450, !112, !580, !1452, !1461, !1463, !1358, !32, !1465, !197, !8, !1467, !1469, !1471, !1473, !1470, !1472, !1474, !130, !1475, !1513, !30, !1515, !1517, !1519, !1521, !304}
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!103, !1331, !1333}
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1335)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rm_options", file: !98, line: 32, size: 256, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340, !1341, !1342, !1348, !1349, !1350, !1351}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_missing_files", scope: !1335, file: !98, line: 35, baseType: !117, size: 8)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !1335, file: !98, line: 38, baseType: !97, size: 32, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !1335, file: !98, line: 47, baseType: !117, size: 8, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !1335, file: !98, line: 50, baseType: !117, size: 8, offset: 72)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "remove_empty_directories", scope: !1335, file: !98, line: 53, baseType: !117, size: 8, offset: 80)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "root_dev_ino", scope: !1335, file: !98, line: 57, baseType: !1343, size: 64, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !221, line: 7, size: 128, elements: !1345)
!1345 = !{!1346, !1347}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1344, file: !221, line: 9, baseType: !224, size: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1344, file: !221, line: 10, baseType: !227, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_all_root", scope: !1335, file: !98, line: 61, baseType: !117, size: 8, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !1335, file: !98, line: 64, baseType: !117, size: 8, offset: 200)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1335, file: !98, line: 67, baseType: !117, size: 8, offset: 208)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "require_restore_cwd", scope: !1335, file: !98, line: 75, baseType: !117, size: 8, offset: 216)
!1352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1354, line: 197, baseType: !1355)
!1354 = !DIFile(filename: "./lib/fts_.h", directory: "/home/mohamad/clone/coreutils")
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1354, line: 80, size: 1024, elements: !1356)
!1356 = !{!1357, !1407, !1408, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1423, !1424, !1427, !1434}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !1355, file: !1354, line: 81, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1354, line: 199, size: 2112, elements: !1360)
!1360 = !{!1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1377, !1378, !1379, !1380, !1403}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1359, file: !1354, line: 200, baseType: !1358, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !1359, file: !1354, line: 201, baseType: !1358, size: 64, offset: 64)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !1359, file: !1354, line: 202, baseType: !1358, size: 64, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !1359, file: !1354, line: 203, baseType: !580, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !1359, file: !1354, line: 206, baseType: !32, size: 64, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !1359, file: !1354, line: 207, baseType: !47, size: 64, offset: 320)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !1359, file: !1354, line: 208, baseType: !7, size: 64, offset: 384)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1359, file: !1354, line: 209, baseType: !7, size: 64, offset: 448)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !1359, file: !1354, line: 210, baseType: !5, size: 32, offset: 512)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !1359, file: !1354, line: 211, baseType: !5, size: 32, offset: 544)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1359, file: !1354, line: 212, baseType: !52, size: 64, offset: 576)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !1359, file: !1354, line: 214, baseType: !1352, size: 64, offset: 640)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !1359, file: !1354, line: 218, baseType: !539, size: 64, offset: 704)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !1359, file: !1354, line: 220, baseType: !52, size: 64, offset: 768)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !1359, file: !1354, line: 225, baseType: !1376, size: 64, offset: 832)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !158, line: 75, baseType: !320)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !1359, file: !1354, line: 241, baseType: !34, size: 16, offset: 896)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !1359, file: !1354, line: 245, baseType: !34, size: 16, offset: 912)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !1359, file: !1354, line: 251, baseType: !34, size: 16, offset: 928)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !1359, file: !1354, line: 253, baseType: !1381, size: 1152, offset: 960)
!1381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1382, size: 1152, elements: !39)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1400, !1401, !1402}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1382, file: !315, line: 48, baseType: !228, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1382, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1382, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1382, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1382, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1382, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1382, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1382, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1382, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1382, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1382, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1382, file: !315, line: 91, baseType: !1396, size: 128, offset: 576)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1396, file: !335, line: 122, baseType: !338, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1396, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1382, file: !315, line: 92, baseType: !1396, size: 128, offset: 704)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1382, file: !315, line: 93, baseType: !1396, size: 128, offset: 832)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1382, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !1359, file: !1354, line: 254, baseType: !1404, offset: 2112)
!1404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, elements: !1405)
!1405 = !{!1406}
!1406 = !DISubrange(count: -1)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !1355, file: !1354, line: 82, baseType: !1358, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !1355, file: !1354, line: 83, baseType: !1409, size: 64, offset: 128)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !1355, file: !1354, line: 84, baseType: !227, size: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !1355, file: !1354, line: 85, baseType: !7, size: 64, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !1355, file: !1354, line: 86, baseType: !5, size: 32, offset: 320)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !1355, file: !1354, line: 87, baseType: !5, size: 32, offset: 352)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !1355, file: !1354, line: 89, baseType: !52, size: 64, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !1355, file: !1354, line: 90, baseType: !52, size: 64, offset: 448)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !1355, file: !1354, line: 91, baseType: !1417, size: 64, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DISubroutineType(types: !1419)
!1419 = !{!5, !1420, !1420}
!1420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1421, size: 64)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1359)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !1355, file: !1354, line: 160, baseType: !5, size: 32, offset: 576)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !1355, file: !1354, line: 169, baseType: !1425, size: 64, offset: 640)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !1354, line: 169, flags: DIFlagFwdDecl)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !1355, file: !1354, line: 191, baseType: !1428, size: 64, offset: 704)
!1428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1355, file: !1354, line: 171, size: 64, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !1428, file: !1354, line: 184, baseType: !1425, size: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1428, file: !1354, line: 190, baseType: !1432, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !1354, line: 190, flags: DIFlagFwdDecl)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !1355, file: !1354, line: 196, baseType: !1435, size: 256, offset: 768)
!1435 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1436, line: 39, baseType: !1437)
!1436 = !DIFile(filename: "./lib/i-ring.h", directory: "/home/mohamad/clone/coreutils")
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1436, line: 31, size: 256, elements: !1438)
!1438 = !{!1439, !1441, !1442, !1443, !1444}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !1437, file: !1436, line: 33, baseType: !1440, size: 128)
!1440 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, elements: !1029)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !1437, file: !1436, line: 34, baseType: !5, size: 32, offset: 128)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !1437, file: !1436, line: 35, baseType: !67, size: 32, offset: 160)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !1437, file: !1436, line: 36, baseType: !67, size: 32, offset: 192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !1437, file: !1436, line: 37, baseType: !117, size: 8, offset: 224)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1354, line: 255, baseType: !1359)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!103, !1352, !1445, !1333}
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ternary", file: !1317, line: 41, baseType: !1319)
!1450 = !DISubroutineType(types: !1451)
!1451 = !{!117, !5, !112}
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1454)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !589, line: 22, size: 2240, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1454, file: !589, line: 25, baseType: !225, size: 64)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1454, file: !589, line: 26, baseType: !30, size: 64, offset: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1454, file: !589, line: 31, baseType: !34, size: 16, offset: 128)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1454, file: !589, line: 32, baseType: !468, size: 8, offset: 144)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1454, file: !589, line: 33, baseType: !532, size: 2048, offset: 152)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!1452, !580}
!1463 = !DISubroutineType(types: !1464)
!1464 = !{null, !1445}
!1465 = !DISubroutineType(types: !1466)
!1466 = !{null, !1352, !1445}
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!103, !1469, !1471, !117, !1333, !1324, !1473}
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1353)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1446)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1449, size: 64)
!1474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1476, file: !2, line: 242, baseType: !5, size: 32)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1476, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1476, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1476, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1476, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1476, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1476, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1476, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1476, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1476, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1476, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1476, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1476, file: !2, line: 260, baseType: !1491, size: 64, offset: 768)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1493)
!1493 = !{!1494, !1495, !1496}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1492, file: !2, line: 157, baseType: !1491, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1492, file: !2, line: 158, baseType: !1475, size: 64, offset: 64)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1492, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1476, file: !2, line: 262, baseType: !1475, size: 64, offset: 832)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1476, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1476, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1476, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1476, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1476, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1476, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1476, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1476, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1476, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1476, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1476, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1476, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1476, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1476, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1476, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1513 = !DISubroutineType(types: !1514)
!1514 = !{!1474, !1474}
!1515 = !DISubroutineType(types: !1516)
!1516 = !{!5, !5, !112, !1474}
!1517 = !DISubroutineType(types: !1518)
!1518 = !{!5, !5, !112, !1474, !5}
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!103, !1352, !1445, !1333, !117}
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!117, !1333, !5}
!1523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1524, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1525, nameTableKind: None)
!1524 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mohamad/clone/coreutils")
!1525 = !{!1526, !1527, !5, !1529, !52, !1539, !117, !67, !1545, !1547, !1571, !1560, !1552, !1555, !1234}
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !158, line: 86, baseType: !30)
!1527 = !DISubroutineType(types: !1528)
!1528 = !{null, !5, !1529}
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !434, line: 36, size: 384, elements: !1531)
!1531 = !{!1532, !1533, !1534, !1535, !1536, !1537, !1538}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1530, file: !434, line: 39, baseType: !5, size: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !1530, file: !434, line: 42, baseType: !1526, size: 64, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1530, file: !434, line: 45, baseType: !67, size: 32, offset: 128)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !1530, file: !434, line: 48, baseType: !52, size: 64, offset: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !1530, file: !434, line: 52, baseType: !117, size: 8, offset: 256)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !1530, file: !434, line: 55, baseType: !117, size: 8, offset: 264)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !1530, file: !434, line: 58, baseType: !1539, size: 64, offset: 320)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !434, line: 23, size: 192, elements: !1541)
!1541 = !{!1542, !1543, !1544}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1540, file: !434, line: 26, baseType: !1526, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1540, file: !434, line: 29, baseType: !1526, size: 64, offset: 64)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1540, file: !434, line: 32, baseType: !67, size: 32, offset: 128)
!1545 = !DISubroutineType(types: !1546)
!1546 = !{!117, !1529}
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1549, line: 35, size: 256, elements: !1550)
!1549 = !DIFile(filename: "src/fiemap.h", directory: "/home/mohamad/clone/coreutils")
!1550 = !{!1551, !1553, !1554, !1556, !1557, !1558, !1559}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1548, file: !1549, line: 38, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !460, line: 55, baseType: !54)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1548, file: !1549, line: 41, baseType: !1552, size: 64, offset: 64)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1548, file: !1549, line: 44, baseType: !1555, size: 32, offset: 128)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !460, line: 51, baseType: !67)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1548, file: !1549, line: 47, baseType: !1555, size: 32, offset: 160)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1548, file: !1549, line: 50, baseType: !1555, size: 32, offset: 192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1548, file: !1549, line: 52, baseType: !1555, size: 32, offset: 224)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1548, file: !1549, line: 55, baseType: !1560, offset: 256)
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1561, elements: !1405)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1549, line: 14, size: 448, elements: !1562)
!1562 = !{!1563, !1564, !1565, !1566, !1568, !1569}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1561, file: !1549, line: 18, baseType: !1552, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1561, file: !1549, line: 22, baseType: !1552, size: 64, offset: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1561, file: !1549, line: 25, baseType: !1552, size: 64, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1561, file: !1549, line: 27, baseType: !1567, size: 128, offset: 192)
!1567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1552, size: 128, elements: !206)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1561, file: !1549, line: 30, baseType: !1555, size: 32, offset: 320)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1561, file: !1549, line: 32, baseType: !1570, size: 96, offset: 352)
!1570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1555, size: 96, elements: !345)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1572 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1573, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, nameTableKind: None)
!1573 = !DIFile(filename: "src/selinux.c", directory: "/home/mohamad/clone/coreutils")
!1574 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1575, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1576, nameTableKind: None)
!1575 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1576 = !{!1577, !5, !112, !157}
!1577 = !DISubroutineType(types: !1578)
!1578 = !{!5, !112, !5, !112, !5, !157}
!1579 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1580, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1581, nameTableKind: None)
!1580 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!1581 = !{!1582, !5, !112, !157}
!1582 = !DISubroutineType(types: !1583)
!1583 = !{!5, !112, !5, !157}
!1584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1585, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1586, nameTableKind: None)
!1585 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!1586 = !{!47, !981, !7, !112, !52, !579, !1587, !5}
!1587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1024, elements: !1588)
!1588 = !{!1589}
!1589 = !DISubrange(count: 128)
!1590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1591, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !605, retainedTypes: !1592, nameTableKind: None)
!1591 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!1592 = !{!607, !7, !5, !112}
!1593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1594, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1595, nameTableKind: None)
!1594 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!1595 = !{!1596, !52}
!1596 = !DISubroutineType(types: !1597)
!1597 = !{!52, !52, !52, !52}
!1598 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1599, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1600, nameTableKind: None)
!1599 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!1600 = !{!979, !7, !112}
!1601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1602, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1603, nameTableKind: None)
!1602 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1603 = !{!1604, !52, !112, !979, !7, !117}
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!52, !112}
!1606 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1607, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1608, nameTableKind: None)
!1607 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1608 = !{!7, !979, !112, !117, !113, !1604, !52}
!1609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1610, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1611, nameTableKind: None)
!1610 = !DIFile(filename: "./lib/stripslash.c", directory: "/home/mohamad/clone/coreutils")
!1611 = !{!1612, !117, !7, !8}
!1612 = !DISubroutineType(types: !1613)
!1613 = !{!117, !7}
!1614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1615, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1616, retainedTypes: !1626, nameTableKind: None)
!1615 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!1616 = !{!1617}
!1617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1618, line: 45, baseType: !67, size: 32, elements: !1619)
!1618 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mohamad/clone/coreutils")
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1625}
!1620 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1621 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1622 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1623 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1624 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1625 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1626 = !{!1627, !5, !245, !1629, !1630, !1632}
!1627 = !DISubroutineType(types: !1628)
!1628 = !{null, !5, !245, !245, !1629}
!1629 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1618, line: 52, baseType: !1617)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !1632, !1629}
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1635)
!1635 = !{!1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1634, file: !2, line: 242, baseType: !5, size: 32)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1634, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1634, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1634, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1634, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1634, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1634, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1634, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1634, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1634, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1634, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1634, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1634, file: !2, line: 260, baseType: !1649, size: 64, offset: 768)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1651)
!1651 = !{!1652, !1653, !1655}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1650, file: !2, line: 157, baseType: !1649, size: 64)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1650, file: !2, line: 158, baseType: !1654, size: 64, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1650, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1634, file: !2, line: 262, baseType: !1654, size: 64, offset: 832)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1634, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1634, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1634, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1634, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1634, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1634, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1634, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1634, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1634, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1634, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1634, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1634, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1634, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1634, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1634, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1672 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1673, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1674, nameTableKind: None)
!1673 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!1674 = !{!1675, !5, !112, !157, !1677}
!1675 = !DISubroutineType(types: !1676)
!1676 = !{!5, !112, !5}
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1306, line: 14, baseType: !1678)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1673, line: 35, baseType: !1679)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1680, size: 192, elements: !39)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1673, line: 35, size: 192, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1680, file: !1673, line: 35, baseType: !67, size: 32)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1680, file: !1673, line: 35, baseType: !67, size: 32, offset: 32)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1680, file: !1673, line: 35, baseType: !47, size: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1680, file: !1673, line: 35, baseType: !47, size: 64, offset: 128)
!1686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1687, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1688, nameTableKind: None)
!1687 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!1688 = !{!47, !7, !1689, !192, !112, !1691, !1714, !225, !224, !228, !227, !1721, !117, !1723}
!1689 = !DISubroutineType(types: !1690)
!1690 = !{null, !192, !112, !1691}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1693)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1694)
!1694 = !{!1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1711, !1712, !1713}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1693, file: !315, line: 48, baseType: !228, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1693, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1693, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1693, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1693, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1693, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1693, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1693, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1693, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1693, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1693, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1693, file: !315, line: 91, baseType: !1707, size: 128, offset: 576)
!1707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1708)
!1708 = !{!1709, !1710}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1707, file: !335, line: 122, baseType: !338, size: 64)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1707, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1693, file: !315, line: 92, baseType: !1707, size: 128, offset: 704)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1693, file: !315, line: 93, baseType: !1707, size: 128, offset: 832)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1693, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1715, size: 64)
!1715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1716, line: 9, size: 192, elements: !1717)
!1716 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mohamad/clone/coreutils")
!1717 = !{!1718, !1719, !1720}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1715, file: !1716, line: 11, baseType: !7, size: 64)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1715, file: !1716, line: 12, baseType: !224, size: 64, offset: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1715, file: !1716, line: 13, baseType: !227, size: 64, offset: 128)
!1721 = !DISubroutineType(types: !1722)
!1722 = !{!117, !1723, !112, !1691}
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !193)
!1725 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1726, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1727, nameTableKind: None)
!1726 = !DIFile(filename: "./lib/file-type.c", directory: "/home/mohamad/clone/coreutils")
!1727 = !{!1728, !112, !1730, !130, !30}
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!112, !1730}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1733)
!1733 = !{!1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1750, !1751, !1752}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1732, file: !315, line: 48, baseType: !228, size: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1732, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1732, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1732, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1732, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1732, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1732, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1732, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1732, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1732, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1732, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1732, file: !315, line: 91, baseType: !1746, size: 128, offset: 576)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1747)
!1747 = !{!1748, !1749}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1746, file: !335, line: 122, baseType: !338, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1746, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1732, file: !315, line: 92, baseType: !1746, size: 128, offset: 704)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1732, file: !315, line: 93, baseType: !1746, size: 128, offset: 832)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1732, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1753 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1754, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1755, nameTableKind: None)
!1754 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!1755 = !{!1756, !157, !7, !1758, !1760, !130, !1783, !8}
!1756 = !DISubroutineType(types: !1757)
!1757 = !{null, !157, !7}
!1758 = !DISubroutineType(types: !1759)
!1759 = !{null, !1760, !7}
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1762)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1780, !1781, !1782}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1762, file: !315, line: 48, baseType: !228, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1762, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1762, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1762, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1762, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1762, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1762, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1762, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1762, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1762, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1762, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1762, file: !315, line: 91, baseType: !1776, size: 128, offset: 576)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1777)
!1777 = !{!1778, !1779}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1776, file: !335, line: 122, baseType: !338, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1776, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1762, file: !315, line: 92, baseType: !1776, size: 128, offset: 704)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1762, file: !315, line: 93, baseType: !1776, size: 128, offset: 832)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1762, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!8, !157}
!1785 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1786, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1787, nameTableKind: None)
!1786 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!1787 = !{!47, !1788, !7, !112, !116}
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!7, !112, !112, !116}
!1790 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1791, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1792, nameTableKind: None)
!1791 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1792 = !{!47, !1788, !7, !112, !116, !52, !8, !113}
!1793 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1794, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1795, nameTableKind: None)
!1794 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!1795 = !{!112, !52, !1796, !5, !428}
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!52, !5, !428, !52}
!1798 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1799, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1800, nameTableKind: None)
!1799 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!1800 = !{!520, !52, !428, !1801, !7, !224, !522, !117, !227, !518, !47, !1808}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1716, line: 9, size: 192, elements: !1804)
!1804 = !{!1805, !1806, !1807}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1803, file: !1716, line: 11, baseType: !7, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1803, file: !1716, line: 12, baseType: !224, size: 64, offset: 64)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1803, file: !1716, line: 13, baseType: !227, size: 64, offset: 128)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1809 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1810, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1811, nameTableKind: None)
!1810 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!1811 = !{!1812, !580, !5, !112, !126}
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!580, !5, !112, !5, !126}
!1814 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1815, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1816, nameTableKind: None)
!1815 = !DIFile(filename: "./lib/priv-set.c", directory: "/home/mohamad/clone/coreutils")
!1816 = !{!1817, !5}
!1817 = !DISubroutineType(types: !1818)
!1818 = !{!5}
!1819 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1820, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1576, nameTableKind: None)
!1820 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1821 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1822, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1581, nameTableKind: None)
!1822 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!1823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1824, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1825, nameTableKind: None)
!1824 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!1825 = !{!7, !1826, !5, !112, !67, !52, !117, !130, !1828}
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!5, !5, !112, !5, !112, !67}
!1828 = !DISubroutineType(types: !1829)
!1829 = !{!5, !5}
!1830 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1831, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1832, nameTableKind: None)
!1831 = !DIFile(filename: "./lib/root-dev-ino.c", directory: "/home/mohamad/clone/coreutils")
!1832 = !{!1833, !1835, !225, !224, !228, !227}
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!1835, !1835}
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !221, line: 7, size: 128, elements: !1837)
!1837 = !{!1838, !1839}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1836, file: !221, line: 9, baseType: !224, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1836, file: !221, line: 10, baseType: !227, size: 64, offset: 64)
!1840 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1841, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1842, nameTableKind: None)
!1841 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mohamad/clone/coreutils")
!1842 = !{!1796, !52, !5, !428, !579}
!1843 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1844, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1845, nameTableKind: None)
!1844 = !DIFile(filename: "./lib/same.c", directory: "/home/mohamad/clone/coreutils")
!1845 = !{!1846, !117, !112, !1848, !5, !52, !7, !225, !228}
!1846 = !DISubroutineType(types: !1847)
!1847 = !{!117, !112, !112}
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!117, !5, !112, !5, !112}
!1850 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1851, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1852, nameTableKind: None)
!1851 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mohamad/clone/coreutils")
!1852 = !{!1853, !5, !1855, !1858, !1856, !1860, !1862, !112, !157, !1864, !1866, !1868, !1870, !1872, !1874, !1875, !1877}
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!5, !1855}
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1857, line: 83, baseType: !7)
!1857 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mohamad/clone/coreutils")
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !1856}
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!5, !1856}
!1862 = !DISubroutineType(types: !1863)
!1863 = !{!5, !112, !157, !1855}
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!5, !112, !1855}
!1866 = !DISubroutineType(types: !1867)
!1867 = !{!5, !5, !1855}
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!5, !112, !1856}
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!5, !5, !1856}
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!5, !1856, !1856, !1874, !1855}
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1857, line: 82, baseType: !34)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!1874, !112}
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!5, !112, !112}
!1879 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1880, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1881, nameTableKind: None)
!1880 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mohamad/clone/coreutils")
!1881 = !{!1882, !32, !1884, !340, !1907, !338, !1909, !5, !1911}
!1882 = !DISubroutineType(types: !1883)
!1883 = !{!32, !1884}
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1904, !1905, !1906}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1886, file: !315, line: 48, baseType: !228, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1886, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1886, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1886, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1886, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1886, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1886, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1886, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1886, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1886, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1886, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1886, file: !315, line: 91, baseType: !1900, size: 128, offset: 576)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1900, file: !335, line: 122, baseType: !338, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1900, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1886, file: !315, line: 92, baseType: !1900, size: 128, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1886, file: !315, line: 93, baseType: !1900, size: 128, offset: 832)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1886, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{!1900, !1884}
!1909 = !DISubroutineType(types: !1910)
!1910 = !{!5, !5, !1911}
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1912 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1913, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1914, nameTableKind: None)
!1913 = !DIFile(filename: "./lib/statat.c", directory: "/home/mohamad/clone/coreutils")
!1914 = !{!1915, !5, !112, !1917}
!1915 = !DISubroutineType(types: !1916)
!1916 = !{!5, !5, !112, !1917}
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !1919)
!1919 = !{!1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1936, !1937, !1938}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1918, file: !315, line: 48, baseType: !228, size: 64)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1918, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1918, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1918, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1918, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1918, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1918, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1918, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1918, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1918, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1918, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1918, file: !315, line: 91, baseType: !1932, size: 128, offset: 576)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !1933)
!1933 = !{!1934, !1935}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1932, file: !335, line: 122, baseType: !338, size: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1932, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1918, file: !315, line: 92, baseType: !1932, size: 128, offset: 704)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1918, file: !315, line: 93, baseType: !1932, size: 128, offset: 832)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1918, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!1939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1940, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1941, nameTableKind: None)
!1940 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!1941 = !{!1828, !5}
!1942 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1943, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1944, nameTableKind: None)
!1943 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!1944 = !{!47, !1945, !1947, !112, !1249, !52, !1987, !1988, !1990, !1999, !2000, !2002, !131, !1969}
!1945 = !DISubroutineType(types: !1946)
!1946 = !{null, !1947, !112, !112, !112, !1249, !52}
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !1949)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1950)
!1950 = !{!1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1949, file: !2, line: 242, baseType: !5, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1949, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1949, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1949, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1949, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1949, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1949, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1949, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1949, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1949, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1949, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1949, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1949, file: !2, line: 260, baseType: !1964, size: 64, offset: 768)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 64)
!1965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1966)
!1966 = !{!1967, !1968, !1970}
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1965, file: !2, line: 157, baseType: !1964, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1965, file: !2, line: 158, baseType: !1969, size: 64, offset: 64)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1965, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1949, file: !2, line: 262, baseType: !1969, size: 64, offset: 832)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1949, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1949, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1949, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1949, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1949, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1949, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1949, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1949, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1949, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1949, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1949, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1949, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1949, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1949, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1949, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, elements: !1405)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{null, !1947, !112, !112, !112, !1249}
!1990 = !DISubroutineType(types: !1991)
!1991 = !{null, !1947, !112, !112, !112, !1992}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1943, line: 192, size: 192, elements: !1994)
!1994 = !{!1995, !1996, !1997, !1998}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1993, file: !1943, line: 192, baseType: !67, size: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1993, file: !1943, line: 192, baseType: !67, size: 32, offset: 32)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1993, file: !1943, line: 192, baseType: !47, size: 64, offset: 64)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1993, file: !1943, line: 192, baseType: !47, size: 64, offset: 128)
!1999 = !DICompositeType(tag: DW_TAG_array_type, baseType: !112, size: 640, elements: !937)
!2000 = !DISubroutineType(types: !2001)
!2001 = !{null, !1947, !112, !112, !112}
!2002 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !246, line: 79, baseType: !2003)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1306, line: 32, baseType: !2004)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1943, line: 234, baseType: !2005)
!2005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1993, size: 192, elements: !39)
!2006 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2007, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2008, nameTableKind: None)
!2007 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!2008 = !{!52, !7, !47, !2009, !2011, !2013, !599, !2015, !2017, !2019, !2021, !426, !428, !979, !112}
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!47, !52, !52}
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!47, !47, !52, !52}
!2013 = !DISubroutineType(types: !2014)
!2014 = !{!47, !47, !599, !52}
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!7, !52}
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!47, !52}
!2019 = !DISubroutineType(types: !2020)
!2020 = !{!47, !47, !52}
!2021 = !DISubroutineType(types: !2022)
!2022 = !{!47, !47, !599}
!2023 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2024, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2025, nameTableKind: None)
!2024 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!2025 = !{!131, !667}
!2026 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2027, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2028, nameTableKind: None)
!2027 = !DIFile(filename: "./lib/xfts.c", directory: "/home/mohamad/clone/coreutils")
!2028 = !{!47, !2029, !2031, !1331, !5, !2113, !2120, !117, !2122, !2117, !2123, !2118, !539}
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!2031, !1331, !5, !2113}
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1354, line: 197, baseType: !2033)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1354, line: 80, size: 1024, elements: !2034)
!2034 = !{!2035, !2081, !2082, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2097, !2098, !2099, !2104}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !2033, file: !1354, line: 81, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1354, line: 199, size: 2112, elements: !2038)
!2038 = !{!2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2080}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2037, file: !1354, line: 200, baseType: !2036, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !2037, file: !1354, line: 201, baseType: !2036, size: 64, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !2037, file: !1354, line: 202, baseType: !2036, size: 64, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !2037, file: !1354, line: 203, baseType: !580, size: 64, offset: 192)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !2037, file: !1354, line: 206, baseType: !32, size: 64, offset: 256)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !2037, file: !1354, line: 207, baseType: !47, size: 64, offset: 320)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !2037, file: !1354, line: 208, baseType: !7, size: 64, offset: 384)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2037, file: !1354, line: 209, baseType: !7, size: 64, offset: 448)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !2037, file: !1354, line: 210, baseType: !5, size: 32, offset: 512)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !2037, file: !1354, line: 211, baseType: !5, size: 32, offset: 544)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2037, file: !1354, line: 212, baseType: !52, size: 64, offset: 576)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !2037, file: !1354, line: 214, baseType: !2031, size: 64, offset: 640)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !2037, file: !1354, line: 218, baseType: !539, size: 64, offset: 704)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !2037, file: !1354, line: 220, baseType: !52, size: 64, offset: 768)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !2037, file: !1354, line: 225, baseType: !1376, size: 64, offset: 832)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !2037, file: !1354, line: 241, baseType: !34, size: 16, offset: 896)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !2037, file: !1354, line: 245, baseType: !34, size: 16, offset: 912)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !2037, file: !1354, line: 251, baseType: !34, size: 16, offset: 928)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !2037, file: !1354, line: 253, baseType: !2058, size: 1152, offset: 960)
!2058 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2059, size: 1152, elements: !39)
!2059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !2060)
!2060 = !{!2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2077, !2078, !2079}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2059, file: !315, line: 48, baseType: !228, size: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2059, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2059, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2059, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2059, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2059, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2059, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2059, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2059, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2059, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2059, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2059, file: !315, line: 91, baseType: !2073, size: 128, offset: 576)
!2073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !2074)
!2074 = !{!2075, !2076}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2073, file: !335, line: 122, baseType: !338, size: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2073, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2059, file: !315, line: 92, baseType: !2073, size: 128, offset: 704)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2059, file: !315, line: 93, baseType: !2073, size: 128, offset: 832)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2059, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !2037, file: !1354, line: 254, baseType: !1404, offset: 2112)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !2033, file: !1354, line: 82, baseType: !2036, size: 64, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !2033, file: !1354, line: 83, baseType: !2083, size: 64, offset: 128)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !2033, file: !1354, line: 84, baseType: !227, size: 64, offset: 192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2033, file: !1354, line: 85, baseType: !7, size: 64, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !2033, file: !1354, line: 86, baseType: !5, size: 32, offset: 320)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !2033, file: !1354, line: 87, baseType: !5, size: 32, offset: 352)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2033, file: !1354, line: 89, baseType: !52, size: 64, offset: 384)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !2033, file: !1354, line: 90, baseType: !52, size: 64, offset: 448)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !2033, file: !1354, line: 91, baseType: !2091, size: 64, offset: 512)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{!5, !2094, !2094}
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2037)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !2033, file: !1354, line: 160, baseType: !5, size: 32, offset: 576)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !2033, file: !1354, line: 169, baseType: !1425, size: 64, offset: 640)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2033, file: !1354, line: 191, baseType: !2100, size: 64, offset: 704)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2033, file: !1354, line: 171, size: 64, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2100, file: !1354, line: 184, baseType: !1425, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2100, file: !1354, line: 190, baseType: !1432, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !2033, file: !1354, line: 196, baseType: !2105, size: 256, offset: 768)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1436, line: 39, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1436, line: 31, size: 256, elements: !2107)
!2107 = !{!2108, !2109, !2110, !2111, !2112}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2106, file: !1436, line: 33, baseType: !1440, size: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2106, file: !1436, line: 34, baseType: !5, size: 32, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2106, file: !1436, line: 35, baseType: !67, size: 32, offset: 160)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2106, file: !1436, line: 36, baseType: !67, size: 32, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2106, file: !1436, line: 37, baseType: !117, size: 8, offset: 224)
!2113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2114, size: 64)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!5, !2116, !2116}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2118, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2119)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1354, line: 255, baseType: !2037)
!2120 = !DISubroutineType(types: !2121)
!2121 = !{!117, !2122, !2117}
!2122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2123, size: 64)
!2123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2032)
!2124 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2125, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2126, nameTableKind: None)
!2125 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!2126 = !{!1234, !117, !7, !52, !579, !2127}
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2129)
!2129 = !{!2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2128, file: !2, line: 242, baseType: !5, size: 32)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2128, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2128, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2128, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2128, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2128, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2128, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2128, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2128, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2128, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2128, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2128, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2128, file: !2, line: 260, baseType: !2143, size: 64, offset: 768)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2145)
!2145 = !{!2146, !2147, !2148}
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2144, file: !2, line: 157, baseType: !2143, size: 64)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2144, file: !2, line: 158, baseType: !2127, size: 64, offset: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2144, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2128, file: !2, line: 262, baseType: !2127, size: 64, offset: 832)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2128, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2128, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2128, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2128, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2128, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2128, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2128, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2128, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2128, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2128, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2128, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2128, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2128, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2128, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2128, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2165 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2166, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2167, nameTableKind: None)
!2166 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!2167 = !{!47, !2168, !5, !2170, !2210, !2171}
!2168 = !DISubroutineType(types: !2169)
!2169 = !{!5, !2170}
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2173)
!2173 = !{!2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2172, file: !2, line: 242, baseType: !5, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2172, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2172, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2172, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2172, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2172, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2172, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2172, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2172, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2172, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2172, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2172, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2172, file: !2, line: 260, baseType: !2187, size: 64, offset: 768)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2189)
!2189 = !{!2190, !2191, !2193}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2188, file: !2, line: 157, baseType: !2187, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2188, file: !2, line: 158, baseType: !2192, size: 64, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2188, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2172, file: !2, line: 262, baseType: !2192, size: 64, offset: 832)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2172, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2172, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2172, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2172, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2172, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2172, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2172, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2172, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2172, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2172, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2172, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2172, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2172, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2172, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2172, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2210 = !DISubroutineType(types: !2211)
!2211 = !{null, !2170}
!2212 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2213, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2214, nameTableKind: None)
!2213 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!2214 = !{!2215, !52, !2217, !2218, !7, !5}
!2215 = !DISubroutineType(types: !2216)
!2216 = !{!52, !2217}
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2219, file: !2, line: 242, baseType: !5, size: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2219, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2219, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2219, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2219, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2219, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2219, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2219, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2219, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2219, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2219, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2219, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2219, file: !2, line: 260, baseType: !2234, size: 64, offset: 768)
!2234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2235, size: 64)
!2235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2236)
!2236 = !{!2237, !2238, !2240}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2235, file: !2, line: 157, baseType: !2234, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2235, file: !2, line: 158, baseType: !2239, size: 64, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2235, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2219, file: !2, line: 262, baseType: !2239, size: 64, offset: 832)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2219, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2219, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2219, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2219, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2219, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2219, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2219, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2219, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2219, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2219, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2219, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2219, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2219, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2219, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2219, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2257 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2258, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2259, nameTableKind: None)
!2258 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!2259 = !{!47, !2260, !5, !2262, !245, !2263, !7, !45}
!2260 = !DISubroutineType(types: !2261)
!2261 = !{!5, !2262, !245, !5}
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2265)
!2265 = !{!2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2264, file: !2, line: 242, baseType: !5, size: 32)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2264, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2264, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2264, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2264, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2264, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2264, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2264, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2264, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2264, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2264, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2264, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2264, file: !2, line: 260, baseType: !2279, size: 64, offset: 768)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2281)
!2281 = !{!2282, !2283, !2285}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2280, file: !2, line: 157, baseType: !2279, size: 64)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2280, file: !2, line: 158, baseType: !2284, size: 64, offset: 64)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2264, size: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2280, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2264, file: !2, line: 262, baseType: !2284, size: 64, offset: 832)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2264, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2264, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2264, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2264, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2264, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2264, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2264, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2264, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2264, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2264, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2264, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2264, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2264, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2264, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2264, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2303, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2304, retainedTypes: !2311, nameTableKind: None)
!2303 = !DIFile(filename: "./lib/fts.c", directory: "/home/mohamad/clone/coreutils")
!2304 = !{!2305}
!2305 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "leaf_optimization", file: !2306, line: 643, baseType: !67, size: 32, elements: !2307)
!2306 = !DIFile(filename: "lib/fts.c", directory: "/home/mohamad/clone/coreutils")
!2307 = !{!2308, !2309, !2310}
!2308 = !DIEnumerator(name: "NO_LEAF_OPTIMIZATION", value: 0, isUnsigned: true)
!2309 = !DIEnumerator(name: "OK_LEAF_OPTIMIZATION", value: 1, isUnsigned: true)
!2310 = !DIEnumerator(name: "NOSTAT_LEAF_OPTIMIZATION", value: 2, isUnsigned: true)
!2311 = !{!47, !1376, !459, !7, !32, !1077, !2312, !2409, !2331, !1331, !5, !2411, !2414, !52, !117, !2332, !2346, !1332, !2315, !539, !112, !2319, !34, !2415, !2338, !1425, !2417, !228, !227, !580, !8, !30, !130, !2419, !2421, !2423, !2425, !2355, !520, !428, !2427, !224, !522, !2435, !2437, !2438, !2439, !2441, !2442, !2444, !2446, !225, !2448, !2313, !2450, !2452, !2314, !2454, !2456, !2453, !2461, !2463, !2465, !2466, !320, !2468, !532, !468, !2476, !2478, !67, !157, !2479, !2347, !2349, !2481, !1404, !2483, !2485, !1078, !2486, !2488, !2490, !2492, !2494}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTSENT", file: !1354, line: 255, baseType: !2316)
!2316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ftsent", file: !1354, line: 199, size: 2112, elements: !2317)
!2317 = !{!2318, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2408}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2316, file: !1354, line: 200, baseType: !2319, size: 64)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "fts_parent", scope: !2316, file: !1354, line: 201, baseType: !2319, size: 64, offset: 64)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "fts_link", scope: !2316, file: !1354, line: 202, baseType: !2319, size: 64, offset: 128)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dirp", scope: !2316, file: !1354, line: 203, baseType: !580, size: 64, offset: 192)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "fts_number", scope: !2316, file: !1354, line: 206, baseType: !32, size: 64, offset: 256)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pointer", scope: !2316, file: !1354, line: 207, baseType: !47, size: 64, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "fts_accpath", scope: !2316, file: !1354, line: 208, baseType: !7, size: 64, offset: 384)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2316, file: !1354, line: 209, baseType: !7, size: 64, offset: 448)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "fts_errno", scope: !2316, file: !1354, line: 210, baseType: !5, size: 32, offset: 512)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "fts_symfd", scope: !2316, file: !1354, line: 211, baseType: !5, size: 32, offset: 544)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2316, file: !1354, line: 212, baseType: !52, size: 64, offset: 576)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fts", scope: !2316, file: !1354, line: 214, baseType: !2331, size: 64, offset: 640)
!2331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2332, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_typedef, name: "FTS", file: !1354, line: 197, baseType: !2333)
!2333 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1354, line: 80, size: 1024, elements: !2334)
!2334 = !{!2335, !2336, !2337, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2352, !2353, !2354, !2370}
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cur", scope: !2333, file: !1354, line: 81, baseType: !2319, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "fts_child", scope: !2333, file: !1354, line: 82, baseType: !2319, size: 64, offset: 64)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "fts_array", scope: !2333, file: !1354, line: 83, baseType: !2338, size: 64, offset: 128)
!2338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2319, size: 64)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "fts_dev", scope: !2333, file: !1354, line: 84, baseType: !227, size: 64, offset: 192)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "fts_path", scope: !2333, file: !1354, line: 85, baseType: !7, size: 64, offset: 256)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "fts_rfd", scope: !2333, file: !1354, line: 86, baseType: !5, size: 32, offset: 320)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cwd_fd", scope: !2333, file: !1354, line: 87, baseType: !5, size: 32, offset: 352)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "fts_pathlen", scope: !2333, file: !1354, line: 89, baseType: !52, size: 64, offset: 384)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "fts_nitems", scope: !2333, file: !1354, line: 90, baseType: !52, size: 64, offset: 448)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "fts_compar", scope: !2333, file: !1354, line: 91, baseType: !2346, size: 64, offset: 512)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!5, !2349, !2349}
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2316)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "fts_options", scope: !2333, file: !1354, line: 160, baseType: !5, size: 32, offset: 576)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "fts_leaf_optimization_works_ht", scope: !2333, file: !1354, line: 169, baseType: !1425, size: 64, offset: 640)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "fts_cycle", scope: !2333, file: !1354, line: 191, baseType: !2355, size: 64, offset: 704)
!2355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2333, file: !1354, line: 171, size: 64, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2355, file: !1354, line: 184, baseType: !1425, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2355, file: !1354, line: 190, baseType: !2359, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !2361, line: 28, size: 256, elements: !2362)
!2361 = !DIFile(filename: "./lib/cycle-check.h", directory: "/home/mohamad/clone/coreutils")
!2362 = !{!2363, !2368, !2369}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !2360, file: !2361, line: 30, baseType: !2364, size: 128)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !221, line: 7, size: 128, elements: !2365)
!2365 = !{!2366, !2367}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2364, file: !221, line: 9, baseType: !224, size: 64)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2364, file: !221, line: 10, baseType: !227, size: 64, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !2360, file: !2361, line: 31, baseType: !459, size: 64, offset: 128)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2360, file: !2361, line: 32, baseType: !5, size: 32, offset: 192)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "fts_fd_ring", scope: !2333, file: !1354, line: 196, baseType: !2371, size: 256, offset: 768)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1436, line: 39, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1436, line: 31, size: 256, elements: !2373)
!2373 = !{!2374, !2375, !2376, !2377, !2378}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2372, file: !1436, line: 33, baseType: !1440, size: 128)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2372, file: !1436, line: 34, baseType: !5, size: 32, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2372, file: !1436, line: 35, baseType: !67, size: 32, offset: 160)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2372, file: !1436, line: 36, baseType: !67, size: 32, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2372, file: !1436, line: 37, baseType: !117, size: 8, offset: 224)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "fts_level", scope: !2316, file: !1354, line: 218, baseType: !539, size: 64, offset: 704)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "fts_namelen", scope: !2316, file: !1354, line: 220, baseType: !52, size: 64, offset: 768)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "fts_n_dirs_remaining", scope: !2316, file: !1354, line: 225, baseType: !1376, size: 64, offset: 832)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fts_info", scope: !2316, file: !1354, line: 241, baseType: !34, size: 16, offset: 896)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "fts_flags", scope: !2316, file: !1354, line: 245, baseType: !34, size: 16, offset: 912)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "fts_instr", scope: !2316, file: !1354, line: 251, baseType: !34, size: 16, offset: 928)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fts_statp", scope: !2316, file: !1354, line: 253, baseType: !2386, size: 1152, offset: 960)
!2386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2387, size: 1152, elements: !39)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2405, !2406, !2407}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2387, file: !315, line: 48, baseType: !228, size: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2387, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2387, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2387, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2387, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2387, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2387, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2387, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2387, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2387, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2387, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2387, file: !315, line: 91, baseType: !2401, size: 128, offset: 576)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !2402)
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2401, file: !335, line: 122, baseType: !338, size: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2401, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2387, file: !315, line: 92, baseType: !2401, size: 128, offset: 704)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2387, file: !315, line: 93, baseType: !2401, size: 128, offset: 832)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2387, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "fts_name", scope: !2316, file: !1354, line: 254, baseType: !1404, offset: 2112)
!2409 = !DISubroutineType(types: !2410)
!2410 = !{!2331, !1331, !5, !2411}
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!5, !2312, !2312}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!5, !2331}
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!2414, !2331}
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!5, !2331, !2414, !5}
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!2414, !2331, !5}
!2423 = !DISubroutineType(types: !2424)
!2424 = !{null, !2414, !117}
!2425 = !DISubroutineType(types: !2426)
!2426 = !{!117, !2331}
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2429)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Active_dir", file: !2430, line: 24, size: 192, elements: !2431)
!2430 = !DIFile(filename: "./lib/fts-cycle.c", directory: "/home/mohamad/clone/coreutils")
!2431 = !{!2432, !2433, !2434}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2429, file: !2430, line: 26, baseType: !227, size: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2429, file: !2430, line: 27, baseType: !224, size: 64, offset: 64)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "fts_ent", scope: !2429, file: !2430, line: 28, baseType: !2414, size: 64, offset: 128)
!2435 = !DISubroutineType(types: !2436)
!2436 = !{!5, !2437, !112}
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2332)
!2439 = !DISubroutineType(types: !2440)
!2440 = !{null, !2441}
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2442 = !DISubroutineType(types: !2443)
!2443 = !{null, !2331}
!2444 = !DISubroutineType(types: !2445)
!2445 = !{null, !2331, !2414}
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2387)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!2305, !2313, !5}
!2450 = !DISubroutineType(types: !2451)
!2451 = !{!2452, !2313, !5}
!2452 = !DIDerivedType(tag: DW_TAG_typedef, name: "fsword", file: !2306, line: 671, baseType: !2453)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsword_t", file: !31, line: 170, baseType: !32)
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !194, line: 69, baseType: !1426)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_type", file: !2306, line: 677, size: 128, elements: !2458)
!2458 = !{!2459, !2460}
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2457, file: !2306, line: 679, baseType: !227, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !2457, file: !2306, line: 680, baseType: !2452, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2457)
!2463 = !DISubroutineType(types: !2464)
!2464 = !{!117, !2331, !2414}
!2465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2429, size: 64)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{null, !2331, !5, !117}
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !589, line: 22, size: 2240, elements: !2470)
!2470 = !{!2471, !2472, !2473, !2474, !2475}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !2469, file: !589, line: 25, baseType: !225, size: 64)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !2469, file: !589, line: 26, baseType: !30, size: 64, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !2469, file: !589, line: 31, baseType: !34, size: 16, offset: 128)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !2469, file: !589, line: 32, baseType: !468, size: 8, offset: 144)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !2469, file: !589, line: 33, baseType: !532, size: 2048, offset: 152)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{null, !2478, !67}
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2387, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!117, !2313, !5}
!2481 = !DISubroutineType(types: !2482)
!2482 = !{!34, !2331, !2414, !117}
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!2414, !2331, !2414, !52}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{!2414, !2331, !112, !52}
!2488 = !DISubroutineType(types: !2489)
!2489 = !{null, !2414}
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!117, !2331, !52}
!2492 = !DISubroutineType(types: !2493)
!2493 = !{!52, !1331}
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!5, !2331, !2414, !5, !112}
!2496 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2497, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2498, nameTableKind: None)
!2497 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!2498 = !{!52, !2499, !2501, !112, !2502, !1031, !468, !113}
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!52, !2501, !112, !52, !2502}
!2501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1018, line: 106, baseType: !2504)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1018, line: 94, baseType: !2505)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1018, line: 82, size: 64, elements: !2506)
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2505, file: !1018, line: 84, baseType: !5, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2505, file: !1018, line: 93, baseType: !2509, size: 32, offset: 32)
!2509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !1018, line: 85, size: 32, elements: !2510)
!2510 = !{!2511, !2512}
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2509, file: !1018, line: 88, baseType: !67, size: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2509, file: !1018, line: 92, baseType: !1028, size: 32)
!2513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2514, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2515, nameTableKind: None)
!2514 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!2515 = !{!2516, !2518}
!2516 = !DISubroutineType(types: !2517)
!2517 = !{null, !2518}
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2520, line: 260, size: 32, elements: !2521)
!2520 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mohamad/clone/coreutils")
!2521 = !{!2522}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2519, file: !2520, line: 261, baseType: !157, size: 32)
!2523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2524, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2525, nameTableKind: None)
!2524 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!2525 = !{!2526, !5, !112, !157, !2528}
!2526 = !DISubroutineType(types: !2527)
!2527 = !{!5, !112, !5, !157, !2528}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2520, line: 260, size: 32, elements: !2530)
!2530 = !{!2531}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2529, file: !2520, line: 261, baseType: !157, size: 32)
!2532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2533, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2534, nameTableKind: None)
!2533 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!2534 = !{!1582, !5, !112, !157, !2535, !2537, !117}
!2535 = !DISubroutineType(types: !2536)
!2536 = !{!5, !2537, !112, !5}
!2537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2520, line: 260, size: 32, elements: !2539)
!2539 = !{!2540}
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2538, file: !2520, line: 261, baseType: !157, size: 32)
!2541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2542, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2543, nameTableKind: None)
!2542 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mohamad/clone/coreutils")
!2543 = !{!67, !2544, !1552, !5, !2546, !1555, !2548, !52, !2550, !2552, !2553, !2555}
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!1552, !1552, !5}
!2546 = !DISubroutineType(types: !2547)
!2547 = !{!1555, !1555, !5}
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!52, !52, !5}
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!2552, !2552, !5}
!2552 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !460, line: 49, baseType: !34)
!2553 = !DISubroutineType(types: !2554)
!2554 = !{!2555, !2555, !5}
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !460, line: 48, baseType: !468)
!2556 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2557, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2558, nameTableKind: None)
!2557 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!2558 = !{!466, !1877, !5, !112, !468, !467}
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2561, nameTableKind: None)
!2560 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!2561 = !{!2562, !5, !2564, !2604}
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!5, !2564}
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !2566)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2567)
!2567 = !{!2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2566, file: !2, line: 242, baseType: !5, size: 32)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2566, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2566, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2566, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2566, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2566, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2566, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2566, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2566, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2566, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2566, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2566, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2566, file: !2, line: 260, baseType: !2581, size: 64, offset: 768)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2583)
!2583 = !{!2584, !2585, !2587}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2582, file: !2, line: 157, baseType: !2581, size: 64)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2582, file: !2, line: 158, baseType: !2586, size: 64, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2582, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2566, file: !2, line: 262, baseType: !2586, size: 64, offset: 832)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2566, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2566, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2566, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2566, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2566, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2566, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2566, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2566, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2566, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2566, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2566, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2566, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2566, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2566, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2566, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2604 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !117)
!2605 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2606, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2607, nameTableKind: None)
!2606 = !DIFile(filename: "./lib/cycle-check.c", directory: "/home/mohamad/clone/coreutils")
!2607 = !{!2608, !2610, !459, !5, !2620, !117, !2622, !225, !224, !228, !227, !2645}
!2608 = !DISubroutineType(types: !2609)
!2609 = !{null, !2610}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cycle_check_state", file: !2361, line: 28, size: 256, elements: !2612)
!2612 = !{!2613, !2618, !2619}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ino", scope: !2611, file: !2361, line: 30, baseType: !2614, size: 128)
!2614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ino", file: !221, line: 7, size: 128, elements: !2615)
!2615 = !{!2616, !2617}
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2614, file: !221, line: 9, baseType: !224, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2614, file: !221, line: 10, baseType: !227, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "chdir_counter", scope: !2611, file: !2361, line: 31, baseType: !459, size: 64, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2611, file: !2361, line: 32, baseType: !5, size: 32, offset: 192)
!2620 = !DISubroutineType(types: !2621)
!2621 = !{!117, !2610, !2622}
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2624)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !2625)
!2625 = !{!2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2642, !2643, !2644}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2624, file: !315, line: 48, baseType: !228, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2624, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2624, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2624, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2624, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2624, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2624, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2624, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2624, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2624, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2624, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2624, file: !315, line: 91, baseType: !2638, size: 128, offset: 576)
!2638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !2639)
!2639 = !{!2640, !2641}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2638, file: !335, line: 122, baseType: !338, size: 64)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2638, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2624, file: !315, line: 92, baseType: !2638, size: 128, offset: 704)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2624, file: !315, line: 93, baseType: !2638, size: 128, offset: 832)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2624, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!117, !459}
!2647 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2648, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2649, nameTableKind: None)
!2648 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!2649 = !{!2650, !580, !112, !5}
!2650 = !DISubroutineType(types: !2651)
!2651 = !{!580, !112}
!2652 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2653, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2654, nameTableKind: None)
!2653 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!2654 = !{!2655, !2657, !2662}
!2655 = !DISubroutineType(types: !2656)
!2656 = !{null, !2657}
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !2659)
!2659 = !{!2660, !2661}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2658, file: !335, line: 122, baseType: !338, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2658, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!2662 = !DISubroutineType(types: !2663)
!2663 = !{!2658}
!2664 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2665, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2666, nameTableKind: None)
!2665 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!2666 = !{!304, !117, !5, !112}
!2667 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2668, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2669, nameTableKind: None)
!2668 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!2669 = !{!520, !52, !428, !112, !113}
!2670 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2671, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2672, nameTableKind: None)
!2671 = !DIFile(filename: "./lib/i-ring.c", directory: "/home/mohamad/clone/coreutils")
!2672 = !{!2673, !2675, !5, !2676, !117, !67, !1440, !2684, !2686, !2687, !2688, !2690}
!2673 = !DISubroutineType(types: !2674)
!2674 = !{null, !2675, !5}
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2676, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "I_ring", file: !1436, line: 39, baseType: !2677)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "I_ring", file: !1436, line: 31, size: 256, elements: !2678)
!2678 = !{!2679, !2680, !2681, !2682, !2683}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "ir_data", scope: !2677, file: !1436, line: 33, baseType: !1440, size: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ir_default_val", scope: !2677, file: !1436, line: 34, baseType: !5, size: 32, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "ir_front", scope: !2677, file: !1436, line: 35, baseType: !67, size: 32, offset: 160)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "ir_back", scope: !2677, file: !1436, line: 36, baseType: !67, size: 32, offset: 192)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "ir_empty", scope: !2677, file: !1436, line: 37, baseType: !117, size: 8, offset: 224)
!2684 = !DISubroutineType(types: !2685)
!2685 = !{!117, !2686}
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2676)
!2688 = !DISubroutineType(types: !2689)
!2689 = !{!5, !2675, !5}
!2690 = !DISubroutineType(types: !2691)
!2691 = !{!5, !2675}
!2692 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2693, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2694, nameTableKind: None)
!2693 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!2694 = !{!47, !2695, !112}
!2695 = !DISubroutineType(types: !562)
!2696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2697, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2698, nameTableKind: None)
!2697 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!2698 = !{!2699, !5, !112, !157, !2701}
!2699 = !DISubroutineType(types: !2700)
!2700 = !{!5, !5, !112, !5}
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1306, line: 14, baseType: !2702)
!2702 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2697, line: 35, baseType: !2703)
!2703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2704, size: 192, elements: !39)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2697, line: 35, size: 192, elements: !2705)
!2705 = !{!2706, !2707, !2708, !2709}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2704, file: !2697, line: 35, baseType: !67, size: 32)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2704, file: !2697, line: 35, baseType: !67, size: 32, offset: 32)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2704, file: !2697, line: 35, baseType: !47, size: 64, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2704, file: !2697, line: 35, baseType: !47, size: 64, offset: 128)
!2710 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2711, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2712, nameTableKind: None)
!2711 = !DIFile(filename: "./lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!2712 = !{!47, !2713, !2715, !2720, !2724, !2726, !112, !52, !2728, !2730, !2732, !2734, !2735, !2737, !5, !2739}
!2713 = !DISubroutineType(types: !2714)
!2714 = !{!2715, !2720}
!2715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2716, size: 64)
!2716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !2717, line: 54, size: 192, elements: !2718)
!2717 = !DIFile(filename: "lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!2718 = !{!2719, !2723, !2725}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2716, file: !2717, line: 57, baseType: !2720, size: 64)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2722, line: 25, flags: DIFlagFwdDecl)
!2722 = !DIFile(filename: "./lib/randread.h", directory: "/home/mohamad/clone/coreutils")
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !2716, file: !2717, line: 64, baseType: !2724, size: 64, offset: 64)
!2724 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1106, line: 30, baseType: !459)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !2716, file: !2717, line: 65, baseType: !2724, size: 64, offset: 128)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!2715, !112, !52}
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!2720, !2730}
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2716)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!2724, !2715, !2724}
!2734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 64, elements: !613)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{null, !2715}
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!5, !2715}
!2739 = !DISubroutineType(types: !2740)
!2740 = !{!2724, !2724}
!2741 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2742, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2743, nameTableKind: None)
!2742 = !DIFile(filename: "./lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!2743 = !{!52, !2744, !2746, !112, !2751, !2826, !2792, !2828, !428, !2830, !47, !2832, !5, !2834, !2793, !667, !2836, !7, !579, !2838, !477, !2840, !2842, !2843, !2845, !2846}
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!2746, !112, !52}
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!2747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2748, line: 79, size: 33216, elements: !2749)
!2748 = !DIFile(filename: "lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!2749 = !{!2750, !2791, !2795, !2796}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2747, file: !2748, line: 83, baseType: !2751, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !2753)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2754)
!2754 = !{!2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2753, file: !2, line: 242, baseType: !5, size: 32)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2753, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2753, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2753, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2753, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2753, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2753, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2753, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2753, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2753, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2753, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2753, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2753, file: !2, line: 260, baseType: !2768, size: 64, offset: 768)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2770)
!2770 = !{!2771, !2772, !2774}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2769, file: !2, line: 157, baseType: !2768, size: 64)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2769, file: !2, line: 158, baseType: !2773, size: 64, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2769, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2753, file: !2, line: 262, baseType: !2773, size: 64, offset: 832)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2753, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2753, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2753, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2753, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2753, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2753, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2753, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2753, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2753, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2753, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2753, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2753, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2753, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2753, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2753, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2747, file: !2748, line: 90, baseType: !2792, size: 64, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2793, size: 64)
!2793 = !DISubroutineType(types: !2794)
!2794 = !{null, !428}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !2747, file: !2748, line: 91, baseType: !428, size: 64, offset: 128)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2747, file: !2748, line: 117, baseType: !2797, size: 33024, offset: 192)
!2797 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2747, file: !2748, line: 96, size: 33024, elements: !2798)
!2798 = !{!2799, !2803}
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2797, file: !2748, line: 99, baseType: !2800, size: 32768)
!2800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32768, elements: !2801)
!2801 = !{!2802}
!2802 = !DISubrange(count: 4096)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !2797, file: !2748, line: 116, baseType: !2804, size: 33024)
!2804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !2748, line: 102, size: 33024, elements: !2805)
!2805 = !{!2806, !2807, !2818}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !2804, file: !2748, line: 105, baseType: !52, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2804, file: !2748, line: 108, baseType: !2808, size: 16576, offset: 64)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2809, line: 56, size: 16576, elements: !2810)
!2809 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mohamad/clone/coreutils")
!2810 = !{!2811, !2815, !2816, !2817}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2808, file: !2809, line: 58, baseType: !2812, size: 16384)
!2812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2813, size: 16384, elements: !533)
!2813 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2809, line: 44, baseType: !2814)
!2814 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !460, line: 80, baseType: !54)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2808, file: !2809, line: 59, baseType: !2813, size: 64, offset: 16384)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2808, file: !2809, line: 59, baseType: !2813, size: 64, offset: 16448)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2808, file: !2809, line: 59, baseType: !2813, size: 64, offset: 16512)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2804, file: !2748, line: 115, baseType: !2819, size: 16384, offset: 16640)
!2819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2804, file: !2748, line: 111, size: 16384, elements: !2820)
!2820 = !{!2821, !2822}
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2819, file: !2748, line: 113, baseType: !2812, size: 16384)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2819, file: !2748, line: 114, baseType: !2823, size: 16384)
!2823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 16384, elements: !2824)
!2824 = !{!2825}
!2825 = !DISubrange(count: 2048)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{null, !2746, !2792}
!2828 = !DISubroutineType(types: !2829)
!2829 = !{null, !2746, !428}
!2830 = !DISubroutineType(types: !2831)
!2831 = !{null, !2746, !47, !52}
!2832 = !DISubroutineType(types: !2833)
!2833 = !{!5, !2746}
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!2746, !2751, !428}
!2836 = !DISubroutineType(types: !2837)
!2837 = !{null, !47, !52, !52}
!2838 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !158, line: 98, baseType: !2839)
!2839 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !31, line: 133, baseType: !5)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{null, !2746, !2842, !52}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{null, !2845, !47, !52}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2804, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2847 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2848, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2849, nameTableKind: None)
!2848 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!2849 = !{!2813, !2850, !2852, !2846, !2859, !5, !2812, !2861, !2863, !428, !112, !2864, !2865}
!2850 = !DISubroutineType(types: !2851)
!2851 = !{null, !2852, !2846}
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2809, line: 56, size: 16576, elements: !2854)
!2854 = !{!2855, !2856, !2857, !2858}
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2853, file: !2809, line: 58, baseType: !2812, size: 16384)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2853, file: !2809, line: 59, baseType: !2813, size: 64, offset: 16384)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2853, file: !2809, line: 59, baseType: !2813, size: 64, offset: 16448)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2853, file: !2809, line: 59, baseType: !2813, size: 64, offset: 16512)
!2859 = !DISubroutineType(types: !2860)
!2860 = !{null, !2852}
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!2813, !2863, !2813}
!2863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2864, size: 64)
!2864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2813)
!2865 = !DISubroutineType(types: !2866)
!2866 = !{!2813, !2813}
!2867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2868, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !1941, nameTableKind: None)
!2868 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!2869 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2870, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2871, nameTableKind: None)
!2870 = !DIFile(filename: "./lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!2871 = !{!2872, !47, !52}
!2872 = !DISubroutineType(types: !2873)
!2873 = !{null, !47, !52}
!2874 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2875, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2876, nameTableKind: None)
!2875 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!2876 = !{!2877, !5, !2879}
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!5, !2879}
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !2881)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2882)
!2882 = !{!2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2881, file: !2, line: 242, baseType: !5, size: 32)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2881, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2881, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2881, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2881, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2881, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2881, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2881, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2881, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2881, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2881, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2881, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2881, file: !2, line: 260, baseType: !2896, size: 64, offset: 768)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2898)
!2898 = !{!2899, !2900, !2902}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2897, file: !2, line: 157, baseType: !2896, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2897, file: !2, line: 158, baseType: !2901, size: 64, offset: 64)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2897, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2881, file: !2, line: 262, baseType: !2901, size: 64, offset: 832)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2881, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2881, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2881, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2881, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2881, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2881, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2881, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2881, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2881, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2881, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2881, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2881, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2881, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2881, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2881, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2919 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2920, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2921, nameTableKind: None)
!2920 = !DIFile(filename: "./lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!2921 = !{!2922, !7, !2924}
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!7, !2924}
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "nl_item", file: !2925, line: 36, baseType: !5)
!2925 = !DIFile(filename: "/usr/include/nl_types.h", directory: "")
!2926 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2927, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2928, nameTableKind: None)
!2927 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mohamad/clone/coreutils")
!2928 = !{!304, !117, !5, !1828}
!2929 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2930, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !140, retainedTypes: !2931, nameTableKind: None)
!2930 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!2931 = !{!2932, !2934, !112, !5}
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!2934, !112, !112}
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !246, line: 48, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2937)
!2937 = !{!2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2936, file: !2, line: 242, baseType: !5, size: 32)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2936, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2936, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2936, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2936, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2936, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2936, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2936, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2936, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2936, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2936, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2936, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2936, file: !2, line: 260, baseType: !2951, size: 64, offset: 768)
!2951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2952, size: 64)
!2952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2953)
!2953 = !{!2954, !2955, !2957}
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2952, file: !2, line: 157, baseType: !2951, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2952, file: !2, line: 158, baseType: !2956, size: 64, offset: 64)
!2956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2952, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2936, file: !2, line: 262, baseType: !2956, size: 64, offset: 832)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2936, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2936, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2936, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2936, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2936, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2936, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2936, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2936, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2936, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2936, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2936, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2936, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2936, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2936, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2936, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2974 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)"}
!2975 = !{i32 2, !"ctir", i32 1}
!2976 = !{i32 2, !"Dwarf Version", i32 4}
!2977 = !{i32 2, !"Debug Info Version", i32 3}
!2978 = !{i32 1, !"wchar_size", i32 4}
!2979 = distinct !DISubprogram(name: "usage", scope: !63, file: !63, line: 286, type: !110, scopeLine: 287, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !140)
!2980 = !{!2981, !2981, i64 0}
!2981 = !{!"int", !2982, i64 0}
!2982 = !{!"omnipotent char", !2983, i64 0}
!2983 = !{!"Simple C/C++ TBAA"}
!2984 = !DILocalVariable(name: "status", arg: 1, scope: !2979, file: !63, line: 286, type: !5)
!2985 = !DILocation(line: 286, column: 12, scope: !2979)
!2986 = !DILocation(line: 288, column: 7, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2979, file: !63, line: 288, column: 7)
!2988 = !DILocation(line: 288, column: 14, scope: !2987)
!2989 = !DILocation(line: 288, column: 7, scope: !2979)
!2990 = !DILocation(line: 289, column: 5, scope: !2987)
!2991 = !DILocation(line: 289, column: 5, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2987, file: !63, line: 289, column: 5)
!2993 = !{!2994, !2994, i64 0}
!2994 = !{!"any pointer", !2982, i64 0}
!2995 = !DILocation(line: 292, column: 15, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2987, file: !63, line: 291, column: 5)
!2997 = !DILocation(line: 297, column: 15, scope: !2996)
!2998 = !DILocation(line: 297, column: 29, scope: !2996)
!2999 = !DILocation(line: 297, column: 43, scope: !2996)
!3000 = !DILocation(line: 292, column: 7, scope: !2996)
!3001 = !DILocation(line: 298, column: 7, scope: !2996)
!3002 = !DILocation(line: 302, column: 7, scope: !2996)
!3003 = !DILocation(line: 304, column: 7, scope: !2996)
!3004 = !DILocation(line: 313, column: 7, scope: !2996)
!3005 = !DILocation(line: 318, column: 7, scope: !2996)
!3006 = !DILocation(line: 328, column: 7, scope: !2996)
!3007 = !DILocation(line: 329, column: 7, scope: !2996)
!3008 = !DILocation(line: 330, column: 7, scope: !2996)
!3009 = !DILocation(line: 331, column: 7, scope: !2996)
!3010 = !DILocation(line: 333, column: 9, scope: !2979)
!3011 = !DILocation(line: 333, column: 3, scope: !2979)
!3012 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !138, file: !138, line: 585, type: !131, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!3013 = !DILocation(line: 587, column: 3, scope: !3012)
!3014 = !DILocation(line: 590, column: 1, scope: !3012)
!3015 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !138, file: !138, line: 613, type: !131, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!3016 = !DILocation(line: 615, column: 3, scope: !3015)
!3017 = !DILocation(line: 622, column: 3, scope: !3015)
!3018 = !DILocation(line: 628, column: 1, scope: !3015)
!3019 = !DILocalVariable(name: "program", arg: 1, scope: !139, file: !138, line: 631, type: !112)
!3020 = !DILocation(line: 631, column: 34, scope: !139)
!3021 = !DILocalVariable(name: "infomap", scope: !139, file: !138, line: 633, type: !135)
!3022 = !DILocation(line: 633, column: 67, scope: !139)
!3023 = !DILocalVariable(name: "node", scope: !139, file: !138, line: 643, type: !112)
!3024 = !DILocation(line: 643, column: 15, scope: !139)
!3025 = !DILocation(line: 643, column: 22, scope: !139)
!3026 = !DILocalVariable(name: "map_prog", scope: !139, file: !138, line: 644, type: !146)
!3027 = !DILocation(line: 644, column: 25, scope: !139)
!3028 = !DILocation(line: 644, column: 36, scope: !139)
!3029 = !DILocation(line: 646, column: 3, scope: !139)
!3030 = !DILocation(line: 646, column: 10, scope: !139)
!3031 = !DILocation(line: 646, column: 20, scope: !139)
!3032 = !{!3033, !2994, i64 0}
!3033 = !{!"infomap", !2994, i64 0, !2994, i64 8}
!3034 = !DILocation(line: 646, column: 28, scope: !139)
!3035 = !DILocation(line: 646, column: 33, scope: !139)
!3036 = !DILocation(line: 646, column: 31, scope: !139)
!3037 = !DILocation(line: 0, scope: !139)
!3038 = !DILocation(line: 647, column: 13, scope: !139)
!3039 = distinct !{!3039, !3029, !3038}
!3040 = !DILocation(line: 649, column: 7, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !139, file: !138, line: 649, column: 7)
!3042 = !DILocation(line: 649, column: 17, scope: !3041)
!3043 = !{!3033, !2994, i64 8}
!3044 = !DILocation(line: 649, column: 7, scope: !139)
!3045 = !DILocation(line: 650, column: 12, scope: !3041)
!3046 = !DILocation(line: 650, column: 22, scope: !3041)
!3047 = !DILocation(line: 650, column: 10, scope: !3041)
!3048 = !DILocation(line: 650, column: 5, scope: !3041)
!3049 = !DILocation(line: 652, column: 11, scope: !139)
!3050 = !DILocation(line: 652, column: 3, scope: !139)
!3051 = !DILocalVariable(name: "lc_messages", scope: !139, file: !138, line: 656, type: !112)
!3052 = !DILocation(line: 656, column: 15, scope: !139)
!3053 = !DILocation(line: 656, column: 29, scope: !139)
!3054 = !DILocation(line: 657, column: 7, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !139, file: !138, line: 657, column: 7)
!3056 = !DILocation(line: 657, column: 19, scope: !3055)
!3057 = !DILocation(line: 657, column: 22, scope: !3055)
!3058 = !DILocation(line: 657, column: 7, scope: !139)
!3059 = !DILocation(line: 663, column: 7, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3055, file: !138, line: 658, column: 5)
!3061 = !DILocation(line: 665, column: 5, scope: !3060)
!3062 = !DILocation(line: 666, column: 11, scope: !139)
!3063 = !DILocation(line: 667, column: 24, scope: !139)
!3064 = !DILocation(line: 666, column: 3, scope: !139)
!3065 = !DILocation(line: 668, column: 11, scope: !139)
!3066 = !DILocation(line: 669, column: 11, scope: !139)
!3067 = !DILocation(line: 669, column: 17, scope: !139)
!3068 = !DILocation(line: 669, column: 25, scope: !139)
!3069 = !DILocation(line: 669, column: 22, scope: !139)
!3070 = !DILocation(line: 668, column: 3, scope: !139)
!3071 = !DILocation(line: 670, column: 1, scope: !139)
!3072 = distinct !DISubprogram(name: "main", scope: !63, file: !63, line: 337, type: !114, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !140)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !3074)
!3074 = !{!3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3091, !3092, !3093}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3073, file: !315, line: 48, baseType: !228, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3073, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3073, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3073, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3073, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3073, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3073, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3073, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3073, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3073, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3073, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3073, file: !315, line: 91, baseType: !3087, size: 128, offset: 576)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !3088)
!3088 = !{!3089, !3090}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3087, file: !335, line: 122, baseType: !338, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3087, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3073, file: !315, line: 92, baseType: !3087, size: 128, offset: 704)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3073, file: !315, line: 93, baseType: !3087, size: 128, offset: 832)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3073, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!3094 = !DILocalVariable(name: "argc", arg: 1, scope: !3072, file: !63, line: 337, type: !5)
!3095 = !DILocation(line: 337, column: 11, scope: !3072)
!3096 = !DILocalVariable(name: "argv", arg: 2, scope: !3072, file: !63, line: 337, type: !116)
!3097 = !DILocation(line: 337, column: 24, scope: !3072)
!3098 = !DILocalVariable(name: "c", scope: !3072, file: !63, line: 339, type: !5)
!3099 = !DILocation(line: 339, column: 7, scope: !3072)
!3100 = !DILocalVariable(name: "ok", scope: !3072, file: !63, line: 340, type: !117)
!3101 = !DILocation(line: 340, column: 8, scope: !3072)
!3102 = !DILocalVariable(name: "make_backups", scope: !3072, file: !63, line: 341, type: !117)
!3103 = !DILocation(line: 341, column: 8, scope: !3072)
!3104 = !{!3105, !3105, i64 0}
!3105 = !{!"_Bool", !2982, i64 0}
!3106 = !DILocalVariable(name: "backup_suffix", scope: !3072, file: !63, line: 342, type: !112)
!3107 = !DILocation(line: 342, column: 15, scope: !3072)
!3108 = !DILocalVariable(name: "version_control_string", scope: !3072, file: !63, line: 343, type: !7)
!3109 = !DILocation(line: 343, column: 9, scope: !3072)
!3110 = !DILocalVariable(name: "x", scope: !3072, file: !63, line: 344, type: !150)
!3111 = !DILocation(line: 344, column: 21, scope: !3072)
!3112 = !DILocalVariable(name: "target_directory", scope: !3072, file: !63, line: 345, type: !7)
!3113 = !DILocation(line: 345, column: 9, scope: !3072)
!3114 = !DILocalVariable(name: "no_target_directory", scope: !3072, file: !63, line: 346, type: !117)
!3115 = !DILocation(line: 346, column: 8, scope: !3072)
!3116 = !DILocalVariable(name: "n_files", scope: !3072, file: !63, line: 347, type: !5)
!3117 = !DILocation(line: 347, column: 7, scope: !3072)
!3118 = !DILocalVariable(name: "file", scope: !3072, file: !63, line: 348, type: !116)
!3119 = !DILocation(line: 348, column: 10, scope: !3072)
!3120 = !DILocalVariable(name: "selinux_enabled", scope: !3072, file: !63, line: 349, type: !117)
!3121 = !DILocation(line: 349, column: 8, scope: !3072)
!3122 = !DILocation(line: 352, column: 21, scope: !3072)
!3123 = !DILocation(line: 352, column: 3, scope: !3072)
!3124 = !DILocation(line: 353, column: 3, scope: !3072)
!3125 = !DILocation(line: 354, column: 3, scope: !3072)
!3126 = !DILocation(line: 355, column: 3, scope: !3072)
!3127 = !DILocation(line: 357, column: 3, scope: !3072)
!3128 = !DILocation(line: 359, column: 3, scope: !3072)
!3129 = !DILocation(line: 362, column: 3, scope: !3072)
!3130 = !DILocation(line: 364, column: 3, scope: !3072)
!3131 = !DILocation(line: 364, column: 28, scope: !3072)
!3132 = !DILocation(line: 364, column: 34, scope: !3072)
!3133 = !DILocation(line: 364, column: 15, scope: !3072)
!3134 = !DILocation(line: 364, column: 13, scope: !3072)
!3135 = !DILocation(line: 365, column: 10, scope: !3072)
!3136 = !DILocation(line: 367, column: 15, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3072, file: !63, line: 366, column: 5)
!3138 = !DILocation(line: 367, column: 7, scope: !3137)
!3139 = !DILocation(line: 370, column: 24, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3137, file: !63, line: 368, column: 9)
!3141 = !DILocation(line: 371, column: 15, scope: !3142)
!3142 = distinct !DILexicalBlock(scope: !3140, file: !63, line: 371, column: 15)
!3143 = !DILocation(line: 371, column: 15, scope: !3140)
!3144 = !DILocation(line: 372, column: 38, scope: !3142)
!3145 = !DILocation(line: 372, column: 36, scope: !3142)
!3146 = !DILocation(line: 372, column: 13, scope: !3142)
!3147 = !DILocation(line: 373, column: 11, scope: !3140)
!3148 = !DILocation(line: 375, column: 13, scope: !3140)
!3149 = !DILocation(line: 375, column: 25, scope: !3140)
!3150 = !{!3151, !2982, i64 8}
!3151 = !{!"cp_options", !2982, i64 0, !2982, i64 4, !2982, i64 8, !2982, i64 12, !2981, i64 16, !3105, i64 20, !3105, i64 21, !3105, i64 22, !3105, i64 23, !3105, i64 24, !3105, i64 25, !3105, i64 26, !3105, i64 27, !3105, i64 28, !3105, i64 29, !3105, i64 30, !3105, i64 31, !3105, i64 32, !3105, i64 33, !3105, i64 34, !3105, i64 35, !3105, i64 36, !3105, i64 37, !3105, i64 38, !3105, i64 39, !3105, i64 40, !3105, i64 41, !3105, i64 42, !3105, i64 43, !3105, i64 44, !3105, i64 45, !3105, i64 46, !3105, i64 47, !3105, i64 48, !3105, i64 49, !2981, i64 52, !2982, i64 56, !2994, i64 64, !2994, i64 72}
!3152 = !DILocation(line: 376, column: 11, scope: !3140)
!3153 = !DILocation(line: 378, column: 13, scope: !3140)
!3154 = !DILocation(line: 378, column: 25, scope: !3140)
!3155 = !DILocation(line: 379, column: 11, scope: !3140)
!3156 = !DILocation(line: 381, column: 13, scope: !3140)
!3157 = !DILocation(line: 381, column: 25, scope: !3140)
!3158 = !DILocation(line: 382, column: 11, scope: !3140)
!3159 = !DILocation(line: 384, column: 35, scope: !3140)
!3160 = !DILocation(line: 385, column: 11, scope: !3140)
!3161 = !DILocation(line: 387, column: 15, scope: !3162)
!3162 = distinct !DILexicalBlock(scope: !3140, file: !63, line: 387, column: 15)
!3163 = !DILocation(line: 387, column: 15, scope: !3140)
!3164 = !DILocation(line: 388, column: 13, scope: !3162)
!3165 = !DILocalVariable(name: "st", scope: !3166, file: !63, line: 391, type: !3073)
!3166 = distinct !DILexicalBlock(scope: !3162, file: !63, line: 390, column: 13)
!3167 = !DILocation(line: 391, column: 27, scope: !3166)
!3168 = !DILocation(line: 392, column: 25, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3166, file: !63, line: 392, column: 19)
!3170 = !DILocation(line: 392, column: 19, scope: !3169)
!3171 = !DILocation(line: 392, column: 38, scope: !3169)
!3172 = !DILocation(line: 392, column: 19, scope: !3166)
!3173 = !DILocation(line: 393, column: 17, scope: !3169)
!3174 = !DILocation(line: 395, column: 21, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3166, file: !63, line: 395, column: 19)
!3176 = !{!3177, !2981, i64 24}
!3177 = !{!"stat", !3178, i64 0, !3178, i64 8, !3178, i64 16, !2981, i64 24, !2981, i64 28, !2981, i64 32, !2981, i64 36, !3178, i64 40, !3178, i64 48, !3178, i64 56, !3178, i64 64, !3179, i64 72, !3179, i64 88, !3179, i64 104, !2982, i64 120}
!3178 = !{!"long", !2982, i64 0}
!3179 = !{!"timespec", !3178, i64 0, !3178, i64 8}
!3180 = !DILocation(line: 395, column: 19, scope: !3166)
!3181 = !DILocation(line: 396, column: 17, scope: !3175)
!3182 = !DILocation(line: 399, column: 30, scope: !3140)
!3183 = !DILocation(line: 399, column: 28, scope: !3140)
!3184 = !DILocation(line: 400, column: 11, scope: !3140)
!3185 = !DILocation(line: 402, column: 31, scope: !3140)
!3186 = !DILocation(line: 403, column: 11, scope: !3140)
!3187 = !DILocation(line: 405, column: 13, scope: !3140)
!3188 = !DILocation(line: 405, column: 20, scope: !3140)
!3189 = !{!3151, !3105, i64 45}
!3190 = !DILocation(line: 406, column: 11, scope: !3140)
!3191 = !DILocation(line: 408, column: 13, scope: !3140)
!3192 = !DILocation(line: 408, column: 21, scope: !3140)
!3193 = !{!3151, !3105, i64 46}
!3194 = !DILocation(line: 409, column: 11, scope: !3140)
!3195 = !DILocation(line: 411, column: 24, scope: !3140)
!3196 = !DILocation(line: 412, column: 27, scope: !3140)
!3197 = !DILocation(line: 412, column: 25, scope: !3140)
!3198 = !DILocation(line: 413, column: 11, scope: !3140)
!3199 = !DILocation(line: 417, column: 15, scope: !3200)
!3200 = distinct !DILexicalBlock(scope: !3140, file: !63, line: 417, column: 15)
!3201 = !DILocation(line: 417, column: 15, scope: !3140)
!3202 = !DILocation(line: 419, column: 17, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3200, file: !63, line: 418, column: 13)
!3204 = !DILocation(line: 419, column: 43, scope: !3203)
!3205 = !{!3151, !3105, i64 37}
!3206 = !DILocation(line: 420, column: 17, scope: !3203)
!3207 = !DILocation(line: 420, column: 38, scope: !3203)
!3208 = !{!3151, !3105, i64 33}
!3209 = !DILocation(line: 421, column: 13, scope: !3203)
!3210 = !DILocation(line: 422, column: 11, scope: !3140)
!3211 = !DILocation(line: 423, column: 9, scope: !3140)
!3212 = !DILocation(line: 424, column: 9, scope: !3140)
!3213 = !DILocation(line: 426, column: 11, scope: !3140)
!3214 = distinct !{!3214, !3130, !3215}
!3215 = !DILocation(line: 428, column: 5, scope: !3072)
!3216 = !DILocation(line: 430, column: 13, scope: !3072)
!3217 = !DILocation(line: 430, column: 20, scope: !3072)
!3218 = !DILocation(line: 430, column: 18, scope: !3072)
!3219 = !DILocation(line: 430, column: 11, scope: !3072)
!3220 = !DILocation(line: 431, column: 10, scope: !3072)
!3221 = !DILocation(line: 431, column: 17, scope: !3072)
!3222 = !DILocation(line: 431, column: 15, scope: !3072)
!3223 = !DILocation(line: 431, column: 8, scope: !3072)
!3224 = !DILocation(line: 433, column: 7, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3072, file: !63, line: 433, column: 7)
!3226 = !DILocation(line: 433, column: 19, scope: !3225)
!3227 = !DILocation(line: 433, column: 18, scope: !3225)
!3228 = !DILocation(line: 433, column: 15, scope: !3225)
!3229 = !DILocation(line: 433, column: 7, scope: !3072)
!3230 = !DILocation(line: 435, column: 11, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3232, file: !63, line: 435, column: 11)
!3232 = distinct !DILexicalBlock(scope: !3225, file: !63, line: 434, column: 5)
!3233 = !DILocation(line: 435, column: 19, scope: !3231)
!3234 = !DILocation(line: 435, column: 11, scope: !3232)
!3235 = !DILocation(line: 436, column: 22, scope: !3231)
!3236 = !DILocation(line: 436, column: 9, scope: !3231)
!3237 = !DILocation(line: 438, column: 22, scope: !3231)
!3238 = !DILocation(line: 439, column: 16, scope: !3231)
!3239 = !DILocation(line: 438, column: 9, scope: !3231)
!3240 = !DILocation(line: 440, column: 7, scope: !3232)
!3241 = !DILocation(line: 443, column: 7, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3072, file: !63, line: 443, column: 7)
!3243 = !DILocation(line: 443, column: 7, scope: !3072)
!3244 = !DILocation(line: 445, column: 11, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3246, file: !63, line: 445, column: 11)
!3246 = distinct !DILexicalBlock(scope: !3242, file: !63, line: 444, column: 5)
!3247 = !DILocation(line: 445, column: 11, scope: !3246)
!3248 = !DILocation(line: 446, column: 9, scope: !3245)
!3249 = !DILocation(line: 449, column: 15, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3246, file: !63, line: 449, column: 11)
!3251 = !DILocation(line: 449, column: 13, scope: !3250)
!3252 = !DILocation(line: 449, column: 11, scope: !3246)
!3253 = !DILocation(line: 451, column: 24, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !63, line: 450, column: 9)
!3255 = !DILocation(line: 451, column: 47, scope: !3254)
!3256 = !DILocation(line: 451, column: 11, scope: !3254)
!3257 = !DILocation(line: 452, column: 11, scope: !3254)
!3258 = !DILocation(line: 454, column: 5, scope: !3246)
!3259 = !DILocation(line: 455, column: 13, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3242, file: !63, line: 455, column: 12)
!3261 = !DILocation(line: 455, column: 12, scope: !3242)
!3262 = !DILocation(line: 457, column: 7, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3260, file: !63, line: 456, column: 5)
!3264 = !DILocation(line: 458, column: 11, scope: !3265)
!3265 = distinct !DILexicalBlock(scope: !3263, file: !63, line: 458, column: 11)
!3266 = !DILocation(line: 458, column: 19, scope: !3265)
!3267 = !DILocation(line: 458, column: 11, scope: !3263)
!3268 = !DILocation(line: 459, column: 48, scope: !3265)
!3269 = !DILocation(line: 459, column: 67, scope: !3265)
!3270 = !DILocation(line: 459, column: 27, scope: !3265)
!3271 = !DILocation(line: 461, column: 29, scope: !3265)
!3272 = !DILocation(line: 459, column: 11, scope: !3265)
!3273 = !DILocation(line: 459, column: 24, scope: !3265)
!3274 = !{!3151, !2981, i64 52}
!3275 = !DILocation(line: 459, column: 9, scope: !3265)
!3276 = !DILocation(line: 462, column: 13, scope: !3277)
!3277 = distinct !DILexicalBlock(scope: !3263, file: !63, line: 462, column: 11)
!3278 = !DILocation(line: 462, column: 26, scope: !3277)
!3279 = !DILocation(line: 462, column: 31, scope: !3277)
!3280 = !DILocation(line: 462, column: 60, scope: !3277)
!3281 = !DILocation(line: 462, column: 65, scope: !3277)
!3282 = !DILocation(line: 462, column: 73, scope: !3277)
!3283 = !DILocation(line: 462, column: 34, scope: !3277)
!3284 = !DILocation(line: 462, column: 11, scope: !3263)
!3285 = !DILocation(line: 464, column: 13, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3277, file: !63, line: 463, column: 9)
!3287 = !DILocation(line: 464, column: 26, scope: !3286)
!3288 = !DILocation(line: 465, column: 30, scope: !3286)
!3289 = !DILocation(line: 465, column: 35, scope: !3286)
!3290 = !DILocation(line: 465, column: 28, scope: !3286)
!3291 = !DILocation(line: 466, column: 9, scope: !3286)
!3292 = !DILocation(line: 467, column: 20, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3277, file: !63, line: 467, column: 16)
!3294 = !DILocation(line: 467, column: 18, scope: !3293)
!3295 = !DILocation(line: 467, column: 16, scope: !3277)
!3296 = !DILocation(line: 468, column: 9, scope: !3293)
!3297 = !DILocation(line: 470, column: 5, scope: !3263)
!3298 = !DILocation(line: 472, column: 9, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3072, file: !63, line: 472, column: 7)
!3300 = !DILocation(line: 472, column: 21, scope: !3299)
!3301 = !DILocation(line: 472, column: 7, scope: !3072)
!3302 = !DILocation(line: 473, column: 7, scope: !3299)
!3303 = !DILocation(line: 473, column: 14, scope: !3299)
!3304 = !DILocation(line: 473, column: 5, scope: !3299)
!3305 = !DILocation(line: 475, column: 7, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3072, file: !63, line: 475, column: 7)
!3307 = !DILocation(line: 475, column: 20, scope: !3306)
!3308 = !DILocation(line: 475, column: 25, scope: !3306)
!3309 = !DILocation(line: 475, column: 37, scope: !3306)
!3310 = !DILocation(line: 475, column: 7, scope: !3072)
!3311 = !DILocation(line: 478, column: 14, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3306, file: !63, line: 476, column: 5)
!3313 = !DILocation(line: 477, column: 7, scope: !3312)
!3314 = !DILocation(line: 479, column: 7, scope: !3312)
!3315 = !DILocation(line: 482, column: 20, scope: !3072)
!3316 = !DILocation(line: 483, column: 36, scope: !3072)
!3317 = !DILocation(line: 484, column: 36, scope: !3072)
!3318 = !DILocation(line: 483, column: 22, scope: !3072)
!3319 = !DILocation(line: 482, column: 5, scope: !3072)
!3320 = !DILocation(line: 482, column: 17, scope: !3072)
!3321 = !{!3151, !2982, i64 0}
!3322 = !DILocation(line: 486, column: 29, scope: !3072)
!3323 = !DILocation(line: 486, column: 3, scope: !3072)
!3324 = !DILocation(line: 488, column: 3, scope: !3072)
!3325 = !DILocation(line: 490, column: 7, scope: !3326)
!3326 = distinct !DILexicalBlock(scope: !3072, file: !63, line: 490, column: 7)
!3327 = !DILocation(line: 490, column: 7, scope: !3072)
!3328 = !DILocation(line: 495, column: 16, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3330, file: !63, line: 495, column: 11)
!3330 = distinct !DILexicalBlock(scope: !3326, file: !63, line: 491, column: 5)
!3331 = !DILocation(line: 495, column: 13, scope: !3329)
!3332 = !DILocation(line: 495, column: 11, scope: !3330)
!3333 = !DILocation(line: 496, column: 9, scope: !3329)
!3334 = !DILocation(line: 498, column: 10, scope: !3330)
!3335 = !DILocalVariable(name: "i", scope: !3336, file: !63, line: 499, type: !5)
!3336 = distinct !DILexicalBlock(scope: !3330, file: !63, line: 499, column: 7)
!3337 = !DILocation(line: 499, column: 16, scope: !3336)
!3338 = !DILocation(line: 499, column: 12, scope: !3336)
!3339 = !DILocation(line: 499, column: 23, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3336, file: !63, line: 499, column: 7)
!3341 = !DILocation(line: 499, column: 27, scope: !3340)
!3342 = !DILocation(line: 499, column: 25, scope: !3340)
!3343 = !DILocation(line: 499, column: 7, scope: !3336)
!3344 = !DILocation(line: 501, column: 25, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3340, file: !63, line: 500, column: 9)
!3346 = !DILocation(line: 501, column: 27, scope: !3345)
!3347 = !DILocation(line: 501, column: 34, scope: !3345)
!3348 = !DILocation(line: 501, column: 31, scope: !3345)
!3349 = !DILocation(line: 501, column: 13, scope: !3345)
!3350 = !DILocation(line: 501, column: 23, scope: !3345)
!3351 = !{!3151, !3105, i64 49}
!3352 = !DILocation(line: 502, column: 27, scope: !3345)
!3353 = !DILocation(line: 502, column: 32, scope: !3345)
!3354 = !DILocation(line: 502, column: 36, scope: !3345)
!3355 = !DILocation(line: 502, column: 17, scope: !3345)
!3356 = !DILocation(line: 502, column: 14, scope: !3345)
!3357 = !DILocation(line: 503, column: 9, scope: !3345)
!3358 = !DILocation(line: 499, column: 36, scope: !3340)
!3359 = !DILocation(line: 499, column: 7, scope: !3340)
!3360 = distinct !{!3360, !3343, !3361}
!3361 = !DILocation(line: 503, column: 9, scope: !3336)
!3362 = !DILocation(line: 504, column: 5, scope: !3330)
!3363 = !DILocation(line: 507, column: 9, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3326, file: !63, line: 506, column: 5)
!3365 = !DILocation(line: 507, column: 19, scope: !3364)
!3366 = !DILocation(line: 508, column: 22, scope: !3364)
!3367 = !DILocation(line: 508, column: 31, scope: !3364)
!3368 = !DILocation(line: 508, column: 12, scope: !3364)
!3369 = !DILocation(line: 508, column: 10, scope: !3364)
!3370 = !DILocation(line: 511, column: 10, scope: !3072)
!3371 = !DILocation(line: 511, column: 3, scope: !3072)
!3372 = distinct !DISubprogram(name: "cp_option_init", scope: !63, file: !63, line: 107, type: !147, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!3373 = !DILocalVariable(name: "x", arg: 1, scope: !3372, file: !63, line: 107, type: !149)
!3374 = !DILocation(line: 107, column: 36, scope: !3372)
!3375 = !DILocalVariable(name: "selinux_enabled", scope: !3372, file: !63, line: 109, type: !117)
!3376 = !DILocation(line: 109, column: 8, scope: !3372)
!3377 = !DILocation(line: 111, column: 23, scope: !3372)
!3378 = !DILocation(line: 111, column: 3, scope: !3372)
!3379 = !DILocation(line: 112, column: 3, scope: !3372)
!3380 = !DILocation(line: 112, column: 6, scope: !3372)
!3381 = !DILocation(line: 112, column: 22, scope: !3372)
!3382 = !{!3151, !3105, i64 20}
!3383 = !DILocation(line: 113, column: 3, scope: !3372)
!3384 = !DILocation(line: 113, column: 6, scope: !3372)
!3385 = !DILocation(line: 113, column: 19, scope: !3372)
!3386 = !{!3151, !2982, i64 56}
!3387 = !DILocation(line: 114, column: 3, scope: !3372)
!3388 = !DILocation(line: 114, column: 6, scope: !3372)
!3389 = !DILocation(line: 114, column: 18, scope: !3372)
!3390 = !{!3151, !2982, i64 4}
!3391 = !DILocation(line: 115, column: 3, scope: !3372)
!3392 = !DILocation(line: 115, column: 6, scope: !3372)
!3393 = !DILocation(line: 115, column: 33, scope: !3372)
!3394 = !{!3151, !3105, i64 21}
!3395 = !DILocation(line: 116, column: 3, scope: !3372)
!3396 = !DILocation(line: 116, column: 6, scope: !3372)
!3397 = !DILocation(line: 116, column: 36, scope: !3372)
!3398 = !{!3151, !3105, i64 22}
!3399 = !DILocation(line: 117, column: 3, scope: !3372)
!3400 = !DILocation(line: 117, column: 6, scope: !3372)
!3401 = !DILocation(line: 117, column: 16, scope: !3372)
!3402 = !{!3151, !3105, i64 23}
!3403 = !DILocation(line: 118, column: 3, scope: !3372)
!3404 = !DILocation(line: 118, column: 6, scope: !3372)
!3405 = !DILocation(line: 118, column: 18, scope: !3372)
!3406 = !DILocation(line: 119, column: 3, scope: !3372)
!3407 = !DILocation(line: 119, column: 6, scope: !3372)
!3408 = !DILocation(line: 119, column: 16, scope: !3372)
!3409 = !{!3151, !3105, i64 24}
!3410 = !DILocation(line: 120, column: 3, scope: !3372)
!3411 = !DILocation(line: 120, column: 6, scope: !3372)
!3412 = !DILocation(line: 120, column: 19, scope: !3372)
!3413 = !{!3151, !3105, i64 25}
!3414 = !DILocation(line: 121, column: 3, scope: !3372)
!3415 = !DILocation(line: 121, column: 6, scope: !3372)
!3416 = !DILocation(line: 121, column: 22, scope: !3372)
!3417 = !{!3151, !3105, i64 28}
!3418 = !DILocation(line: 122, column: 3, scope: !3372)
!3419 = !DILocation(line: 122, column: 6, scope: !3372)
!3420 = !DILocation(line: 122, column: 25, scope: !3372)
!3421 = !{!3151, !3105, i64 29}
!3422 = !DILocation(line: 123, column: 3, scope: !3372)
!3423 = !DILocation(line: 123, column: 6, scope: !3372)
!3424 = !DILocation(line: 123, column: 21, scope: !3372)
!3425 = !{!3151, !3105, i64 34}
!3426 = !DILocation(line: 124, column: 3, scope: !3372)
!3427 = !DILocation(line: 124, column: 6, scope: !3372)
!3428 = !DILocation(line: 124, column: 20, scope: !3372)
!3429 = !{!3151, !3105, i64 30}
!3430 = !DILocation(line: 125, column: 3, scope: !3372)
!3431 = !DILocation(line: 125, column: 6, scope: !3372)
!3432 = !DILocation(line: 125, column: 26, scope: !3372)
!3433 = !{!3151, !3105, i64 31}
!3434 = !DILocation(line: 126, column: 3, scope: !3372)
!3435 = !DILocation(line: 126, column: 6, scope: !3372)
!3436 = !DILocation(line: 126, column: 31, scope: !3372)
!3437 = !{!3151, !3105, i64 32}
!3438 = !DILocation(line: 127, column: 34, scope: !3372)
!3439 = !DILocation(line: 127, column: 3, scope: !3372)
!3440 = !DILocation(line: 127, column: 6, scope: !3372)
!3441 = !DILocation(line: 127, column: 32, scope: !3372)
!3442 = !DILocation(line: 128, column: 3, scope: !3372)
!3443 = !DILocation(line: 128, column: 6, scope: !3372)
!3444 = !DILocation(line: 128, column: 27, scope: !3372)
!3445 = !DILocation(line: 129, column: 3, scope: !3372)
!3446 = !DILocation(line: 129, column: 6, scope: !3372)
!3447 = !DILocation(line: 129, column: 25, scope: !3372)
!3448 = !{!3151, !3105, i64 41}
!3449 = !DILocation(line: 130, column: 3, scope: !3372)
!3450 = !DILocation(line: 130, column: 6, scope: !3372)
!3451 = !DILocation(line: 130, column: 25, scope: !3372)
!3452 = !{!3151, !3105, i64 35}
!3453 = !DILocation(line: 131, column: 3, scope: !3372)
!3454 = !DILocation(line: 131, column: 6, scope: !3372)
!3455 = !DILocation(line: 131, column: 23, scope: !3372)
!3456 = !{!3151, !3105, i64 36}
!3457 = !DILocation(line: 132, column: 3, scope: !3372)
!3458 = !DILocation(line: 132, column: 6, scope: !3372)
!3459 = !DILocation(line: 132, column: 31, scope: !3372)
!3460 = !{!3151, !3105, i64 38}
!3461 = !DILocation(line: 133, column: 3, scope: !3372)
!3462 = !DILocation(line: 133, column: 6, scope: !3372)
!3463 = !DILocation(line: 133, column: 21, scope: !3372)
!3464 = !{!3151, !3105, i64 39}
!3465 = !DILocation(line: 134, column: 3, scope: !3372)
!3466 = !DILocation(line: 134, column: 6, scope: !3372)
!3467 = !DILocation(line: 134, column: 29, scope: !3372)
!3468 = !{!3151, !3105, i64 40}
!3469 = !DILocation(line: 135, column: 3, scope: !3372)
!3470 = !DILocation(line: 135, column: 6, scope: !3372)
!3471 = !DILocation(line: 135, column: 16, scope: !3372)
!3472 = !{!3151, !3105, i64 42}
!3473 = !DILocation(line: 136, column: 3, scope: !3372)
!3474 = !DILocation(line: 136, column: 6, scope: !3372)
!3475 = !DILocation(line: 136, column: 18, scope: !3372)
!3476 = !{!3151, !2982, i64 12}
!3477 = !DILocation(line: 137, column: 3, scope: !3372)
!3478 = !DILocation(line: 137, column: 6, scope: !3372)
!3479 = !DILocation(line: 137, column: 20, scope: !3372)
!3480 = !{!3151, !3105, i64 44}
!3481 = !DILocation(line: 138, column: 3, scope: !3372)
!3482 = !DILocation(line: 138, column: 6, scope: !3372)
!3483 = !DILocation(line: 138, column: 15, scope: !3372)
!3484 = !{!3151, !3105, i64 43}
!3485 = !DILocation(line: 139, column: 3, scope: !3372)
!3486 = !DILocation(line: 139, column: 6, scope: !3372)
!3487 = !DILocation(line: 139, column: 11, scope: !3372)
!3488 = !{!3151, !2981, i64 16}
!3489 = !DILocation(line: 140, column: 18, scope: !3372)
!3490 = !DILocation(line: 140, column: 3, scope: !3372)
!3491 = !DILocation(line: 140, column: 6, scope: !3372)
!3492 = !DILocation(line: 140, column: 16, scope: !3372)
!3493 = !{!3151, !3105, i64 47}
!3494 = !DILocation(line: 142, column: 3, scope: !3372)
!3495 = !DILocation(line: 142, column: 6, scope: !3372)
!3496 = !DILocation(line: 142, column: 33, scope: !3372)
!3497 = !{!3151, !3105, i64 48}
!3498 = !DILocation(line: 143, column: 3, scope: !3372)
!3499 = !DILocation(line: 143, column: 6, scope: !3372)
!3500 = !DILocation(line: 143, column: 13, scope: !3372)
!3501 = !DILocation(line: 144, column: 3, scope: !3372)
!3502 = !DILocation(line: 144, column: 6, scope: !3372)
!3503 = !DILocation(line: 144, column: 14, scope: !3372)
!3504 = !DILocation(line: 145, column: 3, scope: !3372)
!3505 = !DILocation(line: 145, column: 6, scope: !3372)
!3506 = !DILocation(line: 145, column: 16, scope: !3372)
!3507 = !{!3151, !2994, i64 64}
!3508 = !DILocation(line: 146, column: 3, scope: !3372)
!3509 = !DILocation(line: 146, column: 6, scope: !3372)
!3510 = !DILocation(line: 146, column: 15, scope: !3372)
!3511 = !{!3151, !2994, i64 72}
!3512 = !DILocation(line: 147, column: 1, scope: !3372)
!3513 = distinct !DISubprogram(name: "target_directory_operand", scope: !63, file: !63, line: 154, type: !197, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!3514 = !DILocalVariable(name: "file", arg: 1, scope: !3513, file: !63, line: 154, type: !112)
!3515 = !DILocation(line: 154, column: 39, scope: !3513)
!3516 = !DILocalVariable(name: "st", scope: !3513, file: !63, line: 156, type: !3073)
!3517 = !DILocation(line: 156, column: 15, scope: !3513)
!3518 = !DILocalVariable(name: "err", scope: !3513, file: !63, line: 157, type: !5)
!3519 = !DILocation(line: 157, column: 7, scope: !3513)
!3520 = !DILocation(line: 157, column: 20, scope: !3513)
!3521 = !DILocation(line: 157, column: 14, scope: !3513)
!3522 = !DILocation(line: 157, column: 31, scope: !3513)
!3523 = !DILocation(line: 157, column: 42, scope: !3513)
!3524 = !DILocalVariable(name: "is_a_dir", scope: !3513, file: !63, line: 158, type: !117)
!3525 = !DILocation(line: 158, column: 8, scope: !3513)
!3526 = !DILocation(line: 158, column: 20, scope: !3513)
!3527 = !DILocation(line: 158, column: 24, scope: !3513)
!3528 = !DILocation(line: 158, column: 27, scope: !3513)
!3529 = !DILocation(line: 0, scope: !3513)
!3530 = !DILocation(line: 159, column: 7, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3513, file: !63, line: 159, column: 7)
!3532 = !DILocation(line: 159, column: 11, scope: !3531)
!3533 = !DILocation(line: 159, column: 14, scope: !3531)
!3534 = !DILocation(line: 159, column: 18, scope: !3531)
!3535 = !DILocation(line: 159, column: 7, scope: !3513)
!3536 = !DILocation(line: 160, column: 5, scope: !3531)
!3537 = !DILocation(line: 161, column: 10, scope: !3513)
!3538 = !DILocation(line: 161, column: 3, scope: !3513)
!3539 = distinct !DISubprogram(name: "movefile", scope: !63, file: !63, line: 253, type: !199, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!3540 = !DILocalVariable(name: "source", arg: 1, scope: !3539, file: !63, line: 253, type: !7)
!3541 = !DILocation(line: 253, column: 17, scope: !3539)
!3542 = !DILocalVariable(name: "dest", arg: 2, scope: !3539, file: !63, line: 253, type: !7)
!3543 = !DILocation(line: 253, column: 31, scope: !3539)
!3544 = !DILocalVariable(name: "dest_is_dir", arg: 3, scope: !3539, file: !63, line: 253, type: !117)
!3545 = !DILocation(line: 253, column: 42, scope: !3539)
!3546 = !DILocalVariable(name: "x", arg: 4, scope: !3539, file: !63, line: 254, type: !201)
!3547 = !DILocation(line: 254, column: 36, scope: !3539)
!3548 = !DILocalVariable(name: "ok", scope: !3539, file: !63, line: 256, type: !117)
!3549 = !DILocation(line: 256, column: 8, scope: !3539)
!3550 = !DILocation(line: 265, column: 7, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3539, file: !63, line: 265, column: 7)
!3552 = !DILocation(line: 265, column: 7, scope: !3539)
!3553 = !DILocation(line: 266, column: 29, scope: !3551)
!3554 = !DILocation(line: 266, column: 5, scope: !3551)
!3555 = !DILocation(line: 268, column: 7, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3539, file: !63, line: 268, column: 7)
!3557 = !DILocation(line: 268, column: 7, scope: !3539)
!3558 = !DILocalVariable(name: "src_basename", scope: !3559, file: !63, line: 271, type: !112)
!3559 = distinct !DILexicalBlock(scope: !3556, file: !63, line: 269, column: 5)
!3560 = !DILocation(line: 271, column: 19, scope: !3559)
!3561 = !DILocation(line: 271, column: 50, scope: !3559)
!3562 = !DILocation(line: 271, column: 34, scope: !3559)
!3563 = !DILocalVariable(name: "new_dest", scope: !3559, file: !63, line: 272, type: !7)
!3564 = !DILocation(line: 272, column: 13, scope: !3559)
!3565 = !DILocation(line: 272, column: 42, scope: !3559)
!3566 = !DILocation(line: 272, column: 48, scope: !3559)
!3567 = !DILocation(line: 272, column: 24, scope: !3559)
!3568 = !DILocation(line: 273, column: 31, scope: !3559)
!3569 = !DILocation(line: 273, column: 7, scope: !3559)
!3570 = !DILocation(line: 274, column: 21, scope: !3559)
!3571 = !DILocation(line: 274, column: 29, scope: !3559)
!3572 = !DILocation(line: 274, column: 39, scope: !3559)
!3573 = !DILocation(line: 274, column: 12, scope: !3559)
!3574 = !DILocation(line: 274, column: 10, scope: !3559)
!3575 = !DILocation(line: 275, column: 13, scope: !3559)
!3576 = !DILocation(line: 275, column: 7, scope: !3559)
!3577 = !DILocation(line: 276, column: 5, scope: !3559)
!3578 = !DILocation(line: 279, column: 21, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3556, file: !63, line: 278, column: 5)
!3580 = !DILocation(line: 279, column: 29, scope: !3579)
!3581 = !DILocation(line: 279, column: 35, scope: !3579)
!3582 = !DILocation(line: 279, column: 12, scope: !3579)
!3583 = !DILocation(line: 279, column: 10, scope: !3579)
!3584 = !DILocation(line: 282, column: 10, scope: !3539)
!3585 = !DILocation(line: 282, column: 3, scope: !3539)
!3586 = distinct !DISubprogram(name: "do_move", scope: !63, file: !63, line: 169, type: !203, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !140)
!3587 = !DILocalVariable(name: "source", arg: 1, scope: !3586, file: !63, line: 169, type: !112)
!3588 = !DILocation(line: 169, column: 22, scope: !3586)
!3589 = !DILocalVariable(name: "dest", arg: 2, scope: !3586, file: !63, line: 169, type: !112)
!3590 = !DILocation(line: 169, column: 42, scope: !3586)
!3591 = !DILocalVariable(name: "x", arg: 3, scope: !3586, file: !63, line: 169, type: !201)
!3592 = !DILocation(line: 169, column: 73, scope: !3586)
!3593 = !DILocalVariable(name: "copy_into_self", scope: !3586, file: !63, line: 171, type: !117)
!3594 = !DILocation(line: 171, column: 8, scope: !3586)
!3595 = !DILocalVariable(name: "rename_succeeded", scope: !3586, file: !63, line: 172, type: !117)
!3596 = !DILocation(line: 172, column: 8, scope: !3586)
!3597 = !DILocalVariable(name: "ok", scope: !3586, file: !63, line: 173, type: !117)
!3598 = !DILocation(line: 173, column: 8, scope: !3586)
!3599 = !DILocation(line: 173, column: 19, scope: !3586)
!3600 = !DILocation(line: 173, column: 27, scope: !3586)
!3601 = !DILocation(line: 173, column: 40, scope: !3586)
!3602 = !DILocation(line: 173, column: 13, scope: !3586)
!3603 = !DILocation(line: 175, column: 7, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3586, file: !63, line: 175, column: 7)
!3605 = !DILocation(line: 175, column: 7, scope: !3586)
!3606 = !DILocalVariable(name: "dir_to_remove", scope: !3607, file: !63, line: 177, type: !112)
!3607 = distinct !DILexicalBlock(scope: !3604, file: !63, line: 176, column: 5)
!3608 = !DILocation(line: 177, column: 19, scope: !3607)
!3609 = !DILocation(line: 178, column: 11, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3607, file: !63, line: 178, column: 11)
!3611 = !DILocation(line: 178, column: 11, scope: !3607)
!3612 = !DILocation(line: 191, column: 25, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3610, file: !63, line: 179, column: 9)
!3614 = !DILocation(line: 192, column: 14, scope: !3613)
!3615 = !DILocation(line: 193, column: 9, scope: !3613)
!3616 = !DILocation(line: 194, column: 16, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3610, file: !63, line: 194, column: 16)
!3618 = !DILocation(line: 194, column: 16, scope: !3610)
!3619 = !DILocation(line: 198, column: 25, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3617, file: !63, line: 195, column: 9)
!3621 = !DILocation(line: 199, column: 9, scope: !3620)
!3622 = !DILocation(line: 224, column: 27, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3617, file: !63, line: 201, column: 9)
!3624 = !DILocation(line: 224, column: 25, scope: !3623)
!3625 = !DILocation(line: 227, column: 11, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3607, file: !63, line: 227, column: 11)
!3627 = !DILocation(line: 227, column: 25, scope: !3626)
!3628 = !DILocation(line: 227, column: 11, scope: !3607)
!3629 = !DILocalVariable(name: "rm_options", scope: !3630, file: !63, line: 229, type: !211)
!3630 = distinct !DILexicalBlock(scope: !3626, file: !63, line: 228, column: 9)
!3631 = !DILocation(line: 229, column: 29, scope: !3630)
!3632 = !DILocalVariable(name: "status", scope: !3630, file: !63, line: 230, type: !103)
!3633 = !DILocation(line: 230, column: 26, scope: !3630)
!3634 = !DILocalVariable(name: "dir", scope: !3630, file: !63, line: 231, type: !205)
!3635 = !DILocation(line: 231, column: 23, scope: !3630)
!3636 = !DILocation(line: 233, column: 11, scope: !3630)
!3637 = !DILocation(line: 234, column: 32, scope: !3630)
!3638 = !DILocation(line: 234, column: 35, scope: !3630)
!3639 = !DILocation(line: 234, column: 22, scope: !3630)
!3640 = !DILocation(line: 234, column: 30, scope: !3630)
!3641 = !{!3642, !3105, i64 26}
!3642 = !{!"rm_options", !3105, i64 0, !2982, i64 4, !3105, i64 8, !3105, i64 9, !3105, i64 10, !2994, i64 16, !3105, i64 24, !3105, i64 25, !3105, i64 26, !3105, i64 27}
!3643 = !DILocation(line: 235, column: 20, scope: !3630)
!3644 = !DILocation(line: 235, column: 11, scope: !3630)
!3645 = !DILocation(line: 235, column: 18, scope: !3630)
!3646 = !DILocation(line: 236, column: 11, scope: !3630)
!3647 = !DILocation(line: 236, column: 18, scope: !3630)
!3648 = !DILocation(line: 238, column: 32, scope: !3630)
!3649 = !DILocation(line: 238, column: 24, scope: !3630)
!3650 = !DILocation(line: 238, column: 20, scope: !3630)
!3651 = !DILocation(line: 238, column: 18, scope: !3630)
!3652 = !{!2982, !2982, i64 0}
!3653 = !DILocation(line: 239, column: 11, scope: !3630)
!3654 = !DILocation(line: 240, column: 15, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3630, file: !63, line: 240, column: 15)
!3656 = !DILocation(line: 240, column: 22, scope: !3655)
!3657 = !DILocation(line: 240, column: 15, scope: !3630)
!3658 = !DILocation(line: 241, column: 16, scope: !3655)
!3659 = !DILocation(line: 241, column: 13, scope: !3655)
!3660 = !DILocation(line: 242, column: 9, scope: !3630)
!3661 = !DILocation(line: 243, column: 5, scope: !3607)
!3662 = !DILocation(line: 245, column: 10, scope: !3586)
!3663 = !DILocation(line: 245, column: 3, scope: !3586)
!3664 = !DILocalVariable(name: "x", arg: 1, scope: !238, file: !63, line: 75, type: !210)
!3665 = !DILocation(line: 75, column: 36, scope: !238)
!3666 = !DILocation(line: 77, column: 3, scope: !238)
!3667 = !DILocation(line: 77, column: 6, scope: !238)
!3668 = !DILocation(line: 77, column: 27, scope: !238)
!3669 = !{!3642, !3105, i64 0}
!3670 = !DILocation(line: 78, column: 3, scope: !238)
!3671 = !DILocation(line: 78, column: 6, scope: !238)
!3672 = !DILocation(line: 78, column: 31, scope: !238)
!3673 = !{!3642, !3105, i64 10}
!3674 = !DILocation(line: 79, column: 3, scope: !238)
!3675 = !DILocation(line: 79, column: 6, scope: !238)
!3676 = !DILocation(line: 79, column: 16, scope: !238)
!3677 = !{!3642, !3105, i64 9}
!3678 = !DILocation(line: 80, column: 3, scope: !238)
!3679 = !DILocation(line: 80, column: 6, scope: !238)
!3680 = !DILocation(line: 80, column: 22, scope: !238)
!3681 = !{!3642, !3105, i64 8}
!3682 = !DILocation(line: 84, column: 3, scope: !238)
!3683 = !DILocation(line: 84, column: 6, scope: !238)
!3684 = !DILocation(line: 84, column: 18, scope: !238)
!3685 = !{!3642, !2982, i64 4}
!3686 = !DILocation(line: 85, column: 3, scope: !238)
!3687 = !DILocation(line: 85, column: 6, scope: !238)
!3688 = !DILocation(line: 85, column: 16, scope: !238)
!3689 = !{!3642, !3105, i64 25}
!3690 = !DILocation(line: 87, column: 3, scope: !238)
!3691 = !DILocation(line: 87, column: 6, scope: !238)
!3692 = !DILocation(line: 87, column: 14, scope: !238)
!3693 = !DILocation(line: 93, column: 3, scope: !238)
!3694 = !DILocation(line: 93, column: 6, scope: !238)
!3695 = !DILocation(line: 93, column: 26, scope: !238)
!3696 = !{!3642, !3105, i64 27}
!3697 = !DILocation(line: 97, column: 23, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !238, file: !63, line: 95, column: 3)
!3699 = !DILocation(line: 97, column: 5, scope: !3698)
!3700 = !DILocation(line: 97, column: 8, scope: !3698)
!3701 = !DILocation(line: 97, column: 21, scope: !3698)
!3702 = !{!3642, !2994, i64 16}
!3703 = !DILocation(line: 98, column: 9, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3698, file: !63, line: 98, column: 9)
!3705 = !DILocation(line: 98, column: 12, scope: !3704)
!3706 = !DILocation(line: 98, column: 25, scope: !3704)
!3707 = !DILocation(line: 98, column: 9, scope: !3698)
!3708 = !DILocation(line: 99, column: 7, scope: !3704)
!3709 = !DILocation(line: 103, column: 3, scope: !238)
!3710 = !DILocation(line: 103, column: 6, scope: !238)
!3711 = !DILocation(line: 103, column: 24, scope: !238)
!3712 = !{!3642, !3105, i64 24}
!3713 = !DILocation(line: 104, column: 1, scope: !238)
!3714 = distinct !DISubprogram(name: "rm", scope: !1317, file: !1317, line: 577, type: !1329, scopeLine: 578, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!3715 = !DILocalVariable(name: "file", arg: 1, scope: !3714, file: !1317, line: 577, type: !1331)
!3716 = !DILocation(line: 577, column: 18, scope: !3714)
!3717 = !DILocalVariable(name: "x", arg: 2, scope: !3714, file: !1317, line: 577, type: !1333)
!3718 = !DILocation(line: 577, column: 49, scope: !3714)
!3719 = !DILocalVariable(name: "rm_status", scope: !3714, file: !1317, line: 579, type: !103)
!3720 = !DILocation(line: 579, column: 18, scope: !3714)
!3721 = !DILocation(line: 581, column: 8, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3714, file: !1317, line: 581, column: 7)
!3723 = !DILocation(line: 581, column: 7, scope: !3722)
!3724 = !DILocation(line: 581, column: 7, scope: !3714)
!3725 = !DILocalVariable(name: "bit_flags", scope: !3726, file: !1317, line: 583, type: !5)
!3726 = distinct !DILexicalBlock(scope: !3722, file: !1317, line: 582, column: 5)
!3727 = !DILocation(line: 583, column: 11, scope: !3726)
!3728 = !DILocation(line: 587, column: 11, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !1317, line: 587, column: 11)
!3730 = !DILocation(line: 587, column: 14, scope: !3729)
!3731 = !DILocation(line: 587, column: 11, scope: !3726)
!3732 = !DILocation(line: 588, column: 19, scope: !3729)
!3733 = !DILocation(line: 588, column: 9, scope: !3729)
!3734 = !DILocalVariable(name: "fts", scope: !3726, file: !1317, line: 590, type: !1352)
!3735 = !DILocation(line: 590, column: 12, scope: !3726)
!3736 = !DILocation(line: 590, column: 29, scope: !3726)
!3737 = !DILocation(line: 590, column: 35, scope: !3726)
!3738 = !DILocation(line: 590, column: 18, scope: !3726)
!3739 = !DILocation(line: 592, column: 7, scope: !3726)
!3740 = !DILocalVariable(name: "ent", scope: !3741, file: !1317, line: 594, type: !1445)
!3741 = distinct !DILexicalBlock(scope: !3726, file: !1317, line: 593, column: 9)
!3742 = !DILocation(line: 594, column: 19, scope: !3741)
!3743 = !DILocation(line: 596, column: 27, scope: !3741)
!3744 = !DILocation(line: 596, column: 17, scope: !3741)
!3745 = !DILocation(line: 596, column: 15, scope: !3741)
!3746 = !DILocation(line: 597, column: 15, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3741, file: !1317, line: 597, column: 15)
!3748 = !DILocation(line: 597, column: 19, scope: !3747)
!3749 = !DILocation(line: 597, column: 15, scope: !3741)
!3750 = !DILocation(line: 599, column: 19, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3752, file: !1317, line: 599, column: 19)
!3752 = distinct !DILexicalBlock(scope: !3747, file: !1317, line: 598, column: 13)
!3753 = !DILocation(line: 599, column: 25, scope: !3751)
!3754 = !DILocation(line: 599, column: 19, scope: !3752)
!3755 = !DILocation(line: 601, column: 29, scope: !3756)
!3756 = distinct !DILexicalBlock(scope: !3751, file: !1317, line: 600, column: 17)
!3757 = !DILocation(line: 601, column: 36, scope: !3756)
!3758 = !DILocation(line: 601, column: 19, scope: !3756)
!3759 = !DILocation(line: 602, column: 29, scope: !3756)
!3760 = !DILocation(line: 603, column: 17, scope: !3756)
!3761 = !DILocation(line: 604, column: 15, scope: !3752)
!3762 = !DILocalVariable(name: "s", scope: !3741, file: !1317, line: 607, type: !103)
!3763 = !DILocation(line: 607, column: 26, scope: !3741)
!3764 = !DILocation(line: 607, column: 38, scope: !3741)
!3765 = !DILocation(line: 607, column: 43, scope: !3741)
!3766 = !DILocation(line: 607, column: 48, scope: !3741)
!3767 = !DILocation(line: 607, column: 30, scope: !3741)
!3768 = !DILocation(line: 609, column: 11, scope: !3741)
!3769 = !DILocation(line: 610, column: 11, scope: !3741)
!3770 = !DILocation(line: 610, column: 11, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3772, file: !1317, line: 610, column: 11)
!3772 = distinct !DILexicalBlock(scope: !3741, file: !1317, line: 610, column: 11)
!3773 = !DILocation(line: 610, column: 11, scope: !3772)
!3774 = distinct !{!3774, !3739, !3775}
!3775 = !DILocation(line: 611, column: 9, scope: !3726)
!3776 = !DILocation(line: 613, column: 22, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3726, file: !1317, line: 613, column: 11)
!3778 = !DILocation(line: 613, column: 11, scope: !3777)
!3779 = !DILocation(line: 613, column: 27, scope: !3777)
!3780 = !DILocation(line: 613, column: 11, scope: !3726)
!3781 = !DILocation(line: 615, column: 21, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3777, file: !1317, line: 614, column: 9)
!3783 = !DILocation(line: 615, column: 28, scope: !3782)
!3784 = !DILocation(line: 615, column: 11, scope: !3782)
!3785 = !DILocation(line: 616, column: 21, scope: !3782)
!3786 = !DILocation(line: 617, column: 9, scope: !3782)
!3787 = !DILocation(line: 618, column: 5, scope: !3726)
!3788 = !DILocation(line: 620, column: 10, scope: !3714)
!3789 = !DILocation(line: 620, column: 3, scope: !3714)
!3790 = distinct !DISubprogram(name: "rm_fts", scope: !1317, file: !1317, line: 418, type: !1447, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!3791 = !DILocalVariable(name: "fts", arg: 1, scope: !3790, file: !1317, line: 418, type: !1352)
!3792 = !DILocation(line: 418, column: 14, scope: !3790)
!3793 = !DILocalVariable(name: "ent", arg: 2, scope: !3790, file: !1317, line: 418, type: !1445)
!3794 = !DILocation(line: 418, column: 27, scope: !3790)
!3795 = !DILocalVariable(name: "x", arg: 3, scope: !3790, file: !1317, line: 418, type: !1333)
!3796 = !DILocation(line: 418, column: 57, scope: !3790)
!3797 = !DILocation(line: 420, column: 11, scope: !3790)
!3798 = !DILocation(line: 420, column: 16, scope: !3790)
!3799 = !{!3800, !3800, i64 0}
!3800 = !{!"short", !2982, i64 0}
!3801 = !DILocation(line: 420, column: 3, scope: !3790)
!3802 = !DILocation(line: 423, column: 13, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3804, file: !1317, line: 423, column: 11)
!3804 = distinct !DILexicalBlock(scope: !3790, file: !1317, line: 421, column: 5)
!3805 = !DILocation(line: 423, column: 16, scope: !3803)
!3806 = !DILocation(line: 424, column: 11, scope: !3803)
!3807 = !DILocation(line: 424, column: 16, scope: !3803)
!3808 = !DILocation(line: 424, column: 19, scope: !3803)
!3809 = !DILocation(line: 425, column: 16, scope: !3803)
!3810 = !DILocation(line: 425, column: 33, scope: !3803)
!3811 = !DILocation(line: 425, column: 38, scope: !3803)
!3812 = !{!3813, !2981, i64 44}
!3813 = !{!"", !2994, i64 0, !2994, i64 8, !2994, i64 16, !3178, i64 24, !2994, i64 32, !2981, i64 40, !2981, i64 44, !3178, i64 48, !3178, i64 56, !2994, i64 64, !2981, i64 72, !2994, i64 80, !2982, i64 88, !3814, i64 96}
!3814 = !{!"I_ring", !2982, i64 0, !2981, i64 16, !2981, i64 20, !2981, i64 24, !3105, i64 28}
!3815 = !DILocation(line: 425, column: 50, scope: !3803)
!3816 = !DILocation(line: 425, column: 55, scope: !3803)
!3817 = !DILocation(line: 425, column: 19, scope: !3803)
!3818 = !DILocation(line: 423, column: 11, scope: !3804)
!3819 = !DILocalVariable(name: "err", scope: !3820, file: !1317, line: 431, type: !5)
!3820 = distinct !DILexicalBlock(scope: !3803, file: !1317, line: 426, column: 9)
!3821 = !DILocation(line: 431, column: 15, scope: !3820)
!3822 = !DILocation(line: 431, column: 21, scope: !3820)
!3823 = !DILocation(line: 431, column: 24, scope: !3820)
!3824 = !DILocation(line: 432, column: 21, scope: !3820)
!3825 = !DILocation(line: 432, column: 26, scope: !3820)
!3826 = !DILocation(line: 432, column: 49, scope: !3820)
!3827 = !DILocation(line: 432, column: 11, scope: !3820)
!3828 = !DILocation(line: 433, column: 31, scope: !3820)
!3829 = !DILocation(line: 433, column: 11, scope: !3820)
!3830 = !DILocation(line: 434, column: 26, scope: !3820)
!3831 = !DILocation(line: 434, column: 31, scope: !3820)
!3832 = !DILocation(line: 434, column: 11, scope: !3820)
!3833 = !DILocation(line: 435, column: 11, scope: !3820)
!3834 = !DILocation(line: 439, column: 11, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3804, file: !1317, line: 439, column: 11)
!3836 = !DILocation(line: 439, column: 16, scope: !3835)
!3837 = !{!3178, !3178, i64 0}
!3838 = !DILocation(line: 439, column: 26, scope: !3835)
!3839 = !DILocation(line: 439, column: 11, scope: !3804)
!3840 = !DILocation(line: 444, column: 46, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3842, file: !1317, line: 444, column: 15)
!3842 = distinct !DILexicalBlock(scope: !3835, file: !1317, line: 440, column: 9)
!3843 = !DILocation(line: 444, column: 51, scope: !3841)
!3844 = !DILocation(line: 444, column: 30, scope: !3841)
!3845 = !DILocation(line: 444, column: 15, scope: !3841)
!3846 = !DILocation(line: 444, column: 15, scope: !3842)
!3847 = !DILocation(line: 447, column: 22, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3841, file: !1317, line: 445, column: 13)
!3849 = !DILocation(line: 448, column: 22, scope: !3848)
!3850 = !DILocation(line: 448, column: 42, scope: !3848)
!3851 = !DILocation(line: 449, column: 22, scope: !3848)
!3852 = !DILocation(line: 446, column: 15, scope: !3848)
!3853 = !DILocation(line: 450, column: 30, scope: !3848)
!3854 = !DILocation(line: 450, column: 35, scope: !3848)
!3855 = !DILocation(line: 450, column: 15, scope: !3848)
!3856 = !DILocation(line: 451, column: 15, scope: !3848)
!3857 = !DILocation(line: 457, column: 15, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3842, file: !1317, line: 457, column: 15)
!3859 = !{!3177, !3178, i64 8}
!3860 = !{!3861, !3178, i64 0}
!3861 = !{!"dev_ino", !3178, i64 0, !3178, i64 8}
!3862 = !{!3177, !3178, i64 0}
!3863 = !{!3861, !3178, i64 8}
!3864 = !DILocation(line: 457, column: 15, scope: !3842)
!3865 = !DILocation(line: 459, column: 15, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3858, file: !1317, line: 458, column: 13)
!3867 = !DILocation(line: 459, column: 15, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !1317, line: 459, column: 15)
!3869 = distinct !DILexicalBlock(scope: !3866, file: !1317, line: 459, column: 15)
!3870 = !DILocation(line: 459, column: 15, scope: !3869)
!3871 = !DILocation(line: 460, column: 30, scope: !3866)
!3872 = !DILocation(line: 460, column: 35, scope: !3866)
!3873 = !DILocation(line: 460, column: 15, scope: !3866)
!3874 = !DILocation(line: 461, column: 15, scope: !3866)
!3875 = !DILocation(line: 467, column: 15, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3842, file: !1317, line: 467, column: 15)
!3877 = !DILocation(line: 467, column: 18, scope: !3876)
!3878 = !DILocation(line: 467, column: 15, scope: !3842)
!3879 = !DILocalVariable(name: "failed", scope: !3880, file: !1317, line: 469, type: !117)
!3880 = distinct !DILexicalBlock(scope: !3876, file: !1317, line: 468, column: 13)
!3881 = !DILocation(line: 469, column: 20, scope: !3880)
!3882 = !DILocalVariable(name: "parent", scope: !3880, file: !1317, line: 470, type: !7)
!3883 = !DILocation(line: 470, column: 21, scope: !3880)
!3884 = !DILocation(line: 470, column: 48, scope: !3880)
!3885 = !DILocation(line: 470, column: 53, scope: !3880)
!3886 = !DILocation(line: 470, column: 30, scope: !3880)
!3887 = !DILocalVariable(name: "statbuf", scope: !3880, file: !1317, line: 471, type: !1382)
!3888 = !DILocation(line: 471, column: 27, scope: !3880)
!3889 = !DILocation(line: 473, column: 20, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3880, file: !1317, line: 473, column: 19)
!3891 = !DILocation(line: 473, column: 27, scope: !3890)
!3892 = !DILocation(line: 473, column: 37, scope: !3890)
!3893 = !DILocation(line: 473, column: 30, scope: !3890)
!3894 = !DILocation(line: 473, column: 19, scope: !3880)
!3895 = !DILocation(line: 476, column: 26, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3890, file: !1317, line: 474, column: 17)
!3897 = !DILocation(line: 477, column: 26, scope: !3896)
!3898 = !DILocation(line: 478, column: 26, scope: !3896)
!3899 = !DILocation(line: 475, column: 19, scope: !3896)
!3900 = !DILocation(line: 479, column: 26, scope: !3896)
!3901 = !DILocation(line: 480, column: 17, scope: !3896)
!3902 = !DILocation(line: 482, column: 21, scope: !3880)
!3903 = !DILocation(line: 482, column: 15, scope: !3880)
!3904 = !DILocation(line: 484, column: 19, scope: !3905)
!3905 = distinct !DILexicalBlock(scope: !3880, file: !1317, line: 484, column: 19)
!3906 = !DILocation(line: 484, column: 26, scope: !3905)
!3907 = !DILocation(line: 484, column: 29, scope: !3905)
!3908 = !DILocation(line: 484, column: 34, scope: !3905)
!3909 = !{!3813, !3178, i64 24}
!3910 = !DILocation(line: 484, column: 53, scope: !3905)
!3911 = !DILocation(line: 484, column: 42, scope: !3905)
!3912 = !DILocation(line: 484, column: 19, scope: !3880)
!3913 = !DILocation(line: 486, column: 25, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3915, file: !1317, line: 486, column: 23)
!3915 = distinct !DILexicalBlock(scope: !3905, file: !1317, line: 485, column: 17)
!3916 = !DILocation(line: 486, column: 23, scope: !3915)
!3917 = !DILocation(line: 489, column: 30, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3914, file: !1317, line: 487, column: 21)
!3919 = !DILocation(line: 490, column: 30, scope: !3918)
!3920 = !DILocation(line: 488, column: 23, scope: !3918)
!3921 = !DILocation(line: 491, column: 36, scope: !3918)
!3922 = !DILocation(line: 491, column: 23, scope: !3918)
!3923 = !DILocation(line: 492, column: 21, scope: !3918)
!3924 = !DILocation(line: 493, column: 34, scope: !3915)
!3925 = !DILocation(line: 493, column: 39, scope: !3915)
!3926 = !DILocation(line: 493, column: 19, scope: !3915)
!3927 = !DILocation(line: 494, column: 19, scope: !3915)
!3928 = !DILocation(line: 496, column: 13, scope: !3880)
!3929 = !DILocation(line: 497, column: 9, scope: !3842)
!3930 = !DILocalVariable(name: "is_empty_directory", scope: !3931, file: !1317, line: 500, type: !1449)
!3931 = distinct !DILexicalBlock(scope: !3804, file: !1317, line: 499, column: 7)
!3932 = !DILocation(line: 500, column: 17, scope: !3931)
!3933 = !DILocalVariable(name: "s", scope: !3931, file: !1317, line: 501, type: !103)
!3934 = !DILocation(line: 501, column: 24, scope: !3931)
!3935 = !DILocation(line: 501, column: 36, scope: !3931)
!3936 = !DILocation(line: 501, column: 41, scope: !3931)
!3937 = !DILocation(line: 501, column: 63, scope: !3931)
!3938 = !DILocation(line: 501, column: 28, scope: !3931)
!3939 = !DILocation(line: 504, column: 13, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3931, file: !1317, line: 504, column: 13)
!3941 = !DILocation(line: 504, column: 15, scope: !3940)
!3942 = !DILocation(line: 504, column: 24, scope: !3940)
!3943 = !DILocation(line: 504, column: 27, scope: !3940)
!3944 = !DILocation(line: 504, column: 46, scope: !3940)
!3945 = !DILocation(line: 504, column: 13, scope: !3931)
!3946 = !DILocation(line: 508, column: 25, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3940, file: !1317, line: 505, column: 11)
!3948 = !DILocation(line: 508, column: 30, scope: !3947)
!3949 = !DILocation(line: 508, column: 35, scope: !3947)
!3950 = !DILocation(line: 508, column: 17, scope: !3947)
!3951 = !DILocation(line: 508, column: 15, scope: !3947)
!3952 = !DILocation(line: 509, column: 28, scope: !3947)
!3953 = !DILocation(line: 509, column: 33, scope: !3947)
!3954 = !DILocation(line: 509, column: 13, scope: !3947)
!3955 = !DILocation(line: 510, column: 11, scope: !3947)
!3956 = !DILocation(line: 512, column: 13, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3931, file: !1317, line: 512, column: 13)
!3958 = !DILocation(line: 512, column: 15, scope: !3957)
!3959 = !DILocation(line: 512, column: 13, scope: !3931)
!3960 = !DILocation(line: 514, column: 33, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3957, file: !1317, line: 513, column: 11)
!3962 = !DILocation(line: 514, column: 13, scope: !3961)
!3963 = !DILocation(line: 515, column: 28, scope: !3961)
!3964 = !DILocation(line: 515, column: 33, scope: !3961)
!3965 = !DILocation(line: 515, column: 13, scope: !3961)
!3966 = !DILocation(line: 516, column: 11, scope: !3961)
!3967 = !DILocation(line: 518, column: 16, scope: !3931)
!3968 = !DILocation(line: 518, column: 9, scope: !3931)
!3969 = !DILocation(line: 533, column: 13, scope: !3970)
!3970 = distinct !DILexicalBlock(scope: !3971, file: !1317, line: 533, column: 13)
!3971 = distinct !DILexicalBlock(scope: !3804, file: !1317, line: 529, column: 7)
!3972 = !DILocation(line: 533, column: 18, scope: !3970)
!3973 = !DILocation(line: 533, column: 27, scope: !3970)
!3974 = !DILocation(line: 534, column: 13, scope: !3970)
!3975 = !DILocation(line: 534, column: 16, scope: !3970)
!3976 = !DILocation(line: 534, column: 19, scope: !3970)
!3977 = !DILocation(line: 535, column: 13, scope: !3970)
!3978 = !DILocation(line: 535, column: 32, scope: !3970)
!3979 = !DILocation(line: 535, column: 37, scope: !3970)
!3980 = !DILocation(line: 535, column: 30, scope: !3970)
!3981 = !DILocation(line: 536, column: 13, scope: !3970)
!3982 = !DILocation(line: 536, column: 16, scope: !3970)
!3983 = !DILocation(line: 536, column: 21, scope: !3970)
!3984 = !DILocation(line: 536, column: 32, scope: !3970)
!3985 = !DILocation(line: 536, column: 42, scope: !3970)
!3986 = !DILocation(line: 536, column: 47, scope: !3970)
!3987 = !DILocation(line: 536, column: 39, scope: !3970)
!3988 = !DILocation(line: 533, column: 13, scope: !3971)
!3989 = !DILocation(line: 538, column: 33, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3970, file: !1317, line: 537, column: 11)
!3991 = !DILocation(line: 538, column: 13, scope: !3990)
!3992 = !DILocation(line: 539, column: 26, scope: !3990)
!3993 = !DILocation(line: 540, column: 20, scope: !3990)
!3994 = !DILocation(line: 539, column: 13, scope: !3990)
!3995 = !DILocation(line: 541, column: 13, scope: !3990)
!3996 = !DILocalVariable(name: "is_dir", scope: !3971, file: !1317, line: 544, type: !117)
!3997 = !DILocation(line: 544, column: 14, scope: !3971)
!3998 = !DILocation(line: 544, column: 23, scope: !3971)
!3999 = !DILocation(line: 544, column: 28, scope: !3971)
!4000 = !DILocation(line: 544, column: 37, scope: !3971)
!4001 = !DILocation(line: 544, column: 47, scope: !3971)
!4002 = !DILocation(line: 544, column: 50, scope: !3971)
!4003 = !DILocation(line: 544, column: 55, scope: !3971)
!4004 = !DILocation(line: 544, column: 64, scope: !3971)
!4005 = !DILocalVariable(name: "s", scope: !3971, file: !1317, line: 545, type: !103)
!4006 = !DILocation(line: 545, column: 24, scope: !3971)
!4007 = !DILocation(line: 545, column: 36, scope: !3971)
!4008 = !DILocation(line: 545, column: 41, scope: !3971)
!4009 = !DILocation(line: 545, column: 46, scope: !3971)
!4010 = !DILocation(line: 545, column: 54, scope: !3971)
!4011 = !DILocation(line: 545, column: 28, scope: !3971)
!4012 = !DILocation(line: 546, column: 13, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !3971, file: !1317, line: 546, column: 13)
!4014 = !DILocation(line: 546, column: 15, scope: !4013)
!4015 = !DILocation(line: 546, column: 13, scope: !3971)
!4016 = !DILocation(line: 547, column: 18, scope: !4013)
!4017 = !DILocation(line: 547, column: 11, scope: !4013)
!4018 = !DILocation(line: 548, column: 24, scope: !3971)
!4019 = !DILocation(line: 548, column: 29, scope: !3971)
!4020 = !DILocation(line: 548, column: 34, scope: !3971)
!4021 = !DILocation(line: 548, column: 37, scope: !3971)
!4022 = !DILocation(line: 548, column: 16, scope: !3971)
!4023 = !DILocation(line: 548, column: 9, scope: !3971)
!4024 = !DILocation(line: 552, column: 7, scope: !3804)
!4025 = !DILocation(line: 552, column: 7, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3804, file: !1317, line: 552, column: 7)
!4027 = !DILocation(line: 553, column: 22, scope: !3804)
!4028 = !DILocation(line: 553, column: 27, scope: !3804)
!4029 = !DILocation(line: 553, column: 7, scope: !3804)
!4030 = !DILocation(line: 554, column: 7, scope: !3804)
!4031 = !DILocation(line: 559, column: 17, scope: !3804)
!4032 = !DILocation(line: 559, column: 22, scope: !3804)
!4033 = !DILocation(line: 559, column: 33, scope: !3804)
!4034 = !DILocation(line: 560, column: 14, scope: !3804)
!4035 = !DILocation(line: 559, column: 7, scope: !3804)
!4036 = !DILocation(line: 561, column: 22, scope: !3804)
!4037 = !DILocation(line: 561, column: 27, scope: !3804)
!4038 = !DILocation(line: 561, column: 7, scope: !3804)
!4039 = !DILocation(line: 562, column: 7, scope: !3804)
!4040 = !DILocation(line: 565, column: 20, scope: !3804)
!4041 = !DILocation(line: 567, column: 14, scope: !3804)
!4042 = !DILocation(line: 567, column: 19, scope: !3804)
!4043 = !DILocation(line: 568, column: 14, scope: !3804)
!4044 = !DILocation(line: 565, column: 7, scope: !3804)
!4045 = !DILocation(line: 570, column: 7, scope: !3804)
!4046 = !DILocation(line: 572, column: 1, scope: !3790)
!4047 = distinct !DISubprogram(name: "is_empty_dir", scope: !138, file: !138, line: 290, type: !1450, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4048 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !4047, file: !138, line: 290, type: !5)
!4049 = !DILocation(line: 290, column: 19, scope: !4047)
!4050 = !DILocalVariable(name: "dir", arg: 2, scope: !4047, file: !138, line: 290, type: !112)
!4051 = !DILocation(line: 290, column: 39, scope: !4047)
!4052 = !DILocalVariable(name: "dirp", scope: !4047, file: !138, line: 292, type: !580)
!4053 = !DILocation(line: 292, column: 8, scope: !4047)
!4054 = !DILocalVariable(name: "dp", scope: !4047, file: !138, line: 293, type: !1452)
!4055 = !DILocation(line: 293, column: 24, scope: !4047)
!4056 = !DILocalVariable(name: "saved_errno", scope: !4047, file: !138, line: 294, type: !5)
!4057 = !DILocation(line: 294, column: 7, scope: !4047)
!4058 = !DILocalVariable(name: "fd", scope: !4047, file: !138, line: 295, type: !5)
!4059 = !DILocation(line: 295, column: 7, scope: !4047)
!4060 = !DILocation(line: 295, column: 20, scope: !4047)
!4061 = !DILocation(line: 295, column: 28, scope: !4047)
!4062 = !DILocation(line: 295, column: 12, scope: !4047)
!4063 = !DILocation(line: 299, column: 7, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4047, file: !138, line: 299, column: 7)
!4065 = !DILocation(line: 299, column: 10, scope: !4064)
!4066 = !DILocation(line: 299, column: 7, scope: !4047)
!4067 = !DILocation(line: 300, column: 5, scope: !4064)
!4068 = !DILocation(line: 302, column: 21, scope: !4047)
!4069 = !DILocation(line: 302, column: 10, scope: !4047)
!4070 = !DILocation(line: 302, column: 8, scope: !4047)
!4071 = !DILocation(line: 303, column: 7, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4047, file: !138, line: 303, column: 7)
!4073 = !DILocation(line: 303, column: 12, scope: !4072)
!4074 = !DILocation(line: 303, column: 7, scope: !4047)
!4075 = !DILocation(line: 305, column: 14, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4072, file: !138, line: 304, column: 5)
!4077 = !DILocation(line: 305, column: 7, scope: !4076)
!4078 = !DILocation(line: 306, column: 7, scope: !4076)
!4079 = !DILocation(line: 309, column: 3, scope: !4047)
!4080 = !DILocation(line: 309, column: 9, scope: !4047)
!4081 = !DILocation(line: 310, column: 41, scope: !4047)
!4082 = !DILocation(line: 310, column: 8, scope: !4047)
!4083 = !DILocation(line: 310, column: 6, scope: !4047)
!4084 = !DILocation(line: 311, column: 17, scope: !4047)
!4085 = !DILocation(line: 311, column: 15, scope: !4047)
!4086 = !DILocation(line: 312, column: 13, scope: !4047)
!4087 = !DILocation(line: 312, column: 3, scope: !4047)
!4088 = !DILocation(line: 313, column: 7, scope: !4089)
!4089 = distinct !DILexicalBlock(scope: !4047, file: !138, line: 313, column: 7)
!4090 = !DILocation(line: 313, column: 10, scope: !4089)
!4091 = !DILocation(line: 313, column: 7, scope: !4047)
!4092 = !DILocation(line: 314, column: 5, scope: !4089)
!4093 = !DILocation(line: 315, column: 10, scope: !4047)
!4094 = !DILocation(line: 315, column: 22, scope: !4047)
!4095 = !DILocation(line: 315, column: 3, scope: !4047)
!4096 = !DILocation(line: 316, column: 1, scope: !4047)
!4097 = distinct !DISubprogram(name: "mark_ancestor_dirs", scope: !1317, file: !1317, line: 352, type: !1463, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4098 = !DILocalVariable(name: "ent", arg: 1, scope: !4097, file: !1317, line: 352, type: !1445)
!4099 = !DILocation(line: 352, column: 29, scope: !4097)
!4100 = !DILocalVariable(name: "p", scope: !4097, file: !1317, line: 354, type: !1445)
!4101 = !DILocation(line: 354, column: 11, scope: !4097)
!4102 = !DILocation(line: 355, column: 12, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4097, file: !1317, line: 355, column: 3)
!4104 = !DILocation(line: 355, column: 17, scope: !4103)
!4105 = !DILocation(line: 355, column: 10, scope: !4103)
!4106 = !DILocation(line: 355, column: 8, scope: !4103)
!4107 = !DILocation(line: 355, column: 46, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4103, file: !1317, line: 355, column: 3)
!4109 = !DILocation(line: 355, column: 49, scope: !4108)
!4110 = !DILocation(line: 355, column: 43, scope: !4108)
!4111 = !DILocation(line: 355, column: 3, scope: !4103)
!4112 = !DILocation(line: 357, column: 11, scope: !4113)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !1317, line: 357, column: 11)
!4114 = distinct !DILexicalBlock(scope: !4108, file: !1317, line: 356, column: 5)
!4115 = !DILocation(line: 357, column: 14, scope: !4113)
!4116 = !DILocation(line: 357, column: 11, scope: !4114)
!4117 = !DILocation(line: 358, column: 9, scope: !4113)
!4118 = !DILocation(line: 359, column: 7, scope: !4114)
!4119 = !DILocation(line: 359, column: 10, scope: !4114)
!4120 = !DILocation(line: 359, column: 21, scope: !4114)
!4121 = !DILocation(line: 360, column: 5, scope: !4114)
!4122 = !DILocation(line: 355, column: 64, scope: !4108)
!4123 = !DILocation(line: 355, column: 67, scope: !4108)
!4124 = !DILocation(line: 355, column: 62, scope: !4108)
!4125 = !DILocation(line: 355, column: 3, scope: !4108)
!4126 = distinct !{!4126, !4111, !4127}
!4127 = !DILocation(line: 360, column: 5, scope: !4103)
!4128 = !DILocation(line: 361, column: 1, scope: !4097)
!4129 = distinct !DISubprogram(name: "fts_skip_tree", scope: !1317, file: !1317, line: 341, type: !1465, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4130 = !DILocalVariable(name: "fts", arg: 1, scope: !4129, file: !1317, line: 341, type: !1352)
!4131 = !DILocation(line: 341, column: 21, scope: !4129)
!4132 = !DILocalVariable(name: "ent", arg: 2, scope: !4129, file: !1317, line: 341, type: !1445)
!4133 = !DILocation(line: 341, column: 34, scope: !4129)
!4134 = !DILocation(line: 343, column: 12, scope: !4129)
!4135 = !DILocation(line: 343, column: 17, scope: !4129)
!4136 = !DILocation(line: 343, column: 3, scope: !4129)
!4137 = !DILocalVariable(name: "__x", scope: !4138, file: !1317, line: 345, type: !1445)
!4138 = distinct !DILexicalBlock(scope: !4129, file: !1317, line: 345, column: 3)
!4139 = !DILocation(line: 345, column: 3, scope: !4138)
!4140 = !DILocation(line: 346, column: 1, scope: !4129)
!4141 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !138, file: !138, line: 265, type: !197, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4142 = !DILocalVariable(name: "file_name", arg: 1, scope: !4141, file: !138, line: 265, type: !112)
!4143 = !DILocation(line: 265, column: 28, scope: !4141)
!4144 = !DILocation(line: 267, column: 7, scope: !4145)
!4145 = distinct !DILexicalBlock(scope: !4141, file: !138, line: 267, column: 7)
!4146 = !DILocation(line: 267, column: 20, scope: !4145)
!4147 = !DILocation(line: 267, column: 7, scope: !4141)
!4148 = !DILocalVariable(name: "sep", scope: !4149, file: !138, line: 269, type: !8)
!4149 = distinct !DILexicalBlock(scope: !4145, file: !138, line: 268, column: 5)
!4150 = !DILocation(line: 269, column: 12, scope: !4149)
!4151 = !DILocation(line: 269, column: 18, scope: !4149)
!4152 = !DILocation(line: 269, column: 29, scope: !4149)
!4153 = !DILocation(line: 269, column: 42, scope: !4149)
!4154 = !DILocation(line: 269, column: 50, scope: !4149)
!4155 = !DILocation(line: 270, column: 17, scope: !4149)
!4156 = !DILocation(line: 270, column: 21, scope: !4149)
!4157 = !DILocation(line: 270, column: 24, scope: !4149)
!4158 = !DILocation(line: 270, column: 7, scope: !4149)
!4159 = !DILocation(line: 273, column: 5, scope: !4145)
!4160 = !DILocation(line: 274, column: 1, scope: !4141)
!4161 = distinct !DISubprogram(name: "prompt", scope: !1317, file: !1317, line: 176, type: !1467, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4162 = !DILocalVariable(name: "fts", arg: 1, scope: !4161, file: !1317, line: 176, type: !1469)
!4163 = !DILocation(line: 176, column: 20, scope: !4161)
!4164 = !DILocalVariable(name: "ent", arg: 2, scope: !4161, file: !1317, line: 176, type: !1471)
!4165 = !DILocation(line: 176, column: 39, scope: !4161)
!4166 = !DILocalVariable(name: "is_dir", arg: 3, scope: !4161, file: !1317, line: 176, type: !117)
!4167 = !DILocation(line: 176, column: 49, scope: !4161)
!4168 = !DILocalVariable(name: "x", arg: 4, scope: !4161, file: !1317, line: 177, type: !1333)
!4169 = !DILocation(line: 177, column: 34, scope: !4161)
!4170 = !DILocalVariable(name: "mode", arg: 5, scope: !4161, file: !1317, line: 177, type: !1324)
!4171 = !DILocation(line: 177, column: 56, scope: !4161)
!4172 = !DILocalVariable(name: "is_empty_p", arg: 6, scope: !4161, file: !1317, line: 178, type: !1473)
!4173 = !DILocation(line: 178, column: 18, scope: !4161)
!4174 = !DILocalVariable(name: "fd_cwd", scope: !4161, file: !1317, line: 180, type: !5)
!4175 = !DILocation(line: 180, column: 7, scope: !4161)
!4176 = !DILocation(line: 180, column: 16, scope: !4161)
!4177 = !DILocation(line: 180, column: 21, scope: !4161)
!4178 = !DILocalVariable(name: "full_name", scope: !4161, file: !1317, line: 181, type: !112)
!4179 = !DILocation(line: 181, column: 15, scope: !4161)
!4180 = !DILocation(line: 181, column: 27, scope: !4161)
!4181 = !DILocation(line: 181, column: 32, scope: !4161)
!4182 = !DILocalVariable(name: "filename", scope: !4161, file: !1317, line: 182, type: !112)
!4183 = !DILocation(line: 182, column: 15, scope: !4161)
!4184 = !DILocation(line: 182, column: 26, scope: !4161)
!4185 = !DILocation(line: 182, column: 31, scope: !4161)
!4186 = !DILocation(line: 183, column: 7, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4161, file: !1317, line: 183, column: 7)
!4188 = !DILocation(line: 183, column: 7, scope: !4161)
!4189 = !DILocation(line: 184, column: 6, scope: !4187)
!4190 = !DILocation(line: 184, column: 17, scope: !4187)
!4191 = !DILocation(line: 184, column: 5, scope: !4187)
!4192 = !DILocalVariable(name: "st", scope: !4161, file: !1317, line: 186, type: !1382)
!4193 = !DILocation(line: 186, column: 15, scope: !4161)
!4194 = !DILocalVariable(name: "sbuf", scope: !4161, file: !1317, line: 187, type: !1474)
!4195 = !DILocation(line: 187, column: 16, scope: !4161)
!4196 = !DILocation(line: 188, column: 20, scope: !4161)
!4197 = !DILocation(line: 188, column: 3, scope: !4161)
!4198 = !DILocalVariable(name: "dirent_type", scope: !4161, file: !1317, line: 190, type: !5)
!4199 = !DILocation(line: 190, column: 7, scope: !4161)
!4200 = !DILocation(line: 190, column: 21, scope: !4161)
!4201 = !DILocalVariable(name: "write_protected", scope: !4161, file: !1317, line: 191, type: !5)
!4202 = !DILocation(line: 191, column: 7, scope: !4161)
!4203 = !DILocalVariable(name: "is_empty", scope: !4161, file: !1317, line: 193, type: !117)
!4204 = !DILocation(line: 193, column: 8, scope: !4161)
!4205 = !DILocation(line: 194, column: 7, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4161, file: !1317, line: 194, column: 7)
!4207 = !DILocation(line: 194, column: 7, scope: !4161)
!4208 = !DILocation(line: 196, column: 32, scope: !4209)
!4209 = distinct !DILexicalBlock(scope: !4206, file: !1317, line: 195, column: 5)
!4210 = !DILocation(line: 196, column: 40, scope: !4209)
!4211 = !DILocation(line: 196, column: 18, scope: !4209)
!4212 = !DILocation(line: 196, column: 16, scope: !4209)
!4213 = !DILocation(line: 197, column: 21, scope: !4209)
!4214 = !DILocation(line: 197, column: 8, scope: !4209)
!4215 = !DILocation(line: 197, column: 19, scope: !4209)
!4216 = !DILocation(line: 198, column: 5, scope: !4209)
!4217 = !DILocation(line: 203, column: 7, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4161, file: !1317, line: 203, column: 7)
!4219 = !DILocation(line: 203, column: 12, scope: !4218)
!4220 = !DILocation(line: 203, column: 7, scope: !4161)
!4221 = !DILocation(line: 204, column: 5, scope: !4218)
!4222 = !DILocation(line: 206, column: 7, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4161, file: !1317, line: 206, column: 7)
!4224 = !DILocation(line: 206, column: 10, scope: !4223)
!4225 = !DILocation(line: 206, column: 22, scope: !4223)
!4226 = !DILocation(line: 206, column: 7, scope: !4161)
!4227 = !DILocation(line: 207, column: 5, scope: !4223)
!4228 = !DILocalVariable(name: "wp_errno", scope: !4161, file: !1317, line: 209, type: !5)
!4229 = !DILocation(line: 209, column: 7, scope: !4161)
!4230 = !DILocation(line: 210, column: 8, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4161, file: !1317, line: 210, column: 7)
!4232 = !DILocation(line: 210, column: 11, scope: !4231)
!4233 = !DILocation(line: 211, column: 7, scope: !4231)
!4234 = !DILocation(line: 211, column: 12, scope: !4231)
!4235 = !DILocation(line: 211, column: 15, scope: !4231)
!4236 = !DILocation(line: 211, column: 27, scope: !4231)
!4237 = !DILocation(line: 211, column: 42, scope: !4231)
!4238 = !DILocation(line: 211, column: 45, scope: !4231)
!4239 = !DILocation(line: 211, column: 48, scope: !4231)
!4240 = !DILocation(line: 212, column: 7, scope: !4231)
!4241 = !DILocation(line: 212, column: 10, scope: !4231)
!4242 = !DILocation(line: 212, column: 22, scope: !4231)
!4243 = !DILocation(line: 210, column: 7, scope: !4161)
!4244 = !DILocation(line: 214, column: 54, scope: !4245)
!4245 = distinct !DILexicalBlock(scope: !4231, file: !1317, line: 213, column: 5)
!4246 = !DILocation(line: 214, column: 62, scope: !4245)
!4247 = !DILocation(line: 214, column: 72, scope: !4245)
!4248 = !DILocation(line: 214, column: 25, scope: !4245)
!4249 = !DILocation(line: 214, column: 23, scope: !4245)
!4250 = !DILocation(line: 215, column: 18, scope: !4245)
!4251 = !DILocation(line: 215, column: 16, scope: !4245)
!4252 = !DILocation(line: 216, column: 5, scope: !4245)
!4253 = !DILocation(line: 218, column: 7, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4161, file: !1317, line: 218, column: 7)
!4255 = !DILocation(line: 218, column: 23, scope: !4254)
!4256 = !DILocation(line: 218, column: 26, scope: !4254)
!4257 = !DILocation(line: 218, column: 29, scope: !4254)
!4258 = !DILocation(line: 218, column: 41, scope: !4254)
!4259 = !DILocation(line: 218, column: 7, scope: !4161)
!4260 = !DILocation(line: 220, column: 16, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !1317, line: 220, column: 11)
!4262 = distinct !DILexicalBlock(scope: !4254, file: !1317, line: 219, column: 5)
!4263 = !DILocation(line: 220, column: 13, scope: !4261)
!4264 = !DILocation(line: 220, column: 32, scope: !4261)
!4265 = !DILocation(line: 220, column: 35, scope: !4261)
!4266 = !DILocation(line: 220, column: 47, scope: !4261)
!4267 = !DILocation(line: 220, column: 11, scope: !4262)
!4268 = !DILocation(line: 222, column: 30, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4270, file: !1317, line: 222, column: 15)
!4270 = distinct !DILexicalBlock(scope: !4261, file: !1317, line: 221, column: 9)
!4271 = !DILocation(line: 222, column: 38, scope: !4269)
!4272 = !DILocation(line: 222, column: 48, scope: !4269)
!4273 = !DILocation(line: 222, column: 15, scope: !4269)
!4274 = !DILocation(line: 222, column: 75, scope: !4269)
!4275 = !DILocation(line: 222, column: 15, scope: !4270)
!4276 = !DILocation(line: 224, column: 19, scope: !4277)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !1317, line: 224, column: 19)
!4278 = distinct !DILexicalBlock(scope: !4269, file: !1317, line: 223, column: 13)
!4279 = !DILocation(line: 224, column: 19, scope: !4278)
!4280 = !DILocation(line: 225, column: 29, scope: !4277)
!4281 = !DILocation(line: 225, column: 17, scope: !4277)
!4282 = !DILocation(line: 226, column: 24, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4277, file: !1317, line: 226, column: 24)
!4284 = !DILocation(line: 226, column: 24, scope: !4277)
!4285 = !DILocation(line: 227, column: 29, scope: !4283)
!4286 = !DILocation(line: 227, column: 17, scope: !4283)
!4287 = !DILocation(line: 229, column: 13, scope: !4278)
!4288 = !DILocation(line: 233, column: 31, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4269, file: !1317, line: 231, column: 13)
!4290 = !DILocation(line: 234, column: 26, scope: !4289)
!4291 = !DILocation(line: 234, column: 24, scope: !4289)
!4292 = !DILocation(line: 236, column: 9, scope: !4270)
!4293 = !DILocation(line: 238, column: 16, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4262, file: !1317, line: 238, column: 11)
!4295 = !DILocation(line: 238, column: 13, scope: !4294)
!4296 = !DILocation(line: 238, column: 11, scope: !4262)
!4297 = !DILocation(line: 239, column: 17, scope: !4294)
!4298 = !DILocation(line: 239, column: 9, scope: !4294)
!4299 = !DILocation(line: 243, column: 17, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4301, file: !1317, line: 243, column: 17)
!4301 = distinct !DILexicalBlock(scope: !4294, file: !1317, line: 240, column: 11)
!4302 = !DILocation(line: 243, column: 20, scope: !4300)
!4303 = !DILocation(line: 243, column: 32, scope: !4300)
!4304 = !DILocation(line: 243, column: 17, scope: !4301)
!4305 = !DILocation(line: 244, column: 15, scope: !4300)
!4306 = !DILocation(line: 245, column: 13, scope: !4301)
!4307 = !DILocation(line: 251, column: 21, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4301, file: !1317, line: 251, column: 18)
!4309 = !DILocation(line: 251, column: 24, scope: !4308)
!4310 = !DILocation(line: 251, column: 34, scope: !4308)
!4311 = !DILocation(line: 251, column: 38, scope: !4308)
!4312 = !DILocation(line: 251, column: 41, scope: !4308)
!4313 = !DILocation(line: 251, column: 66, scope: !4308)
!4314 = !DILocation(line: 251, column: 69, scope: !4308)
!4315 = !DILocation(line: 251, column: 18, scope: !4301)
!4316 = !DILocation(line: 253, column: 33, scope: !4317)
!4317 = distinct !DILexicalBlock(scope: !4308, file: !1317, line: 252, column: 15)
!4318 = !DILocation(line: 254, column: 26, scope: !4317)
!4319 = !DILocation(line: 255, column: 15, scope: !4317)
!4320 = !DILocation(line: 256, column: 13, scope: !4301)
!4321 = !DILocation(line: 257, column: 11, scope: !4301)
!4322 = !DILocalVariable(name: "quoted_name", scope: !4262, file: !1317, line: 259, type: !112)
!4323 = !DILocation(line: 259, column: 19, scope: !4262)
!4324 = !DILocation(line: 259, column: 33, scope: !4262)
!4325 = !DILocation(line: 261, column: 11, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4262, file: !1317, line: 261, column: 11)
!4327 = !DILocation(line: 261, column: 27, scope: !4326)
!4328 = !DILocation(line: 261, column: 11, scope: !4262)
!4329 = !DILocation(line: 263, column: 21, scope: !4330)
!4330 = distinct !DILexicalBlock(scope: !4326, file: !1317, line: 262, column: 9)
!4331 = !DILocation(line: 263, column: 31, scope: !4330)
!4332 = !DILocation(line: 263, column: 54, scope: !4330)
!4333 = !DILocation(line: 263, column: 11, scope: !4330)
!4334 = !DILocation(line: 264, column: 11, scope: !4330)
!4335 = !DILocation(line: 268, column: 11, scope: !4336)
!4336 = distinct !DILexicalBlock(scope: !4262, file: !1317, line: 268, column: 11)
!4337 = !DILocation(line: 268, column: 23, scope: !4336)
!4338 = !DILocation(line: 269, column: 11, scope: !4336)
!4339 = !DILocation(line: 269, column: 14, scope: !4336)
!4340 = !DILocation(line: 269, column: 19, scope: !4336)
!4341 = !DILocation(line: 270, column: 11, scope: !4336)
!4342 = !DILocation(line: 270, column: 15, scope: !4336)
!4343 = !DILocation(line: 268, column: 11, scope: !4262)
!4344 = !DILocation(line: 271, column: 18, scope: !4336)
!4345 = !DILocation(line: 272, column: 19, scope: !4336)
!4346 = !DILocation(line: 273, column: 21, scope: !4336)
!4347 = !DILocation(line: 274, column: 21, scope: !4336)
!4348 = !DILocation(line: 275, column: 18, scope: !4336)
!4349 = !DILocation(line: 275, column: 32, scope: !4336)
!4350 = !DILocation(line: 271, column: 9, scope: !4336)
!4351 = !DILocation(line: 278, column: 30, scope: !4352)
!4352 = distinct !DILexicalBlock(scope: !4353, file: !1317, line: 278, column: 15)
!4353 = distinct !DILexicalBlock(scope: !4336, file: !1317, line: 277, column: 9)
!4354 = !DILocation(line: 278, column: 38, scope: !4352)
!4355 = !DILocation(line: 278, column: 48, scope: !4352)
!4356 = !DILocation(line: 278, column: 15, scope: !4352)
!4357 = !DILocation(line: 278, column: 75, scope: !4352)
!4358 = !DILocation(line: 278, column: 15, scope: !4353)
!4359 = !DILocation(line: 280, column: 25, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4352, file: !1317, line: 279, column: 13)
!4361 = !DILocation(line: 280, column: 32, scope: !4360)
!4362 = !DILocation(line: 280, column: 55, scope: !4360)
!4363 = !DILocation(line: 280, column: 15, scope: !4360)
!4364 = !DILocation(line: 281, column: 15, scope: !4360)
!4365 = !DILocation(line: 284, column: 20, scope: !4353)
!4366 = !DILocation(line: 285, column: 21, scope: !4353)
!4367 = !DILocation(line: 291, column: 23, scope: !4353)
!4368 = !DILocation(line: 292, column: 23, scope: !4353)
!4369 = !DILocation(line: 293, column: 20, scope: !4353)
!4370 = !DILocation(line: 293, column: 45, scope: !4353)
!4371 = !DILocation(line: 293, column: 34, scope: !4353)
!4372 = !DILocation(line: 293, column: 52, scope: !4353)
!4373 = !DILocation(line: 284, column: 11, scope: !4353)
!4374 = !DILocation(line: 296, column: 12, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4262, file: !1317, line: 296, column: 11)
!4376 = !DILocation(line: 296, column: 11, scope: !4262)
!4377 = !DILocation(line: 297, column: 9, scope: !4375)
!4378 = !DILocation(line: 298, column: 5, scope: !4262)
!4379 = !DILocation(line: 299, column: 3, scope: !4161)
!4380 = !DILocation(line: 300, column: 1, scope: !4161)
!4381 = distinct !DISubprogram(name: "excise", scope: !1317, file: !1317, line: 367, type: !1519, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4382 = !DILocalVariable(name: "fts", arg: 1, scope: !4381, file: !1317, line: 367, type: !1352)
!4383 = !DILocation(line: 367, column: 14, scope: !4381)
!4384 = !DILocalVariable(name: "ent", arg: 2, scope: !4381, file: !1317, line: 367, type: !1445)
!4385 = !DILocation(line: 367, column: 27, scope: !4381)
!4386 = !DILocalVariable(name: "x", arg: 3, scope: !4381, file: !1317, line: 367, type: !1333)
!4387 = !DILocation(line: 367, column: 57, scope: !4381)
!4388 = !DILocalVariable(name: "is_dir", arg: 4, scope: !4381, file: !1317, line: 367, type: !117)
!4389 = !DILocation(line: 367, column: 65, scope: !4381)
!4390 = !DILocalVariable(name: "flag", scope: !4381, file: !1317, line: 369, type: !5)
!4391 = !DILocation(line: 369, column: 7, scope: !4381)
!4392 = !DILocation(line: 369, column: 14, scope: !4381)
!4393 = !DILocation(line: 370, column: 17, scope: !4394)
!4394 = distinct !DILexicalBlock(scope: !4381, file: !1317, line: 370, column: 7)
!4395 = !DILocation(line: 370, column: 22, scope: !4394)
!4396 = !DILocation(line: 370, column: 34, scope: !4394)
!4397 = !DILocation(line: 370, column: 39, scope: !4394)
!4398 = !DILocation(line: 370, column: 52, scope: !4394)
!4399 = !DILocation(line: 370, column: 7, scope: !4394)
!4400 = !DILocation(line: 370, column: 58, scope: !4394)
!4401 = !DILocation(line: 370, column: 7, scope: !4381)
!4402 = !DILocation(line: 372, column: 11, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !1317, line: 372, column: 11)
!4404 = distinct !DILexicalBlock(scope: !4394, file: !1317, line: 371, column: 5)
!4405 = !DILocation(line: 372, column: 14, scope: !4403)
!4406 = !DILocation(line: 372, column: 11, scope: !4404)
!4407 = !DILocation(line: 374, column: 20, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4403, file: !1317, line: 373, column: 9)
!4409 = !DILocation(line: 375, column: 22, scope: !4408)
!4410 = !DILocation(line: 376, column: 22, scope: !4408)
!4411 = !DILocation(line: 376, column: 42, scope: !4408)
!4412 = !DILocation(line: 374, column: 11, scope: !4408)
!4413 = !DILocation(line: 377, column: 9, scope: !4408)
!4414 = !DILocation(line: 378, column: 7, scope: !4404)
!4415 = !DILocation(line: 385, column: 7, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4381, file: !1317, line: 385, column: 7)
!4417 = !DILocation(line: 385, column: 13, scope: !4416)
!4418 = !DILocation(line: 385, column: 7, scope: !4381)
!4419 = !DILocalVariable(name: "st", scope: !4420, file: !1317, line: 387, type: !1382)
!4420 = distinct !DILexicalBlock(scope: !4416, file: !1317, line: 386, column: 5)
!4421 = !DILocation(line: 387, column: 19, scope: !4420)
!4422 = !DILocation(line: 388, column: 24, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4420, file: !1317, line: 388, column: 12)
!4424 = !DILocation(line: 388, column: 29, scope: !4423)
!4425 = !DILocation(line: 388, column: 41, scope: !4423)
!4426 = !DILocation(line: 388, column: 46, scope: !4423)
!4427 = !DILocation(line: 388, column: 15, scope: !4423)
!4428 = !DILocation(line: 389, column: 24, scope: !4423)
!4429 = !DILocation(line: 389, column: 27, scope: !4423)
!4430 = !DILocation(line: 389, column: 33, scope: !4423)
!4431 = !DILocation(line: 388, column: 12, scope: !4420)
!4432 = !DILocation(line: 390, column: 9, scope: !4423)
!4433 = !DILocation(line: 390, column: 15, scope: !4423)
!4434 = !DILocation(line: 391, column: 5, scope: !4420)
!4435 = !DILocation(line: 393, column: 26, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4381, file: !1317, line: 393, column: 7)
!4437 = !DILocation(line: 393, column: 29, scope: !4436)
!4438 = !DILocation(line: 393, column: 7, scope: !4436)
!4439 = !DILocation(line: 393, column: 7, scope: !4381)
!4440 = !DILocation(line: 394, column: 5, scope: !4436)
!4441 = !DILocation(line: 401, column: 7, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4381, file: !1317, line: 401, column: 7)
!4443 = !DILocation(line: 401, column: 12, scope: !4442)
!4444 = !DILocation(line: 401, column: 21, scope: !4442)
!4445 = !DILocation(line: 402, column: 7, scope: !4442)
!4446 = !DILocation(line: 402, column: 11, scope: !4442)
!4447 = !DILocation(line: 402, column: 17, scope: !4442)
!4448 = !DILocation(line: 402, column: 30, scope: !4442)
!4449 = !DILocation(line: 402, column: 33, scope: !4442)
!4450 = !DILocation(line: 402, column: 39, scope: !4442)
!4451 = !DILocation(line: 402, column: 49, scope: !4442)
!4452 = !DILocation(line: 402, column: 52, scope: !4442)
!4453 = !DILocation(line: 402, column: 58, scope: !4442)
!4454 = !DILocation(line: 403, column: 11, scope: !4442)
!4455 = !DILocation(line: 403, column: 14, scope: !4442)
!4456 = !DILocation(line: 403, column: 20, scope: !4442)
!4457 = !DILocation(line: 404, column: 7, scope: !4442)
!4458 = !DILocation(line: 404, column: 11, scope: !4442)
!4459 = !DILocation(line: 404, column: 16, scope: !4442)
!4460 = !DILocation(line: 404, column: 26, scope: !4442)
!4461 = !DILocation(line: 404, column: 35, scope: !4442)
!4462 = !DILocation(line: 404, column: 38, scope: !4442)
!4463 = !DILocation(line: 404, column: 43, scope: !4442)
!4464 = !DILocation(line: 404, column: 53, scope: !4442)
!4465 = !DILocation(line: 401, column: 7, scope: !4381)
!4466 = !DILocation(line: 405, column: 13, scope: !4442)
!4467 = !DILocation(line: 405, column: 18, scope: !4442)
!4468 = !DILocation(line: 405, column: 5, scope: !4442)
!4469 = !DILocation(line: 405, column: 11, scope: !4442)
!4470 = !DILocation(line: 406, column: 13, scope: !4381)
!4471 = !DILocation(line: 406, column: 20, scope: !4381)
!4472 = !DILocation(line: 406, column: 43, scope: !4381)
!4473 = !DILocation(line: 406, column: 3, scope: !4381)
!4474 = !DILocation(line: 407, column: 23, scope: !4381)
!4475 = !DILocation(line: 407, column: 3, scope: !4381)
!4476 = !DILocation(line: 408, column: 3, scope: !4381)
!4477 = !DILocation(line: 409, column: 1, scope: !4381)
!4478 = distinct !DISubprogram(name: "ignorable_missing", scope: !1317, file: !1317, line: 334, type: !1521, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4479 = !DILocalVariable(name: "x", arg: 1, scope: !4478, file: !1317, line: 334, type: !1333)
!4480 = !DILocation(line: 334, column: 45, scope: !4478)
!4481 = !DILocalVariable(name: "errnum", arg: 2, scope: !4478, file: !1317, line: 334, type: !5)
!4482 = !DILocation(line: 334, column: 52, scope: !4478)
!4483 = !DILocation(line: 336, column: 10, scope: !4478)
!4484 = !DILocation(line: 336, column: 13, scope: !4478)
!4485 = !DILocation(line: 336, column: 34, scope: !4478)
!4486 = !DILocation(line: 336, column: 61, scope: !4478)
!4487 = !DILocation(line: 336, column: 37, scope: !4478)
!4488 = !DILocation(line: 0, scope: !4478)
!4489 = !DILocation(line: 336, column: 3, scope: !4478)
!4490 = distinct !DISubprogram(name: "nonexistent_file_errno", scope: !1317, file: !1317, line: 306, type: !304, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4491 = !DILocalVariable(name: "errnum", arg: 1, scope: !4490, file: !1317, line: 306, type: !5)
!4492 = !DILocation(line: 306, column: 29, scope: !4490)
!4493 = !DILocation(line: 320, column: 11, scope: !4490)
!4494 = !DILocation(line: 320, column: 3, scope: !4490)
!4495 = !DILocation(line: 326, column: 7, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4490, file: !1317, line: 321, column: 5)
!4497 = !DILocation(line: 328, column: 7, scope: !4496)
!4498 = !DILocation(line: 330, column: 1, scope: !4490)
!4499 = distinct !DISubprogram(name: "cache_stat_init", scope: !1317, file: !1317, line: 85, type: !1513, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4500 = !DILocalVariable(name: "st", arg: 1, scope: !4499, file: !1317, line: 85, type: !1474)
!4501 = !DILocation(line: 85, column: 31, scope: !4499)
!4502 = !DILocation(line: 87, column: 3, scope: !4499)
!4503 = !DILocation(line: 87, column: 7, scope: !4499)
!4504 = !DILocation(line: 87, column: 15, scope: !4499)
!4505 = !{!3177, !3178, i64 48}
!4506 = !DILocation(line: 88, column: 10, scope: !4499)
!4507 = !DILocation(line: 88, column: 3, scope: !4499)
!4508 = distinct !DISubprogram(name: "write_protected_non_symlink", scope: !1317, file: !1317, line: 96, type: !1515, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4509 = !DILocalVariable(name: "fd_cwd", arg: 1, scope: !4508, file: !1317, line: 96, type: !5)
!4510 = !DILocation(line: 96, column: 34, scope: !4508)
!4511 = !DILocalVariable(name: "file", arg: 2, scope: !4508, file: !1317, line: 97, type: !112)
!4512 = !DILocation(line: 97, column: 42, scope: !4508)
!4513 = !DILocalVariable(name: "buf", arg: 3, scope: !4508, file: !1317, line: 98, type: !1474)
!4514 = !DILocation(line: 98, column: 43, scope: !4508)
!4515 = !DILocation(line: 100, column: 7, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4508, file: !1317, line: 100, column: 7)
!4517 = !DILocation(line: 100, column: 7, scope: !4508)
!4518 = !DILocation(line: 101, column: 5, scope: !4516)
!4519 = !DILocation(line: 102, column: 22, scope: !4520)
!4520 = distinct !DILexicalBlock(scope: !4508, file: !1317, line: 102, column: 7)
!4521 = !DILocation(line: 102, column: 30, scope: !4520)
!4522 = !DILocation(line: 102, column: 36, scope: !4520)
!4523 = !DILocation(line: 102, column: 7, scope: !4520)
!4524 = !DILocation(line: 102, column: 62, scope: !4520)
!4525 = !DILocation(line: 102, column: 7, scope: !4508)
!4526 = !DILocation(line: 103, column: 5, scope: !4520)
!4527 = !DILocation(line: 104, column: 7, scope: !4528)
!4528 = distinct !DILexicalBlock(scope: !4508, file: !1317, line: 104, column: 7)
!4529 = !DILocation(line: 104, column: 7, scope: !4508)
!4530 = !DILocation(line: 105, column: 5, scope: !4528)
!4531 = !DILocation(line: 155, column: 20, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4533, file: !1317, line: 155, column: 9)
!4533 = distinct !DILexicalBlock(scope: !4508, file: !1317, line: 154, column: 3)
!4534 = !DILocation(line: 155, column: 28, scope: !4532)
!4535 = !DILocation(line: 155, column: 9, scope: !4532)
!4536 = !DILocation(line: 155, column: 52, scope: !4532)
!4537 = !DILocation(line: 155, column: 9, scope: !4533)
!4538 = !DILocation(line: 156, column: 7, scope: !4532)
!4539 = !DILocation(line: 158, column: 12, scope: !4533)
!4540 = !DILocation(line: 158, column: 18, scope: !4533)
!4541 = !DILocation(line: 158, column: 5, scope: !4533)
!4542 = !DILocation(line: 160, column: 1, scope: !4508)
!4543 = distinct !DISubprogram(name: "cache_fstatat", scope: !1317, file: !1317, line: 70, type: !1517, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4544 = !DILocalVariable(name: "fd", arg: 1, scope: !4543, file: !1317, line: 70, type: !5)
!4545 = !DILocation(line: 70, column: 20, scope: !4543)
!4546 = !DILocalVariable(name: "file", arg: 2, scope: !4543, file: !1317, line: 70, type: !112)
!4547 = !DILocation(line: 70, column: 36, scope: !4543)
!4548 = !DILocalVariable(name: "st", arg: 3, scope: !4543, file: !1317, line: 70, type: !1474)
!4549 = !DILocation(line: 70, column: 55, scope: !4543)
!4550 = !DILocalVariable(name: "flag", arg: 4, scope: !4543, file: !1317, line: 70, type: !5)
!4551 = !DILocation(line: 70, column: 63, scope: !4543)
!4552 = !DILocation(line: 72, column: 7, scope: !4553)
!4553 = distinct !DILexicalBlock(scope: !4543, file: !1317, line: 72, column: 7)
!4554 = !DILocation(line: 72, column: 11, scope: !4553)
!4555 = !DILocation(line: 72, column: 19, scope: !4553)
!4556 = !DILocation(line: 72, column: 25, scope: !4553)
!4557 = !DILocation(line: 72, column: 37, scope: !4553)
!4558 = !DILocation(line: 72, column: 41, scope: !4553)
!4559 = !DILocation(line: 72, column: 47, scope: !4553)
!4560 = !DILocation(line: 72, column: 51, scope: !4553)
!4561 = !DILocation(line: 72, column: 28, scope: !4553)
!4562 = !DILocation(line: 72, column: 57, scope: !4553)
!4563 = !DILocation(line: 72, column: 7, scope: !4543)
!4564 = !DILocation(line: 74, column: 7, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4553, file: !1317, line: 73, column: 5)
!4566 = !DILocation(line: 74, column: 11, scope: !4565)
!4567 = !DILocation(line: 74, column: 19, scope: !4565)
!4568 = !DILocation(line: 75, column: 20, scope: !4565)
!4569 = !DILocation(line: 75, column: 7, scope: !4565)
!4570 = !DILocation(line: 75, column: 11, scope: !4565)
!4571 = !DILocation(line: 75, column: 18, scope: !4565)
!4572 = !DILocation(line: 76, column: 5, scope: !4565)
!4573 = !DILocation(line: 77, column: 12, scope: !4574)
!4574 = distinct !DILexicalBlock(scope: !4543, file: !1317, line: 77, column: 7)
!4575 = !DILocation(line: 77, column: 16, scope: !4574)
!4576 = !DILocation(line: 77, column: 9, scope: !4574)
!4577 = !DILocation(line: 77, column: 7, scope: !4543)
!4578 = !DILocation(line: 78, column: 5, scope: !4574)
!4579 = !DILocation(line: 79, column: 17, scope: !4543)
!4580 = !DILocation(line: 79, column: 21, scope: !4543)
!4581 = !DILocation(line: 79, column: 11, scope: !4543)
!4582 = !DILocation(line: 79, column: 3, scope: !4543)
!4583 = !DILocation(line: 79, column: 9, scope: !4543)
!4584 = !DILocation(line: 80, column: 3, scope: !4543)
!4585 = !DILocation(line: 81, column: 1, scope: !4543)
!4586 = distinct !DISubprogram(name: "readdir_ignoring_dot_and_dotdot", scope: !138, file: !138, line: 278, type: !1461, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1316, retainedNodes: !140)
!4587 = !DILocalVariable(name: "dirp", arg: 1, scope: !4586, file: !138, line: 278, type: !580)
!4588 = !DILocation(line: 278, column: 39, scope: !4586)
!4589 = !DILocation(line: 280, column: 3, scope: !4586)
!4590 = !DILocalVariable(name: "dp", scope: !4591, file: !138, line: 282, type: !1452)
!4591 = distinct !DILexicalBlock(scope: !4586, file: !138, line: 281, column: 5)
!4592 = !DILocation(line: 282, column: 28, scope: !4591)
!4593 = !DILocation(line: 282, column: 42, scope: !4591)
!4594 = !DILocation(line: 282, column: 33, scope: !4591)
!4595 = !DILocation(line: 283, column: 11, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4591, file: !138, line: 283, column: 11)
!4597 = !DILocation(line: 283, column: 14, scope: !4596)
!4598 = !DILocation(line: 283, column: 22, scope: !4596)
!4599 = !DILocation(line: 283, column: 42, scope: !4596)
!4600 = !DILocation(line: 283, column: 46, scope: !4596)
!4601 = !DILocation(line: 283, column: 27, scope: !4596)
!4602 = !DILocation(line: 283, column: 11, scope: !4591)
!4603 = !DILocation(line: 284, column: 16, scope: !4596)
!4604 = !DILocation(line: 284, column: 9, scope: !4596)
!4605 = distinct !{!4605, !4589, !4606}
!4606 = !DILocation(line: 285, column: 5, scope: !4586)
!4607 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !242, file: !242, line: 929, type: !247, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4608 = !DILocalVariable(name: "src_name", arg: 1, scope: !4607, file: !242, line: 929, type: !112)
!4609 = !DILocation(line: 929, column: 39, scope: !4607)
!4610 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4607, file: !242, line: 929, type: !112)
!4611 = !DILocation(line: 929, column: 61, scope: !4607)
!4612 = !DILocalVariable(name: "mode", arg: 3, scope: !4607, file: !242, line: 930, type: !157)
!4613 = !DILocation(line: 930, column: 34, scope: !4607)
!4614 = !DILocalVariable(name: "new_dst", arg: 4, scope: !4607, file: !242, line: 930, type: !117)
!4615 = !DILocation(line: 930, column: 45, scope: !4607)
!4616 = !DILocalVariable(name: "x", arg: 5, scope: !4607, file: !242, line: 930, type: !249)
!4617 = !DILocation(line: 930, column: 79, scope: !4607)
!4618 = !DILocation(line: 932, column: 7, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4607, file: !242, line: 932, column: 7)
!4620 = !DILocation(line: 932, column: 10, scope: !4619)
!4621 = !DILocation(line: 932, column: 7, scope: !4607)
!4622 = !DILocalVariable(name: "all_errors", scope: !4623, file: !242, line: 935, type: !117)
!4623 = distinct !DILexicalBlock(scope: !4619, file: !242, line: 933, column: 5)
!4624 = !DILocation(line: 935, column: 12, scope: !4623)
!4625 = !DILocation(line: 935, column: 26, scope: !4623)
!4626 = !DILocation(line: 935, column: 29, scope: !4623)
!4627 = !DILocation(line: 935, column: 48, scope: !4623)
!4628 = !DILocation(line: 935, column: 51, scope: !4623)
!4629 = !DILocation(line: 935, column: 54, scope: !4623)
!4630 = !DILocalVariable(name: "some_errors", scope: !4623, file: !242, line: 936, type: !117)
!4631 = !DILocation(line: 936, column: 12, scope: !4623)
!4632 = !DILocation(line: 936, column: 27, scope: !4623)
!4633 = !DILocation(line: 936, column: 38, scope: !4623)
!4634 = !DILocation(line: 936, column: 42, scope: !4623)
!4635 = !DILocation(line: 936, column: 45, scope: !4623)
!4636 = !DILocation(line: 936, column: 41, scope: !4623)
!4637 = !DILocation(line: 0, scope: !4623)
!4638 = !DILocalVariable(name: "con", scope: !4623, file: !242, line: 937, type: !7)
!4639 = !DILocation(line: 937, column: 13, scope: !4623)
!4640 = !DILocation(line: 939, column: 29, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4623, file: !242, line: 939, column: 11)
!4642 = !DILocation(line: 939, column: 16, scope: !4641)
!4643 = !DILocation(line: 939, column: 13, scope: !4641)
!4644 = !DILocation(line: 939, column: 11, scope: !4623)
!4645 = !DILocation(line: 941, column: 31, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !242, line: 941, column: 15)
!4647 = distinct !DILexicalBlock(scope: !4641, file: !242, line: 940, column: 9)
!4648 = !DILocation(line: 941, column: 15, scope: !4646)
!4649 = !DILocation(line: 941, column: 36, scope: !4646)
!4650 = !DILocation(line: 941, column: 15, scope: !4647)
!4651 = !DILocation(line: 943, column: 19, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !242, line: 943, column: 19)
!4653 = distinct !DILexicalBlock(scope: !4646, file: !242, line: 942, column: 13)
!4654 = !DILocation(line: 943, column: 30, scope: !4652)
!4655 = !DILocation(line: 943, column: 34, scope: !4652)
!4656 = !DILocation(line: 943, column: 46, scope: !4652)
!4657 = !DILocation(line: 943, column: 69, scope: !4652)
!4658 = !DILocation(line: 943, column: 50, scope: !4652)
!4659 = !DILocation(line: 943, column: 19, scope: !4653)
!4660 = !DILocation(line: 944, column: 27, scope: !4652)
!4661 = !DILocation(line: 945, column: 24, scope: !4652)
!4662 = !DILocation(line: 946, column: 31, scope: !4652)
!4663 = !DILocation(line: 946, column: 24, scope: !4652)
!4664 = !DILocation(line: 944, column: 17, scope: !4652)
!4665 = !DILocation(line: 947, column: 19, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4653, file: !242, line: 947, column: 19)
!4667 = !DILocation(line: 947, column: 22, scope: !4666)
!4668 = !DILocation(line: 947, column: 19, scope: !4653)
!4669 = !DILocation(line: 949, column: 28, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4666, file: !242, line: 948, column: 17)
!4671 = !DILocation(line: 949, column: 19, scope: !4670)
!4672 = !DILocation(line: 950, column: 19, scope: !4670)
!4673 = !DILocation(line: 952, column: 13, scope: !4653)
!4674 = !DILocation(line: 953, column: 20, scope: !4647)
!4675 = !DILocation(line: 953, column: 11, scope: !4647)
!4676 = !DILocation(line: 954, column: 9, scope: !4647)
!4677 = !DILocation(line: 957, column: 15, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4679, file: !242, line: 957, column: 15)
!4679 = distinct !DILexicalBlock(scope: !4641, file: !242, line: 956, column: 9)
!4680 = !DILocation(line: 957, column: 26, scope: !4678)
!4681 = !DILocation(line: 957, column: 30, scope: !4678)
!4682 = !DILocation(line: 957, column: 42, scope: !4678)
!4683 = !DILocation(line: 957, column: 65, scope: !4678)
!4684 = !DILocation(line: 957, column: 46, scope: !4678)
!4685 = !DILocation(line: 957, column: 15, scope: !4679)
!4686 = !DILocation(line: 959, column: 25, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4678, file: !242, line: 958, column: 13)
!4688 = !DILocation(line: 960, column: 22, scope: !4687)
!4689 = !DILocation(line: 961, column: 22, scope: !4687)
!4690 = !DILocation(line: 959, column: 15, scope: !4687)
!4691 = !DILocation(line: 962, column: 13, scope: !4687)
!4692 = !DILocation(line: 963, column: 15, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4679, file: !242, line: 963, column: 15)
!4694 = !DILocation(line: 963, column: 18, scope: !4693)
!4695 = !DILocation(line: 963, column: 15, scope: !4679)
!4696 = !DILocation(line: 964, column: 13, scope: !4693)
!4697 = !DILocation(line: 966, column: 5, scope: !4623)
!4698 = !DILocation(line: 967, column: 12, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4619, file: !242, line: 967, column: 12)
!4700 = !DILocation(line: 967, column: 15, scope: !4699)
!4701 = !DILocation(line: 967, column: 12, scope: !4619)
!4702 = !DILocation(line: 971, column: 11, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4704, file: !242, line: 971, column: 11)
!4704 = distinct !DILexicalBlock(scope: !4699, file: !242, line: 968, column: 5)
!4705 = !DILocation(line: 971, column: 19, scope: !4703)
!4706 = !DILocation(line: 971, column: 34, scope: !4703)
!4707 = !DILocation(line: 971, column: 44, scope: !4703)
!4708 = !DILocation(line: 971, column: 22, scope: !4703)
!4709 = !DILocation(line: 971, column: 50, scope: !4703)
!4710 = !DILocation(line: 972, column: 11, scope: !4703)
!4711 = !DILocation(line: 972, column: 35, scope: !4703)
!4712 = !DILocation(line: 972, column: 16, scope: !4703)
!4713 = !DILocation(line: 971, column: 11, scope: !4704)
!4714 = !DILocation(line: 974, column: 21, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4703, file: !242, line: 973, column: 9)
!4716 = !DILocation(line: 975, column: 18, scope: !4715)
!4717 = !DILocation(line: 976, column: 18, scope: !4715)
!4718 = !DILocation(line: 974, column: 11, scope: !4715)
!4719 = !DILocation(line: 977, column: 9, scope: !4715)
!4720 = !DILocation(line: 978, column: 5, scope: !4704)
!4721 = !DILocation(line: 980, column: 3, scope: !4607)
!4722 = !DILocation(line: 981, column: 1, scope: !4607)
!4723 = distinct !DISubprogram(name: "errno_unsupported", scope: !242, file: !242, line: 632, type: !304, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4724 = !DILocalVariable(name: "err", arg: 1, scope: !4723, file: !242, line: 632, type: !5)
!4725 = !DILocation(line: 632, column: 24, scope: !4723)
!4726 = !DILocation(line: 634, column: 10, scope: !4723)
!4727 = !DILocation(line: 634, column: 14, scope: !4723)
!4728 = !DILocation(line: 634, column: 25, scope: !4723)
!4729 = !DILocation(line: 634, column: 28, scope: !4723)
!4730 = !DILocation(line: 634, column: 32, scope: !4723)
!4731 = !DILocation(line: 634, column: 3, scope: !4723)
!4732 = distinct !DISubprogram(name: "defaultcon", scope: !4733, file: !4733, line: 44, type: !306, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4733 = !DIFile(filename: "src/selinux.h", directory: "/home/mohamad/clone/coreutils")
!4734 = !DILocalVariable(name: "path", arg: 1, scope: !4732, file: !4733, line: 44, type: !112)
!4735 = !DILocation(line: 44, column: 25, scope: !4732)
!4736 = !DILocalVariable(name: "mode", arg: 2, scope: !4732, file: !4733, line: 44, type: !157)
!4737 = !DILocation(line: 44, column: 38, scope: !4732)
!4738 = !DILocation(line: 45, column: 3, scope: !4732)
!4739 = !DILocation(line: 45, column: 9, scope: !4732)
!4740 = !DILocation(line: 45, column: 20, scope: !4732)
!4741 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !4733, file: !4733, line: 25, type: !304, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4742 = !DILocalVariable(name: "err", arg: 1, scope: !4741, file: !4733, line: 25, type: !5)
!4743 = !DILocation(line: 25, column: 24, scope: !4741)
!4744 = !DILocation(line: 27, column: 10, scope: !4741)
!4745 = !DILocation(line: 27, column: 14, scope: !4741)
!4746 = !DILocation(line: 27, column: 25, scope: !4741)
!4747 = !DILocation(line: 27, column: 28, scope: !4741)
!4748 = !DILocation(line: 27, column: 32, scope: !4741)
!4749 = !DILocation(line: 27, column: 3, scope: !4741)
!4750 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !242, file: !242, line: 991, type: !292, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4751 = !DILocalVariable(name: "dst_name", arg: 1, scope: !4750, file: !242, line: 991, type: !112)
!4752 = !DILocation(line: 991, column: 36, scope: !4750)
!4753 = !DILocalVariable(name: "process_local", arg: 2, scope: !4750, file: !242, line: 991, type: !117)
!4754 = !DILocation(line: 991, column: 51, scope: !4750)
!4755 = !DILocalVariable(name: "recurse", arg: 3, scope: !4750, file: !242, line: 992, type: !117)
!4756 = !DILocation(line: 992, column: 29, scope: !4750)
!4757 = !DILocalVariable(name: "x", arg: 4, scope: !4750, file: !242, line: 992, type: !249)
!4758 = !DILocation(line: 992, column: 63, scope: !4750)
!4759 = !DILocalVariable(name: "all_errors", scope: !4750, file: !242, line: 994, type: !117)
!4760 = !DILocation(line: 994, column: 8, scope: !4750)
!4761 = !DILocation(line: 994, column: 23, scope: !4750)
!4762 = !DILocation(line: 994, column: 26, scope: !4750)
!4763 = !DILocation(line: 995, column: 22, scope: !4750)
!4764 = !DILocation(line: 995, column: 25, scope: !4750)
!4765 = !DILocation(line: 995, column: 28, scope: !4750)
!4766 = !DILocalVariable(name: "some_errors", scope: !4750, file: !242, line: 996, type: !117)
!4767 = !DILocation(line: 996, column: 8, scope: !4750)
!4768 = !DILocation(line: 996, column: 23, scope: !4750)
!4769 = !DILocation(line: 996, column: 34, scope: !4750)
!4770 = !DILocation(line: 996, column: 38, scope: !4750)
!4771 = !DILocation(line: 996, column: 41, scope: !4750)
!4772 = !DILocation(line: 996, column: 37, scope: !4750)
!4773 = !DILocation(line: 0, scope: !4750)
!4774 = !DILocation(line: 998, column: 21, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4750, file: !242, line: 998, column: 7)
!4776 = !DILocation(line: 998, column: 31, scope: !4775)
!4777 = !DILocation(line: 998, column: 40, scope: !4775)
!4778 = !DILocation(line: 998, column: 9, scope: !4775)
!4779 = !DILocation(line: 998, column: 7, scope: !4750)
!4780 = !DILocation(line: 1000, column: 11, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !242, line: 1000, column: 11)
!4782 = distinct !DILexicalBlock(scope: !4775, file: !242, line: 999, column: 5)
!4783 = !DILocation(line: 1000, column: 22, scope: !4781)
!4784 = !DILocation(line: 1000, column: 26, scope: !4781)
!4785 = !DILocation(line: 1000, column: 38, scope: !4781)
!4786 = !DILocation(line: 1000, column: 61, scope: !4781)
!4787 = !DILocation(line: 1000, column: 42, scope: !4781)
!4788 = !DILocation(line: 1000, column: 11, scope: !4782)
!4789 = !DILocation(line: 1001, column: 19, scope: !4781)
!4790 = !DILocation(line: 1001, column: 26, scope: !4781)
!4791 = !DILocation(line: 1002, column: 16, scope: !4781)
!4792 = !DILocation(line: 1001, column: 9, scope: !4781)
!4793 = !DILocation(line: 1003, column: 7, scope: !4782)
!4794 = !DILocation(line: 1006, column: 3, scope: !4750)
!4795 = !DILocation(line: 1007, column: 1, scope: !4750)
!4796 = distinct !DISubprogram(name: "restorecon", scope: !4733, file: !4733, line: 40, type: !308, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4797 = !DILocalVariable(name: "path", arg: 1, scope: !4796, file: !4733, line: 40, type: !112)
!4798 = !DILocation(line: 40, column: 25, scope: !4796)
!4799 = !DILocalVariable(name: "recurse", arg: 2, scope: !4796, file: !4733, line: 40, type: !117)
!4800 = !DILocation(line: 40, column: 36, scope: !4796)
!4801 = !DILocalVariable(name: "preserve", arg: 3, scope: !4796, file: !4733, line: 40, type: !117)
!4802 = !DILocation(line: 40, column: 50, scope: !4796)
!4803 = !DILocation(line: 41, column: 3, scope: !4796)
!4804 = !DILocation(line: 41, column: 9, scope: !4796)
!4805 = !DILocation(line: 41, column: 20, scope: !4796)
!4806 = distinct !DISubprogram(name: "dest_info_init", scope: !242, file: !242, line: 1739, type: !294, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4807 = !DILocalVariable(name: "x", arg: 1, scope: !4806, file: !242, line: 1739, type: !296)
!4808 = !DILocation(line: 1739, column: 36, scope: !4806)
!4809 = !DILocation(line: 1742, column: 7, scope: !4806)
!4810 = !DILocation(line: 1741, column: 3, scope: !4806)
!4811 = !DILocation(line: 1741, column: 6, scope: !4806)
!4812 = !DILocation(line: 1742, column: 5, scope: !4806)
!4813 = !DILocation(line: 1747, column: 1, scope: !4806)
!4814 = distinct !DISubprogram(name: "src_info_init", scope: !242, file: !242, line: 1752, type: !294, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4815 = !DILocalVariable(name: "x", arg: 1, scope: !4814, file: !242, line: 1752, type: !296)
!4816 = !DILocation(line: 1752, column: 35, scope: !4814)
!4817 = !DILocation(line: 1764, column: 7, scope: !4814)
!4818 = !DILocation(line: 1763, column: 3, scope: !4814)
!4819 = !DILocation(line: 1763, column: 6, scope: !4814)
!4820 = !DILocation(line: 1764, column: 5, scope: !4814)
!4821 = !DILocation(line: 1769, column: 1, scope: !4814)
!4822 = distinct !DISubprogram(name: "copy", scope: !242, file: !242, line: 3009, type: !297, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4823 = !DILocalVariable(name: "src_name", arg: 1, scope: !4822, file: !242, line: 3009, type: !112)
!4824 = !DILocation(line: 3009, column: 19, scope: !4822)
!4825 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4822, file: !242, line: 3009, type: !112)
!4826 = !DILocation(line: 3009, column: 41, scope: !4822)
!4827 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4822, file: !242, line: 3010, type: !117)
!4828 = !DILocation(line: 3010, column: 12, scope: !4822)
!4829 = !DILocalVariable(name: "options", arg: 4, scope: !4822, file: !242, line: 3010, type: !249)
!4830 = !DILocation(line: 3010, column: 54, scope: !4822)
!4831 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4822, file: !242, line: 3011, type: !299)
!4832 = !DILocation(line: 3011, column: 13, scope: !4822)
!4833 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4822, file: !242, line: 3011, type: !299)
!4834 = !DILocation(line: 3011, column: 35, scope: !4822)
!4835 = !DILocation(line: 3013, column: 3, scope: !4822)
!4836 = !DILocation(line: 3022, column: 24, scope: !4822)
!4837 = !DILocation(line: 3022, column: 22, scope: !4822)
!4838 = !DILocation(line: 3023, column: 24, scope: !4822)
!4839 = !DILocation(line: 3023, column: 22, scope: !4822)
!4840 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4822, file: !242, line: 3025, type: !117)
!4841 = !DILocation(line: 3025, column: 8, scope: !4822)
!4842 = !DILocation(line: 3026, column: 25, scope: !4822)
!4843 = !DILocation(line: 3026, column: 35, scope: !4822)
!4844 = !DILocation(line: 3026, column: 45, scope: !4822)
!4845 = !DILocation(line: 3027, column: 25, scope: !4822)
!4846 = !DILocation(line: 3029, column: 25, scope: !4822)
!4847 = !DILocation(line: 3029, column: 41, scope: !4822)
!4848 = !DILocation(line: 3026, column: 10, scope: !4822)
!4849 = !DILocation(line: 3026, column: 3, scope: !4822)
!4850 = distinct !DISubprogram(name: "valid_options", scope: !242, file: !242, line: 2986, type: !300, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4851 = !DILocalVariable(name: "co", arg: 1, scope: !4850, file: !242, line: 2986, type: !249)
!4852 = !DILocation(line: 2986, column: 41, scope: !4850)
!4853 = !DILocation(line: 2988, column: 3, scope: !4850)
!4854 = !DILocation(line: 2989, column: 3, scope: !4850)
!4855 = !DILocation(line: 2990, column: 3, scope: !4850)
!4856 = !DILocation(line: 2991, column: 3, scope: !4850)
!4857 = !DILocation(line: 2992, column: 3, scope: !4850)
!4858 = !DILocation(line: 2993, column: 3, scope: !4850)
!4859 = !DILocation(line: 2996, column: 3, scope: !4850)
!4860 = distinct !DISubprogram(name: "copy_internal", scope: !242, file: !242, line: 1882, type: !310, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!4861 = !DILocalVariable(name: "src_name", arg: 1, scope: !4860, file: !242, line: 1882, type: !112)
!4862 = !DILocation(line: 1882, column: 28, scope: !4860)
!4863 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4860, file: !242, line: 1882, type: !112)
!4864 = !DILocation(line: 1882, column: 50, scope: !4860)
!4865 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4860, file: !242, line: 1883, type: !117)
!4866 = !DILocation(line: 1883, column: 21, scope: !4860)
!4867 = !DILocalVariable(name: "parent", arg: 4, scope: !4860, file: !242, line: 1884, type: !312)
!4868 = !DILocation(line: 1884, column: 35, scope: !4860)
!4869 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4860, file: !242, line: 1885, type: !347)
!4870 = !DILocation(line: 1885, column: 33, scope: !4860)
!4871 = !DILocalVariable(name: "x", arg: 6, scope: !4860, file: !242, line: 1886, type: !249)
!4872 = !DILocation(line: 1886, column: 41, scope: !4860)
!4873 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4860, file: !242, line: 1887, type: !117)
!4874 = !DILocation(line: 1887, column: 21, scope: !4860)
!4875 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4860, file: !242, line: 1888, type: !299)
!4876 = !DILocation(line: 1888, column: 22, scope: !4860)
!4877 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4860, file: !242, line: 1889, type: !299)
!4878 = !DILocation(line: 1889, column: 22, scope: !4860)
!4879 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4860, file: !242, line: 1890, type: !299)
!4880 = !DILocation(line: 1890, column: 22, scope: !4860)
!4881 = !DILocalVariable(name: "src_sb", scope: !4860, file: !242, line: 1892, type: !314)
!4882 = !DILocation(line: 1892, column: 15, scope: !4860)
!4883 = !DILocalVariable(name: "dst_sb", scope: !4860, file: !242, line: 1893, type: !314)
!4884 = !DILocation(line: 1893, column: 15, scope: !4860)
!4885 = !DILocalVariable(name: "src_mode", scope: !4860, file: !242, line: 1894, type: !157)
!4886 = !DILocation(line: 1894, column: 10, scope: !4860)
!4887 = !DILocalVariable(name: "dst_mode", scope: !4860, file: !242, line: 1895, type: !157)
!4888 = !DILocation(line: 1895, column: 10, scope: !4860)
!4889 = !DILocalVariable(name: "dst_mode_bits", scope: !4860, file: !242, line: 1896, type: !157)
!4890 = !DILocation(line: 1896, column: 10, scope: !4860)
!4891 = !DILocalVariable(name: "omitted_permissions", scope: !4860, file: !242, line: 1897, type: !157)
!4892 = !DILocation(line: 1897, column: 10, scope: !4860)
!4893 = !DILocalVariable(name: "restore_dst_mode", scope: !4860, file: !242, line: 1898, type: !117)
!4894 = !DILocation(line: 1898, column: 8, scope: !4860)
!4895 = !DILocalVariable(name: "earlier_file", scope: !4860, file: !242, line: 1899, type: !7)
!4896 = !DILocation(line: 1899, column: 9, scope: !4860)
!4897 = !DILocalVariable(name: "dst_backup", scope: !4860, file: !242, line: 1900, type: !7)
!4898 = !DILocation(line: 1900, column: 9, scope: !4860)
!4899 = !DILocalVariable(name: "delayed_ok", scope: !4860, file: !242, line: 1901, type: !117)
!4900 = !DILocation(line: 1901, column: 8, scope: !4860)
!4901 = !DILocalVariable(name: "copied_as_regular", scope: !4860, file: !242, line: 1902, type: !117)
!4902 = !DILocation(line: 1902, column: 8, scope: !4860)
!4903 = !DILocalVariable(name: "dest_is_symlink", scope: !4860, file: !242, line: 1903, type: !117)
!4904 = !DILocation(line: 1903, column: 8, scope: !4860)
!4905 = !DILocalVariable(name: "have_dst_lstat", scope: !4860, file: !242, line: 1904, type: !117)
!4906 = !DILocation(line: 1904, column: 8, scope: !4860)
!4907 = !DILocation(line: 1906, column: 4, scope: !4860)
!4908 = !DILocation(line: 1906, column: 19, scope: !4860)
!4909 = !DILocalVariable(name: "rename_errno", scope: !4860, file: !242, line: 1908, type: !5)
!4910 = !DILocation(line: 1908, column: 7, scope: !4860)
!4911 = !DILocation(line: 1908, column: 22, scope: !4860)
!4912 = !DILocation(line: 1908, column: 25, scope: !4860)
!4913 = !DILocation(line: 1909, column: 7, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 1909, column: 7)
!4915 = !DILocation(line: 1909, column: 10, scope: !4914)
!4916 = !DILocation(line: 1909, column: 7, scope: !4860)
!4917 = !DILocation(line: 1911, column: 11, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !242, line: 1911, column: 11)
!4919 = distinct !DILexicalBlock(scope: !4914, file: !242, line: 1910, column: 5)
!4920 = !DILocation(line: 1911, column: 24, scope: !4918)
!4921 = !DILocation(line: 1911, column: 11, scope: !4919)
!4922 = !DILocation(line: 1912, column: 46, scope: !4918)
!4923 = !DILocation(line: 1912, column: 66, scope: !4918)
!4924 = !DILocation(line: 1912, column: 25, scope: !4918)
!4925 = !DILocation(line: 1914, column: 27, scope: !4918)
!4926 = !DILocation(line: 1912, column: 22, scope: !4918)
!4927 = !DILocation(line: 1912, column: 9, scope: !4918)
!4928 = !DILocation(line: 1915, column: 17, scope: !4919)
!4929 = !DILocation(line: 1915, column: 30, scope: !4919)
!4930 = !DILocation(line: 1915, column: 15, scope: !4919)
!4931 = !DILocation(line: 1916, column: 11, scope: !4932)
!4932 = distinct !DILexicalBlock(scope: !4919, file: !242, line: 1916, column: 11)
!4933 = !DILocation(line: 1916, column: 11, scope: !4919)
!4934 = !DILocation(line: 1917, column: 29, scope: !4932)
!4935 = !DILocation(line: 1917, column: 10, scope: !4932)
!4936 = !DILocation(line: 1917, column: 27, scope: !4932)
!4937 = !DILocation(line: 1917, column: 9, scope: !4932)
!4938 = !DILocation(line: 1918, column: 5, scope: !4919)
!4939 = !DILocation(line: 1920, column: 7, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 1920, column: 7)
!4941 = !DILocation(line: 1920, column: 20, scope: !4940)
!4942 = !DILocation(line: 1920, column: 7, scope: !4860)
!4943 = !DILocation(line: 1921, column: 10, scope: !4940)
!4944 = !DILocation(line: 1921, column: 13, scope: !4940)
!4945 = !DILocation(line: 1922, column: 9, scope: !4940)
!4946 = !DILocation(line: 1922, column: 22, scope: !4940)
!4947 = !DILocation(line: 1922, column: 32, scope: !4940)
!4948 = !DILocation(line: 1922, column: 35, scope: !4940)
!4949 = !DILocation(line: 1922, column: 38, scope: !4940)
!4950 = !DILocation(line: 1922, column: 50, scope: !4940)
!4951 = !DILocalVariable(name: "name", scope: !4952, file: !242, line: 1924, type: !112)
!4952 = distinct !DILexicalBlock(scope: !4940, file: !242, line: 1923, column: 5)
!4953 = !DILocation(line: 1924, column: 19, scope: !4952)
!4954 = !DILocation(line: 1924, column: 26, scope: !4952)
!4955 = !DILocation(line: 1924, column: 39, scope: !4952)
!4956 = !DILocation(line: 1924, column: 46, scope: !4952)
!4957 = !DILocation(line: 1924, column: 57, scope: !4952)
!4958 = !DILocalVariable(name: "fstatat_flags", scope: !4952, file: !242, line: 1925, type: !5)
!4959 = !DILocation(line: 1925, column: 11, scope: !4952)
!4960 = !DILocation(line: 1926, column: 11, scope: !4952)
!4961 = !DILocation(line: 1926, column: 14, scope: !4952)
!4962 = !DILocation(line: 1926, column: 26, scope: !4952)
!4963 = !DILocation(line: 1927, column: 37, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4952, file: !242, line: 1927, column: 11)
!4965 = !DILocation(line: 1927, column: 52, scope: !4964)
!4966 = !DILocation(line: 1927, column: 11, scope: !4964)
!4967 = !DILocation(line: 1927, column: 67, scope: !4964)
!4968 = !DILocation(line: 1927, column: 11, scope: !4952)
!4969 = !DILocation(line: 1929, column: 21, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4964, file: !242, line: 1928, column: 9)
!4971 = !DILocation(line: 1929, column: 28, scope: !4970)
!4972 = !DILocation(line: 1929, column: 49, scope: !4970)
!4973 = !DILocation(line: 1929, column: 11, scope: !4970)
!4974 = !DILocation(line: 1930, column: 11, scope: !4970)
!4975 = !DILocation(line: 1933, column: 25, scope: !4952)
!4976 = !DILocation(line: 1933, column: 16, scope: !4952)
!4977 = !DILocation(line: 1935, column: 11, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4952, file: !242, line: 1935, column: 11)
!4979 = !DILocation(line: 1935, column: 30, scope: !4978)
!4980 = !DILocation(line: 1935, column: 34, scope: !4978)
!4981 = !DILocation(line: 1935, column: 37, scope: !4978)
!4982 = !DILocation(line: 1935, column: 11, scope: !4952)
!4983 = !DILocation(line: 1937, column: 26, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4978, file: !242, line: 1936, column: 9)
!4985 = !DILocation(line: 1937, column: 29, scope: !4984)
!4986 = !DILocation(line: 1937, column: 24, scope: !4984)
!4987 = !DILocation(line: 1938, column: 20, scope: !4984)
!4988 = !DILocation(line: 1939, column: 20, scope: !4984)
!4989 = !DILocation(line: 1940, column: 18, scope: !4984)
!4990 = !DILocation(line: 1937, column: 11, scope: !4984)
!4991 = !DILocation(line: 1941, column: 11, scope: !4984)
!4992 = !DILocation(line: 1943, column: 5, scope: !4952)
!4993 = !DILocation(line: 1956, column: 7, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 1956, column: 7)
!4995 = !DILocation(line: 1956, column: 24, scope: !4994)
!4996 = !DILocation(line: 1956, column: 27, scope: !4994)
!4997 = !DILocation(line: 1956, column: 30, scope: !4994)
!4998 = !DILocation(line: 1956, column: 7, scope: !4860)
!4999 = !DILocation(line: 1958, column: 14, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !5001, file: !242, line: 1958, column: 12)
!5001 = distinct !DILexicalBlock(scope: !4994, file: !242, line: 1957, column: 5)
!5002 = !DILocation(line: 1959, column: 12, scope: !5000)
!5003 = !DILocation(line: 1959, column: 15, scope: !5000)
!5004 = !DILocation(line: 1959, column: 18, scope: !5000)
!5005 = !DILocation(line: 1959, column: 30, scope: !5000)
!5006 = !DILocation(line: 1960, column: 12, scope: !5000)
!5007 = !DILocation(line: 1960, column: 26, scope: !5000)
!5008 = !DILocation(line: 1960, column: 29, scope: !5000)
!5009 = !DILocation(line: 1960, column: 39, scope: !5000)
!5010 = !DILocation(line: 1960, column: 15, scope: !5000)
!5011 = !DILocation(line: 1958, column: 12, scope: !5001)
!5012 = !DILocation(line: 1962, column: 24, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5000, file: !242, line: 1961, column: 9)
!5014 = !DILocation(line: 1963, column: 18, scope: !5013)
!5015 = !DILocation(line: 1962, column: 11, scope: !5013)
!5016 = !DILocation(line: 1964, column: 11, scope: !5013)
!5017 = !DILocation(line: 1967, column: 20, scope: !5001)
!5018 = !DILocation(line: 1967, column: 23, scope: !5001)
!5019 = !DILocation(line: 1967, column: 33, scope: !5001)
!5020 = !DILocation(line: 1967, column: 7, scope: !5001)
!5021 = !DILocation(line: 1968, column: 5, scope: !5001)
!5022 = !DILocalVariable(name: "dereference", scope: !4860, file: !242, line: 1970, type: !117)
!5023 = !DILocation(line: 1970, column: 8, scope: !4860)
!5024 = !DILocation(line: 1970, column: 42, scope: !4860)
!5025 = !DILocation(line: 1970, column: 45, scope: !4860)
!5026 = !DILocation(line: 1970, column: 22, scope: !4860)
!5027 = !DILocation(line: 1972, column: 8, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 1972, column: 7)
!5029 = !DILocation(line: 1972, column: 7, scope: !4860)
!5030 = !DILocation(line: 1974, column: 14, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !5032, file: !242, line: 1974, column: 11)
!5032 = distinct !DILexicalBlock(scope: !5028, file: !242, line: 1973, column: 5)
!5033 = !DILocation(line: 1974, column: 27, scope: !5031)
!5034 = !DILocation(line: 1974, column: 37, scope: !5031)
!5035 = !DILocation(line: 1974, column: 40, scope: !5031)
!5036 = !DILocation(line: 1974, column: 43, scope: !5031)
!5037 = !DILocation(line: 1974, column: 55, scope: !5031)
!5038 = !DILocation(line: 1974, column: 11, scope: !5032)
!5039 = !DILocalVariable(name: "use_lstat", scope: !5040, file: !242, line: 1982, type: !117)
!5040 = distinct !DILexicalBlock(scope: !5031, file: !242, line: 1975, column: 9)
!5041 = !DILocation(line: 1982, column: 16, scope: !5040)
!5042 = !DILocation(line: 1983, column: 19, scope: !5040)
!5043 = !DILocation(line: 1984, column: 17, scope: !5040)
!5044 = !DILocation(line: 1984, column: 23, scope: !5040)
!5045 = !DILocation(line: 1984, column: 26, scope: !5040)
!5046 = !DILocation(line: 1985, column: 21, scope: !5040)
!5047 = !DILocation(line: 1985, column: 24, scope: !5040)
!5048 = !DILocation(line: 1985, column: 43, scope: !5040)
!5049 = !DILocation(line: 1985, column: 46, scope: !5040)
!5050 = !DILocation(line: 1986, column: 16, scope: !5040)
!5051 = !DILocation(line: 1986, column: 19, scope: !5040)
!5052 = !DILocation(line: 1986, column: 22, scope: !5040)
!5053 = !DILocation(line: 1986, column: 32, scope: !5040)
!5054 = !DILocation(line: 1986, column: 35, scope: !5040)
!5055 = !DILocation(line: 1986, column: 38, scope: !5040)
!5056 = !DILocation(line: 1986, column: 52, scope: !5040)
!5057 = !DILocation(line: 1986, column: 55, scope: !5040)
!5058 = !DILocation(line: 1986, column: 58, scope: !5040)
!5059 = !DILocation(line: 1987, column: 16, scope: !5040)
!5060 = !DILocation(line: 1987, column: 19, scope: !5040)
!5061 = !DILocation(line: 1987, column: 22, scope: !5040)
!5062 = !DILocation(line: 1987, column: 34, scope: !5040)
!5063 = !DILocation(line: 1988, column: 16, scope: !5040)
!5064 = !DILocation(line: 1988, column: 19, scope: !5040)
!5065 = !DILocation(line: 1988, column: 22, scope: !5040)
!5066 = !DILocalVariable(name: "fstatat_flags", scope: !5040, file: !242, line: 1989, type: !5)
!5067 = !DILocation(line: 1989, column: 15, scope: !5040)
!5068 = !DILocation(line: 1989, column: 31, scope: !5040)
!5069 = !DILocation(line: 1990, column: 41, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5040, file: !242, line: 1990, column: 15)
!5071 = !DILocation(line: 1990, column: 60, scope: !5070)
!5072 = !DILocation(line: 1990, column: 15, scope: !5070)
!5073 = !DILocation(line: 1990, column: 75, scope: !5070)
!5074 = !DILocation(line: 1990, column: 15, scope: !5040)
!5075 = !DILocation(line: 1992, column: 32, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5070, file: !242, line: 1991, column: 13)
!5077 = !DILocation(line: 1992, column: 30, scope: !5076)
!5078 = !DILocation(line: 1993, column: 28, scope: !5076)
!5079 = !DILocation(line: 1994, column: 13, scope: !5076)
!5080 = !DILocation(line: 1997, column: 19, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5082, file: !242, line: 1997, column: 19)
!5082 = distinct !DILexicalBlock(scope: !5070, file: !242, line: 1996, column: 13)
!5083 = !DILocation(line: 1997, column: 25, scope: !5081)
!5084 = !DILocation(line: 1997, column: 34, scope: !5081)
!5085 = !DILocation(line: 1997, column: 37, scope: !5081)
!5086 = !DILocation(line: 1997, column: 40, scope: !5081)
!5087 = !DILocation(line: 1997, column: 19, scope: !5082)
!5088 = !DILocation(line: 1999, column: 24, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5081, file: !242, line: 1999, column: 24)
!5090 = !DILocation(line: 1999, column: 30, scope: !5089)
!5091 = !DILocation(line: 1999, column: 24, scope: !5081)
!5092 = !DILocation(line: 2001, column: 29, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5089, file: !242, line: 2000, column: 17)
!5094 = !DILocation(line: 2001, column: 36, scope: !5093)
!5095 = !DILocation(line: 2001, column: 57, scope: !5093)
!5096 = !DILocation(line: 2001, column: 19, scope: !5093)
!5097 = !DILocation(line: 2002, column: 19, scope: !5093)
!5098 = !DILocation(line: 2005, column: 25, scope: !5089)
!5099 = !DILocation(line: 2007, column: 9, scope: !5040)
!5100 = !DILocation(line: 2009, column: 11, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5032, file: !242, line: 2009, column: 11)
!5102 = !DILocation(line: 2009, column: 24, scope: !5101)
!5103 = !DILocation(line: 2009, column: 11, scope: !5032)
!5104 = !DILocalVariable(name: "return_now", scope: !5105, file: !242, line: 2011, type: !117)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !242, line: 2010, column: 9)
!5106 = !DILocation(line: 2011, column: 16, scope: !5105)
!5107 = !DILocation(line: 2013, column: 15, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2013, column: 15)
!5109 = !DILocation(line: 2013, column: 18, scope: !5108)
!5110 = !DILocation(line: 2013, column: 30, scope: !5108)
!5111 = !DILocation(line: 2014, column: 15, scope: !5108)
!5112 = !DILocation(line: 2014, column: 34, scope: !5108)
!5113 = !DILocation(line: 2014, column: 53, scope: !5108)
!5114 = !DILocation(line: 2015, column: 34, scope: !5108)
!5115 = !DILocation(line: 2014, column: 20, scope: !5108)
!5116 = !DILocation(line: 2013, column: 15, scope: !5105)
!5117 = !DILocation(line: 2017, column: 28, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5108, file: !242, line: 2016, column: 13)
!5119 = !DILocation(line: 2018, column: 22, scope: !5118)
!5120 = !DILocation(line: 2018, column: 47, scope: !5118)
!5121 = !DILocation(line: 2017, column: 15, scope: !5118)
!5122 = !DILocation(line: 2019, column: 15, scope: !5118)
!5123 = !DILocation(line: 2022, column: 15, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2022, column: 15)
!5125 = !DILocation(line: 2022, column: 18, scope: !5124)
!5126 = !DILocation(line: 2022, column: 25, scope: !5124)
!5127 = !DILocation(line: 2022, column: 29, scope: !5124)
!5128 = !DILocation(line: 2022, column: 15, scope: !5105)
!5129 = !DILocalVariable(name: "options", scope: !5130, file: !242, line: 2028, type: !5)
!5130 = distinct !DILexicalBlock(scope: !5124, file: !242, line: 2023, column: 13)
!5131 = !DILocation(line: 2028, column: 19, scope: !5130)
!5132 = !DILocation(line: 2028, column: 31, scope: !5130)
!5133 = !DILocation(line: 2028, column: 34, scope: !5130)
!5134 = !DILocation(line: 2029, column: 31, scope: !5130)
!5135 = !DILocation(line: 2029, column: 37, scope: !5130)
!5136 = !DILocation(line: 2029, column: 40, scope: !5130)
!5137 = !DILocation(line: 2030, column: 37, scope: !5130)
!5138 = !DILocation(line: 2030, column: 47, scope: !5130)
!5139 = !DILocation(line: 2030, column: 64, scope: !5130)
!5140 = !DILocation(line: 2030, column: 54, scope: !5130)
!5141 = !DILocation(line: 0, scope: !5130)
!5142 = !DILocation(line: 2029, column: 34, scope: !5130)
!5143 = !DILocation(line: 2028, column: 30, scope: !5130)
!5144 = !DILocation(line: 2034, column: 34, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5130, file: !242, line: 2034, column: 19)
!5146 = !DILocation(line: 2034, column: 62, scope: !5145)
!5147 = !DILocation(line: 2034, column: 24, scope: !5145)
!5148 = !DILocation(line: 2034, column: 21, scope: !5145)
!5149 = !DILocation(line: 2034, column: 19, scope: !5130)
!5150 = !DILocation(line: 2040, column: 23, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5152, file: !242, line: 2040, column: 23)
!5152 = distinct !DILexicalBlock(scope: !5145, file: !242, line: 2035, column: 17)
!5153 = !DILocation(line: 2040, column: 23, scope: !5152)
!5154 = !DILocation(line: 2041, column: 22, scope: !5151)
!5155 = !DILocation(line: 2041, column: 39, scope: !5151)
!5156 = !DILocation(line: 2041, column: 21, scope: !5151)
!5157 = !DILocation(line: 2048, column: 51, scope: !5152)
!5158 = !DILocation(line: 2048, column: 68, scope: !5152)
!5159 = !DILocation(line: 2049, column: 58, scope: !5152)
!5160 = !DILocation(line: 2048, column: 34, scope: !5152)
!5161 = !DILocation(line: 2048, column: 32, scope: !5152)
!5162 = !DILocation(line: 2050, column: 23, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5152, file: !242, line: 2050, column: 23)
!5164 = !DILocation(line: 2050, column: 23, scope: !5152)
!5165 = !DILocation(line: 2054, column: 47, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5167, file: !242, line: 2054, column: 27)
!5167 = distinct !DILexicalBlock(scope: !5163, file: !242, line: 2051, column: 21)
!5168 = !DILocation(line: 2054, column: 61, scope: !5166)
!5169 = !DILocation(line: 2055, column: 47, scope: !5166)
!5170 = !DILocation(line: 2055, column: 50, scope: !5166)
!5171 = !DILocation(line: 2055, column: 59, scope: !5166)
!5172 = !DILocation(line: 2054, column: 29, scope: !5166)
!5173 = !DILocation(line: 2054, column: 27, scope: !5167)
!5174 = !DILocation(line: 2057, column: 27, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5166, file: !242, line: 2056, column: 25)
!5176 = !DILocation(line: 2059, column: 21, scope: !5167)
!5177 = !DILocation(line: 2061, column: 19, scope: !5152)
!5178 = !DILocation(line: 2063, column: 13, scope: !5130)
!5179 = !DILocation(line: 2072, column: 15, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2072, column: 15)
!5181 = !DILocation(line: 2072, column: 18, scope: !5180)
!5182 = !DILocation(line: 2072, column: 15, scope: !5105)
!5183 = !DILocation(line: 2074, column: 33, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5185, file: !242, line: 2074, column: 19)
!5185 = distinct !DILexicalBlock(scope: !5180, file: !242, line: 2073, column: 13)
!5186 = !DILocation(line: 2074, column: 36, scope: !5184)
!5187 = !DILocation(line: 2074, column: 19, scope: !5184)
!5188 = !DILocation(line: 2074, column: 19, scope: !5185)
!5189 = !DILocation(line: 2078, column: 23, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5191, file: !242, line: 2078, column: 23)
!5191 = distinct !DILexicalBlock(scope: !5184, file: !242, line: 2075, column: 17)
!5192 = !DILocation(line: 2078, column: 23, scope: !5191)
!5193 = !DILocation(line: 2079, column: 22, scope: !5190)
!5194 = !DILocation(line: 2079, column: 39, scope: !5190)
!5195 = !DILocation(line: 2079, column: 21, scope: !5190)
!5196 = !DILocation(line: 2080, column: 19, scope: !5191)
!5197 = !DILocation(line: 2082, column: 13, scope: !5185)
!5198 = !DILocation(line: 2085, column: 21, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !242, line: 2085, column: 19)
!5200 = distinct !DILexicalBlock(scope: !5180, file: !242, line: 2084, column: 13)
!5201 = !DILocation(line: 2086, column: 19, scope: !5199)
!5202 = !DILocation(line: 2086, column: 23, scope: !5199)
!5203 = !DILocation(line: 2086, column: 26, scope: !5199)
!5204 = !DILocation(line: 2086, column: 38, scope: !5199)
!5205 = !DILocation(line: 2087, column: 23, scope: !5199)
!5206 = !DILocation(line: 2087, column: 27, scope: !5199)
!5207 = !DILocation(line: 2087, column: 30, scope: !5199)
!5208 = !DILocation(line: 2087, column: 42, scope: !5199)
!5209 = !DILocation(line: 2088, column: 27, scope: !5199)
!5210 = !DILocation(line: 2088, column: 46, scope: !5199)
!5211 = !DILocation(line: 2088, column: 49, scope: !5199)
!5212 = !DILocation(line: 2088, column: 32, scope: !5199)
!5213 = !DILocation(line: 2085, column: 19, scope: !5200)
!5214 = !DILocation(line: 2089, column: 17, scope: !5199)
!5215 = !DILocation(line: 2092, column: 15, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2092, column: 15)
!5217 = !DILocation(line: 2092, column: 15, scope: !5105)
!5218 = !DILocation(line: 2093, column: 13, scope: !5216)
!5219 = !DILocation(line: 2095, column: 16, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2095, column: 15)
!5221 = !DILocation(line: 2095, column: 15, scope: !5105)
!5222 = !DILocation(line: 2097, column: 19, scope: !5223)
!5223 = distinct !DILexicalBlock(scope: !5224, file: !242, line: 2097, column: 19)
!5224 = distinct !DILexicalBlock(scope: !5220, file: !242, line: 2096, column: 13)
!5225 = !DILocation(line: 2097, column: 19, scope: !5224)
!5226 = !DILocation(line: 2099, column: 23, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5228, file: !242, line: 2099, column: 23)
!5228 = distinct !DILexicalBlock(scope: !5223, file: !242, line: 2098, column: 17)
!5229 = !DILocation(line: 2099, column: 26, scope: !5227)
!5230 = !DILocation(line: 2099, column: 36, scope: !5227)
!5231 = !DILocation(line: 2099, column: 39, scope: !5227)
!5232 = !DILocation(line: 2099, column: 42, scope: !5227)
!5233 = !DILocation(line: 2099, column: 54, scope: !5227)
!5234 = !DILocation(line: 2099, column: 23, scope: !5228)
!5235 = !DILocation(line: 2103, column: 21, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5227, file: !242, line: 2100, column: 21)
!5237 = !DILocation(line: 2107, column: 24, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5227, file: !242, line: 2105, column: 21)
!5239 = !DILocation(line: 2108, column: 30, scope: !5238)
!5240 = !DILocation(line: 2108, column: 55, scope: !5238)
!5241 = !DILocation(line: 2106, column: 23, scope: !5238)
!5242 = !DILocation(line: 2109, column: 23, scope: !5238)
!5243 = !DILocation(line: 2111, column: 17, scope: !5228)
!5244 = !DILocation(line: 2120, column: 19, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5224, file: !242, line: 2120, column: 19)
!5246 = !DILocation(line: 2121, column: 19, scope: !5245)
!5247 = !DILocation(line: 2121, column: 22, scope: !5245)
!5248 = !DILocation(line: 2121, column: 25, scope: !5245)
!5249 = !DILocation(line: 2121, column: 37, scope: !5245)
!5250 = !DILocation(line: 2122, column: 19, scope: !5245)
!5251 = !DILocation(line: 2122, column: 33, scope: !5245)
!5252 = !DILocation(line: 2122, column: 36, scope: !5245)
!5253 = !DILocation(line: 2122, column: 47, scope: !5245)
!5254 = !DILocation(line: 2122, column: 22, scope: !5245)
!5255 = !DILocation(line: 2120, column: 19, scope: !5224)
!5256 = !DILocation(line: 2125, column: 26, scope: !5257)
!5257 = distinct !DILexicalBlock(scope: !5245, file: !242, line: 2123, column: 17)
!5258 = !DILocation(line: 2126, column: 26, scope: !5257)
!5259 = !DILocation(line: 2126, column: 51, scope: !5257)
!5260 = !DILocation(line: 2124, column: 19, scope: !5257)
!5261 = !DILocation(line: 2127, column: 19, scope: !5257)
!5262 = !DILocation(line: 2129, column: 13, scope: !5224)
!5263 = !DILocation(line: 2131, column: 16, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2131, column: 15)
!5265 = !DILocation(line: 2131, column: 15, scope: !5105)
!5266 = !DILocation(line: 2133, column: 19, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5268, file: !242, line: 2133, column: 19)
!5268 = distinct !DILexicalBlock(scope: !5264, file: !242, line: 2132, column: 13)
!5269 = !DILocation(line: 2133, column: 19, scope: !5268)
!5270 = !DILocation(line: 2135, column: 23, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5272, file: !242, line: 2135, column: 23)
!5272 = distinct !DILexicalBlock(scope: !5267, file: !242, line: 2134, column: 17)
!5273 = !DILocation(line: 2135, column: 26, scope: !5271)
!5274 = !DILocation(line: 2135, column: 36, scope: !5271)
!5275 = !DILocation(line: 2135, column: 39, scope: !5271)
!5276 = !DILocation(line: 2135, column: 42, scope: !5271)
!5277 = !DILocation(line: 2135, column: 54, scope: !5271)
!5278 = !DILocation(line: 2135, column: 23, scope: !5272)
!5279 = !DILocation(line: 2139, column: 21, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5271, file: !242, line: 2136, column: 21)
!5281 = !DILocation(line: 2143, column: 26, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5271, file: !242, line: 2141, column: 21)
!5283 = !DILocation(line: 2144, column: 30, scope: !5282)
!5284 = !DILocation(line: 2142, column: 23, scope: !5282)
!5285 = !DILocation(line: 2145, column: 23, scope: !5282)
!5286 = !DILocation(line: 2147, column: 17, scope: !5272)
!5287 = !DILocation(line: 2148, column: 13, scope: !5268)
!5288 = !DILocation(line: 2150, column: 15, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2150, column: 15)
!5290 = !DILocation(line: 2150, column: 18, scope: !5289)
!5291 = !DILocation(line: 2150, column: 15, scope: !5105)
!5292 = !DILocation(line: 2153, column: 19, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5294, file: !242, line: 2153, column: 19)
!5294 = distinct !DILexicalBlock(scope: !5289, file: !242, line: 2151, column: 13)
!5295 = !DILocation(line: 2153, column: 44, scope: !5293)
!5296 = !DILocation(line: 2153, column: 48, scope: !5293)
!5297 = !DILocation(line: 2154, column: 19, scope: !5293)
!5298 = !DILocation(line: 2154, column: 22, scope: !5293)
!5299 = !DILocation(line: 2154, column: 25, scope: !5293)
!5300 = !DILocation(line: 2154, column: 37, scope: !5293)
!5301 = !DILocation(line: 2153, column: 19, scope: !5294)
!5302 = !DILocation(line: 2157, column: 24, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5293, file: !242, line: 2155, column: 17)
!5304 = !DILocation(line: 2158, column: 26, scope: !5303)
!5305 = !DILocation(line: 2158, column: 50, scope: !5303)
!5306 = !DILocation(line: 2156, column: 19, scope: !5303)
!5307 = !DILocation(line: 2159, column: 19, scope: !5303)
!5308 = !DILocation(line: 2161, column: 13, scope: !5294)
!5309 = !DILocalVariable(name: "srcbase", scope: !5105, file: !242, line: 2163, type: !112)
!5310 = !DILocation(line: 2163, column: 23, scope: !5105)
!5311 = !DILocation(line: 2164, column: 15, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5105, file: !242, line: 2164, column: 15)
!5313 = !DILocation(line: 2164, column: 18, scope: !5312)
!5314 = !DILocation(line: 2164, column: 30, scope: !5312)
!5315 = !DILocation(line: 2167, column: 15, scope: !5312)
!5316 = !DILocation(line: 2167, column: 61, scope: !5312)
!5317 = !DILocation(line: 2167, column: 45, scope: !5312)
!5318 = !DILocation(line: 2167, column: 43, scope: !5312)
!5319 = !DILocation(line: 2167, column: 20, scope: !5312)
!5320 = !DILocation(line: 2173, column: 15, scope: !5312)
!5321 = !DILocation(line: 2173, column: 19, scope: !5312)
!5322 = !DILocation(line: 2173, column: 22, scope: !5312)
!5323 = !DILocation(line: 2173, column: 32, scope: !5312)
!5324 = !DILocation(line: 2173, column: 37, scope: !5312)
!5325 = !DILocation(line: 2164, column: 15, scope: !5105)
!5326 = !DILocation(line: 2179, column: 19, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !242, line: 2179, column: 19)
!5328 = distinct !DILexicalBlock(scope: !5312, file: !242, line: 2174, column: 13)
!5329 = !DILocation(line: 2179, column: 22, scope: !5327)
!5330 = !DILocation(line: 2179, column: 34, scope: !5327)
!5331 = !DILocation(line: 2180, column: 19, scope: !5327)
!5332 = !DILocation(line: 2180, column: 44, scope: !5327)
!5333 = !DILocation(line: 2180, column: 62, scope: !5327)
!5334 = !DILocation(line: 2180, column: 22, scope: !5327)
!5335 = !DILocation(line: 2179, column: 19, scope: !5328)
!5336 = !DILocalVariable(name: "fmt", scope: !5337, file: !242, line: 2182, type: !112)
!5337 = distinct !DILexicalBlock(scope: !5327, file: !242, line: 2181, column: 17)
!5338 = !DILocation(line: 2182, column: 31, scope: !5337)
!5339 = !DILocation(line: 2183, column: 26, scope: !5337)
!5340 = !DILocation(line: 2183, column: 29, scope: !5337)
!5341 = !DILocation(line: 2184, column: 20, scope: !5337)
!5342 = !DILocation(line: 2185, column: 20, scope: !5337)
!5343 = !DILocation(line: 2183, column: 23, scope: !5337)
!5344 = !DILocation(line: 2186, column: 32, scope: !5337)
!5345 = !DILocation(line: 2187, column: 26, scope: !5337)
!5346 = !DILocation(line: 2188, column: 26, scope: !5337)
!5347 = !DILocation(line: 2186, column: 19, scope: !5337)
!5348 = !DILocation(line: 2189, column: 19, scope: !5337)
!5349 = !DILocalVariable(name: "tmp_backup", scope: !5328, file: !242, line: 2192, type: !7)
!5350 = !DILocation(line: 2192, column: 21, scope: !5328)
!5351 = !DILocation(line: 2192, column: 64, scope: !5328)
!5352 = !DILocation(line: 2193, column: 54, scope: !5328)
!5353 = !DILocation(line: 2193, column: 57, scope: !5328)
!5354 = !DILocation(line: 2192, column: 34, scope: !5328)
!5355 = !DILocation(line: 2200, column: 19, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5328, file: !242, line: 2200, column: 19)
!5357 = !DILocation(line: 2200, column: 19, scope: !5328)
!5358 = !DILocation(line: 2202, column: 19, scope: !5359)
!5359 = distinct !DILexicalBlock(scope: !5356, file: !242, line: 2201, column: 17)
!5360 = !DILocalVariable(name: "__old", scope: !5361, file: !242, line: 2202, type: !112)
!5361 = distinct !DILexicalBlock(scope: !5362, file: !242, line: 2202, column: 19)
!5362 = distinct !DILexicalBlock(scope: !5359, file: !242, line: 2202, column: 19)
!5363 = !DILocation(line: 2202, column: 19, scope: !5361)
!5364 = !DILocalVariable(name: "__len", scope: !5361, file: !242, line: 2202, type: !52)
!5365 = !DILocalVariable(name: "__new", scope: !5361, file: !242, line: 2202, type: !7)
!5366 = !DILocation(line: 2202, column: 19, scope: !5362)
!5367 = !DILocation(line: 2203, column: 25, scope: !5359)
!5368 = !DILocation(line: 2203, column: 19, scope: !5359)
!5369 = !DILocation(line: 2204, column: 17, scope: !5359)
!5370 = !DILocation(line: 2205, column: 24, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5356, file: !242, line: 2205, column: 24)
!5372 = !DILocation(line: 2205, column: 30, scope: !5371)
!5373 = !DILocation(line: 2205, column: 24, scope: !5356)
!5374 = !DILocation(line: 2207, column: 29, scope: !5375)
!5375 = distinct !DILexicalBlock(scope: !5371, file: !242, line: 2206, column: 17)
!5376 = !DILocation(line: 2207, column: 36, scope: !5375)
!5377 = !DILocation(line: 2207, column: 59, scope: !5375)
!5378 = !DILocation(line: 2207, column: 19, scope: !5375)
!5379 = !DILocation(line: 2208, column: 19, scope: !5375)
!5380 = !DILocation(line: 2210, column: 23, scope: !5328)
!5381 = !DILocation(line: 2211, column: 13, scope: !5328)
!5382 = !DILocation(line: 2212, column: 22, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5312, file: !242, line: 2212, column: 20)
!5384 = !DILocation(line: 2214, column: 20, scope: !5383)
!5385 = !DILocation(line: 2214, column: 25, scope: !5383)
!5386 = !DILocation(line: 2214, column: 28, scope: !5383)
!5387 = !DILocation(line: 2215, column: 20, scope: !5383)
!5388 = !DILocation(line: 2215, column: 24, scope: !5383)
!5389 = !DILocation(line: 2215, column: 27, scope: !5383)
!5390 = !DILocation(line: 2216, column: 24, scope: !5383)
!5391 = !DILocation(line: 2216, column: 28, scope: !5383)
!5392 = !DILocation(line: 2216, column: 31, scope: !5383)
!5393 = !DILocation(line: 2216, column: 46, scope: !5383)
!5394 = !DILocation(line: 2216, column: 60, scope: !5383)
!5395 = !{!3177, !3178, i64 16}
!5396 = !DILocation(line: 2216, column: 51, scope: !5383)
!5397 = !DILocation(line: 2217, column: 24, scope: !5383)
!5398 = !DILocation(line: 2217, column: 28, scope: !5383)
!5399 = !DILocation(line: 2217, column: 31, scope: !5383)
!5400 = !DILocation(line: 2217, column: 43, scope: !5383)
!5401 = !DILocation(line: 2218, column: 28, scope: !5383)
!5402 = !DILocation(line: 2218, column: 33, scope: !5383)
!5403 = !DILocation(line: 2212, column: 20, scope: !5312)
!5404 = !DILocation(line: 2221, column: 27, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5406, file: !242, line: 2221, column: 19)
!5406 = distinct !DILexicalBlock(scope: !5383, file: !242, line: 2220, column: 13)
!5407 = !DILocation(line: 2221, column: 19, scope: !5405)
!5408 = !DILocation(line: 2221, column: 37, scope: !5405)
!5409 = !DILocation(line: 2221, column: 42, scope: !5405)
!5410 = !DILocation(line: 2221, column: 45, scope: !5405)
!5411 = !DILocation(line: 2221, column: 51, scope: !5405)
!5412 = !DILocation(line: 2221, column: 19, scope: !5406)
!5413 = !DILocation(line: 2223, column: 29, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5405, file: !242, line: 2222, column: 17)
!5415 = !DILocation(line: 2223, column: 36, scope: !5414)
!5416 = !DILocation(line: 2223, column: 59, scope: !5414)
!5417 = !DILocation(line: 2223, column: 19, scope: !5414)
!5418 = !DILocation(line: 2224, column: 19, scope: !5414)
!5419 = !DILocation(line: 2226, column: 23, scope: !5406)
!5420 = !DILocation(line: 2227, column: 19, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5406, file: !242, line: 2227, column: 19)
!5422 = !DILocation(line: 2227, column: 22, scope: !5421)
!5423 = !DILocation(line: 2227, column: 19, scope: !5406)
!5424 = !DILocation(line: 2228, column: 25, scope: !5421)
!5425 = !DILocation(line: 2228, column: 44, scope: !5421)
!5426 = !DILocation(line: 2228, column: 17, scope: !5421)
!5427 = !DILocation(line: 2229, column: 13, scope: !5406)
!5428 = !DILocation(line: 2230, column: 9, scope: !5105)
!5429 = !DILocation(line: 2231, column: 5, scope: !5032)
!5430 = !DILocation(line: 2235, column: 7, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2235, column: 7)
!5432 = !DILocation(line: 2236, column: 7, scope: !5431)
!5433 = !DILocation(line: 2236, column: 10, scope: !5431)
!5434 = !DILocation(line: 2236, column: 13, scope: !5431)
!5435 = !DILocation(line: 2237, column: 7, scope: !5431)
!5436 = !DILocation(line: 2237, column: 12, scope: !5431)
!5437 = !DILocation(line: 2237, column: 15, scope: !5431)
!5438 = !DILocation(line: 2238, column: 7, scope: !5431)
!5439 = !DILocation(line: 2238, column: 10, scope: !5431)
!5440 = !DILocation(line: 2238, column: 13, scope: !5431)
!5441 = !DILocation(line: 2238, column: 25, scope: !5431)
!5442 = !DILocation(line: 2235, column: 7, scope: !4860)
!5443 = !DILocalVariable(name: "lstat_ok", scope: !5444, file: !242, line: 2240, type: !117)
!5444 = distinct !DILexicalBlock(scope: !5431, file: !242, line: 2239, column: 5)
!5445 = !DILocation(line: 2240, column: 12, scope: !5444)
!5446 = !DILocalVariable(name: "tmp_buf", scope: !5444, file: !242, line: 2241, type: !314)
!5447 = !DILocation(line: 2241, column: 19, scope: !5444)
!5448 = !DILocalVariable(name: "dst_lstat_sb", scope: !5444, file: !242, line: 2242, type: !353)
!5449 = !DILocation(line: 2242, column: 20, scope: !5444)
!5450 = !DILocation(line: 2246, column: 11, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5444, file: !242, line: 2246, column: 11)
!5452 = !DILocation(line: 2246, column: 11, scope: !5444)
!5453 = !DILocation(line: 2247, column: 22, scope: !5451)
!5454 = !DILocation(line: 2247, column: 9, scope: !5451)
!5455 = !DILocation(line: 2250, column: 22, scope: !5456)
!5456 = distinct !DILexicalBlock(scope: !5457, file: !242, line: 2250, column: 15)
!5457 = distinct !DILexicalBlock(scope: !5451, file: !242, line: 2249, column: 9)
!5458 = !DILocation(line: 2250, column: 15, scope: !5456)
!5459 = !DILocation(line: 2250, column: 42, scope: !5456)
!5460 = !DILocation(line: 2250, column: 15, scope: !5457)
!5461 = !DILocation(line: 2251, column: 26, scope: !5456)
!5462 = !DILocation(line: 2251, column: 13, scope: !5456)
!5463 = !DILocation(line: 2253, column: 22, scope: !5456)
!5464 = !DILocation(line: 2257, column: 11, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5444, file: !242, line: 2257, column: 11)
!5466 = !DILocation(line: 2258, column: 11, scope: !5465)
!5467 = !DILocation(line: 2258, column: 14, scope: !5465)
!5468 = !DILocation(line: 2259, column: 11, scope: !5465)
!5469 = !DILocation(line: 2259, column: 25, scope: !5465)
!5470 = !DILocation(line: 2259, column: 28, scope: !5465)
!5471 = !DILocation(line: 2259, column: 39, scope: !5465)
!5472 = !DILocation(line: 2259, column: 49, scope: !5465)
!5473 = !DILocation(line: 2259, column: 14, scope: !5465)
!5474 = !DILocation(line: 2257, column: 11, scope: !5444)
!5475 = !DILocation(line: 2262, column: 18, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5465, file: !242, line: 2260, column: 9)
!5477 = !DILocation(line: 2263, column: 18, scope: !5476)
!5478 = !DILocation(line: 2263, column: 43, scope: !5476)
!5479 = !DILocation(line: 2261, column: 11, scope: !5476)
!5480 = !DILocation(line: 2264, column: 11, scope: !5476)
!5481 = !DILocation(line: 2266, column: 5, scope: !5444)
!5482 = !DILocation(line: 2272, column: 7, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2272, column: 7)
!5484 = !DILocation(line: 2272, column: 10, scope: !5483)
!5485 = !DILocation(line: 2272, column: 18, scope: !5483)
!5486 = !DILocation(line: 2272, column: 22, scope: !5483)
!5487 = !DILocation(line: 2272, column: 25, scope: !5483)
!5488 = !DILocation(line: 2272, column: 35, scope: !5483)
!5489 = !DILocation(line: 2272, column: 39, scope: !5483)
!5490 = !DILocation(line: 2272, column: 7, scope: !4860)
!5491 = !DILocation(line: 2273, column: 19, scope: !5483)
!5492 = !DILocation(line: 2273, column: 29, scope: !5483)
!5493 = !DILocation(line: 2273, column: 39, scope: !5483)
!5494 = !DILocation(line: 2273, column: 5, scope: !5483)
!5495 = !DILocation(line: 2305, column: 7, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2305, column: 7)
!5497 = !DILocation(line: 2305, column: 20, scope: !5496)
!5498 = !DILocation(line: 2305, column: 7, scope: !4860)
!5499 = !DILocation(line: 2306, column: 18, scope: !5496)
!5500 = !DILocation(line: 2306, column: 5, scope: !5496)
!5501 = !DILocation(line: 2307, column: 12, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5496, file: !242, line: 2307, column: 12)
!5503 = !DILocation(line: 2307, column: 15, scope: !5502)
!5504 = !DILocation(line: 2307, column: 25, scope: !5502)
!5505 = !DILocation(line: 2307, column: 28, scope: !5502)
!5506 = !DILocation(line: 2307, column: 12, scope: !5496)
!5507 = !DILocation(line: 2309, column: 11, scope: !5508)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !242, line: 2309, column: 11)
!5509 = distinct !DILexicalBlock(scope: !5502, file: !242, line: 2308, column: 5)
!5510 = !DILocation(line: 2309, column: 11, scope: !5509)
!5511 = !DILocation(line: 2310, column: 41, scope: !5508)
!5512 = !DILocation(line: 2310, column: 58, scope: !5508)
!5513 = !DILocation(line: 2310, column: 73, scope: !5508)
!5514 = !DILocation(line: 2310, column: 24, scope: !5508)
!5515 = !DILocation(line: 2310, column: 22, scope: !5508)
!5516 = !DILocation(line: 2310, column: 9, scope: !5508)
!5517 = !DILocation(line: 2312, column: 51, scope: !5508)
!5518 = !DILocation(line: 2312, column: 66, scope: !5508)
!5519 = !DILocation(line: 2312, column: 24, scope: !5508)
!5520 = !DILocation(line: 2312, column: 22, scope: !5508)
!5521 = !DILocation(line: 2313, column: 5, scope: !5509)
!5522 = !DILocation(line: 2314, column: 12, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5502, file: !242, line: 2314, column: 12)
!5524 = !DILocation(line: 2314, column: 15, scope: !5523)
!5525 = !DILocation(line: 2314, column: 25, scope: !5523)
!5526 = !DILocation(line: 2314, column: 35, scope: !5523)
!5527 = !DILocation(line: 2314, column: 44, scope: !5523)
!5528 = !DILocation(line: 2314, column: 12, scope: !5502)
!5529 = !DILocation(line: 2316, column: 49, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5523, file: !242, line: 2315, column: 5)
!5531 = !DILocation(line: 2316, column: 64, scope: !5530)
!5532 = !DILocation(line: 2316, column: 22, scope: !5530)
!5533 = !DILocation(line: 2316, column: 20, scope: !5530)
!5534 = !DILocation(line: 2317, column: 5, scope: !5530)
!5535 = !DILocation(line: 2318, column: 12, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5523, file: !242, line: 2318, column: 12)
!5537 = !DILocation(line: 2318, column: 15, scope: !5536)
!5538 = !DILocation(line: 2319, column: 12, scope: !5536)
!5539 = !DILocation(line: 2319, column: 16, scope: !5536)
!5540 = !DILocation(line: 2319, column: 19, scope: !5536)
!5541 = !DILocation(line: 2320, column: 12, scope: !5536)
!5542 = !DILocation(line: 2320, column: 27, scope: !5536)
!5543 = !DILocation(line: 2320, column: 18, scope: !5536)
!5544 = !DILocation(line: 2321, column: 16, scope: !5536)
!5545 = !DILocation(line: 2321, column: 20, scope: !5536)
!5546 = !DILocation(line: 2322, column: 20, scope: !5536)
!5547 = !DILocation(line: 2322, column: 23, scope: !5536)
!5548 = !DILocation(line: 2322, column: 26, scope: !5536)
!5549 = !DILocation(line: 2322, column: 38, scope: !5536)
!5550 = !DILocation(line: 2323, column: 16, scope: !5536)
!5551 = !DILocation(line: 2323, column: 19, scope: !5536)
!5552 = !DILocation(line: 2323, column: 22, scope: !5536)
!5553 = !DILocation(line: 2323, column: 34, scope: !5536)
!5554 = !DILocation(line: 2318, column: 12, scope: !5523)
!5555 = !DILocation(line: 2325, column: 39, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5536, file: !242, line: 2324, column: 5)
!5557 = !DILocation(line: 2325, column: 56, scope: !5556)
!5558 = !DILocation(line: 2325, column: 71, scope: !5556)
!5559 = !DILocation(line: 2325, column: 22, scope: !5556)
!5560 = !DILocation(line: 2325, column: 20, scope: !5556)
!5561 = !DILocation(line: 2326, column: 5, scope: !5556)
!5562 = !DILocation(line: 2331, column: 7, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2331, column: 7)
!5564 = !DILocation(line: 2331, column: 7, scope: !4860)
!5565 = !DILocation(line: 2336, column: 11, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5567, file: !242, line: 2336, column: 11)
!5567 = distinct !DILexicalBlock(scope: !5563, file: !242, line: 2332, column: 5)
!5568 = !DILocation(line: 2336, column: 11, scope: !5567)
!5569 = !DILocation(line: 2340, column: 26, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5571, file: !242, line: 2340, column: 15)
!5571 = distinct !DILexicalBlock(scope: !5566, file: !242, line: 2337, column: 9)
!5572 = !DILocation(line: 2340, column: 36, scope: !5570)
!5573 = !DILocation(line: 2340, column: 15, scope: !5570)
!5574 = !DILocation(line: 2340, column: 15, scope: !5571)
!5575 = !DILocation(line: 2342, column: 28, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5570, file: !242, line: 2341, column: 13)
!5577 = !DILocation(line: 2343, column: 22, scope: !5576)
!5578 = !DILocation(line: 2344, column: 22, scope: !5576)
!5579 = !DILocation(line: 2342, column: 15, scope: !5576)
!5580 = !DILocation(line: 2345, column: 16, scope: !5576)
!5581 = !DILocation(line: 2345, column: 31, scope: !5576)
!5582 = !DILocation(line: 2346, column: 15, scope: !5576)
!5583 = !DILocation(line: 2348, column: 31, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5570, file: !242, line: 2348, column: 20)
!5585 = !DILocation(line: 2348, column: 41, scope: !5584)
!5586 = !DILocation(line: 2348, column: 20, scope: !5584)
!5587 = !DILocation(line: 2348, column: 20, scope: !5570)
!5588 = !DILocation(line: 2350, column: 28, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5584, file: !242, line: 2349, column: 13)
!5590 = !DILocation(line: 2352, column: 22, scope: !5589)
!5591 = !DILocation(line: 2350, column: 15, scope: !5589)
!5592 = !DILocation(line: 2357, column: 19, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5589, file: !242, line: 2357, column: 19)
!5594 = !DILocation(line: 2357, column: 22, scope: !5593)
!5595 = !DILocation(line: 2357, column: 32, scope: !5593)
!5596 = !DILocation(line: 2357, column: 35, scope: !5593)
!5597 = !DILocation(line: 2357, column: 19, scope: !5589)
!5598 = !DILocation(line: 2358, column: 18, scope: !5593)
!5599 = !DILocation(line: 2358, column: 35, scope: !5593)
!5600 = !DILocation(line: 2358, column: 17, scope: !5593)
!5601 = !DILocation(line: 2361, column: 15, scope: !5589)
!5602 = !DILocation(line: 2363, column: 20, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5584, file: !242, line: 2363, column: 20)
!5604 = !DILocation(line: 2363, column: 23, scope: !5603)
!5605 = !DILocation(line: 2363, column: 35, scope: !5603)
!5606 = !DILocation(line: 2364, column: 20, scope: !5603)
!5607 = !DILocation(line: 2364, column: 24, scope: !5603)
!5608 = !DILocation(line: 2365, column: 24, scope: !5603)
!5609 = !DILocation(line: 2365, column: 27, scope: !5603)
!5610 = !DILocation(line: 2365, column: 30, scope: !5603)
!5611 = !DILocation(line: 2365, column: 42, scope: !5603)
!5612 = !DILocation(line: 2363, column: 20, scope: !5584)
!5613 = !DILocation(line: 2373, column: 13, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5603, file: !242, line: 2366, column: 13)
!5615 = !DILocation(line: 2376, column: 28, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5603, file: !242, line: 2375, column: 13)
!5617 = !DILocation(line: 2377, column: 22, scope: !5616)
!5618 = !DILocation(line: 2377, column: 47, scope: !5616)
!5619 = !DILocation(line: 2376, column: 15, scope: !5616)
!5620 = !DILocation(line: 2378, column: 15, scope: !5616)
!5621 = !DILocation(line: 2380, column: 9, scope: !5571)
!5622 = !DILocation(line: 2383, column: 35, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5624, file: !242, line: 2383, column: 15)
!5624 = distinct !DILexicalBlock(scope: !5566, file: !242, line: 2382, column: 9)
!5625 = !DILocation(line: 2383, column: 49, scope: !5623)
!5626 = !DILocation(line: 2383, column: 65, scope: !5623)
!5627 = !DILocation(line: 2383, column: 68, scope: !5623)
!5628 = !DILocation(line: 2384, column: 35, scope: !5623)
!5629 = !DILocation(line: 2383, column: 17, scope: !5623)
!5630 = !DILocation(line: 2383, column: 15, scope: !5624)
!5631 = !DILocation(line: 2385, column: 13, scope: !5623)
!5632 = !DILocation(line: 2387, column: 11, scope: !5624)
!5633 = !DILocation(line: 2389, column: 5, scope: !5567)
!5634 = !DILocation(line: 2391, column: 7, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2391, column: 7)
!5636 = !DILocation(line: 2391, column: 10, scope: !5635)
!5637 = !DILocation(line: 2391, column: 7, scope: !4860)
!5638 = !DILocation(line: 2393, column: 11, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5640, file: !242, line: 2393, column: 11)
!5640 = distinct !DILexicalBlock(scope: !5635, file: !242, line: 2392, column: 5)
!5641 = !DILocation(line: 2393, column: 24, scope: !5639)
!5642 = !DILocation(line: 2393, column: 11, scope: !5640)
!5643 = !DILocation(line: 2394, column: 32, scope: !5639)
!5644 = !DILocation(line: 2394, column: 42, scope: !5639)
!5645 = !DILocation(line: 2394, column: 24, scope: !5639)
!5646 = !DILocation(line: 2394, column: 52, scope: !5639)
!5647 = !DILocation(line: 2394, column: 63, scope: !5639)
!5648 = !DILocation(line: 2394, column: 22, scope: !5639)
!5649 = !DILocation(line: 2394, column: 9, scope: !5639)
!5650 = !DILocation(line: 2396, column: 11, scope: !5651)
!5651 = distinct !DILexicalBlock(scope: !5640, file: !242, line: 2396, column: 11)
!5652 = !DILocation(line: 2396, column: 24, scope: !5651)
!5653 = !DILocation(line: 2396, column: 11, scope: !5640)
!5654 = !DILocation(line: 2398, column: 15, scope: !5655)
!5655 = distinct !DILexicalBlock(scope: !5656, file: !242, line: 2398, column: 15)
!5656 = distinct !DILexicalBlock(scope: !5651, file: !242, line: 2397, column: 9)
!5657 = !DILocation(line: 2398, column: 18, scope: !5655)
!5658 = !DILocation(line: 2398, column: 15, scope: !5656)
!5659 = !DILocation(line: 2400, column: 23, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5655, file: !242, line: 2399, column: 13)
!5661 = !DILocation(line: 2400, column: 15, scope: !5660)
!5662 = !DILocation(line: 2401, column: 29, scope: !5660)
!5663 = !DILocation(line: 2401, column: 39, scope: !5660)
!5664 = !DILocation(line: 2401, column: 49, scope: !5660)
!5665 = !DILocation(line: 2401, column: 15, scope: !5660)
!5666 = !DILocation(line: 2402, column: 13, scope: !5660)
!5667 = !DILocation(line: 2404, column: 15, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5656, file: !242, line: 2404, column: 15)
!5669 = !DILocation(line: 2404, column: 18, scope: !5668)
!5670 = !DILocation(line: 2404, column: 15, scope: !5656)
!5671 = !DILocation(line: 2407, column: 45, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !242, line: 2405, column: 13)
!5673 = !DILocation(line: 2407, column: 68, scope: !5672)
!5674 = !DILocation(line: 2407, column: 22, scope: !5672)
!5675 = !DILocation(line: 2408, column: 13, scope: !5672)
!5676 = !DILocation(line: 2410, column: 15, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5656, file: !242, line: 2410, column: 15)
!5678 = !DILocation(line: 2410, column: 15, scope: !5656)
!5679 = !DILocation(line: 2411, column: 14, scope: !5677)
!5680 = !DILocation(line: 2411, column: 31, scope: !5677)
!5681 = !DILocation(line: 2411, column: 13, scope: !5677)
!5682 = !DILocation(line: 2413, column: 15, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5656, file: !242, line: 2413, column: 15)
!5684 = !DILocation(line: 2413, column: 32, scope: !5683)
!5685 = !DILocation(line: 2413, column: 36, scope: !5683)
!5686 = !DILocation(line: 2413, column: 39, scope: !5683)
!5687 = !DILocation(line: 2413, column: 15, scope: !5656)
!5688 = !DILocation(line: 2422, column: 28, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5683, file: !242, line: 2414, column: 13)
!5690 = !DILocation(line: 2422, column: 31, scope: !5689)
!5691 = !DILocation(line: 2422, column: 42, scope: !5689)
!5692 = !DILocation(line: 2422, column: 15, scope: !5689)
!5693 = !DILocation(line: 2423, column: 13, scope: !5689)
!5694 = !DILocation(line: 2425, column: 11, scope: !5656)
!5695 = !DILocation(line: 2433, column: 11, scope: !5696)
!5696 = distinct !DILexicalBlock(scope: !5640, file: !242, line: 2433, column: 11)
!5697 = !DILocation(line: 2433, column: 24, scope: !5696)
!5698 = !DILocation(line: 2433, column: 11, scope: !5640)
!5699 = !DILocation(line: 2438, column: 24, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5696, file: !242, line: 2434, column: 9)
!5701 = !DILocation(line: 2439, column: 18, scope: !5700)
!5702 = !DILocation(line: 2440, column: 18, scope: !5700)
!5703 = !DILocation(line: 2438, column: 11, scope: !5700)
!5704 = !DILocation(line: 2446, column: 12, scope: !5700)
!5705 = !DILocation(line: 2446, column: 27, scope: !5700)
!5706 = !DILocation(line: 2450, column: 11, scope: !5700)
!5707 = !DILocation(line: 2468, column: 11, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5640, file: !242, line: 2468, column: 11)
!5709 = !DILocation(line: 2468, column: 24, scope: !5708)
!5710 = !DILocation(line: 2468, column: 11, scope: !5640)
!5711 = !DILocation(line: 2480, column: 21, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5708, file: !242, line: 2469, column: 9)
!5713 = !DILocation(line: 2481, column: 18, scope: !5712)
!5714 = !DILocation(line: 2482, column: 18, scope: !5712)
!5715 = !DILocation(line: 2482, column: 43, scope: !5712)
!5716 = !DILocation(line: 2480, column: 11, scope: !5712)
!5717 = !DILocation(line: 2483, column: 34, scope: !5712)
!5718 = !DILocation(line: 2483, column: 49, scope: !5712)
!5719 = !DILocation(line: 2483, column: 11, scope: !5712)
!5720 = !DILocation(line: 2484, column: 11, scope: !5712)
!5721 = !DILocation(line: 2493, column: 12, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5640, file: !242, line: 2493, column: 11)
!5723 = !DILocation(line: 2493, column: 40, scope: !5722)
!5724 = !DILocation(line: 2493, column: 33, scope: !5722)
!5725 = !DILocation(line: 2493, column: 60, scope: !5722)
!5726 = !DILocation(line: 2493, column: 52, scope: !5722)
!5727 = !DILocation(line: 2493, column: 71, scope: !5722)
!5728 = !DILocation(line: 2494, column: 11, scope: !5722)
!5729 = !DILocation(line: 2494, column: 14, scope: !5722)
!5730 = !DILocation(line: 2494, column: 20, scope: !5722)
!5731 = !DILocation(line: 2493, column: 11, scope: !5640)
!5732 = !DILocation(line: 2496, column: 21, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5722, file: !242, line: 2495, column: 9)
!5734 = !DILocation(line: 2497, column: 14, scope: !5733)
!5735 = !DILocation(line: 2498, column: 18, scope: !5733)
!5736 = !DILocation(line: 2498, column: 43, scope: !5733)
!5737 = !DILocation(line: 2496, column: 11, scope: !5733)
!5738 = !DILocation(line: 2499, column: 34, scope: !5733)
!5739 = !DILocation(line: 2499, column: 49, scope: !5733)
!5740 = !DILocation(line: 2499, column: 11, scope: !5733)
!5741 = !DILocation(line: 2500, column: 11, scope: !5733)
!5742 = !DILocation(line: 2503, column: 11, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5640, file: !242, line: 2503, column: 11)
!5744 = !DILocation(line: 2503, column: 14, scope: !5743)
!5745 = !DILocation(line: 2503, column: 22, scope: !5743)
!5746 = !DILocation(line: 2503, column: 26, scope: !5743)
!5747 = !DILocation(line: 2503, column: 11, scope: !5640)
!5748 = !DILocation(line: 2505, column: 19, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5743, file: !242, line: 2504, column: 9)
!5750 = !DILocation(line: 2505, column: 11, scope: !5749)
!5751 = !DILocation(line: 2506, column: 25, scope: !5749)
!5752 = !DILocation(line: 2506, column: 35, scope: !5749)
!5753 = !DILocation(line: 2506, column: 45, scope: !5749)
!5754 = !DILocation(line: 2506, column: 11, scope: !5749)
!5755 = !DILocation(line: 2507, column: 9, scope: !5749)
!5756 = !DILocation(line: 2508, column: 15, scope: !5640)
!5757 = !DILocation(line: 2509, column: 5, scope: !5640)
!5758 = !DILocation(line: 2515, column: 20, scope: !4860)
!5759 = !DILocation(line: 2515, column: 23, scope: !4860)
!5760 = !DILocation(line: 2515, column: 34, scope: !4860)
!5761 = !DILocation(line: 2515, column: 37, scope: !4860)
!5762 = !DILocation(line: 2515, column: 44, scope: !4860)
!5763 = !DILocation(line: 2515, column: 54, scope: !4860)
!5764 = !DILocation(line: 2515, column: 17, scope: !4860)
!5765 = !DILocation(line: 2517, column: 6, scope: !4860)
!5766 = !DILocation(line: 2518, column: 9, scope: !4860)
!5767 = !DILocation(line: 2518, column: 12, scope: !4860)
!5768 = !DILocation(line: 2519, column: 11, scope: !4860)
!5769 = !DILocation(line: 2518, column: 6, scope: !4860)
!5770 = !DILocation(line: 2516, column: 23, scope: !4860)
!5771 = !DILocation(line: 2522, column: 14, scope: !4860)
!5772 = !DILocation(line: 2528, column: 35, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2528, column: 7)
!5774 = !DILocation(line: 2528, column: 45, scope: !5773)
!5775 = !DILocation(line: 2528, column: 55, scope: !5773)
!5776 = !DILocation(line: 2528, column: 65, scope: !5773)
!5777 = !DILocation(line: 2528, column: 74, scope: !5773)
!5778 = !DILocation(line: 2528, column: 9, scope: !5773)
!5779 = !DILocation(line: 2528, column: 7, scope: !4860)
!5780 = !DILocation(line: 2529, column: 5, scope: !5773)
!5781 = !DILocation(line: 2531, column: 7, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2531, column: 7)
!5783 = !DILocation(line: 2531, column: 7, scope: !4860)
!5784 = !DILocalVariable(name: "dir", scope: !5785, file: !242, line: 2533, type: !347)
!5785 = distinct !DILexicalBlock(scope: !5782, file: !242, line: 2532, column: 5)
!5786 = !DILocation(line: 2533, column: 24, scope: !5785)
!5787 = !DILocation(line: 2540, column: 33, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5785, file: !242, line: 2540, column: 11)
!5789 = !DILocation(line: 2540, column: 11, scope: !5788)
!5790 = !DILocation(line: 2540, column: 11, scope: !5785)
!5791 = !DILocation(line: 2542, column: 24, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5788, file: !242, line: 2541, column: 9)
!5793 = !DILocation(line: 2543, column: 18, scope: !5792)
!5794 = !DILocation(line: 2542, column: 11, scope: !5792)
!5795 = !DILocation(line: 2544, column: 11, scope: !5792)
!5796 = !DILocation(line: 2549, column: 13, scope: !5785)
!5797 = !DILocation(line: 2549, column: 11, scope: !5785)
!5798 = !DILocation(line: 2550, column: 21, scope: !5785)
!5799 = !DILocation(line: 2550, column: 7, scope: !5785)
!5800 = !DILocation(line: 2550, column: 12, scope: !5785)
!5801 = !DILocation(line: 2550, column: 19, scope: !5785)
!5802 = !{!5803, !2994, i64 0}
!5803 = !{!"dir_list", !2994, i64 0, !3178, i64 8, !3178, i64 16}
!5804 = !DILocation(line: 2551, column: 25, scope: !5785)
!5805 = !DILocation(line: 2551, column: 7, scope: !5785)
!5806 = !DILocation(line: 2551, column: 12, scope: !5785)
!5807 = !DILocation(line: 2551, column: 16, scope: !5785)
!5808 = !{!5803, !3178, i64 8}
!5809 = !DILocation(line: 2552, column: 25, scope: !5785)
!5810 = !DILocation(line: 2552, column: 7, scope: !5785)
!5811 = !DILocation(line: 2552, column: 12, scope: !5785)
!5812 = !DILocation(line: 2552, column: 16, scope: !5785)
!5813 = !{!5803, !3178, i64 16}
!5814 = !DILocation(line: 2554, column: 11, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5785, file: !242, line: 2554, column: 11)
!5816 = !DILocation(line: 2554, column: 19, scope: !5815)
!5817 = !DILocation(line: 2554, column: 23, scope: !5815)
!5818 = !DILocation(line: 2554, column: 11, scope: !5785)
!5819 = !DILocation(line: 2560, column: 22, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5821, file: !242, line: 2560, column: 15)
!5821 = distinct !DILexicalBlock(scope: !5815, file: !242, line: 2555, column: 9)
!5822 = !DILocation(line: 2560, column: 32, scope: !5820)
!5823 = !DILocation(line: 2560, column: 49, scope: !5820)
!5824 = !DILocation(line: 2560, column: 48, scope: !5820)
!5825 = !DILocation(line: 2560, column: 46, scope: !5820)
!5826 = !DILocation(line: 2560, column: 15, scope: !5820)
!5827 = !DILocation(line: 2560, column: 70, scope: !5820)
!5828 = !DILocation(line: 2560, column: 15, scope: !5821)
!5829 = !DILocation(line: 2562, column: 25, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5820, file: !242, line: 2561, column: 13)
!5831 = !DILocation(line: 2562, column: 32, scope: !5830)
!5832 = !DILocation(line: 2563, column: 22, scope: !5830)
!5833 = !DILocation(line: 2562, column: 15, scope: !5830)
!5834 = !DILocation(line: 2564, column: 15, scope: !5830)
!5835 = !DILocation(line: 2571, column: 22, scope: !5836)
!5836 = distinct !DILexicalBlock(scope: !5821, file: !242, line: 2571, column: 15)
!5837 = !DILocation(line: 2571, column: 15, scope: !5836)
!5838 = !DILocation(line: 2571, column: 41, scope: !5836)
!5839 = !DILocation(line: 2571, column: 15, scope: !5821)
!5840 = !DILocation(line: 2573, column: 25, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5836, file: !242, line: 2572, column: 13)
!5842 = !DILocation(line: 2573, column: 32, scope: !5841)
!5843 = !DILocation(line: 2573, column: 53, scope: !5841)
!5844 = !DILocation(line: 2573, column: 15, scope: !5841)
!5845 = !DILocation(line: 2574, column: 15, scope: !5841)
!5846 = !DILocation(line: 2576, column: 28, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5836, file: !242, line: 2576, column: 20)
!5848 = !DILocation(line: 2576, column: 36, scope: !5847)
!5849 = !DILocation(line: 2576, column: 47, scope: !5847)
!5850 = !DILocation(line: 2576, column: 20, scope: !5836)
!5851 = !DILocation(line: 2580, column: 33, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5847, file: !242, line: 2577, column: 13)
!5853 = !DILocation(line: 2580, column: 24, scope: !5852)
!5854 = !DILocation(line: 2581, column: 32, scope: !5852)
!5855 = !DILocation(line: 2583, column: 27, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5852, file: !242, line: 2583, column: 19)
!5857 = !DILocation(line: 2583, column: 37, scope: !5856)
!5858 = !DILocation(line: 2583, column: 46, scope: !5856)
!5859 = !DILocation(line: 2583, column: 19, scope: !5856)
!5860 = !DILocation(line: 2583, column: 57, scope: !5856)
!5861 = !DILocation(line: 2583, column: 19, scope: !5852)
!5862 = !DILocation(line: 2585, column: 29, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5856, file: !242, line: 2584, column: 17)
!5864 = !DILocation(line: 2585, column: 36, scope: !5863)
!5865 = !DILocation(line: 2586, column: 26, scope: !5863)
!5866 = !DILocation(line: 2585, column: 19, scope: !5863)
!5867 = !DILocation(line: 2587, column: 19, scope: !5863)
!5868 = !DILocation(line: 2589, column: 13, scope: !5852)
!5869 = !DILocation(line: 2595, column: 17, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5821, file: !242, line: 2595, column: 15)
!5871 = !DILocation(line: 2595, column: 16, scope: !5870)
!5872 = !DILocation(line: 2595, column: 15, scope: !5821)
!5873 = !DILocation(line: 2597, column: 32, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5870, file: !242, line: 2596, column: 13)
!5875 = !DILocation(line: 2597, column: 49, scope: !5874)
!5876 = !DILocation(line: 2597, column: 64, scope: !5874)
!5877 = !DILocation(line: 2597, column: 15, scope: !5874)
!5878 = !DILocation(line: 2598, column: 16, scope: !5874)
!5879 = !DILocation(line: 2598, column: 55, scope: !5874)
!5880 = !DILocation(line: 2599, column: 13, scope: !5874)
!5881 = !DILocation(line: 2601, column: 15, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5821, file: !242, line: 2601, column: 15)
!5883 = !DILocation(line: 2601, column: 18, scope: !5882)
!5884 = !DILocation(line: 2601, column: 15, scope: !5821)
!5885 = !DILocation(line: 2603, column: 19, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !242, line: 2603, column: 19)
!5887 = distinct !DILexicalBlock(scope: !5882, file: !242, line: 2602, column: 13)
!5888 = !DILocation(line: 2603, column: 22, scope: !5886)
!5889 = !DILocation(line: 2603, column: 19, scope: !5887)
!5890 = !DILocation(line: 2604, column: 25, scope: !5886)
!5891 = !DILocation(line: 2604, column: 54, scope: !5886)
!5892 = !DILocation(line: 2604, column: 17, scope: !5886)
!5893 = !DILocation(line: 2606, column: 31, scope: !5886)
!5894 = !DILocation(line: 2606, column: 41, scope: !5886)
!5895 = !DILocation(line: 2606, column: 17, scope: !5886)
!5896 = !DILocation(line: 2607, column: 13, scope: !5887)
!5897 = !DILocation(line: 2608, column: 9, scope: !5821)
!5898 = !DILocation(line: 2611, column: 31, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5815, file: !242, line: 2610, column: 9)
!5900 = !DILocation(line: 2616, column: 15, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5899, file: !242, line: 2616, column: 15)
!5902 = !DILocation(line: 2616, column: 18, scope: !5901)
!5903 = !DILocation(line: 2616, column: 39, scope: !5901)
!5904 = !DILocation(line: 2616, column: 42, scope: !5901)
!5905 = !DILocation(line: 2616, column: 45, scope: !5901)
!5906 = !DILocation(line: 2616, column: 15, scope: !5899)
!5907 = !DILocation(line: 2617, column: 42, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5901, file: !242, line: 2617, column: 17)
!5909 = !DILocation(line: 2617, column: 52, scope: !5908)
!5910 = !DILocation(line: 2617, column: 55, scope: !5908)
!5911 = !DILocation(line: 2618, column: 49, scope: !5908)
!5912 = !DILocation(line: 2617, column: 19, scope: !5908)
!5913 = !DILocation(line: 2617, column: 17, scope: !5901)
!5914 = !DILocation(line: 2620, column: 21, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5916, file: !242, line: 2620, column: 21)
!5916 = distinct !DILexicalBlock(scope: !5908, file: !242, line: 2619, column: 15)
!5917 = !DILocation(line: 2620, column: 24, scope: !5915)
!5918 = !DILocation(line: 2620, column: 21, scope: !5916)
!5919 = !DILocation(line: 2621, column: 19, scope: !5915)
!5920 = !DILocation(line: 2622, column: 15, scope: !5916)
!5921 = !DILocation(line: 2618, column: 50, scope: !5908)
!5922 = !DILocation(line: 2626, column: 11, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5785, file: !242, line: 2626, column: 11)
!5924 = !DILocation(line: 2626, column: 14, scope: !5923)
!5925 = !DILocation(line: 2626, column: 30, scope: !5923)
!5926 = !DILocation(line: 2626, column: 33, scope: !5923)
!5927 = !DILocation(line: 2626, column: 40, scope: !5923)
!5928 = !DILocation(line: 2626, column: 43, scope: !5923)
!5929 = !DILocation(line: 2626, column: 51, scope: !5923)
!5930 = !DILocation(line: 2626, column: 68, scope: !5923)
!5931 = !DILocation(line: 2626, column: 58, scope: !5923)
!5932 = !DILocation(line: 2626, column: 11, scope: !5785)
!5933 = !DILocation(line: 2630, column: 9, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5923, file: !242, line: 2627, column: 9)
!5935 = !DILocation(line: 2637, column: 34, scope: !5936)
!5936 = distinct !DILexicalBlock(scope: !5923, file: !242, line: 2632, column: 9)
!5937 = !DILocation(line: 2637, column: 44, scope: !5936)
!5938 = !DILocation(line: 2637, column: 54, scope: !5936)
!5939 = !DILocation(line: 2637, column: 72, scope: !5936)
!5940 = !DILocation(line: 2637, column: 77, scope: !5936)
!5941 = !DILocation(line: 2638, column: 34, scope: !5936)
!5942 = !DILocation(line: 2639, column: 34, scope: !5936)
!5943 = !DILocation(line: 2637, column: 24, scope: !5936)
!5944 = !DILocation(line: 2637, column: 22, scope: !5936)
!5945 = !DILocation(line: 2641, column: 5, scope: !5785)
!5946 = !DILocation(line: 2642, column: 12, scope: !5947)
!5947 = distinct !DILexicalBlock(scope: !5782, file: !242, line: 2642, column: 12)
!5948 = !DILocation(line: 2642, column: 15, scope: !5947)
!5949 = !DILocation(line: 2642, column: 12, scope: !5782)
!5950 = !DILocation(line: 2644, column: 23, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5947, file: !242, line: 2643, column: 5)
!5952 = !DILocation(line: 2645, column: 12, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5951, file: !242, line: 2645, column: 11)
!5954 = !DILocation(line: 2645, column: 11, scope: !5953)
!5955 = !DILocation(line: 2645, column: 21, scope: !5953)
!5956 = !DILocation(line: 2645, column: 11, scope: !5951)
!5957 = !DILocalVariable(name: "dot_sb", scope: !5958, file: !242, line: 2648, type: !314)
!5958 = distinct !DILexicalBlock(scope: !5953, file: !242, line: 2646, column: 9)
!5959 = !DILocation(line: 2648, column: 23, scope: !5958)
!5960 = !DILocalVariable(name: "dst_parent_sb", scope: !5958, file: !242, line: 2649, type: !314)
!5961 = !DILocation(line: 2649, column: 23, scope: !5958)
!5962 = !DILocalVariable(name: "dst_parent", scope: !5958, file: !242, line: 2650, type: !7)
!5963 = !DILocation(line: 2650, column: 17, scope: !5958)
!5964 = !DILocalVariable(name: "in_current_dir", scope: !5958, file: !242, line: 2651, type: !117)
!5965 = !DILocation(line: 2651, column: 16, scope: !5958)
!5966 = !DILocation(line: 2653, column: 34, scope: !5958)
!5967 = !DILocation(line: 2653, column: 24, scope: !5958)
!5968 = !DILocation(line: 2653, column: 22, scope: !5958)
!5969 = !DILocation(line: 2655, column: 29, scope: !5958)
!5970 = !DILocation(line: 2659, column: 29, scope: !5958)
!5971 = !DILocation(line: 2659, column: 32, scope: !5958)
!5972 = !DILocation(line: 2659, column: 52, scope: !5958)
!5973 = !DILocation(line: 2660, column: 29, scope: !5958)
!5974 = !DILocation(line: 2660, column: 38, scope: !5958)
!5975 = !DILocation(line: 2660, column: 32, scope: !5958)
!5976 = !DILocation(line: 2660, column: 66, scope: !5958)
!5977 = !DILocation(line: 2661, column: 29, scope: !5958)
!5978 = !DILocation(line: 2661, column: 32, scope: !5958)
!5979 = !DILocation(line: 0, scope: !5958)
!5980 = !DILocation(line: 2655, column: 26, scope: !5958)
!5981 = !DILocation(line: 2662, column: 17, scope: !5958)
!5982 = !DILocation(line: 2662, column: 11, scope: !5958)
!5983 = !DILocation(line: 2664, column: 17, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5958, file: !242, line: 2664, column: 15)
!5985 = !DILocation(line: 2664, column: 15, scope: !5958)
!5986 = !DILocation(line: 2667, column: 12, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5984, file: !242, line: 2665, column: 13)
!5988 = !DILocation(line: 2668, column: 22, scope: !5987)
!5989 = !DILocation(line: 2666, column: 15, scope: !5987)
!5990 = !DILocation(line: 2669, column: 15, scope: !5987)
!5991 = !DILocation(line: 2671, column: 9, scope: !5958)
!5992 = !DILocalVariable(name: "err", scope: !5951, file: !242, line: 2673, type: !5)
!5993 = !DILocation(line: 2673, column: 11, scope: !5951)
!5994 = !DILocation(line: 2673, column: 34, scope: !5951)
!5995 = !DILocation(line: 2673, column: 54, scope: !5951)
!5996 = !DILocation(line: 2674, column: 34, scope: !5951)
!5997 = !DILocation(line: 2674, column: 37, scope: !5951)
!5998 = !DILocation(line: 2673, column: 17, scope: !5951)
!5999 = !DILocation(line: 2675, column: 15, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5951, file: !242, line: 2675, column: 11)
!6001 = !DILocation(line: 2675, column: 13, scope: !6000)
!6002 = !DILocation(line: 2675, column: 11, scope: !5951)
!6003 = !DILocation(line: 2677, column: 21, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !6000, file: !242, line: 2676, column: 9)
!6005 = !DILocation(line: 2677, column: 26, scope: !6004)
!6006 = !DILocation(line: 2678, column: 18, scope: !6004)
!6007 = !DILocation(line: 2678, column: 43, scope: !6004)
!6008 = !DILocation(line: 2677, column: 11, scope: !6004)
!6009 = !DILocation(line: 2679, column: 11, scope: !6004)
!6010 = !DILocation(line: 2681, column: 5, scope: !5951)
!6011 = !DILocation(line: 2696, column: 12, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !5947, file: !242, line: 2696, column: 12)
!6013 = !DILocation(line: 2696, column: 15, scope: !6012)
!6014 = !DILocation(line: 2696, column: 12, scope: !5947)
!6015 = !DILocalVariable(name: "replace", scope: !6016, file: !242, line: 2700, type: !117)
!6016 = distinct !DILexicalBlock(scope: !6012, file: !242, line: 2699, column: 5)
!6017 = !DILocation(line: 2700, column: 12, scope: !6016)
!6018 = !DILocation(line: 2700, column: 23, scope: !6016)
!6019 = !DILocation(line: 2700, column: 26, scope: !6016)
!6020 = !DILocation(line: 2701, column: 23, scope: !6016)
!6021 = !DILocation(line: 2701, column: 26, scope: !6016)
!6022 = !DILocation(line: 2701, column: 29, scope: !6016)
!6023 = !DILocation(line: 2701, column: 41, scope: !6016)
!6024 = !DILocation(line: 2702, column: 31, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6016, file: !242, line: 2702, column: 11)
!6026 = !DILocation(line: 2702, column: 41, scope: !6025)
!6027 = !DILocation(line: 2702, column: 51, scope: !6025)
!6028 = !DILocation(line: 2702, column: 67, scope: !6025)
!6029 = !DILocation(line: 2702, column: 13, scope: !6025)
!6030 = !DILocation(line: 2702, column: 11, scope: !6016)
!6031 = !DILocation(line: 2703, column: 9, scope: !6025)
!6032 = !DILocation(line: 2704, column: 5, scope: !6016)
!6033 = !DILocation(line: 2705, column: 12, scope: !6034)
!6034 = distinct !DILexicalBlock(scope: !6012, file: !242, line: 2705, column: 12)
!6035 = !DILocation(line: 2706, column: 12, scope: !6034)
!6036 = !DILocation(line: 2706, column: 16, scope: !6034)
!6037 = !DILocation(line: 2706, column: 19, scope: !6034)
!6038 = !DILocation(line: 2706, column: 35, scope: !6034)
!6039 = !DILocation(line: 2706, column: 39, scope: !6034)
!6040 = !DILocation(line: 2705, column: 12, scope: !6012)
!6041 = !DILocation(line: 2708, column: 25, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6034, file: !242, line: 2707, column: 5)
!6043 = !DILocation(line: 2718, column: 23, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6042, file: !242, line: 2718, column: 11)
!6045 = !DILocation(line: 2718, column: 33, scope: !6044)
!6046 = !DILocation(line: 2718, column: 43, scope: !6044)
!6047 = !DILocation(line: 2718, column: 46, scope: !6044)
!6048 = !DILocation(line: 2718, column: 60, scope: !6044)
!6049 = !DILocation(line: 2719, column: 23, scope: !6044)
!6050 = !DILocation(line: 2718, column: 13, scope: !6044)
!6051 = !DILocation(line: 2718, column: 11, scope: !6042)
!6052 = !DILocation(line: 2720, column: 9, scope: !6044)
!6053 = !DILocation(line: 2721, column: 5, scope: !6042)
!6054 = !DILocation(line: 2722, column: 12, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6034, file: !242, line: 2722, column: 12)
!6056 = !DILocation(line: 2722, column: 12, scope: !6034)
!6057 = !DILocation(line: 2728, column: 18, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6059, file: !242, line: 2728, column: 11)
!6059 = distinct !DILexicalBlock(scope: !6055, file: !242, line: 2723, column: 5)
!6060 = !DILocation(line: 2728, column: 28, scope: !6058)
!6061 = !DILocation(line: 2728, column: 40, scope: !6058)
!6062 = !DILocation(line: 2728, column: 39, scope: !6058)
!6063 = !DILocation(line: 2728, column: 37, scope: !6058)
!6064 = !DILocation(line: 2728, column: 11, scope: !6058)
!6065 = !DILocation(line: 2728, column: 64, scope: !6058)
!6066 = !DILocation(line: 2728, column: 11, scope: !6059)
!6067 = !DILocation(line: 2729, column: 21, scope: !6068)
!6068 = distinct !DILexicalBlock(scope: !6058, file: !242, line: 2729, column: 13)
!6069 = !DILocation(line: 2729, column: 31, scope: !6068)
!6070 = !DILocation(line: 2729, column: 40, scope: !6068)
!6071 = !DILocation(line: 2729, column: 54, scope: !6068)
!6072 = !DILocation(line: 2729, column: 53, scope: !6068)
!6073 = !DILocation(line: 2729, column: 51, scope: !6068)
!6074 = !DILocation(line: 2729, column: 13, scope: !6068)
!6075 = !DILocation(line: 2729, column: 75, scope: !6068)
!6076 = !DILocation(line: 2729, column: 13, scope: !6058)
!6077 = !DILocation(line: 2731, column: 23, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6068, file: !242, line: 2730, column: 11)
!6079 = !DILocation(line: 2731, column: 30, scope: !6078)
!6080 = !DILocation(line: 2731, column: 58, scope: !6078)
!6081 = !DILocation(line: 2731, column: 13, scope: !6078)
!6082 = !DILocation(line: 2732, column: 13, scope: !6078)
!6083 = !DILocation(line: 2729, column: 78, scope: !6068)
!6084 = !DILocation(line: 2734, column: 5, scope: !6059)
!6085 = !DILocation(line: 2735, column: 12, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6055, file: !242, line: 2735, column: 12)
!6087 = !DILocation(line: 2735, column: 31, scope: !6086)
!6088 = !DILocation(line: 2735, column: 34, scope: !6086)
!6089 = !DILocation(line: 2735, column: 53, scope: !6086)
!6090 = !DILocation(line: 2735, column: 56, scope: !6086)
!6091 = !DILocation(line: 2735, column: 12, scope: !6055)
!6092 = !DILocation(line: 2737, column: 18, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !242, line: 2737, column: 11)
!6094 = distinct !DILexicalBlock(scope: !6086, file: !242, line: 2736, column: 5)
!6095 = !DILocation(line: 2737, column: 28, scope: !6093)
!6096 = !DILocation(line: 2737, column: 40, scope: !6093)
!6097 = !DILocation(line: 2737, column: 39, scope: !6093)
!6098 = !DILocation(line: 2737, column: 37, scope: !6093)
!6099 = !DILocation(line: 2737, column: 68, scope: !6093)
!6100 = !{!3177, !3178, i64 40}
!6101 = !DILocation(line: 2737, column: 11, scope: !6093)
!6102 = !DILocation(line: 2738, column: 11, scope: !6093)
!6103 = !DILocation(line: 2737, column: 11, scope: !6094)
!6104 = !DILocation(line: 2740, column: 21, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6093, file: !242, line: 2739, column: 9)
!6106 = !DILocation(line: 2740, column: 28, scope: !6105)
!6107 = !DILocation(line: 2741, column: 18, scope: !6105)
!6108 = !DILocation(line: 2740, column: 11, scope: !6105)
!6109 = !DILocation(line: 2742, column: 11, scope: !6105)
!6110 = !DILocation(line: 2744, column: 5, scope: !6094)
!6111 = !DILocation(line: 2745, column: 12, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6086, file: !242, line: 2745, column: 12)
!6113 = !DILocation(line: 2745, column: 12, scope: !6086)
!6114 = !DILocalVariable(name: "src_link_val", scope: !6115, file: !242, line: 2747, type: !7)
!6115 = distinct !DILexicalBlock(scope: !6112, file: !242, line: 2746, column: 5)
!6116 = !DILocation(line: 2747, column: 13, scope: !6115)
!6117 = !DILocation(line: 2747, column: 49, scope: !6115)
!6118 = !DILocation(line: 2747, column: 66, scope: !6115)
!6119 = !DILocation(line: 2747, column: 28, scope: !6115)
!6120 = !DILocation(line: 2748, column: 23, scope: !6115)
!6121 = !DILocation(line: 2749, column: 11, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6115, file: !242, line: 2749, column: 11)
!6123 = !DILocation(line: 2749, column: 24, scope: !6122)
!6124 = !DILocation(line: 2749, column: 11, scope: !6115)
!6125 = !DILocation(line: 2751, column: 21, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !242, line: 2750, column: 9)
!6127 = !DILocation(line: 2751, column: 28, scope: !6126)
!6128 = !DILocation(line: 2752, column: 18, scope: !6126)
!6129 = !DILocation(line: 2751, column: 11, scope: !6126)
!6130 = !DILocation(line: 2753, column: 11, scope: !6126)
!6131 = !DILocalVariable(name: "symlink_err", scope: !6115, file: !242, line: 2756, type: !5)
!6132 = !DILocation(line: 2756, column: 11, scope: !6115)
!6133 = !DILocation(line: 2756, column: 42, scope: !6115)
!6134 = !DILocation(line: 2756, column: 66, scope: !6115)
!6135 = !DILocation(line: 2757, column: 42, scope: !6115)
!6136 = !DILocation(line: 2757, column: 45, scope: !6115)
!6137 = !DILocation(line: 2756, column: 25, scope: !6115)
!6138 = !DILocation(line: 2758, column: 15, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6115, file: !242, line: 2758, column: 11)
!6140 = !DILocation(line: 2758, column: 13, scope: !6139)
!6141 = !DILocation(line: 2758, column: 27, scope: !6139)
!6142 = !DILocation(line: 2758, column: 30, scope: !6139)
!6143 = !DILocation(line: 2758, column: 33, scope: !6139)
!6144 = !DILocation(line: 2758, column: 40, scope: !6139)
!6145 = !DILocation(line: 2758, column: 44, scope: !6139)
!6146 = !DILocation(line: 2758, column: 52, scope: !6139)
!6147 = !DILocation(line: 2758, column: 55, scope: !6139)
!6148 = !DILocation(line: 2759, column: 11, scope: !6139)
!6149 = !DILocation(line: 2759, column: 21, scope: !6139)
!6150 = !DILocation(line: 2759, column: 40, scope: !6139)
!6151 = !DILocation(line: 2759, column: 32, scope: !6139)
!6152 = !DILocation(line: 2759, column: 29, scope: !6139)
!6153 = !DILocation(line: 2758, column: 11, scope: !6115)
!6154 = !DILocalVariable(name: "dest_link_val", scope: !6155, file: !242, line: 2765, type: !7)
!6155 = distinct !DILexicalBlock(scope: !6139, file: !242, line: 2760, column: 9)
!6156 = !DILocation(line: 2765, column: 17, scope: !6155)
!6157 = !DILocation(line: 2766, column: 34, scope: !6155)
!6158 = !DILocation(line: 2766, column: 51, scope: !6155)
!6159 = !DILocation(line: 2766, column: 13, scope: !6155)
!6160 = !DILocation(line: 2767, column: 15, scope: !6161)
!6161 = distinct !DILexicalBlock(scope: !6155, file: !242, line: 2767, column: 15)
!6162 = !DILocation(line: 2767, column: 15, scope: !6155)
!6163 = !DILocation(line: 2769, column: 19, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6165, file: !242, line: 2769, column: 19)
!6165 = distinct !DILexicalBlock(scope: !6161, file: !242, line: 2768, column: 13)
!6166 = !DILocation(line: 2769, column: 19, scope: !6165)
!6167 = !DILocation(line: 2770, column: 29, scope: !6164)
!6168 = !DILocation(line: 2770, column: 17, scope: !6164)
!6169 = !DILocation(line: 2771, column: 21, scope: !6165)
!6170 = !DILocation(line: 2771, column: 15, scope: !6165)
!6171 = !DILocation(line: 2772, column: 13, scope: !6165)
!6172 = !DILocation(line: 2773, column: 9, scope: !6155)
!6173 = !DILocation(line: 2774, column: 13, scope: !6115)
!6174 = !DILocation(line: 2774, column: 7, scope: !6115)
!6175 = !DILocation(line: 2775, column: 15, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6115, file: !242, line: 2775, column: 11)
!6177 = !DILocation(line: 2775, column: 13, scope: !6176)
!6178 = !DILocation(line: 2775, column: 11, scope: !6115)
!6179 = !DILocation(line: 2777, column: 21, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6176, file: !242, line: 2776, column: 9)
!6181 = !DILocation(line: 2777, column: 34, scope: !6180)
!6182 = !DILocation(line: 2778, column: 18, scope: !6180)
!6183 = !DILocation(line: 2777, column: 11, scope: !6180)
!6184 = !DILocation(line: 2779, column: 11, scope: !6180)
!6185 = !DILocation(line: 2782, column: 11, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6115, file: !242, line: 2782, column: 11)
!6187 = !DILocation(line: 2782, column: 14, scope: !6186)
!6188 = !DILocation(line: 2782, column: 11, scope: !6115)
!6189 = !DILocation(line: 2783, column: 9, scope: !6186)
!6190 = !DILocation(line: 2785, column: 11, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6115, file: !242, line: 2785, column: 11)
!6192 = !DILocation(line: 2785, column: 14, scope: !6191)
!6193 = !DILocation(line: 2785, column: 11, scope: !6115)
!6194 = !DILocation(line: 2790, column: 26, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6196, file: !242, line: 2789, column: 15)
!6196 = distinct !DILexicalBlock(scope: !6191, file: !242, line: 2786, column: 9)
!6197 = !DILocation(line: 2790, column: 43, scope: !6195)
!6198 = !{!3177, !2981, i64 28}
!6199 = !DILocation(line: 2790, column: 58, scope: !6195)
!6200 = !{!3177, !2981, i64 32}
!6201 = !DILocation(line: 2790, column: 18, scope: !6195)
!6202 = !DILocation(line: 2790, column: 66, scope: !6195)
!6203 = !DILocation(line: 2791, column: 15, scope: !6195)
!6204 = !DILocation(line: 2791, column: 38, scope: !6195)
!6205 = !DILocation(line: 2791, column: 20, scope: !6195)
!6206 = !DILocation(line: 2789, column: 15, scope: !6196)
!6207 = !DILocation(line: 2793, column: 25, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6195, file: !242, line: 2792, column: 13)
!6209 = !DILocation(line: 2793, column: 32, scope: !6208)
!6210 = !DILocation(line: 2794, column: 22, scope: !6208)
!6211 = !DILocation(line: 2793, column: 15, scope: !6208)
!6212 = !DILocation(line: 2795, column: 19, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6208, file: !242, line: 2795, column: 19)
!6214 = !DILocation(line: 2795, column: 22, scope: !6213)
!6215 = !DILocation(line: 2795, column: 19, scope: !6208)
!6216 = !DILocation(line: 2796, column: 17, scope: !6213)
!6217 = !DILocation(line: 2797, column: 13, scope: !6208)
!6218 = !DILocation(line: 2805, column: 9, scope: !6196)
!6219 = !DILocation(line: 2806, column: 5, scope: !6115)
!6220 = !DILocation(line: 2809, column: 20, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6112, file: !242, line: 2808, column: 5)
!6222 = !DILocation(line: 2809, column: 51, scope: !6221)
!6223 = !DILocation(line: 2809, column: 7, scope: !6221)
!6224 = !DILocation(line: 2810, column: 7, scope: !6221)
!6225 = !DILocation(line: 2815, column: 8, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2815, column: 7)
!6227 = !DILocation(line: 2815, column: 16, scope: !6226)
!6228 = !DILocation(line: 2815, column: 20, scope: !6226)
!6229 = !DILocation(line: 2815, column: 23, scope: !6226)
!6230 = !DILocation(line: 2815, column: 39, scope: !6226)
!6231 = !DILocation(line: 2815, column: 43, scope: !6226)
!6232 = !DILocation(line: 2816, column: 7, scope: !6226)
!6233 = !DILocation(line: 2816, column: 11, scope: !6226)
!6234 = !DILocation(line: 2816, column: 14, scope: !6226)
!6235 = !DILocation(line: 2816, column: 35, scope: !6226)
!6236 = !DILocation(line: 2816, column: 38, scope: !6226)
!6237 = !DILocation(line: 2816, column: 41, scope: !6226)
!6238 = !DILocation(line: 2815, column: 7, scope: !4860)
!6239 = !DILocation(line: 2818, column: 36, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6241, file: !242, line: 2818, column: 11)
!6241 = distinct !DILexicalBlock(scope: !6226, file: !242, line: 2817, column: 5)
!6242 = !DILocation(line: 2818, column: 46, scope: !6240)
!6243 = !DILocation(line: 2818, column: 49, scope: !6240)
!6244 = !DILocation(line: 2819, column: 43, scope: !6240)
!6245 = !DILocation(line: 2818, column: 13, scope: !6240)
!6246 = !DILocation(line: 2818, column: 11, scope: !6241)
!6247 = !DILocation(line: 2821, column: 16, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !242, line: 2821, column: 16)
!6249 = distinct !DILexicalBlock(scope: !6240, file: !242, line: 2820, column: 9)
!6250 = !DILocation(line: 2821, column: 19, scope: !6248)
!6251 = !DILocation(line: 2821, column: 16, scope: !6249)
!6252 = !DILocation(line: 2822, column: 14, scope: !6248)
!6253 = !DILocation(line: 2823, column: 9, scope: !6249)
!6254 = !DILocation(line: 2824, column: 5, scope: !6241)
!6255 = !DILocation(line: 2826, column: 7, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2826, column: 7)
!6257 = !DILocation(line: 2826, column: 24, scope: !6256)
!6258 = !DILocation(line: 2826, column: 27, scope: !6256)
!6259 = !DILocation(line: 2826, column: 30, scope: !6256)
!6260 = !DILocation(line: 2826, column: 7, scope: !4860)
!6261 = !DILocalVariable(name: "sb", scope: !6262, file: !242, line: 2830, type: !314)
!6262 = distinct !DILexicalBlock(scope: !6256, file: !242, line: 2827, column: 5)
!6263 = !DILocation(line: 2830, column: 19, scope: !6262)
!6264 = !DILocation(line: 2831, column: 18, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6262, file: !242, line: 2831, column: 11)
!6266 = !DILocation(line: 2831, column: 11, scope: !6265)
!6267 = !DILocation(line: 2831, column: 33, scope: !6265)
!6268 = !DILocation(line: 2831, column: 11, scope: !6262)
!6269 = !DILocation(line: 2832, column: 22, scope: !6265)
!6270 = !DILocation(line: 2832, column: 25, scope: !6265)
!6271 = !DILocation(line: 2832, column: 36, scope: !6265)
!6272 = !DILocation(line: 2832, column: 9, scope: !6265)
!6273 = !DILocation(line: 2833, column: 5, scope: !6262)
!6274 = !DILocation(line: 2837, column: 7, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2837, column: 7)
!6276 = !DILocation(line: 2837, column: 10, scope: !6275)
!6277 = !DILocation(line: 2837, column: 20, scope: !6275)
!6278 = !DILocation(line: 2837, column: 25, scope: !6275)
!6279 = !DILocation(line: 2837, column: 7, scope: !4860)
!6280 = !DILocation(line: 2840, column: 12, scope: !6275)
!6281 = !DILocation(line: 2840, column: 5, scope: !6275)
!6282 = !DILocation(line: 2842, column: 7, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2842, column: 7)
!6284 = !DILocation(line: 2842, column: 7, scope: !4860)
!6285 = !DILocation(line: 2843, column: 12, scope: !6283)
!6286 = !DILocation(line: 2843, column: 5, scope: !6283)
!6287 = !DILocation(line: 2857, column: 7, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2857, column: 7)
!6289 = !DILocation(line: 2857, column: 10, scope: !6288)
!6290 = !DILocation(line: 2857, column: 7, scope: !4860)
!6291 = !DILocalVariable(name: "timespec", scope: !6292, file: !242, line: 2859, type: !354)
!6292 = distinct !DILexicalBlock(scope: !6288, file: !242, line: 2858, column: 5)
!6293 = !DILocation(line: 2859, column: 23, scope: !6292)
!6294 = !DILocation(line: 2860, column: 7, scope: !6292)
!6295 = !DILocation(line: 2860, column: 21, scope: !6292)
!6296 = !{i64 0, i64 8, !3837, i64 8, i64 8, !3837}
!6297 = !DILocation(line: 2861, column: 7, scope: !6292)
!6298 = !DILocation(line: 2861, column: 21, scope: !6292)
!6299 = !DILocation(line: 2863, column: 12, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6292, file: !242, line: 2863, column: 11)
!6301 = !DILocation(line: 2864, column: 31, scope: !6300)
!6302 = !DILocation(line: 2864, column: 41, scope: !6300)
!6303 = !DILocation(line: 2864, column: 14, scope: !6300)
!6304 = !DILocation(line: 2865, column: 23, scope: !6300)
!6305 = !DILocation(line: 2865, column: 33, scope: !6300)
!6306 = !DILocation(line: 2865, column: 14, scope: !6300)
!6307 = !DILocation(line: 2866, column: 11, scope: !6300)
!6308 = !DILocation(line: 2863, column: 11, scope: !6292)
!6309 = !DILocation(line: 2868, column: 21, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6300, file: !242, line: 2867, column: 9)
!6311 = !DILocation(line: 2868, column: 28, scope: !6310)
!6312 = !DILocation(line: 2868, column: 58, scope: !6310)
!6313 = !DILocation(line: 2868, column: 11, scope: !6310)
!6314 = !DILocation(line: 2869, column: 15, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !242, line: 2869, column: 15)
!6316 = !DILocation(line: 2869, column: 18, scope: !6315)
!6317 = !DILocation(line: 2869, column: 15, scope: !6310)
!6318 = !DILocation(line: 2870, column: 13, scope: !6315)
!6319 = !DILocation(line: 2871, column: 9, scope: !6310)
!6320 = !DILocation(line: 2872, column: 5, scope: !6292)
!6321 = !DILocation(line: 2875, column: 8, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2875, column: 7)
!6323 = !DILocation(line: 2875, column: 24, scope: !6322)
!6324 = !DILocation(line: 2875, column: 27, scope: !6322)
!6325 = !DILocation(line: 2875, column: 30, scope: !6322)
!6326 = !DILocation(line: 2876, column: 7, scope: !6322)
!6327 = !DILocation(line: 2876, column: 11, scope: !6322)
!6328 = !DILocation(line: 2876, column: 19, scope: !6322)
!6329 = !DILocation(line: 2876, column: 23, scope: !6322)
!6330 = !DILocation(line: 2875, column: 7, scope: !4860)
!6331 = !DILocation(line: 2878, column: 26, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6322, file: !242, line: 2877, column: 5)
!6333 = !DILocation(line: 2878, column: 29, scope: !6332)
!6334 = !DILocation(line: 2878, column: 52, scope: !6332)
!6335 = !DILocation(line: 2878, column: 15, scope: !6332)
!6336 = !DILocation(line: 2878, column: 7, scope: !6332)
!6337 = !DILocation(line: 2881, column: 11, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6332, file: !242, line: 2879, column: 9)
!6339 = !DILocation(line: 2884, column: 20, scope: !6338)
!6340 = !DILocation(line: 2885, column: 11, scope: !6338)
!6341 = !DILocation(line: 2887, column: 5, scope: !6332)
!6342 = !DILocation(line: 2890, column: 7, scope: !6343)
!6343 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2890, column: 7)
!6344 = !DILocation(line: 2890, column: 10, scope: !6343)
!6345 = !DILocation(line: 2890, column: 25, scope: !6343)
!6346 = !DILocation(line: 2890, column: 41, scope: !6343)
!6347 = !DILocation(line: 2890, column: 55, scope: !6343)
!6348 = !DILocation(line: 2890, column: 69, scope: !6343)
!6349 = !DILocation(line: 2890, column: 30, scope: !6343)
!6350 = !DILocation(line: 2891, column: 7, scope: !6343)
!6351 = !DILocation(line: 2891, column: 10, scope: !6343)
!6352 = !DILocation(line: 2891, column: 13, scope: !6343)
!6353 = !DILocation(line: 2890, column: 7, scope: !4860)
!6354 = !DILocation(line: 2892, column: 5, scope: !6343)
!6355 = !DILocation(line: 2895, column: 7, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2895, column: 7)
!6357 = !DILocation(line: 2895, column: 7, scope: !4860)
!6358 = !DILocation(line: 2896, column: 12, scope: !6356)
!6359 = !DILocation(line: 2896, column: 5, scope: !6356)
!6360 = !DILocation(line: 2898, column: 15, scope: !4860)
!6361 = !DILocation(line: 2898, column: 3, scope: !4860)
!6362 = !DILocation(line: 2900, column: 7, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2900, column: 7)
!6364 = !DILocation(line: 2900, column: 10, scope: !6363)
!6365 = !DILocation(line: 2900, column: 24, scope: !6363)
!6366 = !DILocation(line: 2900, column: 27, scope: !6363)
!6367 = !DILocation(line: 2900, column: 30, scope: !6363)
!6368 = !DILocation(line: 2900, column: 7, scope: !4860)
!6369 = !DILocation(line: 2902, column: 21, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6371, file: !242, line: 2902, column: 11)
!6371 = distinct !DILexicalBlock(scope: !6363, file: !242, line: 2901, column: 5)
!6372 = !DILocation(line: 2902, column: 35, scope: !6370)
!6373 = !DILocation(line: 2902, column: 49, scope: !6370)
!6374 = !DILocation(line: 2902, column: 11, scope: !6370)
!6375 = !DILocation(line: 2902, column: 59, scope: !6370)
!6376 = !DILocation(line: 2903, column: 11, scope: !6370)
!6377 = !DILocation(line: 2903, column: 14, scope: !6370)
!6378 = !DILocation(line: 2903, column: 17, scope: !6370)
!6379 = !DILocation(line: 2902, column: 11, scope: !6371)
!6380 = !DILocation(line: 2904, column: 9, scope: !6370)
!6381 = !DILocation(line: 2905, column: 5, scope: !6371)
!6382 = !DILocation(line: 2906, column: 12, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6363, file: !242, line: 2906, column: 12)
!6384 = !DILocation(line: 2906, column: 15, scope: !6383)
!6385 = !DILocation(line: 2906, column: 12, scope: !6363)
!6386 = !DILocation(line: 2908, column: 20, scope: !6387)
!6387 = distinct !DILexicalBlock(scope: !6388, file: !242, line: 2908, column: 11)
!6388 = distinct !DILexicalBlock(scope: !6383, file: !242, line: 2907, column: 5)
!6389 = !DILocation(line: 2908, column: 34, scope: !6387)
!6390 = !DILocation(line: 2908, column: 37, scope: !6387)
!6391 = !DILocation(line: 2908, column: 11, scope: !6387)
!6392 = !DILocation(line: 2908, column: 43, scope: !6387)
!6393 = !DILocation(line: 2908, column: 11, scope: !6388)
!6394 = !DILocation(line: 2909, column: 9, scope: !6387)
!6395 = !DILocation(line: 2910, column: 5, scope: !6388)
!6396 = !DILocation(line: 2911, column: 12, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6383, file: !242, line: 2911, column: 12)
!6398 = !DILocation(line: 2911, column: 15, scope: !6397)
!6399 = !DILocation(line: 2911, column: 41, scope: !6397)
!6400 = !DILocation(line: 2911, column: 44, scope: !6397)
!6401 = !DILocation(line: 2911, column: 12, scope: !6383)
!6402 = !DILocalVariable(name: "default_permissions", scope: !6403, file: !242, line: 2913, type: !5)
!6403 = distinct !DILexicalBlock(scope: !6397, file: !242, line: 2912, column: 5)
!6404 = !DILocation(line: 2913, column: 11, scope: !6403)
!6405 = !DILocation(line: 2913, column: 33, scope: !6403)
!6406 = !DILocation(line: 2913, column: 52, scope: !6403)
!6407 = !DILocation(line: 2913, column: 55, scope: !6403)
!6408 = !DILocation(line: 2915, column: 20, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6403, file: !242, line: 2915, column: 11)
!6410 = !DILocation(line: 2915, column: 34, scope: !6409)
!6411 = !DILocation(line: 2915, column: 57, scope: !6409)
!6412 = !DILocation(line: 2915, column: 56, scope: !6409)
!6413 = !DILocation(line: 2915, column: 54, scope: !6409)
!6414 = !DILocation(line: 2915, column: 11, scope: !6409)
!6415 = !DILocation(line: 2915, column: 74, scope: !6409)
!6416 = !DILocation(line: 2915, column: 11, scope: !6403)
!6417 = !DILocation(line: 2916, column: 9, scope: !6409)
!6418 = !DILocation(line: 2917, column: 5, scope: !6403)
!6419 = !DILocation(line: 2920, column: 11, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6421, file: !242, line: 2920, column: 11)
!6421 = distinct !DILexicalBlock(scope: !6397, file: !242, line: 2919, column: 5)
!6422 = !DILocation(line: 2920, column: 11, scope: !6421)
!6423 = !DILocation(line: 2922, column: 36, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6420, file: !242, line: 2921, column: 9)
!6425 = !DILocation(line: 2922, column: 34, scope: !6424)
!6426 = !DILocation(line: 2922, column: 31, scope: !6424)
!6427 = !DILocation(line: 2924, column: 15, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6424, file: !242, line: 2924, column: 15)
!6429 = !DILocation(line: 2924, column: 35, scope: !6428)
!6430 = !DILocation(line: 2924, column: 39, scope: !6428)
!6431 = !DILocation(line: 2924, column: 15, scope: !6424)
!6432 = !DILocation(line: 2932, column: 19, scope: !6433)
!6433 = distinct !DILexicalBlock(scope: !6434, file: !242, line: 2932, column: 19)
!6434 = distinct !DILexicalBlock(scope: !6428, file: !242, line: 2925, column: 13)
!6435 = !DILocation(line: 2932, column: 27, scope: !6433)
!6436 = !DILocation(line: 2932, column: 37, scope: !6433)
!6437 = !DILocation(line: 2932, column: 30, scope: !6433)
!6438 = !DILocation(line: 2932, column: 56, scope: !6433)
!6439 = !DILocation(line: 2932, column: 19, scope: !6434)
!6440 = !DILocation(line: 2934, column: 29, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6433, file: !242, line: 2933, column: 17)
!6442 = !DILocation(line: 2934, column: 36, scope: !6441)
!6443 = !DILocation(line: 2934, column: 57, scope: !6441)
!6444 = !DILocation(line: 2934, column: 19, scope: !6441)
!6445 = !DILocation(line: 2935, column: 19, scope: !6441)
!6446 = !DILocation(line: 2937, column: 33, scope: !6434)
!6447 = !DILocation(line: 2937, column: 24, scope: !6434)
!6448 = !DILocation(line: 2938, column: 19, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6434, file: !242, line: 2938, column: 19)
!6450 = !DILocation(line: 2938, column: 42, scope: !6449)
!6451 = !DILocation(line: 2938, column: 41, scope: !6449)
!6452 = !DILocation(line: 2938, column: 39, scope: !6449)
!6453 = !DILocation(line: 2938, column: 19, scope: !6434)
!6454 = !DILocation(line: 2939, column: 34, scope: !6449)
!6455 = !DILocation(line: 2939, column: 17, scope: !6449)
!6456 = !DILocation(line: 2940, column: 13, scope: !6434)
!6457 = !DILocation(line: 2941, column: 9, scope: !6424)
!6458 = !DILocation(line: 2943, column: 11, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6421, file: !242, line: 2943, column: 11)
!6460 = !DILocation(line: 2943, column: 11, scope: !6421)
!6461 = !DILocation(line: 2945, column: 23, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6463, file: !242, line: 2945, column: 15)
!6463 = distinct !DILexicalBlock(scope: !6459, file: !242, line: 2944, column: 9)
!6464 = !DILocation(line: 2945, column: 33, scope: !6462)
!6465 = !DILocation(line: 2945, column: 44, scope: !6462)
!6466 = !DILocation(line: 2945, column: 42, scope: !6462)
!6467 = !DILocation(line: 2945, column: 15, scope: !6462)
!6468 = !DILocation(line: 2945, column: 65, scope: !6462)
!6469 = !DILocation(line: 2945, column: 15, scope: !6463)
!6470 = !DILocation(line: 2947, column: 25, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6462, file: !242, line: 2946, column: 13)
!6472 = !DILocation(line: 2947, column: 32, scope: !6471)
!6473 = !DILocation(line: 2948, column: 22, scope: !6471)
!6474 = !DILocation(line: 2947, column: 15, scope: !6471)
!6475 = !DILocation(line: 2949, column: 19, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6471, file: !242, line: 2949, column: 19)
!6477 = !DILocation(line: 2949, column: 22, scope: !6476)
!6478 = !DILocation(line: 2949, column: 19, scope: !6471)
!6479 = !DILocation(line: 2950, column: 17, scope: !6476)
!6480 = !DILocation(line: 2951, column: 13, scope: !6471)
!6481 = !DILocation(line: 2952, column: 9, scope: !6463)
!6482 = !DILocation(line: 2955, column: 10, scope: !4860)
!6483 = !DILocation(line: 2955, column: 3, scope: !4860)
!6484 = !DILabel(scope: !4860, name: "un_backup", file: !242, line: 2957)
!6485 = !DILocation(line: 2957, column: 1, scope: !4860)
!6486 = !DILocation(line: 2959, column: 7, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2959, column: 7)
!6488 = !DILocation(line: 2959, column: 10, scope: !6487)
!6489 = !DILocation(line: 2959, column: 7, scope: !4860)
!6490 = !DILocation(line: 2960, column: 5, scope: !6487)
!6491 = !DILocation(line: 2968, column: 7, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2968, column: 7)
!6493 = !DILocation(line: 2968, column: 20, scope: !6492)
!6494 = !DILocation(line: 2968, column: 7, scope: !4860)
!6495 = !DILocation(line: 2969, column: 28, scope: !6492)
!6496 = !DILocation(line: 2969, column: 43, scope: !6492)
!6497 = !DILocation(line: 2969, column: 5, scope: !6492)
!6498 = !DILocation(line: 2971, column: 7, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !4860, file: !242, line: 2971, column: 7)
!6500 = !DILocation(line: 2971, column: 7, scope: !4860)
!6501 = !DILocation(line: 2973, column: 19, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6503, file: !242, line: 2973, column: 11)
!6503 = distinct !DILexicalBlock(scope: !6499, file: !242, line: 2972, column: 5)
!6504 = !DILocation(line: 2973, column: 31, scope: !6502)
!6505 = !DILocation(line: 2973, column: 11, scope: !6502)
!6506 = !DILocation(line: 2973, column: 41, scope: !6502)
!6507 = !DILocation(line: 2973, column: 11, scope: !6503)
!6508 = !DILocation(line: 2974, column: 19, scope: !6502)
!6509 = !DILocation(line: 2974, column: 26, scope: !6502)
!6510 = !DILocation(line: 2974, column: 52, scope: !6502)
!6511 = !DILocation(line: 2974, column: 9, scope: !6502)
!6512 = !DILocation(line: 2977, column: 15, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !242, line: 2977, column: 15)
!6514 = distinct !DILexicalBlock(scope: !6502, file: !242, line: 2976, column: 9)
!6515 = !DILocation(line: 2977, column: 18, scope: !6513)
!6516 = !DILocation(line: 2977, column: 15, scope: !6514)
!6517 = !DILocation(line: 2978, column: 21, scope: !6513)
!6518 = !DILocation(line: 2979, column: 21, scope: !6513)
!6519 = !DILocation(line: 2979, column: 48, scope: !6513)
!6520 = !DILocation(line: 2978, column: 13, scope: !6513)
!6521 = !DILocation(line: 2981, column: 5, scope: !6503)
!6522 = !DILocation(line: 2982, column: 3, scope: !4860)
!6523 = !DILocation(line: 2983, column: 1, scope: !4860)
!6524 = distinct !DISubprogram(name: "follow_fstatat", scope: !242, file: !242, line: 158, type: !355, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6525 = !DILocalVariable(name: "dirfd", arg: 1, scope: !6524, file: !242, line: 158, type: !5)
!6526 = !DILocation(line: 158, column: 21, scope: !6524)
!6527 = !DILocalVariable(name: "filename", arg: 2, scope: !6524, file: !242, line: 158, type: !112)
!6528 = !DILocation(line: 158, column: 40, scope: !6524)
!6529 = !DILocalVariable(name: "st", arg: 3, scope: !6524, file: !242, line: 158, type: !353)
!6530 = !DILocation(line: 158, column: 63, scope: !6524)
!6531 = !DILocalVariable(name: "flags", arg: 4, scope: !6524, file: !242, line: 158, type: !5)
!6532 = !DILocation(line: 158, column: 71, scope: !6524)
!6533 = !DILocalVariable(name: "result", scope: !6524, file: !242, line: 160, type: !5)
!6534 = !DILocation(line: 160, column: 7, scope: !6524)
!6535 = !DILocation(line: 160, column: 25, scope: !6524)
!6536 = !DILocation(line: 160, column: 32, scope: !6524)
!6537 = !DILocation(line: 160, column: 42, scope: !6524)
!6538 = !DILocation(line: 160, column: 46, scope: !6524)
!6539 = !DILocation(line: 160, column: 16, scope: !6524)
!6540 = !DILocation(line: 183, column: 10, scope: !6524)
!6541 = !DILocation(line: 183, column: 3, scope: !6524)
!6542 = distinct !DISubprogram(name: "should_dereference", scope: !242, file: !242, line: 1840, type: !357, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6543 = !DILocalVariable(name: "x", arg: 1, scope: !6542, file: !242, line: 1840, type: !249)
!6544 = !DILocation(line: 1840, column: 46, scope: !6542)
!6545 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !6542, file: !242, line: 1840, type: !117)
!6546 = !DILocation(line: 1840, column: 54, scope: !6542)
!6547 = !DILocation(line: 1842, column: 10, scope: !6542)
!6548 = !DILocation(line: 1842, column: 13, scope: !6542)
!6549 = !DILocation(line: 1842, column: 25, scope: !6542)
!6550 = !DILocation(line: 1843, column: 10, scope: !6542)
!6551 = !DILocation(line: 1843, column: 14, scope: !6542)
!6552 = !DILocation(line: 1843, column: 17, scope: !6542)
!6553 = !DILocation(line: 1843, column: 29, scope: !6542)
!6554 = !DILocation(line: 1844, column: 14, scope: !6542)
!6555 = !DILocation(line: 1844, column: 17, scope: !6542)
!6556 = !DILocation(line: 0, scope: !6542)
!6557 = !DILocation(line: 1842, column: 3, scope: !6542)
!6558 = distinct !DISubprogram(name: "same_file_ok", scope: !242, file: !242, line: 1464, type: !359, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6559 = !DILocalVariable(name: "src_name", arg: 1, scope: !6558, file: !242, line: 1464, type: !112)
!6560 = !DILocation(line: 1464, column: 27, scope: !6558)
!6561 = !DILocalVariable(name: "src_sb", arg: 2, scope: !6558, file: !242, line: 1464, type: !312)
!6562 = !DILocation(line: 1464, column: 56, scope: !6558)
!6563 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6558, file: !242, line: 1465, type: !112)
!6564 = !DILocation(line: 1465, column: 27, scope: !6558)
!6565 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !6558, file: !242, line: 1465, type: !312)
!6566 = !DILocation(line: 1465, column: 56, scope: !6558)
!6567 = !DILocalVariable(name: "x", arg: 5, scope: !6558, file: !242, line: 1466, type: !249)
!6568 = !DILocation(line: 1466, column: 40, scope: !6558)
!6569 = !DILocalVariable(name: "return_now", arg: 6, scope: !6558, file: !242, line: 1466, type: !299)
!6570 = !DILocation(line: 1466, column: 49, scope: !6558)
!6571 = !DILocalVariable(name: "src_sb_link", scope: !6558, file: !242, line: 1468, type: !312)
!6572 = !DILocation(line: 1468, column: 22, scope: !6558)
!6573 = !DILocalVariable(name: "dst_sb_link", scope: !6558, file: !242, line: 1469, type: !312)
!6574 = !DILocation(line: 1469, column: 22, scope: !6558)
!6575 = !DILocalVariable(name: "tmp_dst_sb", scope: !6558, file: !242, line: 1470, type: !314)
!6576 = !DILocation(line: 1470, column: 15, scope: !6558)
!6577 = !DILocalVariable(name: "tmp_src_sb", scope: !6558, file: !242, line: 1471, type: !314)
!6578 = !DILocation(line: 1471, column: 15, scope: !6558)
!6579 = !DILocalVariable(name: "same_link", scope: !6558, file: !242, line: 1473, type: !117)
!6580 = !DILocation(line: 1473, column: 8, scope: !6558)
!6581 = !DILocalVariable(name: "same", scope: !6558, file: !242, line: 1474, type: !117)
!6582 = !DILocation(line: 1474, column: 8, scope: !6558)
!6583 = !DILocation(line: 1474, column: 15, scope: !6558)
!6584 = !DILocation(line: 0, scope: !6558)
!6585 = !DILocation(line: 1476, column: 4, scope: !6558)
!6586 = !DILocation(line: 1476, column: 15, scope: !6558)
!6587 = !DILocation(line: 1483, column: 7, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1483, column: 7)
!6589 = !DILocation(line: 1483, column: 12, scope: !6588)
!6590 = !DILocation(line: 1483, column: 15, scope: !6588)
!6591 = !DILocation(line: 1483, column: 18, scope: !6588)
!6592 = !DILocation(line: 1483, column: 7, scope: !6558)
!6593 = !DILocation(line: 1485, column: 8, scope: !6594)
!6594 = distinct !DILexicalBlock(scope: !6588, file: !242, line: 1484, column: 5)
!6595 = !DILocation(line: 1485, column: 19, scope: !6594)
!6596 = !DILocation(line: 1486, column: 7, scope: !6594)
!6597 = !DILocation(line: 1489, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1489, column: 7)
!6599 = !DILocation(line: 1489, column: 10, scope: !6598)
!6600 = !DILocation(line: 1489, column: 22, scope: !6598)
!6601 = !DILocation(line: 1489, column: 7, scope: !6558)
!6602 = !DILocation(line: 1491, column: 19, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6598, file: !242, line: 1490, column: 5)
!6604 = !DILocation(line: 1491, column: 17, scope: !6603)
!6605 = !DILocation(line: 1496, column: 11, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6603, file: !242, line: 1496, column: 11)
!6607 = !DILocation(line: 1496, column: 37, scope: !6606)
!6608 = !DILocation(line: 1496, column: 40, scope: !6606)
!6609 = !DILocation(line: 1496, column: 11, scope: !6603)
!6610 = !DILocalVariable(name: "sn", scope: !6611, file: !242, line: 1498, type: !117)
!6611 = distinct !DILexicalBlock(scope: !6606, file: !242, line: 1497, column: 9)
!6612 = !DILocation(line: 1498, column: 16, scope: !6611)
!6613 = !DILocation(line: 1498, column: 32, scope: !6611)
!6614 = !DILocation(line: 1498, column: 42, scope: !6611)
!6615 = !DILocation(line: 1498, column: 21, scope: !6611)
!6616 = !DILocation(line: 1499, column: 18, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6611, file: !242, line: 1499, column: 16)
!6618 = !DILocation(line: 1499, column: 16, scope: !6611)
!6619 = !DILocation(line: 1502, column: 19, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !242, line: 1502, column: 19)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !242, line: 1500, column: 13)
!6622 = !DILocation(line: 1502, column: 22, scope: !6620)
!6623 = !DILocation(line: 1502, column: 34, scope: !6620)
!6624 = !DILocation(line: 1502, column: 19, scope: !6621)
!6625 = !DILocation(line: 1503, column: 17, scope: !6620)
!6626 = !DILocation(line: 1509, column: 19, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6621, file: !242, line: 1509, column: 19)
!6628 = !DILocation(line: 1509, column: 19, scope: !6621)
!6629 = !DILocation(line: 1511, column: 20, scope: !6630)
!6630 = distinct !DILexicalBlock(scope: !6627, file: !242, line: 1510, column: 17)
!6631 = !DILocation(line: 1511, column: 31, scope: !6630)
!6632 = !DILocation(line: 1512, column: 28, scope: !6630)
!6633 = !DILocation(line: 1512, column: 31, scope: !6630)
!6634 = !DILocation(line: 1512, column: 26, scope: !6630)
!6635 = !DILocation(line: 1512, column: 19, scope: !6630)
!6636 = !DILocation(line: 1514, column: 13, scope: !6621)
!6637 = !DILocation(line: 1516, column: 20, scope: !6611)
!6638 = !DILocation(line: 1516, column: 18, scope: !6611)
!6639 = !DILocation(line: 1516, column: 11, scope: !6611)
!6640 = !DILocation(line: 1519, column: 21, scope: !6603)
!6641 = !DILocation(line: 1519, column: 19, scope: !6603)
!6642 = !DILocation(line: 1520, column: 21, scope: !6603)
!6643 = !DILocation(line: 1520, column: 19, scope: !6603)
!6644 = !DILocation(line: 1521, column: 5, scope: !6603)
!6645 = !DILocation(line: 1524, column: 12, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6647, file: !242, line: 1524, column: 11)
!6647 = distinct !DILexicalBlock(scope: !6598, file: !242, line: 1523, column: 5)
!6648 = !DILocation(line: 1524, column: 11, scope: !6647)
!6649 = !DILocation(line: 1525, column: 9, scope: !6646)
!6650 = !DILocation(line: 1527, column: 18, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6647, file: !242, line: 1527, column: 11)
!6652 = !DILocation(line: 1527, column: 11, scope: !6651)
!6653 = !DILocation(line: 1527, column: 41, scope: !6651)
!6654 = !DILocation(line: 1528, column: 11, scope: !6651)
!6655 = !DILocation(line: 1528, column: 21, scope: !6651)
!6656 = !DILocation(line: 1528, column: 14, scope: !6651)
!6657 = !DILocation(line: 1528, column: 44, scope: !6651)
!6658 = !DILocation(line: 1527, column: 11, scope: !6647)
!6659 = !DILocation(line: 1529, column: 9, scope: !6651)
!6660 = !DILocation(line: 1531, column: 19, scope: !6647)
!6661 = !DILocation(line: 1532, column: 19, scope: !6647)
!6662 = !DILocation(line: 1534, column: 19, scope: !6647)
!6663 = !DILocation(line: 0, scope: !6647)
!6664 = !DILocation(line: 1534, column: 17, scope: !6647)
!6665 = !DILocation(line: 1541, column: 11, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6647, file: !242, line: 1541, column: 11)
!6667 = !DILocation(line: 1541, column: 42, scope: !6666)
!6668 = !DILocation(line: 1541, column: 45, scope: !6666)
!6669 = !DILocation(line: 1542, column: 11, scope: !6666)
!6670 = !DILocation(line: 1542, column: 14, scope: !6666)
!6671 = !DILocation(line: 1542, column: 17, scope: !6666)
!6672 = !DILocation(line: 1541, column: 11, scope: !6647)
!6673 = !DILocation(line: 1543, column: 9, scope: !6666)
!6674 = !DILocation(line: 1551, column: 7, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1551, column: 7)
!6676 = !DILocation(line: 1551, column: 10, scope: !6675)
!6677 = !DILocation(line: 1551, column: 22, scope: !6675)
!6678 = !DILocation(line: 1551, column: 7, scope: !6558)
!6679 = !DILocation(line: 1553, column: 12, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6681, file: !242, line: 1553, column: 11)
!6681 = distinct !DILexicalBlock(scope: !6675, file: !242, line: 1552, column: 5)
!6682 = !DILocation(line: 1553, column: 11, scope: !6681)
!6683 = !DILocation(line: 1571, column: 18, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !242, line: 1571, column: 16)
!6685 = distinct !DILexicalBlock(scope: !6680, file: !242, line: 1554, column: 9)
!6686 = !DILocation(line: 1571, column: 21, scope: !6684)
!6687 = !DILocation(line: 1572, column: 16, scope: !6684)
!6688 = !DILocation(line: 1572, column: 19, scope: !6684)
!6689 = !DILocation(line: 1572, column: 22, scope: !6684)
!6690 = !DILocation(line: 1572, column: 34, scope: !6684)
!6691 = !DILocation(line: 1573, column: 16, scope: !6684)
!6692 = !DILocation(line: 1573, column: 19, scope: !6684)
!6693 = !DILocation(line: 1574, column: 16, scope: !6684)
!6694 = !DILocation(line: 1574, column: 21, scope: !6684)
!6695 = !DILocation(line: 1571, column: 16, scope: !6685)
!6696 = !DILocation(line: 1575, column: 13, scope: !6684)
!6697 = !DILocation(line: 1577, column: 11, scope: !6685)
!6698 = !DILocation(line: 1581, column: 27, scope: !6681)
!6699 = !DILocation(line: 1581, column: 37, scope: !6681)
!6700 = !DILocation(line: 1581, column: 16, scope: !6681)
!6701 = !DILocation(line: 1581, column: 14, scope: !6681)
!6702 = !DILocation(line: 1581, column: 7, scope: !6681)
!6703 = !DILocation(line: 1601, column: 7, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1601, column: 7)
!6705 = !DILocation(line: 1601, column: 10, scope: !6704)
!6706 = !DILocation(line: 1601, column: 20, scope: !6704)
!6707 = !DILocation(line: 1601, column: 23, scope: !6704)
!6708 = !DILocation(line: 1601, column: 26, scope: !6704)
!6709 = !DILocation(line: 1601, column: 7, scope: !6558)
!6710 = !DILocation(line: 1607, column: 11, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !242, line: 1607, column: 11)
!6712 = distinct !DILexicalBlock(scope: !6704, file: !242, line: 1602, column: 5)
!6713 = !DILocation(line: 1607, column: 11, scope: !6712)
!6714 = !DILocation(line: 1608, column: 9, scope: !6711)
!6715 = !DILocation(line: 1612, column: 11, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6712, file: !242, line: 1612, column: 11)
!6717 = !DILocation(line: 1613, column: 11, scope: !6716)
!6718 = !DILocation(line: 1613, column: 18, scope: !6716)
!6719 = !DILocation(line: 1613, column: 31, scope: !6716)
!6720 = !DILocation(line: 1613, column: 16, scope: !6716)
!6721 = !DILocation(line: 1614, column: 11, scope: !6716)
!6722 = !DILocation(line: 1614, column: 27, scope: !6716)
!6723 = !DILocation(line: 1614, column: 37, scope: !6716)
!6724 = !DILocation(line: 1614, column: 16, scope: !6716)
!6725 = !DILocation(line: 1612, column: 11, scope: !6712)
!6726 = !DILocation(line: 1615, column: 18, scope: !6716)
!6727 = !DILocation(line: 1615, column: 21, scope: !6716)
!6728 = !DILocation(line: 1615, column: 16, scope: !6716)
!6729 = !DILocation(line: 1615, column: 9, scope: !6716)
!6730 = !DILocation(line: 1616, column: 5, scope: !6712)
!6731 = !DILocation(line: 1620, column: 8, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1620, column: 7)
!6733 = !DILocation(line: 1620, column: 39, scope: !6732)
!6734 = !DILocation(line: 1620, column: 43, scope: !6732)
!6735 = !DILocation(line: 1620, column: 7, scope: !6558)
!6736 = !DILocation(line: 1622, column: 12, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6738, file: !242, line: 1622, column: 11)
!6738 = distinct !DILexicalBlock(scope: !6732, file: !242, line: 1621, column: 5)
!6739 = !DILocation(line: 1622, column: 11, scope: !6738)
!6740 = !DILocation(line: 1623, column: 9, scope: !6737)
!6741 = !DILocation(line: 1626, column: 11, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !242, line: 1626, column: 11)
!6743 = !DILocation(line: 1626, column: 14, scope: !6742)
!6744 = !DILocation(line: 1626, column: 11, scope: !6738)
!6745 = !DILocation(line: 1628, column: 12, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6742, file: !242, line: 1627, column: 9)
!6747 = !DILocation(line: 1628, column: 23, scope: !6746)
!6748 = !DILocation(line: 1629, column: 11, scope: !6746)
!6749 = !DILocation(line: 1631, column: 5, scope: !6738)
!6750 = !DILocation(line: 1653, column: 7, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1653, column: 7)
!6752 = !DILocation(line: 1653, column: 10, scope: !6751)
!6753 = !DILocation(line: 1654, column: 7, scope: !6751)
!6754 = !DILocation(line: 1654, column: 10, scope: !6751)
!6755 = !DILocation(line: 1655, column: 7, scope: !6751)
!6756 = !DILocation(line: 1655, column: 14, scope: !6751)
!6757 = !DILocation(line: 1655, column: 27, scope: !6751)
!6758 = !DILocation(line: 1655, column: 12, scope: !6751)
!6759 = !DILocation(line: 1653, column: 7, scope: !6558)
!6760 = !DILocalVariable(name: "abs_src", scope: !6761, file: !242, line: 1657, type: !7)
!6761 = distinct !DILexicalBlock(scope: !6751, file: !242, line: 1656, column: 5)
!6762 = !DILocation(line: 1657, column: 13, scope: !6761)
!6763 = !DILocation(line: 1657, column: 47, scope: !6761)
!6764 = !DILocation(line: 1657, column: 23, scope: !6761)
!6765 = !DILocation(line: 1658, column: 11, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6761, file: !242, line: 1658, column: 11)
!6767 = !DILocation(line: 1658, column: 11, scope: !6761)
!6768 = !DILocalVariable(name: "result", scope: !6769, file: !242, line: 1660, type: !117)
!6769 = distinct !DILexicalBlock(scope: !6766, file: !242, line: 1659, column: 9)
!6770 = !DILocation(line: 1660, column: 16, scope: !6769)
!6771 = !DILocation(line: 1660, column: 38, scope: !6769)
!6772 = !DILocation(line: 1660, column: 47, scope: !6769)
!6773 = !DILocation(line: 1660, column: 27, scope: !6769)
!6774 = !DILocation(line: 1660, column: 25, scope: !6769)
!6775 = !DILocation(line: 1661, column: 17, scope: !6769)
!6776 = !DILocation(line: 1661, column: 11, scope: !6769)
!6777 = !DILocation(line: 1662, column: 18, scope: !6769)
!6778 = !DILocation(line: 1662, column: 11, scope: !6769)
!6779 = !DILocation(line: 1664, column: 5, scope: !6761)
!6780 = !DILocation(line: 1667, column: 7, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1667, column: 7)
!6782 = !DILocation(line: 1667, column: 10, scope: !6781)
!6783 = !DILocation(line: 1667, column: 24, scope: !6781)
!6784 = !DILocation(line: 1667, column: 27, scope: !6781)
!6785 = !DILocation(line: 1667, column: 7, scope: !6558)
!6786 = !DILocation(line: 1668, column: 5, scope: !6781)
!6787 = !DILocation(line: 1670, column: 7, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6558, file: !242, line: 1670, column: 7)
!6789 = !DILocation(line: 1670, column: 10, scope: !6788)
!6790 = !DILocation(line: 1670, column: 22, scope: !6788)
!6791 = !DILocation(line: 1670, column: 7, scope: !6558)
!6792 = !DILocation(line: 1672, column: 14, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !242, line: 1672, column: 12)
!6794 = distinct !DILexicalBlock(scope: !6788, file: !242, line: 1671, column: 5)
!6795 = !DILocation(line: 1672, column: 12, scope: !6794)
!6796 = !DILocation(line: 1673, column: 23, scope: !6793)
!6797 = !DILocation(line: 1673, column: 22, scope: !6793)
!6798 = !{i64 0, i64 8, !3837, i64 8, i64 8, !3837, i64 16, i64 8, !3837, i64 24, i64 4, !2980, i64 28, i64 4, !2980, i64 32, i64 4, !2980, i64 36, i64 4, !2980, i64 40, i64 8, !3837, i64 48, i64 8, !3837, i64 56, i64 8, !3837, i64 64, i64 8, !3837, i64 72, i64 8, !3837, i64 80, i64 8, !3837, i64 88, i64 8, !3837, i64 96, i64 8, !3837, i64 104, i64 8, !3837, i64 112, i64 8, !3837, i64 120, i64 24, !3652}
!6799 = !DILocation(line: 1673, column: 9, scope: !6793)
!6800 = !DILocation(line: 1674, column: 22, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6793, file: !242, line: 1674, column: 16)
!6802 = !DILocation(line: 1674, column: 16, scope: !6801)
!6803 = !DILocation(line: 1674, column: 45, scope: !6801)
!6804 = !DILocation(line: 1674, column: 16, scope: !6793)
!6805 = !DILocation(line: 1675, column: 9, scope: !6801)
!6806 = !DILocation(line: 1677, column: 14, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6794, file: !242, line: 1677, column: 12)
!6808 = !DILocation(line: 1677, column: 12, scope: !6794)
!6809 = !DILocation(line: 1678, column: 23, scope: !6807)
!6810 = !DILocation(line: 1678, column: 22, scope: !6807)
!6811 = !DILocation(line: 1678, column: 9, scope: !6807)
!6812 = !DILocation(line: 1679, column: 22, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6807, file: !242, line: 1679, column: 16)
!6814 = !DILocation(line: 1679, column: 16, scope: !6813)
!6815 = !DILocation(line: 1679, column: 45, scope: !6813)
!6816 = !DILocation(line: 1679, column: 16, scope: !6807)
!6817 = !DILocation(line: 1680, column: 9, scope: !6813)
!6818 = !DILocation(line: 1682, column: 14, scope: !6819)
!6819 = distinct !DILexicalBlock(scope: !6794, file: !242, line: 1682, column: 12)
!6820 = !DILocation(line: 1682, column: 12, scope: !6794)
!6821 = !DILocation(line: 1683, column: 9, scope: !6819)
!6822 = !DILocation(line: 1685, column: 11, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6794, file: !242, line: 1685, column: 11)
!6824 = !DILocation(line: 1685, column: 14, scope: !6823)
!6825 = !DILocation(line: 1685, column: 11, scope: !6794)
!6826 = !DILocation(line: 1691, column: 27, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6823, file: !242, line: 1686, column: 9)
!6828 = !DILocation(line: 1691, column: 25, scope: !6827)
!6829 = !DILocation(line: 1691, column: 12, scope: !6827)
!6830 = !DILocation(line: 1691, column: 23, scope: !6827)
!6831 = !DILocation(line: 1692, column: 11, scope: !6827)
!6832 = !DILocation(line: 1694, column: 5, scope: !6794)
!6833 = !DILocation(line: 1696, column: 3, scope: !6558)
!6834 = !DILocation(line: 1697, column: 1, scope: !6558)
!6835 = distinct !DISubprogram(name: "create_hard_link", scope: !242, file: !242, line: 1819, type: !361, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6836 = !DILocalVariable(name: "src_name", arg: 1, scope: !6835, file: !242, line: 1819, type: !112)
!6837 = !DILocation(line: 1819, column: 31, scope: !6835)
!6838 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6835, file: !242, line: 1819, type: !112)
!6839 = !DILocation(line: 1819, column: 53, scope: !6835)
!6840 = !DILocalVariable(name: "replace", arg: 3, scope: !6835, file: !242, line: 1820, type: !117)
!6841 = !DILocation(line: 1820, column: 24, scope: !6835)
!6842 = !DILocalVariable(name: "verbose", arg: 4, scope: !6835, file: !242, line: 1820, type: !117)
!6843 = !DILocation(line: 1820, column: 38, scope: !6835)
!6844 = !DILocalVariable(name: "dereference", arg: 5, scope: !6835, file: !242, line: 1820, type: !117)
!6845 = !DILocation(line: 1820, column: 52, scope: !6835)
!6846 = !DILocalVariable(name: "err", scope: !6835, file: !242, line: 1822, type: !5)
!6847 = !DILocation(line: 1822, column: 7, scope: !6835)
!6848 = !DILocation(line: 1822, column: 37, scope: !6835)
!6849 = !DILocation(line: 1822, column: 57, scope: !6835)
!6850 = !DILocation(line: 1823, column: 27, scope: !6835)
!6851 = !DILocation(line: 1824, column: 27, scope: !6835)
!6852 = !DILocation(line: 1822, column: 13, scope: !6835)
!6853 = !DILocation(line: 1825, column: 11, scope: !6854)
!6854 = distinct !DILexicalBlock(scope: !6835, file: !242, line: 1825, column: 7)
!6855 = !DILocation(line: 1825, column: 9, scope: !6854)
!6856 = !DILocation(line: 1825, column: 7, scope: !6835)
!6857 = !DILocation(line: 1827, column: 17, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6854, file: !242, line: 1826, column: 5)
!6859 = !DILocation(line: 1827, column: 22, scope: !6858)
!6860 = !DILocation(line: 1828, column: 14, scope: !6858)
!6861 = !DILocation(line: 1828, column: 39, scope: !6858)
!6862 = !DILocation(line: 1827, column: 7, scope: !6858)
!6863 = !DILocation(line: 1829, column: 7, scope: !6858)
!6864 = !DILocation(line: 1831, column: 7, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6835, file: !242, line: 1831, column: 7)
!6866 = !DILocation(line: 1831, column: 11, scope: !6865)
!6867 = !DILocation(line: 1831, column: 15, scope: !6865)
!6868 = !DILocation(line: 1831, column: 18, scope: !6865)
!6869 = !DILocation(line: 1831, column: 7, scope: !6835)
!6870 = !DILocation(line: 1832, column: 13, scope: !6865)
!6871 = !DILocation(line: 1832, column: 32, scope: !6865)
!6872 = !DILocation(line: 1832, column: 5, scope: !6865)
!6873 = !DILocation(line: 1833, column: 3, scope: !6835)
!6874 = !DILocation(line: 1834, column: 1, scope: !6835)
!6875 = distinct !DISubprogram(name: "abandon_move", scope: !242, file: !242, line: 1778, type: !363, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6876 = !DILocalVariable(name: "x", arg: 1, scope: !6875, file: !242, line: 1778, type: !249)
!6877 = !DILocation(line: 1778, column: 40, scope: !6875)
!6878 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6875, file: !242, line: 1779, type: !112)
!6879 = !DILocation(line: 1779, column: 27, scope: !6875)
!6880 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6875, file: !242, line: 1780, type: !312)
!6881 = !DILocation(line: 1780, column: 34, scope: !6875)
!6882 = !DILocation(line: 1782, column: 3, scope: !6875)
!6883 = !DILocation(line: 1783, column: 11, scope: !6875)
!6884 = !DILocation(line: 1783, column: 14, scope: !6875)
!6885 = !DILocation(line: 1783, column: 26, scope: !6875)
!6886 = !DILocation(line: 1784, column: 11, scope: !6875)
!6887 = !DILocation(line: 1784, column: 16, scope: !6875)
!6888 = !DILocation(line: 1784, column: 19, scope: !6875)
!6889 = !DILocation(line: 1784, column: 31, scope: !6875)
!6890 = !DILocation(line: 1785, column: 16, scope: !6875)
!6891 = !DILocation(line: 1785, column: 20, scope: !6875)
!6892 = !DILocation(line: 1785, column: 23, scope: !6875)
!6893 = !DILocation(line: 1785, column: 35, scope: !6875)
!6894 = !DILocation(line: 1786, column: 20, scope: !6875)
!6895 = !DILocation(line: 1786, column: 23, scope: !6875)
!6896 = !DILocation(line: 1786, column: 26, scope: !6875)
!6897 = !DILocation(line: 1787, column: 20, scope: !6875)
!6898 = !DILocation(line: 1787, column: 47, scope: !6875)
!6899 = !DILocation(line: 1787, column: 57, scope: !6875)
!6900 = !DILocation(line: 1787, column: 65, scope: !6875)
!6901 = !DILocation(line: 1787, column: 25, scope: !6875)
!6902 = !DILocation(line: 1788, column: 15, scope: !6875)
!6903 = !DILocation(line: 1788, column: 34, scope: !6875)
!6904 = !DILocation(line: 1788, column: 37, scope: !6875)
!6905 = !DILocation(line: 1788, column: 47, scope: !6875)
!6906 = !DILocation(line: 1788, column: 20, scope: !6875)
!6907 = !DILocation(line: 1788, column: 18, scope: !6875)
!6908 = !DILocation(line: 0, scope: !6875)
!6909 = !DILocation(line: 1783, column: 3, scope: !6875)
!6910 = distinct !DISubprogram(name: "overwrite_ok", scope: !242, file: !242, line: 1710, type: !363, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6911 = !DILocalVariable(name: "x", arg: 1, scope: !6910, file: !242, line: 1710, type: !249)
!6912 = !DILocation(line: 1710, column: 40, scope: !6910)
!6913 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6910, file: !242, line: 1710, type: !112)
!6914 = !DILocation(line: 1710, column: 55, scope: !6910)
!6915 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6910, file: !242, line: 1711, type: !312)
!6916 = !DILocation(line: 1711, column: 34, scope: !6910)
!6917 = !DILocation(line: 1713, column: 31, scope: !6918)
!6918 = distinct !DILexicalBlock(scope: !6910, file: !242, line: 1713, column: 7)
!6919 = !DILocation(line: 1713, column: 41, scope: !6918)
!6920 = !DILocation(line: 1713, column: 49, scope: !6918)
!6921 = !DILocation(line: 1713, column: 9, scope: !6918)
!6922 = !DILocation(line: 1713, column: 7, scope: !6910)
!6923 = !DILocalVariable(name: "perms", scope: !6924, file: !242, line: 1715, type: !367)
!6924 = distinct !DILexicalBlock(scope: !6918, file: !242, line: 1714, column: 5)
!6925 = !DILocation(line: 1715, column: 12, scope: !6924)
!6926 = !DILocation(line: 1716, column: 16, scope: !6924)
!6927 = !DILocation(line: 1716, column: 24, scope: !6924)
!6928 = !DILocation(line: 1716, column: 33, scope: !6924)
!6929 = !DILocation(line: 1716, column: 7, scope: !6924)
!6930 = !DILocation(line: 1717, column: 7, scope: !6924)
!6931 = !DILocation(line: 1717, column: 17, scope: !6924)
!6932 = !DILocation(line: 1718, column: 16, scope: !6924)
!6933 = !DILocation(line: 1719, column: 17, scope: !6924)
!6934 = !DILocation(line: 1719, column: 20, scope: !6924)
!6935 = !DILocation(line: 1719, column: 30, scope: !6924)
!6936 = !DILocation(line: 1719, column: 33, scope: !6924)
!6937 = !DILocation(line: 1719, column: 36, scope: !6924)
!6938 = !DILocation(line: 1720, column: 17, scope: !6924)
!6939 = !DILocation(line: 1720, column: 20, scope: !6924)
!6940 = !DILocation(line: 1720, column: 23, scope: !6924)
!6941 = !DILocation(line: 1719, column: 16, scope: !6924)
!6942 = !DILocation(line: 1721, column: 18, scope: !6924)
!6943 = !DILocation(line: 1722, column: 18, scope: !6924)
!6944 = !DILocation(line: 1723, column: 16, scope: !6924)
!6945 = !DILocation(line: 1723, column: 30, scope: !6924)
!6946 = !DILocation(line: 1724, column: 37, scope: !6924)
!6947 = !DILocation(line: 1724, column: 45, scope: !6924)
!6948 = !DILocation(line: 1724, column: 53, scope: !6924)
!6949 = !DILocation(line: 1724, column: 16, scope: !6924)
!6950 = !DILocation(line: 1725, column: 17, scope: !6924)
!6951 = !DILocation(line: 1718, column: 7, scope: !6924)
!6952 = !DILocation(line: 1726, column: 5, scope: !6924)
!6953 = !DILocation(line: 1729, column: 16, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6918, file: !242, line: 1728, column: 5)
!6955 = !DILocation(line: 1729, column: 24, scope: !6954)
!6956 = !DILocation(line: 1730, column: 16, scope: !6954)
!6957 = !DILocation(line: 1730, column: 30, scope: !6954)
!6958 = !DILocation(line: 1729, column: 7, scope: !6954)
!6959 = !DILocation(line: 1733, column: 10, scope: !6910)
!6960 = !DILocation(line: 1733, column: 3, scope: !6910)
!6961 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !138, file: !138, line: 265, type: !197, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6962 = !DILocalVariable(name: "file_name", arg: 1, scope: !6961, file: !138, line: 265, type: !112)
!6963 = !DILocation(line: 265, column: 28, scope: !6961)
!6964 = !DILocation(line: 267, column: 7, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6961, file: !138, line: 267, column: 7)
!6966 = !DILocation(line: 267, column: 20, scope: !6965)
!6967 = !DILocation(line: 267, column: 7, scope: !6961)
!6968 = !DILocalVariable(name: "sep", scope: !6969, file: !138, line: 269, type: !8)
!6969 = distinct !DILexicalBlock(scope: !6965, file: !138, line: 268, column: 5)
!6970 = !DILocation(line: 269, column: 12, scope: !6969)
!6971 = !DILocation(line: 269, column: 18, scope: !6969)
!6972 = !DILocation(line: 269, column: 29, scope: !6969)
!6973 = !DILocation(line: 269, column: 42, scope: !6969)
!6974 = !DILocation(line: 269, column: 50, scope: !6969)
!6975 = !DILocation(line: 270, column: 17, scope: !6969)
!6976 = !DILocation(line: 270, column: 21, scope: !6969)
!6977 = !DILocation(line: 270, column: 24, scope: !6969)
!6978 = !DILocation(line: 270, column: 7, scope: !6969)
!6979 = !DILocation(line: 273, column: 5, scope: !6965)
!6980 = !DILocation(line: 274, column: 1, scope: !6961)
!6981 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !242, file: !242, line: 1850, type: !408, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!6982 = !DILocalVariable(name: "srcbase", arg: 1, scope: !6981, file: !242, line: 1850, type: !112)
!6983 = !DILocation(line: 1850, column: 35, scope: !6981)
!6984 = !DILocalVariable(name: "src_st", arg: 2, scope: !6981, file: !242, line: 1850, type: !312)
!6985 = !DILocation(line: 1850, column: 63, scope: !6981)
!6986 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6981, file: !242, line: 1851, type: !112)
!6987 = !DILocation(line: 1851, column: 35, scope: !6981)
!6988 = !DILocalVariable(name: "srcbaselen", scope: !6981, file: !242, line: 1853, type: !52)
!6989 = !DILocation(line: 1853, column: 10, scope: !6981)
!6990 = !DILocation(line: 1853, column: 31, scope: !6981)
!6991 = !DILocation(line: 1853, column: 23, scope: !6981)
!6992 = !DILocalVariable(name: "dstbase", scope: !6981, file: !242, line: 1854, type: !112)
!6993 = !DILocation(line: 1854, column: 15, scope: !6981)
!6994 = !DILocation(line: 1854, column: 41, scope: !6981)
!6995 = !DILocation(line: 1854, column: 25, scope: !6981)
!6996 = !DILocalVariable(name: "dstbaselen", scope: !6981, file: !242, line: 1855, type: !52)
!6997 = !DILocation(line: 1855, column: 10, scope: !6981)
!6998 = !DILocation(line: 1855, column: 31, scope: !6981)
!6999 = !DILocation(line: 1855, column: 23, scope: !6981)
!7000 = !DILocalVariable(name: "suffixlen", scope: !6981, file: !242, line: 1856, type: !52)
!7001 = !DILocation(line: 1856, column: 10, scope: !6981)
!7002 = !DILocation(line: 1856, column: 30, scope: !6981)
!7003 = !DILocation(line: 1856, column: 22, scope: !6981)
!7004 = !DILocation(line: 1857, column: 10, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6981, file: !242, line: 1857, column: 7)
!7006 = !DILocation(line: 1857, column: 24, scope: !7005)
!7007 = !DILocation(line: 1857, column: 37, scope: !7005)
!7008 = !DILocation(line: 1857, column: 35, scope: !7005)
!7009 = !DILocation(line: 1857, column: 21, scope: !7005)
!7010 = !DILocation(line: 1858, column: 10, scope: !7005)
!7011 = !DILocation(line: 1858, column: 21, scope: !7005)
!7012 = !DILocation(line: 1858, column: 30, scope: !7005)
!7013 = !DILocation(line: 1858, column: 39, scope: !7005)
!7014 = !DILocation(line: 1858, column: 13, scope: !7005)
!7015 = !DILocation(line: 1858, column: 51, scope: !7005)
!7016 = !DILocation(line: 1859, column: 10, scope: !7005)
!7017 = !DILocation(line: 1859, column: 13, scope: !7005)
!7018 = !DILocation(line: 1857, column: 7, scope: !6981)
!7019 = !DILocation(line: 1860, column: 5, scope: !7005)
!7020 = !DILocalVariable(name: "dstlen", scope: !6981, file: !242, line: 1861, type: !52)
!7021 = !DILocation(line: 1861, column: 10, scope: !6981)
!7022 = !DILocation(line: 1861, column: 27, scope: !6981)
!7023 = !DILocation(line: 1861, column: 19, scope: !6981)
!7024 = !DILocalVariable(name: "dst_back", scope: !6981, file: !242, line: 1862, type: !7)
!7025 = !DILocation(line: 1862, column: 9, scope: !6981)
!7026 = !DILocation(line: 1862, column: 29, scope: !6981)
!7027 = !DILocation(line: 1862, column: 38, scope: !6981)
!7028 = !DILocation(line: 1862, column: 36, scope: !6981)
!7029 = !DILocation(line: 1862, column: 48, scope: !6981)
!7030 = !DILocation(line: 1862, column: 20, scope: !6981)
!7031 = !DILocation(line: 1863, column: 20, scope: !6981)
!7032 = !DILocation(line: 1863, column: 30, scope: !6981)
!7033 = !DILocation(line: 1863, column: 40, scope: !6981)
!7034 = !DILocation(line: 1863, column: 11, scope: !6981)
!7035 = !DILocation(line: 1863, column: 49, scope: !6981)
!7036 = !DILocation(line: 1863, column: 3, scope: !6981)
!7037 = !DILocalVariable(name: "dst_back_sb", scope: !6981, file: !242, line: 1864, type: !314)
!7038 = !DILocation(line: 1864, column: 15, scope: !6981)
!7039 = !DILocalVariable(name: "dst_back_status", scope: !6981, file: !242, line: 1865, type: !5)
!7040 = !DILocation(line: 1865, column: 7, scope: !6981)
!7041 = !DILocation(line: 1865, column: 31, scope: !6981)
!7042 = !DILocation(line: 1865, column: 25, scope: !6981)
!7043 = !DILocation(line: 1866, column: 9, scope: !6981)
!7044 = !DILocation(line: 1866, column: 3, scope: !6981)
!7045 = !DILocation(line: 1867, column: 10, scope: !6981)
!7046 = !DILocation(line: 1867, column: 26, scope: !6981)
!7047 = !DILocation(line: 1867, column: 31, scope: !6981)
!7048 = !DILocation(line: 1867, column: 34, scope: !6981)
!7049 = !DILocation(line: 0, scope: !6981)
!7050 = !DILocation(line: 1867, column: 3, scope: !6981)
!7051 = !DILocation(line: 1868, column: 1, scope: !6981)
!7052 = distinct !DISubprogram(name: "emit_verbose", scope: !242, file: !242, line: 1795, type: !410, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7053 = !DILocalVariable(name: "src", arg: 1, scope: !7052, file: !242, line: 1795, type: !112)
!7054 = !DILocation(line: 1795, column: 27, scope: !7052)
!7055 = !DILocalVariable(name: "dst", arg: 2, scope: !7052, file: !242, line: 1795, type: !112)
!7056 = !DILocation(line: 1795, column: 44, scope: !7052)
!7057 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !7052, file: !242, line: 1795, type: !112)
!7058 = !DILocation(line: 1795, column: 61, scope: !7052)
!7059 = !DILocation(line: 1797, column: 23, scope: !7052)
!7060 = !DILocation(line: 1797, column: 43, scope: !7052)
!7061 = !DILocation(line: 1797, column: 3, scope: !7052)
!7062 = !DILocation(line: 1798, column: 7, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7052, file: !242, line: 1798, column: 7)
!7064 = !DILocation(line: 1798, column: 7, scope: !7052)
!7065 = !DILocation(line: 1799, column: 13, scope: !7063)
!7066 = !DILocation(line: 1799, column: 33, scope: !7063)
!7067 = !DILocation(line: 1799, column: 5, scope: !7063)
!7068 = !DILocation(line: 1800, column: 3, scope: !7052)
!7069 = !DILocation(line: 1801, column: 1, scope: !7052)
!7070 = distinct !DISubprogram(name: "is_ancestor", scope: !242, file: !242, line: 620, type: !412, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7071 = !DILocalVariable(name: "sb", arg: 1, scope: !7070, file: !242, line: 620, type: !312)
!7072 = !DILocation(line: 620, column: 33, scope: !7070)
!7073 = !DILocalVariable(name: "ancestors", arg: 2, scope: !7070, file: !242, line: 620, type: !414)
!7074 = !DILocation(line: 620, column: 60, scope: !7070)
!7075 = !DILocation(line: 622, column: 3, scope: !7070)
!7076 = !DILocation(line: 622, column: 10, scope: !7070)
!7077 = !DILocation(line: 622, column: 20, scope: !7070)
!7078 = !DILocation(line: 624, column: 11, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !242, line: 624, column: 11)
!7080 = distinct !DILexicalBlock(scope: !7070, file: !242, line: 623, column: 5)
!7081 = !DILocation(line: 624, column: 22, scope: !7079)
!7082 = !DILocation(line: 624, column: 29, scope: !7079)
!7083 = !DILocation(line: 624, column: 33, scope: !7079)
!7084 = !DILocation(line: 624, column: 26, scope: !7079)
!7085 = !DILocation(line: 624, column: 40, scope: !7079)
!7086 = !DILocation(line: 624, column: 43, scope: !7079)
!7087 = !DILocation(line: 624, column: 54, scope: !7079)
!7088 = !DILocation(line: 624, column: 61, scope: !7079)
!7089 = !DILocation(line: 624, column: 65, scope: !7079)
!7090 = !DILocation(line: 624, column: 58, scope: !7079)
!7091 = !DILocation(line: 624, column: 11, scope: !7080)
!7092 = !DILocation(line: 625, column: 9, scope: !7079)
!7093 = !DILocation(line: 626, column: 19, scope: !7080)
!7094 = !DILocation(line: 626, column: 30, scope: !7080)
!7095 = !DILocation(line: 626, column: 17, scope: !7080)
!7096 = distinct !{!7096, !7075, !7097}
!7097 = !DILocation(line: 627, column: 5, scope: !7070)
!7098 = !DILocation(line: 628, column: 3, scope: !7070)
!7099 = !DILocation(line: 629, column: 1, scope: !7070)
!7100 = distinct !DISubprogram(name: "copy_dir", scope: !242, file: !242, line: 745, type: !416, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7101 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !7100, file: !242, line: 745, type: !112)
!7102 = !DILocation(line: 745, column: 23, scope: !7100)
!7103 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !7100, file: !242, line: 745, type: !112)
!7104 = !DILocation(line: 745, column: 48, scope: !7100)
!7105 = !DILocalVariable(name: "new_dst", arg: 3, scope: !7100, file: !242, line: 745, type: !117)
!7106 = !DILocation(line: 745, column: 66, scope: !7100)
!7107 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7100, file: !242, line: 746, type: !312)
!7108 = !DILocation(line: 746, column: 30, scope: !7100)
!7109 = !DILocalVariable(name: "ancestors", arg: 5, scope: !7100, file: !242, line: 746, type: !347)
!7110 = !DILocation(line: 746, column: 55, scope: !7100)
!7111 = !DILocalVariable(name: "x", arg: 6, scope: !7100, file: !242, line: 747, type: !249)
!7112 = !DILocation(line: 747, column: 36, scope: !7100)
!7113 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !7100, file: !242, line: 748, type: !299)
!7114 = !DILocation(line: 748, column: 17, scope: !7100)
!7115 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !7100, file: !242, line: 749, type: !299)
!7116 = !DILocation(line: 749, column: 17, scope: !7100)
!7117 = !DILocalVariable(name: "name_space", scope: !7100, file: !242, line: 751, type: !7)
!7118 = !DILocation(line: 751, column: 9, scope: !7100)
!7119 = !DILocalVariable(name: "namep", scope: !7100, file: !242, line: 752, type: !7)
!7120 = !DILocation(line: 752, column: 9, scope: !7100)
!7121 = !DILocalVariable(name: "non_command_line_options", scope: !7100, file: !242, line: 753, type: !251)
!7122 = !DILocation(line: 753, column: 21, scope: !7100)
!7123 = !DILocation(line: 753, column: 49, scope: !7100)
!7124 = !DILocation(line: 753, column: 48, scope: !7100)
!7125 = !{i64 0, i64 4, !3652, i64 4, i64 4, !3652, i64 8, i64 4, !3652, i64 12, i64 4, !3652, i64 16, i64 4, !2980, i64 20, i64 1, !3104, i64 21, i64 1, !3104, i64 22, i64 1, !3104, i64 23, i64 1, !3104, i64 24, i64 1, !3104, i64 25, i64 1, !3104, i64 26, i64 1, !3104, i64 27, i64 1, !3104, i64 28, i64 1, !3104, i64 29, i64 1, !3104, i64 30, i64 1, !3104, i64 31, i64 1, !3104, i64 32, i64 1, !3104, i64 33, i64 1, !3104, i64 34, i64 1, !3104, i64 35, i64 1, !3104, i64 36, i64 1, !3104, i64 37, i64 1, !3104, i64 38, i64 1, !3104, i64 39, i64 1, !3104, i64 40, i64 1, !3104, i64 41, i64 1, !3104, i64 42, i64 1, !3104, i64 43, i64 1, !3104, i64 44, i64 1, !3104, i64 45, i64 1, !3104, i64 46, i64 1, !3104, i64 47, i64 1, !3104, i64 48, i64 1, !3104, i64 49, i64 1, !3104, i64 52, i64 4, !2980, i64 56, i64 4, !3652, i64 64, i64 8, !2993, i64 72, i64 8, !2993}
!7126 = !DILocalVariable(name: "ok", scope: !7100, file: !242, line: 754, type: !117)
!7127 = !DILocation(line: 754, column: 8, scope: !7100)
!7128 = !DILocation(line: 756, column: 25, scope: !7100)
!7129 = !DILocation(line: 756, column: 16, scope: !7100)
!7130 = !DILocation(line: 756, column: 14, scope: !7100)
!7131 = !DILocation(line: 757, column: 7, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7100, file: !242, line: 757, column: 7)
!7133 = !DILocation(line: 757, column: 18, scope: !7132)
!7134 = !DILocation(line: 757, column: 7, scope: !7100)
!7135 = !DILocation(line: 761, column: 17, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7132, file: !242, line: 758, column: 5)
!7137 = !DILocation(line: 761, column: 24, scope: !7136)
!7138 = !DILocation(line: 761, column: 47, scope: !7136)
!7139 = !DILocation(line: 761, column: 7, scope: !7136)
!7140 = !DILocation(line: 762, column: 7, scope: !7136)
!7141 = !DILocation(line: 767, column: 7, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7100, file: !242, line: 767, column: 7)
!7143 = !DILocation(line: 767, column: 10, scope: !7142)
!7144 = !DILocation(line: 767, column: 22, scope: !7142)
!7145 = !DILocation(line: 767, column: 7, scope: !7100)
!7146 = !DILocation(line: 768, column: 30, scope: !7142)
!7147 = !DILocation(line: 768, column: 42, scope: !7142)
!7148 = !DILocation(line: 768, column: 5, scope: !7142)
!7149 = !DILocalVariable(name: "new_first_dir_created", scope: !7100, file: !242, line: 770, type: !117)
!7150 = !DILocation(line: 770, column: 8, scope: !7100)
!7151 = !DILocation(line: 771, column: 11, scope: !7100)
!7152 = !DILocation(line: 771, column: 9, scope: !7100)
!7153 = !DILocation(line: 772, column: 3, scope: !7100)
!7154 = !DILocation(line: 772, column: 11, scope: !7100)
!7155 = !DILocation(line: 772, column: 10, scope: !7100)
!7156 = !DILocation(line: 772, column: 17, scope: !7100)
!7157 = !DILocalVariable(name: "local_copy_into_self", scope: !7158, file: !242, line: 774, type: !117)
!7158 = distinct !DILexicalBlock(scope: !7100, file: !242, line: 773, column: 5)
!7159 = !DILocation(line: 774, column: 12, scope: !7158)
!7160 = !DILocalVariable(name: "src_name", scope: !7158, file: !242, line: 775, type: !7)
!7161 = !DILocation(line: 775, column: 13, scope: !7158)
!7162 = !DILocation(line: 775, column: 42, scope: !7158)
!7163 = !DILocation(line: 775, column: 55, scope: !7158)
!7164 = !DILocation(line: 775, column: 24, scope: !7158)
!7165 = !DILocalVariable(name: "dst_name", scope: !7158, file: !242, line: 776, type: !7)
!7166 = !DILocation(line: 776, column: 13, scope: !7158)
!7167 = !DILocation(line: 776, column: 42, scope: !7158)
!7168 = !DILocation(line: 776, column: 55, scope: !7158)
!7169 = !DILocation(line: 776, column: 24, scope: !7158)
!7170 = !DILocalVariable(name: "first_dir_created", scope: !7158, file: !242, line: 777, type: !117)
!7171 = !DILocation(line: 777, column: 12, scope: !7158)
!7172 = !DILocation(line: 777, column: 33, scope: !7158)
!7173 = !DILocation(line: 777, column: 32, scope: !7158)
!7174 = !DILocation(line: 779, column: 28, scope: !7158)
!7175 = !DILocation(line: 779, column: 38, scope: !7158)
!7176 = !DILocation(line: 779, column: 48, scope: !7158)
!7177 = !DILocation(line: 779, column: 57, scope: !7158)
!7178 = !DILocation(line: 780, column: 28, scope: !7158)
!7179 = !DILocation(line: 779, column: 13, scope: !7158)
!7180 = !DILocation(line: 779, column: 10, scope: !7158)
!7181 = !DILocation(line: 783, column: 26, scope: !7158)
!7182 = !DILocation(line: 783, column: 8, scope: !7158)
!7183 = !DILocation(line: 783, column: 23, scope: !7158)
!7184 = !DILocation(line: 785, column: 13, scope: !7158)
!7185 = !DILocation(line: 785, column: 7, scope: !7158)
!7186 = !DILocation(line: 786, column: 13, scope: !7158)
!7187 = !DILocation(line: 786, column: 7, scope: !7158)
!7188 = !DILocation(line: 791, column: 11, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7158, file: !242, line: 791, column: 11)
!7190 = !DILocation(line: 791, column: 11, scope: !7158)
!7191 = !DILocation(line: 792, column: 9, scope: !7189)
!7192 = !DILocation(line: 794, column: 32, scope: !7158)
!7193 = !DILocation(line: 794, column: 29, scope: !7158)
!7194 = !DILocation(line: 795, column: 24, scope: !7158)
!7195 = !DILocation(line: 795, column: 16, scope: !7158)
!7196 = !DILocation(line: 795, column: 31, scope: !7158)
!7197 = !DILocation(line: 795, column: 13, scope: !7158)
!7198 = distinct !{!7198, !7153, !7199}
!7199 = !DILocation(line: 796, column: 5, scope: !7100)
!7200 = !DILocation(line: 797, column: 9, scope: !7100)
!7201 = !DILocation(line: 797, column: 3, scope: !7100)
!7202 = !DILocation(line: 798, column: 45, scope: !7100)
!7203 = !DILocation(line: 798, column: 4, scope: !7100)
!7204 = !DILocation(line: 798, column: 43, scope: !7100)
!7205 = !DILocation(line: 800, column: 10, scope: !7100)
!7206 = !DILocation(line: 800, column: 3, scope: !7100)
!7207 = !DILocation(line: 801, column: 1, scope: !7100)
!7208 = distinct !DISubprogram(name: "copy_reg", scope: !242, file: !242, line: 1052, type: !418, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7209 = !DILocalVariable(name: "src_name", arg: 1, scope: !7208, file: !242, line: 1052, type: !112)
!7210 = !DILocation(line: 1052, column: 23, scope: !7208)
!7211 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7208, file: !242, line: 1052, type: !112)
!7212 = !DILocation(line: 1052, column: 45, scope: !7208)
!7213 = !DILocalVariable(name: "x", arg: 3, scope: !7208, file: !242, line: 1053, type: !249)
!7214 = !DILocation(line: 1053, column: 36, scope: !7208)
!7215 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !7208, file: !242, line: 1054, type: !157)
!7216 = !DILocation(line: 1054, column: 18, scope: !7208)
!7217 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !7208, file: !242, line: 1054, type: !157)
!7218 = !DILocation(line: 1054, column: 35, scope: !7208)
!7219 = !DILocalVariable(name: "new_dst", arg: 6, scope: !7208, file: !242, line: 1054, type: !299)
!7220 = !DILocation(line: 1054, column: 62, scope: !7208)
!7221 = !DILocalVariable(name: "src_sb", arg: 7, scope: !7208, file: !242, line: 1055, type: !312)
!7222 = !DILocation(line: 1055, column: 30, scope: !7208)
!7223 = !DILocalVariable(name: "buf", scope: !7208, file: !242, line: 1057, type: !7)
!7224 = !DILocation(line: 1057, column: 9, scope: !7208)
!7225 = !DILocalVariable(name: "buf_alloc", scope: !7208, file: !242, line: 1058, type: !7)
!7226 = !DILocation(line: 1058, column: 9, scope: !7208)
!7227 = !DILocalVariable(name: "name_alloc", scope: !7208, file: !242, line: 1059, type: !7)
!7228 = !DILocation(line: 1059, column: 9, scope: !7208)
!7229 = !DILocalVariable(name: "dest_desc", scope: !7208, file: !242, line: 1060, type: !5)
!7230 = !DILocation(line: 1060, column: 7, scope: !7208)
!7231 = !DILocalVariable(name: "dest_errno", scope: !7208, file: !242, line: 1061, type: !5)
!7232 = !DILocation(line: 1061, column: 7, scope: !7208)
!7233 = !DILocalVariable(name: "source_desc", scope: !7208, file: !242, line: 1062, type: !5)
!7234 = !DILocation(line: 1062, column: 7, scope: !7208)
!7235 = !DILocalVariable(name: "src_mode", scope: !7208, file: !242, line: 1063, type: !157)
!7236 = !DILocation(line: 1063, column: 10, scope: !7208)
!7237 = !DILocation(line: 1063, column: 21, scope: !7208)
!7238 = !DILocation(line: 1063, column: 29, scope: !7208)
!7239 = !DILocalVariable(name: "sb", scope: !7208, file: !242, line: 1064, type: !314)
!7240 = !DILocation(line: 1064, column: 15, scope: !7208)
!7241 = !DILocalVariable(name: "src_open_sb", scope: !7208, file: !242, line: 1065, type: !314)
!7242 = !DILocation(line: 1065, column: 15, scope: !7208)
!7243 = !DILocalVariable(name: "return_val", scope: !7208, file: !242, line: 1066, type: !117)
!7244 = !DILocation(line: 1066, column: 8, scope: !7208)
!7245 = !DILocalVariable(name: "data_copy_required", scope: !7208, file: !242, line: 1067, type: !117)
!7246 = !DILocation(line: 1067, column: 8, scope: !7208)
!7247 = !DILocation(line: 1067, column: 29, scope: !7208)
!7248 = !DILocation(line: 1067, column: 32, scope: !7208)
!7249 = !DILocation(line: 1069, column: 23, scope: !7208)
!7250 = !DILocation(line: 1071, column: 27, scope: !7208)
!7251 = !DILocation(line: 1071, column: 30, scope: !7208)
!7252 = !DILocation(line: 1071, column: 42, scope: !7208)
!7253 = !DILocation(line: 1071, column: 24, scope: !7208)
!7254 = !DILocation(line: 1069, column: 17, scope: !7208)
!7255 = !DILocation(line: 1069, column: 15, scope: !7208)
!7256 = !DILocation(line: 1072, column: 7, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1072, column: 7)
!7258 = !DILocation(line: 1072, column: 19, scope: !7257)
!7259 = !DILocation(line: 1072, column: 7, scope: !7208)
!7260 = !DILocation(line: 1074, column: 17, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7257, file: !242, line: 1073, column: 5)
!7262 = !DILocation(line: 1074, column: 24, scope: !7261)
!7263 = !DILocation(line: 1074, column: 57, scope: !7261)
!7264 = !DILocation(line: 1074, column: 7, scope: !7261)
!7265 = !DILocation(line: 1075, column: 7, scope: !7261)
!7266 = !DILocation(line: 1078, column: 14, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1078, column: 7)
!7268 = !DILocation(line: 1078, column: 7, scope: !7267)
!7269 = !DILocation(line: 1078, column: 41, scope: !7267)
!7270 = !DILocation(line: 1078, column: 7, scope: !7208)
!7271 = !DILocation(line: 1080, column: 17, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7267, file: !242, line: 1079, column: 5)
!7273 = !DILocation(line: 1080, column: 24, scope: !7272)
!7274 = !DILocation(line: 1080, column: 46, scope: !7272)
!7275 = !DILocation(line: 1080, column: 7, scope: !7272)
!7276 = !DILocation(line: 1081, column: 18, scope: !7272)
!7277 = !DILocation(line: 1082, column: 7, scope: !7272)
!7278 = !DILocation(line: 1087, column: 9, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1087, column: 7)
!7280 = !DILocation(line: 1087, column: 7, scope: !7208)
!7281 = !DILocation(line: 1090, column: 14, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7279, file: !242, line: 1088, column: 5)
!7283 = !DILocation(line: 1091, column: 14, scope: !7282)
!7284 = !DILocation(line: 1089, column: 7, scope: !7282)
!7285 = !DILocation(line: 1092, column: 18, scope: !7282)
!7286 = !DILocation(line: 1093, column: 7, scope: !7282)
!7287 = !DILocation(line: 1098, column: 10, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1098, column: 7)
!7289 = !DILocation(line: 1098, column: 9, scope: !7288)
!7290 = !DILocation(line: 1098, column: 7, scope: !7208)
!7291 = !DILocalVariable(name: "open_flags", scope: !7292, file: !242, line: 1100, type: !5)
!7292 = distinct !DILexicalBlock(scope: !7288, file: !242, line: 1099, column: 5)
!7293 = !DILocation(line: 1100, column: 11, scope: !7292)
!7294 = !DILocation(line: 1101, column: 32, scope: !7292)
!7295 = !DILocation(line: 1101, column: 35, scope: !7292)
!7296 = !DILocation(line: 1101, column: 29, scope: !7292)
!7297 = !DILocation(line: 1102, column: 25, scope: !7292)
!7298 = !DILocation(line: 1102, column: 35, scope: !7292)
!7299 = !DILocation(line: 1102, column: 19, scope: !7292)
!7300 = !DILocation(line: 1102, column: 17, scope: !7292)
!7301 = !DILocation(line: 1103, column: 20, scope: !7292)
!7302 = !DILocation(line: 1103, column: 18, scope: !7292)
!7303 = !DILocation(line: 1112, column: 12, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7292, file: !242, line: 1112, column: 11)
!7305 = !DILocation(line: 1112, column: 15, scope: !7304)
!7306 = !DILocation(line: 1112, column: 36, scope: !7304)
!7307 = !DILocation(line: 1112, column: 39, scope: !7304)
!7308 = !DILocation(line: 1112, column: 42, scope: !7304)
!7309 = !DILocation(line: 1113, column: 11, scope: !7304)
!7310 = !DILocation(line: 1113, column: 19, scope: !7304)
!7311 = !DILocation(line: 1113, column: 16, scope: !7304)
!7312 = !DILocation(line: 1112, column: 11, scope: !7292)
!7313 = !DILocation(line: 1115, column: 40, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !242, line: 1115, column: 15)
!7315 = distinct !DILexicalBlock(scope: !7304, file: !242, line: 1114, column: 9)
!7316 = !DILocation(line: 1115, column: 50, scope: !7314)
!7317 = !DILocation(line: 1115, column: 53, scope: !7314)
!7318 = !DILocation(line: 1116, column: 47, scope: !7314)
!7319 = !DILocation(line: 1115, column: 17, scope: !7314)
!7320 = !DILocation(line: 1115, column: 15, scope: !7315)
!7321 = !DILocation(line: 1118, column: 19, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7323, file: !242, line: 1118, column: 19)
!7323 = distinct !DILexicalBlock(scope: !7314, file: !242, line: 1117, column: 13)
!7324 = !DILocation(line: 1118, column: 22, scope: !7322)
!7325 = !DILocation(line: 1118, column: 19, scope: !7323)
!7326 = !DILocation(line: 1120, column: 30, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7322, file: !242, line: 1119, column: 17)
!7328 = !DILocation(line: 1121, column: 19, scope: !7327)
!7329 = !DILocation(line: 1123, column: 13, scope: !7323)
!7330 = !DILocation(line: 1124, column: 9, scope: !7315)
!7331 = !DILocation(line: 1126, column: 11, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7292, file: !242, line: 1126, column: 11)
!7333 = !DILocation(line: 1126, column: 21, scope: !7332)
!7334 = !DILocation(line: 1126, column: 25, scope: !7332)
!7335 = !DILocation(line: 1126, column: 28, scope: !7332)
!7336 = !DILocation(line: 1126, column: 31, scope: !7332)
!7337 = !DILocation(line: 1126, column: 11, scope: !7292)
!7338 = !DILocation(line: 1128, column: 23, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7340, file: !242, line: 1128, column: 15)
!7340 = distinct !DILexicalBlock(scope: !7332, file: !242, line: 1127, column: 9)
!7341 = !DILocation(line: 1128, column: 15, scope: !7339)
!7342 = !DILocation(line: 1128, column: 33, scope: !7339)
!7343 = !DILocation(line: 1128, column: 15, scope: !7340)
!7344 = !DILocation(line: 1130, column: 25, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7339, file: !242, line: 1129, column: 13)
!7346 = !DILocation(line: 1130, column: 32, scope: !7345)
!7347 = !DILocation(line: 1130, column: 55, scope: !7345)
!7348 = !DILocation(line: 1130, column: 15, scope: !7345)
!7349 = !DILocation(line: 1131, column: 26, scope: !7345)
!7350 = !DILocation(line: 1132, column: 15, scope: !7345)
!7351 = !DILocation(line: 1134, column: 15, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7340, file: !242, line: 1134, column: 15)
!7353 = !DILocation(line: 1134, column: 18, scope: !7352)
!7354 = !DILocation(line: 1134, column: 15, scope: !7340)
!7355 = !DILocation(line: 1135, column: 21, scope: !7352)
!7356 = !DILocation(line: 1135, column: 40, scope: !7352)
!7357 = !DILocation(line: 1135, column: 13, scope: !7352)
!7358 = !DILocation(line: 1138, column: 12, scope: !7340)
!7359 = !DILocation(line: 1138, column: 20, scope: !7340)
!7360 = !DILocation(line: 1142, column: 15, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7340, file: !242, line: 1142, column: 15)
!7362 = !DILocation(line: 1142, column: 18, scope: !7361)
!7363 = !DILocation(line: 1142, column: 15, scope: !7340)
!7364 = !DILocation(line: 1144, column: 47, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !242, line: 1144, column: 19)
!7366 = distinct !DILexicalBlock(scope: !7361, file: !242, line: 1143, column: 13)
!7367 = !DILocation(line: 1144, column: 57, scope: !7365)
!7368 = !DILocation(line: 1144, column: 67, scope: !7365)
!7369 = !DILocation(line: 1145, column: 48, scope: !7365)
!7370 = !DILocation(line: 1145, column: 47, scope: !7365)
!7371 = !DILocation(line: 1145, column: 57, scope: !7365)
!7372 = !DILocation(line: 1144, column: 21, scope: !7365)
!7373 = !DILocation(line: 1144, column: 19, scope: !7366)
!7374 = !DILocation(line: 1147, column: 30, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7365, file: !242, line: 1146, column: 17)
!7376 = !DILocation(line: 1148, column: 19, scope: !7375)
!7377 = !DILocation(line: 1150, column: 13, scope: !7366)
!7378 = !DILocation(line: 1151, column: 9, scope: !7340)
!7379 = !DILocation(line: 1152, column: 5, scope: !7292)
!7380 = !DILocation(line: 1154, column: 8, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1154, column: 7)
!7382 = !DILocation(line: 1154, column: 7, scope: !7381)
!7383 = !DILocation(line: 1154, column: 7, scope: !7208)
!7384 = !DILocation(line: 1155, column: 5, scope: !7381)
!7385 = !DILabel(scope: !7386, name: "open_with_O_CREAT", file: !242, line: 1156)
!7386 = distinct !DILexicalBlock(scope: !7381, file: !242, line: 1155, column: 5)
!7387 = !DILocation(line: 1156, column: 5, scope: !7386)
!7388 = !DILocalVariable(name: "open_flags", scope: !7386, file: !242, line: 1158, type: !5)
!7389 = !DILocation(line: 1158, column: 11, scope: !7386)
!7390 = !DILocation(line: 1159, column: 25, scope: !7386)
!7391 = !DILocation(line: 1159, column: 35, scope: !7386)
!7392 = !DILocation(line: 1159, column: 46, scope: !7386)
!7393 = !DILocation(line: 1160, column: 25, scope: !7386)
!7394 = !DILocation(line: 1160, column: 37, scope: !7386)
!7395 = !DILocation(line: 1160, column: 36, scope: !7386)
!7396 = !DILocation(line: 1160, column: 34, scope: !7386)
!7397 = !DILocation(line: 1159, column: 19, scope: !7386)
!7398 = !DILocation(line: 1159, column: 17, scope: !7386)
!7399 = !DILocation(line: 1161, column: 20, scope: !7386)
!7400 = !DILocation(line: 1161, column: 18, scope: !7386)
!7401 = !DILocation(line: 1173, column: 11, scope: !7402)
!7402 = distinct !DILexicalBlock(scope: !7386, file: !242, line: 1173, column: 11)
!7403 = !DILocation(line: 1173, column: 21, scope: !7402)
!7404 = !DILocation(line: 1173, column: 25, scope: !7402)
!7405 = !DILocation(line: 1173, column: 28, scope: !7402)
!7406 = !DILocation(line: 1173, column: 39, scope: !7402)
!7407 = !DILocation(line: 1173, column: 49, scope: !7402)
!7408 = !DILocation(line: 1173, column: 54, scope: !7402)
!7409 = !DILocation(line: 1173, column: 57, scope: !7402)
!7410 = !DILocation(line: 1173, column: 11, scope: !7386)
!7411 = !DILocalVariable(name: "dangling_link_sb", scope: !7412, file: !242, line: 1175, type: !314)
!7412 = distinct !DILexicalBlock(scope: !7402, file: !242, line: 1174, column: 9)
!7413 = !DILocation(line: 1175, column: 23, scope: !7412)
!7414 = !DILocation(line: 1176, column: 22, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7412, file: !242, line: 1176, column: 15)
!7416 = !DILocation(line: 1176, column: 15, scope: !7415)
!7417 = !DILocation(line: 1176, column: 51, scope: !7415)
!7418 = !DILocation(line: 1177, column: 15, scope: !7415)
!7419 = !DILocation(line: 1177, column: 18, scope: !7415)
!7420 = !DILocation(line: 1176, column: 15, scope: !7412)
!7421 = !DILocation(line: 1179, column: 19, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7423, file: !242, line: 1179, column: 19)
!7423 = distinct !DILexicalBlock(scope: !7415, file: !242, line: 1178, column: 13)
!7424 = !DILocation(line: 1179, column: 22, scope: !7422)
!7425 = !DILocation(line: 1179, column: 19, scope: !7423)
!7426 = !DILocation(line: 1181, column: 37, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7422, file: !242, line: 1180, column: 17)
!7428 = !DILocation(line: 1181, column: 47, scope: !7427)
!7429 = !DILocation(line: 1182, column: 37, scope: !7427)
!7430 = !DILocation(line: 1182, column: 49, scope: !7427)
!7431 = !DILocation(line: 1182, column: 48, scope: !7427)
!7432 = !DILocation(line: 1182, column: 46, scope: !7427)
!7433 = !DILocation(line: 1181, column: 31, scope: !7427)
!7434 = !DILocation(line: 1181, column: 29, scope: !7427)
!7435 = !DILocation(line: 1183, column: 32, scope: !7427)
!7436 = !DILocation(line: 1183, column: 30, scope: !7427)
!7437 = !DILocation(line: 1184, column: 17, scope: !7427)
!7438 = !DILocation(line: 1187, column: 32, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7422, file: !242, line: 1186, column: 17)
!7440 = !DILocation(line: 1188, column: 26, scope: !7439)
!7441 = !DILocation(line: 1187, column: 19, scope: !7439)
!7442 = !DILocation(line: 1189, column: 30, scope: !7439)
!7443 = !DILocation(line: 1190, column: 19, scope: !7439)
!7444 = !DILocation(line: 1192, column: 13, scope: !7423)
!7445 = !DILocation(line: 1193, column: 9, scope: !7412)
!7446 = !DILocation(line: 1197, column: 11, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7386, file: !242, line: 1197, column: 11)
!7448 = !DILocation(line: 1197, column: 21, scope: !7447)
!7449 = !DILocation(line: 1197, column: 25, scope: !7447)
!7450 = !DILocation(line: 1197, column: 28, scope: !7447)
!7451 = !DILocation(line: 1197, column: 39, scope: !7447)
!7452 = !DILocation(line: 1198, column: 11, scope: !7447)
!7453 = !DILocation(line: 1198, column: 15, scope: !7447)
!7454 = !DILocation(line: 1198, column: 14, scope: !7447)
!7455 = !DILocation(line: 1198, column: 24, scope: !7447)
!7456 = !DILocation(line: 1198, column: 27, scope: !7447)
!7457 = !DILocation(line: 1198, column: 44, scope: !7447)
!7458 = !DILocation(line: 1198, column: 36, scope: !7447)
!7459 = !DILocation(line: 1198, column: 54, scope: !7447)
!7460 = !DILocation(line: 1198, column: 59, scope: !7447)
!7461 = !DILocation(line: 1197, column: 11, scope: !7386)
!7462 = !DILocation(line: 1199, column: 20, scope: !7447)
!7463 = !DILocation(line: 1199, column: 9, scope: !7447)
!7464 = !DILocation(line: 1200, column: 5, scope: !7386)
!7465 = !DILocation(line: 1203, column: 27, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7381, file: !242, line: 1202, column: 5)
!7467 = !DILocation(line: 1206, column: 7, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1206, column: 7)
!7469 = !DILocation(line: 1206, column: 17, scope: !7468)
!7470 = !DILocation(line: 1206, column: 7, scope: !7208)
!7471 = !DILocation(line: 1218, column: 11, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7473, file: !242, line: 1218, column: 11)
!7473 = distinct !DILexicalBlock(scope: !7468, file: !242, line: 1207, column: 5)
!7474 = !DILocation(line: 1218, column: 22, scope: !7472)
!7475 = !DILocation(line: 1218, column: 32, scope: !7472)
!7476 = !DILocation(line: 1218, column: 38, scope: !7472)
!7477 = !DILocation(line: 1218, column: 37, scope: !7472)
!7478 = !DILocation(line: 1218, column: 46, scope: !7472)
!7479 = !DILocation(line: 1218, column: 51, scope: !7472)
!7480 = !DILocation(line: 1218, column: 54, scope: !7472)
!7481 = !DILocation(line: 1218, column: 11, scope: !7473)
!7482 = !DILocation(line: 1220, column: 12, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7472, file: !242, line: 1219, column: 9)
!7484 = !DILocation(line: 1220, column: 20, scope: !7483)
!7485 = !DILocation(line: 1221, column: 11, scope: !7483)
!7486 = !DILocation(line: 1225, column: 17, scope: !7473)
!7487 = !DILocation(line: 1225, column: 29, scope: !7473)
!7488 = !DILocation(line: 1226, column: 14, scope: !7473)
!7489 = !DILocation(line: 1225, column: 7, scope: !7473)
!7490 = !DILocation(line: 1227, column: 18, scope: !7473)
!7491 = !DILocation(line: 1228, column: 7, scope: !7473)
!7492 = !DILocation(line: 1231, column: 14, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1231, column: 7)
!7494 = !DILocation(line: 1231, column: 7, scope: !7493)
!7495 = !DILocation(line: 1231, column: 30, scope: !7493)
!7496 = !DILocation(line: 1231, column: 7, scope: !7208)
!7497 = !DILocation(line: 1233, column: 17, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7493, file: !242, line: 1232, column: 5)
!7499 = !DILocation(line: 1233, column: 24, scope: !7498)
!7500 = !DILocation(line: 1233, column: 46, scope: !7498)
!7501 = !DILocation(line: 1233, column: 7, scope: !7498)
!7502 = !DILocation(line: 1234, column: 18, scope: !7498)
!7503 = !DILocation(line: 1235, column: 7, scope: !7498)
!7504 = !DILocation(line: 1239, column: 7, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1239, column: 7)
!7506 = !DILocation(line: 1239, column: 26, scope: !7505)
!7507 = !DILocation(line: 1239, column: 29, scope: !7505)
!7508 = !DILocation(line: 1239, column: 32, scope: !7505)
!7509 = !DILocation(line: 1239, column: 7, scope: !7208)
!7510 = !DILocalVariable(name: "clone_ok", scope: !7511, file: !242, line: 1241, type: !117)
!7511 = distinct !DILexicalBlock(scope: !7505, file: !242, line: 1240, column: 5)
!7512 = !DILocation(line: 1241, column: 12, scope: !7511)
!7513 = !DILocation(line: 1241, column: 35, scope: !7511)
!7514 = !DILocation(line: 1241, column: 46, scope: !7511)
!7515 = !DILocation(line: 1241, column: 23, scope: !7511)
!7516 = !DILocation(line: 1241, column: 59, scope: !7511)
!7517 = !DILocation(line: 1242, column: 11, scope: !7518)
!7518 = distinct !DILexicalBlock(scope: !7511, file: !242, line: 1242, column: 11)
!7519 = !DILocation(line: 1242, column: 20, scope: !7518)
!7520 = !DILocation(line: 1242, column: 23, scope: !7518)
!7521 = !DILocation(line: 1242, column: 26, scope: !7518)
!7522 = !DILocation(line: 1242, column: 39, scope: !7518)
!7523 = !DILocation(line: 1242, column: 11, scope: !7511)
!7524 = !DILocation(line: 1244, column: 16, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7526, file: !242, line: 1244, column: 15)
!7526 = distinct !DILexicalBlock(scope: !7518, file: !242, line: 1243, column: 9)
!7527 = !DILocation(line: 1244, column: 15, scope: !7526)
!7528 = !DILocation(line: 1246, column: 25, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7525, file: !242, line: 1245, column: 13)
!7530 = !DILocation(line: 1246, column: 32, scope: !7529)
!7531 = !DILocation(line: 1247, column: 22, scope: !7529)
!7532 = !DILocation(line: 1247, column: 47, scope: !7529)
!7533 = !DILocation(line: 1246, column: 15, scope: !7529)
!7534 = !DILocation(line: 1248, column: 26, scope: !7529)
!7535 = !DILocation(line: 1249, column: 15, scope: !7529)
!7536 = !DILocation(line: 1251, column: 30, scope: !7526)
!7537 = !DILocation(line: 1252, column: 9, scope: !7526)
!7538 = !DILocation(line: 1253, column: 5, scope: !7511)
!7539 = !DILocation(line: 1255, column: 7, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1255, column: 7)
!7541 = !DILocation(line: 1255, column: 7, scope: !7208)
!7542 = !DILocalVariable(name: "buf_alignment", scope: !7543, file: !242, line: 1258, type: !52)
!7543 = distinct !DILexicalBlock(scope: !7540, file: !242, line: 1256, column: 5)
!7544 = !DILocation(line: 1258, column: 14, scope: !7543)
!7545 = !DILocation(line: 1258, column: 30, scope: !7543)
!7546 = !DILocalVariable(name: "buf_size", scope: !7543, file: !242, line: 1259, type: !52)
!7547 = !DILocation(line: 1259, column: 14, scope: !7543)
!7548 = !DILocation(line: 1259, column: 25, scope: !7543)
!7549 = !DILocalVariable(name: "hole_size", scope: !7543, file: !242, line: 1260, type: !52)
!7550 = !DILocation(line: 1260, column: 14, scope: !7543)
!7551 = !DILocation(line: 1260, column: 26, scope: !7543)
!7552 = !{!3177, !3178, i64 56}
!7553 = !DILocation(line: 1262, column: 17, scope: !7543)
!7554 = !DILocation(line: 1262, column: 7, scope: !7543)
!7555 = !DILocalVariable(name: "make_holes", scope: !7543, file: !242, line: 1265, type: !117)
!7556 = !DILocation(line: 1265, column: 12, scope: !7543)
!7557 = !DILocalVariable(name: "sparse_src", scope: !7543, file: !242, line: 1266, type: !117)
!7558 = !DILocation(line: 1266, column: 12, scope: !7543)
!7559 = !DILocation(line: 1266, column: 25, scope: !7543)
!7560 = !DILocation(line: 1268, column: 11, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7543, file: !242, line: 1268, column: 11)
!7562 = !DILocation(line: 1268, column: 11, scope: !7543)
!7563 = !DILocation(line: 1272, column: 15, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7565, file: !242, line: 1272, column: 15)
!7565 = distinct !DILexicalBlock(scope: !7561, file: !242, line: 1269, column: 9)
!7566 = !DILocation(line: 1272, column: 18, scope: !7564)
!7567 = !DILocation(line: 1272, column: 30, scope: !7564)
!7568 = !DILocation(line: 1272, column: 15, scope: !7565)
!7569 = !DILocation(line: 1273, column: 24, scope: !7564)
!7570 = !DILocation(line: 1273, column: 13, scope: !7564)
!7571 = !DILocation(line: 1279, column: 15, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7565, file: !242, line: 1279, column: 15)
!7573 = !DILocation(line: 1279, column: 18, scope: !7572)
!7574 = !DILocation(line: 1279, column: 30, scope: !7572)
!7575 = !DILocation(line: 1279, column: 45, scope: !7572)
!7576 = !DILocation(line: 1279, column: 48, scope: !7572)
!7577 = !DILocation(line: 1279, column: 15, scope: !7565)
!7578 = !DILocation(line: 1280, column: 24, scope: !7572)
!7579 = !DILocation(line: 1280, column: 13, scope: !7572)
!7580 = !DILocation(line: 1281, column: 9, scope: !7565)
!7581 = !DILocation(line: 1285, column: 13, scope: !7582)
!7582 = distinct !DILexicalBlock(scope: !7543, file: !242, line: 1285, column: 11)
!7583 = !DILocation(line: 1285, column: 11, scope: !7543)
!7584 = !DILocalVariable(name: "blcm_max", scope: !7585, file: !242, line: 1289, type: !52)
!7585 = distinct !DILexicalBlock(scope: !7582, file: !242, line: 1286, column: 9)
!7586 = !DILocation(line: 1289, column: 18, scope: !7585)
!7587 = !DILocation(line: 1289, column: 57, scope: !7585)
!7588 = !DILocation(line: 1289, column: 55, scope: !7585)
!7589 = !DILocalVariable(name: "blcm", scope: !7585, file: !242, line: 1290, type: !52)
!7590 = !DILocation(line: 1290, column: 18, scope: !7585)
!7591 = !DILocation(line: 1290, column: 37, scope: !7585)
!7592 = !DILocation(line: 1290, column: 63, scope: !7585)
!7593 = !DILocation(line: 1291, column: 37, scope: !7585)
!7594 = !DILocation(line: 1290, column: 25, scope: !7585)
!7595 = !DILocation(line: 1295, column: 15, scope: !7596)
!7596 = distinct !DILexicalBlock(scope: !7585, file: !242, line: 1295, column: 15)
!7597 = !DILocation(line: 1295, column: 45, scope: !7596)
!7598 = !DILocation(line: 1295, column: 60, scope: !7596)
!7599 = !DILocation(line: 1295, column: 70, scope: !7596)
!7600 = !DILocation(line: 1295, column: 68, scope: !7596)
!7601 = !DILocation(line: 1295, column: 15, scope: !7585)
!7602 = !DILocation(line: 1296, column: 36, scope: !7596)
!7603 = !DILocation(line: 1296, column: 44, scope: !7596)
!7604 = !DILocation(line: 1296, column: 22, scope: !7596)
!7605 = !DILocation(line: 1296, column: 13, scope: !7596)
!7606 = !DILocation(line: 1301, column: 23, scope: !7585)
!7607 = !DILocation(line: 1301, column: 28, scope: !7585)
!7608 = !DILocation(line: 1301, column: 20, scope: !7585)
!7609 = !DILocation(line: 1302, column: 23, scope: !7585)
!7610 = !DILocation(line: 1302, column: 34, scope: !7585)
!7611 = !DILocation(line: 1302, column: 32, scope: !7585)
!7612 = !DILocation(line: 1302, column: 20, scope: !7585)
!7613 = !DILocation(line: 1303, column: 15, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7585, file: !242, line: 1303, column: 15)
!7615 = !DILocation(line: 1303, column: 24, scope: !7614)
!7616 = !DILocation(line: 1303, column: 29, scope: !7614)
!7617 = !DILocation(line: 1303, column: 32, scope: !7614)
!7618 = !DILocation(line: 1303, column: 43, scope: !7614)
!7619 = !DILocation(line: 1303, column: 41, scope: !7614)
!7620 = !DILocation(line: 1303, column: 15, scope: !7585)
!7621 = !DILocation(line: 1304, column: 24, scope: !7614)
!7622 = !DILocation(line: 1304, column: 22, scope: !7614)
!7623 = !DILocation(line: 1304, column: 13, scope: !7614)
!7624 = !DILocation(line: 1305, column: 9, scope: !7585)
!7625 = !DILocation(line: 1307, column: 28, scope: !7543)
!7626 = !DILocation(line: 1307, column: 39, scope: !7543)
!7627 = !DILocation(line: 1307, column: 37, scope: !7543)
!7628 = !DILocation(line: 1307, column: 19, scope: !7543)
!7629 = !DILocation(line: 1307, column: 17, scope: !7543)
!7630 = !DILocation(line: 1308, column: 24, scope: !7543)
!7631 = !DILocation(line: 1308, column: 35, scope: !7543)
!7632 = !DILocation(line: 1308, column: 13, scope: !7543)
!7633 = !DILocation(line: 1308, column: 11, scope: !7543)
!7634 = !DILocation(line: 1310, column: 11, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7543, file: !242, line: 1310, column: 11)
!7636 = !DILocation(line: 1310, column: 11, scope: !7543)
!7637 = !DILocalVariable(name: "normal_copy_required", scope: !7638, file: !242, line: 1312, type: !117)
!7638 = distinct !DILexicalBlock(scope: !7635, file: !242, line: 1311, column: 9)
!7639 = !DILocation(line: 1312, column: 16, scope: !7638)
!7640 = !DILocation(line: 1318, column: 28, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7638, file: !242, line: 1318, column: 15)
!7642 = !DILocation(line: 1318, column: 41, scope: !7641)
!7643 = !DILocation(line: 1318, column: 52, scope: !7641)
!7644 = !DILocation(line: 1318, column: 57, scope: !7641)
!7645 = !DILocation(line: 1318, column: 67, scope: !7641)
!7646 = !DILocation(line: 1319, column: 40, scope: !7641)
!7647 = !DILocation(line: 1320, column: 28, scope: !7641)
!7648 = !DILocation(line: 1320, column: 41, scope: !7641)
!7649 = !DILocation(line: 1320, column: 44, scope: !7641)
!7650 = !DILocation(line: 1321, column: 28, scope: !7641)
!7651 = !DILocation(line: 1321, column: 38, scope: !7641)
!7652 = !DILocation(line: 1318, column: 15, scope: !7641)
!7653 = !DILocation(line: 1318, column: 15, scope: !7638)
!7654 = !DILocation(line: 1322, column: 13, scope: !7641)
!7655 = !DILocation(line: 1324, column: 17, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7638, file: !242, line: 1324, column: 15)
!7657 = !DILocation(line: 1324, column: 15, scope: !7638)
!7658 = !DILocation(line: 1326, column: 26, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7656, file: !242, line: 1325, column: 13)
!7660 = !DILocation(line: 1327, column: 15, scope: !7659)
!7661 = !DILocation(line: 1329, column: 9, scope: !7638)
!7662 = !DILocalVariable(name: "n_read", scope: !7543, file: !242, line: 1331, type: !245)
!7663 = !DILocation(line: 1331, column: 13, scope: !7543)
!7664 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7543, file: !242, line: 1332, type: !117)
!7665 = !DILocation(line: 1332, column: 12, scope: !7543)
!7666 = !DILocation(line: 1333, column: 26, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7543, file: !242, line: 1333, column: 11)
!7668 = !DILocation(line: 1333, column: 39, scope: !7667)
!7669 = !DILocation(line: 1333, column: 50, scope: !7667)
!7670 = !DILocation(line: 1333, column: 55, scope: !7667)
!7671 = !DILocation(line: 1334, column: 26, scope: !7667)
!7672 = !DILocation(line: 1334, column: 39, scope: !7667)
!7673 = !DILocation(line: 1335, column: 26, scope: !7667)
!7674 = !DILocation(line: 1335, column: 29, scope: !7667)
!7675 = !DILocation(line: 1335, column: 41, scope: !7667)
!7676 = !DILocation(line: 1335, column: 59, scope: !7667)
!7677 = !DILocation(line: 1335, column: 69, scope: !7667)
!7678 = !DILocation(line: 1333, column: 13, scope: !7667)
!7679 = !DILocation(line: 1333, column: 11, scope: !7543)
!7680 = !DILocation(line: 1339, column: 22, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7667, file: !242, line: 1338, column: 9)
!7682 = !DILocation(line: 1340, column: 11, scope: !7681)
!7683 = !DILocation(line: 1342, column: 16, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7667, file: !242, line: 1342, column: 16)
!7685 = !DILocation(line: 1342, column: 34, scope: !7684)
!7686 = !DILocation(line: 1342, column: 48, scope: !7684)
!7687 = !DILocation(line: 1342, column: 59, scope: !7684)
!7688 = !DILocation(line: 1342, column: 37, scope: !7684)
!7689 = !DILocation(line: 1342, column: 67, scope: !7684)
!7690 = !DILocation(line: 1342, column: 16, scope: !7667)
!7691 = !DILocation(line: 1344, column: 21, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7684, file: !242, line: 1343, column: 9)
!7693 = !DILocation(line: 1344, column: 28, scope: !7692)
!7694 = !DILocation(line: 1344, column: 54, scope: !7692)
!7695 = !DILocation(line: 1344, column: 11, scope: !7692)
!7696 = !DILocation(line: 1345, column: 22, scope: !7692)
!7697 = !DILocation(line: 1346, column: 11, scope: !7692)
!7698 = !DILocation(line: 1348, column: 5, scope: !7543)
!7699 = !DILabel(scope: !7208, name: "preserve_metadata", file: !242, line: 1350)
!7700 = !DILocation(line: 1350, column: 1, scope: !7208)
!7701 = !DILocation(line: 1351, column: 7, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1351, column: 7)
!7703 = !DILocation(line: 1351, column: 10, scope: !7702)
!7704 = !DILocation(line: 1351, column: 7, scope: !7208)
!7705 = !DILocalVariable(name: "timespec", scope: !7706, file: !242, line: 1353, type: !354)
!7706 = distinct !DILexicalBlock(scope: !7702, file: !242, line: 1352, column: 5)
!7707 = !DILocation(line: 1353, column: 23, scope: !7706)
!7708 = !DILocation(line: 1354, column: 7, scope: !7706)
!7709 = !DILocation(line: 1354, column: 37, scope: !7706)
!7710 = !DILocation(line: 1354, column: 21, scope: !7706)
!7711 = !DILocation(line: 1355, column: 7, scope: !7706)
!7712 = !DILocation(line: 1355, column: 37, scope: !7706)
!7713 = !DILocation(line: 1355, column: 21, scope: !7706)
!7714 = !DILocation(line: 1357, column: 22, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7706, file: !242, line: 1357, column: 11)
!7716 = !DILocation(line: 1357, column: 33, scope: !7715)
!7717 = !DILocation(line: 1357, column: 43, scope: !7715)
!7718 = !DILocation(line: 1357, column: 11, scope: !7715)
!7719 = !DILocation(line: 1357, column: 53, scope: !7715)
!7720 = !DILocation(line: 1357, column: 11, scope: !7706)
!7721 = !DILocation(line: 1359, column: 21, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7715, file: !242, line: 1358, column: 9)
!7723 = !DILocation(line: 1359, column: 28, scope: !7722)
!7724 = !DILocation(line: 1359, column: 58, scope: !7722)
!7725 = !DILocation(line: 1359, column: 11, scope: !7722)
!7726 = !DILocation(line: 1360, column: 15, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7722, file: !242, line: 1360, column: 15)
!7728 = !DILocation(line: 1360, column: 18, scope: !7727)
!7729 = !DILocation(line: 1360, column: 15, scope: !7722)
!7730 = !DILocation(line: 1362, column: 26, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7727, file: !242, line: 1361, column: 13)
!7732 = !DILocation(line: 1363, column: 15, scope: !7731)
!7733 = !DILocation(line: 1365, column: 9, scope: !7722)
!7734 = !DILocation(line: 1366, column: 5, scope: !7706)
!7735 = !DILocation(line: 1370, column: 7, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1370, column: 7)
!7737 = !DILocation(line: 1370, column: 10, scope: !7736)
!7738 = !DILocation(line: 1370, column: 29, scope: !7736)
!7739 = !DILocation(line: 1370, column: 34, scope: !7736)
!7740 = !DILocation(line: 1370, column: 7, scope: !7208)
!7741 = !DILocation(line: 1372, column: 26, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7736, file: !242, line: 1371, column: 5)
!7743 = !DILocation(line: 1372, column: 29, scope: !7742)
!7744 = !DILocation(line: 1372, column: 39, scope: !7742)
!7745 = !DILocation(line: 1372, column: 50, scope: !7742)
!7746 = !DILocation(line: 1372, column: 59, scope: !7742)
!7747 = !DILocation(line: 1372, column: 58, scope: !7742)
!7748 = !DILocation(line: 1372, column: 15, scope: !7742)
!7749 = !DILocation(line: 1372, column: 7, scope: !7742)
!7750 = !DILocation(line: 1375, column: 22, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7742, file: !242, line: 1373, column: 9)
!7752 = !DILocation(line: 1376, column: 11, scope: !7751)
!7753 = !DILocation(line: 1379, column: 20, scope: !7751)
!7754 = !DILocation(line: 1380, column: 11, scope: !7751)
!7755 = !DILocation(line: 1382, column: 5, scope: !7742)
!7756 = !DILocation(line: 1387, column: 7, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1387, column: 7)
!7758 = !DILocation(line: 1387, column: 10, scope: !7757)
!7759 = !DILocation(line: 1387, column: 7, scope: !7208)
!7760 = !DILocalVariable(name: "access_changed", scope: !7761, file: !242, line: 1389, type: !117)
!7761 = distinct !DILexicalBlock(scope: !7757, file: !242, line: 1388, column: 5)
!7762 = !DILocation(line: 1389, column: 12, scope: !7761)
!7763 = !DILocation(line: 1391, column: 16, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !242, line: 1391, column: 11)
!7765 = !DILocation(line: 1391, column: 24, scope: !7764)
!7766 = !DILocation(line: 1391, column: 35, scope: !7764)
!7767 = !DILocation(line: 1391, column: 38, scope: !7764)
!7768 = !DILocation(line: 1391, column: 49, scope: !7764)
!7769 = !DILocation(line: 1391, column: 11, scope: !7761)
!7770 = !DILocation(line: 1393, column: 46, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7764, file: !242, line: 1392, column: 9)
!7772 = !DILocation(line: 1393, column: 57, scope: !7771)
!7773 = !DILocation(line: 1393, column: 28, scope: !7771)
!7774 = !DILocation(line: 1394, column: 65, scope: !7771)
!7775 = !DILocation(line: 1393, column: 26, scope: !7771)
!7776 = !DILocation(line: 1395, column: 9, scope: !7771)
!7777 = !DILocation(line: 1397, column: 23, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7761, file: !242, line: 1397, column: 11)
!7779 = !DILocation(line: 1397, column: 33, scope: !7778)
!7780 = !DILocation(line: 1397, column: 46, scope: !7778)
!7781 = !DILocation(line: 1397, column: 56, scope: !7778)
!7782 = !DILocation(line: 1397, column: 67, scope: !7778)
!7783 = !DILocation(line: 1397, column: 12, scope: !7778)
!7784 = !DILocation(line: 1398, column: 11, scope: !7778)
!7785 = !DILocation(line: 1398, column: 14, scope: !7778)
!7786 = !DILocation(line: 1398, column: 17, scope: !7778)
!7787 = !DILocation(line: 1397, column: 11, scope: !7761)
!7788 = !DILocation(line: 1399, column: 20, scope: !7778)
!7789 = !DILocation(line: 1399, column: 9, scope: !7778)
!7790 = !DILocation(line: 1401, column: 11, scope: !7791)
!7791 = distinct !DILexicalBlock(scope: !7761, file: !242, line: 1401, column: 11)
!7792 = !DILocation(line: 1401, column: 11, scope: !7761)
!7793 = !DILocation(line: 1402, column: 27, scope: !7791)
!7794 = !DILocation(line: 1402, column: 38, scope: !7791)
!7795 = !DILocation(line: 1402, column: 48, scope: !7791)
!7796 = !DILocation(line: 1402, column: 60, scope: !7791)
!7797 = !DILocation(line: 1402, column: 59, scope: !7791)
!7798 = !DILocation(line: 1402, column: 57, scope: !7791)
!7799 = !DILocation(line: 1402, column: 9, scope: !7791)
!7800 = !DILocation(line: 1403, column: 5, scope: !7761)
!7801 = !DILocation(line: 1405, column: 15, scope: !7208)
!7802 = !DILocation(line: 1405, column: 25, scope: !7208)
!7803 = !DILocation(line: 1405, column: 36, scope: !7208)
!7804 = !DILocation(line: 1405, column: 3, scope: !7208)
!7805 = !DILocation(line: 1407, column: 7, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1407, column: 7)
!7807 = !DILocation(line: 1407, column: 10, scope: !7806)
!7808 = !DILocation(line: 1407, column: 24, scope: !7806)
!7809 = !DILocation(line: 1407, column: 27, scope: !7806)
!7810 = !DILocation(line: 1407, column: 30, scope: !7806)
!7811 = !DILocation(line: 1407, column: 7, scope: !7208)
!7812 = !DILocation(line: 1409, column: 21, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !242, line: 1409, column: 11)
!7814 = distinct !DILexicalBlock(scope: !7806, file: !242, line: 1408, column: 5)
!7815 = !DILocation(line: 1409, column: 31, scope: !7813)
!7816 = !DILocation(line: 1409, column: 44, scope: !7813)
!7817 = !DILocation(line: 1409, column: 54, scope: !7813)
!7818 = !DILocation(line: 1409, column: 65, scope: !7813)
!7819 = !DILocation(line: 1409, column: 11, scope: !7813)
!7820 = !DILocation(line: 1409, column: 75, scope: !7813)
!7821 = !DILocation(line: 1410, column: 11, scope: !7813)
!7822 = !DILocation(line: 1410, column: 14, scope: !7813)
!7823 = !DILocation(line: 1410, column: 17, scope: !7813)
!7824 = !DILocation(line: 1409, column: 11, scope: !7814)
!7825 = !DILocation(line: 1411, column: 20, scope: !7813)
!7826 = !DILocation(line: 1411, column: 9, scope: !7813)
!7827 = !DILocation(line: 1412, column: 5, scope: !7814)
!7828 = !DILocation(line: 1413, column: 12, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7806, file: !242, line: 1413, column: 12)
!7830 = !DILocation(line: 1413, column: 15, scope: !7829)
!7831 = !DILocation(line: 1413, column: 12, scope: !7806)
!7832 = !DILocation(line: 1415, column: 20, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7834, file: !242, line: 1415, column: 11)
!7834 = distinct !DILexicalBlock(scope: !7829, file: !242, line: 1414, column: 5)
!7835 = !DILocation(line: 1415, column: 30, scope: !7833)
!7836 = !DILocation(line: 1415, column: 41, scope: !7833)
!7837 = !DILocation(line: 1415, column: 44, scope: !7833)
!7838 = !DILocation(line: 1415, column: 11, scope: !7833)
!7839 = !DILocation(line: 1415, column: 50, scope: !7833)
!7840 = !DILocation(line: 1415, column: 11, scope: !7834)
!7841 = !DILocation(line: 1416, column: 20, scope: !7833)
!7842 = !DILocation(line: 1416, column: 9, scope: !7833)
!7843 = !DILocation(line: 1417, column: 5, scope: !7834)
!7844 = !DILocation(line: 1418, column: 12, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7829, file: !242, line: 1418, column: 12)
!7846 = !DILocation(line: 1418, column: 15, scope: !7845)
!7847 = !DILocation(line: 1418, column: 41, scope: !7845)
!7848 = !DILocation(line: 1418, column: 45, scope: !7845)
!7849 = !DILocation(line: 1418, column: 44, scope: !7845)
!7850 = !DILocation(line: 1418, column: 12, scope: !7829)
!7851 = !DILocation(line: 1420, column: 20, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7853, file: !242, line: 1420, column: 11)
!7853 = distinct !DILexicalBlock(scope: !7845, file: !242, line: 1419, column: 5)
!7854 = !DILocation(line: 1420, column: 30, scope: !7852)
!7855 = !DILocation(line: 1420, column: 56, scope: !7852)
!7856 = !DILocation(line: 1420, column: 55, scope: !7852)
!7857 = !DILocation(line: 1420, column: 53, scope: !7852)
!7858 = !DILocation(line: 1420, column: 11, scope: !7852)
!7859 = !DILocation(line: 1420, column: 73, scope: !7852)
!7860 = !DILocation(line: 1420, column: 11, scope: !7853)
!7861 = !DILocation(line: 1421, column: 20, scope: !7852)
!7862 = !DILocation(line: 1421, column: 9, scope: !7852)
!7863 = !DILocation(line: 1422, column: 5, scope: !7853)
!7864 = !DILocation(line: 1423, column: 12, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7845, file: !242, line: 1423, column: 12)
!7866 = !DILocation(line: 1423, column: 12, scope: !7845)
!7867 = !DILocation(line: 1425, column: 32, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7865, file: !242, line: 1424, column: 5)
!7869 = !DILocation(line: 1425, column: 30, scope: !7868)
!7870 = !DILocation(line: 1425, column: 27, scope: !7868)
!7871 = !DILocation(line: 1426, column: 11, scope: !7872)
!7872 = distinct !DILexicalBlock(scope: !7868, file: !242, line: 1426, column: 11)
!7873 = !DILocation(line: 1427, column: 11, scope: !7872)
!7874 = !DILocation(line: 1427, column: 32, scope: !7872)
!7875 = !DILocation(line: 1427, column: 43, scope: !7872)
!7876 = !DILocation(line: 1427, column: 53, scope: !7872)
!7877 = !DILocation(line: 1427, column: 14, scope: !7872)
!7878 = !DILocation(line: 1427, column: 63, scope: !7872)
!7879 = !DILocation(line: 1426, column: 11, scope: !7868)
!7880 = !DILocation(line: 1429, column: 21, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7872, file: !242, line: 1428, column: 9)
!7882 = !DILocation(line: 1429, column: 28, scope: !7881)
!7883 = !DILocation(line: 1430, column: 18, scope: !7881)
!7884 = !DILocation(line: 1429, column: 11, scope: !7881)
!7885 = !DILocation(line: 1431, column: 15, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7881, file: !242, line: 1431, column: 15)
!7887 = !DILocation(line: 1431, column: 18, scope: !7886)
!7888 = !DILocation(line: 1431, column: 15, scope: !7881)
!7889 = !DILocation(line: 1432, column: 24, scope: !7886)
!7890 = !DILocation(line: 1432, column: 13, scope: !7886)
!7891 = !DILocation(line: 1433, column: 9, scope: !7881)
!7892 = !DILocation(line: 1434, column: 5, scope: !7868)
!7893 = !DILabel(scope: !7208, name: "close_src_and_dst_desc", file: !242, line: 1436)
!7894 = !DILocation(line: 1436, column: 1, scope: !7208)
!7895 = !DILocation(line: 1437, column: 14, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1437, column: 7)
!7897 = !DILocation(line: 1437, column: 7, scope: !7896)
!7898 = !DILocation(line: 1437, column: 25, scope: !7896)
!7899 = !DILocation(line: 1437, column: 7, scope: !7208)
!7900 = !DILocation(line: 1439, column: 17, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7896, file: !242, line: 1438, column: 5)
!7902 = !DILocation(line: 1439, column: 24, scope: !7901)
!7903 = !DILocation(line: 1439, column: 49, scope: !7901)
!7904 = !DILocation(line: 1439, column: 7, scope: !7901)
!7905 = !DILocation(line: 1440, column: 18, scope: !7901)
!7906 = !DILocation(line: 1441, column: 5, scope: !7901)
!7907 = !DILocation(line: 1437, column: 27, scope: !7896)
!7908 = !DILabel(scope: !7208, name: "close_src_desc", file: !242, line: 1442)
!7909 = !DILocation(line: 1442, column: 1, scope: !7208)
!7910 = !DILocation(line: 1443, column: 14, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7208, file: !242, line: 1443, column: 7)
!7912 = !DILocation(line: 1443, column: 7, scope: !7911)
!7913 = !DILocation(line: 1443, column: 27, scope: !7911)
!7914 = !DILocation(line: 1443, column: 7, scope: !7208)
!7915 = !DILocation(line: 1445, column: 17, scope: !7916)
!7916 = distinct !DILexicalBlock(scope: !7911, file: !242, line: 1444, column: 5)
!7917 = !DILocation(line: 1445, column: 24, scope: !7916)
!7918 = !DILocation(line: 1445, column: 49, scope: !7916)
!7919 = !DILocation(line: 1445, column: 7, scope: !7916)
!7920 = !DILocation(line: 1446, column: 18, scope: !7916)
!7921 = !DILocation(line: 1447, column: 5, scope: !7916)
!7922 = !DILocation(line: 1449, column: 9, scope: !7208)
!7923 = !DILocation(line: 1449, column: 3, scope: !7208)
!7924 = !DILocation(line: 1450, column: 9, scope: !7208)
!7925 = !DILocation(line: 1450, column: 3, scope: !7208)
!7926 = !DILocation(line: 1451, column: 10, scope: !7208)
!7927 = !DILocation(line: 1451, column: 3, scope: !7208)
!7928 = !DILocation(line: 1452, column: 1, scope: !7208)
!7929 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !242, file: !242, line: 1805, type: !131, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7930 = !DILocation(line: 1807, column: 7, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7929, file: !242, line: 1807, column: 7)
!7932 = !DILocation(line: 1807, column: 29, scope: !7931)
!7933 = !DILocation(line: 1807, column: 7, scope: !7929)
!7934 = !DILocation(line: 1808, column: 5, scope: !7931)
!7935 = !DILocation(line: 1810, column: 1, scope: !7929)
!7936 = distinct !DISubprogram(name: "chown_failure_ok", scope: !242, file: !242, line: 3061, type: !300, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7937 = !DILocalVariable(name: "x", arg: 1, scope: !7936, file: !242, line: 3061, type: !249)
!7938 = !DILocation(line: 3061, column: 44, scope: !7936)
!7939 = !DILocation(line: 3067, column: 12, scope: !7936)
!7940 = !DILocation(line: 3067, column: 18, scope: !7936)
!7941 = !DILocation(line: 3067, column: 27, scope: !7936)
!7942 = !DILocation(line: 3067, column: 30, scope: !7936)
!7943 = !DILocation(line: 3067, column: 36, scope: !7936)
!7944 = !DILocation(line: 3067, column: 47, scope: !7936)
!7945 = !DILocation(line: 3067, column: 51, scope: !7936)
!7946 = !DILocation(line: 3067, column: 54, scope: !7936)
!7947 = !{!3151, !3105, i64 26}
!7948 = !DILocation(line: 3067, column: 50, scope: !7936)
!7949 = !DILocation(line: 0, scope: !7936)
!7950 = !DILocation(line: 3067, column: 3, scope: !7936)
!7951 = distinct !DISubprogram(name: "utimens_symlink", scope: !242, file: !242, line: 189, type: !471, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7952 = !DILocalVariable(name: "file", arg: 1, scope: !7951, file: !242, line: 189, type: !112)
!7953 = !DILocation(line: 189, column: 30, scope: !7951)
!7954 = !DILocalVariable(name: "timespec", arg: 2, scope: !7951, file: !242, line: 189, type: !473)
!7955 = !DILocation(line: 189, column: 59, scope: !7951)
!7956 = !DILocalVariable(name: "err", scope: !7951, file: !242, line: 191, type: !5)
!7957 = !DILocation(line: 191, column: 7, scope: !7951)
!7958 = !DILocation(line: 191, column: 23, scope: !7951)
!7959 = !DILocation(line: 191, column: 29, scope: !7951)
!7960 = !DILocation(line: 191, column: 13, scope: !7951)
!7961 = !DILocation(line: 195, column: 7, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7951, file: !242, line: 195, column: 7)
!7963 = !DILocation(line: 195, column: 11, scope: !7962)
!7964 = !DILocation(line: 195, column: 14, scope: !7962)
!7965 = !DILocation(line: 195, column: 20, scope: !7962)
!7966 = !DILocation(line: 195, column: 7, scope: !7951)
!7967 = !DILocation(line: 196, column: 9, scope: !7962)
!7968 = !DILocation(line: 196, column: 5, scope: !7962)
!7969 = !DILocation(line: 197, column: 10, scope: !7951)
!7970 = !DILocation(line: 197, column: 3, scope: !7951)
!7971 = distinct !DISubprogram(name: "set_owner", scope: !242, file: !242, line: 816, type: !475, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!7972 = !DILocalVariable(name: "x", arg: 1, scope: !7971, file: !242, line: 816, type: !249)
!7973 = !DILocation(line: 816, column: 37, scope: !7971)
!7974 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7971, file: !242, line: 816, type: !112)
!7975 = !DILocation(line: 816, column: 52, scope: !7971)
!7976 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !7971, file: !242, line: 816, type: !5)
!7977 = !DILocation(line: 816, column: 66, scope: !7971)
!7978 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7971, file: !242, line: 817, type: !312)
!7979 = !DILocation(line: 817, column: 31, scope: !7971)
!7980 = !DILocalVariable(name: "new_dst", arg: 5, scope: !7971, file: !242, line: 817, type: !117)
!7981 = !DILocation(line: 817, column: 44, scope: !7971)
!7982 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !7971, file: !242, line: 818, type: !312)
!7983 = !DILocation(line: 818, column: 31, scope: !7971)
!7984 = !DILocalVariable(name: "uid", scope: !7971, file: !242, line: 820, type: !477)
!7985 = !DILocation(line: 820, column: 9, scope: !7971)
!7986 = !DILocation(line: 820, column: 15, scope: !7971)
!7987 = !DILocation(line: 820, column: 23, scope: !7971)
!7988 = !DILocalVariable(name: "gid", scope: !7971, file: !242, line: 821, type: !478)
!7989 = !DILocation(line: 821, column: 9, scope: !7971)
!7990 = !DILocation(line: 821, column: 15, scope: !7971)
!7991 = !DILocation(line: 821, column: 23, scope: !7971)
!7992 = !DILocation(line: 829, column: 8, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7971, file: !242, line: 829, column: 7)
!7994 = !DILocation(line: 829, column: 16, scope: !7993)
!7995 = !DILocation(line: 829, column: 20, scope: !7993)
!7996 = !DILocation(line: 829, column: 23, scope: !7993)
!7997 = !DILocation(line: 829, column: 37, scope: !7993)
!7998 = !DILocation(line: 829, column: 40, scope: !7993)
!7999 = !DILocation(line: 829, column: 43, scope: !7993)
!8000 = !DILocation(line: 829, column: 53, scope: !7993)
!8001 = !DILocation(line: 829, column: 56, scope: !7993)
!8002 = !DILocation(line: 829, column: 59, scope: !7993)
!8003 = !DILocation(line: 829, column: 7, scope: !7971)
!8004 = !DILocalVariable(name: "old_mode", scope: !8005, file: !242, line: 831, type: !157)
!8005 = distinct !DILexicalBlock(scope: !7993, file: !242, line: 830, column: 5)
!8006 = !DILocation(line: 831, column: 14, scope: !8005)
!8007 = !DILocation(line: 831, column: 25, scope: !8005)
!8008 = !DILocation(line: 831, column: 33, scope: !8005)
!8009 = !DILocalVariable(name: "new_mode", scope: !8005, file: !242, line: 832, type: !157)
!8010 = !DILocation(line: 832, column: 14, scope: !8005)
!8011 = !DILocation(line: 833, column: 10, scope: !8005)
!8012 = !DILocation(line: 833, column: 13, scope: !8005)
!8013 = !DILocation(line: 833, column: 27, scope: !8005)
!8014 = !DILocation(line: 833, column: 30, scope: !8005)
!8015 = !DILocation(line: 833, column: 33, scope: !8005)
!8016 = !DILocation(line: 833, column: 45, scope: !8005)
!8017 = !DILocation(line: 833, column: 53, scope: !8005)
!8018 = !DILocation(line: 833, column: 63, scope: !8005)
!8019 = !DILocation(line: 833, column: 66, scope: !8005)
!8020 = !DILocalVariable(name: "restrictive_temp_mode", scope: !8005, file: !242, line: 834, type: !157)
!8021 = !DILocation(line: 834, column: 14, scope: !8005)
!8022 = !DILocation(line: 834, column: 38, scope: !8005)
!8023 = !DILocation(line: 834, column: 49, scope: !8005)
!8024 = !DILocation(line: 834, column: 47, scope: !8005)
!8025 = !DILocation(line: 834, column: 58, scope: !8005)
!8026 = !DILocation(line: 837, column: 16, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8005, file: !242, line: 836, column: 11)
!8028 = !DILocation(line: 837, column: 25, scope: !8027)
!8029 = !DILocation(line: 838, column: 20, scope: !8027)
!8030 = !DILocation(line: 838, column: 19, scope: !8027)
!8031 = !DILocation(line: 838, column: 29, scope: !8027)
!8032 = !DILocation(line: 838, column: 39, scope: !8027)
!8033 = !DILocation(line: 838, column: 49, scope: !8027)
!8034 = !DILocation(line: 838, column: 16, scope: !8027)
!8035 = !DILocation(line: 839, column: 11, scope: !8027)
!8036 = !DILocation(line: 839, column: 24, scope: !8027)
!8037 = !DILocation(line: 839, column: 34, scope: !8027)
!8038 = !DILocation(line: 839, column: 45, scope: !8027)
!8039 = !DILocation(line: 839, column: 14, scope: !8027)
!8040 = !DILocation(line: 839, column: 68, scope: !8027)
!8041 = !DILocation(line: 836, column: 11, scope: !8005)
!8042 = !DILocation(line: 841, column: 35, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8044, file: !242, line: 841, column: 15)
!8044 = distinct !DILexicalBlock(scope: !8027, file: !242, line: 840, column: 9)
!8045 = !DILocation(line: 841, column: 17, scope: !8043)
!8046 = !DILocation(line: 841, column: 15, scope: !8044)
!8047 = !DILocation(line: 842, column: 23, scope: !8043)
!8048 = !DILocation(line: 842, column: 30, scope: !8043)
!8049 = !DILocation(line: 843, column: 20, scope: !8043)
!8050 = !DILocation(line: 842, column: 13, scope: !8043)
!8051 = !DILocation(line: 844, column: 19, scope: !8044)
!8052 = !DILocation(line: 844, column: 22, scope: !8044)
!8053 = !DILocation(line: 844, column: 18, scope: !8044)
!8054 = !DILocation(line: 844, column: 11, scope: !8044)
!8055 = !DILocation(line: 846, column: 5, scope: !8005)
!8056 = !DILocation(line: 848, column: 22, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !7971, file: !242, line: 848, column: 7)
!8058 = !DILocation(line: 848, column: 32, scope: !8057)
!8059 = !DILocation(line: 848, column: 7, scope: !7971)
!8060 = !DILocation(line: 850, column: 19, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !242, line: 850, column: 11)
!8062 = distinct !DILexicalBlock(scope: !8057, file: !242, line: 849, column: 5)
!8063 = !DILocation(line: 850, column: 30, scope: !8061)
!8064 = !DILocation(line: 850, column: 35, scope: !8061)
!8065 = !DILocation(line: 850, column: 11, scope: !8061)
!8066 = !DILocation(line: 850, column: 40, scope: !8061)
!8067 = !DILocation(line: 850, column: 11, scope: !8062)
!8068 = !DILocation(line: 851, column: 9, scope: !8061)
!8069 = !DILocation(line: 852, column: 11, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8062, file: !242, line: 852, column: 11)
!8071 = !DILocation(line: 852, column: 17, scope: !8070)
!8072 = !DILocation(line: 852, column: 26, scope: !8070)
!8073 = !DILocation(line: 852, column: 29, scope: !8070)
!8074 = !DILocation(line: 852, column: 35, scope: !8070)
!8075 = !DILocation(line: 852, column: 11, scope: !8062)
!8076 = !DILocalVariable(name: "saved_errno", scope: !8077, file: !242, line: 856, type: !5)
!8077 = distinct !DILexicalBlock(scope: !8070, file: !242, line: 853, column: 9)
!8078 = !DILocation(line: 856, column: 15, scope: !8077)
!8079 = !DILocation(line: 856, column: 29, scope: !8077)
!8080 = !DILocalVariable(name: "__x", scope: !8081, file: !242, line: 857, type: !5)
!8081 = distinct !DILexicalBlock(scope: !8077, file: !242, line: 857, column: 11)
!8082 = !DILocation(line: 857, column: 11, scope: !8081)
!8083 = !DILocation(line: 858, column: 19, scope: !8077)
!8084 = !DILocation(line: 858, column: 11, scope: !8077)
!8085 = !DILocation(line: 858, column: 17, scope: !8077)
!8086 = !DILocation(line: 859, column: 9, scope: !8077)
!8087 = !DILocation(line: 860, column: 5, scope: !8062)
!8088 = !DILocation(line: 863, column: 19, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !8090, file: !242, line: 863, column: 11)
!8090 = distinct !DILexicalBlock(scope: !8057, file: !242, line: 862, column: 5)
!8091 = !DILocation(line: 863, column: 29, scope: !8089)
!8092 = !DILocation(line: 863, column: 34, scope: !8089)
!8093 = !DILocation(line: 863, column: 11, scope: !8089)
!8094 = !DILocation(line: 863, column: 39, scope: !8089)
!8095 = !DILocation(line: 863, column: 11, scope: !8090)
!8096 = !DILocation(line: 864, column: 9, scope: !8089)
!8097 = !DILocation(line: 865, column: 11, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8090, file: !242, line: 865, column: 11)
!8099 = !DILocation(line: 865, column: 17, scope: !8098)
!8100 = !DILocation(line: 865, column: 26, scope: !8098)
!8101 = !DILocation(line: 865, column: 29, scope: !8098)
!8102 = !DILocation(line: 865, column: 35, scope: !8098)
!8103 = !DILocation(line: 865, column: 11, scope: !8090)
!8104 = !DILocalVariable(name: "saved_errno", scope: !8105, file: !242, line: 869, type: !5)
!8105 = distinct !DILexicalBlock(scope: !8098, file: !242, line: 866, column: 9)
!8106 = !DILocation(line: 869, column: 15, scope: !8105)
!8107 = !DILocation(line: 869, column: 29, scope: !8105)
!8108 = !DILocalVariable(name: "__x", scope: !8109, file: !242, line: 870, type: !5)
!8109 = distinct !DILexicalBlock(scope: !8105, file: !242, line: 870, column: 11)
!8110 = !DILocation(line: 870, column: 11, scope: !8109)
!8111 = !DILocation(line: 871, column: 19, scope: !8105)
!8112 = !DILocation(line: 871, column: 11, scope: !8105)
!8113 = !DILocation(line: 871, column: 17, scope: !8105)
!8114 = !DILocation(line: 872, column: 9, scope: !8105)
!8115 = !DILocation(line: 875, column: 27, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !7971, file: !242, line: 875, column: 7)
!8117 = !DILocation(line: 875, column: 9, scope: !8116)
!8118 = !DILocation(line: 875, column: 7, scope: !7971)
!8119 = !DILocation(line: 877, column: 17, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8116, file: !242, line: 876, column: 5)
!8121 = !DILocation(line: 877, column: 24, scope: !8120)
!8122 = !DILocation(line: 878, column: 14, scope: !8120)
!8123 = !DILocation(line: 877, column: 7, scope: !8120)
!8124 = !DILocation(line: 879, column: 11, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8120, file: !242, line: 879, column: 11)
!8126 = !DILocation(line: 879, column: 14, scope: !8125)
!8127 = !DILocation(line: 879, column: 11, scope: !8120)
!8128 = !DILocation(line: 880, column: 9, scope: !8125)
!8129 = !DILocation(line: 881, column: 5, scope: !8120)
!8130 = !DILocation(line: 883, column: 3, scope: !7971)
!8131 = !DILocation(line: 884, column: 1, scope: !7971)
!8132 = distinct !DISubprogram(name: "copy_attr", scope: !242, file: !242, line: 722, type: !479, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8133 = !DILocalVariable(name: "src_path", arg: 1, scope: !8132, file: !242, line: 722, type: !112)
!8134 = !DILocation(line: 722, column: 24, scope: !8132)
!8135 = !DILocalVariable(name: "src_fd", arg: 2, scope: !8132, file: !242, line: 723, type: !5)
!8136 = !DILocation(line: 723, column: 16, scope: !8132)
!8137 = !DILocalVariable(name: "dst_path", arg: 3, scope: !8132, file: !242, line: 724, type: !112)
!8138 = !DILocation(line: 724, column: 24, scope: !8132)
!8139 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !8132, file: !242, line: 725, type: !5)
!8140 = !DILocation(line: 725, column: 16, scope: !8132)
!8141 = !DILocalVariable(name: "x", arg: 5, scope: !8132, file: !242, line: 726, type: !249)
!8142 = !DILocation(line: 726, column: 37, scope: !8132)
!8143 = !DILocation(line: 728, column: 3, scope: !8132)
!8144 = distinct !DISubprogram(name: "set_author", scope: !242, file: !242, line: 892, type: !481, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8145 = !DILocalVariable(name: "dst_name", arg: 1, scope: !8144, file: !242, line: 892, type: !112)
!8146 = !DILocation(line: 892, column: 25, scope: !8144)
!8147 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !8144, file: !242, line: 892, type: !5)
!8148 = !DILocation(line: 892, column: 39, scope: !8144)
!8149 = !DILocalVariable(name: "src_sb", arg: 3, scope: !8144, file: !242, line: 892, type: !312)
!8150 = !DILocation(line: 892, column: 69, scope: !8144)
!8151 = !DILocation(line: 913, column: 10, scope: !8144)
!8152 = !DILocation(line: 914, column: 10, scope: !8144)
!8153 = !DILocation(line: 915, column: 10, scope: !8144)
!8154 = !DILocation(line: 917, column: 1, scope: !8144)
!8155 = !DILocation(line: 3090, column: 7, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !486, file: !242, line: 3090, column: 7)
!8157 = !DILocation(line: 3090, column: 12, scope: !8156)
!8158 = !DILocation(line: 3090, column: 7, scope: !486)
!8159 = !DILocation(line: 3092, column: 14, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !242, line: 3091, column: 5)
!8161 = !DILocation(line: 3092, column: 12, scope: !8160)
!8162 = !DILocation(line: 3093, column: 14, scope: !8160)
!8163 = !DILocation(line: 3093, column: 7, scope: !8160)
!8164 = !DILocation(line: 3094, column: 5, scope: !8160)
!8165 = !DILocation(line: 3095, column: 10, scope: !486)
!8166 = !DILocation(line: 3095, column: 3, scope: !486)
!8167 = distinct !DISubprogram(name: "owner_failure_ok", scope: !242, file: !242, line: 3075, type: !300, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8168 = !DILocalVariable(name: "x", arg: 1, scope: !8167, file: !242, line: 3075, type: !249)
!8169 = !DILocation(line: 3075, column: 44, scope: !8167)
!8170 = !DILocation(line: 3077, column: 12, scope: !8167)
!8171 = !DILocation(line: 3077, column: 18, scope: !8167)
!8172 = !DILocation(line: 3077, column: 27, scope: !8167)
!8173 = !DILocation(line: 3077, column: 30, scope: !8167)
!8174 = !DILocation(line: 3077, column: 36, scope: !8167)
!8175 = !DILocation(line: 3077, column: 47, scope: !8167)
!8176 = !DILocation(line: 3077, column: 51, scope: !8167)
!8177 = !DILocation(line: 3077, column: 54, scope: !8167)
!8178 = !{!3151, !3105, i64 27}
!8179 = !DILocation(line: 3077, column: 50, scope: !8167)
!8180 = !DILocation(line: 0, scope: !8167)
!8181 = !DILocation(line: 3077, column: 3, scope: !8167)
!8182 = distinct !DISubprogram(name: "clone_file", scope: !242, file: !242, line: 370, type: !420, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8183 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !8182, file: !242, line: 370, type: !5)
!8184 = !DILocation(line: 370, column: 17, scope: !8182)
!8185 = !DILocalVariable(name: "src_fd", arg: 2, scope: !8182, file: !242, line: 370, type: !5)
!8186 = !DILocation(line: 370, column: 30, scope: !8182)
!8187 = !DILocation(line: 373, column: 17, scope: !8182)
!8188 = !DILocation(line: 373, column: 35, scope: !8182)
!8189 = !DILocation(line: 373, column: 10, scope: !8182)
!8190 = !DILocation(line: 373, column: 3, scope: !8182)
!8191 = distinct !DISubprogram(name: "io_blksize", scope: !8192, file: !8192, line: 75, type: !422, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8192 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mohamad/clone/coreutils")
!8193 = !DILocalVariable(name: "sb", arg: 1, scope: !8191, file: !8192, line: 75, type: !314)
!8194 = !DILocation(line: 75, column: 25, scope: !8191)
!8195 = !DILocation(line: 77, column: 10, scope: !8191)
!8196 = !DILocation(line: 77, column: 3, scope: !8191)
!8197 = distinct !DISubprogram(name: "is_probably_sparse", scope: !242, file: !242, line: 1031, type: !424, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8198 = !DILocalVariable(name: "sb", arg: 1, scope: !8197, file: !242, line: 1031, type: !312)
!8199 = !DILocation(line: 1031, column: 40, scope: !8197)
!8200 = !DILocation(line: 1034, column: 14, scope: !8197)
!8201 = !DILocation(line: 1035, column: 11, scope: !8197)
!8202 = !DILocation(line: 1035, column: 14, scope: !8197)
!8203 = !{!3177, !3178, i64 64}
!8204 = !DILocation(line: 1035, column: 33, scope: !8197)
!8205 = !DILocation(line: 1035, column: 37, scope: !8197)
!8206 = !DILocation(line: 1035, column: 45, scope: !8197)
!8207 = !DILocation(line: 1035, column: 31, scope: !8197)
!8208 = !DILocation(line: 0, scope: !8197)
!8209 = !DILocation(line: 1033, column: 3, scope: !8197)
!8210 = distinct !DISubprogram(name: "ptr_align", scope: !138, file: !138, line: 498, type: !426, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8211 = !DILocalVariable(name: "ptr", arg: 1, scope: !8210, file: !138, line: 498, type: !428)
!8212 = !DILocation(line: 498, column: 24, scope: !8210)
!8213 = !DILocalVariable(name: "alignment", arg: 2, scope: !8210, file: !138, line: 498, type: !52)
!8214 = !DILocation(line: 498, column: 36, scope: !8210)
!8215 = !DILocalVariable(name: "p0", scope: !8210, file: !138, line: 500, type: !112)
!8216 = !DILocation(line: 500, column: 15, scope: !8210)
!8217 = !DILocation(line: 500, column: 20, scope: !8210)
!8218 = !DILocalVariable(name: "p1", scope: !8210, file: !138, line: 501, type: !112)
!8219 = !DILocation(line: 501, column: 15, scope: !8210)
!8220 = !DILocation(line: 501, column: 20, scope: !8210)
!8221 = !DILocation(line: 501, column: 25, scope: !8210)
!8222 = !DILocation(line: 501, column: 23, scope: !8210)
!8223 = !DILocation(line: 501, column: 35, scope: !8210)
!8224 = !DILocation(line: 502, column: 20, scope: !8210)
!8225 = !DILocation(line: 502, column: 34, scope: !8210)
!8226 = !DILocation(line: 502, column: 25, scope: !8210)
!8227 = !DILocation(line: 502, column: 39, scope: !8210)
!8228 = !DILocation(line: 502, column: 37, scope: !8210)
!8229 = !DILocation(line: 502, column: 23, scope: !8210)
!8230 = !DILocation(line: 502, column: 3, scope: !8210)
!8231 = distinct !DISubprogram(name: "extent_copy", scope: !242, file: !242, line: 423, type: !430, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8232 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8231, file: !242, line: 423, type: !5)
!8233 = !DILocation(line: 423, column: 18, scope: !8231)
!8234 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8231, file: !242, line: 423, type: !5)
!8235 = !DILocation(line: 423, column: 30, scope: !8231)
!8236 = !DILocalVariable(name: "buf", arg: 3, scope: !8231, file: !242, line: 423, type: !7)
!8237 = !DILocation(line: 423, column: 45, scope: !8231)
!8238 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8231, file: !242, line: 423, type: !52)
!8239 = !DILocation(line: 423, column: 57, scope: !8231)
!8240 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8231, file: !242, line: 424, type: !52)
!8241 = !DILocation(line: 424, column: 21, scope: !8231)
!8242 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !8231, file: !242, line: 424, type: !245)
!8243 = !DILocation(line: 424, column: 38, scope: !8231)
!8244 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !8231, file: !242, line: 425, type: !86)
!8245 = !DILocation(line: 425, column: 31, scope: !8231)
!8246 = !DILocalVariable(name: "src_name", arg: 8, scope: !8231, file: !242, line: 426, type: !112)
!8247 = !DILocation(line: 426, column: 26, scope: !8231)
!8248 = !DILocalVariable(name: "dst_name", arg: 9, scope: !8231, file: !242, line: 426, type: !112)
!8249 = !DILocation(line: 426, column: 48, scope: !8231)
!8250 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !8231, file: !242, line: 427, type: !299)
!8251 = !DILocation(line: 427, column: 20, scope: !8231)
!8252 = !DILocalVariable(name: "scan", scope: !8231, file: !242, line: 429, type: !442)
!8253 = !DILocation(line: 429, column: 22, scope: !8231)
!8254 = !DILocalVariable(name: "last_ext_start", scope: !8231, file: !242, line: 430, type: !245)
!8255 = !DILocation(line: 430, column: 9, scope: !8231)
!8256 = !DILocalVariable(name: "last_ext_len", scope: !8231, file: !242, line: 431, type: !245)
!8257 = !DILocation(line: 431, column: 9, scope: !8231)
!8258 = !DILocalVariable(name: "dest_pos", scope: !8231, file: !242, line: 435, type: !245)
!8259 = !DILocation(line: 435, column: 9, scope: !8231)
!8260 = !DILocation(line: 437, column: 21, scope: !8231)
!8261 = !DILocation(line: 437, column: 3, scope: !8231)
!8262 = !DILocation(line: 439, column: 4, scope: !8231)
!8263 = !DILocation(line: 439, column: 24, scope: !8231)
!8264 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !8231, file: !242, line: 440, type: !117)
!8265 = !DILocation(line: 440, column: 8, scope: !8231)
!8266 = !DILocation(line: 441, column: 3, scope: !8231)
!8267 = !DILocalVariable(name: "ok", scope: !8268, file: !242, line: 443, type: !117)
!8268 = distinct !DILexicalBlock(scope: !8231, file: !242, line: 442, column: 5)
!8269 = !DILocation(line: 443, column: 12, scope: !8268)
!8270 = !DILocation(line: 443, column: 17, scope: !8268)
!8271 = !DILocation(line: 444, column: 13, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8268, file: !242, line: 444, column: 11)
!8273 = !DILocation(line: 444, column: 11, scope: !8268)
!8274 = !DILocation(line: 446, column: 20, scope: !8275)
!8275 = distinct !DILexicalBlock(scope: !8276, file: !242, line: 446, column: 15)
!8276 = distinct !DILexicalBlock(scope: !8272, file: !242, line: 445, column: 9)
!8277 = !{!8278, !3105, i64 33}
!8278 = !{!"extent_scan", !2981, i64 0, !3178, i64 8, !2981, i64 16, !3178, i64 24, !3105, i64 32, !3105, i64 33, !2994, i64 40}
!8279 = !DILocation(line: 446, column: 15, scope: !8276)
!8280 = !DILocation(line: 447, column: 13, scope: !8275)
!8281 = !DILocation(line: 449, column: 20, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8276, file: !242, line: 449, column: 15)
!8283 = !{!8278, !3105, i64 32}
!8284 = !DILocation(line: 449, column: 15, scope: !8276)
!8285 = !DILocation(line: 451, column: 16, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !242, line: 450, column: 13)
!8287 = !DILocation(line: 451, column: 36, scope: !8286)
!8288 = !DILocation(line: 452, column: 15, scope: !8286)
!8289 = !DILocation(line: 455, column: 21, scope: !8276)
!8290 = !DILocation(line: 455, column: 28, scope: !8276)
!8291 = !DILocation(line: 456, column: 18, scope: !8276)
!8292 = !DILocation(line: 455, column: 11, scope: !8276)
!8293 = !DILocation(line: 457, column: 11, scope: !8276)
!8294 = !DILocalVariable(name: "empty_extent", scope: !8268, file: !242, line: 460, type: !117)
!8295 = !DILocation(line: 460, column: 12, scope: !8268)
!8296 = !DILocalVariable(name: "i", scope: !8297, file: !242, line: 461, type: !67)
!8297 = distinct !DILexicalBlock(scope: !8268, file: !242, line: 461, column: 7)
!8298 = !DILocation(line: 461, column: 25, scope: !8297)
!8299 = !DILocation(line: 461, column: 12, scope: !8297)
!8300 = !DILocation(line: 461, column: 32, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8297, file: !242, line: 461, column: 7)
!8302 = !DILocation(line: 461, column: 41, scope: !8301)
!8303 = !{!8278, !3178, i64 24}
!8304 = !DILocation(line: 461, column: 34, scope: !8301)
!8305 = !DILocation(line: 461, column: 50, scope: !8301)
!8306 = !DILocation(line: 461, column: 53, scope: !8301)
!8307 = !DILocation(line: 461, column: 7, scope: !8297)
!8308 = !DILocalVariable(name: "ext_start", scope: !8309, file: !242, line: 463, type: !245)
!8309 = distinct !DILexicalBlock(scope: !8301, file: !242, line: 462, column: 9)
!8310 = !DILocation(line: 463, column: 17, scope: !8309)
!8311 = !DILocalVariable(name: "ext_len", scope: !8309, file: !242, line: 464, type: !245)
!8312 = !DILocation(line: 464, column: 17, scope: !8309)
!8313 = !DILocalVariable(name: "ext_hole_size", scope: !8309, file: !242, line: 465, type: !245)
!8314 = !DILocation(line: 465, column: 17, scope: !8309)
!8315 = !DILocation(line: 467, column: 15, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8309, file: !242, line: 467, column: 15)
!8317 = !DILocation(line: 467, column: 24, scope: !8316)
!8318 = !DILocation(line: 467, column: 17, scope: !8316)
!8319 = !DILocation(line: 467, column: 15, scope: !8309)
!8320 = !DILocation(line: 469, column: 32, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8316, file: !242, line: 468, column: 13)
!8322 = !{!8278, !2994, i64 40}
!8323 = !DILocation(line: 469, column: 41, scope: !8321)
!8324 = !DILocation(line: 469, column: 27, scope: !8321)
!8325 = !DILocation(line: 469, column: 44, scope: !8321)
!8326 = !{!8327, !3178, i64 0}
!8327 = !{!"extent_info", !3178, i64 0, !3178, i64 8, !2981, i64 16}
!8328 = !DILocation(line: 469, column: 25, scope: !8321)
!8329 = !DILocation(line: 470, column: 30, scope: !8321)
!8330 = !DILocation(line: 470, column: 39, scope: !8321)
!8331 = !DILocation(line: 470, column: 25, scope: !8321)
!8332 = !DILocation(line: 470, column: 42, scope: !8321)
!8333 = !{!8327, !3178, i64 8}
!8334 = !DILocation(line: 470, column: 23, scope: !8321)
!8335 = !DILocation(line: 471, column: 13, scope: !8321)
!8336 = !DILocation(line: 474, column: 16, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8316, file: !242, line: 473, column: 13)
!8338 = !DILocation(line: 475, column: 27, scope: !8337)
!8339 = !DILocation(line: 475, column: 49, scope: !8337)
!8340 = !DILocation(line: 475, column: 58, scope: !8337)
!8341 = !DILocation(line: 475, column: 44, scope: !8337)
!8342 = !DILocation(line: 475, column: 61, scope: !8337)
!8343 = !DILocation(line: 475, column: 42, scope: !8337)
!8344 = !DILocation(line: 475, column: 25, scope: !8337)
!8345 = !DILocation(line: 476, column: 23, scope: !8337)
!8346 = !DILocation(line: 486, column: 15, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8309, file: !242, line: 486, column: 15)
!8348 = !DILocation(line: 486, column: 32, scope: !8347)
!8349 = !DILocation(line: 486, column: 44, scope: !8347)
!8350 = !DILocation(line: 486, column: 42, scope: !8347)
!8351 = !DILocation(line: 486, column: 30, scope: !8347)
!8352 = !DILocation(line: 486, column: 15, scope: !8309)
!8353 = !DILocation(line: 488, column: 19, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8355, file: !242, line: 488, column: 19)
!8355 = distinct !DILexicalBlock(scope: !8347, file: !242, line: 487, column: 13)
!8356 = !DILocation(line: 488, column: 36, scope: !8354)
!8357 = !DILocation(line: 488, column: 34, scope: !8354)
!8358 = !DILocation(line: 488, column: 19, scope: !8355)
!8359 = !DILocation(line: 489, column: 29, scope: !8354)
!8360 = !DILocation(line: 489, column: 27, scope: !8354)
!8361 = !DILocation(line: 489, column: 17, scope: !8354)
!8362 = !DILocation(line: 490, column: 25, scope: !8355)
!8363 = !DILocation(line: 490, column: 42, scope: !8355)
!8364 = !DILocation(line: 490, column: 40, scope: !8355)
!8365 = !DILocation(line: 490, column: 23, scope: !8355)
!8366 = !DILocation(line: 491, column: 13, scope: !8355)
!8367 = !DILocation(line: 493, column: 27, scope: !8309)
!8368 = !DILocation(line: 493, column: 39, scope: !8309)
!8369 = !DILocation(line: 493, column: 37, scope: !8309)
!8370 = !DILocation(line: 493, column: 56, scope: !8309)
!8371 = !DILocation(line: 493, column: 54, scope: !8309)
!8372 = !DILocation(line: 493, column: 25, scope: !8309)
!8373 = !DILocation(line: 495, column: 29, scope: !8309)
!8374 = !DILocation(line: 497, column: 15, scope: !8375)
!8375 = distinct !DILexicalBlock(scope: !8309, file: !242, line: 497, column: 15)
!8376 = !DILocation(line: 497, column: 15, scope: !8309)
!8377 = !DILocation(line: 499, column: 26, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8379, file: !242, line: 499, column: 19)
!8379 = distinct !DILexicalBlock(scope: !8375, file: !242, line: 498, column: 13)
!8380 = !DILocation(line: 499, column: 34, scope: !8378)
!8381 = !DILocation(line: 499, column: 19, scope: !8378)
!8382 = !DILocation(line: 499, column: 55, scope: !8378)
!8383 = !DILocation(line: 499, column: 19, scope: !8379)
!8384 = !DILocation(line: 501, column: 29, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8378, file: !242, line: 500, column: 17)
!8386 = !DILocation(line: 501, column: 36, scope: !8385)
!8387 = !DILocation(line: 501, column: 58, scope: !8385)
!8388 = !DILocation(line: 501, column: 19, scope: !8385)
!8389 = !DILabel(scope: !8385, name: "fail", file: !242, line: 502)
!8390 = !DILocation(line: 502, column: 17, scope: !8385)
!8391 = !DILocation(line: 503, column: 19, scope: !8385)
!8392 = !DILocation(line: 504, column: 19, scope: !8385)
!8393 = !DILocation(line: 507, column: 20, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8379, file: !242, line: 507, column: 19)
!8395 = !DILocation(line: 507, column: 33, scope: !8394)
!8396 = !DILocation(line: 507, column: 36, scope: !8394)
!8397 = !DILocation(line: 507, column: 48, scope: !8394)
!8398 = !DILocation(line: 508, column: 19, scope: !8394)
!8399 = !DILocation(line: 508, column: 24, scope: !8394)
!8400 = !DILocation(line: 508, column: 37, scope: !8394)
!8401 = !DILocation(line: 508, column: 40, scope: !8394)
!8402 = !DILocation(line: 508, column: 52, scope: !8394)
!8403 = !DILocation(line: 507, column: 19, scope: !8379)
!8404 = !DILocation(line: 510, column: 38, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8406, file: !242, line: 510, column: 23)
!8406 = distinct !DILexicalBlock(scope: !8394, file: !242, line: 509, column: 17)
!8407 = !DILocation(line: 510, column: 47, scope: !8405)
!8408 = !DILocation(line: 511, column: 38, scope: !8405)
!8409 = !DILocation(line: 511, column: 50, scope: !8405)
!8410 = !DILocation(line: 512, column: 38, scope: !8405)
!8411 = !DILocation(line: 510, column: 25, scope: !8405)
!8412 = !DILocation(line: 510, column: 23, scope: !8406)
!8413 = !DILocation(line: 513, column: 21, scope: !8405)
!8414 = !DILocation(line: 514, column: 37, scope: !8406)
!8415 = !DILocation(line: 515, column: 17, scope: !8406)
!8416 = !DILocalVariable(name: "nzeros", scope: !8417, file: !242, line: 521, type: !245)
!8417 = distinct !DILexicalBlock(scope: !8394, file: !242, line: 517, column: 17)
!8418 = !DILocation(line: 521, column: 25, scope: !8417)
!8419 = !DILocation(line: 521, column: 34, scope: !8417)
!8420 = !DILocation(line: 522, column: 23, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8417, file: !242, line: 522, column: 23)
!8422 = !DILocation(line: 522, column: 23, scope: !8417)
!8423 = !DILocation(line: 523, column: 30, scope: !8421)
!8424 = !DILocation(line: 523, column: 28, scope: !8421)
!8425 = !DILocation(line: 523, column: 21, scope: !8421)
!8426 = !DILocation(line: 525, column: 38, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8417, file: !242, line: 525, column: 23)
!8428 = !DILocation(line: 525, column: 47, scope: !8427)
!8429 = !DILocation(line: 525, column: 25, scope: !8427)
!8430 = !DILocation(line: 525, column: 23, scope: !8417)
!8431 = !DILocation(line: 527, column: 33, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !242, line: 526, column: 21)
!8433 = !DILocation(line: 527, column: 40, scope: !8432)
!8434 = !DILocation(line: 528, column: 30, scope: !8432)
!8435 = !DILocation(line: 527, column: 23, scope: !8432)
!8436 = !DILocation(line: 529, column: 23, scope: !8432)
!8437 = !DILocation(line: 532, column: 30, scope: !8417)
!8438 = !DILocation(line: 532, column: 28, scope: !8417)
!8439 = !DILocation(line: 534, column: 13, scope: !8379)
!8440 = !DILocation(line: 536, column: 28, scope: !8309)
!8441 = !DILocation(line: 536, column: 26, scope: !8309)
!8442 = !DILocalVariable(name: "n_read", scope: !8443, file: !242, line: 553, type: !245)
!8443 = distinct !DILexicalBlock(scope: !8444, file: !242, line: 552, column: 13)
!8444 = distinct !DILexicalBlock(scope: !8309, file: !242, line: 544, column: 15)
!8445 = !DILocation(line: 553, column: 21, scope: !8443)
!8446 = !DILocation(line: 554, column: 28, scope: !8443)
!8447 = !DILocation(line: 555, column: 30, scope: !8443)
!8448 = !DILocation(line: 555, column: 28, scope: !8443)
!8449 = !DILocalVariable(name: "read_hole", scope: !8443, file: !242, line: 556, type: !117)
!8450 = !DILocation(line: 556, column: 20, scope: !8443)
!8451 = !DILocation(line: 558, column: 35, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8443, file: !242, line: 558, column: 20)
!8453 = !DILocation(line: 558, column: 43, scope: !8452)
!8454 = !DILocation(line: 558, column: 52, scope: !8452)
!8455 = !DILocation(line: 558, column: 57, scope: !8452)
!8456 = !DILocation(line: 559, column: 35, scope: !8452)
!8457 = !DILocation(line: 559, column: 47, scope: !8452)
!8458 = !DILocation(line: 559, column: 66, scope: !8452)
!8459 = !DILocation(line: 560, column: 41, scope: !8452)
!8460 = !DILocation(line: 560, column: 51, scope: !8452)
!8461 = !DILocation(line: 560, column: 61, scope: !8452)
!8462 = !DILocation(line: 558, column: 22, scope: !8452)
!8463 = !DILocation(line: 558, column: 20, scope: !8443)
!8464 = !DILocation(line: 562, column: 17, scope: !8452)
!8465 = !DILocation(line: 564, column: 26, scope: !8443)
!8466 = !DILocation(line: 564, column: 38, scope: !8443)
!8467 = !DILocation(line: 564, column: 36, scope: !8443)
!8468 = !DILocation(line: 564, column: 24, scope: !8443)
!8469 = !DILocation(line: 565, column: 19, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8443, file: !242, line: 565, column: 19)
!8471 = !DILocation(line: 565, column: 19, scope: !8443)
!8472 = !DILocation(line: 566, column: 37, scope: !8470)
!8473 = !DILocation(line: 566, column: 35, scope: !8470)
!8474 = !DILocation(line: 566, column: 17, scope: !8470)
!8475 = !DILocation(line: 574, column: 15, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8309, file: !242, line: 574, column: 15)
!8477 = !DILocation(line: 574, column: 27, scope: !8476)
!8478 = !DILocation(line: 574, column: 24, scope: !8476)
!8479 = !DILocation(line: 574, column: 15, scope: !8309)
!8480 = !DILocation(line: 576, column: 20, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8476, file: !242, line: 575, column: 13)
!8482 = !DILocation(line: 576, column: 37, scope: !8481)
!8483 = !DILocation(line: 577, column: 15, scope: !8481)
!8484 = !DILocation(line: 579, column: 9, scope: !8309)
!8485 = !DILocation(line: 461, column: 68, scope: !8301)
!8486 = !DILocation(line: 461, column: 7, scope: !8301)
!8487 = distinct !{!8487, !8307, !8488}
!8488 = !DILocation(line: 579, column: 9, scope: !8297)
!8489 = !DILocation(line: 582, column: 7, scope: !8268)
!8490 = !DILocation(line: 584, column: 5, scope: !8268)
!8491 = !DILocation(line: 585, column: 17, scope: !8231)
!8492 = !DILocation(line: 585, column: 10, scope: !8231)
!8493 = distinct !{!8493, !8266, !8494}
!8494 = !DILocation(line: 585, column: 33, scope: !8231)
!8495 = !DILocation(line: 595, column: 8, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8231, file: !242, line: 595, column: 7)
!8497 = !DILocation(line: 595, column: 19, scope: !8496)
!8498 = !DILocation(line: 595, column: 17, scope: !8496)
!8499 = !DILocation(line: 595, column: 34, scope: !8496)
!8500 = !DILocation(line: 595, column: 37, scope: !8496)
!8501 = !DILocation(line: 596, column: 7, scope: !8496)
!8502 = !DILocation(line: 596, column: 11, scope: !8496)
!8503 = !DILocation(line: 596, column: 23, scope: !8496)
!8504 = !DILocation(line: 595, column: 7, scope: !8231)
!8505 = !DILocation(line: 597, column: 24, scope: !8496)
!8506 = !DILocation(line: 597, column: 33, scope: !8496)
!8507 = !DILocation(line: 597, column: 13, scope: !8496)
!8508 = !DILocation(line: 598, column: 28, scope: !8496)
!8509 = !DILocation(line: 598, column: 37, scope: !8496)
!8510 = !DILocation(line: 598, column: 54, scope: !8496)
!8511 = !DILocation(line: 598, column: 52, scope: !8496)
!8512 = !DILocation(line: 598, column: 15, scope: !8496)
!8513 = !DILocation(line: 600, column: 17, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8496, file: !242, line: 599, column: 5)
!8515 = !DILocation(line: 600, column: 24, scope: !8514)
!8516 = !DILocation(line: 600, column: 50, scope: !8514)
!8517 = !DILocation(line: 600, column: 7, scope: !8514)
!8518 = !DILocation(line: 601, column: 7, scope: !8514)
!8519 = !DILocation(line: 604, column: 7, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8231, file: !242, line: 604, column: 7)
!8521 = !DILocation(line: 604, column: 19, scope: !8520)
!8522 = !DILocation(line: 604, column: 36, scope: !8520)
!8523 = !DILocation(line: 604, column: 39, scope: !8520)
!8524 = !DILocation(line: 604, column: 50, scope: !8520)
!8525 = !DILocation(line: 604, column: 48, scope: !8520)
!8526 = !DILocation(line: 605, column: 7, scope: !8520)
!8527 = !DILocation(line: 605, column: 22, scope: !8520)
!8528 = !DILocation(line: 605, column: 31, scope: !8520)
!8529 = !DILocation(line: 605, column: 41, scope: !8520)
!8530 = !DILocation(line: 605, column: 58, scope: !8520)
!8531 = !DILocation(line: 605, column: 56, scope: !8520)
!8532 = !DILocation(line: 605, column: 10, scope: !8520)
!8533 = !DILocation(line: 605, column: 68, scope: !8520)
!8534 = !DILocation(line: 604, column: 7, scope: !8231)
!8535 = !DILocation(line: 607, column: 17, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8520, file: !242, line: 606, column: 5)
!8537 = !DILocation(line: 607, column: 24, scope: !8536)
!8538 = !DILocation(line: 607, column: 52, scope: !8536)
!8539 = !DILocation(line: 607, column: 7, scope: !8536)
!8540 = !DILocation(line: 608, column: 7, scope: !8536)
!8541 = !DILocation(line: 611, column: 3, scope: !8231)
!8542 = !DILocation(line: 612, column: 1, scope: !8231)
!8543 = distinct !DISubprogram(name: "sparse_copy", scope: !242, file: !242, line: 260, type: !457, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8544 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8543, file: !242, line: 260, type: !5)
!8545 = !DILocation(line: 260, column: 18, scope: !8543)
!8546 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8543, file: !242, line: 260, type: !5)
!8547 = !DILocation(line: 260, column: 30, scope: !8543)
!8548 = !DILocalVariable(name: "buf", arg: 3, scope: !8543, file: !242, line: 260, type: !7)
!8549 = !DILocation(line: 260, column: 45, scope: !8543)
!8550 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8543, file: !242, line: 260, type: !52)
!8551 = !DILocation(line: 260, column: 57, scope: !8543)
!8552 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8543, file: !242, line: 261, type: !52)
!8553 = !DILocation(line: 261, column: 21, scope: !8543)
!8554 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !8543, file: !242, line: 261, type: !117)
!8555 = !DILocation(line: 261, column: 37, scope: !8543)
!8556 = !DILocalVariable(name: "src_name", arg: 7, scope: !8543, file: !242, line: 262, type: !112)
!8557 = !DILocation(line: 262, column: 26, scope: !8543)
!8558 = !DILocalVariable(name: "dst_name", arg: 8, scope: !8543, file: !242, line: 262, type: !112)
!8559 = !DILocation(line: 262, column: 48, scope: !8543)
!8560 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !8543, file: !242, line: 263, type: !459)
!8561 = !DILocation(line: 263, column: 24, scope: !8543)
!8562 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !8543, file: !242, line: 263, type: !461)
!8563 = !DILocation(line: 263, column: 43, scope: !8543)
!8564 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !8543, file: !242, line: 264, type: !299)
!8565 = !DILocation(line: 264, column: 20, scope: !8543)
!8566 = !DILocation(line: 266, column: 4, scope: !8543)
!8567 = !DILocation(line: 266, column: 25, scope: !8543)
!8568 = !DILocation(line: 267, column: 4, scope: !8543)
!8569 = !DILocation(line: 267, column: 17, scope: !8543)
!8570 = !DILocalVariable(name: "make_hole", scope: !8543, file: !242, line: 268, type: !117)
!8571 = !DILocation(line: 268, column: 8, scope: !8543)
!8572 = !DILocalVariable(name: "psize", scope: !8543, file: !242, line: 269, type: !245)
!8573 = !DILocation(line: 269, column: 9, scope: !8543)
!8574 = !DILocation(line: 271, column: 3, scope: !8543)
!8575 = !DILocation(line: 271, column: 10, scope: !8543)
!8576 = !DILocalVariable(name: "n_read", scope: !8577, file: !242, line: 273, type: !462)
!8577 = distinct !DILexicalBlock(scope: !8543, file: !242, line: 272, column: 5)
!8578 = !DILocation(line: 273, column: 15, scope: !8577)
!8579 = !DILocation(line: 273, column: 30, scope: !8577)
!8580 = !DILocation(line: 273, column: 38, scope: !8577)
!8581 = !DILocation(line: 273, column: 43, scope: !8577)
!8582 = !DILocation(line: 273, column: 24, scope: !8577)
!8583 = !DILocation(line: 274, column: 11, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8577, file: !242, line: 274, column: 11)
!8585 = !DILocation(line: 274, column: 18, scope: !8584)
!8586 = !DILocation(line: 274, column: 11, scope: !8577)
!8587 = !DILocation(line: 276, column: 15, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8589, file: !242, line: 276, column: 15)
!8589 = distinct !DILexicalBlock(scope: !8584, file: !242, line: 275, column: 9)
!8590 = !DILocation(line: 276, column: 21, scope: !8588)
!8591 = !DILocation(line: 276, column: 15, scope: !8589)
!8592 = !DILocation(line: 277, column: 13, scope: !8588)
!8593 = distinct !{!8593, !8574, !8594}
!8594 = !DILocation(line: 357, column: 5, scope: !8543)
!8595 = !DILocation(line: 278, column: 21, scope: !8589)
!8596 = !DILocation(line: 278, column: 28, scope: !8589)
!8597 = !DILocation(line: 278, column: 51, scope: !8589)
!8598 = !DILocation(line: 278, column: 11, scope: !8589)
!8599 = !DILocation(line: 279, column: 11, scope: !8589)
!8600 = !DILocation(line: 281, column: 11, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8577, file: !242, line: 281, column: 11)
!8602 = !DILocation(line: 281, column: 18, scope: !8601)
!8603 = !DILocation(line: 281, column: 11, scope: !8577)
!8604 = !DILocation(line: 282, column: 9, scope: !8601)
!8605 = !DILocation(line: 283, column: 21, scope: !8577)
!8606 = !DILocation(line: 283, column: 18, scope: !8577)
!8607 = !DILocation(line: 284, column: 24, scope: !8577)
!8608 = !DILocation(line: 284, column: 8, scope: !8577)
!8609 = !DILocation(line: 284, column: 21, scope: !8577)
!8610 = !DILocalVariable(name: "csize", scope: !8577, file: !242, line: 287, type: !52)
!8611 = !DILocation(line: 287, column: 14, scope: !8577)
!8612 = !DILocation(line: 287, column: 22, scope: !8577)
!8613 = !DILocation(line: 287, column: 34, scope: !8577)
!8614 = !DILocation(line: 287, column: 46, scope: !8577)
!8615 = !DILocalVariable(name: "cbuf", scope: !8577, file: !242, line: 288, type: !7)
!8616 = !DILocation(line: 288, column: 13, scope: !8577)
!8617 = !DILocation(line: 288, column: 20, scope: !8577)
!8618 = !DILocalVariable(name: "pbuf", scope: !8577, file: !242, line: 289, type: !7)
!8619 = !DILocation(line: 289, column: 13, scope: !8577)
!8620 = !DILocation(line: 289, column: 20, scope: !8577)
!8621 = !DILocation(line: 291, column: 7, scope: !8577)
!8622 = !DILocation(line: 291, column: 14, scope: !8577)
!8623 = !DILocalVariable(name: "prev_hole", scope: !8624, file: !242, line: 293, type: !117)
!8624 = distinct !DILexicalBlock(scope: !8577, file: !242, line: 292, column: 9)
!8625 = !DILocation(line: 293, column: 16, scope: !8624)
!8626 = !DILocation(line: 293, column: 28, scope: !8624)
!8627 = !DILocation(line: 294, column: 19, scope: !8624)
!8628 = !DILocation(line: 294, column: 17, scope: !8624)
!8629 = !DILocation(line: 296, column: 15, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8624, file: !242, line: 296, column: 15)
!8631 = !DILocation(line: 296, column: 25, scope: !8630)
!8632 = !DILocation(line: 296, column: 28, scope: !8630)
!8633 = !DILocation(line: 296, column: 15, scope: !8624)
!8634 = !DILocation(line: 297, column: 33, scope: !8630)
!8635 = !DILocation(line: 297, column: 39, scope: !8630)
!8636 = !DILocation(line: 297, column: 25, scope: !8630)
!8637 = !DILocation(line: 297, column: 23, scope: !8630)
!8638 = !DILocation(line: 297, column: 13, scope: !8630)
!8639 = !DILocalVariable(name: "transition", scope: !8624, file: !242, line: 299, type: !117)
!8640 = !DILocation(line: 299, column: 16, scope: !8624)
!8641 = !DILocation(line: 299, column: 30, scope: !8624)
!8642 = !DILocation(line: 299, column: 43, scope: !8624)
!8643 = !DILocation(line: 299, column: 40, scope: !8624)
!8644 = !DILocation(line: 299, column: 54, scope: !8624)
!8645 = !DILocation(line: 299, column: 57, scope: !8624)
!8646 = !DILocation(line: 0, scope: !8624)
!8647 = !DILocalVariable(name: "last_chunk", scope: !8624, file: !242, line: 300, type: !117)
!8648 = !DILocation(line: 300, column: 16, scope: !8624)
!8649 = !DILocation(line: 300, column: 30, scope: !8624)
!8650 = !DILocation(line: 300, column: 40, scope: !8624)
!8651 = !DILocation(line: 300, column: 37, scope: !8624)
!8652 = !DILocation(line: 300, column: 46, scope: !8624)
!8653 = !DILocation(line: 300, column: 51, scope: !8624)
!8654 = !DILocation(line: 300, column: 62, scope: !8624)
!8655 = !DILocation(line: 300, column: 67, scope: !8624)
!8656 = !DILocation(line: 300, column: 65, scope: !8624)
!8657 = !DILocation(line: 302, column: 15, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8624, file: !242, line: 302, column: 15)
!8659 = !DILocation(line: 302, column: 26, scope: !8658)
!8660 = !DILocation(line: 302, column: 29, scope: !8658)
!8661 = !DILocation(line: 302, column: 15, scope: !8624)
!8662 = !DILocation(line: 304, column: 21, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8664, file: !242, line: 304, column: 19)
!8664 = distinct !DILexicalBlock(scope: !8658, file: !242, line: 303, column: 13)
!8665 = !DILocation(line: 304, column: 19, scope: !8664)
!8666 = !DILocation(line: 305, column: 26, scope: !8663)
!8667 = !DILocation(line: 305, column: 23, scope: !8663)
!8668 = !DILocation(line: 305, column: 17, scope: !8663)
!8669 = !DILocation(line: 307, column: 21, scope: !8670)
!8670 = distinct !DILexicalBlock(scope: !8664, file: !242, line: 307, column: 19)
!8671 = !DILocation(line: 307, column: 19, scope: !8664)
!8672 = !DILocation(line: 309, column: 35, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8674, file: !242, line: 309, column: 23)
!8674 = distinct !DILexicalBlock(scope: !8670, file: !242, line: 308, column: 17)
!8675 = !DILocation(line: 309, column: 44, scope: !8673)
!8676 = !DILocation(line: 309, column: 50, scope: !8673)
!8677 = !DILocation(line: 309, column: 23, scope: !8673)
!8678 = !DILocation(line: 309, column: 60, scope: !8673)
!8679 = !DILocation(line: 309, column: 57, scope: !8673)
!8680 = !DILocation(line: 309, column: 23, scope: !8674)
!8681 = !DILocation(line: 311, column: 33, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8673, file: !242, line: 310, column: 21)
!8683 = !DILocation(line: 311, column: 40, scope: !8682)
!8684 = !DILocation(line: 312, column: 30, scope: !8682)
!8685 = !DILocation(line: 311, column: 23, scope: !8682)
!8686 = !DILocation(line: 313, column: 23, scope: !8682)
!8687 = !DILocation(line: 315, column: 17, scope: !8674)
!8688 = !DILocation(line: 318, column: 38, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8690, file: !242, line: 318, column: 23)
!8690 = distinct !DILexicalBlock(scope: !8670, file: !242, line: 317, column: 17)
!8691 = !DILocation(line: 318, column: 47, scope: !8689)
!8692 = !DILocation(line: 318, column: 57, scope: !8689)
!8693 = !DILocation(line: 318, column: 70, scope: !8689)
!8694 = !DILocation(line: 318, column: 25, scope: !8689)
!8695 = !DILocation(line: 318, column: 23, scope: !8690)
!8696 = !DILocation(line: 319, column: 21, scope: !8689)
!8697 = !DILocation(line: 322, column: 22, scope: !8664)
!8698 = !DILocation(line: 322, column: 20, scope: !8664)
!8699 = !DILocation(line: 323, column: 23, scope: !8664)
!8700 = !DILocation(line: 323, column: 21, scope: !8664)
!8701 = !DILocation(line: 325, column: 19, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8664, file: !242, line: 325, column: 19)
!8703 = !DILocation(line: 325, column: 19, scope: !8664)
!8704 = !DILocation(line: 327, column: 25, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !242, line: 327, column: 23)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !242, line: 326, column: 17)
!8707 = !DILocation(line: 327, column: 23, scope: !8706)
!8708 = !DILocation(line: 328, column: 28, scope: !8705)
!8709 = !DILocation(line: 328, column: 21, scope: !8705)
!8710 = !DILocation(line: 330, column: 23, scope: !8711)
!8711 = distinct !DILexicalBlock(scope: !8706, file: !242, line: 330, column: 23)
!8712 = !DILocation(line: 330, column: 23, scope: !8706)
!8713 = !DILocation(line: 331, column: 27, scope: !8711)
!8714 = !DILocation(line: 331, column: 21, scope: !8711)
!8715 = !DILocation(line: 333, column: 27, scope: !8711)
!8716 = !DILocation(line: 334, column: 17, scope: !8706)
!8717 = !DILocation(line: 335, column: 13, scope: !8664)
!8718 = !DILocation(line: 338, column: 19, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8720, file: !242, line: 338, column: 19)
!8720 = distinct !DILexicalBlock(scope: !8658, file: !242, line: 337, column: 13)
!8721 = !DILocation(line: 338, column: 40, scope: !8719)
!8722 = !DILocation(line: 338, column: 38, scope: !8719)
!8723 = !DILocation(line: 338, column: 25, scope: !8719)
!8724 = !DILocation(line: 338, column: 19, scope: !8720)
!8725 = !DILocation(line: 339, column: 26, scope: !8719)
!8726 = !DILocation(line: 339, column: 23, scope: !8719)
!8727 = !DILocation(line: 339, column: 17, scope: !8719)
!8728 = !DILocation(line: 342, column: 32, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8719, file: !242, line: 341, column: 17)
!8730 = !DILocation(line: 342, column: 58, scope: !8729)
!8731 = !DILocation(line: 342, column: 19, scope: !8729)
!8732 = !DILocation(line: 343, column: 19, scope: !8729)
!8733 = !DILocation(line: 347, column: 21, scope: !8624)
!8734 = !DILocation(line: 347, column: 18, scope: !8624)
!8735 = !DILocation(line: 348, column: 19, scope: !8624)
!8736 = !DILocation(line: 348, column: 16, scope: !8624)
!8737 = distinct !{!8737, !8621, !8738}
!8738 = !DILocation(line: 349, column: 9, scope: !8577)
!8739 = !DILocation(line: 351, column: 31, scope: !8577)
!8740 = !DILocation(line: 351, column: 8, scope: !8577)
!8741 = !DILocation(line: 351, column: 29, scope: !8577)
!8742 = !DILocation(line: 361, column: 7, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8543, file: !242, line: 361, column: 7)
!8744 = !DILocation(line: 361, column: 17, scope: !8743)
!8745 = !DILocation(line: 361, column: 35, scope: !8743)
!8746 = !DILocation(line: 361, column: 44, scope: !8743)
!8747 = !DILocation(line: 361, column: 54, scope: !8743)
!8748 = !DILocation(line: 361, column: 67, scope: !8743)
!8749 = !DILocation(line: 361, column: 22, scope: !8743)
!8750 = !DILocation(line: 361, column: 7, scope: !8543)
!8751 = !DILocation(line: 362, column: 5, scope: !8743)
!8752 = !DILocation(line: 364, column: 5, scope: !8743)
!8753 = !DILocation(line: 365, column: 1, scope: !8543)
!8754 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !242, file: !242, line: 1013, type: !469, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8755 = !DILocalVariable(name: "desc", arg: 1, scope: !8754, file: !242, line: 1013, type: !5)
!8756 = !DILocation(line: 1013, column: 23, scope: !8754)
!8757 = !DILocalVariable(name: "name", arg: 2, scope: !8754, file: !242, line: 1013, type: !112)
!8758 = !DILocation(line: 1013, column: 41, scope: !8754)
!8759 = !DILocalVariable(name: "mode", arg: 3, scope: !8754, file: !242, line: 1013, type: !157)
!8760 = !DILocation(line: 1013, column: 54, scope: !8754)
!8761 = !DILocation(line: 1016, column: 12, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8754, file: !242, line: 1016, column: 7)
!8763 = !DILocation(line: 1016, column: 9, scope: !8762)
!8764 = !DILocation(line: 1016, column: 7, scope: !8754)
!8765 = !DILocation(line: 1017, column: 20, scope: !8762)
!8766 = !DILocation(line: 1017, column: 26, scope: !8762)
!8767 = !DILocation(line: 1017, column: 12, scope: !8762)
!8768 = !DILocation(line: 1017, column: 5, scope: !8762)
!8769 = !DILocation(line: 1019, column: 18, scope: !8754)
!8770 = !DILocation(line: 1019, column: 24, scope: !8754)
!8771 = !DILocation(line: 1019, column: 10, scope: !8754)
!8772 = !DILocation(line: 1019, column: 3, scope: !8754)
!8773 = !DILocation(line: 1020, column: 1, scope: !8754)
!8774 = distinct !DISubprogram(name: "is_nul", scope: !138, file: !138, line: 509, type: !464, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8775 = !DILocalVariable(name: "buf", arg: 1, scope: !8774, file: !138, line: 509, type: !428)
!8776 = !DILocation(line: 509, column: 21, scope: !8774)
!8777 = !DILocalVariable(name: "length", arg: 2, scope: !8774, file: !138, line: 509, type: !52)
!8778 = !DILocation(line: 509, column: 33, scope: !8774)
!8779 = !DILocalVariable(name: "p", scope: !8774, file: !138, line: 511, type: !466)
!8780 = !DILocation(line: 511, column: 24, scope: !8774)
!8781 = !DILocation(line: 511, column: 28, scope: !8774)
!8782 = !DILocalVariable(name: "word", scope: !8774, file: !138, line: 521, type: !468)
!8783 = !DILocation(line: 521, column: 17, scope: !8774)
!8784 = !DILocation(line: 524, column: 9, scope: !8785)
!8785 = distinct !DILexicalBlock(scope: !8774, file: !138, line: 524, column: 7)
!8786 = !DILocation(line: 524, column: 7, scope: !8774)
!8787 = !DILocation(line: 525, column: 7, scope: !8785)
!8788 = !DILocation(line: 528, column: 3, scope: !8774)
!8789 = !DILocation(line: 528, column: 10, scope: !8774)
!8790 = !DILocation(line: 530, column: 12, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !8792, file: !138, line: 530, column: 11)
!8792 = distinct !DILexicalBlock(scope: !8774, file: !138, line: 529, column: 5)
!8793 = !DILocation(line: 530, column: 11, scope: !8791)
!8794 = !DILocation(line: 530, column: 11, scope: !8792)
!8795 = !DILocation(line: 531, column: 9, scope: !8791)
!8796 = !DILocation(line: 532, column: 8, scope: !8792)
!8797 = !DILocation(line: 533, column: 13, scope: !8792)
!8798 = !DILocation(line: 534, column: 13, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8792, file: !138, line: 534, column: 11)
!8800 = !DILocation(line: 534, column: 11, scope: !8792)
!8801 = !DILocation(line: 535, column: 9, scope: !8799)
!8802 = distinct !{!8802, !8788, !8803}
!8803 = !DILocation(line: 536, column: 4, scope: !8774)
!8804 = !DILocation(line: 539, column: 3, scope: !8774)
!8805 = !DILocation(line: 541, column: 22, scope: !8806)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !138, line: 540, column: 5)
!8807 = distinct !DILexicalBlock(scope: !8808, file: !138, line: 539, column: 3)
!8808 = distinct !DILexicalBlock(scope: !8774, file: !138, line: 539, column: 3)
!8809 = !DILocation(line: 541, column: 7, scope: !8806)
!8810 = !DILocation(line: 542, column: 11, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8806, file: !138, line: 542, column: 11)
!8812 = !DILocation(line: 542, column: 11, scope: !8806)
!8813 = !DILocation(line: 543, column: 9, scope: !8811)
!8814 = !DILocation(line: 544, column: 9, scope: !8806)
!8815 = !DILocation(line: 545, column: 14, scope: !8806)
!8816 = !DILocation(line: 546, column: 13, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8806, file: !138, line: 546, column: 11)
!8818 = !DILocation(line: 546, column: 11, scope: !8806)
!8819 = !DILocation(line: 547, column: 9, scope: !8817)
!8820 = !DILocation(line: 548, column: 11, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8806, file: !138, line: 548, column: 11)
!8822 = !DILocation(line: 548, column: 34, scope: !8821)
!8823 = !DILocation(line: 548, column: 11, scope: !8806)
!8824 = !DILocation(line: 549, column: 9, scope: !8821)
!8825 = !DILocation(line: 539, column: 3, scope: !8807)
!8826 = distinct !{!8826, !8827, !8828}
!8827 = !DILocation(line: 539, column: 3, scope: !8808)
!8828 = !DILocation(line: 550, column: 4, scope: !8808)
!8829 = !DILocation(line: 553, column: 19, scope: !8774)
!8830 = !DILocation(line: 553, column: 24, scope: !8774)
!8831 = !DILocation(line: 553, column: 27, scope: !8774)
!8832 = !DILocation(line: 553, column: 11, scope: !8774)
!8833 = !DILocation(line: 553, column: 35, scope: !8774)
!8834 = !DILocation(line: 553, column: 4, scope: !8774)
!8835 = !DILocation(line: 554, column: 1, scope: !8774)
!8836 = distinct !DISubprogram(name: "create_hole", scope: !242, file: !242, line: 224, type: !451, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8837 = !DILocalVariable(name: "fd", arg: 1, scope: !8836, file: !242, line: 224, type: !5)
!8838 = !DILocation(line: 224, column: 18, scope: !8836)
!8839 = !DILocalVariable(name: "name", arg: 2, scope: !8836, file: !242, line: 224, type: !112)
!8840 = !DILocation(line: 224, column: 34, scope: !8836)
!8841 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8836, file: !242, line: 224, type: !117)
!8842 = !DILocation(line: 224, column: 45, scope: !8836)
!8843 = !DILocalVariable(name: "size", arg: 4, scope: !8836, file: !242, line: 224, type: !245)
!8844 = !DILocation(line: 224, column: 64, scope: !8836)
!8845 = !DILocalVariable(name: "file_end", scope: !8836, file: !242, line: 226, type: !245)
!8846 = !DILocation(line: 226, column: 9, scope: !8836)
!8847 = !DILocation(line: 226, column: 27, scope: !8836)
!8848 = !DILocation(line: 226, column: 31, scope: !8836)
!8849 = !DILocation(line: 226, column: 20, scope: !8836)
!8850 = !DILocation(line: 228, column: 7, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8836, file: !242, line: 228, column: 7)
!8852 = !DILocation(line: 228, column: 16, scope: !8851)
!8853 = !DILocation(line: 228, column: 7, scope: !8836)
!8854 = !DILocation(line: 230, column: 17, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8851, file: !242, line: 229, column: 5)
!8856 = !DILocation(line: 230, column: 24, scope: !8855)
!8857 = !DILocation(line: 230, column: 46, scope: !8855)
!8858 = !DILocation(line: 230, column: 7, scope: !8855)
!8859 = !DILocation(line: 231, column: 7, scope: !8855)
!8860 = !DILocation(line: 238, column: 7, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8836, file: !242, line: 238, column: 7)
!8862 = !DILocation(line: 238, column: 19, scope: !8861)
!8863 = !DILocation(line: 238, column: 34, scope: !8861)
!8864 = !DILocation(line: 238, column: 38, scope: !8861)
!8865 = !DILocation(line: 238, column: 49, scope: !8861)
!8866 = !DILocation(line: 238, column: 47, scope: !8861)
!8867 = !DILocation(line: 238, column: 55, scope: !8861)
!8868 = !DILocation(line: 238, column: 22, scope: !8861)
!8869 = !DILocation(line: 238, column: 61, scope: !8861)
!8870 = !DILocation(line: 238, column: 7, scope: !8836)
!8871 = !DILocation(line: 240, column: 17, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8861, file: !242, line: 239, column: 5)
!8873 = !DILocation(line: 240, column: 24, scope: !8872)
!8874 = !DILocation(line: 240, column: 52, scope: !8872)
!8875 = !DILocation(line: 240, column: 7, scope: !8872)
!8876 = !DILocation(line: 241, column: 7, scope: !8872)
!8877 = !DILocation(line: 244, column: 3, scope: !8836)
!8878 = !DILocation(line: 245, column: 1, scope: !8836)
!8879 = distinct !DISubprogram(name: "punch_hole", scope: !242, file: !242, line: 205, type: !455, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8880 = !DILocalVariable(name: "fd", arg: 1, scope: !8879, file: !242, line: 205, type: !5)
!8881 = !DILocation(line: 205, column: 17, scope: !8879)
!8882 = !DILocalVariable(name: "offset", arg: 2, scope: !8879, file: !242, line: 205, type: !245)
!8883 = !DILocation(line: 205, column: 27, scope: !8879)
!8884 = !DILocalVariable(name: "length", arg: 3, scope: !8879, file: !242, line: 205, type: !245)
!8885 = !DILocation(line: 205, column: 41, scope: !8879)
!8886 = !DILocalVariable(name: "ret", scope: !8879, file: !242, line: 207, type: !5)
!8887 = !DILocation(line: 207, column: 7, scope: !8879)
!8888 = !DILocation(line: 211, column: 20, scope: !8879)
!8889 = !DILocation(line: 212, column: 20, scope: !8879)
!8890 = !DILocation(line: 212, column: 28, scope: !8879)
!8891 = !DILocation(line: 211, column: 9, scope: !8879)
!8892 = !DILocation(line: 211, column: 7, scope: !8879)
!8893 = !DILocation(line: 213, column: 7, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8879, file: !242, line: 213, column: 7)
!8895 = !DILocation(line: 213, column: 11, scope: !8894)
!8896 = !DILocation(line: 213, column: 15, scope: !8894)
!8897 = !DILocation(line: 213, column: 31, scope: !8894)
!8898 = !DILocation(line: 213, column: 19, scope: !8894)
!8899 = !DILocation(line: 213, column: 38, scope: !8894)
!8900 = !DILocation(line: 213, column: 41, scope: !8894)
!8901 = !DILocation(line: 213, column: 47, scope: !8894)
!8902 = !DILocation(line: 213, column: 7, scope: !8879)
!8903 = !DILocation(line: 214, column: 9, scope: !8894)
!8904 = !DILocation(line: 214, column: 5, scope: !8894)
!8905 = !DILocation(line: 217, column: 10, scope: !8879)
!8906 = !DILocation(line: 217, column: 3, scope: !8879)
!8907 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !138, file: !138, line: 762, type: !304, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8908 = !DILocalVariable(name: "err", arg: 1, scope: !8907, file: !138, line: 762, type: !5)
!8909 = !DILocation(line: 762, column: 17, scope: !8907)
!8910 = !DILocation(line: 764, column: 10, scope: !8907)
!8911 = !DILocation(line: 764, column: 14, scope: !8907)
!8912 = !DILocation(line: 764, column: 28, scope: !8907)
!8913 = !DILocation(line: 764, column: 3, scope: !8907)
!8914 = distinct !DISubprogram(name: "extent_scan_free", scope: !434, file: !434, line: 66, type: !439, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8915 = !DILocalVariable(name: "scan", arg: 1, scope: !8914, file: !434, line: 66, type: !441)
!8916 = !DILocation(line: 66, column: 39, scope: !8914)
!8917 = !DILocation(line: 68, column: 9, scope: !8914)
!8918 = !DILocation(line: 68, column: 15, scope: !8914)
!8919 = !DILocation(line: 68, column: 3, scope: !8914)
!8920 = !DILocation(line: 69, column: 3, scope: !8914)
!8921 = !DILocation(line: 69, column: 9, scope: !8914)
!8922 = !DILocation(line: 69, column: 18, scope: !8914)
!8923 = !DILocation(line: 70, column: 3, scope: !8914)
!8924 = !DILocation(line: 70, column: 9, scope: !8914)
!8925 = !DILocation(line: 70, column: 18, scope: !8914)
!8926 = !DILocation(line: 71, column: 1, scope: !8914)
!8927 = !DILocalVariable(name: "fd", arg: 1, scope: !491, file: !242, line: 385, type: !5)
!8928 = !DILocation(line: 385, column: 18, scope: !491)
!8929 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !491, file: !242, line: 385, type: !245)
!8930 = !DILocation(line: 385, column: 28, scope: !491)
!8931 = !DILocation(line: 393, column: 7, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !491, file: !242, line: 393, column: 7)
!8933 = !DILocation(line: 393, column: 13, scope: !8932)
!8934 = !DILocation(line: 393, column: 7, scope: !491)
!8935 = !DILocation(line: 396, column: 23, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8932, file: !242, line: 394, column: 5)
!8937 = !DILocation(line: 396, column: 15, scope: !8936)
!8938 = !DILocation(line: 396, column: 13, scope: !8936)
!8939 = !DILocation(line: 397, column: 11, scope: !8940)
!8940 = distinct !DILexicalBlock(scope: !8936, file: !242, line: 397, column: 11)
!8941 = !DILocation(line: 397, column: 17, scope: !8940)
!8942 = !DILocation(line: 397, column: 11, scope: !8936)
!8943 = !DILocation(line: 399, column: 17, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8940, file: !242, line: 398, column: 9)
!8945 = !DILocation(line: 400, column: 14, scope: !8944)
!8946 = !DILocation(line: 401, column: 9, scope: !8944)
!8947 = !DILocation(line: 402, column: 5, scope: !8936)
!8948 = !DILocation(line: 404, column: 3, scope: !491)
!8949 = !DILocation(line: 404, column: 10, scope: !491)
!8950 = !DILocalVariable(name: "n", scope: !8951, file: !242, line: 406, type: !52)
!8951 = distinct !DILexicalBlock(scope: !491, file: !242, line: 405, column: 5)
!8952 = !DILocation(line: 406, column: 14, scope: !8951)
!8953 = !DILocation(line: 406, column: 18, scope: !8951)
!8954 = !DILocation(line: 407, column: 24, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8951, file: !242, line: 407, column: 11)
!8956 = !DILocation(line: 407, column: 28, scope: !8955)
!8957 = !DILocation(line: 407, column: 35, scope: !8955)
!8958 = !DILocation(line: 407, column: 12, scope: !8955)
!8959 = !DILocation(line: 407, column: 42, scope: !8955)
!8960 = !DILocation(line: 407, column: 39, scope: !8955)
!8961 = !DILocation(line: 407, column: 11, scope: !8951)
!8962 = !DILocation(line: 408, column: 9, scope: !8955)
!8963 = !DILocation(line: 409, column: 18, scope: !8951)
!8964 = !DILocation(line: 409, column: 15, scope: !8951)
!8965 = distinct !{!8965, !8948, !8966}
!8966 = !DILocation(line: 410, column: 5, scope: !491)
!8967 = !DILocation(line: 412, column: 3, scope: !491)
!8968 = !DILocation(line: 413, column: 1, scope: !491)
!8969 = distinct !DISubprogram(name: "writable_destination", scope: !242, file: !242, line: 1702, type: !365, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8970 = !DILocalVariable(name: "file", arg: 1, scope: !8969, file: !242, line: 1702, type: !112)
!8971 = !DILocation(line: 1702, column: 35, scope: !8969)
!8972 = !DILocalVariable(name: "mode", arg: 2, scope: !8969, file: !242, line: 1702, type: !157)
!8973 = !DILocation(line: 1702, column: 48, scope: !8969)
!8974 = !DILocation(line: 1704, column: 11, scope: !8969)
!8975 = !DILocation(line: 1705, column: 11, scope: !8969)
!8976 = !DILocation(line: 1705, column: 14, scope: !8969)
!8977 = !DILocation(line: 1706, column: 11, scope: !8969)
!8978 = !DILocation(line: 1706, column: 26, scope: !8969)
!8979 = !DILocation(line: 1706, column: 14, scope: !8969)
!8980 = !DILocation(line: 1706, column: 38, scope: !8969)
!8981 = !DILocation(line: 1704, column: 3, scope: !8969)
!8982 = distinct !DISubprogram(name: "cp_options_default", scope: !242, file: !242, line: 3035, type: !294, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !140)
!8983 = !DILocalVariable(name: "x", arg: 1, scope: !8982, file: !242, line: 3035, type: !296)
!8984 = !DILocation(line: 3035, column: 40, scope: !8982)
!8985 = !DILocation(line: 3037, column: 11, scope: !8982)
!8986 = !DILocation(line: 3037, column: 3, scope: !8982)
!8987 = !DILocation(line: 3051, column: 48, scope: !8982)
!8988 = !DILocation(line: 3051, column: 59, scope: !8982)
!8989 = !DILocation(line: 3051, column: 25, scope: !8982)
!8990 = !DILocation(line: 3051, column: 28, scope: !8982)
!8991 = !DILocation(line: 3051, column: 45, scope: !8982)
!8992 = !DILocation(line: 3051, column: 3, scope: !8982)
!8993 = !DILocation(line: 3051, column: 6, scope: !8982)
!8994 = !DILocation(line: 3051, column: 23, scope: !8982)
!8995 = !DILocation(line: 3053, column: 3, scope: !8982)
!8996 = !DILocation(line: 3053, column: 6, scope: !8982)
!8997 = !DILocation(line: 3053, column: 19, scope: !8982)
!8998 = !DILocation(line: 3054, column: 1, scope: !8982)
!8999 = distinct !DISubprogram(name: "forget_created", scope: !502, file: !502, line: 82, type: !504, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9000 = !DILocalVariable(name: "ino", arg: 1, scope: !8999, file: !502, line: 82, type: !224)
!9001 = !DILocation(line: 82, column: 23, scope: !8999)
!9002 = !DILocalVariable(name: "dev", arg: 2, scope: !8999, file: !502, line: 82, type: !227)
!9003 = !DILocation(line: 82, column: 34, scope: !8999)
!9004 = !DILocalVariable(name: "probe", scope: !8999, file: !502, line: 84, type: !507)
!9005 = !DILocation(line: 84, column: 22, scope: !8999)
!9006 = !DILocalVariable(name: "ent", scope: !8999, file: !502, line: 85, type: !506)
!9007 = !DILocation(line: 85, column: 23, scope: !8999)
!9008 = !DILocation(line: 87, column: 18, scope: !8999)
!9009 = !DILocation(line: 87, column: 9, scope: !8999)
!9010 = !DILocation(line: 87, column: 16, scope: !8999)
!9011 = !{!9012, !3178, i64 0}
!9012 = !{!"Src_to_dest", !3178, i64 0, !3178, i64 8, !2994, i64 16}
!9013 = !DILocation(line: 88, column: 18, scope: !8999)
!9014 = !DILocation(line: 88, column: 9, scope: !8999)
!9015 = !DILocation(line: 88, column: 16, scope: !8999)
!9016 = !{!9012, !3178, i64 8}
!9017 = !DILocation(line: 89, column: 9, scope: !8999)
!9018 = !DILocation(line: 89, column: 14, scope: !8999)
!9019 = !{!9012, !2994, i64 16}
!9020 = !DILocation(line: 91, column: 22, scope: !8999)
!9021 = !DILocation(line: 91, column: 35, scope: !8999)
!9022 = !DILocation(line: 91, column: 9, scope: !8999)
!9023 = !DILocation(line: 91, column: 7, scope: !8999)
!9024 = !DILocation(line: 92, column: 7, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !8999, file: !502, line: 92, column: 7)
!9026 = !DILocation(line: 92, column: 7, scope: !8999)
!9027 = !DILocation(line: 93, column: 23, scope: !9025)
!9028 = !DILocation(line: 93, column: 5, scope: !9025)
!9029 = !DILocation(line: 94, column: 1, scope: !8999)
!9030 = distinct !DISubprogram(name: "src_to_dest_free", scope: !502, file: !502, line: 72, type: !518, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9031 = !DILocalVariable(name: "x", arg: 1, scope: !9030, file: !502, line: 72, type: !47)
!9032 = !DILocation(line: 72, column: 25, scope: !9030)
!9033 = !DILocalVariable(name: "a", scope: !9030, file: !502, line: 74, type: !506)
!9034 = !DILocation(line: 74, column: 23, scope: !9030)
!9035 = !DILocation(line: 74, column: 27, scope: !9030)
!9036 = !DILocation(line: 75, column: 9, scope: !9030)
!9037 = !DILocation(line: 75, column: 12, scope: !9030)
!9038 = !DILocation(line: 75, column: 3, scope: !9030)
!9039 = !DILocation(line: 76, column: 9, scope: !9030)
!9040 = !DILocation(line: 76, column: 3, scope: !9030)
!9041 = !DILocation(line: 77, column: 1, scope: !9030)
!9042 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !502, file: !502, line: 100, type: !512, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9043 = !DILocalVariable(name: "ino", arg: 1, scope: !9042, file: !502, line: 100, type: !224)
!9044 = !DILocation(line: 100, column: 27, scope: !9042)
!9045 = !DILocalVariable(name: "dev", arg: 2, scope: !9042, file: !502, line: 100, type: !227)
!9046 = !DILocation(line: 100, column: 38, scope: !9042)
!9047 = !DILocalVariable(name: "ent", scope: !9042, file: !502, line: 102, type: !507)
!9048 = !DILocation(line: 102, column: 22, scope: !9042)
!9049 = !DILocalVariable(name: "e", scope: !9042, file: !502, line: 103, type: !514)
!9050 = !DILocation(line: 103, column: 29, scope: !9042)
!9051 = !DILocation(line: 104, column: 16, scope: !9042)
!9052 = !DILocation(line: 104, column: 7, scope: !9042)
!9053 = !DILocation(line: 104, column: 14, scope: !9042)
!9054 = !DILocation(line: 105, column: 16, scope: !9042)
!9055 = !DILocation(line: 105, column: 7, scope: !9042)
!9056 = !DILocation(line: 105, column: 14, scope: !9042)
!9057 = !DILocation(line: 106, column: 20, scope: !9042)
!9058 = !DILocation(line: 106, column: 33, scope: !9042)
!9059 = !DILocation(line: 106, column: 7, scope: !9042)
!9060 = !DILocation(line: 106, column: 5, scope: !9042)
!9061 = !DILocation(line: 107, column: 10, scope: !9042)
!9062 = !DILocation(line: 107, column: 14, scope: !9042)
!9063 = !DILocation(line: 107, column: 17, scope: !9042)
!9064 = !DILocation(line: 107, column: 3, scope: !9042)
!9065 = distinct !DISubprogram(name: "remember_copied", scope: !502, file: !502, line: 115, type: !516, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9066 = !DILocalVariable(name: "name", arg: 1, scope: !9065, file: !502, line: 115, type: !112)
!9067 = !DILocation(line: 115, column: 30, scope: !9065)
!9068 = !DILocalVariable(name: "ino", arg: 2, scope: !9065, file: !502, line: 115, type: !224)
!9069 = !DILocation(line: 115, column: 42, scope: !9065)
!9070 = !DILocalVariable(name: "dev", arg: 3, scope: !9065, file: !502, line: 115, type: !227)
!9071 = !DILocation(line: 115, column: 53, scope: !9065)
!9072 = !DILocalVariable(name: "ent", scope: !9065, file: !502, line: 117, type: !506)
!9073 = !DILocation(line: 117, column: 23, scope: !9065)
!9074 = !DILocalVariable(name: "ent_from_table", scope: !9065, file: !502, line: 118, type: !506)
!9075 = !DILocation(line: 118, column: 23, scope: !9065)
!9076 = !DILocation(line: 120, column: 9, scope: !9065)
!9077 = !DILocation(line: 120, column: 7, scope: !9065)
!9078 = !DILocation(line: 121, column: 24, scope: !9065)
!9079 = !DILocation(line: 121, column: 15, scope: !9065)
!9080 = !DILocation(line: 121, column: 3, scope: !9065)
!9081 = !DILocation(line: 121, column: 8, scope: !9065)
!9082 = !DILocation(line: 121, column: 13, scope: !9065)
!9083 = !DILocation(line: 122, column: 17, scope: !9065)
!9084 = !DILocation(line: 122, column: 3, scope: !9065)
!9085 = !DILocation(line: 122, column: 8, scope: !9065)
!9086 = !DILocation(line: 122, column: 15, scope: !9065)
!9087 = !DILocation(line: 123, column: 17, scope: !9065)
!9088 = !DILocation(line: 123, column: 3, scope: !9065)
!9089 = !DILocation(line: 123, column: 8, scope: !9065)
!9090 = !DILocation(line: 123, column: 15, scope: !9065)
!9091 = !DILocation(line: 125, column: 33, scope: !9065)
!9092 = !DILocation(line: 125, column: 46, scope: !9065)
!9093 = !DILocation(line: 125, column: 20, scope: !9065)
!9094 = !DILocation(line: 125, column: 18, scope: !9065)
!9095 = !DILocation(line: 126, column: 7, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9065, file: !502, line: 126, column: 7)
!9097 = !DILocation(line: 126, column: 22, scope: !9096)
!9098 = !DILocation(line: 126, column: 7, scope: !9065)
!9099 = !DILocation(line: 129, column: 7, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9096, file: !502, line: 127, column: 5)
!9101 = !DILocation(line: 135, column: 7, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9065, file: !502, line: 135, column: 7)
!9103 = !DILocation(line: 135, column: 25, scope: !9102)
!9104 = !DILocation(line: 135, column: 22, scope: !9102)
!9105 = !DILocation(line: 135, column: 7, scope: !9065)
!9106 = !DILocation(line: 137, column: 25, scope: !9107)
!9107 = distinct !DILexicalBlock(scope: !9102, file: !502, line: 136, column: 5)
!9108 = !DILocation(line: 137, column: 7, scope: !9107)
!9109 = !DILocation(line: 138, column: 23, scope: !9107)
!9110 = !DILocation(line: 138, column: 39, scope: !9107)
!9111 = !DILocation(line: 138, column: 7, scope: !9107)
!9112 = !DILocation(line: 142, column: 3, scope: !9065)
!9113 = !DILocation(line: 143, column: 1, scope: !9065)
!9114 = distinct !DISubprogram(name: "hash_init", scope: !502, file: !502, line: 147, type: !131, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9115 = !DILocation(line: 149, column: 17, scope: !9114)
!9116 = !DILocation(line: 149, column: 15, scope: !9114)
!9117 = !DILocation(line: 153, column: 7, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9114, file: !502, line: 153, column: 7)
!9119 = !DILocation(line: 153, column: 19, scope: !9118)
!9120 = !DILocation(line: 153, column: 7, scope: !9114)
!9121 = !DILocation(line: 154, column: 5, scope: !9118)
!9122 = !DILocation(line: 155, column: 1, scope: !9114)
!9123 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !502, file: !502, line: 51, type: !520, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9124 = !DILocalVariable(name: "x", arg: 1, scope: !9123, file: !502, line: 51, type: !428)
!9125 = !DILocation(line: 51, column: 31, scope: !9123)
!9126 = !DILocalVariable(name: "table_size", arg: 2, scope: !9123, file: !502, line: 51, type: !52)
!9127 = !DILocation(line: 51, column: 41, scope: !9123)
!9128 = !DILocalVariable(name: "p", scope: !9123, file: !502, line: 53, type: !514)
!9129 = !DILocation(line: 53, column: 29, scope: !9123)
!9130 = !DILocation(line: 53, column: 33, scope: !9123)
!9131 = !DILocation(line: 58, column: 22, scope: !9123)
!9132 = !DILocation(line: 58, column: 25, scope: !9123)
!9133 = !DILocation(line: 58, column: 34, scope: !9123)
!9134 = !DILocation(line: 58, column: 32, scope: !9123)
!9135 = !DILocation(line: 58, column: 3, scope: !9123)
!9136 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !502, file: !502, line: 64, type: !522, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9137 = !DILocalVariable(name: "x", arg: 1, scope: !9136, file: !502, line: 64, type: !428)
!9138 = !DILocation(line: 64, column: 34, scope: !9136)
!9139 = !DILocalVariable(name: "y", arg: 2, scope: !9136, file: !502, line: 64, type: !428)
!9140 = !DILocation(line: 64, column: 49, scope: !9136)
!9141 = !DILocalVariable(name: "a", scope: !9136, file: !502, line: 66, type: !514)
!9142 = !DILocation(line: 66, column: 29, scope: !9136)
!9143 = !DILocation(line: 66, column: 33, scope: !9136)
!9144 = !DILocalVariable(name: "b", scope: !9136, file: !502, line: 67, type: !514)
!9145 = !DILocation(line: 67, column: 29, scope: !9136)
!9146 = !DILocation(line: 67, column: 33, scope: !9136)
!9147 = !DILocation(line: 68, column: 10, scope: !9136)
!9148 = !DILocation(line: 0, scope: !9136)
!9149 = !DILocation(line: 68, column: 3, scope: !9136)
!9150 = distinct !DISubprogram(name: "forget_all", scope: !502, file: !502, line: 161, type: !131, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !501, retainedNodes: !140)
!9151 = !DILocation(line: 163, column: 14, scope: !9150)
!9152 = !DILocation(line: 163, column: 3, scope: !9150)
!9153 = !DILocation(line: 164, column: 1, scope: !9150)
!9154 = distinct !DISubprogram(name: "extent_scan_init", scope: !1524, file: !1524, line: 69, type: !1527, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1523, retainedNodes: !140)
!9155 = !DILocalVariable(name: "src_fd", arg: 1, scope: !9154, file: !1524, line: 69, type: !5)
!9156 = !DILocation(line: 69, column: 23, scope: !9154)
!9157 = !DILocalVariable(name: "scan", arg: 2, scope: !9154, file: !1524, line: 69, type: !1529)
!9158 = !DILocation(line: 69, column: 51, scope: !9154)
!9159 = !DILocation(line: 71, column: 14, scope: !9154)
!9160 = !DILocation(line: 71, column: 3, scope: !9154)
!9161 = !DILocation(line: 71, column: 9, scope: !9154)
!9162 = !DILocation(line: 71, column: 12, scope: !9154)
!9163 = !{!8278, !2981, i64 0}
!9164 = !DILocation(line: 72, column: 3, scope: !9154)
!9165 = !DILocation(line: 72, column: 9, scope: !9154)
!9166 = !DILocation(line: 72, column: 18, scope: !9154)
!9167 = !DILocation(line: 73, column: 3, scope: !9154)
!9168 = !DILocation(line: 73, column: 9, scope: !9154)
!9169 = !DILocation(line: 73, column: 18, scope: !9154)
!9170 = !DILocation(line: 74, column: 3, scope: !9154)
!9171 = !DILocation(line: 74, column: 9, scope: !9154)
!9172 = !DILocation(line: 74, column: 20, scope: !9154)
!9173 = !{!8278, !3178, i64 8}
!9174 = !DILocation(line: 75, column: 3, scope: !9154)
!9175 = !DILocation(line: 75, column: 9, scope: !9154)
!9176 = !DILocation(line: 75, column: 29, scope: !9154)
!9177 = !DILocation(line: 76, column: 3, scope: !9154)
!9178 = !DILocation(line: 76, column: 9, scope: !9154)
!9179 = !DILocation(line: 76, column: 26, scope: !9154)
!9180 = !DILocation(line: 77, column: 20, scope: !9154)
!9181 = !DILocation(line: 77, column: 3, scope: !9154)
!9182 = !DILocation(line: 77, column: 9, scope: !9154)
!9183 = !DILocation(line: 77, column: 18, scope: !9154)
!9184 = !{!8278, !2981, i64 16}
!9185 = !DILocation(line: 78, column: 1, scope: !9154)
!9186 = distinct !DISubprogram(name: "extent_need_sync", scope: !1524, file: !1524, line: 33, type: !1234, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1523, retainedNodes: !140)
!9187 = !DILocation(line: 39, column: 3, scope: !9186)
!9188 = distinct !DISubprogram(name: "extent_scan_read", scope: !1524, file: !1524, line: 87, type: !1545, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1523, retainedNodes: !140)
!9189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9188, file: !1524, line: 94, size: 32768, elements: !9190)
!9190 = !{!9191, !9192}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !9189, file: !1524, line: 94, baseType: !1548, size: 256)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !9189, file: !1524, line: 94, baseType: !2800, size: 32768)
!9193 = !DILocalVariable(name: "scan", arg: 1, scope: !9188, file: !1524, line: 87, type: !1529)
!9194 = !DILocation(line: 87, column: 39, scope: !9188)
!9195 = !DILocalVariable(name: "si", scope: !9188, file: !1524, line: 89, type: !67)
!9196 = !DILocation(line: 89, column: 16, scope: !9188)
!9197 = !DILocalVariable(name: "last_ei", scope: !9188, file: !1524, line: 90, type: !1539)
!9198 = !DILocation(line: 90, column: 23, scope: !9188)
!9199 = !DILocation(line: 90, column: 33, scope: !9188)
!9200 = !DILocation(line: 90, column: 39, scope: !9188)
!9201 = !DILocation(line: 92, column: 3, scope: !9188)
!9202 = !DILocalVariable(name: "fiemap_buf", scope: !9203, file: !1524, line: 94, type: !9189)
!9203 = distinct !DILexicalBlock(scope: !9188, file: !1524, line: 93, column: 5)
!9204 = !DILocation(line: 94, column: 48, scope: !9203)
!9205 = !DILocalVariable(name: "fiemap", scope: !9203, file: !1524, line: 95, type: !1547)
!9206 = !DILocation(line: 95, column: 22, scope: !9203)
!9207 = !DILocation(line: 95, column: 43, scope: !9203)
!9208 = !DILocalVariable(name: "fm_extents", scope: !9203, file: !1524, line: 96, type: !1571)
!9209 = !DILocation(line: 96, column: 29, scope: !9203)
!9210 = !DILocation(line: 96, column: 43, scope: !9203)
!9211 = !DILocation(line: 96, column: 51, scope: !9203)
!9212 = !DILocation(line: 104, column: 7, scope: !9203)
!9213 = !DILocation(line: 106, column: 26, scope: !9203)
!9214 = !DILocation(line: 106, column: 32, scope: !9203)
!9215 = !DILocation(line: 106, column: 7, scope: !9203)
!9216 = !DILocation(line: 106, column: 15, scope: !9203)
!9217 = !DILocation(line: 106, column: 24, scope: !9203)
!9218 = !DILocation(line: 107, column: 26, scope: !9203)
!9219 = !DILocation(line: 107, column: 32, scope: !9203)
!9220 = !DILocation(line: 107, column: 7, scope: !9203)
!9221 = !DILocation(line: 107, column: 15, scope: !9203)
!9222 = !DILocation(line: 107, column: 24, scope: !9203)
!9223 = !DILocation(line: 108, column: 7, scope: !9203)
!9224 = !DILocation(line: 108, column: 15, scope: !9203)
!9225 = !DILocation(line: 108, column: 31, scope: !9203)
!9226 = !DILocation(line: 109, column: 47, scope: !9203)
!9227 = !DILocation(line: 109, column: 53, scope: !9203)
!9228 = !DILocation(line: 109, column: 45, scope: !9203)
!9229 = !DILocation(line: 109, column: 7, scope: !9203)
!9230 = !DILocation(line: 109, column: 15, scope: !9203)
!9231 = !DILocation(line: 109, column: 25, scope: !9203)
!9232 = !DILocation(line: 113, column: 18, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 113, column: 11)
!9234 = !DILocation(line: 113, column: 24, scope: !9233)
!9235 = !DILocation(line: 113, column: 43, scope: !9233)
!9236 = !DILocation(line: 113, column: 11, scope: !9233)
!9237 = !DILocation(line: 113, column: 51, scope: !9233)
!9238 = !DILocation(line: 113, column: 11, scope: !9203)
!9239 = !DILocation(line: 115, column: 15, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9241, file: !1524, line: 115, column: 15)
!9241 = distinct !DILexicalBlock(scope: !9233, file: !1524, line: 114, column: 9)
!9242 = !DILocation(line: 115, column: 21, scope: !9240)
!9243 = !DILocation(line: 115, column: 32, scope: !9240)
!9244 = !DILocation(line: 115, column: 15, scope: !9241)
!9245 = !DILocation(line: 116, column: 13, scope: !9240)
!9246 = !DILocation(line: 116, column: 19, scope: !9240)
!9247 = !DILocation(line: 116, column: 39, scope: !9240)
!9248 = !DILocation(line: 117, column: 11, scope: !9241)
!9249 = !DILocation(line: 121, column: 11, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 121, column: 11)
!9251 = !DILocation(line: 121, column: 19, scope: !9250)
!9252 = !DILocation(line: 121, column: 37, scope: !9250)
!9253 = !DILocation(line: 121, column: 11, scope: !9203)
!9254 = !DILocation(line: 123, column: 11, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9250, file: !1524, line: 122, column: 9)
!9256 = !DILocation(line: 123, column: 17, scope: !9255)
!9257 = !DILocation(line: 123, column: 34, scope: !9255)
!9258 = !DILocation(line: 124, column: 18, scope: !9255)
!9259 = !DILocation(line: 124, column: 24, scope: !9255)
!9260 = !DILocation(line: 124, column: 35, scope: !9255)
!9261 = !DILocation(line: 124, column: 11, scope: !9255)
!9262 = !DILocation(line: 127, column: 7, scope: !9203)
!9263 = !DILocation(line: 128, column: 25, scope: !9203)
!9264 = !DILocation(line: 128, column: 33, scope: !9203)
!9265 = !DILocation(line: 128, column: 7, scope: !9203)
!9266 = !DILocation(line: 128, column: 13, scope: !9203)
!9267 = !DILocation(line: 128, column: 22, scope: !9203)
!9268 = !DILocalVariable(name: "prev_idx", scope: !9269, file: !1524, line: 132, type: !52)
!9269 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 129, column: 7)
!9270 = !DILocation(line: 132, column: 16, scope: !9269)
!9271 = !DILocation(line: 132, column: 27, scope: !9269)
!9272 = !DILocation(line: 132, column: 37, scope: !9269)
!9273 = !DILocation(line: 132, column: 43, scope: !9269)
!9274 = !DILocation(line: 132, column: 35, scope: !9269)
!9275 = !DILocation(line: 133, column: 37, scope: !9269)
!9276 = !DILocation(line: 133, column: 43, scope: !9269)
!9277 = !DILocation(line: 133, column: 53, scope: !9269)
!9278 = !DILocation(line: 133, column: 59, scope: !9269)
!9279 = !DILocation(line: 133, column: 26, scope: !9269)
!9280 = !DILocation(line: 133, column: 9, scope: !9269)
!9281 = !DILocation(line: 133, column: 15, scope: !9269)
!9282 = !DILocation(line: 133, column: 24, scope: !9269)
!9283 = !DILocation(line: 135, column: 19, scope: !9269)
!9284 = !DILocation(line: 135, column: 25, scope: !9269)
!9285 = !DILocation(line: 135, column: 36, scope: !9269)
!9286 = !DILocation(line: 135, column: 34, scope: !9269)
!9287 = !DILocation(line: 135, column: 17, scope: !9269)
!9288 = !DILocalVariable(name: "i", scope: !9203, file: !1524, line: 138, type: !67)
!9289 = !DILocation(line: 138, column: 20, scope: !9203)
!9290 = !DILocation(line: 139, column: 14, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 139, column: 7)
!9292 = !DILocation(line: 139, column: 12, scope: !9291)
!9293 = !DILocation(line: 139, column: 19, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9291, file: !1524, line: 139, column: 7)
!9295 = !DILocation(line: 139, column: 23, scope: !9294)
!9296 = !DILocation(line: 139, column: 31, scope: !9294)
!9297 = !DILocation(line: 139, column: 21, scope: !9294)
!9298 = !DILocation(line: 139, column: 7, scope: !9291)
!9299 = !DILocation(line: 141, column: 11, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9294, file: !1524, line: 140, column: 9)
!9301 = !{!9302, !3178, i64 0}
!9302 = !{!"fiemap_extent", !3178, i64 0, !3178, i64 8, !3178, i64 16, !2982, i64 24, !2981, i64 40, !2982, i64 44}
!9303 = !{!9302, !3178, i64 16}
!9304 = !DILocation(line: 146, column: 15, scope: !9305)
!9305 = distinct !DILexicalBlock(scope: !9300, file: !1524, line: 146, column: 15)
!9306 = !DILocation(line: 146, column: 18, scope: !9305)
!9307 = !DILocation(line: 146, column: 21, scope: !9305)
!9308 = !DILocation(line: 146, column: 30, scope: !9305)
!9309 = !{!8327, !2981, i64 16}
!9310 = !DILocation(line: 147, column: 19, scope: !9305)
!9311 = !DILocation(line: 147, column: 30, scope: !9305)
!9312 = !DILocation(line: 147, column: 33, scope: !9305)
!9313 = !{!9302, !2981, i64 40}
!9314 = !DILocation(line: 147, column: 42, scope: !9305)
!9315 = !DILocation(line: 147, column: 15, scope: !9305)
!9316 = !DILocation(line: 148, column: 15, scope: !9305)
!9317 = !DILocation(line: 148, column: 19, scope: !9305)
!9318 = !DILocation(line: 148, column: 28, scope: !9305)
!9319 = !DILocation(line: 148, column: 42, scope: !9305)
!9320 = !DILocation(line: 148, column: 51, scope: !9305)
!9321 = !DILocation(line: 148, column: 40, scope: !9305)
!9322 = !DILocation(line: 149, column: 22, scope: !9305)
!9323 = !DILocation(line: 149, column: 33, scope: !9305)
!9324 = !DILocation(line: 149, column: 36, scope: !9305)
!9325 = !DILocation(line: 149, column: 19, scope: !9305)
!9326 = !DILocation(line: 146, column: 15, scope: !9300)
!9327 = !DILocation(line: 152, column: 38, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9305, file: !1524, line: 150, column: 13)
!9329 = !DILocation(line: 152, column: 49, scope: !9328)
!9330 = !DILocation(line: 152, column: 52, scope: !9328)
!9331 = !DILocation(line: 152, column: 15, scope: !9328)
!9332 = !DILocation(line: 152, column: 24, scope: !9328)
!9333 = !DILocation(line: 152, column: 35, scope: !9328)
!9334 = !DILocation(line: 154, column: 36, scope: !9328)
!9335 = !DILocation(line: 154, column: 47, scope: !9328)
!9336 = !DILocation(line: 154, column: 50, scope: !9328)
!9337 = !DILocation(line: 154, column: 15, scope: !9328)
!9338 = !DILocation(line: 154, column: 24, scope: !9328)
!9339 = !DILocation(line: 154, column: 34, scope: !9328)
!9340 = !DILocation(line: 155, column: 13, scope: !9328)
!9341 = !DILocation(line: 156, column: 21, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9305, file: !1524, line: 156, column: 20)
!9343 = !DILocation(line: 156, column: 24, scope: !9342)
!9344 = !DILocation(line: 156, column: 29, scope: !9342)
!9345 = !DILocation(line: 156, column: 32, scope: !9342)
!9346 = !DILocation(line: 156, column: 38, scope: !9342)
!9347 = !DILocation(line: 156, column: 51, scope: !9342)
!9348 = !DILocation(line: 156, column: 62, scope: !9342)
!9349 = !DILocation(line: 156, column: 65, scope: !9342)
!9350 = !DILocation(line: 156, column: 49, scope: !9342)
!9351 = !DILocation(line: 157, column: 20, scope: !9342)
!9352 = !DILocation(line: 157, column: 24, scope: !9342)
!9353 = !DILocation(line: 157, column: 27, scope: !9342)
!9354 = !DILocation(line: 157, column: 31, scope: !9342)
!9355 = !DILocation(line: 157, column: 40, scope: !9342)
!9356 = !DILocation(line: 157, column: 54, scope: !9342)
!9357 = !DILocation(line: 157, column: 63, scope: !9342)
!9358 = !DILocation(line: 157, column: 52, scope: !9342)
!9359 = !DILocation(line: 158, column: 33, scope: !9342)
!9360 = !DILocation(line: 158, column: 44, scope: !9342)
!9361 = !DILocation(line: 158, column: 47, scope: !9342)
!9362 = !DILocation(line: 158, column: 31, scope: !9342)
!9363 = !DILocation(line: 156, column: 20, scope: !9305)
!9364 = !DILocalVariable(name: "new_logical", scope: !9365, file: !1524, line: 164, type: !1552)
!9365 = distinct !DILexicalBlock(scope: !9342, file: !1524, line: 159, column: 13)
!9366 = !DILocation(line: 164, column: 24, scope: !9365)
!9367 = !DILocalVariable(name: "length_adjust", scope: !9365, file: !1524, line: 165, type: !1552)
!9368 = !DILocation(line: 165, column: 24, scope: !9365)
!9369 = !DILocation(line: 166, column: 19, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9365, file: !1524, line: 166, column: 19)
!9371 = !DILocation(line: 166, column: 22, scope: !9370)
!9372 = !DILocation(line: 166, column: 19, scope: !9365)
!9373 = !DILocation(line: 167, column: 31, scope: !9370)
!9374 = !DILocation(line: 167, column: 37, scope: !9370)
!9375 = !DILocation(line: 167, column: 29, scope: !9370)
!9376 = !DILocation(line: 167, column: 17, scope: !9370)
!9377 = !DILocation(line: 172, column: 33, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9370, file: !1524, line: 169, column: 17)
!9379 = !DILocation(line: 172, column: 42, scope: !9378)
!9380 = !DILocation(line: 172, column: 56, scope: !9378)
!9381 = !DILocation(line: 172, column: 65, scope: !9378)
!9382 = !DILocation(line: 172, column: 54, scope: !9378)
!9383 = !DILocation(line: 172, column: 31, scope: !9378)
!9384 = !DILocation(line: 174, column: 31, scope: !9365)
!9385 = !DILocation(line: 174, column: 45, scope: !9365)
!9386 = !DILocation(line: 174, column: 56, scope: !9365)
!9387 = !DILocation(line: 174, column: 59, scope: !9365)
!9388 = !DILocation(line: 174, column: 43, scope: !9365)
!9389 = !DILocation(line: 174, column: 29, scope: !9365)
!9390 = !DILocation(line: 176, column: 19, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9365, file: !1524, line: 176, column: 19)
!9392 = !DILocation(line: 176, column: 35, scope: !9391)
!9393 = !DILocation(line: 176, column: 46, scope: !9391)
!9394 = !DILocation(line: 176, column: 49, scope: !9391)
!9395 = !DILocation(line: 176, column: 33, scope: !9391)
!9396 = !DILocation(line: 176, column: 19, scope: !9365)
!9397 = !DILocation(line: 178, column: 23, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9399, file: !1524, line: 178, column: 23)
!9399 = distinct !DILexicalBlock(scope: !9391, file: !1524, line: 177, column: 17)
!9400 = !DILocation(line: 178, column: 29, scope: !9398)
!9401 = !DILocation(line: 178, column: 40, scope: !9398)
!9402 = !DILocation(line: 178, column: 23, scope: !9399)
!9403 = !DILocation(line: 179, column: 21, scope: !9398)
!9404 = !DILocation(line: 179, column: 27, scope: !9398)
!9405 = !DILocation(line: 179, column: 47, scope: !9398)
!9406 = !DILocation(line: 180, column: 19, scope: !9399)
!9407 = !DILocation(line: 182, column: 42, scope: !9365)
!9408 = !DILocation(line: 182, column: 15, scope: !9365)
!9409 = !DILocation(line: 182, column: 26, scope: !9365)
!9410 = !DILocation(line: 182, column: 29, scope: !9365)
!9411 = !DILocation(line: 182, column: 40, scope: !9365)
!9412 = !DILocation(line: 183, column: 42, scope: !9365)
!9413 = !DILocation(line: 183, column: 15, scope: !9365)
!9414 = !DILocation(line: 183, column: 26, scope: !9365)
!9415 = !DILocation(line: 183, column: 29, scope: !9365)
!9416 = !DILocation(line: 183, column: 39, scope: !9365)
!9417 = !DILocation(line: 185, column: 16, scope: !9365)
!9418 = !DILocation(line: 186, column: 15, scope: !9365)
!9419 = !DILocation(line: 190, column: 25, scope: !9420)
!9420 = distinct !DILexicalBlock(scope: !9342, file: !1524, line: 189, column: 13)
!9421 = !DILocation(line: 190, column: 31, scope: !9420)
!9422 = !DILocation(line: 190, column: 42, scope: !9420)
!9423 = !DILocation(line: 190, column: 40, scope: !9420)
!9424 = !DILocation(line: 190, column: 23, scope: !9420)
!9425 = !DILocation(line: 191, column: 38, scope: !9420)
!9426 = !DILocation(line: 191, column: 49, scope: !9420)
!9427 = !DILocation(line: 191, column: 52, scope: !9420)
!9428 = !DILocation(line: 191, column: 15, scope: !9420)
!9429 = !DILocation(line: 191, column: 24, scope: !9420)
!9430 = !DILocation(line: 191, column: 36, scope: !9420)
!9431 = !DILocation(line: 192, column: 37, scope: !9420)
!9432 = !DILocation(line: 192, column: 48, scope: !9420)
!9433 = !DILocation(line: 192, column: 51, scope: !9420)
!9434 = !DILocation(line: 192, column: 15, scope: !9420)
!9435 = !DILocation(line: 192, column: 24, scope: !9420)
!9436 = !DILocation(line: 192, column: 35, scope: !9420)
!9437 = !DILocation(line: 193, column: 36, scope: !9420)
!9438 = !DILocation(line: 193, column: 47, scope: !9420)
!9439 = !DILocation(line: 193, column: 50, scope: !9420)
!9440 = !DILocation(line: 193, column: 15, scope: !9420)
!9441 = !DILocation(line: 193, column: 24, scope: !9420)
!9442 = !DILocation(line: 193, column: 34, scope: !9420)
!9443 = !DILocation(line: 194, column: 17, scope: !9420)
!9444 = !DILocation(line: 196, column: 9, scope: !9300)
!9445 = !DILocation(line: 139, column: 51, scope: !9294)
!9446 = !DILocation(line: 139, column: 7, scope: !9294)
!9447 = distinct !{!9447, !9298, !9448}
!9448 = !DILocation(line: 196, column: 9, scope: !9291)
!9449 = !DILocation(line: 198, column: 11, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 198, column: 11)
!9451 = !DILocation(line: 198, column: 20, scope: !9450)
!9452 = !DILocation(line: 198, column: 30, scope: !9450)
!9453 = !DILocation(line: 198, column: 11, scope: !9203)
!9454 = !DILocation(line: 199, column: 9, scope: !9450)
!9455 = !DILocation(line: 199, column: 15, scope: !9450)
!9456 = !DILocation(line: 199, column: 32, scope: !9450)
!9457 = !DILocation(line: 203, column: 11, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 203, column: 11)
!9459 = !DILocation(line: 203, column: 14, scope: !9458)
!9460 = !DILocation(line: 203, column: 22, scope: !9458)
!9461 = !DILocation(line: 203, column: 26, scope: !9458)
!9462 = !DILocation(line: 203, column: 32, scope: !9458)
!9463 = !DILocation(line: 203, column: 11, scope: !9203)
!9464 = !DILocation(line: 204, column: 19, scope: !9458)
!9465 = !DILocation(line: 204, column: 25, scope: !9458)
!9466 = !DILocation(line: 204, column: 36, scope: !9458)
!9467 = !DILocation(line: 204, column: 34, scope: !9458)
!9468 = !DILocation(line: 204, column: 41, scope: !9458)
!9469 = !DILocation(line: 204, column: 17, scope: !9458)
!9470 = !DILocation(line: 204, column: 9, scope: !9458)
!9471 = !DILocation(line: 207, column: 24, scope: !9203)
!9472 = !DILocation(line: 207, column: 7, scope: !9203)
!9473 = !DILocation(line: 207, column: 13, scope: !9203)
!9474 = !DILocation(line: 207, column: 22, scope: !9203)
!9475 = !DILocation(line: 209, column: 11, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 209, column: 11)
!9477 = !DILocation(line: 209, column: 17, scope: !9476)
!9478 = !DILocation(line: 209, column: 11, scope: !9203)
!9479 = !DILocation(line: 210, column: 9, scope: !9476)
!9480 = !DILocation(line: 212, column: 28, scope: !9476)
!9481 = !DILocation(line: 212, column: 37, scope: !9476)
!9482 = !DILocation(line: 212, column: 51, scope: !9476)
!9483 = !DILocation(line: 212, column: 60, scope: !9476)
!9484 = !DILocation(line: 212, column: 49, scope: !9476)
!9485 = !DILocation(line: 212, column: 9, scope: !9476)
!9486 = !DILocation(line: 212, column: 15, scope: !9476)
!9487 = !DILocation(line: 212, column: 26, scope: !9476)
!9488 = !DILocation(line: 214, column: 11, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9203, file: !1524, line: 214, column: 11)
!9490 = !DILocation(line: 214, column: 14, scope: !9489)
!9491 = !DILocation(line: 214, column: 11, scope: !9203)
!9492 = !DILocation(line: 215, column: 9, scope: !9489)
!9493 = distinct !{!9493, !9201, !9494}
!9494 = !DILocation(line: 216, column: 5, scope: !9188)
!9495 = !DILocation(line: 218, column: 3, scope: !9188)
!9496 = !DILocation(line: 219, column: 1, scope: !9188)
!9497 = distinct !DISubprogram(name: "force_linkat", scope: !528, file: !528, line: 95, type: !530, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !527, retainedNodes: !140)
!9498 = !DILocalVariable(name: "srcdir", arg: 1, scope: !9497, file: !528, line: 95, type: !5)
!9499 = !DILocation(line: 95, column: 19, scope: !9497)
!9500 = !DILocalVariable(name: "srcname", arg: 2, scope: !9497, file: !528, line: 95, type: !112)
!9501 = !DILocation(line: 95, column: 39, scope: !9497)
!9502 = !DILocalVariable(name: "dstdir", arg: 3, scope: !9497, file: !528, line: 96, type: !5)
!9503 = !DILocation(line: 96, column: 19, scope: !9497)
!9504 = !DILocalVariable(name: "dstname", arg: 4, scope: !9497, file: !528, line: 96, type: !112)
!9505 = !DILocation(line: 96, column: 39, scope: !9497)
!9506 = !DILocalVariable(name: "flags", arg: 5, scope: !9497, file: !528, line: 96, type: !5)
!9507 = !DILocation(line: 96, column: 52, scope: !9497)
!9508 = !DILocalVariable(name: "force", arg: 6, scope: !9497, file: !528, line: 96, type: !117)
!9509 = !DILocation(line: 96, column: 64, scope: !9497)
!9510 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !9497, file: !528, line: 97, type: !5)
!9511 = !DILocation(line: 97, column: 19, scope: !9497)
!9512 = !DILocation(line: 99, column: 7, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9497, file: !528, line: 99, column: 7)
!9514 = !DILocation(line: 99, column: 20, scope: !9513)
!9515 = !DILocation(line: 99, column: 7, scope: !9497)
!9516 = !DILocation(line: 100, column: 29, scope: !9513)
!9517 = !DILocation(line: 100, column: 37, scope: !9513)
!9518 = !DILocation(line: 100, column: 46, scope: !9513)
!9519 = !DILocation(line: 100, column: 54, scope: !9513)
!9520 = !DILocation(line: 100, column: 63, scope: !9513)
!9521 = !DILocation(line: 100, column: 21, scope: !9513)
!9522 = !DILocation(line: 100, column: 70, scope: !9513)
!9523 = !DILocation(line: 101, column: 27, scope: !9513)
!9524 = !DILocation(line: 100, column: 18, scope: !9513)
!9525 = !DILocation(line: 100, column: 5, scope: !9513)
!9526 = !DILocation(line: 102, column: 8, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9497, file: !528, line: 102, column: 7)
!9528 = !DILocation(line: 102, column: 14, scope: !9527)
!9529 = !DILocation(line: 102, column: 17, scope: !9527)
!9530 = !DILocation(line: 102, column: 30, scope: !9527)
!9531 = !DILocation(line: 102, column: 7, scope: !9497)
!9532 = !DILocation(line: 103, column: 12, scope: !9527)
!9533 = !DILocation(line: 103, column: 5, scope: !9527)
!9534 = !DILocalVariable(name: "buf", scope: !9497, file: !528, line: 105, type: !532)
!9535 = !DILocation(line: 105, column: 8, scope: !9497)
!9536 = !DILocalVariable(name: "dsttmp", scope: !9497, file: !528, line: 106, type: !7)
!9537 = !DILocation(line: 106, column: 9, scope: !9497)
!9538 = !DILocation(line: 106, column: 36, scope: !9497)
!9539 = !DILocation(line: 106, column: 45, scope: !9497)
!9540 = !DILocation(line: 106, column: 18, scope: !9497)
!9541 = !DILocation(line: 107, column: 9, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9497, file: !528, line: 107, column: 7)
!9543 = !DILocation(line: 107, column: 7, scope: !9497)
!9544 = !DILocation(line: 108, column: 12, scope: !9542)
!9545 = !DILocation(line: 108, column: 5, scope: !9542)
!9546 = !DILocalVariable(name: "arg", scope: !9497, file: !528, line: 109, type: !546)
!9547 = !DILocation(line: 109, column: 19, scope: !9497)
!9548 = !DILocation(line: 109, column: 25, scope: !9497)
!9549 = !DILocation(line: 109, column: 27, scope: !9497)
!9550 = !{!9551, !2981, i64 0}
!9551 = !{!"link_arg", !2981, i64 0, !2994, i64 8, !2981, i64 16, !2981, i64 20}
!9552 = !DILocation(line: 109, column: 35, scope: !9497)
!9553 = !{!9551, !2994, i64 8}
!9554 = !DILocation(line: 109, column: 44, scope: !9497)
!9555 = !{!9551, !2981, i64 16}
!9556 = !DILocation(line: 109, column: 52, scope: !9497)
!9557 = !{!9551, !2981, i64 20}
!9558 = !DILocalVariable(name: "err", scope: !9497, file: !528, line: 110, type: !5)
!9559 = !DILocation(line: 110, column: 7, scope: !9497)
!9560 = !DILocation(line: 112, column: 25, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9497, file: !528, line: 112, column: 7)
!9562 = !DILocation(line: 112, column: 36, scope: !9561)
!9563 = !DILocation(line: 112, column: 7, scope: !9561)
!9564 = !DILocation(line: 112, column: 66, scope: !9561)
!9565 = !DILocation(line: 112, column: 7, scope: !9497)
!9566 = !DILocation(line: 113, column: 11, scope: !9561)
!9567 = !DILocation(line: 113, column: 9, scope: !9561)
!9568 = !DILocation(line: 113, column: 5, scope: !9561)
!9569 = !DILocation(line: 116, column: 23, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9561, file: !528, line: 115, column: 5)
!9571 = !DILocation(line: 116, column: 31, scope: !9570)
!9572 = !DILocation(line: 116, column: 39, scope: !9570)
!9573 = !DILocation(line: 116, column: 47, scope: !9570)
!9574 = !DILocation(line: 116, column: 13, scope: !9570)
!9575 = !DILocation(line: 116, column: 56, scope: !9570)
!9576 = !DILocation(line: 116, column: 68, scope: !9570)
!9577 = !DILocation(line: 116, column: 11, scope: !9570)
!9578 = !DILocation(line: 120, column: 17, scope: !9570)
!9579 = !DILocation(line: 120, column: 25, scope: !9570)
!9580 = !DILocation(line: 120, column: 7, scope: !9570)
!9581 = !DILocation(line: 123, column: 7, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9497, file: !528, line: 123, column: 7)
!9583 = !DILocation(line: 123, column: 17, scope: !9582)
!9584 = !DILocation(line: 123, column: 14, scope: !9582)
!9585 = !DILocation(line: 123, column: 7, scope: !9497)
!9586 = !DILocation(line: 124, column: 11, scope: !9582)
!9587 = !DILocation(line: 124, column: 5, scope: !9582)
!9588 = !DILocation(line: 125, column: 10, scope: !9497)
!9589 = !DILocation(line: 125, column: 3, scope: !9497)
!9590 = !DILocation(line: 126, column: 1, scope: !9497)
!9591 = distinct !DISubprogram(name: "samedir_template", scope: !528, file: !528, line: 51, type: !537, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !140)
!9592 = !DILocalVariable(name: "dstname", arg: 1, scope: !9591, file: !528, line: 51, type: !112)
!9593 = !DILocation(line: 51, column: 31, scope: !9591)
!9594 = !DILocalVariable(name: "buf", arg: 2, scope: !9591, file: !528, line: 51, type: !7)
!9595 = !DILocation(line: 51, column: 45, scope: !9591)
!9596 = !DILocalVariable(name: "dstdirlen", scope: !9591, file: !528, line: 53, type: !539)
!9597 = !DILocation(line: 53, column: 13, scope: !9591)
!9598 = !DILocation(line: 53, column: 41, scope: !9591)
!9599 = !DILocation(line: 53, column: 25, scope: !9591)
!9600 = !DILocation(line: 53, column: 52, scope: !9591)
!9601 = !DILocation(line: 53, column: 50, scope: !9591)
!9602 = !DILocalVariable(name: "dsttmpsize", scope: !9591, file: !528, line: 54, type: !52)
!9603 = !DILocation(line: 54, column: 10, scope: !9591)
!9604 = !DILocation(line: 54, column: 23, scope: !9591)
!9605 = !DILocation(line: 54, column: 33, scope: !9591)
!9606 = !DILocalVariable(name: "dsttmp", scope: !9591, file: !528, line: 55, type: !7)
!9607 = !DILocation(line: 55, column: 9, scope: !9591)
!9608 = !DILocation(line: 56, column: 7, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9591, file: !528, line: 56, column: 7)
!9610 = !DILocation(line: 56, column: 18, scope: !9609)
!9611 = !DILocation(line: 56, column: 7, scope: !9591)
!9612 = !DILocation(line: 57, column: 14, scope: !9609)
!9613 = !DILocation(line: 57, column: 12, scope: !9609)
!9614 = !DILocation(line: 57, column: 5, scope: !9609)
!9615 = !DILocation(line: 60, column: 24, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9609, file: !528, line: 59, column: 5)
!9617 = !DILocation(line: 60, column: 16, scope: !9616)
!9618 = !DILocation(line: 60, column: 14, scope: !9616)
!9619 = !DILocation(line: 61, column: 12, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9616, file: !528, line: 61, column: 11)
!9621 = !DILocation(line: 61, column: 11, scope: !9616)
!9622 = !DILocation(line: 62, column: 16, scope: !9620)
!9623 = !DILocation(line: 62, column: 9, scope: !9620)
!9624 = !DILocation(line: 64, column: 20, scope: !9591)
!9625 = !DILocation(line: 64, column: 28, scope: !9591)
!9626 = !DILocation(line: 64, column: 37, scope: !9591)
!9627 = !DILocation(line: 64, column: 11, scope: !9591)
!9628 = !DILocation(line: 64, column: 3, scope: !9591)
!9629 = !DILocation(line: 65, column: 10, scope: !9591)
!9630 = !DILocation(line: 65, column: 3, scope: !9591)
!9631 = !DILocation(line: 66, column: 1, scope: !9591)
!9632 = distinct !DISubprogram(name: "try_link", scope: !528, file: !528, line: 80, type: !543, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !140)
!9633 = !DILocalVariable(name: "dest", arg: 1, scope: !9632, file: !528, line: 80, type: !7)
!9634 = !DILocation(line: 80, column: 17, scope: !9632)
!9635 = !DILocalVariable(name: "arg", arg: 2, scope: !9632, file: !528, line: 80, type: !47)
!9636 = !DILocation(line: 80, column: 29, scope: !9632)
!9637 = !DILocalVariable(name: "a", scope: !9632, file: !528, line: 82, type: !545)
!9638 = !DILocation(line: 82, column: 20, scope: !9632)
!9639 = !DILocation(line: 82, column: 24, scope: !9632)
!9640 = !DILocation(line: 83, column: 18, scope: !9632)
!9641 = !DILocation(line: 83, column: 21, scope: !9632)
!9642 = !DILocation(line: 83, column: 29, scope: !9632)
!9643 = !DILocation(line: 83, column: 32, scope: !9632)
!9644 = !DILocation(line: 83, column: 41, scope: !9632)
!9645 = !DILocation(line: 83, column: 44, scope: !9632)
!9646 = !DILocation(line: 83, column: 52, scope: !9632)
!9647 = !DILocation(line: 83, column: 58, scope: !9632)
!9648 = !DILocation(line: 83, column: 61, scope: !9632)
!9649 = !DILocation(line: 83, column: 10, scope: !9632)
!9650 = !DILocation(line: 83, column: 3, scope: !9632)
!9651 = distinct !DISubprogram(name: "force_symlinkat", scope: !528, file: !528, line: 152, type: !535, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !527, retainedNodes: !140)
!9652 = !DILocalVariable(name: "srcname", arg: 1, scope: !9651, file: !528, line: 152, type: !112)
!9653 = !DILocation(line: 152, column: 30, scope: !9651)
!9654 = !DILocalVariable(name: "dstdir", arg: 2, scope: !9651, file: !528, line: 152, type: !5)
!9655 = !DILocation(line: 152, column: 43, scope: !9651)
!9656 = !DILocalVariable(name: "dstname", arg: 3, scope: !9651, file: !528, line: 152, type: !112)
!9657 = !DILocation(line: 152, column: 63, scope: !9651)
!9658 = !DILocalVariable(name: "force", arg: 4, scope: !9651, file: !528, line: 153, type: !117)
!9659 = !DILocation(line: 153, column: 23, scope: !9651)
!9660 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !9651, file: !528, line: 153, type: !5)
!9661 = !DILocation(line: 153, column: 34, scope: !9651)
!9662 = !DILocation(line: 155, column: 7, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9651, file: !528, line: 155, column: 7)
!9664 = !DILocation(line: 155, column: 23, scope: !9663)
!9665 = !DILocation(line: 155, column: 7, scope: !9651)
!9666 = !DILocation(line: 156, column: 34, scope: !9663)
!9667 = !DILocation(line: 156, column: 43, scope: !9663)
!9668 = !DILocation(line: 156, column: 51, scope: !9663)
!9669 = !DILocation(line: 156, column: 23, scope: !9663)
!9670 = !DILocation(line: 156, column: 60, scope: !9663)
!9671 = !DILocation(line: 156, column: 71, scope: !9663)
!9672 = !DILocation(line: 156, column: 21, scope: !9663)
!9673 = !DILocation(line: 156, column: 5, scope: !9663)
!9674 = !DILocation(line: 157, column: 8, scope: !9675)
!9675 = distinct !DILexicalBlock(scope: !9651, file: !528, line: 157, column: 7)
!9676 = !DILocation(line: 157, column: 14, scope: !9675)
!9677 = !DILocation(line: 157, column: 17, scope: !9675)
!9678 = !DILocation(line: 157, column: 33, scope: !9675)
!9679 = !DILocation(line: 157, column: 7, scope: !9651)
!9680 = !DILocation(line: 158, column: 12, scope: !9675)
!9681 = !DILocation(line: 158, column: 5, scope: !9675)
!9682 = !DILocalVariable(name: "buf", scope: !9651, file: !528, line: 160, type: !532)
!9683 = !DILocation(line: 160, column: 8, scope: !9651)
!9684 = !DILocalVariable(name: "dsttmp", scope: !9651, file: !528, line: 161, type: !7)
!9685 = !DILocation(line: 161, column: 9, scope: !9651)
!9686 = !DILocation(line: 161, column: 36, scope: !9651)
!9687 = !DILocation(line: 161, column: 45, scope: !9651)
!9688 = !DILocation(line: 161, column: 18, scope: !9651)
!9689 = !DILocation(line: 162, column: 8, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9651, file: !528, line: 162, column: 7)
!9691 = !DILocation(line: 162, column: 7, scope: !9651)
!9692 = !DILocation(line: 163, column: 12, scope: !9690)
!9693 = !DILocation(line: 163, column: 5, scope: !9690)
!9694 = !DILocalVariable(name: "arg", scope: !9651, file: !528, line: 164, type: !553)
!9695 = !DILocation(line: 164, column: 22, scope: !9651)
!9696 = !DILocation(line: 164, column: 28, scope: !9651)
!9697 = !DILocation(line: 164, column: 30, scope: !9651)
!9698 = !{!9699, !2994, i64 0}
!9699 = !{!"symlink_arg", !2994, i64 0, !2981, i64 8}
!9700 = !DILocation(line: 164, column: 39, scope: !9651)
!9701 = !{!9699, !2981, i64 8}
!9702 = !DILocalVariable(name: "err", scope: !9651, file: !528, line: 165, type: !5)
!9703 = !DILocation(line: 165, column: 7, scope: !9651)
!9704 = !DILocation(line: 167, column: 25, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9651, file: !528, line: 167, column: 7)
!9706 = !DILocation(line: 167, column: 36, scope: !9705)
!9707 = !DILocation(line: 167, column: 7, scope: !9705)
!9708 = !DILocation(line: 167, column: 69, scope: !9705)
!9709 = !DILocation(line: 167, column: 7, scope: !9651)
!9710 = !DILocation(line: 168, column: 11, scope: !9705)
!9711 = !DILocation(line: 168, column: 9, scope: !9705)
!9712 = !DILocation(line: 168, column: 5, scope: !9705)
!9713 = !DILocation(line: 169, column: 22, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9705, file: !528, line: 169, column: 12)
!9715 = !DILocation(line: 169, column: 30, scope: !9714)
!9716 = !DILocation(line: 169, column: 38, scope: !9714)
!9717 = !DILocation(line: 169, column: 46, scope: !9714)
!9718 = !DILocation(line: 169, column: 12, scope: !9714)
!9719 = !DILocation(line: 169, column: 55, scope: !9714)
!9720 = !DILocation(line: 169, column: 12, scope: !9705)
!9721 = !DILocation(line: 171, column: 13, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9714, file: !528, line: 170, column: 5)
!9723 = !DILocation(line: 171, column: 11, scope: !9722)
!9724 = !DILocation(line: 172, column: 17, scope: !9722)
!9725 = !DILocation(line: 172, column: 25, scope: !9722)
!9726 = !DILocation(line: 172, column: 7, scope: !9722)
!9727 = !DILocation(line: 173, column: 5, scope: !9722)
!9728 = !DILocation(line: 178, column: 11, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9714, file: !528, line: 175, column: 5)
!9730 = !DILocation(line: 181, column: 7, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9651, file: !528, line: 181, column: 7)
!9732 = !DILocation(line: 181, column: 17, scope: !9731)
!9733 = !DILocation(line: 181, column: 14, scope: !9731)
!9734 = !DILocation(line: 181, column: 7, scope: !9651)
!9735 = !DILocation(line: 182, column: 11, scope: !9731)
!9736 = !DILocation(line: 182, column: 5, scope: !9731)
!9737 = !DILocation(line: 183, column: 10, scope: !9651)
!9738 = !DILocation(line: 183, column: 3, scope: !9651)
!9739 = !DILocation(line: 184, column: 1, scope: !9651)
!9740 = distinct !DISubprogram(name: "try_symlink", scope: !528, file: !528, line: 138, type: !543, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !527, retainedNodes: !140)
!9741 = !DILocalVariable(name: "dest", arg: 1, scope: !9740, file: !528, line: 138, type: !7)
!9742 = !DILocation(line: 138, column: 20, scope: !9740)
!9743 = !DILocalVariable(name: "arg", arg: 2, scope: !9740, file: !528, line: 138, type: !47)
!9744 = !DILocation(line: 138, column: 32, scope: !9740)
!9745 = !DILocalVariable(name: "a", scope: !9740, file: !528, line: 140, type: !552)
!9746 = !DILocation(line: 140, column: 23, scope: !9740)
!9747 = !DILocation(line: 140, column: 27, scope: !9740)
!9748 = !DILocation(line: 141, column: 21, scope: !9740)
!9749 = !DILocation(line: 141, column: 24, scope: !9740)
!9750 = !DILocation(line: 141, column: 33, scope: !9740)
!9751 = !DILocation(line: 141, column: 36, scope: !9740)
!9752 = !DILocation(line: 141, column: 44, scope: !9740)
!9753 = !DILocation(line: 141, column: 10, scope: !9740)
!9754 = !DILocation(line: 141, column: 3, scope: !9740)
!9755 = distinct !DISubprogram(name: "copy_acl", scope: !9756, file: !9756, line: 43, type: !1577, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1574, retainedNodes: !140)
!9756 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!9757 = !DILocalVariable(name: "src_name", arg: 1, scope: !9755, file: !9756, line: 43, type: !112)
!9758 = !DILocation(line: 43, column: 23, scope: !9755)
!9759 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9755, file: !9756, line: 43, type: !5)
!9760 = !DILocation(line: 43, column: 37, scope: !9755)
!9761 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9755, file: !9756, line: 43, type: !112)
!9762 = !DILocation(line: 43, column: 62, scope: !9755)
!9763 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9755, file: !9756, line: 44, type: !5)
!9764 = !DILocation(line: 44, column: 15, scope: !9755)
!9765 = !DILocalVariable(name: "mode", arg: 5, scope: !9755, file: !9756, line: 44, type: !157)
!9766 = !DILocation(line: 44, column: 33, scope: !9755)
!9767 = !DILocalVariable(name: "ret", scope: !9755, file: !9756, line: 46, type: !5)
!9768 = !DILocation(line: 46, column: 7, scope: !9755)
!9769 = !DILocation(line: 46, column: 24, scope: !9755)
!9770 = !DILocation(line: 46, column: 34, scope: !9755)
!9771 = !DILocation(line: 46, column: 47, scope: !9755)
!9772 = !DILocation(line: 46, column: 57, scope: !9755)
!9773 = !DILocation(line: 46, column: 68, scope: !9755)
!9774 = !DILocation(line: 46, column: 13, scope: !9755)
!9775 = !DILocation(line: 47, column: 11, scope: !9755)
!9776 = !DILocation(line: 47, column: 3, scope: !9755)
!9777 = !DILocation(line: 50, column: 17, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9755, file: !9756, line: 48, column: 5)
!9779 = !DILocation(line: 50, column: 37, scope: !9778)
!9780 = !DILocation(line: 50, column: 30, scope: !9778)
!9781 = !DILocation(line: 50, column: 7, scope: !9778)
!9782 = !DILocation(line: 51, column: 7, scope: !9778)
!9783 = !DILocation(line: 54, column: 17, scope: !9778)
!9784 = !DILocation(line: 54, column: 24, scope: !9778)
!9785 = !DILocation(line: 54, column: 67, scope: !9778)
!9786 = !DILocation(line: 54, column: 60, scope: !9778)
!9787 = !DILocation(line: 54, column: 7, scope: !9778)
!9788 = !DILocation(line: 55, column: 7, scope: !9778)
!9789 = !DILocation(line: 58, column: 7, scope: !9778)
!9790 = !DILocation(line: 60, column: 10, scope: !9755)
!9791 = !DILocation(line: 60, column: 3, scope: !9755)
!9792 = distinct !DISubprogram(name: "set_acl", scope: !9793, file: !9793, line: 42, type: !1582, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1579, retainedNodes: !140)
!9793 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!9794 = !DILocalVariable(name: "name", arg: 1, scope: !9792, file: !9793, line: 42, type: !112)
!9795 = !DILocation(line: 42, column: 22, scope: !9792)
!9796 = !DILocalVariable(name: "desc", arg: 2, scope: !9792, file: !9793, line: 42, type: !5)
!9797 = !DILocation(line: 42, column: 32, scope: !9792)
!9798 = !DILocalVariable(name: "mode", arg: 3, scope: !9792, file: !9793, line: 42, type: !157)
!9799 = !DILocation(line: 42, column: 45, scope: !9792)
!9800 = !DILocalVariable(name: "ret", scope: !9792, file: !9793, line: 44, type: !5)
!9801 = !DILocation(line: 44, column: 7, scope: !9792)
!9802 = !DILocation(line: 44, column: 23, scope: !9792)
!9803 = !DILocation(line: 44, column: 29, scope: !9792)
!9804 = !DILocation(line: 44, column: 35, scope: !9792)
!9805 = !DILocation(line: 44, column: 13, scope: !9792)
!9806 = !DILocation(line: 45, column: 7, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9792, file: !9793, line: 45, column: 7)
!9808 = !DILocation(line: 45, column: 11, scope: !9807)
!9809 = !DILocation(line: 45, column: 7, scope: !9792)
!9810 = !DILocation(line: 46, column: 15, scope: !9807)
!9811 = !DILocation(line: 46, column: 22, scope: !9807)
!9812 = !DILocation(line: 46, column: 62, scope: !9807)
!9813 = !DILocation(line: 46, column: 55, scope: !9807)
!9814 = !DILocation(line: 46, column: 5, scope: !9807)
!9815 = !DILocation(line: 47, column: 10, scope: !9792)
!9816 = !DILocation(line: 47, column: 3, scope: !9792)
!9817 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9818, file: !9818, line: 53, type: !981, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !140)
!9818 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!9819 = !DILocalVariable(name: "file", arg: 1, scope: !9817, file: !9818, line: 53, type: !112)
!9820 = !DILocation(line: 53, column: 34, scope: !9817)
!9821 = !DILocalVariable(name: "size", arg: 2, scope: !9817, file: !9818, line: 53, type: !52)
!9822 = !DILocation(line: 53, column: 47, scope: !9817)
!9823 = !DILocalVariable(name: "symlink_max", scope: !9817, file: !9818, line: 58, type: !52)
!9824 = !DILocation(line: 58, column: 10, scope: !9817)
!9825 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9817, file: !9818, line: 59, type: !52)
!9826 = !DILocation(line: 59, column: 10, scope: !9817)
!9827 = !DILocalVariable(name: "initial_limit", scope: !9817, file: !9818, line: 60, type: !52)
!9828 = !DILocation(line: 60, column: 10, scope: !9817)
!9829 = !DILocation(line: 60, column: 27, scope: !9817)
!9830 = !DILocation(line: 60, column: 41, scope: !9817)
!9831 = !DILocation(line: 60, column: 39, scope: !9817)
!9832 = !DILocation(line: 61, column: 29, scope: !9817)
!9833 = !DILocation(line: 61, column: 41, scope: !9817)
!9834 = !DILocation(line: 62, column: 29, scope: !9817)
!9835 = !DILocalVariable(name: "buf_size", scope: !9817, file: !9818, line: 67, type: !52)
!9836 = !DILocation(line: 67, column: 10, scope: !9817)
!9837 = !DILocation(line: 67, column: 22, scope: !9817)
!9838 = !DILocation(line: 67, column: 27, scope: !9817)
!9839 = !DILocation(line: 68, column: 24, scope: !9817)
!9840 = !DILocation(line: 68, column: 31, scope: !9817)
!9841 = !DILocation(line: 68, column: 29, scope: !9817)
!9842 = !DILocation(line: 68, column: 47, scope: !9817)
!9843 = !DILocation(line: 68, column: 52, scope: !9817)
!9844 = !DILocation(line: 68, column: 58, scope: !9817)
!9845 = !DILocation(line: 70, column: 3, scope: !9817)
!9846 = !DILocalVariable(name: "r", scope: !9847, file: !9818, line: 72, type: !579)
!9847 = distinct !DILexicalBlock(scope: !9817, file: !9818, line: 71, column: 5)
!9848 = !DILocation(line: 72, column: 15, scope: !9847)
!9849 = !DILocalVariable(name: "link_length", scope: !9847, file: !9818, line: 73, type: !52)
!9850 = !DILocation(line: 73, column: 14, scope: !9847)
!9851 = !DILocalVariable(name: "stackbuf", scope: !9847, file: !9818, line: 74, type: !1587)
!9852 = !DILocation(line: 74, column: 12, scope: !9847)
!9853 = !DILocalVariable(name: "buf", scope: !9847, file: !9818, line: 75, type: !7)
!9854 = !DILocation(line: 75, column: 13, scope: !9847)
!9855 = !DILocation(line: 75, column: 19, scope: !9847)
!9856 = !DILocalVariable(name: "buffer", scope: !9847, file: !9818, line: 76, type: !7)
!9857 = !DILocation(line: 76, column: 13, scope: !9847)
!9858 = !DILocation(line: 78, column: 14, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9847, file: !9818, line: 78, column: 11)
!9860 = !DILocation(line: 78, column: 19, scope: !9859)
!9861 = !DILocation(line: 78, column: 24, scope: !9859)
!9862 = !DILocation(line: 78, column: 27, scope: !9859)
!9863 = !DILocation(line: 78, column: 36, scope: !9859)
!9864 = !DILocation(line: 78, column: 11, scope: !9847)
!9865 = !DILocation(line: 80, column: 34, scope: !9866)
!9866 = distinct !DILexicalBlock(scope: !9859, file: !9818, line: 79, column: 9)
!9867 = !DILocation(line: 80, column: 26, scope: !9866)
!9868 = !DILocation(line: 80, column: 24, scope: !9866)
!9869 = !DILocation(line: 80, column: 15, scope: !9866)
!9870 = !DILocation(line: 81, column: 16, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9866, file: !9818, line: 81, column: 15)
!9872 = !DILocation(line: 81, column: 15, scope: !9866)
!9873 = !DILocation(line: 82, column: 13, scope: !9871)
!9874 = !DILocation(line: 83, column: 9, scope: !9866)
!9875 = !DILocation(line: 85, column: 21, scope: !9847)
!9876 = !DILocation(line: 85, column: 27, scope: !9847)
!9877 = !DILocation(line: 85, column: 32, scope: !9847)
!9878 = !DILocation(line: 85, column: 11, scope: !9847)
!9879 = !DILocation(line: 85, column: 9, scope: !9847)
!9880 = !DILocation(line: 86, column: 21, scope: !9847)
!9881 = !DILocation(line: 86, column: 19, scope: !9847)
!9882 = !DILocation(line: 90, column: 11, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9847, file: !9818, line: 90, column: 11)
!9884 = !DILocation(line: 90, column: 13, scope: !9883)
!9885 = !DILocation(line: 90, column: 17, scope: !9883)
!9886 = !DILocation(line: 90, column: 20, scope: !9883)
!9887 = !DILocation(line: 90, column: 26, scope: !9883)
!9888 = !DILocation(line: 90, column: 11, scope: !9847)
!9889 = !DILocalVariable(name: "saved_errno", scope: !9890, file: !9818, line: 92, type: !5)
!9890 = distinct !DILexicalBlock(scope: !9883, file: !9818, line: 91, column: 9)
!9891 = !DILocation(line: 92, column: 15, scope: !9890)
!9892 = !DILocation(line: 92, column: 29, scope: !9890)
!9893 = !DILocation(line: 93, column: 17, scope: !9890)
!9894 = !DILocation(line: 93, column: 11, scope: !9890)
!9895 = !DILocation(line: 94, column: 19, scope: !9890)
!9896 = !DILocation(line: 94, column: 11, scope: !9890)
!9897 = !DILocation(line: 94, column: 17, scope: !9890)
!9898 = !DILocation(line: 95, column: 11, scope: !9890)
!9899 = !DILocation(line: 98, column: 11, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9847, file: !9818, line: 98, column: 11)
!9901 = !DILocation(line: 98, column: 25, scope: !9900)
!9902 = !DILocation(line: 98, column: 23, scope: !9900)
!9903 = !DILocation(line: 98, column: 11, scope: !9847)
!9904 = !DILocation(line: 100, column: 11, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9900, file: !9818, line: 99, column: 9)
!9906 = !DILocation(line: 100, column: 15, scope: !9905)
!9907 = !DILocation(line: 100, column: 28, scope: !9905)
!9908 = !DILocation(line: 101, column: 16, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9905, file: !9818, line: 101, column: 15)
!9910 = !DILocation(line: 101, column: 15, scope: !9905)
!9911 = !DILocation(line: 103, column: 32, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9909, file: !9818, line: 102, column: 13)
!9913 = !DILocation(line: 103, column: 44, scope: !9912)
!9914 = !DILocation(line: 103, column: 24, scope: !9912)
!9915 = !DILocation(line: 103, column: 22, scope: !9912)
!9916 = !DILocation(line: 104, column: 19, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9912, file: !9818, line: 104, column: 19)
!9918 = !DILocation(line: 104, column: 19, scope: !9912)
!9919 = !DILocation(line: 105, column: 32, scope: !9917)
!9920 = !DILocation(line: 105, column: 40, scope: !9917)
!9921 = !DILocation(line: 105, column: 45, scope: !9917)
!9922 = !DILocation(line: 105, column: 57, scope: !9917)
!9923 = !DILocation(line: 105, column: 24, scope: !9917)
!9924 = !DILocation(line: 105, column: 17, scope: !9917)
!9925 = !DILocation(line: 106, column: 13, scope: !9912)
!9926 = !DILocation(line: 107, column: 20, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9909, file: !9818, line: 107, column: 20)
!9928 = !DILocation(line: 107, column: 32, scope: !9927)
!9929 = !DILocation(line: 107, column: 38, scope: !9927)
!9930 = !DILocation(line: 107, column: 36, scope: !9927)
!9931 = !DILocation(line: 107, column: 20, scope: !9909)
!9932 = !DILocalVariable(name: "shrinked_buffer", scope: !9933, file: !9818, line: 110, type: !7)
!9933 = distinct !DILexicalBlock(scope: !9927, file: !9818, line: 108, column: 13)
!9934 = !DILocation(line: 110, column: 21, scope: !9933)
!9935 = !DILocation(line: 110, column: 48, scope: !9933)
!9936 = !DILocation(line: 110, column: 56, scope: !9933)
!9937 = !DILocation(line: 110, column: 68, scope: !9933)
!9938 = !DILocation(line: 110, column: 39, scope: !9933)
!9939 = !DILocation(line: 111, column: 19, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9933, file: !9818, line: 111, column: 19)
!9941 = !DILocation(line: 111, column: 35, scope: !9940)
!9942 = !DILocation(line: 111, column: 19, scope: !9933)
!9943 = !DILocation(line: 112, column: 26, scope: !9940)
!9944 = !DILocation(line: 112, column: 24, scope: !9940)
!9945 = !DILocation(line: 112, column: 17, scope: !9940)
!9946 = !DILocation(line: 113, column: 13, scope: !9933)
!9947 = !DILocation(line: 114, column: 18, scope: !9905)
!9948 = !DILocation(line: 114, column: 11, scope: !9905)
!9949 = !DILocation(line: 117, column: 13, scope: !9847)
!9950 = !DILocation(line: 117, column: 7, scope: !9847)
!9951 = !DILocation(line: 118, column: 11, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9847, file: !9818, line: 118, column: 11)
!9953 = !DILocation(line: 118, column: 20, scope: !9952)
!9954 = !DILocation(line: 118, column: 11, scope: !9847)
!9955 = !DILocation(line: 119, column: 18, scope: !9952)
!9956 = !DILocation(line: 119, column: 9, scope: !9952)
!9957 = !DILocation(line: 120, column: 16, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9952, file: !9818, line: 120, column: 16)
!9959 = !DILocation(line: 120, column: 25, scope: !9958)
!9960 = !DILocation(line: 120, column: 16, scope: !9952)
!9961 = !DILocation(line: 121, column: 18, scope: !9958)
!9962 = !DILocation(line: 121, column: 9, scope: !9958)
!9963 = !DILocation(line: 124, column: 11, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9958, file: !9818, line: 123, column: 9)
!9965 = !DILocation(line: 124, column: 17, scope: !9964)
!9966 = !DILocation(line: 125, column: 11, scope: !9964)
!9967 = distinct !{!9967, !9845, !9968}
!9968 = !DILocation(line: 127, column: 5, scope: !9817)
!9969 = !DILocation(line: 128, column: 1, scope: !9817)
!9970 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !570, file: !570, line: 88, type: !133, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !566, retainedNodes: !140)
!9971 = !DILocalVariable(name: "s", arg: 1, scope: !9970, file: !570, line: 88, type: !112)
!9972 = !DILocation(line: 88, column: 39, scope: !9970)
!9973 = !DILocation(line: 90, column: 8, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9970, file: !570, line: 90, column: 7)
!9975 = !DILocation(line: 90, column: 7, scope: !9970)
!9976 = !DILocation(line: 91, column: 9, scope: !9974)
!9977 = !DILocation(line: 91, column: 7, scope: !9974)
!9978 = !DILocation(line: 91, column: 5, scope: !9974)
!9979 = !DILocation(line: 92, column: 26, scope: !9970)
!9980 = !DILocation(line: 92, column: 28, scope: !9970)
!9981 = !DILocation(line: 92, column: 32, scope: !9970)
!9982 = !DILocation(line: 92, column: 31, scope: !9970)
!9983 = !DILocation(line: 92, column: 34, scope: !9970)
!9984 = !DILocation(line: 92, column: 37, scope: !9970)
!9985 = !DILocation(line: 92, column: 58, scope: !9970)
!9986 = !DILocation(line: 92, column: 42, scope: !9970)
!9987 = !DILocation(line: 92, column: 39, scope: !9970)
!9988 = !DILocation(line: 92, column: 63, scope: !9970)
!9989 = !DILocation(line: 92, column: 24, scope: !9970)
!9990 = !DILocation(line: 93, column: 1, scope: !9970)
!9991 = distinct !DISubprogram(name: "backupfile_internal", scope: !570, file: !570, line: 314, type: !577, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !566, retainedNodes: !140)
!9992 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9991, file: !570, line: 314, type: !5)
!9993 = !DILocation(line: 314, column: 26, scope: !9991)
!9994 = !DILocalVariable(name: "file", arg: 2, scope: !9991, file: !570, line: 314, type: !112)
!9995 = !DILocation(line: 314, column: 46, scope: !9991)
!9996 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9991, file: !570, line: 315, type: !65)
!9997 = !DILocation(line: 315, column: 39, scope: !9991)
!9998 = !DILocalVariable(name: "rename", arg: 4, scope: !9991, file: !570, line: 315, type: !117)
!9999 = !DILocation(line: 315, column: 57, scope: !9991)
!10000 = !DILocalVariable(name: "base_offset", scope: !9991, file: !570, line: 317, type: !539)
!10001 = !DILocation(line: 317, column: 13, scope: !9991)
!10002 = !DILocation(line: 317, column: 43, scope: !9991)
!10003 = !DILocation(line: 317, column: 27, scope: !9991)
!10004 = !DILocation(line: 317, column: 51, scope: !9991)
!10005 = !DILocation(line: 317, column: 49, scope: !9991)
!10006 = !DILocalVariable(name: "filelen", scope: !9991, file: !570, line: 318, type: !52)
!10007 = !DILocation(line: 318, column: 10, scope: !9991)
!10008 = !DILocation(line: 318, column: 20, scope: !9991)
!10009 = !DILocation(line: 318, column: 42, scope: !9991)
!10010 = !DILocation(line: 318, column: 49, scope: !9991)
!10011 = !DILocation(line: 318, column: 47, scope: !9991)
!10012 = !DILocation(line: 318, column: 34, scope: !9991)
!10013 = !DILocation(line: 318, column: 32, scope: !9991)
!10014 = !DILocation(line: 320, column: 9, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !9991, file: !570, line: 320, column: 7)
!10016 = !DILocation(line: 320, column: 7, scope: !9991)
!10017 = !DILocation(line: 321, column: 5, scope: !10015)
!10018 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !9991, file: !570, line: 325, type: !52)
!10019 = !DILocation(line: 325, column: 10, scope: !9991)
!10020 = !DILocation(line: 325, column: 46, scope: !9991)
!10021 = !DILocation(line: 325, column: 38, scope: !9991)
!10022 = !DILocation(line: 325, column: 68, scope: !9991)
!10023 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !9991, file: !570, line: 326, type: !52)
!10024 = !DILocation(line: 326, column: 10, scope: !9991)
!10025 = !DILocation(line: 326, column: 37, scope: !9991)
!10026 = !DILocation(line: 328, column: 7, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9991, file: !570, line: 328, column: 7)
!10028 = !DILocation(line: 328, column: 32, scope: !10027)
!10029 = !DILocation(line: 328, column: 7, scope: !9991)
!10030 = !DILocation(line: 329, column: 30, scope: !10027)
!10031 = !DILocation(line: 329, column: 5, scope: !10027)
!10032 = !DILocalVariable(name: "ssize", scope: !9991, file: !570, line: 331, type: !579)
!10033 = !DILocation(line: 331, column: 11, scope: !9991)
!10034 = !DILocation(line: 331, column: 19, scope: !9991)
!10035 = !DILocation(line: 331, column: 29, scope: !9991)
!10036 = !DILocation(line: 331, column: 27, scope: !9991)
!10037 = !DILocation(line: 331, column: 54, scope: !9991)
!10038 = !DILocalVariable(name: "s", scope: !9991, file: !570, line: 332, type: !7)
!10039 = !DILocation(line: 332, column: 9, scope: !9991)
!10040 = !DILocation(line: 332, column: 21, scope: !9991)
!10041 = !DILocation(line: 332, column: 13, scope: !9991)
!10042 = !DILocation(line: 333, column: 8, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !9991, file: !570, line: 333, column: 7)
!10044 = !DILocation(line: 333, column: 7, scope: !9991)
!10045 = !DILocation(line: 334, column: 12, scope: !10043)
!10046 = !DILocation(line: 334, column: 5, scope: !10043)
!10047 = !DILocalVariable(name: "dirp", scope: !9991, file: !570, line: 336, type: !580)
!10048 = !DILocation(line: 336, column: 8, scope: !9991)
!10049 = !DILocalVariable(name: "sdir", scope: !9991, file: !570, line: 337, type: !5)
!10050 = !DILocation(line: 337, column: 7, scope: !9991)
!10051 = !DILocalVariable(name: "base_max", scope: !9991, file: !570, line: 338, type: !52)
!10052 = !DILocation(line: 338, column: 10, scope: !9991)
!10053 = !DILocation(line: 339, column: 3, scope: !9991)
!10054 = !DILocation(line: 341, column: 15, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !9991, file: !570, line: 340, column: 5)
!10056 = !DILocation(line: 341, column: 18, scope: !10055)
!10057 = !DILocation(line: 341, column: 24, scope: !10055)
!10058 = !DILocation(line: 341, column: 32, scope: !10055)
!10059 = !DILocation(line: 341, column: 7, scope: !10055)
!10060 = !DILocation(line: 343, column: 11, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10055, file: !570, line: 343, column: 11)
!10062 = !DILocation(line: 343, column: 23, scope: !10061)
!10063 = !DILocation(line: 343, column: 11, scope: !10055)
!10064 = !DILocation(line: 344, column: 17, scope: !10061)
!10065 = !DILocation(line: 344, column: 21, scope: !10061)
!10066 = !DILocation(line: 344, column: 19, scope: !10061)
!10067 = !DILocation(line: 344, column: 30, scope: !10061)
!10068 = !DILocation(line: 344, column: 52, scope: !10061)
!10069 = !DILocation(line: 344, column: 9, scope: !10061)
!10070 = !DILocation(line: 346, column: 34, scope: !10061)
!10071 = !DILocation(line: 346, column: 46, scope: !10061)
!10072 = !DILocation(line: 346, column: 53, scope: !10061)
!10073 = !DILocation(line: 346, column: 62, scope: !10061)
!10074 = !DILocation(line: 346, column: 17, scope: !10061)
!10075 = !DILocation(line: 346, column: 9, scope: !10061)
!10076 = !DILocation(line: 350, column: 13, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10061, file: !570, line: 348, column: 11)
!10078 = !DILocation(line: 353, column: 17, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10077, file: !570, line: 353, column: 17)
!10080 = !DILocation(line: 353, column: 29, scope: !10079)
!10081 = !DILocation(line: 353, column: 17, scope: !10077)
!10082 = !DILocation(line: 355, column: 29, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !570, line: 354, column: 15)
!10084 = !DILocation(line: 356, column: 25, scope: !10083)
!10085 = !DILocation(line: 356, column: 29, scope: !10083)
!10086 = !DILocation(line: 356, column: 27, scope: !10083)
!10087 = !DILocation(line: 356, column: 38, scope: !10083)
!10088 = !DILocation(line: 357, column: 25, scope: !10083)
!10089 = !DILocation(line: 356, column: 17, scope: !10083)
!10090 = !DILocation(line: 358, column: 15, scope: !10083)
!10091 = !DILocation(line: 359, column: 13, scope: !10077)
!10092 = !DILocation(line: 361, column: 30, scope: !10077)
!10093 = !DILocation(line: 361, column: 33, scope: !10077)
!10094 = !DILocation(line: 361, column: 47, scope: !10077)
!10095 = !DILocation(line: 361, column: 13, scope: !10077)
!10096 = !DILocation(line: 362, column: 13, scope: !10077)
!10097 = !DILocation(line: 365, column: 17, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10077, file: !570, line: 365, column: 17)
!10099 = !DILocation(line: 365, column: 17, scope: !10077)
!10100 = !DILocation(line: 366, column: 25, scope: !10098)
!10101 = !DILocation(line: 366, column: 15, scope: !10098)
!10102 = !DILocation(line: 367, column: 19, scope: !10077)
!10103 = !DILocation(line: 367, column: 13, scope: !10077)
!10104 = !DILocation(line: 368, column: 13, scope: !10077)
!10105 = !DILocation(line: 368, column: 19, scope: !10077)
!10106 = !DILocation(line: 369, column: 13, scope: !10077)
!10107 = !DILocation(line: 372, column: 13, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10055, file: !570, line: 372, column: 11)
!10109 = !DILocation(line: 372, column: 11, scope: !10055)
!10110 = !DILocation(line: 373, column: 9, scope: !10108)
!10111 = !DILocation(line: 375, column: 11, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10055, file: !570, line: 375, column: 11)
!10113 = !DILocation(line: 375, column: 16, scope: !10112)
!10114 = !DILocation(line: 375, column: 11, scope: !10055)
!10115 = !DILocation(line: 377, column: 16, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10112, file: !570, line: 376, column: 9)
!10117 = !DILocation(line: 378, column: 23, scope: !10116)
!10118 = !DILocation(line: 379, column: 9, scope: !10116)
!10119 = !DILocalVariable(name: "flags", scope: !10055, file: !570, line: 380, type: !67)
!10120 = !DILocation(line: 380, column: 16, scope: !10055)
!10121 = !DILocation(line: 380, column: 24, scope: !10055)
!10122 = !DILocation(line: 380, column: 36, scope: !10055)
!10123 = !DILocation(line: 381, column: 32, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10055, file: !570, line: 381, column: 11)
!10125 = !DILocation(line: 381, column: 38, scope: !10124)
!10126 = !DILocation(line: 381, column: 44, scope: !10124)
!10127 = !DILocation(line: 381, column: 48, scope: !10124)
!10128 = !DILocation(line: 381, column: 46, scope: !10124)
!10129 = !DILocation(line: 381, column: 61, scope: !10124)
!10130 = !DILocation(line: 381, column: 11, scope: !10124)
!10131 = !DILocation(line: 381, column: 68, scope: !10124)
!10132 = !DILocation(line: 381, column: 11, scope: !10055)
!10133 = !DILocation(line: 382, column: 9, scope: !10124)
!10134 = !DILocalVariable(name: "e", scope: !10055, file: !570, line: 383, type: !5)
!10135 = !DILocation(line: 383, column: 11, scope: !10055)
!10136 = !DILocation(line: 383, column: 15, scope: !10055)
!10137 = !DILocation(line: 384, column: 11, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10055, file: !570, line: 384, column: 11)
!10139 = !DILocation(line: 384, column: 13, scope: !10138)
!10140 = !DILocation(line: 384, column: 11, scope: !10055)
!10141 = !DILocation(line: 386, column: 15, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10143, file: !570, line: 386, column: 15)
!10143 = distinct !DILexicalBlock(scope: !10138, file: !570, line: 385, column: 9)
!10144 = !DILocation(line: 386, column: 15, scope: !10143)
!10145 = !DILocation(line: 387, column: 23, scope: !10142)
!10146 = !DILocation(line: 387, column: 13, scope: !10142)
!10147 = !DILocation(line: 388, column: 17, scope: !10143)
!10148 = !DILocation(line: 388, column: 11, scope: !10143)
!10149 = !DILocation(line: 389, column: 19, scope: !10143)
!10150 = !DILocation(line: 389, column: 11, scope: !10143)
!10151 = !DILocation(line: 389, column: 17, scope: !10143)
!10152 = !DILocation(line: 390, column: 11, scope: !10143)
!10153 = distinct !{!10153, !10053, !10154}
!10154 = !DILocation(line: 392, column: 5, scope: !9991)
!10155 = !DILocation(line: 394, column: 7, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !9991, file: !570, line: 394, column: 7)
!10157 = !DILocation(line: 394, column: 7, scope: !9991)
!10158 = !DILocation(line: 395, column: 15, scope: !10156)
!10159 = !DILocation(line: 395, column: 5, scope: !10156)
!10160 = !DILocation(line: 396, column: 10, scope: !9991)
!10161 = !DILocation(line: 396, column: 3, scope: !9991)
!10162 = !DILocation(line: 397, column: 1, scope: !9991)
!10163 = distinct !DISubprogram(name: "numbered_backup", scope: !570, file: !570, line: 207, type: !584, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !566, retainedNodes: !140)
!10164 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10163, file: !570, line: 207, type: !5)
!10165 = !DILocation(line: 207, column: 22, scope: !10163)
!10166 = !DILocalVariable(name: "buffer", arg: 2, scope: !10163, file: !570, line: 207, type: !116)
!10167 = !DILocation(line: 207, column: 37, scope: !10163)
!10168 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !10163, file: !570, line: 207, type: !52)
!10169 = !DILocation(line: 207, column: 52, scope: !10163)
!10170 = !DILocalVariable(name: "filelen", arg: 4, scope: !10163, file: !570, line: 207, type: !52)
!10171 = !DILocation(line: 207, column: 72, scope: !10163)
!10172 = !DILocalVariable(name: "base_offset", arg: 5, scope: !10163, file: !570, line: 208, type: !539)
!10173 = !DILocation(line: 208, column: 28, scope: !10163)
!10174 = !DILocalVariable(name: "dirpp", arg: 6, scope: !10163, file: !570, line: 208, type: !586)
!10175 = !DILocation(line: 208, column: 47, scope: !10163)
!10176 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !10163, file: !570, line: 208, type: !126)
!10177 = !DILocation(line: 208, column: 59, scope: !10163)
!10178 = !DILocalVariable(name: "result", scope: !10163, file: !570, line: 210, type: !569)
!10179 = !DILocation(line: 210, column: 31, scope: !10163)
!10180 = !DILocalVariable(name: "dirp", scope: !10163, file: !570, line: 211, type: !580)
!10181 = !DILocation(line: 211, column: 8, scope: !10163)
!10182 = !DILocation(line: 211, column: 16, scope: !10163)
!10183 = !DILocation(line: 211, column: 15, scope: !10163)
!10184 = !DILocalVariable(name: "dp", scope: !10163, file: !570, line: 212, type: !587)
!10185 = !DILocation(line: 212, column: 18, scope: !10163)
!10186 = !DILocalVariable(name: "buf", scope: !10163, file: !570, line: 213, type: !7)
!10187 = !DILocation(line: 213, column: 9, scope: !10163)
!10188 = !DILocation(line: 213, column: 16, scope: !10163)
!10189 = !DILocation(line: 213, column: 15, scope: !10163)
!10190 = !DILocalVariable(name: "versionlenmax", scope: !10163, file: !570, line: 214, type: !52)
!10191 = !DILocation(line: 214, column: 10, scope: !10163)
!10192 = !DILocalVariable(name: "base", scope: !10163, file: !570, line: 215, type: !7)
!10193 = !DILocation(line: 215, column: 9, scope: !10163)
!10194 = !DILocation(line: 215, column: 16, scope: !10163)
!10195 = !DILocation(line: 215, column: 22, scope: !10163)
!10196 = !DILocation(line: 215, column: 20, scope: !10163)
!10197 = !DILocalVariable(name: "baselen", scope: !10163, file: !570, line: 216, type: !52)
!10198 = !DILocation(line: 216, column: 10, scope: !10163)
!10199 = !DILocation(line: 216, column: 30, scope: !10163)
!10200 = !DILocation(line: 216, column: 20, scope: !10163)
!10201 = !DILocation(line: 218, column: 7, scope: !10202)
!10202 = distinct !DILexicalBlock(scope: !10163, file: !570, line: 218, column: 7)
!10203 = !DILocation(line: 218, column: 7, scope: !10163)
!10204 = !DILocation(line: 219, column: 16, scope: !10202)
!10205 = !DILocation(line: 219, column: 5, scope: !10202)
!10206 = !DILocalVariable(name: "tmp", scope: !10207, file: !570, line: 224, type: !596)
!10207 = distinct !DILexicalBlock(scope: !10202, file: !570, line: 221, column: 5)
!10208 = !DILocation(line: 224, column: 12, scope: !10207)
!10209 = !DILocation(line: 225, column: 7, scope: !10207)
!10210 = !DILocation(line: 225, column: 20, scope: !10207)
!10211 = !DILocation(line: 226, column: 15, scope: !10207)
!10212 = !DILocation(line: 226, column: 7, scope: !10207)
!10213 = !DILocation(line: 227, column: 25, scope: !10207)
!10214 = !DILocation(line: 227, column: 33, scope: !10207)
!10215 = !DILocation(line: 227, column: 41, scope: !10207)
!10216 = !DILocation(line: 227, column: 14, scope: !10207)
!10217 = !DILocation(line: 227, column: 12, scope: !10207)
!10218 = !DILocation(line: 228, column: 12, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10207, file: !570, line: 228, column: 11)
!10220 = !DILocation(line: 228, column: 17, scope: !10219)
!10221 = !DILocation(line: 228, column: 20, scope: !10219)
!10222 = !DILocation(line: 228, column: 26, scope: !10219)
!10223 = !DILocation(line: 228, column: 11, scope: !10207)
!10224 = !DILocation(line: 229, column: 16, scope: !10219)
!10225 = !DILocation(line: 229, column: 9, scope: !10219)
!10226 = !DILocation(line: 230, column: 15, scope: !10207)
!10227 = !DILocation(line: 230, column: 7, scope: !10207)
!10228 = !DILocation(line: 231, column: 15, scope: !10207)
!10229 = !DILocation(line: 231, column: 22, scope: !10207)
!10230 = !DILocation(line: 231, column: 20, scope: !10207)
!10231 = !DILocation(line: 231, column: 7, scope: !10207)
!10232 = !DILocation(line: 232, column: 12, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10207, file: !570, line: 232, column: 11)
!10234 = !DILocation(line: 232, column: 11, scope: !10207)
!10235 = !DILocation(line: 233, column: 16, scope: !10233)
!10236 = !DILocation(line: 233, column: 9, scope: !10233)
!10237 = !DILocation(line: 234, column: 16, scope: !10207)
!10238 = !DILocation(line: 234, column: 8, scope: !10207)
!10239 = !DILocation(line: 234, column: 14, scope: !10207)
!10240 = !DILocation(line: 237, column: 3, scope: !10163)
!10241 = !DILocation(line: 237, column: 25, scope: !10163)
!10242 = !DILocation(line: 237, column: 16, scope: !10163)
!10243 = !DILocation(line: 237, column: 14, scope: !10163)
!10244 = !DILocation(line: 237, column: 32, scope: !10163)
!10245 = !DILocalVariable(name: "p", scope: !10246, file: !570, line: 239, type: !112)
!10246 = distinct !DILexicalBlock(scope: !10163, file: !570, line: 238, column: 5)
!10247 = !DILocation(line: 239, column: 19, scope: !10246)
!10248 = !DILocalVariable(name: "q", scope: !10246, file: !570, line: 240, type: !7)
!10249 = !DILocation(line: 240, column: 13, scope: !10246)
!10250 = !DILocalVariable(name: "all_9s", scope: !10246, file: !570, line: 241, type: !117)
!10251 = !DILocation(line: 241, column: 12, scope: !10246)
!10252 = !DILocalVariable(name: "versionlen", scope: !10246, file: !570, line: 242, type: !52)
!10253 = !DILocation(line: 242, column: 14, scope: !10246)
!10254 = !DILocation(line: 244, column: 11, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10246, file: !570, line: 244, column: 11)
!10256 = !DILocation(line: 244, column: 34, scope: !10255)
!10257 = !DILocation(line: 244, column: 42, scope: !10255)
!10258 = !DILocation(line: 244, column: 32, scope: !10255)
!10259 = !DILocation(line: 244, column: 11, scope: !10246)
!10260 = !DILocation(line: 245, column: 9, scope: !10255)
!10261 = distinct !{!10261, !10240, !10262}
!10262 = !DILocation(line: 301, column: 5, scope: !10163)
!10263 = !DILocation(line: 247, column: 19, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10246, file: !570, line: 247, column: 11)
!10265 = !DILocation(line: 247, column: 25, scope: !10264)
!10266 = !DILocation(line: 247, column: 23, scope: !10264)
!10267 = !DILocation(line: 247, column: 38, scope: !10264)
!10268 = !DILocation(line: 247, column: 42, scope: !10264)
!10269 = !DILocation(line: 247, column: 50, scope: !10264)
!10270 = !DILocation(line: 247, column: 58, scope: !10264)
!10271 = !DILocation(line: 247, column: 11, scope: !10264)
!10272 = !DILocation(line: 247, column: 63, scope: !10264)
!10273 = !DILocation(line: 247, column: 11, scope: !10246)
!10274 = !DILocation(line: 248, column: 9, scope: !10264)
!10275 = !DILocation(line: 250, column: 11, scope: !10246)
!10276 = !DILocation(line: 250, column: 15, scope: !10246)
!10277 = !DILocation(line: 250, column: 24, scope: !10246)
!10278 = !DILocation(line: 250, column: 22, scope: !10246)
!10279 = !DILocation(line: 250, column: 32, scope: !10246)
!10280 = !DILocation(line: 250, column: 9, scope: !10246)
!10281 = !DILocation(line: 256, column: 22, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10246, file: !570, line: 256, column: 11)
!10283 = !DILocation(line: 256, column: 21, scope: !10282)
!10284 = !DILocation(line: 256, column: 18, scope: !10282)
!10285 = !DILocation(line: 256, column: 24, scope: !10282)
!10286 = !DILocation(line: 256, column: 28, scope: !10282)
!10287 = !DILocation(line: 256, column: 27, scope: !10282)
!10288 = !DILocation(line: 256, column: 30, scope: !10282)
!10289 = !DILocation(line: 256, column: 11, scope: !10246)
!10290 = !DILocation(line: 257, column: 9, scope: !10282)
!10291 = !DILocation(line: 258, column: 18, scope: !10246)
!10292 = !DILocation(line: 258, column: 17, scope: !10246)
!10293 = !DILocation(line: 258, column: 20, scope: !10246)
!10294 = !DILocation(line: 258, column: 14, scope: !10246)
!10295 = !DILocation(line: 259, column: 23, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10246, file: !570, line: 259, column: 7)
!10297 = !DILocation(line: 259, column: 12, scope: !10296)
!10298 = !DILocation(line: 259, column: 28, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10296, file: !570, line: 259, column: 7)
!10300 = !DILocation(line: 259, column: 7, scope: !10296)
!10301 = !DILocation(line: 260, column: 20, scope: !10299)
!10302 = !DILocation(line: 260, column: 22, scope: !10299)
!10303 = !DILocation(line: 260, column: 34, scope: !10299)
!10304 = !DILocation(line: 260, column: 16, scope: !10299)
!10305 = !DILocation(line: 260, column: 9, scope: !10299)
!10306 = !DILocation(line: 259, column: 63, scope: !10299)
!10307 = !DILocation(line: 259, column: 7, scope: !10299)
!10308 = distinct !{!10308, !10300, !10309}
!10309 = !DILocation(line: 260, column: 40, scope: !10296)
!10310 = !DILocation(line: 262, column: 14, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10246, file: !570, line: 262, column: 11)
!10312 = !DILocation(line: 262, column: 16, scope: !10311)
!10313 = !DILocation(line: 262, column: 28, scope: !10311)
!10314 = !DILocation(line: 262, column: 35, scope: !10311)
!10315 = !DILocation(line: 262, column: 39, scope: !10311)
!10316 = !DILocation(line: 262, column: 41, scope: !10311)
!10317 = !DILocation(line: 262, column: 52, scope: !10311)
!10318 = !DILocation(line: 263, column: 14, scope: !10311)
!10319 = !DILocation(line: 263, column: 18, scope: !10311)
!10320 = !DILocation(line: 263, column: 34, scope: !10311)
!10321 = !DILocation(line: 263, column: 32, scope: !10311)
!10322 = !DILocation(line: 264, column: 18, scope: !10311)
!10323 = !DILocation(line: 264, column: 22, scope: !10311)
!10324 = !DILocation(line: 264, column: 39, scope: !10311)
!10325 = !DILocation(line: 264, column: 36, scope: !10311)
!10326 = !DILocation(line: 265, column: 22, scope: !10311)
!10327 = !DILocation(line: 265, column: 33, scope: !10311)
!10328 = !DILocation(line: 265, column: 39, scope: !10311)
!10329 = !DILocation(line: 265, column: 37, scope: !10311)
!10330 = !DILocation(line: 265, column: 47, scope: !10311)
!10331 = !DILocation(line: 265, column: 52, scope: !10311)
!10332 = !DILocation(line: 265, column: 55, scope: !10311)
!10333 = !DILocation(line: 265, column: 25, scope: !10311)
!10334 = !DILocation(line: 265, column: 67, scope: !10311)
!10335 = !DILocation(line: 262, column: 11, scope: !10246)
!10336 = !DILocation(line: 266, column: 9, scope: !10311)
!10337 = !DILocation(line: 272, column: 23, scope: !10246)
!10338 = !DILocation(line: 272, column: 32, scope: !10246)
!10339 = !DILocation(line: 272, column: 30, scope: !10246)
!10340 = !DILocation(line: 272, column: 21, scope: !10246)
!10341 = !DILocation(line: 273, column: 17, scope: !10246)
!10342 = !DILocation(line: 273, column: 14, scope: !10246)
!10343 = !DILocalVariable(name: "new_buffer_size", scope: !10246, file: !570, line: 274, type: !52)
!10344 = !DILocation(line: 274, column: 14, scope: !10246)
!10345 = !DILocation(line: 274, column: 32, scope: !10246)
!10346 = !DILocation(line: 274, column: 40, scope: !10246)
!10347 = !DILocation(line: 274, column: 46, scope: !10246)
!10348 = !DILocation(line: 274, column: 44, scope: !10246)
!10349 = !DILocation(line: 274, column: 60, scope: !10246)
!10350 = !DILocation(line: 275, column: 11, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10246, file: !570, line: 275, column: 11)
!10352 = !DILocation(line: 275, column: 25, scope: !10351)
!10353 = !DILocation(line: 275, column: 23, scope: !10351)
!10354 = !DILocation(line: 275, column: 11, scope: !10246)
!10355 = !DILocation(line: 277, column: 17, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10357, file: !570, line: 277, column: 15)
!10357 = distinct !DILexicalBlock(scope: !10351, file: !570, line: 276, column: 9)
!10358 = !DILocation(line: 277, column: 15, scope: !10357)
!10359 = !DILocation(line: 278, column: 29, scope: !10356)
!10360 = !DILocation(line: 278, column: 13, scope: !10356)
!10361 = !DILocalVariable(name: "new_buf", scope: !10357, file: !570, line: 279, type: !7)
!10362 = !DILocation(line: 279, column: 17, scope: !10357)
!10363 = !DILocation(line: 279, column: 36, scope: !10357)
!10364 = !DILocation(line: 279, column: 41, scope: !10357)
!10365 = !DILocation(line: 279, column: 27, scope: !10357)
!10366 = !DILocation(line: 280, column: 16, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10357, file: !570, line: 280, column: 15)
!10368 = !DILocation(line: 280, column: 15, scope: !10357)
!10369 = !DILocation(line: 282, column: 25, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10367, file: !570, line: 281, column: 13)
!10371 = !DILocation(line: 282, column: 16, scope: !10370)
!10372 = !DILocation(line: 282, column: 23, scope: !10370)
!10373 = !DILocation(line: 283, column: 15, scope: !10370)
!10374 = !DILocation(line: 285, column: 17, scope: !10357)
!10375 = !DILocation(line: 285, column: 15, scope: !10357)
!10376 = !DILocation(line: 286, column: 25, scope: !10357)
!10377 = !DILocation(line: 286, column: 23, scope: !10357)
!10378 = !DILocation(line: 287, column: 9, scope: !10357)
!10379 = !DILocation(line: 288, column: 11, scope: !10246)
!10380 = !DILocation(line: 288, column: 17, scope: !10246)
!10381 = !DILocation(line: 288, column: 15, scope: !10246)
!10382 = !DILocation(line: 288, column: 9, scope: !10246)
!10383 = !DILocation(line: 289, column: 9, scope: !10246)
!10384 = !DILocation(line: 289, column: 12, scope: !10246)
!10385 = !DILocation(line: 290, column: 9, scope: !10246)
!10386 = !DILocation(line: 290, column: 12, scope: !10246)
!10387 = !DILocation(line: 291, column: 8, scope: !10246)
!10388 = !DILocation(line: 291, column: 10, scope: !10246)
!10389 = !DILocation(line: 292, column: 12, scope: !10246)
!10390 = !DILocation(line: 292, column: 9, scope: !10246)
!10391 = !DILocation(line: 293, column: 15, scope: !10246)
!10392 = !DILocation(line: 293, column: 18, scope: !10246)
!10393 = !DILocation(line: 293, column: 21, scope: !10246)
!10394 = !DILocation(line: 293, column: 32, scope: !10246)
!10395 = !DILocation(line: 293, column: 7, scope: !10246)
!10396 = !DILocation(line: 297, column: 12, scope: !10246)
!10397 = !DILocation(line: 297, column: 9, scope: !10246)
!10398 = !DILocation(line: 298, column: 7, scope: !10246)
!10399 = !DILocation(line: 298, column: 15, scope: !10246)
!10400 = !DILocation(line: 298, column: 14, scope: !10246)
!10401 = !DILocation(line: 298, column: 19, scope: !10246)
!10402 = !DILocation(line: 299, column: 10, scope: !10246)
!10403 = !DILocation(line: 299, column: 12, scope: !10246)
!10404 = distinct !{!10404, !10398, !10405}
!10405 = !DILocation(line: 299, column: 14, scope: !10246)
!10406 = !DILocation(line: 300, column: 10, scope: !10246)
!10407 = !DILocation(line: 300, column: 7, scope: !10246)
!10408 = !DILocation(line: 303, column: 13, scope: !10163)
!10409 = !DILocation(line: 303, column: 4, scope: !10163)
!10410 = !DILocation(line: 303, column: 11, scope: !10163)
!10411 = !DILocation(line: 304, column: 10, scope: !10163)
!10412 = !DILocation(line: 304, column: 3, scope: !10163)
!10413 = !DILocation(line: 305, column: 1, scope: !10163)
!10414 = distinct !DISubprogram(name: "check_extension", scope: !570, file: !570, line: 105, type: !597, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !566, retainedNodes: !140)
!10415 = !DILocalVariable(name: "file", arg: 1, scope: !10414, file: !570, line: 105, type: !7)
!10416 = !DILocation(line: 105, column: 24, scope: !10414)
!10417 = !DILocalVariable(name: "filelen", arg: 2, scope: !10414, file: !570, line: 105, type: !52)
!10418 = !DILocation(line: 105, column: 37, scope: !10414)
!10419 = !DILocalVariable(name: "e", arg: 3, scope: !10414, file: !570, line: 105, type: !8)
!10420 = !DILocation(line: 105, column: 51, scope: !10414)
!10421 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !10414, file: !570, line: 106, type: !5)
!10422 = !DILocation(line: 106, column: 22, scope: !10414)
!10423 = !DILocalVariable(name: "base_max", arg: 5, scope: !10414, file: !570, line: 106, type: !599)
!10424 = !DILocation(line: 106, column: 38, scope: !10414)
!10425 = !DILocalVariable(name: "base", scope: !10414, file: !570, line: 108, type: !7)
!10426 = !DILocation(line: 108, column: 9, scope: !10414)
!10427 = !DILocation(line: 108, column: 32, scope: !10414)
!10428 = !DILocation(line: 108, column: 16, scope: !10414)
!10429 = !DILocalVariable(name: "baselen", scope: !10414, file: !570, line: 109, type: !52)
!10430 = !DILocation(line: 109, column: 10, scope: !10414)
!10431 = !DILocation(line: 109, column: 30, scope: !10414)
!10432 = !DILocation(line: 109, column: 20, scope: !10414)
!10433 = !DILocalVariable(name: "baselen_max", scope: !10414, file: !570, line: 110, type: !52)
!10434 = !DILocation(line: 110, column: 10, scope: !10414)
!10435 = !DILocation(line: 112, column: 49, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10414, file: !570, line: 112, column: 7)
!10437 = !DILocation(line: 112, column: 47, scope: !10436)
!10438 = !DILocation(line: 112, column: 7, scope: !10414)
!10439 = !DILocation(line: 115, column: 12, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10441, file: !570, line: 115, column: 11)
!10441 = distinct !DILexicalBlock(scope: !10436, file: !570, line: 113, column: 5)
!10442 = !DILocation(line: 115, column: 11, scope: !10440)
!10443 = !DILocation(line: 115, column: 21, scope: !10440)
!10444 = !DILocation(line: 115, column: 11, scope: !10441)
!10445 = !DILocalVariable(name: "name_max", scope: !10446, file: !570, line: 117, type: !32)
!10446 = distinct !DILexicalBlock(scope: !10440, file: !570, line: 116, column: 9)
!10447 = !DILocation(line: 117, column: 16, scope: !10446)
!10448 = !DILocation(line: 118, column: 15, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10446, file: !570, line: 118, column: 15)
!10450 = !DILocation(line: 118, column: 22, scope: !10449)
!10451 = !DILocation(line: 118, column: 15, scope: !10446)
!10452 = !DILocalVariable(name: "tmp", scope: !10453, file: !570, line: 123, type: !596)
!10453 = distinct !DILexicalBlock(scope: !10449, file: !570, line: 119, column: 13)
!10454 = !DILocation(line: 123, column: 20, scope: !10453)
!10455 = !DILocation(line: 124, column: 15, scope: !10453)
!10456 = !DILocation(line: 124, column: 28, scope: !10453)
!10457 = !DILocation(line: 125, column: 23, scope: !10453)
!10458 = !DILocation(line: 125, column: 15, scope: !10453)
!10459 = !DILocation(line: 126, column: 15, scope: !10453)
!10460 = !DILocation(line: 126, column: 21, scope: !10453)
!10461 = !DILocation(line: 127, column: 36, scope: !10453)
!10462 = !DILocation(line: 127, column: 26, scope: !10453)
!10463 = !DILocation(line: 127, column: 24, scope: !10453)
!10464 = !DILocation(line: 128, column: 28, scope: !10453)
!10465 = !DILocation(line: 128, column: 27, scope: !10453)
!10466 = !DILocation(line: 128, column: 24, scope: !10453)
!10467 = !DILocation(line: 129, column: 23, scope: !10453)
!10468 = !DILocation(line: 129, column: 15, scope: !10453)
!10469 = !DILocation(line: 130, column: 13, scope: !10453)
!10470 = !DILocation(line: 133, column: 15, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10449, file: !570, line: 132, column: 13)
!10472 = !DILocation(line: 133, column: 21, scope: !10471)
!10473 = !DILocation(line: 134, column: 37, scope: !10471)
!10474 = !DILocation(line: 134, column: 26, scope: !10471)
!10475 = !DILocation(line: 134, column: 24, scope: !10471)
!10476 = !DILocation(line: 135, column: 28, scope: !10471)
!10477 = !DILocation(line: 135, column: 27, scope: !10471)
!10478 = !DILocation(line: 135, column: 24, scope: !10471)
!10479 = !DILocation(line: 138, column: 29, scope: !10446)
!10480 = !DILocation(line: 138, column: 26, scope: !10446)
!10481 = !DILocation(line: 138, column: 38, scope: !10446)
!10482 = !DILocation(line: 138, column: 41, scope: !10446)
!10483 = !DILocation(line: 138, column: 50, scope: !10446)
!10484 = !DILocation(line: 138, column: 24, scope: !10446)
!10485 = !DILocation(line: 138, column: 64, scope: !10446)
!10486 = !DILocation(line: 139, column: 26, scope: !10446)
!10487 = !DILocation(line: 139, column: 35, scope: !10446)
!10488 = !DILocation(line: 138, column: 12, scope: !10446)
!10489 = !DILocation(line: 138, column: 21, scope: !10446)
!10490 = !DILocation(line: 140, column: 9, scope: !10446)
!10491 = !DILocation(line: 142, column: 22, scope: !10441)
!10492 = !DILocation(line: 142, column: 21, scope: !10441)
!10493 = !DILocation(line: 142, column: 19, scope: !10441)
!10494 = !DILocation(line: 143, column: 5, scope: !10441)
!10495 = !DILocation(line: 160, column: 7, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10414, file: !570, line: 160, column: 7)
!10497 = !DILocation(line: 160, column: 21, scope: !10496)
!10498 = !DILocation(line: 160, column: 19, scope: !10496)
!10499 = !DILocation(line: 160, column: 7, scope: !10414)
!10500 = !DILocation(line: 162, column: 17, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10496, file: !570, line: 161, column: 5)
!10502 = !DILocation(line: 162, column: 24, scope: !10501)
!10503 = !DILocation(line: 162, column: 22, scope: !10501)
!10504 = !DILocation(line: 162, column: 34, scope: !10501)
!10505 = !DILocation(line: 162, column: 32, scope: !10501)
!10506 = !DILocation(line: 162, column: 15, scope: !10501)
!10507 = !DILocation(line: 163, column: 11, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10501, file: !570, line: 163, column: 11)
!10509 = !DILocation(line: 163, column: 26, scope: !10508)
!10510 = !DILocation(line: 163, column: 23, scope: !10508)
!10511 = !DILocation(line: 163, column: 11, scope: !10501)
!10512 = !DILocation(line: 164, column: 19, scope: !10508)
!10513 = !DILocation(line: 164, column: 31, scope: !10508)
!10514 = !DILocation(line: 164, column: 17, scope: !10508)
!10515 = !DILocation(line: 164, column: 9, scope: !10508)
!10516 = !DILocation(line: 165, column: 23, scope: !10501)
!10517 = !DILocation(line: 165, column: 7, scope: !10501)
!10518 = !DILocation(line: 165, column: 12, scope: !10501)
!10519 = !DILocation(line: 165, column: 21, scope: !10501)
!10520 = !DILocation(line: 166, column: 7, scope: !10501)
!10521 = !DILocation(line: 166, column: 12, scope: !10501)
!10522 = !DILocation(line: 166, column: 20, scope: !10501)
!10523 = !DILocation(line: 166, column: 25, scope: !10501)
!10524 = !DILocation(line: 167, column: 5, scope: !10501)
!10525 = !DILocation(line: 168, column: 1, scope: !10414)
!10526 = distinct !DISubprogram(name: "backup_file_rename", scope: !10527, file: !10527, line: 28, type: !607, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1590, retainedNodes: !140)
!10527 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!10528 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10526, file: !10527, line: 28, type: !5)
!10529 = !DILocation(line: 28, column: 25, scope: !10526)
!10530 = !DILocalVariable(name: "file", arg: 2, scope: !10526, file: !10527, line: 28, type: !112)
!10531 = !DILocation(line: 28, column: 45, scope: !10526)
!10532 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10526, file: !10527, line: 28, type: !65)
!10533 = !DILocation(line: 28, column: 68, scope: !10526)
!10534 = !DILocation(line: 30, column: 31, scope: !10526)
!10535 = !DILocation(line: 30, column: 39, scope: !10526)
!10536 = !DILocation(line: 30, column: 45, scope: !10526)
!10537 = !DILocation(line: 30, column: 10, scope: !10526)
!10538 = !DILocation(line: 30, column: 3, scope: !10526)
!10539 = distinct !DISubprogram(name: "find_backup_file_name", scope: !623, file: !623, line: 33, type: !607, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !603, retainedNodes: !140)
!10540 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10539, file: !623, line: 33, type: !5)
!10541 = !DILocation(line: 33, column: 28, scope: !10539)
!10542 = !DILocalVariable(name: "file", arg: 2, scope: !10539, file: !623, line: 33, type: !112)
!10543 = !DILocation(line: 33, column: 48, scope: !10539)
!10544 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10539, file: !623, line: 34, type: !65)
!10545 = !DILocation(line: 34, column: 41, scope: !10539)
!10546 = !DILocalVariable(name: "result", scope: !10539, file: !623, line: 36, type: !7)
!10547 = !DILocation(line: 36, column: 9, scope: !10539)
!10548 = !DILocation(line: 36, column: 39, scope: !10539)
!10549 = !DILocation(line: 36, column: 47, scope: !10539)
!10550 = !DILocation(line: 36, column: 53, scope: !10539)
!10551 = !DILocation(line: 36, column: 18, scope: !10539)
!10552 = !DILocation(line: 37, column: 8, scope: !10553)
!10553 = distinct !DILexicalBlock(scope: !10539, file: !623, line: 37, column: 7)
!10554 = !DILocation(line: 37, column: 7, scope: !10539)
!10555 = !DILocation(line: 38, column: 5, scope: !10553)
!10556 = !DILocation(line: 39, column: 10, scope: !10539)
!10557 = !DILocation(line: 39, column: 3, scope: !10539)
!10558 = distinct !DISubprogram(name: "get_version", scope: !623, file: !623, line: 71, type: !609, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !603, retainedNodes: !140)
!10559 = !DILocalVariable(name: "context", arg: 1, scope: !10558, file: !623, line: 71, type: !112)
!10560 = !DILocation(line: 71, column: 26, scope: !10558)
!10561 = !DILocalVariable(name: "version", arg: 2, scope: !10558, file: !623, line: 71, type: !112)
!10562 = !DILocation(line: 71, column: 47, scope: !10558)
!10563 = !DILocation(line: 73, column: 7, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10558, file: !623, line: 73, column: 7)
!10565 = !DILocation(line: 73, column: 15, scope: !10564)
!10566 = !DILocation(line: 73, column: 20, scope: !10564)
!10567 = !DILocation(line: 73, column: 24, scope: !10564)
!10568 = !DILocation(line: 73, column: 23, scope: !10564)
!10569 = !DILocation(line: 73, column: 32, scope: !10564)
!10570 = !DILocation(line: 73, column: 7, scope: !10558)
!10571 = !DILocation(line: 74, column: 5, scope: !10564)
!10572 = !DILocation(line: 76, column: 12, scope: !10564)
!10573 = !DILocation(line: 76, column: 5, scope: !10564)
!10574 = !DILocation(line: 77, column: 1, scope: !10558)
!10575 = distinct !DISubprogram(name: "xget_version", scope: !623, file: !623, line: 87, type: !609, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !603, retainedNodes: !140)
!10576 = !DILocalVariable(name: "context", arg: 1, scope: !10575, file: !623, line: 87, type: !112)
!10577 = !DILocation(line: 87, column: 27, scope: !10575)
!10578 = !DILocalVariable(name: "version", arg: 2, scope: !10575, file: !623, line: 87, type: !112)
!10579 = !DILocation(line: 87, column: 48, scope: !10575)
!10580 = !DILocation(line: 89, column: 7, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10575, file: !623, line: 89, column: 7)
!10582 = !DILocation(line: 89, column: 15, scope: !10581)
!10583 = !DILocation(line: 89, column: 19, scope: !10581)
!10584 = !DILocation(line: 89, column: 18, scope: !10581)
!10585 = !DILocation(line: 89, column: 7, scope: !10575)
!10586 = !DILocation(line: 90, column: 25, scope: !10581)
!10587 = !DILocation(line: 90, column: 34, scope: !10581)
!10588 = !DILocation(line: 90, column: 12, scope: !10581)
!10589 = !DILocation(line: 90, column: 5, scope: !10581)
!10590 = !DILocation(line: 92, column: 45, scope: !10581)
!10591 = !DILocation(line: 92, column: 12, scope: !10581)
!10592 = !DILocation(line: 92, column: 5, scope: !10581)
!10593 = !DILocation(line: 93, column: 1, scope: !10575)
!10594 = distinct !DISubprogram(name: "buffer_lcm", scope: !10595, file: !10595, line: 28, type: !1596, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1593, retainedNodes: !140)
!10595 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!10596 = !DILocalVariable(name: "a", arg: 1, scope: !10594, file: !10595, line: 28, type: !52)
!10597 = !DILocation(line: 28, column: 20, scope: !10594)
!10598 = !DILocalVariable(name: "b", arg: 2, scope: !10594, file: !10595, line: 28, type: !52)
!10599 = !DILocation(line: 28, column: 30, scope: !10594)
!10600 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !10594, file: !10595, line: 28, type: !52)
!10601 = !DILocation(line: 28, column: 40, scope: !10594)
!10602 = !DILocalVariable(name: "size", scope: !10594, file: !10595, line: 30, type: !52)
!10603 = !DILocation(line: 30, column: 10, scope: !10594)
!10604 = !DILocation(line: 33, column: 8, scope: !10605)
!10605 = distinct !DILexicalBlock(scope: !10594, file: !10595, line: 33, column: 7)
!10606 = !DILocation(line: 33, column: 7, scope: !10594)
!10607 = !DILocation(line: 34, column: 12, scope: !10605)
!10608 = !DILocation(line: 34, column: 16, scope: !10605)
!10609 = !DILocation(line: 34, column: 10, scope: !10605)
!10610 = !DILocation(line: 34, column: 5, scope: !10605)
!10611 = !DILocation(line: 37, column: 11, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10613, file: !10595, line: 37, column: 11)
!10613 = distinct !DILexicalBlock(scope: !10605, file: !10595, line: 36, column: 5)
!10614 = !DILocation(line: 37, column: 11, scope: !10613)
!10615 = !DILocalVariable(name: "lcm", scope: !10616, file: !10595, line: 42, type: !52)
!10616 = distinct !DILexicalBlock(scope: !10612, file: !10595, line: 38, column: 9)
!10617 = !DILocation(line: 42, column: 18, scope: !10616)
!10618 = !DILocalVariable(name: "m", scope: !10616, file: !10595, line: 42, type: !52)
!10619 = !DILocation(line: 42, column: 23, scope: !10616)
!10620 = !DILocalVariable(name: "n", scope: !10616, file: !10595, line: 42, type: !52)
!10621 = !DILocation(line: 42, column: 26, scope: !10616)
!10622 = !DILocalVariable(name: "q", scope: !10616, file: !10595, line: 42, type: !52)
!10623 = !DILocation(line: 42, column: 29, scope: !10616)
!10624 = !DILocalVariable(name: "r", scope: !10616, file: !10595, line: 42, type: !52)
!10625 = !DILocation(line: 42, column: 32, scope: !10616)
!10626 = !DILocation(line: 45, column: 20, scope: !10627)
!10627 = distinct !DILexicalBlock(scope: !10616, file: !10595, line: 45, column: 11)
!10628 = !DILocation(line: 45, column: 18, scope: !10627)
!10629 = !DILocation(line: 45, column: 27, scope: !10627)
!10630 = !DILocation(line: 45, column: 25, scope: !10627)
!10631 = !DILocation(line: 45, column: 16, scope: !10627)
!10632 = !DILocation(line: 45, column: 36, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10627, file: !10595, line: 45, column: 11)
!10634 = !DILocation(line: 45, column: 40, scope: !10633)
!10635 = !DILocation(line: 45, column: 38, scope: !10633)
!10636 = !DILocation(line: 45, column: 34, scope: !10633)
!10637 = !DILocation(line: 45, column: 43, scope: !10633)
!10638 = !DILocation(line: 45, column: 11, scope: !10627)
!10639 = !DILocation(line: 46, column: 13, scope: !10633)
!10640 = !DILocation(line: 45, column: 54, scope: !10633)
!10641 = !DILocation(line: 45, column: 52, scope: !10633)
!10642 = !DILocation(line: 45, column: 61, scope: !10633)
!10643 = !DILocation(line: 45, column: 59, scope: !10633)
!10644 = !DILocation(line: 45, column: 11, scope: !10633)
!10645 = distinct !{!10645, !10638, !10646}
!10646 = !DILocation(line: 46, column: 13, scope: !10627)
!10647 = !DILocation(line: 49, column: 15, scope: !10616)
!10648 = !DILocation(line: 49, column: 19, scope: !10616)
!10649 = !DILocation(line: 49, column: 17, scope: !10616)
!10650 = !DILocation(line: 49, column: 13, scope: !10616)
!10651 = !DILocation(line: 50, column: 17, scope: !10616)
!10652 = !DILocation(line: 50, column: 21, scope: !10616)
!10653 = !DILocation(line: 50, column: 19, scope: !10616)
!10654 = !DILocation(line: 50, column: 15, scope: !10616)
!10655 = !DILocation(line: 51, column: 15, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10616, file: !10595, line: 51, column: 15)
!10657 = !DILocation(line: 51, column: 22, scope: !10656)
!10658 = !DILocation(line: 51, column: 19, scope: !10656)
!10659 = !DILocation(line: 51, column: 30, scope: !10656)
!10660 = !DILocation(line: 51, column: 33, scope: !10656)
!10661 = !DILocation(line: 51, column: 39, scope: !10656)
!10662 = !DILocation(line: 51, column: 37, scope: !10656)
!10663 = !DILocation(line: 51, column: 44, scope: !10656)
!10664 = !DILocation(line: 51, column: 41, scope: !10656)
!10665 = !DILocation(line: 51, column: 15, scope: !10616)
!10666 = !DILocation(line: 52, column: 20, scope: !10656)
!10667 = !DILocation(line: 52, column: 13, scope: !10656)
!10668 = !DILocation(line: 53, column: 9, scope: !10616)
!10669 = !DILocation(line: 55, column: 14, scope: !10613)
!10670 = !DILocation(line: 55, column: 12, scope: !10613)
!10671 = !DILocation(line: 58, column: 10, scope: !10594)
!10672 = !DILocation(line: 58, column: 18, scope: !10594)
!10673 = !DILocation(line: 58, column: 15, scope: !10594)
!10674 = !DILocation(line: 58, column: 28, scope: !10594)
!10675 = !DILocation(line: 58, column: 35, scope: !10594)
!10676 = !DILocation(line: 58, column: 3, scope: !10594)
!10677 = !DILocation(line: 59, column: 1, scope: !10594)
!10678 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !669, file: !669, line: 43, type: !133, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !626, retainedNodes: !140)
!10679 = !DILocalVariable(name: "file", arg: 1, scope: !10678, file: !669, line: 43, type: !112)
!10680 = !DILocation(line: 43, column: 40, scope: !10678)
!10681 = !DILocation(line: 45, column: 15, scope: !10678)
!10682 = !DILocation(line: 45, column: 13, scope: !10678)
!10683 = !DILocation(line: 46, column: 1, scope: !10678)
!10684 = distinct !DISubprogram(name: "close_stdin", scope: !669, file: !669, line: 79, type: !131, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !626, retainedNodes: !140)
!10685 = !DILocalVariable(name: "fail", scope: !10684, file: !669, line: 81, type: !117)
!10686 = !DILocation(line: 81, column: 8, scope: !10684)
!10687 = !DILocation(line: 87, column: 19, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10684, file: !669, line: 87, column: 7)
!10689 = !DILocation(line: 87, column: 7, scope: !10688)
!10690 = !DILocation(line: 87, column: 26, scope: !10688)
!10691 = !DILocation(line: 87, column: 7, scope: !10684)
!10692 = !DILocation(line: 91, column: 19, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10694, file: !669, line: 91, column: 11)
!10694 = distinct !DILexicalBlock(scope: !10688, file: !669, line: 88, column: 5)
!10695 = !DILocation(line: 91, column: 11, scope: !10693)
!10696 = !DILocation(line: 91, column: 39, scope: !10693)
!10697 = !DILocation(line: 91, column: 44, scope: !10693)
!10698 = !DILocation(line: 91, column: 55, scope: !10693)
!10699 = !DILocation(line: 91, column: 47, scope: !10693)
!10700 = !DILocation(line: 91, column: 62, scope: !10693)
!10701 = !DILocation(line: 91, column: 11, scope: !10694)
!10702 = !DILocation(line: 92, column: 14, scope: !10693)
!10703 = !DILocation(line: 92, column: 9, scope: !10693)
!10704 = !DILocation(line: 93, column: 5, scope: !10694)
!10705 = !DILocation(line: 94, column: 21, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10684, file: !669, line: 94, column: 7)
!10707 = !DILocation(line: 94, column: 7, scope: !10706)
!10708 = !DILocation(line: 94, column: 28, scope: !10706)
!10709 = !DILocation(line: 94, column: 7, scope: !10684)
!10710 = !DILocation(line: 95, column: 10, scope: !10706)
!10711 = !DILocation(line: 95, column: 5, scope: !10706)
!10712 = !DILocation(line: 96, column: 7, scope: !10713)
!10713 = distinct !DILexicalBlock(scope: !10684, file: !669, line: 96, column: 7)
!10714 = !DILocation(line: 96, column: 7, scope: !10684)
!10715 = !DILocalVariable(name: "close_error", scope: !10716, file: !669, line: 100, type: !112)
!10716 = distinct !DILexicalBlock(scope: !10713, file: !669, line: 97, column: 5)
!10717 = !DILocation(line: 100, column: 19, scope: !10716)
!10718 = !DILocation(line: 100, column: 33, scope: !10716)
!10719 = !DILocation(line: 101, column: 11, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10716, file: !669, line: 101, column: 11)
!10721 = !DILocation(line: 101, column: 11, scope: !10716)
!10722 = !DILocation(line: 102, column: 19, scope: !10720)
!10723 = !DILocation(line: 102, column: 52, scope: !10720)
!10724 = !DILocation(line: 102, column: 36, scope: !10720)
!10725 = !DILocation(line: 103, column: 16, scope: !10720)
!10726 = !DILocation(line: 102, column: 9, scope: !10720)
!10727 = !DILocation(line: 105, column: 19, scope: !10720)
!10728 = !DILocation(line: 105, column: 32, scope: !10720)
!10729 = !DILocation(line: 105, column: 9, scope: !10720)
!10730 = !DILocation(line: 106, column: 5, scope: !10716)
!10731 = !DILocation(line: 108, column: 3, scope: !10684)
!10732 = !DILocation(line: 110, column: 7, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10684, file: !669, line: 110, column: 7)
!10734 = !DILocation(line: 110, column: 7, scope: !10684)
!10735 = !DILocation(line: 111, column: 12, scope: !10733)
!10736 = !DILocation(line: 111, column: 5, scope: !10733)
!10737 = !DILocation(line: 112, column: 1, scope: !10684)
!10738 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !718, file: !718, line: 51, type: !133, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !140)
!10739 = !DILocalVariable(name: "file", arg: 1, scope: !10738, file: !718, line: 51, type: !112)
!10740 = !DILocation(line: 51, column: 41, scope: !10738)
!10741 = !DILocation(line: 53, column: 15, scope: !10738)
!10742 = !DILocation(line: 53, column: 13, scope: !10738)
!10743 = !DILocation(line: 54, column: 1, scope: !10738)
!10744 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !718, file: !718, line: 88, type: !675, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !140)
!10745 = !DILocalVariable(name: "ignore", arg: 1, scope: !10744, file: !718, line: 88, type: !117)
!10746 = !DILocation(line: 88, column: 37, scope: !10744)
!10747 = !DILocation(line: 90, column: 18, scope: !10744)
!10748 = !DILocation(line: 90, column: 16, scope: !10744)
!10749 = !DILocation(line: 91, column: 1, scope: !10744)
!10750 = distinct !DISubprogram(name: "close_stdout", scope: !718, file: !718, line: 117, type: !131, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !672, retainedNodes: !140)
!10751 = !DILocation(line: 119, column: 21, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10750, file: !718, line: 119, column: 7)
!10753 = !DILocation(line: 119, column: 7, scope: !10752)
!10754 = !DILocation(line: 119, column: 29, scope: !10752)
!10755 = !DILocation(line: 120, column: 7, scope: !10752)
!10756 = !DILocation(line: 120, column: 12, scope: !10752)
!10757 = !DILocation(line: 120, column: 25, scope: !10752)
!10758 = !DILocation(line: 120, column: 28, scope: !10752)
!10759 = !DILocation(line: 120, column: 34, scope: !10752)
!10760 = !DILocation(line: 119, column: 7, scope: !10750)
!10761 = !DILocalVariable(name: "write_error", scope: !10762, file: !718, line: 122, type: !112)
!10762 = distinct !DILexicalBlock(scope: !10752, file: !718, line: 121, column: 5)
!10763 = !DILocation(line: 122, column: 19, scope: !10762)
!10764 = !DILocation(line: 122, column: 33, scope: !10762)
!10765 = !DILocation(line: 123, column: 11, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10762, file: !718, line: 123, column: 11)
!10767 = !DILocation(line: 123, column: 11, scope: !10762)
!10768 = !DILocation(line: 124, column: 19, scope: !10766)
!10769 = !DILocation(line: 124, column: 52, scope: !10766)
!10770 = !DILocation(line: 124, column: 36, scope: !10766)
!10771 = !DILocation(line: 125, column: 16, scope: !10766)
!10772 = !DILocation(line: 124, column: 9, scope: !10766)
!10773 = !DILocation(line: 127, column: 19, scope: !10766)
!10774 = !DILocation(line: 127, column: 32, scope: !10766)
!10775 = !DILocation(line: 127, column: 9, scope: !10766)
!10776 = !DILocation(line: 129, column: 14, scope: !10762)
!10777 = !DILocation(line: 129, column: 7, scope: !10762)
!10778 = !DILocation(line: 134, column: 42, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10750, file: !718, line: 134, column: 7)
!10780 = !DILocation(line: 134, column: 28, scope: !10779)
!10781 = !DILocation(line: 134, column: 50, scope: !10779)
!10782 = !DILocation(line: 134, column: 7, scope: !10750)
!10783 = !DILocation(line: 135, column: 12, scope: !10779)
!10784 = !DILocation(line: 135, column: 5, scope: !10779)
!10785 = !DILocation(line: 136, column: 1, scope: !10750)
!10786 = distinct !DISubprogram(name: "dir_name", scope: !10787, file: !10787, line: 32, type: !979, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1598, retainedNodes: !140)
!10787 = !DIFile(filename: "lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!10788 = !DILocalVariable(name: "file", arg: 1, scope: !10786, file: !10787, line: 32, type: !112)
!10789 = !DILocation(line: 32, column: 23, scope: !10786)
!10790 = !DILocalVariable(name: "result", scope: !10786, file: !10787, line: 34, type: !7)
!10791 = !DILocation(line: 34, column: 9, scope: !10786)
!10792 = !DILocation(line: 34, column: 29, scope: !10786)
!10793 = !DILocation(line: 34, column: 18, scope: !10786)
!10794 = !DILocation(line: 35, column: 8, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10786, file: !10787, line: 35, column: 7)
!10796 = !DILocation(line: 35, column: 7, scope: !10786)
!10797 = !DILocation(line: 36, column: 5, scope: !10795)
!10798 = !DILocation(line: 37, column: 10, scope: !10786)
!10799 = !DILocation(line: 37, column: 3, scope: !10786)
!10800 = distinct !DISubprogram(name: "dir_len", scope: !10801, file: !10801, line: 32, type: !1604, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1601, retainedNodes: !140)
!10801 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10802 = !DILocalVariable(name: "file", arg: 1, scope: !10800, file: !10801, line: 32, type: !112)
!10803 = !DILocation(line: 32, column: 22, scope: !10800)
!10804 = !DILocalVariable(name: "prefix_length", scope: !10800, file: !10801, line: 34, type: !52)
!10805 = !DILocation(line: 34, column: 10, scope: !10800)
!10806 = !DILocalVariable(name: "length", scope: !10800, file: !10801, line: 35, type: !52)
!10807 = !DILocation(line: 35, column: 10, scope: !10800)
!10808 = !DILocation(line: 38, column: 21, scope: !10800)
!10809 = !DILocation(line: 38, column: 35, scope: !10800)
!10810 = !DILocation(line: 41, column: 24, scope: !10800)
!10811 = !DILocation(line: 38, column: 20, scope: !10800)
!10812 = !DILocation(line: 38, column: 17, scope: !10800)
!10813 = !DILocation(line: 48, column: 33, scope: !10814)
!10814 = distinct !DILexicalBlock(scope: !10800, file: !10801, line: 48, column: 3)
!10815 = !DILocation(line: 48, column: 17, scope: !10814)
!10816 = !DILocation(line: 48, column: 41, scope: !10814)
!10817 = !DILocation(line: 48, column: 39, scope: !10814)
!10818 = !DILocation(line: 48, column: 15, scope: !10814)
!10819 = !DILocation(line: 48, column: 8, scope: !10814)
!10820 = !DILocation(line: 49, column: 8, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10814, file: !10801, line: 48, column: 3)
!10822 = !DILocation(line: 49, column: 24, scope: !10821)
!10823 = !DILocation(line: 49, column: 22, scope: !10821)
!10824 = !DILocation(line: 48, column: 3, scope: !10814)
!10825 = !DILocation(line: 50, column: 11, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10821, file: !10801, line: 50, column: 9)
!10827 = !DILocation(line: 50, column: 9, scope: !10821)
!10828 = !DILocation(line: 51, column: 7, scope: !10826)
!10829 = !DILocation(line: 49, column: 38, scope: !10821)
!10830 = !DILocation(line: 48, column: 3, scope: !10821)
!10831 = distinct !{!10831, !10824, !10832}
!10832 = !DILocation(line: 51, column: 7, scope: !10814)
!10833 = !DILocation(line: 52, column: 10, scope: !10800)
!10834 = !DILocation(line: 52, column: 3, scope: !10800)
!10835 = distinct !DISubprogram(name: "mdir_name", scope: !10801, file: !10801, line: 71, type: !979, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1601, retainedNodes: !140)
!10836 = !DILocalVariable(name: "file", arg: 1, scope: !10835, file: !10801, line: 71, type: !112)
!10837 = !DILocation(line: 71, column: 24, scope: !10835)
!10838 = !DILocalVariable(name: "length", scope: !10835, file: !10801, line: 73, type: !52)
!10839 = !DILocation(line: 73, column: 10, scope: !10835)
!10840 = !DILocation(line: 73, column: 28, scope: !10835)
!10841 = !DILocation(line: 73, column: 19, scope: !10835)
!10842 = !DILocalVariable(name: "append_dot", scope: !10835, file: !10801, line: 74, type: !117)
!10843 = !DILocation(line: 74, column: 8, scope: !10835)
!10844 = !DILocation(line: 74, column: 22, scope: !10835)
!10845 = !DILocation(line: 74, column: 29, scope: !10835)
!10846 = !DILocation(line: 75, column: 22, scope: !10835)
!10847 = !DILocalVariable(name: "dir", scope: !10835, file: !10801, line: 78, type: !7)
!10848 = !DILocation(line: 78, column: 9, scope: !10835)
!10849 = !DILocation(line: 78, column: 23, scope: !10835)
!10850 = !DILocation(line: 78, column: 32, scope: !10835)
!10851 = !DILocation(line: 78, column: 30, scope: !10835)
!10852 = !DILocation(line: 78, column: 43, scope: !10835)
!10853 = !DILocation(line: 78, column: 15, scope: !10835)
!10854 = !DILocation(line: 79, column: 8, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10835, file: !10801, line: 79, column: 7)
!10856 = !DILocation(line: 79, column: 7, scope: !10835)
!10857 = !DILocation(line: 80, column: 5, scope: !10855)
!10858 = !DILocation(line: 81, column: 11, scope: !10835)
!10859 = !DILocation(line: 81, column: 16, scope: !10835)
!10860 = !DILocation(line: 81, column: 22, scope: !10835)
!10861 = !DILocation(line: 81, column: 3, scope: !10835)
!10862 = !DILocation(line: 82, column: 7, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10835, file: !10801, line: 82, column: 7)
!10864 = !DILocation(line: 82, column: 7, scope: !10835)
!10865 = !DILocation(line: 83, column: 5, scope: !10863)
!10866 = !DILocation(line: 83, column: 15, scope: !10863)
!10867 = !DILocation(line: 83, column: 19, scope: !10863)
!10868 = !DILocation(line: 84, column: 3, scope: !10835)
!10869 = !DILocation(line: 84, column: 7, scope: !10835)
!10870 = !DILocation(line: 84, column: 15, scope: !10835)
!10871 = !DILocation(line: 85, column: 10, scope: !10835)
!10872 = !DILocation(line: 85, column: 3, scope: !10835)
!10873 = !DILocation(line: 86, column: 1, scope: !10835)
!10874 = distinct !DISubprogram(name: "last_component", scope: !10875, file: !10875, line: 30, type: !979, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1606, retainedNodes: !140)
!10875 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10876 = !DILocalVariable(name: "name", arg: 1, scope: !10874, file: !10875, line: 30, type: !112)
!10877 = !DILocation(line: 30, column: 29, scope: !10874)
!10878 = !DILocalVariable(name: "base", scope: !10874, file: !10875, line: 32, type: !112)
!10879 = !DILocation(line: 32, column: 15, scope: !10874)
!10880 = !DILocation(line: 32, column: 22, scope: !10874)
!10881 = !DILocation(line: 32, column: 27, scope: !10874)
!10882 = !DILocalVariable(name: "p", scope: !10874, file: !10875, line: 33, type: !112)
!10883 = !DILocation(line: 33, column: 15, scope: !10874)
!10884 = !DILocalVariable(name: "saw_slash", scope: !10874, file: !10875, line: 34, type: !117)
!10885 = !DILocation(line: 34, column: 8, scope: !10874)
!10886 = !DILocation(line: 36, column: 3, scope: !10874)
!10887 = !DILocation(line: 36, column: 10, scope: !10874)
!10888 = !DILocation(line: 37, column: 9, scope: !10874)
!10889 = distinct !{!10889, !10886, !10888}
!10890 = !DILocation(line: 39, column: 12, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10874, file: !10875, line: 39, column: 3)
!10892 = !DILocation(line: 39, column: 10, scope: !10891)
!10893 = !DILocation(line: 39, column: 8, scope: !10891)
!10894 = !DILocation(line: 39, column: 19, scope: !10895)
!10895 = distinct !DILexicalBlock(scope: !10891, file: !10875, line: 39, column: 3)
!10896 = !DILocation(line: 39, column: 18, scope: !10895)
!10897 = !DILocation(line: 39, column: 3, scope: !10891)
!10898 = !DILocation(line: 41, column: 11, scope: !10899)
!10899 = distinct !DILexicalBlock(scope: !10900, file: !10875, line: 41, column: 11)
!10900 = distinct !DILexicalBlock(scope: !10895, file: !10875, line: 40, column: 5)
!10901 = !DILocation(line: 41, column: 11, scope: !10900)
!10902 = !DILocation(line: 42, column: 19, scope: !10899)
!10903 = !DILocation(line: 42, column: 9, scope: !10899)
!10904 = !DILocation(line: 43, column: 16, scope: !10905)
!10905 = distinct !DILexicalBlock(scope: !10899, file: !10875, line: 43, column: 16)
!10906 = !DILocation(line: 43, column: 16, scope: !10899)
!10907 = !DILocation(line: 45, column: 18, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10905, file: !10875, line: 44, column: 9)
!10909 = !DILocation(line: 45, column: 16, scope: !10908)
!10910 = !DILocation(line: 46, column: 21, scope: !10908)
!10911 = !DILocation(line: 47, column: 9, scope: !10908)
!10912 = !DILocation(line: 48, column: 5, scope: !10900)
!10913 = !DILocation(line: 39, column: 23, scope: !10895)
!10914 = !DILocation(line: 39, column: 3, scope: !10895)
!10915 = distinct !{!10915, !10897, !10916}
!10916 = !DILocation(line: 48, column: 5, scope: !10891)
!10917 = !DILocation(line: 50, column: 19, scope: !10874)
!10918 = !DILocation(line: 50, column: 3, scope: !10874)
!10919 = distinct !DISubprogram(name: "base_len", scope: !10875, file: !10875, line: 58, type: !1604, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1606, retainedNodes: !140)
!10920 = !DILocalVariable(name: "name", arg: 1, scope: !10919, file: !10875, line: 58, type: !112)
!10921 = !DILocation(line: 58, column: 23, scope: !10919)
!10922 = !DILocalVariable(name: "len", scope: !10919, file: !10875, line: 60, type: !52)
!10923 = !DILocation(line: 60, column: 10, scope: !10919)
!10924 = !DILocalVariable(name: "prefix_len", scope: !10919, file: !10875, line: 61, type: !52)
!10925 = !DILocation(line: 61, column: 10, scope: !10919)
!10926 = !DILocation(line: 63, column: 22, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10919, file: !10875, line: 63, column: 3)
!10928 = !DILocation(line: 63, column: 14, scope: !10927)
!10929 = !DILocation(line: 63, column: 12, scope: !10927)
!10930 = !DILocation(line: 63, column: 8, scope: !10927)
!10931 = !DILocation(line: 63, column: 34, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10927, file: !10875, line: 63, column: 3)
!10933 = !DILocation(line: 63, column: 32, scope: !10932)
!10934 = !DILocation(line: 63, column: 38, scope: !10932)
!10935 = !DILocation(line: 63, column: 41, scope: !10932)
!10936 = !DILocation(line: 0, scope: !10932)
!10937 = !DILocation(line: 63, column: 3, scope: !10927)
!10938 = !DILocation(line: 64, column: 5, scope: !10932)
!10939 = !DILocation(line: 63, column: 70, scope: !10932)
!10940 = !DILocation(line: 63, column: 3, scope: !10932)
!10941 = distinct !{!10941, !10937, !10942}
!10942 = !DILocation(line: 64, column: 5, scope: !10927)
!10943 = !DILocation(line: 74, column: 10, scope: !10919)
!10944 = !DILocation(line: 74, column: 3, scope: !10919)
!10945 = distinct !DISubprogram(name: "strip_trailing_slashes", scope: !10946, file: !10946, line: 31, type: !1612, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1609, retainedNodes: !140)
!10946 = !DIFile(filename: "lib/stripslash.c", directory: "/home/mohamad/clone/coreutils")
!10947 = !DILocalVariable(name: "file", arg: 1, scope: !10945, file: !10946, line: 31, type: !7)
!10948 = !DILocation(line: 31, column: 31, scope: !10945)
!10949 = !DILocalVariable(name: "base", scope: !10945, file: !10946, line: 33, type: !7)
!10950 = !DILocation(line: 33, column: 9, scope: !10945)
!10951 = !DILocation(line: 33, column: 32, scope: !10945)
!10952 = !DILocation(line: 33, column: 16, scope: !10945)
!10953 = !DILocalVariable(name: "base_lim", scope: !10945, file: !10946, line: 34, type: !7)
!10954 = !DILocation(line: 34, column: 9, scope: !10945)
!10955 = !DILocalVariable(name: "had_slash", scope: !10945, file: !10946, line: 35, type: !117)
!10956 = !DILocation(line: 35, column: 8, scope: !10945)
!10957 = !DILocation(line: 39, column: 10, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10945, file: !10946, line: 39, column: 7)
!10959 = !DILocation(line: 39, column: 9, scope: !10958)
!10960 = !DILocation(line: 39, column: 7, scope: !10945)
!10961 = !DILocation(line: 40, column: 12, scope: !10958)
!10962 = !DILocation(line: 40, column: 10, scope: !10958)
!10963 = !DILocation(line: 40, column: 5, scope: !10958)
!10964 = !DILocation(line: 41, column: 14, scope: !10945)
!10965 = !DILocation(line: 41, column: 31, scope: !10945)
!10966 = !DILocation(line: 41, column: 21, scope: !10945)
!10967 = !DILocation(line: 41, column: 19, scope: !10945)
!10968 = !DILocation(line: 41, column: 12, scope: !10945)
!10969 = !DILocation(line: 42, column: 17, scope: !10945)
!10970 = !DILocation(line: 42, column: 16, scope: !10945)
!10971 = !DILocation(line: 42, column: 26, scope: !10945)
!10972 = !DILocation(line: 42, column: 13, scope: !10945)
!10973 = !DILocation(line: 43, column: 4, scope: !10945)
!10974 = !DILocation(line: 43, column: 13, scope: !10945)
!10975 = !DILocation(line: 44, column: 10, scope: !10945)
!10976 = !DILocation(line: 44, column: 3, scope: !10945)
!10977 = distinct !DISubprogram(name: "fdadvise", scope: !10978, file: !10978, line: 31, type: !1627, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1614, retainedNodes: !140)
!10978 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!10979 = !DILocalVariable(name: "fd", arg: 1, scope: !10977, file: !10978, line: 31, type: !5)
!10980 = !DILocation(line: 31, column: 15, scope: !10977)
!10981 = !DILocalVariable(name: "offset", arg: 2, scope: !10977, file: !10978, line: 31, type: !245)
!10982 = !DILocation(line: 31, column: 25, scope: !10977)
!10983 = !DILocalVariable(name: "len", arg: 3, scope: !10977, file: !10978, line: 31, type: !245)
!10984 = !DILocation(line: 31, column: 39, scope: !10977)
!10985 = !DILocalVariable(name: "advice", arg: 4, scope: !10977, file: !10978, line: 31, type: !1629)
!10986 = !DILocation(line: 31, column: 54, scope: !10977)
!10987 = !DILocalVariable(name: "__x", scope: !10988, file: !10978, line: 34, type: !5)
!10988 = distinct !DILexicalBlock(scope: !10977, file: !10978, line: 34, column: 3)
!10989 = !DILocation(line: 34, column: 3, scope: !10988)
!10990 = !DILocation(line: 36, column: 1, scope: !10977)
!10991 = distinct !DISubprogram(name: "fadvise", scope: !10978, file: !10978, line: 39, type: !1630, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1614, retainedNodes: !140)
!10992 = !DILocalVariable(name: "fp", arg: 1, scope: !10991, file: !10978, line: 39, type: !1632)
!10993 = !DILocation(line: 39, column: 16, scope: !10991)
!10994 = !DILocalVariable(name: "advice", arg: 2, scope: !10991, file: !10978, line: 39, type: !1629)
!10995 = !DILocation(line: 39, column: 30, scope: !10991)
!10996 = !DILocation(line: 41, column: 7, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10991, file: !10978, line: 41, column: 7)
!10998 = !DILocation(line: 41, column: 7, scope: !10991)
!10999 = !DILocation(line: 42, column: 23, scope: !10997)
!11000 = !DILocation(line: 42, column: 15, scope: !10997)
!11001 = !DILocation(line: 42, column: 34, scope: !10997)
!11002 = !DILocation(line: 42, column: 5, scope: !10997)
!11003 = !DILocation(line: 43, column: 1, scope: !10991)
!11004 = distinct !DISubprogram(name: "open_safer", scope: !11005, file: !11005, line: 29, type: !11006, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1672, retainedNodes: !140)
!11005 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!5, !112, !5, null}
!11008 = !DILocalVariable(name: "file", arg: 1, scope: !11004, file: !11005, line: 29, type: !112)
!11009 = !DILocation(line: 29, column: 25, scope: !11004)
!11010 = !DILocalVariable(name: "flags", arg: 2, scope: !11004, file: !11005, line: 29, type: !5)
!11011 = !DILocation(line: 29, column: 35, scope: !11004)
!11012 = !DILocalVariable(name: "mode", scope: !11004, file: !11005, line: 31, type: !157)
!11013 = !DILocation(line: 31, column: 10, scope: !11004)
!11014 = !DILocation(line: 33, column: 7, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11004, file: !11005, line: 33, column: 7)
!11016 = !DILocation(line: 33, column: 13, scope: !11015)
!11017 = !DILocation(line: 33, column: 7, scope: !11004)
!11018 = !DILocalVariable(name: "ap", scope: !11019, file: !11005, line: 35, type: !1677)
!11019 = distinct !DILexicalBlock(scope: !11015, file: !11005, line: 34, column: 5)
!11020 = !DILocation(line: 35, column: 15, scope: !11019)
!11021 = !DILocation(line: 36, column: 7, scope: !11019)
!11022 = !DILocation(line: 40, column: 14, scope: !11019)
!11023 = !DILocation(line: 40, column: 12, scope: !11019)
!11024 = !DILocation(line: 42, column: 7, scope: !11019)
!11025 = !DILocation(line: 43, column: 5, scope: !11019)
!11026 = !DILocation(line: 45, column: 26, scope: !11004)
!11027 = !DILocation(line: 45, column: 32, scope: !11004)
!11028 = !DILocation(line: 45, column: 39, scope: !11004)
!11029 = !DILocation(line: 45, column: 20, scope: !11004)
!11030 = !DILocation(line: 45, column: 10, scope: !11004)
!11031 = !DILocation(line: 45, column: 3, scope: !11004)
!11032 = distinct !DISubprogram(name: "record_file", scope: !11033, file: !11033, line: 29, type: !1689, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1686, retainedNodes: !140)
!11033 = !DIFile(filename: "lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!11034 = !DILocalVariable(name: "ht", arg: 1, scope: !11032, file: !11033, line: 29, type: !192)
!11035 = !DILocation(line: 29, column: 26, scope: !11032)
!11036 = !DILocalVariable(name: "file", arg: 2, scope: !11032, file: !11033, line: 29, type: !112)
!11037 = !DILocation(line: 29, column: 42, scope: !11032)
!11038 = !DILocalVariable(name: "stats", arg: 3, scope: !11032, file: !11033, line: 29, type: !1691)
!11039 = !DILocation(line: 29, column: 67, scope: !11032)
!11040 = !DILocalVariable(name: "ent", scope: !11032, file: !11033, line: 31, type: !1714)
!11041 = !DILocation(line: 31, column: 20, scope: !11032)
!11042 = !DILocation(line: 33, column: 7, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11032, file: !11033, line: 33, column: 7)
!11044 = !DILocation(line: 33, column: 10, scope: !11043)
!11045 = !DILocation(line: 33, column: 7, scope: !11032)
!11046 = !DILocation(line: 34, column: 5, scope: !11043)
!11047 = !DILocation(line: 36, column: 9, scope: !11032)
!11048 = !DILocation(line: 36, column: 7, scope: !11032)
!11049 = !DILocation(line: 37, column: 24, scope: !11032)
!11050 = !DILocation(line: 37, column: 15, scope: !11032)
!11051 = !DILocation(line: 37, column: 3, scope: !11032)
!11052 = !DILocation(line: 37, column: 8, scope: !11032)
!11053 = !DILocation(line: 37, column: 13, scope: !11032)
!11054 = !{!11055, !2994, i64 0}
!11055 = !{!"F_triple", !2994, i64 0, !3178, i64 8, !3178, i64 16}
!11056 = !DILocation(line: 38, column: 17, scope: !11032)
!11057 = !DILocation(line: 38, column: 24, scope: !11032)
!11058 = !DILocation(line: 38, column: 3, scope: !11032)
!11059 = !DILocation(line: 38, column: 8, scope: !11032)
!11060 = !DILocation(line: 38, column: 15, scope: !11032)
!11061 = !{!11055, !3178, i64 8}
!11062 = !DILocation(line: 39, column: 17, scope: !11032)
!11063 = !DILocation(line: 39, column: 24, scope: !11032)
!11064 = !DILocation(line: 39, column: 3, scope: !11032)
!11065 = !DILocation(line: 39, column: 8, scope: !11032)
!11066 = !DILocation(line: 39, column: 15, scope: !11032)
!11067 = !{!11055, !3178, i64 16}
!11068 = !DILocalVariable(name: "ent_from_table", scope: !11069, file: !11033, line: 42, type: !1714)
!11069 = distinct !DILexicalBlock(scope: !11032, file: !11033, line: 41, column: 3)
!11070 = !DILocation(line: 42, column: 22, scope: !11069)
!11071 = !DILocation(line: 42, column: 52, scope: !11069)
!11072 = !DILocation(line: 42, column: 56, scope: !11069)
!11073 = !DILocation(line: 42, column: 39, scope: !11069)
!11074 = !DILocation(line: 43, column: 9, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11069, file: !11033, line: 43, column: 9)
!11076 = !DILocation(line: 43, column: 24, scope: !11075)
!11077 = !DILocation(line: 43, column: 9, scope: !11069)
!11078 = !DILocation(line: 46, column: 9, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !11033, line: 44, column: 7)
!11080 = !DILocation(line: 49, column: 9, scope: !11081)
!11081 = distinct !DILexicalBlock(scope: !11069, file: !11033, line: 49, column: 9)
!11082 = !DILocation(line: 49, column: 27, scope: !11081)
!11083 = !DILocation(line: 49, column: 24, scope: !11081)
!11084 = !DILocation(line: 49, column: 9, scope: !11069)
!11085 = !DILocation(line: 53, column: 22, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !11081, file: !11033, line: 50, column: 7)
!11087 = !DILocation(line: 53, column: 9, scope: !11086)
!11088 = !DILocation(line: 54, column: 7, scope: !11086)
!11089 = !DILocation(line: 56, column: 1, scope: !11032)
!11090 = distinct !DISubprogram(name: "seen_file", scope: !11033, file: !11033, line: 61, type: !1721, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1686, retainedNodes: !140)
!11091 = !DILocalVariable(name: "ht", arg: 1, scope: !11090, file: !11033, line: 61, type: !1723)
!11092 = !DILocation(line: 61, column: 30, scope: !11090)
!11093 = !DILocalVariable(name: "file", arg: 2, scope: !11090, file: !11033, line: 61, type: !112)
!11094 = !DILocation(line: 61, column: 46, scope: !11090)
!11095 = !DILocalVariable(name: "stats", arg: 3, scope: !11090, file: !11033, line: 62, type: !1691)
!11096 = !DILocation(line: 62, column: 31, scope: !11090)
!11097 = !DILocalVariable(name: "new_ent", scope: !11090, file: !11033, line: 64, type: !1715)
!11098 = !DILocation(line: 64, column: 19, scope: !11090)
!11099 = !DILocation(line: 66, column: 7, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11090, file: !11033, line: 66, column: 7)
!11101 = !DILocation(line: 66, column: 10, scope: !11100)
!11102 = !DILocation(line: 66, column: 7, scope: !11090)
!11103 = !DILocation(line: 67, column: 5, scope: !11100)
!11104 = !DILocation(line: 69, column: 27, scope: !11090)
!11105 = !DILocation(line: 69, column: 11, scope: !11090)
!11106 = !DILocation(line: 69, column: 16, scope: !11090)
!11107 = !DILocation(line: 70, column: 20, scope: !11090)
!11108 = !DILocation(line: 70, column: 27, scope: !11090)
!11109 = !DILocation(line: 70, column: 11, scope: !11090)
!11110 = !DILocation(line: 70, column: 18, scope: !11090)
!11111 = !DILocation(line: 71, column: 20, scope: !11090)
!11112 = !DILocation(line: 71, column: 27, scope: !11090)
!11113 = !DILocation(line: 71, column: 11, scope: !11090)
!11114 = !DILocation(line: 71, column: 18, scope: !11090)
!11115 = !DILocation(line: 73, column: 25, scope: !11090)
!11116 = !DILocation(line: 73, column: 29, scope: !11090)
!11117 = !DILocation(line: 73, column: 12, scope: !11090)
!11118 = !DILocation(line: 73, column: 11, scope: !11090)
!11119 = !DILocation(line: 73, column: 10, scope: !11090)
!11120 = !DILocation(line: 73, column: 3, scope: !11090)
!11121 = !DILocation(line: 74, column: 1, scope: !11090)
!11122 = distinct !DISubprogram(name: "file_type", scope: !11123, file: !11123, line: 29, type: !1728, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1725, retainedNodes: !140)
!11123 = !DIFile(filename: "lib/file-type.c", directory: "/home/mohamad/clone/coreutils")
!11124 = !DILocalVariable(name: "st", arg: 1, scope: !11122, file: !11123, line: 29, type: !1730)
!11125 = !DILocation(line: 29, column: 31, scope: !11122)
!11126 = !DILocation(line: 39, column: 7, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 39, column: 7)
!11128 = !DILocation(line: 39, column: 7, scope: !11122)
!11129 = !DILocation(line: 40, column: 12, scope: !11127)
!11130 = !DILocation(line: 40, column: 16, scope: !11127)
!11131 = !DILocation(line: 40, column: 24, scope: !11127)
!11132 = !DILocation(line: 40, column: 31, scope: !11127)
!11133 = !DILocation(line: 40, column: 57, scope: !11127)
!11134 = !DILocation(line: 40, column: 5, scope: !11127)
!11135 = !DILocation(line: 42, column: 7, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 42, column: 7)
!11137 = !DILocation(line: 42, column: 7, scope: !11122)
!11138 = !DILocation(line: 43, column: 12, scope: !11136)
!11139 = !DILocation(line: 43, column: 5, scope: !11136)
!11140 = !DILocation(line: 45, column: 7, scope: !11141)
!11141 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 45, column: 7)
!11142 = !DILocation(line: 45, column: 7, scope: !11122)
!11143 = !DILocation(line: 46, column: 12, scope: !11141)
!11144 = !DILocation(line: 46, column: 5, scope: !11141)
!11145 = !DILocation(line: 51, column: 7, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 51, column: 7)
!11147 = !DILocation(line: 51, column: 7, scope: !11122)
!11148 = !DILocation(line: 52, column: 12, scope: !11146)
!11149 = !DILocation(line: 52, column: 5, scope: !11146)
!11150 = !DILocation(line: 54, column: 7, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 54, column: 7)
!11152 = !DILocation(line: 54, column: 7, scope: !11122)
!11153 = !DILocation(line: 55, column: 12, scope: !11151)
!11154 = !DILocation(line: 55, column: 5, scope: !11151)
!11155 = !DILocation(line: 57, column: 7, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 57, column: 7)
!11157 = !DILocation(line: 57, column: 7, scope: !11122)
!11158 = !DILocation(line: 58, column: 12, scope: !11156)
!11159 = !DILocation(line: 58, column: 5, scope: !11156)
!11160 = !DILocation(line: 65, column: 7, scope: !11161)
!11161 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 65, column: 7)
!11162 = !DILocation(line: 65, column: 7, scope: !11122)
!11163 = !DILocation(line: 66, column: 12, scope: !11161)
!11164 = !DILocation(line: 66, column: 5, scope: !11161)
!11165 = !DILocation(line: 68, column: 7, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 68, column: 7)
!11167 = !DILocation(line: 68, column: 7, scope: !11122)
!11168 = !DILocation(line: 69, column: 12, scope: !11166)
!11169 = !DILocation(line: 69, column: 5, scope: !11166)
!11170 = !DILocation(line: 74, column: 7, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 74, column: 7)
!11172 = !DILocation(line: 74, column: 7, scope: !11122)
!11173 = !DILocation(line: 75, column: 12, scope: !11171)
!11174 = !DILocation(line: 75, column: 5, scope: !11171)
!11175 = !DILocation(line: 104, column: 7, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11122, file: !11123, line: 104, column: 7)
!11177 = !DILocation(line: 104, column: 7, scope: !11122)
!11178 = !DILocation(line: 105, column: 12, scope: !11176)
!11179 = !DILocation(line: 105, column: 5, scope: !11176)
!11180 = !DILocation(line: 110, column: 10, scope: !11122)
!11181 = !DILocation(line: 110, column: 3, scope: !11122)
!11182 = !DILocation(line: 111, column: 1, scope: !11122)
!11183 = distinct !DISubprogram(name: "strmode", scope: !11184, file: !11184, line: 96, type: !1756, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !140)
!11184 = !DIFile(filename: "lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!11185 = !DILocalVariable(name: "mode", arg: 1, scope: !11183, file: !11184, line: 96, type: !157)
!11186 = !DILocation(line: 96, column: 17, scope: !11183)
!11187 = !DILocalVariable(name: "str", arg: 2, scope: !11183, file: !11184, line: 96, type: !7)
!11188 = !DILocation(line: 96, column: 29, scope: !11183)
!11189 = !DILocation(line: 98, column: 22, scope: !11183)
!11190 = !DILocation(line: 98, column: 12, scope: !11183)
!11191 = !DILocation(line: 98, column: 3, scope: !11183)
!11192 = !DILocation(line: 98, column: 10, scope: !11183)
!11193 = !DILocation(line: 99, column: 12, scope: !11183)
!11194 = !DILocation(line: 99, column: 17, scope: !11183)
!11195 = !DILocation(line: 99, column: 3, scope: !11183)
!11196 = !DILocation(line: 99, column: 10, scope: !11183)
!11197 = !DILocation(line: 100, column: 12, scope: !11183)
!11198 = !DILocation(line: 100, column: 17, scope: !11183)
!11199 = !DILocation(line: 100, column: 3, scope: !11183)
!11200 = !DILocation(line: 100, column: 10, scope: !11183)
!11201 = !DILocation(line: 101, column: 13, scope: !11183)
!11202 = !DILocation(line: 101, column: 18, scope: !11183)
!11203 = !DILocation(line: 102, column: 16, scope: !11183)
!11204 = !DILocation(line: 102, column: 21, scope: !11183)
!11205 = !DILocation(line: 103, column: 16, scope: !11183)
!11206 = !DILocation(line: 103, column: 21, scope: !11183)
!11207 = !DILocation(line: 101, column: 12, scope: !11183)
!11208 = !DILocation(line: 101, column: 3, scope: !11183)
!11209 = !DILocation(line: 101, column: 10, scope: !11183)
!11210 = !DILocation(line: 104, column: 12, scope: !11183)
!11211 = !DILocation(line: 104, column: 17, scope: !11183)
!11212 = !DILocation(line: 104, column: 3, scope: !11183)
!11213 = !DILocation(line: 104, column: 10, scope: !11183)
!11214 = !DILocation(line: 105, column: 12, scope: !11183)
!11215 = !DILocation(line: 105, column: 17, scope: !11183)
!11216 = !DILocation(line: 105, column: 3, scope: !11183)
!11217 = !DILocation(line: 105, column: 10, scope: !11183)
!11218 = !DILocation(line: 106, column: 13, scope: !11183)
!11219 = !DILocation(line: 106, column: 18, scope: !11183)
!11220 = !DILocation(line: 107, column: 16, scope: !11183)
!11221 = !DILocation(line: 107, column: 21, scope: !11183)
!11222 = !DILocation(line: 108, column: 16, scope: !11183)
!11223 = !DILocation(line: 108, column: 21, scope: !11183)
!11224 = !DILocation(line: 106, column: 12, scope: !11183)
!11225 = !DILocation(line: 106, column: 3, scope: !11183)
!11226 = !DILocation(line: 106, column: 10, scope: !11183)
!11227 = !DILocation(line: 109, column: 12, scope: !11183)
!11228 = !DILocation(line: 109, column: 17, scope: !11183)
!11229 = !DILocation(line: 109, column: 3, scope: !11183)
!11230 = !DILocation(line: 109, column: 10, scope: !11183)
!11231 = !DILocation(line: 110, column: 12, scope: !11183)
!11232 = !DILocation(line: 110, column: 17, scope: !11183)
!11233 = !DILocation(line: 110, column: 3, scope: !11183)
!11234 = !DILocation(line: 110, column: 10, scope: !11183)
!11235 = !DILocation(line: 111, column: 13, scope: !11183)
!11236 = !DILocation(line: 111, column: 18, scope: !11183)
!11237 = !DILocation(line: 112, column: 16, scope: !11183)
!11238 = !DILocation(line: 112, column: 21, scope: !11183)
!11239 = !DILocation(line: 113, column: 16, scope: !11183)
!11240 = !DILocation(line: 113, column: 21, scope: !11183)
!11241 = !DILocation(line: 111, column: 12, scope: !11183)
!11242 = !DILocation(line: 111, column: 3, scope: !11183)
!11243 = !DILocation(line: 111, column: 10, scope: !11183)
!11244 = !DILocation(line: 114, column: 3, scope: !11183)
!11245 = !DILocation(line: 114, column: 11, scope: !11183)
!11246 = !DILocation(line: 115, column: 3, scope: !11183)
!11247 = !DILocation(line: 115, column: 11, scope: !11183)
!11248 = !DILocation(line: 116, column: 1, scope: !11183)
!11249 = distinct !DISubprogram(name: "ftypelet", scope: !11184, file: !11184, line: 54, type: !1783, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1753, retainedNodes: !140)
!11250 = !DILocalVariable(name: "bits", arg: 1, scope: !11249, file: !11184, line: 54, type: !157)
!11251 = !DILocation(line: 54, column: 18, scope: !11249)
!11252 = !DILocation(line: 57, column: 7, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11249, file: !11184, line: 57, column: 7)
!11254 = !DILocation(line: 57, column: 7, scope: !11249)
!11255 = !DILocation(line: 58, column: 5, scope: !11253)
!11256 = !DILocation(line: 59, column: 7, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11249, file: !11184, line: 59, column: 7)
!11258 = !DILocation(line: 59, column: 7, scope: !11249)
!11259 = !DILocation(line: 60, column: 5, scope: !11257)
!11260 = !DILocation(line: 63, column: 7, scope: !11261)
!11261 = distinct !DILexicalBlock(scope: !11249, file: !11184, line: 63, column: 7)
!11262 = !DILocation(line: 63, column: 7, scope: !11249)
!11263 = !DILocation(line: 64, column: 5, scope: !11261)
!11264 = !DILocation(line: 65, column: 7, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11249, file: !11184, line: 65, column: 7)
!11266 = !DILocation(line: 65, column: 7, scope: !11249)
!11267 = !DILocation(line: 66, column: 5, scope: !11265)
!11268 = !DILocation(line: 67, column: 7, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11249, file: !11184, line: 67, column: 7)
!11270 = !DILocation(line: 67, column: 7, scope: !11249)
!11271 = !DILocation(line: 68, column: 5, scope: !11269)
!11272 = !DILocation(line: 69, column: 7, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11249, file: !11184, line: 69, column: 7)
!11274 = !DILocation(line: 69, column: 7, scope: !11249)
!11275 = !DILocation(line: 70, column: 5, scope: !11273)
!11276 = !DILocation(line: 73, column: 7, scope: !11277)
!11277 = distinct !DILexicalBlock(scope: !11249, file: !11184, line: 73, column: 7)
!11278 = !DILocation(line: 73, column: 7, scope: !11249)
!11279 = !DILocation(line: 74, column: 5, scope: !11277)
!11280 = !DILocation(line: 90, column: 3, scope: !11249)
!11281 = !DILocation(line: 91, column: 1, scope: !11249)
!11282 = distinct !DISubprogram(name: "filemodestring", scope: !11184, file: !11184, line: 166, type: !1758, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1753, retainedNodes: !140)
!11283 = !DILocalVariable(name: "statp", arg: 1, scope: !11282, file: !11184, line: 166, type: !1760)
!11284 = !DILocation(line: 166, column: 36, scope: !11282)
!11285 = !DILocalVariable(name: "str", arg: 2, scope: !11282, file: !11184, line: 166, type: !7)
!11286 = !DILocation(line: 166, column: 49, scope: !11282)
!11287 = !DILocation(line: 168, column: 12, scope: !11282)
!11288 = !DILocation(line: 168, column: 19, scope: !11282)
!11289 = !DILocation(line: 168, column: 28, scope: !11282)
!11290 = !DILocation(line: 168, column: 3, scope: !11282)
!11291 = !DILocation(line: 170, column: 7, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11282, file: !11184, line: 170, column: 7)
!11293 = !DILocation(line: 170, column: 7, scope: !11282)
!11294 = !DILocation(line: 171, column: 5, scope: !11292)
!11295 = !DILocation(line: 171, column: 12, scope: !11292)
!11296 = !DILocation(line: 174, column: 12, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11298, file: !11184, line: 174, column: 12)
!11298 = distinct !DILexicalBlock(scope: !11292, file: !11184, line: 172, column: 12)
!11299 = !DILocation(line: 174, column: 12, scope: !11298)
!11300 = !DILocation(line: 175, column: 5, scope: !11297)
!11301 = !DILocation(line: 175, column: 12, scope: !11297)
!11302 = !DILocation(line: 176, column: 12, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11297, file: !11184, line: 176, column: 12)
!11304 = !DILocation(line: 176, column: 12, scope: !11297)
!11305 = !DILocation(line: 177, column: 5, scope: !11303)
!11306 = !DILocation(line: 177, column: 12, scope: !11303)
!11307 = !DILocation(line: 180, column: 1, scope: !11282)
!11308 = distinct !DISubprogram(name: "file_name_concat", scope: !11309, file: !11309, line: 35, type: !1788, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1785, retainedNodes: !140)
!11309 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!11310 = !DILocalVariable(name: "dir", arg: 1, scope: !11308, file: !11309, line: 35, type: !112)
!11311 = !DILocation(line: 35, column: 31, scope: !11308)
!11312 = !DILocalVariable(name: "base", arg: 2, scope: !11308, file: !11309, line: 35, type: !112)
!11313 = !DILocation(line: 35, column: 48, scope: !11308)
!11314 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11308, file: !11309, line: 35, type: !116)
!11315 = !DILocation(line: 35, column: 61, scope: !11308)
!11316 = !DILocalVariable(name: "p", scope: !11308, file: !11309, line: 37, type: !7)
!11317 = !DILocation(line: 37, column: 9, scope: !11308)
!11318 = !DILocation(line: 37, column: 32, scope: !11308)
!11319 = !DILocation(line: 37, column: 37, scope: !11308)
!11320 = !DILocation(line: 37, column: 43, scope: !11308)
!11321 = !DILocation(line: 37, column: 13, scope: !11308)
!11322 = !DILocation(line: 38, column: 7, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11308, file: !11309, line: 38, column: 7)
!11324 = !DILocation(line: 38, column: 9, scope: !11323)
!11325 = !DILocation(line: 38, column: 7, scope: !11308)
!11326 = !DILocation(line: 39, column: 5, scope: !11323)
!11327 = !DILocation(line: 40, column: 10, scope: !11308)
!11328 = !DILocation(line: 40, column: 3, scope: !11308)
!11329 = distinct !DISubprogram(name: "mfile_name_concat", scope: !11330, file: !11330, line: 47, type: !1788, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1790, retainedNodes: !140)
!11330 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!11331 = !DILocalVariable(name: "dir", arg: 1, scope: !11329, file: !11330, line: 47, type: !112)
!11332 = !DILocation(line: 47, column: 32, scope: !11329)
!11333 = !DILocalVariable(name: "base", arg: 2, scope: !11329, file: !11330, line: 47, type: !112)
!11334 = !DILocation(line: 47, column: 49, scope: !11329)
!11335 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !11329, file: !11330, line: 47, type: !116)
!11336 = !DILocation(line: 47, column: 62, scope: !11329)
!11337 = !DILocalVariable(name: "dirbase", scope: !11329, file: !11330, line: 49, type: !112)
!11338 = !DILocation(line: 49, column: 15, scope: !11329)
!11339 = !DILocation(line: 49, column: 41, scope: !11329)
!11340 = !DILocation(line: 49, column: 25, scope: !11329)
!11341 = !DILocalVariable(name: "dirbaselen", scope: !11329, file: !11330, line: 50, type: !52)
!11342 = !DILocation(line: 50, column: 10, scope: !11329)
!11343 = !DILocation(line: 50, column: 33, scope: !11329)
!11344 = !DILocation(line: 50, column: 23, scope: !11329)
!11345 = !DILocalVariable(name: "dirlen", scope: !11329, file: !11330, line: 51, type: !52)
!11346 = !DILocation(line: 51, column: 10, scope: !11329)
!11347 = !DILocation(line: 51, column: 19, scope: !11329)
!11348 = !DILocation(line: 51, column: 29, scope: !11329)
!11349 = !DILocation(line: 51, column: 27, scope: !11329)
!11350 = !DILocation(line: 51, column: 35, scope: !11329)
!11351 = !DILocation(line: 51, column: 33, scope: !11329)
!11352 = !DILocalVariable(name: "baselen", scope: !11329, file: !11330, line: 52, type: !52)
!11353 = !DILocation(line: 52, column: 10, scope: !11329)
!11354 = !DILocation(line: 52, column: 28, scope: !11329)
!11355 = !DILocation(line: 52, column: 20, scope: !11329)
!11356 = !DILocalVariable(name: "sep", scope: !11329, file: !11330, line: 53, type: !8)
!11357 = !DILocation(line: 53, column: 8, scope: !11329)
!11358 = !DILocation(line: 54, column: 7, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11329, file: !11330, line: 54, column: 7)
!11360 = !DILocation(line: 54, column: 7, scope: !11329)
!11361 = !DILocation(line: 57, column: 13, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11363, file: !11330, line: 57, column: 11)
!11363 = distinct !DILexicalBlock(scope: !11359, file: !11330, line: 55, column: 5)
!11364 = !DILocation(line: 57, column: 39, scope: !11362)
!11365 = !DILocation(line: 57, column: 44, scope: !11362)
!11366 = !DILocation(line: 57, column: 11, scope: !11363)
!11367 = !DILocation(line: 58, column: 13, scope: !11362)
!11368 = !DILocation(line: 58, column: 9, scope: !11362)
!11369 = !DILocation(line: 59, column: 5, scope: !11363)
!11370 = !DILocation(line: 60, column: 12, scope: !11371)
!11371 = distinct !DILexicalBlock(scope: !11359, file: !11330, line: 60, column: 12)
!11372 = !DILocation(line: 60, column: 12, scope: !11359)
!11373 = !DILocation(line: 67, column: 11, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11371, file: !11330, line: 61, column: 5)
!11375 = !DILocation(line: 68, column: 5, scope: !11374)
!11376 = !DILocalVariable(name: "p_concat", scope: !11329, file: !11330, line: 70, type: !7)
!11377 = !DILocation(line: 70, column: 9, scope: !11329)
!11378 = !DILocation(line: 70, column: 28, scope: !11329)
!11379 = !DILocation(line: 70, column: 38, scope: !11329)
!11380 = !DILocation(line: 70, column: 42, scope: !11329)
!11381 = !DILocation(line: 70, column: 37, scope: !11329)
!11382 = !DILocation(line: 70, column: 35, scope: !11329)
!11383 = !DILocation(line: 70, column: 54, scope: !11329)
!11384 = !DILocation(line: 70, column: 52, scope: !11329)
!11385 = !DILocation(line: 70, column: 62, scope: !11329)
!11386 = !DILocation(line: 70, column: 20, scope: !11329)
!11387 = !DILocalVariable(name: "p", scope: !11329, file: !11330, line: 71, type: !7)
!11388 = !DILocation(line: 71, column: 9, scope: !11329)
!11389 = !DILocation(line: 73, column: 7, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11329, file: !11330, line: 73, column: 7)
!11391 = !DILocation(line: 73, column: 16, scope: !11390)
!11392 = !DILocation(line: 73, column: 7, scope: !11329)
!11393 = !DILocation(line: 74, column: 5, scope: !11390)
!11394 = !DILocation(line: 76, column: 16, scope: !11329)
!11395 = !DILocation(line: 76, column: 26, scope: !11329)
!11396 = !DILocation(line: 76, column: 31, scope: !11329)
!11397 = !DILocation(line: 76, column: 7, scope: !11329)
!11398 = !DILocation(line: 76, column: 5, scope: !11329)
!11399 = !DILocation(line: 77, column: 8, scope: !11329)
!11400 = !DILocation(line: 77, column: 4, scope: !11329)
!11401 = !DILocation(line: 77, column: 6, scope: !11329)
!11402 = !DILocation(line: 78, column: 8, scope: !11329)
!11403 = !DILocation(line: 78, column: 12, scope: !11329)
!11404 = !DILocation(line: 78, column: 5, scope: !11329)
!11405 = !DILocation(line: 80, column: 7, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11329, file: !11330, line: 80, column: 7)
!11407 = !DILocation(line: 80, column: 7, scope: !11329)
!11408 = !DILocation(line: 81, column: 23, scope: !11406)
!11409 = !DILocation(line: 81, column: 6, scope: !11406)
!11410 = !DILocation(line: 81, column: 21, scope: !11406)
!11411 = !DILocation(line: 81, column: 5, scope: !11406)
!11412 = !DILocation(line: 83, column: 16, scope: !11329)
!11413 = !DILocation(line: 83, column: 19, scope: !11329)
!11414 = !DILocation(line: 83, column: 25, scope: !11329)
!11415 = !DILocation(line: 83, column: 7, scope: !11329)
!11416 = !DILocation(line: 83, column: 5, scope: !11329)
!11417 = !DILocation(line: 84, column: 4, scope: !11329)
!11418 = !DILocation(line: 84, column: 6, scope: !11329)
!11419 = !DILocation(line: 86, column: 10, scope: !11329)
!11420 = !DILocation(line: 86, column: 3, scope: !11329)
!11421 = !DILocation(line: 87, column: 1, scope: !11329)
!11422 = distinct !DISubprogram(name: "full_write", scope: !11423, file: !11423, line: 58, type: !1796, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1793, retainedNodes: !140)
!11423 = !DIFile(filename: "lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!11424 = !DILocalVariable(name: "fd", arg: 1, scope: !11422, file: !11423, line: 58, type: !5)
!11425 = !DILocation(line: 58, column: 14, scope: !11422)
!11426 = !DILocalVariable(name: "buf", arg: 2, scope: !11422, file: !11423, line: 58, type: !428)
!11427 = !DILocation(line: 58, column: 30, scope: !11422)
!11428 = !DILocalVariable(name: "count", arg: 3, scope: !11422, file: !11423, line: 58, type: !52)
!11429 = !DILocation(line: 58, column: 42, scope: !11422)
!11430 = !DILocalVariable(name: "total", scope: !11422, file: !11423, line: 60, type: !52)
!11431 = !DILocation(line: 60, column: 10, scope: !11422)
!11432 = !DILocalVariable(name: "ptr", scope: !11422, file: !11423, line: 61, type: !112)
!11433 = !DILocation(line: 61, column: 15, scope: !11422)
!11434 = !DILocation(line: 61, column: 36, scope: !11422)
!11435 = !DILocation(line: 63, column: 3, scope: !11422)
!11436 = !DILocation(line: 63, column: 10, scope: !11422)
!11437 = !DILocation(line: 63, column: 16, scope: !11422)
!11438 = !DILocalVariable(name: "n_rw", scope: !11439, file: !11423, line: 65, type: !52)
!11439 = distinct !DILexicalBlock(scope: !11422, file: !11423, line: 64, column: 5)
!11440 = !DILocation(line: 65, column: 14, scope: !11439)
!11441 = !DILocation(line: 65, column: 30, scope: !11439)
!11442 = !DILocation(line: 65, column: 34, scope: !11439)
!11443 = !DILocation(line: 65, column: 39, scope: !11439)
!11444 = !DILocation(line: 65, column: 21, scope: !11439)
!11445 = !DILocation(line: 66, column: 11, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11439, file: !11423, line: 66, column: 11)
!11447 = !DILocation(line: 66, column: 16, scope: !11446)
!11448 = !DILocation(line: 66, column: 11, scope: !11439)
!11449 = !DILocation(line: 67, column: 9, scope: !11446)
!11450 = !DILocation(line: 68, column: 11, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11439, file: !11423, line: 68, column: 11)
!11452 = !DILocation(line: 68, column: 16, scope: !11451)
!11453 = !DILocation(line: 68, column: 11, scope: !11439)
!11454 = !DILocation(line: 70, column: 11, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11451, file: !11423, line: 69, column: 9)
!11456 = !DILocation(line: 70, column: 17, scope: !11455)
!11457 = !DILocation(line: 71, column: 11, scope: !11455)
!11458 = !DILocation(line: 73, column: 16, scope: !11439)
!11459 = !DILocation(line: 73, column: 13, scope: !11439)
!11460 = !DILocation(line: 74, column: 14, scope: !11439)
!11461 = !DILocation(line: 74, column: 11, scope: !11439)
!11462 = !DILocation(line: 75, column: 16, scope: !11439)
!11463 = !DILocation(line: 75, column: 13, scope: !11439)
!11464 = distinct !{!11464, !11435, !11465}
!11465 = !DILocation(line: 76, column: 5, scope: !11422)
!11466 = !DILocation(line: 78, column: 10, scope: !11422)
!11467 = !DILocation(line: 78, column: 3, scope: !11422)
!11468 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !737, file: !737, line: 150, type: !731, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11469 = !DILocalVariable(name: "table", arg: 1, scope: !11468, file: !737, line: 150, type: !733)
!11470 = !DILocation(line: 150, column: 39, scope: !11468)
!11471 = !DILocation(line: 152, column: 10, scope: !11468)
!11472 = !DILocation(line: 152, column: 17, scope: !11468)
!11473 = !{!11474, !3178, i64 16}
!11474 = !{!"hash_table", !2994, i64 0, !2994, i64 8, !3178, i64 16, !3178, i64 24, !3178, i64 32, !2994, i64 40, !2994, i64 48, !2994, i64 56, !2994, i64 64, !2994, i64 72}
!11475 = !DILocation(line: 152, column: 3, scope: !11468)
!11476 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !737, file: !737, line: 158, type: !731, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11477 = !DILocalVariable(name: "table", arg: 1, scope: !11476, file: !737, line: 158, type: !733)
!11478 = !DILocation(line: 158, column: 44, scope: !11476)
!11479 = !DILocation(line: 160, column: 10, scope: !11476)
!11480 = !DILocation(line: 160, column: 17, scope: !11476)
!11481 = !{!11474, !3178, i64 24}
!11482 = !DILocation(line: 160, column: 3, scope: !11476)
!11483 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !737, file: !737, line: 166, type: !731, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11484 = !DILocalVariable(name: "table", arg: 1, scope: !11483, file: !737, line: 166, type: !733)
!11485 = !DILocation(line: 166, column: 39, scope: !11483)
!11486 = !DILocation(line: 168, column: 10, scope: !11483)
!11487 = !DILocation(line: 168, column: 17, scope: !11483)
!11488 = !{!11474, !3178, i64 32}
!11489 = !DILocation(line: 168, column: 3, scope: !11483)
!11490 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !737, file: !737, line: 174, type: !731, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11491 = !DILocalVariable(name: "table", arg: 1, scope: !11490, file: !737, line: 174, type: !733)
!11492 = !DILocation(line: 174, column: 47, scope: !11490)
!11493 = !DILocalVariable(name: "bucket", scope: !11490, file: !737, line: 176, type: !746)
!11494 = !DILocation(line: 176, column: 28, scope: !11490)
!11495 = !DILocalVariable(name: "max_bucket_length", scope: !11490, file: !737, line: 177, type: !52)
!11496 = !DILocation(line: 177, column: 10, scope: !11490)
!11497 = !DILocation(line: 179, column: 17, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11490, file: !737, line: 179, column: 3)
!11499 = !DILocation(line: 179, column: 24, scope: !11498)
!11500 = !{!11474, !2994, i64 0}
!11501 = !DILocation(line: 179, column: 15, scope: !11498)
!11502 = !DILocation(line: 179, column: 8, scope: !11498)
!11503 = !DILocation(line: 179, column: 32, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11498, file: !737, line: 179, column: 3)
!11505 = !DILocation(line: 179, column: 41, scope: !11504)
!11506 = !DILocation(line: 179, column: 48, scope: !11504)
!11507 = !{!11474, !2994, i64 8}
!11508 = !DILocation(line: 179, column: 39, scope: !11504)
!11509 = !DILocation(line: 179, column: 3, scope: !11498)
!11510 = !DILocation(line: 181, column: 11, scope: !11511)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !737, line: 181, column: 11)
!11512 = distinct !DILexicalBlock(scope: !11504, file: !737, line: 180, column: 5)
!11513 = !DILocation(line: 181, column: 19, scope: !11511)
!11514 = !{!11515, !2994, i64 0}
!11515 = !{!"hash_entry", !2994, i64 0, !2994, i64 8}
!11516 = !DILocation(line: 181, column: 11, scope: !11512)
!11517 = !DILocalVariable(name: "cursor", scope: !11518, file: !737, line: 183, type: !746)
!11518 = distinct !DILexicalBlock(scope: !11511, file: !737, line: 182, column: 9)
!11519 = !DILocation(line: 183, column: 36, scope: !11518)
!11520 = !DILocation(line: 183, column: 45, scope: !11518)
!11521 = !DILocalVariable(name: "bucket_length", scope: !11518, file: !737, line: 184, type: !52)
!11522 = !DILocation(line: 184, column: 18, scope: !11518)
!11523 = !DILocation(line: 186, column: 11, scope: !11518)
!11524 = !DILocation(line: 186, column: 27, scope: !11518)
!11525 = !DILocation(line: 186, column: 35, scope: !11518)
!11526 = !{!11515, !2994, i64 8}
!11527 = !DILocation(line: 186, column: 25, scope: !11518)
!11528 = !DILocation(line: 186, column: 41, scope: !11518)
!11529 = !DILocation(line: 187, column: 26, scope: !11518)
!11530 = distinct !{!11530, !11523, !11529}
!11531 = !DILocation(line: 189, column: 15, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11518, file: !737, line: 189, column: 15)
!11533 = !DILocation(line: 189, column: 31, scope: !11532)
!11534 = !DILocation(line: 189, column: 29, scope: !11532)
!11535 = !DILocation(line: 189, column: 15, scope: !11518)
!11536 = !DILocation(line: 190, column: 33, scope: !11532)
!11537 = !DILocation(line: 190, column: 31, scope: !11532)
!11538 = !DILocation(line: 190, column: 13, scope: !11532)
!11539 = !DILocation(line: 191, column: 9, scope: !11518)
!11540 = !DILocation(line: 192, column: 5, scope: !11512)
!11541 = !DILocation(line: 179, column: 68, scope: !11504)
!11542 = !DILocation(line: 179, column: 3, scope: !11504)
!11543 = distinct !{!11543, !11509, !11544}
!11544 = !DILocation(line: 192, column: 5, scope: !11498)
!11545 = !DILocation(line: 194, column: 10, scope: !11490)
!11546 = !DILocation(line: 194, column: 3, scope: !11490)
!11547 = distinct !DISubprogram(name: "hash_table_ok", scope: !737, file: !737, line: 201, type: !773, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11548 = !DILocalVariable(name: "table", arg: 1, scope: !11547, file: !737, line: 201, type: !733)
!11549 = !DILocation(line: 201, column: 34, scope: !11547)
!11550 = !DILocalVariable(name: "bucket", scope: !11547, file: !737, line: 203, type: !746)
!11551 = !DILocation(line: 203, column: 28, scope: !11547)
!11552 = !DILocalVariable(name: "n_buckets_used", scope: !11547, file: !737, line: 204, type: !52)
!11553 = !DILocation(line: 204, column: 10, scope: !11547)
!11554 = !DILocalVariable(name: "n_entries", scope: !11547, file: !737, line: 205, type: !52)
!11555 = !DILocation(line: 205, column: 10, scope: !11547)
!11556 = !DILocation(line: 207, column: 17, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11547, file: !737, line: 207, column: 3)
!11558 = !DILocation(line: 207, column: 24, scope: !11557)
!11559 = !DILocation(line: 207, column: 15, scope: !11557)
!11560 = !DILocation(line: 207, column: 8, scope: !11557)
!11561 = !DILocation(line: 207, column: 32, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11557, file: !737, line: 207, column: 3)
!11563 = !DILocation(line: 207, column: 41, scope: !11562)
!11564 = !DILocation(line: 207, column: 48, scope: !11562)
!11565 = !DILocation(line: 207, column: 39, scope: !11562)
!11566 = !DILocation(line: 207, column: 3, scope: !11557)
!11567 = !DILocation(line: 209, column: 11, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11569, file: !737, line: 209, column: 11)
!11569 = distinct !DILexicalBlock(scope: !11562, file: !737, line: 208, column: 5)
!11570 = !DILocation(line: 209, column: 19, scope: !11568)
!11571 = !DILocation(line: 209, column: 11, scope: !11569)
!11572 = !DILocalVariable(name: "cursor", scope: !11573, file: !737, line: 211, type: !746)
!11573 = distinct !DILexicalBlock(scope: !11568, file: !737, line: 210, column: 9)
!11574 = !DILocation(line: 211, column: 36, scope: !11573)
!11575 = !DILocation(line: 211, column: 45, scope: !11573)
!11576 = !DILocation(line: 214, column: 25, scope: !11573)
!11577 = !DILocation(line: 215, column: 20, scope: !11573)
!11578 = !DILocation(line: 218, column: 11, scope: !11573)
!11579 = !DILocation(line: 218, column: 27, scope: !11573)
!11580 = !DILocation(line: 218, column: 35, scope: !11573)
!11581 = !DILocation(line: 218, column: 25, scope: !11573)
!11582 = !DILocation(line: 218, column: 41, scope: !11573)
!11583 = !DILocation(line: 219, column: 22, scope: !11573)
!11584 = distinct !{!11584, !11578, !11583}
!11585 = !DILocation(line: 220, column: 9, scope: !11573)
!11586 = !DILocation(line: 221, column: 5, scope: !11569)
!11587 = !DILocation(line: 207, column: 68, scope: !11562)
!11588 = !DILocation(line: 207, column: 3, scope: !11562)
!11589 = distinct !{!11589, !11566, !11590}
!11590 = !DILocation(line: 221, column: 5, scope: !11557)
!11591 = !DILocation(line: 223, column: 7, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11547, file: !737, line: 223, column: 7)
!11593 = !DILocation(line: 223, column: 25, scope: !11592)
!11594 = !DILocation(line: 223, column: 32, scope: !11592)
!11595 = !DILocation(line: 223, column: 22, scope: !11592)
!11596 = !DILocation(line: 223, column: 47, scope: !11592)
!11597 = !DILocation(line: 223, column: 50, scope: !11592)
!11598 = !DILocation(line: 223, column: 63, scope: !11592)
!11599 = !DILocation(line: 223, column: 70, scope: !11592)
!11600 = !DILocation(line: 223, column: 60, scope: !11592)
!11601 = !DILocation(line: 223, column: 7, scope: !11547)
!11602 = !DILocation(line: 224, column: 5, scope: !11592)
!11603 = !DILocation(line: 226, column: 3, scope: !11547)
!11604 = !DILocation(line: 227, column: 1, scope: !11547)
!11605 = distinct !DISubprogram(name: "hash_print_statistics", scope: !737, file: !737, line: 230, type: !775, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11606 = !DILocalVariable(name: "table", arg: 1, scope: !11605, file: !737, line: 230, type: !733)
!11607 = !DILocation(line: 230, column: 42, scope: !11605)
!11608 = !DILocalVariable(name: "stream", arg: 2, scope: !11605, file: !737, line: 230, type: !777)
!11609 = !DILocation(line: 230, column: 55, scope: !11605)
!11610 = !DILocalVariable(name: "n_entries", scope: !11605, file: !737, line: 232, type: !52)
!11611 = !DILocation(line: 232, column: 10, scope: !11605)
!11612 = !DILocation(line: 232, column: 42, scope: !11605)
!11613 = !DILocation(line: 232, column: 22, scope: !11605)
!11614 = !DILocalVariable(name: "n_buckets", scope: !11605, file: !737, line: 233, type: !52)
!11615 = !DILocation(line: 233, column: 10, scope: !11605)
!11616 = !DILocation(line: 233, column: 42, scope: !11605)
!11617 = !DILocation(line: 233, column: 22, scope: !11605)
!11618 = !DILocalVariable(name: "n_buckets_used", scope: !11605, file: !737, line: 234, type: !52)
!11619 = !DILocation(line: 234, column: 10, scope: !11605)
!11620 = !DILocation(line: 234, column: 52, scope: !11605)
!11621 = !DILocation(line: 234, column: 27, scope: !11605)
!11622 = !DILocalVariable(name: "max_bucket_length", scope: !11605, file: !737, line: 235, type: !52)
!11623 = !DILocation(line: 235, column: 10, scope: !11605)
!11624 = !DILocation(line: 235, column: 58, scope: !11605)
!11625 = !DILocation(line: 235, column: 30, scope: !11605)
!11626 = !DILocation(line: 237, column: 12, scope: !11605)
!11627 = !DILocation(line: 237, column: 68, scope: !11605)
!11628 = !DILocation(line: 237, column: 3, scope: !11605)
!11629 = !DILocation(line: 238, column: 12, scope: !11605)
!11630 = !DILocation(line: 238, column: 68, scope: !11605)
!11631 = !DILocation(line: 238, column: 3, scope: !11605)
!11632 = !DILocation(line: 239, column: 12, scope: !11605)
!11633 = !DILocation(line: 240, column: 32, scope: !11605)
!11634 = !DILocation(line: 241, column: 21, scope: !11605)
!11635 = !DILocation(line: 241, column: 19, scope: !11605)
!11636 = !DILocation(line: 241, column: 39, scope: !11605)
!11637 = !DILocation(line: 241, column: 37, scope: !11605)
!11638 = !DILocation(line: 239, column: 3, scope: !11605)
!11639 = !DILocation(line: 242, column: 12, scope: !11605)
!11640 = !DILocation(line: 243, column: 32, scope: !11605)
!11641 = !DILocation(line: 242, column: 3, scope: !11605)
!11642 = !DILocation(line: 244, column: 1, scope: !11605)
!11643 = distinct !DISubprogram(name: "hash_lookup", scope: !737, file: !737, line: 261, type: !817, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11644 = !DILocalVariable(name: "table", arg: 1, scope: !11643, file: !737, line: 261, type: !733)
!11645 = !DILocation(line: 261, column: 32, scope: !11643)
!11646 = !DILocalVariable(name: "entry", arg: 2, scope: !11643, file: !737, line: 261, type: !428)
!11647 = !DILocation(line: 261, column: 51, scope: !11643)
!11648 = !DILocalVariable(name: "bucket", scope: !11643, file: !737, line: 263, type: !746)
!11649 = !DILocation(line: 263, column: 28, scope: !11643)
!11650 = !DILocation(line: 263, column: 50, scope: !11643)
!11651 = !DILocation(line: 263, column: 57, scope: !11643)
!11652 = !DILocation(line: 263, column: 37, scope: !11643)
!11653 = !DILocalVariable(name: "cursor", scope: !11643, file: !737, line: 264, type: !746)
!11654 = !DILocation(line: 264, column: 28, scope: !11643)
!11655 = !DILocation(line: 266, column: 7, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11643, file: !737, line: 266, column: 7)
!11657 = !DILocation(line: 266, column: 15, scope: !11656)
!11658 = !DILocation(line: 266, column: 20, scope: !11656)
!11659 = !DILocation(line: 266, column: 7, scope: !11643)
!11660 = !DILocation(line: 267, column: 5, scope: !11656)
!11661 = !DILocation(line: 269, column: 17, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11643, file: !737, line: 269, column: 3)
!11663 = !DILocation(line: 269, column: 15, scope: !11662)
!11664 = !DILocation(line: 269, column: 8, scope: !11662)
!11665 = !DILocation(line: 269, column: 25, scope: !11666)
!11666 = distinct !DILexicalBlock(scope: !11662, file: !737, line: 269, column: 3)
!11667 = !DILocation(line: 269, column: 3, scope: !11662)
!11668 = !DILocation(line: 270, column: 9, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11666, file: !737, line: 270, column: 9)
!11670 = !DILocation(line: 270, column: 18, scope: !11669)
!11671 = !DILocation(line: 270, column: 26, scope: !11669)
!11672 = !DILocation(line: 270, column: 15, scope: !11669)
!11673 = !DILocation(line: 270, column: 31, scope: !11669)
!11674 = !DILocation(line: 270, column: 34, scope: !11669)
!11675 = !DILocation(line: 270, column: 41, scope: !11669)
!11676 = !{!11474, !2994, i64 56}
!11677 = !DILocation(line: 270, column: 53, scope: !11669)
!11678 = !DILocation(line: 270, column: 60, scope: !11669)
!11679 = !DILocation(line: 270, column: 68, scope: !11669)
!11680 = !DILocation(line: 270, column: 9, scope: !11666)
!11681 = !DILocation(line: 271, column: 14, scope: !11669)
!11682 = !DILocation(line: 271, column: 22, scope: !11669)
!11683 = !DILocation(line: 271, column: 7, scope: !11669)
!11684 = !DILocation(line: 270, column: 72, scope: !11669)
!11685 = !DILocation(line: 269, column: 42, scope: !11666)
!11686 = !DILocation(line: 269, column: 50, scope: !11666)
!11687 = !DILocation(line: 269, column: 40, scope: !11666)
!11688 = !DILocation(line: 269, column: 3, scope: !11666)
!11689 = distinct !{!11689, !11667, !11690}
!11690 = !DILocation(line: 271, column: 22, scope: !11662)
!11691 = !DILocation(line: 273, column: 3, scope: !11643)
!11692 = !DILocation(line: 274, column: 1, scope: !11643)
!11693 = distinct !DISubprogram(name: "safe_hasher", scope: !737, file: !737, line: 249, type: !847, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11694 = !DILocalVariable(name: "table", arg: 1, scope: !11693, file: !737, line: 249, type: !733)
!11695 = !DILocation(line: 249, column: 32, scope: !11693)
!11696 = !DILocalVariable(name: "key", arg: 2, scope: !11693, file: !737, line: 249, type: !428)
!11697 = !DILocation(line: 249, column: 51, scope: !11693)
!11698 = !DILocalVariable(name: "n", scope: !11693, file: !737, line: 251, type: !52)
!11699 = !DILocation(line: 251, column: 10, scope: !11693)
!11700 = !DILocation(line: 251, column: 14, scope: !11693)
!11701 = !DILocation(line: 251, column: 21, scope: !11693)
!11702 = !{!11474, !2994, i64 48}
!11703 = !DILocation(line: 251, column: 29, scope: !11693)
!11704 = !DILocation(line: 251, column: 34, scope: !11693)
!11705 = !DILocation(line: 251, column: 41, scope: !11693)
!11706 = !DILocation(line: 252, column: 10, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11693, file: !737, line: 252, column: 7)
!11708 = !DILocation(line: 252, column: 14, scope: !11707)
!11709 = !DILocation(line: 252, column: 21, scope: !11707)
!11710 = !DILocation(line: 252, column: 12, scope: !11707)
!11711 = !DILocation(line: 252, column: 7, scope: !11693)
!11712 = !DILocation(line: 253, column: 5, scope: !11707)
!11713 = !DILocation(line: 254, column: 10, scope: !11693)
!11714 = !DILocation(line: 254, column: 17, scope: !11693)
!11715 = !DILocation(line: 254, column: 26, scope: !11693)
!11716 = !DILocation(line: 254, column: 24, scope: !11693)
!11717 = !DILocation(line: 254, column: 3, scope: !11693)
!11718 = distinct !DISubprogram(name: "hash_get_first", scope: !737, file: !737, line: 288, type: !819, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11719 = !DILocalVariable(name: "table", arg: 1, scope: !11718, file: !737, line: 288, type: !733)
!11720 = !DILocation(line: 288, column: 35, scope: !11718)
!11721 = !DILocalVariable(name: "bucket", scope: !11718, file: !737, line: 290, type: !746)
!11722 = !DILocation(line: 290, column: 28, scope: !11718)
!11723 = !DILocation(line: 292, column: 7, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11718, file: !737, line: 292, column: 7)
!11725 = !DILocation(line: 292, column: 14, scope: !11724)
!11726 = !DILocation(line: 292, column: 24, scope: !11724)
!11727 = !DILocation(line: 292, column: 7, scope: !11718)
!11728 = !DILocation(line: 293, column: 5, scope: !11724)
!11729 = !DILocation(line: 295, column: 17, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11718, file: !737, line: 295, column: 3)
!11731 = !DILocation(line: 295, column: 24, scope: !11730)
!11732 = !DILocation(line: 295, column: 15, scope: !11730)
!11733 = !DILocation(line: 295, column: 8, scope: !11730)
!11734 = !DILocation(line: 296, column: 12, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11736, file: !737, line: 296, column: 9)
!11736 = distinct !DILexicalBlock(scope: !11730, file: !737, line: 295, column: 3)
!11737 = !DILocation(line: 296, column: 21, scope: !11735)
!11738 = !DILocation(line: 296, column: 28, scope: !11735)
!11739 = !DILocation(line: 296, column: 19, scope: !11735)
!11740 = !DILocation(line: 296, column: 9, scope: !11736)
!11741 = !DILocation(line: 297, column: 7, scope: !11735)
!11742 = !DILocation(line: 298, column: 14, scope: !11743)
!11743 = distinct !DILexicalBlock(scope: !11735, file: !737, line: 298, column: 14)
!11744 = !DILocation(line: 298, column: 22, scope: !11743)
!11745 = !DILocation(line: 298, column: 14, scope: !11735)
!11746 = !DILocation(line: 299, column: 14, scope: !11743)
!11747 = !DILocation(line: 299, column: 22, scope: !11743)
!11748 = !DILocation(line: 299, column: 7, scope: !11743)
!11749 = !DILocation(line: 296, column: 40, scope: !11735)
!11750 = !DILocation(line: 295, column: 40, scope: !11736)
!11751 = !DILocation(line: 295, column: 3, scope: !11736)
!11752 = distinct !{!11752, !11753, !11754}
!11753 = !DILocation(line: 295, column: 3, scope: !11730)
!11754 = !DILocation(line: 299, column: 22, scope: !11730)
!11755 = !DILocation(line: 300, column: 1, scope: !11718)
!11756 = distinct !DISubprogram(name: "hash_get_next", scope: !737, file: !737, line: 307, type: !817, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11757 = !DILocalVariable(name: "table", arg: 1, scope: !11756, file: !737, line: 307, type: !733)
!11758 = !DILocation(line: 307, column: 34, scope: !11756)
!11759 = !DILocalVariable(name: "entry", arg: 2, scope: !11756, file: !737, line: 307, type: !428)
!11760 = !DILocation(line: 307, column: 53, scope: !11756)
!11761 = !DILocalVariable(name: "bucket", scope: !11756, file: !737, line: 309, type: !746)
!11762 = !DILocation(line: 309, column: 28, scope: !11756)
!11763 = !DILocation(line: 309, column: 50, scope: !11756)
!11764 = !DILocation(line: 309, column: 57, scope: !11756)
!11765 = !DILocation(line: 309, column: 37, scope: !11756)
!11766 = !DILocalVariable(name: "cursor", scope: !11756, file: !737, line: 310, type: !746)
!11767 = !DILocation(line: 310, column: 28, scope: !11756)
!11768 = !DILocation(line: 313, column: 12, scope: !11756)
!11769 = !DILocation(line: 313, column: 10, scope: !11756)
!11770 = !DILocation(line: 314, column: 3, scope: !11756)
!11771 = !DILocation(line: 316, column: 11, scope: !11772)
!11772 = distinct !DILexicalBlock(scope: !11773, file: !737, line: 316, column: 11)
!11773 = distinct !DILexicalBlock(scope: !11756, file: !737, line: 315, column: 5)
!11774 = !DILocation(line: 316, column: 19, scope: !11772)
!11775 = !DILocation(line: 316, column: 27, scope: !11772)
!11776 = !DILocation(line: 316, column: 24, scope: !11772)
!11777 = !DILocation(line: 316, column: 33, scope: !11772)
!11778 = !DILocation(line: 316, column: 36, scope: !11772)
!11779 = !DILocation(line: 316, column: 44, scope: !11772)
!11780 = !DILocation(line: 316, column: 11, scope: !11773)
!11781 = !DILocation(line: 317, column: 16, scope: !11772)
!11782 = !DILocation(line: 317, column: 24, scope: !11772)
!11783 = !DILocation(line: 317, column: 30, scope: !11772)
!11784 = !DILocation(line: 317, column: 9, scope: !11772)
!11785 = !DILocation(line: 318, column: 16, scope: !11773)
!11786 = !DILocation(line: 318, column: 24, scope: !11773)
!11787 = !DILocation(line: 318, column: 14, scope: !11773)
!11788 = !DILocation(line: 319, column: 5, scope: !11773)
!11789 = !DILocation(line: 320, column: 10, scope: !11756)
!11790 = !DILocation(line: 320, column: 17, scope: !11756)
!11791 = distinct !{!11791, !11770, !11792}
!11792 = !DILocation(line: 320, column: 24, scope: !11756)
!11793 = !DILocation(line: 323, column: 3, scope: !11756)
!11794 = !DILocation(line: 323, column: 10, scope: !11756)
!11795 = !DILocation(line: 323, column: 21, scope: !11756)
!11796 = !DILocation(line: 323, column: 28, scope: !11756)
!11797 = !DILocation(line: 323, column: 19, scope: !11756)
!11798 = !DILocation(line: 324, column: 9, scope: !11799)
!11799 = distinct !DILexicalBlock(scope: !11756, file: !737, line: 324, column: 9)
!11800 = !DILocation(line: 324, column: 17, scope: !11799)
!11801 = !DILocation(line: 324, column: 9, scope: !11756)
!11802 = !DILocation(line: 325, column: 14, scope: !11799)
!11803 = !DILocation(line: 325, column: 22, scope: !11799)
!11804 = !DILocation(line: 325, column: 7, scope: !11799)
!11805 = distinct !{!11805, !11793, !11806}
!11806 = !DILocation(line: 325, column: 22, scope: !11756)
!11807 = !DILocation(line: 328, column: 3, scope: !11756)
!11808 = !DILocation(line: 329, column: 1, scope: !11756)
!11809 = distinct !DISubprogram(name: "hash_get_entries", scope: !737, file: !737, line: 336, type: !821, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11810 = !DILocalVariable(name: "table", arg: 1, scope: !11809, file: !737, line: 336, type: !733)
!11811 = !DILocation(line: 336, column: 37, scope: !11809)
!11812 = !DILocalVariable(name: "buffer", arg: 2, scope: !11809, file: !737, line: 336, type: !823)
!11813 = !DILocation(line: 336, column: 51, scope: !11809)
!11814 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11809, file: !737, line: 337, type: !52)
!11815 = !DILocation(line: 337, column: 26, scope: !11809)
!11816 = !DILocalVariable(name: "counter", scope: !11809, file: !737, line: 339, type: !52)
!11817 = !DILocation(line: 339, column: 10, scope: !11809)
!11818 = !DILocalVariable(name: "bucket", scope: !11809, file: !737, line: 340, type: !746)
!11819 = !DILocation(line: 340, column: 28, scope: !11809)
!11820 = !DILocalVariable(name: "cursor", scope: !11809, file: !737, line: 341, type: !746)
!11821 = !DILocation(line: 341, column: 28, scope: !11809)
!11822 = !DILocation(line: 343, column: 17, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11809, file: !737, line: 343, column: 3)
!11824 = !DILocation(line: 343, column: 24, scope: !11823)
!11825 = !DILocation(line: 343, column: 15, scope: !11823)
!11826 = !DILocation(line: 343, column: 8, scope: !11823)
!11827 = !DILocation(line: 343, column: 32, scope: !11828)
!11828 = distinct !DILexicalBlock(scope: !11823, file: !737, line: 343, column: 3)
!11829 = !DILocation(line: 343, column: 41, scope: !11828)
!11830 = !DILocation(line: 343, column: 48, scope: !11828)
!11831 = !DILocation(line: 343, column: 39, scope: !11828)
!11832 = !DILocation(line: 343, column: 3, scope: !11823)
!11833 = !DILocation(line: 345, column: 11, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !737, line: 345, column: 11)
!11835 = distinct !DILexicalBlock(scope: !11828, file: !737, line: 344, column: 5)
!11836 = !DILocation(line: 345, column: 19, scope: !11834)
!11837 = !DILocation(line: 345, column: 11, scope: !11835)
!11838 = !DILocation(line: 347, column: 25, scope: !11839)
!11839 = distinct !DILexicalBlock(scope: !11840, file: !737, line: 347, column: 11)
!11840 = distinct !DILexicalBlock(scope: !11834, file: !737, line: 346, column: 9)
!11841 = !DILocation(line: 347, column: 23, scope: !11839)
!11842 = !DILocation(line: 347, column: 16, scope: !11839)
!11843 = !DILocation(line: 347, column: 33, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11839, file: !737, line: 347, column: 11)
!11845 = !DILocation(line: 347, column: 11, scope: !11839)
!11846 = !DILocation(line: 349, column: 19, scope: !11847)
!11847 = distinct !DILexicalBlock(scope: !11848, file: !737, line: 349, column: 19)
!11848 = distinct !DILexicalBlock(scope: !11844, file: !737, line: 348, column: 13)
!11849 = !DILocation(line: 349, column: 30, scope: !11847)
!11850 = !DILocation(line: 349, column: 27, scope: !11847)
!11851 = !DILocation(line: 349, column: 19, scope: !11848)
!11852 = !DILocation(line: 350, column: 24, scope: !11847)
!11853 = !DILocation(line: 350, column: 17, scope: !11847)
!11854 = !DILocation(line: 351, column: 35, scope: !11848)
!11855 = !DILocation(line: 351, column: 43, scope: !11848)
!11856 = !DILocation(line: 351, column: 15, scope: !11848)
!11857 = !DILocation(line: 351, column: 29, scope: !11848)
!11858 = !DILocation(line: 351, column: 33, scope: !11848)
!11859 = !DILocation(line: 352, column: 13, scope: !11848)
!11860 = !DILocation(line: 347, column: 50, scope: !11844)
!11861 = !DILocation(line: 347, column: 58, scope: !11844)
!11862 = !DILocation(line: 347, column: 48, scope: !11844)
!11863 = !DILocation(line: 347, column: 11, scope: !11844)
!11864 = distinct !{!11864, !11845, !11865}
!11865 = !DILocation(line: 352, column: 13, scope: !11839)
!11866 = !DILocation(line: 353, column: 9, scope: !11840)
!11867 = !DILocation(line: 354, column: 5, scope: !11835)
!11868 = !DILocation(line: 343, column: 68, scope: !11828)
!11869 = !DILocation(line: 343, column: 3, scope: !11828)
!11870 = distinct !{!11870, !11832, !11871}
!11871 = !DILocation(line: 354, column: 5, scope: !11823)
!11872 = !DILocation(line: 356, column: 10, scope: !11809)
!11873 = !DILocation(line: 356, column: 3, scope: !11809)
!11874 = !DILocation(line: 357, column: 1, scope: !11809)
!11875 = distinct !DISubprogram(name: "hash_do_for_each", scope: !737, file: !737, line: 368, type: !824, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11876 = !DILocalVariable(name: "table", arg: 1, scope: !11875, file: !737, line: 368, type: !733)
!11877 = !DILocation(line: 368, column: 37, scope: !11875)
!11878 = !DILocalVariable(name: "processor", arg: 2, scope: !11875, file: !737, line: 368, type: !826)
!11879 = !DILocation(line: 368, column: 59, scope: !11875)
!11880 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11875, file: !737, line: 369, type: !47)
!11881 = !DILocation(line: 369, column: 25, scope: !11875)
!11882 = !DILocalVariable(name: "counter", scope: !11875, file: !737, line: 371, type: !52)
!11883 = !DILocation(line: 371, column: 10, scope: !11875)
!11884 = !DILocalVariable(name: "bucket", scope: !11875, file: !737, line: 372, type: !746)
!11885 = !DILocation(line: 372, column: 28, scope: !11875)
!11886 = !DILocalVariable(name: "cursor", scope: !11875, file: !737, line: 373, type: !746)
!11887 = !DILocation(line: 373, column: 28, scope: !11875)
!11888 = !DILocation(line: 375, column: 17, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11875, file: !737, line: 375, column: 3)
!11890 = !DILocation(line: 375, column: 24, scope: !11889)
!11891 = !DILocation(line: 375, column: 15, scope: !11889)
!11892 = !DILocation(line: 375, column: 8, scope: !11889)
!11893 = !DILocation(line: 375, column: 32, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11889, file: !737, line: 375, column: 3)
!11895 = !DILocation(line: 375, column: 41, scope: !11894)
!11896 = !DILocation(line: 375, column: 48, scope: !11894)
!11897 = !DILocation(line: 375, column: 39, scope: !11894)
!11898 = !DILocation(line: 375, column: 3, scope: !11889)
!11899 = !DILocation(line: 377, column: 11, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !737, line: 377, column: 11)
!11901 = distinct !DILexicalBlock(scope: !11894, file: !737, line: 376, column: 5)
!11902 = !DILocation(line: 377, column: 19, scope: !11900)
!11903 = !DILocation(line: 377, column: 11, scope: !11901)
!11904 = !DILocation(line: 379, column: 25, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11906, file: !737, line: 379, column: 11)
!11906 = distinct !DILexicalBlock(scope: !11900, file: !737, line: 378, column: 9)
!11907 = !DILocation(line: 379, column: 23, scope: !11905)
!11908 = !DILocation(line: 379, column: 16, scope: !11905)
!11909 = !DILocation(line: 379, column: 33, scope: !11910)
!11910 = distinct !DILexicalBlock(scope: !11905, file: !737, line: 379, column: 11)
!11911 = !DILocation(line: 379, column: 11, scope: !11905)
!11912 = !DILocation(line: 381, column: 21, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11914, file: !737, line: 381, column: 19)
!11914 = distinct !DILexicalBlock(scope: !11910, file: !737, line: 380, column: 13)
!11915 = !DILocation(line: 381, column: 32, scope: !11913)
!11916 = !DILocation(line: 381, column: 40, scope: !11913)
!11917 = !DILocation(line: 381, column: 46, scope: !11913)
!11918 = !DILocation(line: 381, column: 19, scope: !11914)
!11919 = !DILocation(line: 382, column: 24, scope: !11913)
!11920 = !DILocation(line: 382, column: 17, scope: !11913)
!11921 = !DILocation(line: 383, column: 22, scope: !11914)
!11922 = !DILocation(line: 384, column: 13, scope: !11914)
!11923 = !DILocation(line: 379, column: 50, scope: !11910)
!11924 = !DILocation(line: 379, column: 58, scope: !11910)
!11925 = !DILocation(line: 379, column: 48, scope: !11910)
!11926 = !DILocation(line: 379, column: 11, scope: !11910)
!11927 = distinct !{!11927, !11911, !11928}
!11928 = !DILocation(line: 384, column: 13, scope: !11905)
!11929 = !DILocation(line: 385, column: 9, scope: !11906)
!11930 = !DILocation(line: 386, column: 5, scope: !11901)
!11931 = !DILocation(line: 375, column: 68, scope: !11894)
!11932 = !DILocation(line: 375, column: 3, scope: !11894)
!11933 = distinct !{!11933, !11898, !11934}
!11934 = !DILocation(line: 386, column: 5, scope: !11889)
!11935 = !DILocation(line: 388, column: 10, scope: !11875)
!11936 = !DILocation(line: 388, column: 3, scope: !11875)
!11937 = !DILocation(line: 389, column: 1, scope: !11875)
!11938 = distinct !DISubprogram(name: "hash_string", scope: !737, file: !737, line: 428, type: !830, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11939 = !DILocalVariable(name: "string", arg: 1, scope: !11938, file: !737, line: 428, type: !112)
!11940 = !DILocation(line: 428, column: 26, scope: !11938)
!11941 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11938, file: !737, line: 428, type: !52)
!11942 = !DILocation(line: 428, column: 41, scope: !11938)
!11943 = !DILocalVariable(name: "value", scope: !11938, file: !737, line: 430, type: !52)
!11944 = !DILocation(line: 430, column: 10, scope: !11938)
!11945 = !DILocalVariable(name: "ch", scope: !11938, file: !737, line: 431, type: !468)
!11946 = !DILocation(line: 431, column: 17, scope: !11938)
!11947 = !DILocation(line: 433, column: 3, scope: !11938)
!11948 = !DILocation(line: 433, column: 17, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11950, file: !737, line: 433, column: 3)
!11950 = distinct !DILexicalBlock(scope: !11938, file: !737, line: 433, column: 3)
!11951 = !DILocation(line: 433, column: 16, scope: !11949)
!11952 = !DILocation(line: 433, column: 14, scope: !11949)
!11953 = !DILocation(line: 433, column: 3, scope: !11950)
!11954 = !DILocation(line: 434, column: 14, scope: !11949)
!11955 = !DILocation(line: 434, column: 20, scope: !11949)
!11956 = !DILocation(line: 434, column: 27, scope: !11949)
!11957 = !DILocation(line: 434, column: 25, scope: !11949)
!11958 = !DILocation(line: 434, column: 33, scope: !11949)
!11959 = !DILocation(line: 434, column: 31, scope: !11949)
!11960 = !DILocation(line: 434, column: 11, scope: !11949)
!11961 = !DILocation(line: 434, column: 5, scope: !11949)
!11962 = !DILocation(line: 433, column: 32, scope: !11949)
!11963 = !DILocation(line: 433, column: 3, scope: !11949)
!11964 = distinct !{!11964, !11953, !11965}
!11965 = !DILocation(line: 434, column: 33, scope: !11950)
!11966 = !DILocation(line: 435, column: 10, scope: !11938)
!11967 = !DILocation(line: 435, column: 3, scope: !11938)
!11968 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !737, file: !737, line: 479, type: !832, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11969 = !DILocalVariable(name: "tuning", arg: 1, scope: !11968, file: !737, line: 479, type: !834)
!11970 = !DILocation(line: 479, column: 33, scope: !11968)
!11971 = !DILocation(line: 481, column: 4, scope: !11968)
!11972 = !DILocation(line: 481, column: 13, scope: !11968)
!11973 = !{i64 0, i64 4, !11974, i64 4, i64 4, !11974, i64 8, i64 4, !11974, i64 12, i64 4, !11974, i64 16, i64 1, !3104}
!11974 = !{!11975, !11975, i64 0}
!11975 = !{!"float", !2982, i64 0}
!11976 = !DILocation(line: 482, column: 1, scope: !11968)
!11977 = distinct !DISubprogram(name: "hash_initialize", scope: !737, file: !737, line: 594, type: !835, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!11978 = !DILocalVariable(name: "candidate", arg: 1, scope: !11977, file: !737, line: 594, type: !52)
!11979 = !DILocation(line: 594, column: 25, scope: !11977)
!11980 = !DILocalVariable(name: "tuning", arg: 2, scope: !11977, file: !737, line: 594, type: !752)
!11981 = !DILocation(line: 594, column: 55, scope: !11977)
!11982 = !DILocalVariable(name: "hasher", arg: 3, scope: !11977, file: !737, line: 595, type: !764)
!11983 = !DILocation(line: 595, column: 30, scope: !11977)
!11984 = !DILocalVariable(name: "comparator", arg: 4, scope: !11977, file: !737, line: 595, type: !767)
!11985 = !DILocation(line: 595, column: 54, scope: !11977)
!11986 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11977, file: !737, line: 596, type: !770)
!11987 = !DILocation(line: 596, column: 34, scope: !11977)
!11988 = !DILocalVariable(name: "table", scope: !11977, file: !737, line: 598, type: !837)
!11989 = !DILocation(line: 598, column: 15, scope: !11977)
!11990 = !DILocation(line: 600, column: 7, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11977, file: !737, line: 600, column: 7)
!11992 = !DILocation(line: 600, column: 14, scope: !11991)
!11993 = !DILocation(line: 600, column: 7, scope: !11977)
!11994 = !DILocation(line: 601, column: 12, scope: !11991)
!11995 = !DILocation(line: 601, column: 5, scope: !11991)
!11996 = !DILocation(line: 602, column: 7, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11977, file: !737, line: 602, column: 7)
!11998 = !DILocation(line: 602, column: 18, scope: !11997)
!11999 = !DILocation(line: 602, column: 7, scope: !11977)
!12000 = !DILocation(line: 603, column: 16, scope: !11997)
!12001 = !DILocation(line: 603, column: 5, scope: !11997)
!12002 = !DILocation(line: 605, column: 11, scope: !11977)
!12003 = !DILocation(line: 605, column: 9, scope: !11977)
!12004 = !DILocation(line: 606, column: 7, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11977, file: !737, line: 606, column: 7)
!12006 = !DILocation(line: 606, column: 13, scope: !12005)
!12007 = !DILocation(line: 606, column: 7, scope: !11977)
!12008 = !DILocation(line: 607, column: 5, scope: !12005)
!12009 = !DILocation(line: 609, column: 8, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !11977, file: !737, line: 609, column: 7)
!12011 = !DILocation(line: 609, column: 7, scope: !11977)
!12012 = !DILocation(line: 610, column: 12, scope: !12010)
!12013 = !DILocation(line: 610, column: 5, scope: !12010)
!12014 = !DILocation(line: 611, column: 19, scope: !11977)
!12015 = !DILocation(line: 611, column: 3, scope: !11977)
!12016 = !DILocation(line: 611, column: 10, scope: !11977)
!12017 = !DILocation(line: 611, column: 17, scope: !11977)
!12018 = !{!11474, !2994, i64 40}
!12019 = !DILocation(line: 612, column: 22, scope: !12020)
!12020 = distinct !DILexicalBlock(scope: !11977, file: !737, line: 612, column: 7)
!12021 = !DILocation(line: 612, column: 8, scope: !12020)
!12022 = !DILocation(line: 612, column: 7, scope: !11977)
!12023 = !DILocation(line: 619, column: 7, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12020, file: !737, line: 613, column: 5)
!12025 = !DILocation(line: 622, column: 43, scope: !11977)
!12026 = !DILocation(line: 622, column: 54, scope: !11977)
!12027 = !DILocation(line: 622, column: 22, scope: !11977)
!12028 = !DILocation(line: 622, column: 3, scope: !11977)
!12029 = !DILocation(line: 622, column: 10, scope: !11977)
!12030 = !DILocation(line: 622, column: 20, scope: !11977)
!12031 = !DILocation(line: 623, column: 8, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !11977, file: !737, line: 623, column: 7)
!12033 = !DILocation(line: 623, column: 15, scope: !12032)
!12034 = !DILocation(line: 623, column: 7, scope: !11977)
!12035 = !DILocation(line: 624, column: 5, scope: !12032)
!12036 = !DILocation(line: 626, column: 27, scope: !11977)
!12037 = !DILocation(line: 626, column: 34, scope: !11977)
!12038 = !DILocation(line: 626, column: 19, scope: !11977)
!12039 = !DILocation(line: 626, column: 3, scope: !11977)
!12040 = !DILocation(line: 626, column: 10, scope: !11977)
!12041 = !DILocation(line: 626, column: 17, scope: !11977)
!12042 = !DILocation(line: 627, column: 7, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !11977, file: !737, line: 627, column: 7)
!12044 = !DILocation(line: 627, column: 14, scope: !12043)
!12045 = !DILocation(line: 627, column: 21, scope: !12043)
!12046 = !DILocation(line: 627, column: 7, scope: !11977)
!12047 = !DILocation(line: 628, column: 5, scope: !12043)
!12048 = !DILocation(line: 629, column: 25, scope: !11977)
!12049 = !DILocation(line: 629, column: 32, scope: !11977)
!12050 = !DILocation(line: 629, column: 41, scope: !11977)
!12051 = !DILocation(line: 629, column: 48, scope: !11977)
!12052 = !DILocation(line: 629, column: 39, scope: !11977)
!12053 = !DILocation(line: 629, column: 3, scope: !11977)
!12054 = !DILocation(line: 629, column: 10, scope: !11977)
!12055 = !DILocation(line: 629, column: 23, scope: !11977)
!12056 = !DILocation(line: 630, column: 3, scope: !11977)
!12057 = !DILocation(line: 630, column: 10, scope: !11977)
!12058 = !DILocation(line: 630, column: 25, scope: !11977)
!12059 = !DILocation(line: 631, column: 3, scope: !11977)
!12060 = !DILocation(line: 631, column: 10, scope: !11977)
!12061 = !DILocation(line: 631, column: 20, scope: !11977)
!12062 = !DILocation(line: 633, column: 19, scope: !11977)
!12063 = !DILocation(line: 633, column: 3, scope: !11977)
!12064 = !DILocation(line: 633, column: 10, scope: !11977)
!12065 = !DILocation(line: 633, column: 17, scope: !11977)
!12066 = !DILocation(line: 634, column: 23, scope: !11977)
!12067 = !DILocation(line: 634, column: 3, scope: !11977)
!12068 = !DILocation(line: 634, column: 10, scope: !11977)
!12069 = !DILocation(line: 634, column: 21, scope: !11977)
!12070 = !DILocation(line: 635, column: 23, scope: !11977)
!12071 = !DILocation(line: 635, column: 3, scope: !11977)
!12072 = !DILocation(line: 635, column: 10, scope: !11977)
!12073 = !DILocation(line: 635, column: 21, scope: !11977)
!12074 = !{!11474, !2994, i64 64}
!12075 = !DILocation(line: 637, column: 3, scope: !11977)
!12076 = !DILocation(line: 637, column: 10, scope: !11977)
!12077 = !DILocation(line: 637, column: 26, scope: !11977)
!12078 = !{!11474, !2994, i64 72}
!12079 = !DILocation(line: 641, column: 10, scope: !11977)
!12080 = !DILocation(line: 641, column: 3, scope: !11977)
!12081 = !DILabel(scope: !11977, name: "fail", file: !737, line: 643)
!12082 = !DILocation(line: 643, column: 2, scope: !11977)
!12083 = !DILocation(line: 644, column: 9, scope: !11977)
!12084 = !DILocation(line: 644, column: 3, scope: !11977)
!12085 = !DILocation(line: 645, column: 3, scope: !11977)
!12086 = !DILocation(line: 646, column: 1, scope: !11977)
!12087 = distinct !DISubprogram(name: "raw_hasher", scope: !737, file: !737, line: 486, type: !520, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12088 = !DILocalVariable(name: "data", arg: 1, scope: !12087, file: !737, line: 486, type: !428)
!12089 = !DILocation(line: 486, column: 25, scope: !12087)
!12090 = !DILocalVariable(name: "n", arg: 2, scope: !12087, file: !737, line: 486, type: !52)
!12091 = !DILocation(line: 486, column: 38, scope: !12087)
!12092 = !DILocalVariable(name: "val", scope: !12087, file: !737, line: 493, type: !52)
!12093 = !DILocation(line: 493, column: 10, scope: !12087)
!12094 = !DILocation(line: 493, column: 34, scope: !12087)
!12095 = !DILocation(line: 493, column: 25, scope: !12087)
!12096 = !DILocation(line: 493, column: 16, scope: !12087)
!12097 = !DILocation(line: 494, column: 10, scope: !12087)
!12098 = !DILocation(line: 494, column: 16, scope: !12087)
!12099 = !DILocation(line: 494, column: 14, scope: !12087)
!12100 = !DILocation(line: 494, column: 3, scope: !12087)
!12101 = distinct !DISubprogram(name: "raw_comparator", scope: !737, file: !737, line: 499, type: !522, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12102 = !DILocalVariable(name: "a", arg: 1, scope: !12101, file: !737, line: 499, type: !428)
!12103 = !DILocation(line: 499, column: 29, scope: !12101)
!12104 = !DILocalVariable(name: "b", arg: 2, scope: !12101, file: !737, line: 499, type: !428)
!12105 = !DILocation(line: 499, column: 44, scope: !12101)
!12106 = !DILocation(line: 501, column: 10, scope: !12101)
!12107 = !DILocation(line: 501, column: 15, scope: !12101)
!12108 = !DILocation(line: 501, column: 12, scope: !12101)
!12109 = !DILocation(line: 501, column: 3, scope: !12101)
!12110 = distinct !DISubprogram(name: "check_tuning", scope: !737, file: !737, line: 512, type: !849, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12111 = !DILocalVariable(name: "table", arg: 1, scope: !12110, file: !737, line: 512, type: !837)
!12112 = !DILocation(line: 512, column: 27, scope: !12110)
!12113 = !DILocalVariable(name: "tuning", scope: !12110, file: !737, line: 514, type: !752)
!12114 = !DILocation(line: 514, column: 22, scope: !12110)
!12115 = !DILocation(line: 514, column: 31, scope: !12110)
!12116 = !DILocation(line: 514, column: 38, scope: !12110)
!12117 = !DILocalVariable(name: "epsilon", scope: !12110, file: !737, line: 515, type: !758)
!12118 = !DILocation(line: 515, column: 9, scope: !12110)
!12119 = !DILocation(line: 516, column: 7, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12110, file: !737, line: 516, column: 7)
!12121 = !DILocation(line: 516, column: 14, scope: !12120)
!12122 = !DILocation(line: 516, column: 7, scope: !12110)
!12123 = !DILocation(line: 517, column: 5, scope: !12120)
!12124 = !DILocation(line: 524, column: 11, scope: !12110)
!12125 = !DILocation(line: 526, column: 7, scope: !12126)
!12126 = distinct !DILexicalBlock(scope: !12110, file: !737, line: 526, column: 7)
!12127 = !DILocation(line: 526, column: 17, scope: !12126)
!12128 = !DILocation(line: 526, column: 25, scope: !12126)
!12129 = !{!12130, !11975, i64 8}
!12130 = !{!"hash_tuning", !11975, i64 0, !11975, i64 4, !11975, i64 8, !11975, i64 12, !3105, i64 16}
!12131 = !DILocation(line: 526, column: 15, scope: !12126)
!12132 = !DILocation(line: 527, column: 7, scope: !12126)
!12133 = !DILocation(line: 527, column: 10, scope: !12126)
!12134 = !DILocation(line: 527, column: 18, scope: !12126)
!12135 = !DILocation(line: 527, column: 41, scope: !12126)
!12136 = !DILocation(line: 527, column: 39, scope: !12126)
!12137 = !DILocation(line: 527, column: 35, scope: !12126)
!12138 = !DILocation(line: 528, column: 7, scope: !12126)
!12139 = !DILocation(line: 528, column: 14, scope: !12126)
!12140 = !DILocation(line: 528, column: 12, scope: !12126)
!12141 = !DILocation(line: 528, column: 24, scope: !12126)
!12142 = !DILocation(line: 528, column: 32, scope: !12126)
!12143 = !{!12130, !11975, i64 12}
!12144 = !DILocation(line: 528, column: 22, scope: !12126)
!12145 = !DILocation(line: 529, column: 7, scope: !12126)
!12146 = !DILocation(line: 529, column: 15, scope: !12126)
!12147 = !DILocation(line: 529, column: 23, scope: !12126)
!12148 = !{!12130, !11975, i64 0}
!12149 = !DILocation(line: 529, column: 12, scope: !12126)
!12150 = !DILocation(line: 530, column: 7, scope: !12126)
!12151 = !DILocation(line: 530, column: 10, scope: !12126)
!12152 = !DILocation(line: 530, column: 18, scope: !12126)
!12153 = !DILocation(line: 530, column: 37, scope: !12126)
!12154 = !DILocation(line: 530, column: 35, scope: !12126)
!12155 = !DILocation(line: 530, column: 47, scope: !12126)
!12156 = !DILocation(line: 530, column: 55, scope: !12126)
!12157 = !{!12130, !11975, i64 4}
!12158 = !DILocation(line: 530, column: 45, scope: !12126)
!12159 = !DILocation(line: 531, column: 7, scope: !12126)
!12160 = !DILocation(line: 531, column: 10, scope: !12126)
!12161 = !DILocation(line: 531, column: 18, scope: !12126)
!12162 = !DILocation(line: 531, column: 32, scope: !12126)
!12163 = !DILocation(line: 532, column: 7, scope: !12126)
!12164 = !DILocation(line: 532, column: 10, scope: !12126)
!12165 = !DILocation(line: 532, column: 18, scope: !12126)
!12166 = !DILocation(line: 532, column: 37, scope: !12126)
!12167 = !DILocation(line: 532, column: 35, scope: !12126)
!12168 = !DILocation(line: 532, column: 47, scope: !12126)
!12169 = !DILocation(line: 532, column: 55, scope: !12126)
!12170 = !DILocation(line: 532, column: 45, scope: !12126)
!12171 = !DILocation(line: 526, column: 7, scope: !12110)
!12172 = !DILocation(line: 533, column: 5, scope: !12126)
!12173 = !DILocation(line: 535, column: 3, scope: !12110)
!12174 = !DILocation(line: 535, column: 10, scope: !12110)
!12175 = !DILocation(line: 535, column: 17, scope: !12110)
!12176 = !DILocation(line: 536, column: 3, scope: !12110)
!12177 = !DILocation(line: 537, column: 1, scope: !12110)
!12178 = distinct !DISubprogram(name: "compute_bucket_size", scope: !737, file: !737, line: 544, type: !851, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12179 = !DILocalVariable(name: "candidate", arg: 1, scope: !12178, file: !737, line: 544, type: !52)
!12180 = !DILocation(line: 544, column: 29, scope: !12178)
!12181 = !DILocalVariable(name: "tuning", arg: 2, scope: !12178, file: !737, line: 544, type: !752)
!12182 = !DILocation(line: 544, column: 59, scope: !12178)
!12183 = !DILocation(line: 546, column: 8, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12178, file: !737, line: 546, column: 7)
!12185 = !DILocation(line: 546, column: 16, scope: !12184)
!12186 = !{!12130, !3105, i64 16}
!12187 = !DILocation(line: 546, column: 7, scope: !12178)
!12188 = !DILocalVariable(name: "new_candidate", scope: !12189, file: !737, line: 548, type: !758)
!12189 = distinct !DILexicalBlock(scope: !12184, file: !737, line: 547, column: 5)
!12190 = !DILocation(line: 548, column: 13, scope: !12189)
!12191 = !DILocation(line: 548, column: 29, scope: !12189)
!12192 = !DILocation(line: 548, column: 41, scope: !12189)
!12193 = !DILocation(line: 548, column: 49, scope: !12189)
!12194 = !DILocation(line: 548, column: 39, scope: !12189)
!12195 = !DILocation(line: 549, column: 23, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12189, file: !737, line: 549, column: 11)
!12197 = !DILocation(line: 549, column: 20, scope: !12196)
!12198 = !DILocation(line: 549, column: 11, scope: !12189)
!12199 = !DILocation(line: 550, column: 9, scope: !12196)
!12200 = !DILocation(line: 551, column: 19, scope: !12189)
!12201 = !DILocation(line: 551, column: 17, scope: !12189)
!12202 = !DILocation(line: 552, column: 5, scope: !12189)
!12203 = !DILocation(line: 553, column: 27, scope: !12178)
!12204 = !DILocation(line: 553, column: 15, scope: !12178)
!12205 = !DILocation(line: 553, column: 13, scope: !12178)
!12206 = !DILocation(line: 554, column: 7, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12178, file: !737, line: 554, column: 7)
!12208 = !DILocation(line: 554, column: 7, scope: !12178)
!12209 = !DILocation(line: 555, column: 5, scope: !12207)
!12210 = !DILocation(line: 556, column: 10, scope: !12178)
!12211 = !DILocation(line: 556, column: 3, scope: !12178)
!12212 = !DILocation(line: 557, column: 1, scope: !12178)
!12213 = distinct !DISubprogram(name: "next_prime", scope: !737, file: !737, line: 463, type: !853, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12214 = !DILocalVariable(name: "candidate", arg: 1, scope: !12213, file: !737, line: 463, type: !52)
!12215 = !DILocation(line: 463, column: 20, scope: !12213)
!12216 = !DILocation(line: 466, column: 7, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12213, file: !737, line: 466, column: 7)
!12218 = !DILocation(line: 466, column: 17, scope: !12217)
!12219 = !DILocation(line: 466, column: 7, scope: !12213)
!12220 = !DILocation(line: 467, column: 15, scope: !12217)
!12221 = !DILocation(line: 467, column: 5, scope: !12217)
!12222 = !DILocation(line: 470, column: 13, scope: !12213)
!12223 = !DILocation(line: 472, column: 3, scope: !12213)
!12224 = !DILocation(line: 472, column: 22, scope: !12213)
!12225 = !DILocation(line: 472, column: 19, scope: !12213)
!12226 = !DILocation(line: 472, column: 32, scope: !12213)
!12227 = !DILocation(line: 472, column: 46, scope: !12213)
!12228 = !DILocation(line: 472, column: 36, scope: !12213)
!12229 = !DILocation(line: 472, column: 35, scope: !12213)
!12230 = !DILocation(line: 0, scope: !12213)
!12231 = !DILocation(line: 473, column: 15, scope: !12213)
!12232 = distinct !{!12232, !12223, !12233}
!12233 = !DILocation(line: 473, column: 18, scope: !12213)
!12234 = !DILocation(line: 475, column: 10, scope: !12213)
!12235 = !DILocation(line: 475, column: 3, scope: !12213)
!12236 = distinct !DISubprogram(name: "is_prime", scope: !737, file: !737, line: 444, type: !855, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12237 = !DILocalVariable(name: "candidate", arg: 1, scope: !12236, file: !737, line: 444, type: !52)
!12238 = !DILocation(line: 444, column: 18, scope: !12236)
!12239 = !DILocalVariable(name: "divisor", scope: !12236, file: !737, line: 446, type: !52)
!12240 = !DILocation(line: 446, column: 10, scope: !12236)
!12241 = !DILocalVariable(name: "square", scope: !12236, file: !737, line: 447, type: !52)
!12242 = !DILocation(line: 447, column: 10, scope: !12236)
!12243 = !DILocation(line: 447, column: 19, scope: !12236)
!12244 = !DILocation(line: 447, column: 29, scope: !12236)
!12245 = !DILocation(line: 447, column: 27, scope: !12236)
!12246 = !DILocation(line: 449, column: 3, scope: !12236)
!12247 = !DILocation(line: 449, column: 10, scope: !12236)
!12248 = !DILocation(line: 449, column: 19, scope: !12236)
!12249 = !DILocation(line: 449, column: 17, scope: !12236)
!12250 = !DILocation(line: 449, column: 29, scope: !12236)
!12251 = !DILocation(line: 449, column: 33, scope: !12236)
!12252 = !DILocation(line: 449, column: 45, scope: !12236)
!12253 = !DILocation(line: 449, column: 43, scope: !12236)
!12254 = !DILocation(line: 0, scope: !12236)
!12255 = !DILocation(line: 451, column: 14, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12236, file: !737, line: 450, column: 5)
!12257 = !DILocation(line: 452, column: 21, scope: !12256)
!12258 = !DILocation(line: 452, column: 19, scope: !12256)
!12259 = !DILocation(line: 452, column: 14, scope: !12256)
!12260 = !DILocation(line: 453, column: 14, scope: !12256)
!12261 = distinct !{!12261, !12246, !12262}
!12262 = !DILocation(line: 454, column: 5, scope: !12236)
!12263 = !DILocation(line: 456, column: 11, scope: !12236)
!12264 = !DILocation(line: 456, column: 23, scope: !12236)
!12265 = !DILocation(line: 456, column: 21, scope: !12236)
!12266 = !DILocation(line: 456, column: 10, scope: !12236)
!12267 = !DILocation(line: 456, column: 3, scope: !12236)
!12268 = distinct !DISubprogram(name: "hash_clear", scope: !737, file: !737, line: 653, type: !838, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12269 = !DILocalVariable(name: "table", arg: 1, scope: !12268, file: !737, line: 653, type: !837)
!12270 = !DILocation(line: 653, column: 25, scope: !12268)
!12271 = !DILocalVariable(name: "bucket", scope: !12268, file: !737, line: 655, type: !740)
!12272 = !DILocation(line: 655, column: 22, scope: !12268)
!12273 = !DILocation(line: 657, column: 17, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12268, file: !737, line: 657, column: 3)
!12275 = !DILocation(line: 657, column: 24, scope: !12274)
!12276 = !DILocation(line: 657, column: 15, scope: !12274)
!12277 = !DILocation(line: 657, column: 8, scope: !12274)
!12278 = !DILocation(line: 657, column: 32, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12274, file: !737, line: 657, column: 3)
!12280 = !DILocation(line: 657, column: 41, scope: !12279)
!12281 = !DILocation(line: 657, column: 48, scope: !12279)
!12282 = !DILocation(line: 657, column: 39, scope: !12279)
!12283 = !DILocation(line: 657, column: 3, scope: !12274)
!12284 = !DILocation(line: 659, column: 11, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12286, file: !737, line: 659, column: 11)
!12286 = distinct !DILexicalBlock(scope: !12279, file: !737, line: 658, column: 5)
!12287 = !DILocation(line: 659, column: 19, scope: !12285)
!12288 = !DILocation(line: 659, column: 11, scope: !12286)
!12289 = !DILocalVariable(name: "cursor", scope: !12290, file: !737, line: 661, type: !740)
!12290 = distinct !DILexicalBlock(scope: !12285, file: !737, line: 660, column: 9)
!12291 = !DILocation(line: 661, column: 30, scope: !12290)
!12292 = !DILocalVariable(name: "next", scope: !12290, file: !737, line: 662, type: !740)
!12293 = !DILocation(line: 662, column: 30, scope: !12290)
!12294 = !DILocation(line: 665, column: 25, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12290, file: !737, line: 665, column: 11)
!12296 = !DILocation(line: 665, column: 33, scope: !12295)
!12297 = !DILocation(line: 665, column: 23, scope: !12295)
!12298 = !DILocation(line: 665, column: 16, scope: !12295)
!12299 = !DILocation(line: 665, column: 39, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12295, file: !737, line: 665, column: 11)
!12301 = !DILocation(line: 665, column: 11, scope: !12295)
!12302 = !DILocation(line: 667, column: 19, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12304, file: !737, line: 667, column: 19)
!12304 = distinct !DILexicalBlock(scope: !12300, file: !737, line: 666, column: 13)
!12305 = !DILocation(line: 667, column: 26, scope: !12303)
!12306 = !DILocation(line: 667, column: 19, scope: !12304)
!12307 = !DILocation(line: 668, column: 17, scope: !12303)
!12308 = !DILocation(line: 668, column: 24, scope: !12303)
!12309 = !DILocation(line: 668, column: 36, scope: !12303)
!12310 = !DILocation(line: 668, column: 44, scope: !12303)
!12311 = !DILocation(line: 669, column: 15, scope: !12304)
!12312 = !DILocation(line: 669, column: 23, scope: !12304)
!12313 = !DILocation(line: 669, column: 28, scope: !12304)
!12314 = !DILocation(line: 671, column: 22, scope: !12304)
!12315 = !DILocation(line: 671, column: 30, scope: !12304)
!12316 = !DILocation(line: 671, column: 20, scope: !12304)
!12317 = !DILocation(line: 674, column: 30, scope: !12304)
!12318 = !DILocation(line: 674, column: 37, scope: !12304)
!12319 = !DILocation(line: 674, column: 15, scope: !12304)
!12320 = !DILocation(line: 674, column: 23, scope: !12304)
!12321 = !DILocation(line: 674, column: 28, scope: !12304)
!12322 = !DILocation(line: 675, column: 40, scope: !12304)
!12323 = !DILocation(line: 675, column: 15, scope: !12304)
!12324 = !DILocation(line: 675, column: 22, scope: !12304)
!12325 = !DILocation(line: 675, column: 38, scope: !12304)
!12326 = !DILocation(line: 676, column: 13, scope: !12304)
!12327 = !DILocation(line: 665, column: 56, scope: !12300)
!12328 = !DILocation(line: 665, column: 54, scope: !12300)
!12329 = !DILocation(line: 665, column: 11, scope: !12300)
!12330 = distinct !{!12330, !12301, !12331}
!12331 = !DILocation(line: 676, column: 13, scope: !12295)
!12332 = !DILocation(line: 679, column: 15, scope: !12333)
!12333 = distinct !DILexicalBlock(scope: !12290, file: !737, line: 679, column: 15)
!12334 = !DILocation(line: 679, column: 22, scope: !12333)
!12335 = !DILocation(line: 679, column: 15, scope: !12290)
!12336 = !DILocation(line: 680, column: 13, scope: !12333)
!12337 = !DILocation(line: 680, column: 20, scope: !12333)
!12338 = !DILocation(line: 680, column: 32, scope: !12333)
!12339 = !DILocation(line: 680, column: 40, scope: !12333)
!12340 = !DILocation(line: 681, column: 11, scope: !12290)
!12341 = !DILocation(line: 681, column: 19, scope: !12290)
!12342 = !DILocation(line: 681, column: 24, scope: !12290)
!12343 = !DILocation(line: 682, column: 11, scope: !12290)
!12344 = !DILocation(line: 682, column: 19, scope: !12290)
!12345 = !DILocation(line: 682, column: 24, scope: !12290)
!12346 = !DILocation(line: 683, column: 9, scope: !12290)
!12347 = !DILocation(line: 684, column: 5, scope: !12286)
!12348 = !DILocation(line: 657, column: 68, scope: !12279)
!12349 = !DILocation(line: 657, column: 3, scope: !12279)
!12350 = distinct !{!12350, !12283, !12351}
!12351 = !DILocation(line: 684, column: 5, scope: !12274)
!12352 = !DILocation(line: 686, column: 3, scope: !12268)
!12353 = !DILocation(line: 686, column: 10, scope: !12268)
!12354 = !DILocation(line: 686, column: 25, scope: !12268)
!12355 = !DILocation(line: 687, column: 3, scope: !12268)
!12356 = !DILocation(line: 687, column: 10, scope: !12268)
!12357 = !DILocation(line: 687, column: 20, scope: !12268)
!12358 = !DILocation(line: 688, column: 1, scope: !12268)
!12359 = distinct !DISubprogram(name: "hash_free", scope: !737, file: !737, line: 696, type: !838, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12360 = !DILocalVariable(name: "table", arg: 1, scope: !12359, file: !737, line: 696, type: !837)
!12361 = !DILocation(line: 696, column: 24, scope: !12359)
!12362 = !DILocalVariable(name: "bucket", scope: !12359, file: !737, line: 698, type: !740)
!12363 = !DILocation(line: 698, column: 22, scope: !12359)
!12364 = !DILocalVariable(name: "cursor", scope: !12359, file: !737, line: 699, type: !740)
!12365 = !DILocation(line: 699, column: 22, scope: !12359)
!12366 = !DILocalVariable(name: "next", scope: !12359, file: !737, line: 700, type: !740)
!12367 = !DILocation(line: 700, column: 22, scope: !12359)
!12368 = !DILocation(line: 703, column: 7, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12359, file: !737, line: 703, column: 7)
!12370 = !DILocation(line: 703, column: 14, scope: !12369)
!12371 = !DILocation(line: 703, column: 25, scope: !12369)
!12372 = !DILocation(line: 703, column: 28, scope: !12369)
!12373 = !DILocation(line: 703, column: 35, scope: !12369)
!12374 = !DILocation(line: 703, column: 7, scope: !12359)
!12375 = !DILocation(line: 705, column: 21, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12377, file: !737, line: 705, column: 7)
!12377 = distinct !DILexicalBlock(scope: !12369, file: !737, line: 704, column: 5)
!12378 = !DILocation(line: 705, column: 28, scope: !12376)
!12379 = !DILocation(line: 705, column: 19, scope: !12376)
!12380 = !DILocation(line: 705, column: 12, scope: !12376)
!12381 = !DILocation(line: 705, column: 36, scope: !12382)
!12382 = distinct !DILexicalBlock(scope: !12376, file: !737, line: 705, column: 7)
!12383 = !DILocation(line: 705, column: 45, scope: !12382)
!12384 = !DILocation(line: 705, column: 52, scope: !12382)
!12385 = !DILocation(line: 705, column: 43, scope: !12382)
!12386 = !DILocation(line: 705, column: 7, scope: !12376)
!12387 = !DILocation(line: 707, column: 15, scope: !12388)
!12388 = distinct !DILexicalBlock(scope: !12389, file: !737, line: 707, column: 15)
!12389 = distinct !DILexicalBlock(scope: !12382, file: !737, line: 706, column: 9)
!12390 = !DILocation(line: 707, column: 23, scope: !12388)
!12391 = !DILocation(line: 707, column: 15, scope: !12389)
!12392 = !DILocation(line: 709, column: 29, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12394, file: !737, line: 709, column: 15)
!12394 = distinct !DILexicalBlock(scope: !12388, file: !737, line: 708, column: 13)
!12395 = !DILocation(line: 709, column: 27, scope: !12393)
!12396 = !DILocation(line: 709, column: 20, scope: !12393)
!12397 = !DILocation(line: 709, column: 37, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12393, file: !737, line: 709, column: 15)
!12399 = !DILocation(line: 709, column: 15, scope: !12393)
!12400 = !DILocation(line: 710, column: 17, scope: !12398)
!12401 = !DILocation(line: 710, column: 24, scope: !12398)
!12402 = !DILocation(line: 710, column: 36, scope: !12398)
!12403 = !DILocation(line: 710, column: 44, scope: !12398)
!12404 = !DILocation(line: 709, column: 54, scope: !12398)
!12405 = !DILocation(line: 709, column: 62, scope: !12398)
!12406 = !DILocation(line: 709, column: 52, scope: !12398)
!12407 = !DILocation(line: 709, column: 15, scope: !12398)
!12408 = distinct !{!12408, !12399, !12409}
!12409 = !DILocation(line: 710, column: 48, scope: !12393)
!12410 = !DILocation(line: 711, column: 13, scope: !12394)
!12411 = !DILocation(line: 712, column: 9, scope: !12389)
!12412 = !DILocation(line: 705, column: 72, scope: !12382)
!12413 = !DILocation(line: 705, column: 7, scope: !12382)
!12414 = distinct !{!12414, !12386, !12415}
!12415 = !DILocation(line: 712, column: 9, scope: !12376)
!12416 = !DILocation(line: 713, column: 5, scope: !12377)
!12417 = !DILocation(line: 722, column: 17, scope: !12418)
!12418 = distinct !DILexicalBlock(scope: !12359, file: !737, line: 722, column: 3)
!12419 = !DILocation(line: 722, column: 24, scope: !12418)
!12420 = !DILocation(line: 722, column: 15, scope: !12418)
!12421 = !DILocation(line: 722, column: 8, scope: !12418)
!12422 = !DILocation(line: 722, column: 32, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12418, file: !737, line: 722, column: 3)
!12424 = !DILocation(line: 722, column: 41, scope: !12423)
!12425 = !DILocation(line: 722, column: 48, scope: !12423)
!12426 = !DILocation(line: 722, column: 39, scope: !12423)
!12427 = !DILocation(line: 722, column: 3, scope: !12418)
!12428 = !DILocation(line: 724, column: 21, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12430, file: !737, line: 724, column: 7)
!12430 = distinct !DILexicalBlock(scope: !12423, file: !737, line: 723, column: 5)
!12431 = !DILocation(line: 724, column: 29, scope: !12429)
!12432 = !DILocation(line: 724, column: 19, scope: !12429)
!12433 = !DILocation(line: 724, column: 12, scope: !12429)
!12434 = !DILocation(line: 724, column: 35, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12429, file: !737, line: 724, column: 7)
!12436 = !DILocation(line: 724, column: 7, scope: !12429)
!12437 = !DILocation(line: 726, column: 18, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12435, file: !737, line: 725, column: 9)
!12439 = !DILocation(line: 726, column: 26, scope: !12438)
!12440 = !DILocation(line: 726, column: 16, scope: !12438)
!12441 = !DILocation(line: 727, column: 17, scope: !12438)
!12442 = !DILocation(line: 727, column: 11, scope: !12438)
!12443 = !DILocation(line: 728, column: 9, scope: !12438)
!12444 = !DILocation(line: 724, column: 52, scope: !12435)
!12445 = !DILocation(line: 724, column: 50, scope: !12435)
!12446 = !DILocation(line: 724, column: 7, scope: !12435)
!12447 = distinct !{!12447, !12436, !12448}
!12448 = !DILocation(line: 728, column: 9, scope: !12429)
!12449 = !DILocation(line: 729, column: 5, scope: !12430)
!12450 = !DILocation(line: 722, column: 68, scope: !12423)
!12451 = !DILocation(line: 722, column: 3, scope: !12423)
!12452 = distinct !{!12452, !12427, !12453}
!12453 = !DILocation(line: 729, column: 5, scope: !12418)
!12454 = !DILocation(line: 732, column: 17, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12359, file: !737, line: 732, column: 3)
!12456 = !DILocation(line: 732, column: 24, scope: !12455)
!12457 = !DILocation(line: 732, column: 15, scope: !12455)
!12458 = !DILocation(line: 732, column: 8, scope: !12455)
!12459 = !DILocation(line: 732, column: 41, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12455, file: !737, line: 732, column: 3)
!12461 = !DILocation(line: 732, column: 3, scope: !12455)
!12462 = !DILocation(line: 734, column: 14, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12460, file: !737, line: 733, column: 5)
!12464 = !DILocation(line: 734, column: 22, scope: !12463)
!12465 = !DILocation(line: 734, column: 12, scope: !12463)
!12466 = !DILocation(line: 735, column: 13, scope: !12463)
!12467 = !DILocation(line: 735, column: 7, scope: !12463)
!12468 = !DILocation(line: 736, column: 5, scope: !12463)
!12469 = !DILocation(line: 732, column: 58, scope: !12460)
!12470 = !DILocation(line: 732, column: 56, scope: !12460)
!12471 = !DILocation(line: 732, column: 3, scope: !12460)
!12472 = distinct !{!12472, !12461, !12473}
!12473 = !DILocation(line: 736, column: 5, scope: !12455)
!12474 = !DILocation(line: 741, column: 9, scope: !12359)
!12475 = !DILocation(line: 741, column: 16, scope: !12359)
!12476 = !DILocation(line: 741, column: 3, scope: !12359)
!12477 = !DILocation(line: 742, column: 9, scope: !12359)
!12478 = !DILocation(line: 742, column: 3, scope: !12359)
!12479 = !DILocation(line: 743, column: 1, scope: !12359)
!12480 = distinct !DISubprogram(name: "hash_rehash", scope: !737, file: !737, line: 943, type: !840, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12481 = !DILocalVariable(name: "table", arg: 1, scope: !12480, file: !737, line: 943, type: !837)
!12482 = !DILocation(line: 943, column: 26, scope: !12480)
!12483 = !DILocalVariable(name: "candidate", arg: 2, scope: !12480, file: !737, line: 943, type: !52)
!12484 = !DILocation(line: 943, column: 40, scope: !12480)
!12485 = !DILocalVariable(name: "storage", scope: !12480, file: !737, line: 945, type: !735)
!12486 = !DILocation(line: 945, column: 14, scope: !12480)
!12487 = !DILocalVariable(name: "new_table", scope: !12480, file: !737, line: 946, type: !837)
!12488 = !DILocation(line: 946, column: 15, scope: !12480)
!12489 = !DILocalVariable(name: "new_size", scope: !12480, file: !737, line: 947, type: !52)
!12490 = !DILocation(line: 947, column: 10, scope: !12480)
!12491 = !DILocation(line: 947, column: 42, scope: !12480)
!12492 = !DILocation(line: 947, column: 53, scope: !12480)
!12493 = !DILocation(line: 947, column: 60, scope: !12480)
!12494 = !DILocation(line: 947, column: 21, scope: !12480)
!12495 = !DILocation(line: 949, column: 8, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12480, file: !737, line: 949, column: 7)
!12497 = !DILocation(line: 949, column: 7, scope: !12480)
!12498 = !DILocation(line: 950, column: 5, scope: !12496)
!12499 = !DILocation(line: 951, column: 7, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12480, file: !737, line: 951, column: 7)
!12501 = !DILocation(line: 951, column: 19, scope: !12500)
!12502 = !DILocation(line: 951, column: 26, scope: !12500)
!12503 = !DILocation(line: 951, column: 16, scope: !12500)
!12504 = !DILocation(line: 951, column: 7, scope: !12480)
!12505 = !DILocation(line: 952, column: 5, scope: !12500)
!12506 = !DILocation(line: 953, column: 13, scope: !12480)
!12507 = !DILocation(line: 954, column: 31, scope: !12480)
!12508 = !DILocation(line: 954, column: 23, scope: !12480)
!12509 = !DILocation(line: 954, column: 3, scope: !12480)
!12510 = !DILocation(line: 954, column: 14, scope: !12480)
!12511 = !DILocation(line: 954, column: 21, scope: !12480)
!12512 = !DILocation(line: 955, column: 7, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12480, file: !737, line: 955, column: 7)
!12514 = !DILocation(line: 955, column: 18, scope: !12513)
!12515 = !DILocation(line: 955, column: 25, scope: !12513)
!12516 = !DILocation(line: 955, column: 7, scope: !12480)
!12517 = !DILocation(line: 956, column: 5, scope: !12513)
!12518 = !DILocation(line: 957, column: 26, scope: !12480)
!12519 = !DILocation(line: 957, column: 3, scope: !12480)
!12520 = !DILocation(line: 957, column: 14, scope: !12480)
!12521 = !DILocation(line: 957, column: 24, scope: !12480)
!12522 = !DILocation(line: 958, column: 29, scope: !12480)
!12523 = !DILocation(line: 958, column: 40, scope: !12480)
!12524 = !DILocation(line: 958, column: 49, scope: !12480)
!12525 = !DILocation(line: 958, column: 47, scope: !12480)
!12526 = !DILocation(line: 958, column: 3, scope: !12480)
!12527 = !DILocation(line: 958, column: 14, scope: !12480)
!12528 = !DILocation(line: 958, column: 27, scope: !12480)
!12529 = !DILocation(line: 959, column: 3, scope: !12480)
!12530 = !DILocation(line: 959, column: 14, scope: !12480)
!12531 = !DILocation(line: 959, column: 29, scope: !12480)
!12532 = !DILocation(line: 960, column: 3, scope: !12480)
!12533 = !DILocation(line: 960, column: 14, scope: !12480)
!12534 = !DILocation(line: 960, column: 24, scope: !12480)
!12535 = !DILocation(line: 961, column: 23, scope: !12480)
!12536 = !DILocation(line: 961, column: 30, scope: !12480)
!12537 = !DILocation(line: 961, column: 3, scope: !12480)
!12538 = !DILocation(line: 961, column: 14, scope: !12480)
!12539 = !DILocation(line: 961, column: 21, scope: !12480)
!12540 = !DILocation(line: 962, column: 23, scope: !12480)
!12541 = !DILocation(line: 962, column: 30, scope: !12480)
!12542 = !DILocation(line: 962, column: 3, scope: !12480)
!12543 = !DILocation(line: 962, column: 14, scope: !12480)
!12544 = !DILocation(line: 962, column: 21, scope: !12480)
!12545 = !DILocation(line: 963, column: 27, scope: !12480)
!12546 = !DILocation(line: 963, column: 34, scope: !12480)
!12547 = !DILocation(line: 963, column: 3, scope: !12480)
!12548 = !DILocation(line: 963, column: 14, scope: !12480)
!12549 = !DILocation(line: 963, column: 25, scope: !12480)
!12550 = !DILocation(line: 964, column: 27, scope: !12480)
!12551 = !DILocation(line: 964, column: 34, scope: !12480)
!12552 = !DILocation(line: 964, column: 3, scope: !12480)
!12553 = !DILocation(line: 964, column: 14, scope: !12480)
!12554 = !DILocation(line: 964, column: 25, scope: !12480)
!12555 = !DILocation(line: 984, column: 32, scope: !12480)
!12556 = !DILocation(line: 984, column: 39, scope: !12480)
!12557 = !DILocation(line: 984, column: 3, scope: !12480)
!12558 = !DILocation(line: 984, column: 14, scope: !12480)
!12559 = !DILocation(line: 984, column: 30, scope: !12480)
!12560 = !DILocation(line: 986, column: 25, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12480, file: !737, line: 986, column: 7)
!12562 = !DILocation(line: 986, column: 36, scope: !12561)
!12563 = !DILocation(line: 986, column: 7, scope: !12561)
!12564 = !DILocation(line: 986, column: 7, scope: !12480)
!12565 = !DILocation(line: 989, column: 13, scope: !12566)
!12566 = distinct !DILexicalBlock(scope: !12561, file: !737, line: 987, column: 5)
!12567 = !DILocation(line: 989, column: 20, scope: !12566)
!12568 = !DILocation(line: 989, column: 7, scope: !12566)
!12569 = !DILocation(line: 990, column: 23, scope: !12566)
!12570 = !DILocation(line: 990, column: 34, scope: !12566)
!12571 = !DILocation(line: 990, column: 7, scope: !12566)
!12572 = !DILocation(line: 990, column: 14, scope: !12566)
!12573 = !DILocation(line: 990, column: 21, scope: !12566)
!12574 = !DILocation(line: 991, column: 29, scope: !12566)
!12575 = !DILocation(line: 991, column: 40, scope: !12566)
!12576 = !DILocation(line: 991, column: 7, scope: !12566)
!12577 = !DILocation(line: 991, column: 14, scope: !12566)
!12578 = !DILocation(line: 991, column: 27, scope: !12566)
!12579 = !DILocation(line: 992, column: 26, scope: !12566)
!12580 = !DILocation(line: 992, column: 37, scope: !12566)
!12581 = !DILocation(line: 992, column: 7, scope: !12566)
!12582 = !DILocation(line: 992, column: 14, scope: !12566)
!12583 = !DILocation(line: 992, column: 24, scope: !12566)
!12584 = !DILocation(line: 993, column: 31, scope: !12566)
!12585 = !DILocation(line: 993, column: 42, scope: !12566)
!12586 = !DILocation(line: 993, column: 7, scope: !12566)
!12587 = !DILocation(line: 993, column: 14, scope: !12566)
!12588 = !DILocation(line: 993, column: 29, scope: !12566)
!12589 = !DILocation(line: 994, column: 32, scope: !12566)
!12590 = !DILocation(line: 994, column: 43, scope: !12566)
!12591 = !DILocation(line: 994, column: 7, scope: !12566)
!12592 = !DILocation(line: 994, column: 14, scope: !12566)
!12593 = !DILocation(line: 994, column: 30, scope: !12566)
!12594 = !DILocation(line: 996, column: 7, scope: !12566)
!12595 = !DILocation(line: 1012, column: 28, scope: !12480)
!12596 = !DILocation(line: 1012, column: 39, scope: !12480)
!12597 = !DILocation(line: 1012, column: 3, scope: !12480)
!12598 = !DILocation(line: 1012, column: 10, scope: !12480)
!12599 = !DILocation(line: 1012, column: 26, scope: !12480)
!12600 = !DILocation(line: 1013, column: 28, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12480, file: !737, line: 1013, column: 7)
!12602 = !DILocation(line: 1013, column: 35, scope: !12601)
!12603 = !DILocation(line: 1013, column: 10, scope: !12601)
!12604 = !DILocation(line: 1014, column: 10, scope: !12601)
!12605 = !DILocation(line: 1014, column: 31, scope: !12601)
!12606 = !DILocation(line: 1014, column: 38, scope: !12601)
!12607 = !DILocation(line: 1014, column: 13, scope: !12601)
!12608 = !DILocation(line: 1013, column: 7, scope: !12480)
!12609 = !DILocation(line: 1015, column: 5, scope: !12601)
!12610 = !DILocation(line: 1017, column: 9, scope: !12480)
!12611 = !DILocation(line: 1017, column: 20, scope: !12480)
!12612 = !DILocation(line: 1017, column: 3, scope: !12480)
!12613 = !DILocation(line: 1018, column: 3, scope: !12480)
!12614 = !DILocation(line: 1019, column: 1, scope: !12480)
!12615 = distinct !DISubprogram(name: "transfer_entries", scope: !737, file: !737, line: 860, type: !857, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12616 = !DILocalVariable(name: "dst", arg: 1, scope: !12615, file: !737, line: 860, type: !837)
!12617 = !DILocation(line: 860, column: 31, scope: !12615)
!12618 = !DILocalVariable(name: "src", arg: 2, scope: !12615, file: !737, line: 860, type: !837)
!12619 = !DILocation(line: 860, column: 48, scope: !12615)
!12620 = !DILocalVariable(name: "safe", arg: 3, scope: !12615, file: !737, line: 860, type: !117)
!12621 = !DILocation(line: 860, column: 58, scope: !12615)
!12622 = !DILocalVariable(name: "bucket", scope: !12615, file: !737, line: 862, type: !740)
!12623 = !DILocation(line: 862, column: 22, scope: !12615)
!12624 = !DILocalVariable(name: "cursor", scope: !12615, file: !737, line: 863, type: !740)
!12625 = !DILocation(line: 863, column: 22, scope: !12615)
!12626 = !DILocalVariable(name: "next", scope: !12615, file: !737, line: 864, type: !740)
!12627 = !DILocation(line: 864, column: 22, scope: !12615)
!12628 = !DILocation(line: 865, column: 17, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12615, file: !737, line: 865, column: 3)
!12630 = !DILocation(line: 865, column: 22, scope: !12629)
!12631 = !DILocation(line: 865, column: 15, scope: !12629)
!12632 = !DILocation(line: 865, column: 8, scope: !12629)
!12633 = !DILocation(line: 865, column: 30, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12629, file: !737, line: 865, column: 3)
!12635 = !DILocation(line: 865, column: 39, scope: !12634)
!12636 = !DILocation(line: 865, column: 44, scope: !12634)
!12637 = !DILocation(line: 865, column: 37, scope: !12634)
!12638 = !DILocation(line: 865, column: 3, scope: !12629)
!12639 = !DILocation(line: 866, column: 9, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12634, file: !737, line: 866, column: 9)
!12641 = !DILocation(line: 866, column: 17, scope: !12640)
!12642 = !DILocation(line: 866, column: 9, scope: !12634)
!12643 = !DILocalVariable(name: "data", scope: !12644, file: !737, line: 868, type: !47)
!12644 = distinct !DILexicalBlock(scope: !12640, file: !737, line: 867, column: 7)
!12645 = !DILocation(line: 868, column: 15, scope: !12644)
!12646 = !DILocalVariable(name: "new_bucket", scope: !12644, file: !737, line: 869, type: !740)
!12647 = !DILocation(line: 869, column: 28, scope: !12644)
!12648 = !DILocation(line: 877, column: 23, scope: !12649)
!12649 = distinct !DILexicalBlock(scope: !12644, file: !737, line: 877, column: 9)
!12650 = !DILocation(line: 877, column: 31, scope: !12649)
!12651 = !DILocation(line: 877, column: 21, scope: !12649)
!12652 = !DILocation(line: 877, column: 14, scope: !12649)
!12653 = !DILocation(line: 877, column: 37, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12649, file: !737, line: 877, column: 9)
!12655 = !DILocation(line: 877, column: 9, scope: !12649)
!12656 = !DILocation(line: 879, column: 20, scope: !12657)
!12657 = distinct !DILexicalBlock(scope: !12654, file: !737, line: 878, column: 11)
!12658 = !DILocation(line: 879, column: 28, scope: !12657)
!12659 = !DILocation(line: 879, column: 18, scope: !12657)
!12660 = !DILocation(line: 880, column: 39, scope: !12657)
!12661 = !DILocation(line: 880, column: 44, scope: !12657)
!12662 = !DILocation(line: 880, column: 26, scope: !12657)
!12663 = !DILocation(line: 880, column: 24, scope: !12657)
!12664 = !DILocation(line: 882, column: 20, scope: !12657)
!12665 = !DILocation(line: 882, column: 28, scope: !12657)
!12666 = !DILocation(line: 882, column: 18, scope: !12657)
!12667 = !DILocation(line: 884, column: 17, scope: !12668)
!12668 = distinct !DILexicalBlock(scope: !12657, file: !737, line: 884, column: 17)
!12669 = !DILocation(line: 884, column: 29, scope: !12668)
!12670 = !DILocation(line: 884, column: 17, scope: !12657)
!12671 = !DILocation(line: 888, column: 32, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12668, file: !737, line: 885, column: 15)
!12673 = !DILocation(line: 888, column: 44, scope: !12672)
!12674 = !DILocation(line: 888, column: 17, scope: !12672)
!12675 = !DILocation(line: 888, column: 25, scope: !12672)
!12676 = !DILocation(line: 888, column: 30, scope: !12672)
!12677 = !DILocation(line: 889, column: 36, scope: !12672)
!12678 = !DILocation(line: 889, column: 17, scope: !12672)
!12679 = !DILocation(line: 889, column: 29, scope: !12672)
!12680 = !DILocation(line: 889, column: 34, scope: !12672)
!12681 = !DILocation(line: 890, column: 15, scope: !12672)
!12682 = !DILocation(line: 895, column: 36, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12668, file: !737, line: 892, column: 15)
!12684 = !DILocation(line: 895, column: 17, scope: !12683)
!12685 = !DILocation(line: 895, column: 29, scope: !12683)
!12686 = !DILocation(line: 895, column: 34, scope: !12683)
!12687 = !DILocation(line: 896, column: 17, scope: !12683)
!12688 = !DILocation(line: 896, column: 22, scope: !12683)
!12689 = !DILocation(line: 896, column: 36, scope: !12683)
!12690 = !DILocation(line: 897, column: 29, scope: !12683)
!12691 = !DILocation(line: 897, column: 34, scope: !12683)
!12692 = !DILocation(line: 897, column: 17, scope: !12683)
!12693 = !DILocation(line: 899, column: 11, scope: !12657)
!12694 = !DILocation(line: 877, column: 54, scope: !12654)
!12695 = !DILocation(line: 877, column: 52, scope: !12654)
!12696 = !DILocation(line: 877, column: 9, scope: !12654)
!12697 = distinct !{!12697, !12655, !12698}
!12698 = !DILocation(line: 899, column: 11, scope: !12649)
!12699 = !DILocation(line: 903, column: 16, scope: !12644)
!12700 = !DILocation(line: 903, column: 24, scope: !12644)
!12701 = !DILocation(line: 903, column: 14, scope: !12644)
!12702 = !DILocation(line: 904, column: 9, scope: !12644)
!12703 = !DILocation(line: 904, column: 17, scope: !12644)
!12704 = !DILocation(line: 904, column: 22, scope: !12644)
!12705 = !DILocation(line: 905, column: 13, scope: !12706)
!12706 = distinct !DILexicalBlock(scope: !12644, file: !737, line: 905, column: 13)
!12707 = !DILocation(line: 905, column: 13, scope: !12644)
!12708 = !DILocation(line: 906, column: 11, scope: !12706)
!12709 = !DILocation(line: 907, column: 35, scope: !12644)
!12710 = !DILocation(line: 907, column: 40, scope: !12644)
!12711 = !DILocation(line: 907, column: 22, scope: !12644)
!12712 = !DILocation(line: 907, column: 20, scope: !12644)
!12713 = !DILocation(line: 909, column: 13, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12644, file: !737, line: 909, column: 13)
!12715 = !DILocation(line: 909, column: 25, scope: !12714)
!12716 = !DILocation(line: 909, column: 13, scope: !12644)
!12717 = !DILocalVariable(name: "new_entry", scope: !12718, file: !737, line: 913, type: !740)
!12718 = distinct !DILexicalBlock(scope: !12714, file: !737, line: 910, column: 11)
!12719 = !DILocation(line: 913, column: 32, scope: !12718)
!12720 = !DILocation(line: 913, column: 60, scope: !12718)
!12721 = !DILocation(line: 913, column: 44, scope: !12718)
!12722 = !DILocation(line: 915, column: 17, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12718, file: !737, line: 915, column: 17)
!12724 = !DILocation(line: 915, column: 27, scope: !12723)
!12725 = !DILocation(line: 915, column: 17, scope: !12718)
!12726 = !DILocation(line: 916, column: 15, scope: !12723)
!12727 = !DILocation(line: 918, column: 31, scope: !12718)
!12728 = !DILocation(line: 918, column: 13, scope: !12718)
!12729 = !DILocation(line: 918, column: 24, scope: !12718)
!12730 = !DILocation(line: 918, column: 29, scope: !12718)
!12731 = !DILocation(line: 919, column: 31, scope: !12718)
!12732 = !DILocation(line: 919, column: 43, scope: !12718)
!12733 = !DILocation(line: 919, column: 13, scope: !12718)
!12734 = !DILocation(line: 919, column: 24, scope: !12718)
!12735 = !DILocation(line: 919, column: 29, scope: !12718)
!12736 = !DILocation(line: 920, column: 32, scope: !12718)
!12737 = !DILocation(line: 920, column: 13, scope: !12718)
!12738 = !DILocation(line: 920, column: 25, scope: !12718)
!12739 = !DILocation(line: 920, column: 30, scope: !12718)
!12740 = !DILocation(line: 921, column: 11, scope: !12718)
!12741 = !DILocation(line: 925, column: 32, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12714, file: !737, line: 923, column: 11)
!12743 = !DILocation(line: 925, column: 13, scope: !12742)
!12744 = !DILocation(line: 925, column: 25, scope: !12742)
!12745 = !DILocation(line: 925, column: 30, scope: !12742)
!12746 = !DILocation(line: 926, column: 13, scope: !12742)
!12747 = !DILocation(line: 926, column: 18, scope: !12742)
!12748 = !DILocation(line: 926, column: 32, scope: !12742)
!12749 = !DILocation(line: 928, column: 9, scope: !12644)
!12750 = !DILocation(line: 928, column: 17, scope: !12644)
!12751 = !DILocation(line: 928, column: 22, scope: !12644)
!12752 = !DILocation(line: 929, column: 9, scope: !12644)
!12753 = !DILocation(line: 929, column: 14, scope: !12644)
!12754 = !DILocation(line: 929, column: 28, scope: !12644)
!12755 = !DILocation(line: 930, column: 7, scope: !12644)
!12756 = !DILocation(line: 865, column: 64, scope: !12634)
!12757 = !DILocation(line: 865, column: 3, scope: !12634)
!12758 = distinct !{!12758, !12638, !12759}
!12759 = !DILocation(line: 930, column: 7, scope: !12629)
!12760 = !DILocation(line: 931, column: 3, scope: !12615)
!12761 = !DILocation(line: 932, column: 1, scope: !12615)
!12762 = distinct !DISubprogram(name: "free_entry", scope: !737, file: !737, line: 776, type: !859, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12763 = !DILocalVariable(name: "table", arg: 1, scope: !12762, file: !737, line: 776, type: !837)
!12764 = !DILocation(line: 776, column: 25, scope: !12762)
!12765 = !DILocalVariable(name: "entry", arg: 2, scope: !12762, file: !737, line: 776, type: !740)
!12766 = !DILocation(line: 776, column: 51, scope: !12762)
!12767 = !DILocation(line: 778, column: 3, scope: !12762)
!12768 = !DILocation(line: 778, column: 10, scope: !12762)
!12769 = !DILocation(line: 778, column: 15, scope: !12762)
!12770 = !DILocation(line: 779, column: 17, scope: !12762)
!12771 = !DILocation(line: 779, column: 24, scope: !12762)
!12772 = !DILocation(line: 779, column: 3, scope: !12762)
!12773 = !DILocation(line: 779, column: 10, scope: !12762)
!12774 = !DILocation(line: 779, column: 15, scope: !12762)
!12775 = !DILocation(line: 780, column: 28, scope: !12762)
!12776 = !DILocation(line: 780, column: 3, scope: !12762)
!12777 = !DILocation(line: 780, column: 10, scope: !12762)
!12778 = !DILocation(line: 780, column: 26, scope: !12762)
!12779 = !DILocation(line: 781, column: 1, scope: !12762)
!12780 = distinct !DISubprogram(name: "allocate_entry", scope: !737, file: !737, line: 751, type: !864, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12781 = !DILocalVariable(name: "table", arg: 1, scope: !12780, file: !737, line: 751, type: !837)
!12782 = !DILocation(line: 751, column: 29, scope: !12780)
!12783 = !DILocalVariable(name: "new", scope: !12780, file: !737, line: 753, type: !740)
!12784 = !DILocation(line: 753, column: 22, scope: !12780)
!12785 = !DILocation(line: 755, column: 7, scope: !12786)
!12786 = distinct !DILexicalBlock(scope: !12780, file: !737, line: 755, column: 7)
!12787 = !DILocation(line: 755, column: 14, scope: !12786)
!12788 = !DILocation(line: 755, column: 7, scope: !12780)
!12789 = !DILocation(line: 757, column: 13, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12786, file: !737, line: 756, column: 5)
!12791 = !DILocation(line: 757, column: 20, scope: !12790)
!12792 = !DILocation(line: 757, column: 11, scope: !12790)
!12793 = !DILocation(line: 758, column: 32, scope: !12790)
!12794 = !DILocation(line: 758, column: 37, scope: !12790)
!12795 = !DILocation(line: 758, column: 7, scope: !12790)
!12796 = !DILocation(line: 758, column: 14, scope: !12790)
!12797 = !DILocation(line: 758, column: 30, scope: !12790)
!12798 = !DILocation(line: 759, column: 5, scope: !12790)
!12799 = !DILocation(line: 765, column: 13, scope: !12800)
!12800 = distinct !DILexicalBlock(scope: !12786, file: !737, line: 761, column: 5)
!12801 = !DILocation(line: 765, column: 11, scope: !12800)
!12802 = !DILocation(line: 769, column: 10, scope: !12780)
!12803 = !DILocation(line: 769, column: 3, scope: !12780)
!12804 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !737, file: !737, line: 1038, type: !842, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12805 = !DILocalVariable(name: "table", arg: 1, scope: !12804, file: !737, line: 1038, type: !837)
!12806 = !DILocation(line: 1038, column: 36, scope: !12804)
!12807 = !DILocalVariable(name: "entry", arg: 2, scope: !12804, file: !737, line: 1038, type: !428)
!12808 = !DILocation(line: 1038, column: 55, scope: !12804)
!12809 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12804, file: !737, line: 1039, type: !844)
!12810 = !DILocation(line: 1039, column: 37, scope: !12804)
!12811 = !DILocalVariable(name: "data", scope: !12804, file: !737, line: 1041, type: !47)
!12812 = !DILocation(line: 1041, column: 9, scope: !12804)
!12813 = !DILocalVariable(name: "bucket", scope: !12804, file: !737, line: 1042, type: !740)
!12814 = !DILocation(line: 1042, column: 22, scope: !12804)
!12815 = !DILocation(line: 1047, column: 9, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12804, file: !737, line: 1047, column: 7)
!12817 = !DILocation(line: 1047, column: 7, scope: !12804)
!12818 = !DILocation(line: 1048, column: 5, scope: !12816)
!12819 = !DILocation(line: 1051, column: 32, scope: !12820)
!12820 = distinct !DILexicalBlock(scope: !12804, file: !737, line: 1051, column: 7)
!12821 = !DILocation(line: 1051, column: 39, scope: !12820)
!12822 = !DILocation(line: 1051, column: 15, scope: !12820)
!12823 = !DILocation(line: 1051, column: 13, scope: !12820)
!12824 = !DILocation(line: 1051, column: 63, scope: !12820)
!12825 = !DILocation(line: 1051, column: 7, scope: !12804)
!12826 = !DILocation(line: 1053, column: 11, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12828, file: !737, line: 1053, column: 11)
!12828 = distinct !DILexicalBlock(scope: !12820, file: !737, line: 1052, column: 5)
!12829 = !DILocation(line: 1053, column: 11, scope: !12828)
!12830 = !DILocation(line: 1054, column: 24, scope: !12827)
!12831 = !DILocation(line: 1054, column: 10, scope: !12827)
!12832 = !DILocation(line: 1054, column: 22, scope: !12827)
!12833 = !DILocation(line: 1054, column: 9, scope: !12827)
!12834 = !DILocation(line: 1055, column: 7, scope: !12828)
!12835 = !DILocation(line: 1063, column: 7, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12804, file: !737, line: 1063, column: 7)
!12837 = !DILocation(line: 1063, column: 14, scope: !12836)
!12838 = !DILocation(line: 1064, column: 9, scope: !12836)
!12839 = !DILocation(line: 1064, column: 16, scope: !12836)
!12840 = !DILocation(line: 1064, column: 24, scope: !12836)
!12841 = !DILocation(line: 1064, column: 43, scope: !12836)
!12842 = !DILocation(line: 1064, column: 50, scope: !12836)
!12843 = !DILocation(line: 1064, column: 41, scope: !12836)
!12844 = !DILocation(line: 1064, column: 7, scope: !12836)
!12845 = !DILocation(line: 1063, column: 7, scope: !12804)
!12846 = !DILocation(line: 1068, column: 21, scope: !12847)
!12847 = distinct !DILexicalBlock(scope: !12836, file: !737, line: 1065, column: 5)
!12848 = !DILocation(line: 1068, column: 7, scope: !12847)
!12849 = !DILocation(line: 1069, column: 11, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12847, file: !737, line: 1069, column: 11)
!12851 = !DILocation(line: 1069, column: 18, scope: !12850)
!12852 = !DILocation(line: 1070, column: 13, scope: !12850)
!12853 = !DILocation(line: 1070, column: 20, scope: !12850)
!12854 = !DILocation(line: 1070, column: 28, scope: !12850)
!12855 = !DILocation(line: 1070, column: 47, scope: !12850)
!12856 = !DILocation(line: 1070, column: 54, scope: !12850)
!12857 = !DILocation(line: 1070, column: 45, scope: !12850)
!12858 = !DILocation(line: 1070, column: 11, scope: !12850)
!12859 = !DILocation(line: 1069, column: 11, scope: !12847)
!12860 = !DILocalVariable(name: "tuning", scope: !12861, file: !737, line: 1072, type: !752)
!12861 = distinct !DILexicalBlock(scope: !12850, file: !737, line: 1071, column: 9)
!12862 = !DILocation(line: 1072, column: 30, scope: !12861)
!12863 = !DILocation(line: 1072, column: 39, scope: !12861)
!12864 = !DILocation(line: 1072, column: 46, scope: !12861)
!12865 = !DILocalVariable(name: "candidate", scope: !12861, file: !737, line: 1073, type: !758)
!12866 = !DILocation(line: 1073, column: 17, scope: !12861)
!12867 = !DILocation(line: 1074, column: 14, scope: !12861)
!12868 = !DILocation(line: 1074, column: 22, scope: !12861)
!12869 = !DILocation(line: 1075, column: 17, scope: !12861)
!12870 = !DILocation(line: 1075, column: 24, scope: !12861)
!12871 = !DILocation(line: 1075, column: 36, scope: !12861)
!12872 = !DILocation(line: 1075, column: 44, scope: !12861)
!12873 = !DILocation(line: 1075, column: 34, scope: !12861)
!12874 = !DILocation(line: 1076, column: 17, scope: !12861)
!12875 = !DILocation(line: 1076, column: 24, scope: !12861)
!12876 = !DILocation(line: 1076, column: 36, scope: !12861)
!12877 = !DILocation(line: 1076, column: 44, scope: !12861)
!12878 = !DILocation(line: 1076, column: 34, scope: !12861)
!12879 = !DILocation(line: 1077, column: 19, scope: !12861)
!12880 = !DILocation(line: 1077, column: 27, scope: !12861)
!12881 = !DILocation(line: 1077, column: 17, scope: !12861)
!12882 = !DILocation(line: 1079, column: 27, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12861, file: !737, line: 1079, column: 15)
!12884 = !DILocation(line: 1079, column: 24, scope: !12883)
!12885 = !DILocation(line: 1079, column: 15, scope: !12861)
!12886 = !DILocation(line: 1080, column: 13, scope: !12883)
!12887 = !DILocation(line: 1083, column: 29, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12861, file: !737, line: 1083, column: 15)
!12889 = !DILocation(line: 1083, column: 36, scope: !12888)
!12890 = !DILocation(line: 1083, column: 16, scope: !12888)
!12891 = !DILocation(line: 1083, column: 15, scope: !12861)
!12892 = !DILocation(line: 1084, column: 13, scope: !12888)
!12893 = !DILocation(line: 1087, column: 32, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12861, file: !737, line: 1087, column: 15)
!12895 = !DILocation(line: 1087, column: 39, scope: !12894)
!12896 = !DILocation(line: 1087, column: 15, scope: !12894)
!12897 = !DILocation(line: 1087, column: 62, scope: !12894)
!12898 = !DILocation(line: 1087, column: 15, scope: !12861)
!12899 = !DILocation(line: 1088, column: 13, scope: !12894)
!12900 = !DILocation(line: 1089, column: 9, scope: !12861)
!12901 = !DILocation(line: 1090, column: 5, scope: !12847)
!12902 = !DILocation(line: 1094, column: 7, scope: !12903)
!12903 = distinct !DILexicalBlock(scope: !12804, file: !737, line: 1094, column: 7)
!12904 = !DILocation(line: 1094, column: 15, scope: !12903)
!12905 = !DILocation(line: 1094, column: 7, scope: !12804)
!12906 = !DILocalVariable(name: "new_entry", scope: !12907, file: !737, line: 1096, type: !740)
!12907 = distinct !DILexicalBlock(scope: !12903, file: !737, line: 1095, column: 5)
!12908 = !DILocation(line: 1096, column: 26, scope: !12907)
!12909 = !DILocation(line: 1096, column: 54, scope: !12907)
!12910 = !DILocation(line: 1096, column: 38, scope: !12907)
!12911 = !DILocation(line: 1098, column: 11, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12907, file: !737, line: 1098, column: 11)
!12913 = !DILocation(line: 1098, column: 21, scope: !12912)
!12914 = !DILocation(line: 1098, column: 11, scope: !12907)
!12915 = !DILocation(line: 1099, column: 9, scope: !12912)
!12916 = !DILocation(line: 1103, column: 34, scope: !12907)
!12917 = !DILocation(line: 1103, column: 7, scope: !12907)
!12918 = !DILocation(line: 1103, column: 18, scope: !12907)
!12919 = !DILocation(line: 1103, column: 23, scope: !12907)
!12920 = !DILocation(line: 1104, column: 25, scope: !12907)
!12921 = !DILocation(line: 1104, column: 33, scope: !12907)
!12922 = !DILocation(line: 1104, column: 7, scope: !12907)
!12923 = !DILocation(line: 1104, column: 18, scope: !12907)
!12924 = !DILocation(line: 1104, column: 23, scope: !12907)
!12925 = !DILocation(line: 1105, column: 22, scope: !12907)
!12926 = !DILocation(line: 1105, column: 7, scope: !12907)
!12927 = !DILocation(line: 1105, column: 15, scope: !12907)
!12928 = !DILocation(line: 1105, column: 20, scope: !12907)
!12929 = !DILocation(line: 1106, column: 7, scope: !12907)
!12930 = !DILocation(line: 1106, column: 14, scope: !12907)
!12931 = !DILocation(line: 1106, column: 23, scope: !12907)
!12932 = !DILocation(line: 1107, column: 7, scope: !12907)
!12933 = !DILocation(line: 1112, column: 27, scope: !12804)
!12934 = !DILocation(line: 1112, column: 3, scope: !12804)
!12935 = !DILocation(line: 1112, column: 11, scope: !12804)
!12936 = !DILocation(line: 1112, column: 16, scope: !12804)
!12937 = !DILocation(line: 1113, column: 3, scope: !12804)
!12938 = !DILocation(line: 1113, column: 10, scope: !12804)
!12939 = !DILocation(line: 1113, column: 19, scope: !12804)
!12940 = !DILocation(line: 1114, column: 3, scope: !12804)
!12941 = !DILocation(line: 1114, column: 10, scope: !12804)
!12942 = !DILocation(line: 1114, column: 24, scope: !12804)
!12943 = !DILocation(line: 1116, column: 3, scope: !12804)
!12944 = !DILocation(line: 1117, column: 1, scope: !12804)
!12945 = distinct !DISubprogram(name: "hash_find_entry", scope: !737, file: !737, line: 790, type: !861, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !728, retainedNodes: !140)
!12946 = !DILocalVariable(name: "table", arg: 1, scope: !12945, file: !737, line: 790, type: !837)
!12947 = !DILocation(line: 790, column: 30, scope: !12945)
!12948 = !DILocalVariable(name: "entry", arg: 2, scope: !12945, file: !737, line: 790, type: !428)
!12949 = !DILocation(line: 790, column: 49, scope: !12945)
!12950 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12945, file: !737, line: 791, type: !863)
!12951 = !DILocation(line: 791, column: 38, scope: !12945)
!12952 = !DILocalVariable(name: "delete", arg: 4, scope: !12945, file: !737, line: 791, type: !117)
!12953 = !DILocation(line: 791, column: 56, scope: !12945)
!12954 = !DILocalVariable(name: "bucket", scope: !12945, file: !737, line: 793, type: !740)
!12955 = !DILocation(line: 793, column: 22, scope: !12945)
!12956 = !DILocation(line: 793, column: 44, scope: !12945)
!12957 = !DILocation(line: 793, column: 51, scope: !12945)
!12958 = !DILocation(line: 793, column: 31, scope: !12945)
!12959 = !DILocalVariable(name: "cursor", scope: !12945, file: !737, line: 794, type: !740)
!12960 = !DILocation(line: 794, column: 22, scope: !12945)
!12961 = !DILocation(line: 796, column: 18, scope: !12945)
!12962 = !DILocation(line: 796, column: 4, scope: !12945)
!12963 = !DILocation(line: 796, column: 16, scope: !12945)
!12964 = !DILocation(line: 799, column: 7, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12945, file: !737, line: 799, column: 7)
!12966 = !DILocation(line: 799, column: 15, scope: !12965)
!12967 = !DILocation(line: 799, column: 20, scope: !12965)
!12968 = !DILocation(line: 799, column: 7, scope: !12945)
!12969 = !DILocation(line: 800, column: 5, scope: !12965)
!12970 = !DILocation(line: 803, column: 7, scope: !12971)
!12971 = distinct !DILexicalBlock(scope: !12945, file: !737, line: 803, column: 7)
!12972 = !DILocation(line: 803, column: 16, scope: !12971)
!12973 = !DILocation(line: 803, column: 24, scope: !12971)
!12974 = !DILocation(line: 803, column: 13, scope: !12971)
!12975 = !DILocation(line: 803, column: 29, scope: !12971)
!12976 = !DILocation(line: 803, column: 32, scope: !12971)
!12977 = !DILocation(line: 803, column: 39, scope: !12971)
!12978 = !DILocation(line: 803, column: 51, scope: !12971)
!12979 = !DILocation(line: 803, column: 58, scope: !12971)
!12980 = !DILocation(line: 803, column: 66, scope: !12971)
!12981 = !DILocation(line: 803, column: 7, scope: !12945)
!12982 = !DILocalVariable(name: "data", scope: !12983, file: !737, line: 805, type: !47)
!12983 = distinct !DILexicalBlock(scope: !12971, file: !737, line: 804, column: 5)
!12984 = !DILocation(line: 805, column: 13, scope: !12983)
!12985 = !DILocation(line: 805, column: 20, scope: !12983)
!12986 = !DILocation(line: 805, column: 28, scope: !12983)
!12987 = !DILocation(line: 807, column: 11, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12983, file: !737, line: 807, column: 11)
!12989 = !DILocation(line: 807, column: 11, scope: !12983)
!12990 = !DILocation(line: 809, column: 15, scope: !12991)
!12991 = distinct !DILexicalBlock(scope: !12992, file: !737, line: 809, column: 15)
!12992 = distinct !DILexicalBlock(scope: !12988, file: !737, line: 808, column: 9)
!12993 = !DILocation(line: 809, column: 23, scope: !12991)
!12994 = !DILocation(line: 809, column: 15, scope: !12992)
!12995 = !DILocalVariable(name: "next", scope: !12996, file: !737, line: 811, type: !740)
!12996 = distinct !DILexicalBlock(scope: !12991, file: !737, line: 810, column: 13)
!12997 = !DILocation(line: 811, column: 34, scope: !12996)
!12998 = !DILocation(line: 811, column: 41, scope: !12996)
!12999 = !DILocation(line: 811, column: 49, scope: !12996)
!13000 = !DILocation(line: 815, column: 16, scope: !12996)
!13001 = !DILocation(line: 815, column: 26, scope: !12996)
!13002 = !DILocation(line: 815, column: 25, scope: !12996)
!13003 = !{i64 0, i64 8, !2993, i64 8, i64 8, !2993}
!13004 = !DILocation(line: 816, column: 27, scope: !12996)
!13005 = !DILocation(line: 816, column: 34, scope: !12996)
!13006 = !DILocation(line: 816, column: 15, scope: !12996)
!13007 = !DILocation(line: 817, column: 13, scope: !12996)
!13008 = !DILocation(line: 820, column: 15, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !12991, file: !737, line: 819, column: 13)
!13010 = !DILocation(line: 820, column: 23, scope: !13009)
!13011 = !DILocation(line: 820, column: 28, scope: !13009)
!13012 = !DILocation(line: 822, column: 9, scope: !12992)
!13013 = !DILocation(line: 824, column: 14, scope: !12983)
!13014 = !DILocation(line: 824, column: 7, scope: !12983)
!13015 = !DILocation(line: 828, column: 17, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !12945, file: !737, line: 828, column: 3)
!13017 = !DILocation(line: 828, column: 15, scope: !13016)
!13018 = !DILocation(line: 828, column: 8, scope: !13016)
!13019 = !DILocation(line: 828, column: 25, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !13016, file: !737, line: 828, column: 3)
!13021 = !DILocation(line: 828, column: 33, scope: !13020)
!13022 = !DILocation(line: 828, column: 3, scope: !13016)
!13023 = !DILocation(line: 830, column: 11, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13025, file: !737, line: 830, column: 11)
!13025 = distinct !DILexicalBlock(scope: !13020, file: !737, line: 829, column: 5)
!13026 = !DILocation(line: 830, column: 20, scope: !13024)
!13027 = !DILocation(line: 830, column: 28, scope: !13024)
!13028 = !DILocation(line: 830, column: 34, scope: !13024)
!13029 = !DILocation(line: 830, column: 17, scope: !13024)
!13030 = !DILocation(line: 831, column: 11, scope: !13024)
!13031 = !DILocation(line: 831, column: 14, scope: !13024)
!13032 = !DILocation(line: 831, column: 21, scope: !13024)
!13033 = !DILocation(line: 831, column: 33, scope: !13024)
!13034 = !DILocation(line: 831, column: 40, scope: !13024)
!13035 = !DILocation(line: 831, column: 48, scope: !13024)
!13036 = !DILocation(line: 831, column: 54, scope: !13024)
!13037 = !DILocation(line: 830, column: 11, scope: !13025)
!13038 = !DILocalVariable(name: "data", scope: !13039, file: !737, line: 833, type: !47)
!13039 = distinct !DILexicalBlock(scope: !13024, file: !737, line: 832, column: 9)
!13040 = !DILocation(line: 833, column: 17, scope: !13039)
!13041 = !DILocation(line: 833, column: 24, scope: !13039)
!13042 = !DILocation(line: 833, column: 32, scope: !13039)
!13043 = !DILocation(line: 833, column: 38, scope: !13039)
!13044 = !DILocation(line: 835, column: 15, scope: !13045)
!13045 = distinct !DILexicalBlock(scope: !13039, file: !737, line: 835, column: 15)
!13046 = !DILocation(line: 835, column: 15, scope: !13039)
!13047 = !DILocalVariable(name: "next", scope: !13048, file: !737, line: 837, type: !740)
!13048 = distinct !DILexicalBlock(scope: !13045, file: !737, line: 836, column: 13)
!13049 = !DILocation(line: 837, column: 34, scope: !13048)
!13050 = !DILocation(line: 837, column: 41, scope: !13048)
!13051 = !DILocation(line: 837, column: 49, scope: !13048)
!13052 = !DILocation(line: 841, column: 30, scope: !13048)
!13053 = !DILocation(line: 841, column: 36, scope: !13048)
!13054 = !DILocation(line: 841, column: 15, scope: !13048)
!13055 = !DILocation(line: 841, column: 23, scope: !13048)
!13056 = !DILocation(line: 841, column: 28, scope: !13048)
!13057 = !DILocation(line: 842, column: 27, scope: !13048)
!13058 = !DILocation(line: 842, column: 34, scope: !13048)
!13059 = !DILocation(line: 842, column: 15, scope: !13048)
!13060 = !DILocation(line: 843, column: 13, scope: !13048)
!13061 = !DILocation(line: 845, column: 18, scope: !13039)
!13062 = !DILocation(line: 845, column: 11, scope: !13039)
!13063 = !DILocation(line: 847, column: 5, scope: !13025)
!13064 = !DILocation(line: 828, column: 48, scope: !13020)
!13065 = !DILocation(line: 828, column: 56, scope: !13020)
!13066 = !DILocation(line: 828, column: 46, scope: !13020)
!13067 = !DILocation(line: 828, column: 3, scope: !13020)
!13068 = distinct !{!13068, !13022, !13069}
!13069 = !DILocation(line: 847, column: 5, scope: !13016)
!13070 = !DILocation(line: 850, column: 3, scope: !12945)
!13071 = !DILocation(line: 851, column: 1, scope: !12945)
!13072 = distinct !DISubprogram(name: "hash_insert", scope: !737, file: !737, line: 1126, type: !845, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!13073 = !DILocalVariable(name: "table", arg: 1, scope: !13072, file: !737, line: 1126, type: !837)
!13074 = !DILocation(line: 1126, column: 26, scope: !13072)
!13075 = !DILocalVariable(name: "entry", arg: 2, scope: !13072, file: !737, line: 1126, type: !428)
!13076 = !DILocation(line: 1126, column: 45, scope: !13072)
!13077 = !DILocalVariable(name: "matched_ent", scope: !13072, file: !737, line: 1128, type: !428)
!13078 = !DILocation(line: 1128, column: 15, scope: !13072)
!13079 = !DILocalVariable(name: "err", scope: !13072, file: !737, line: 1129, type: !5)
!13080 = !DILocation(line: 1129, column: 7, scope: !13072)
!13081 = !DILocation(line: 1129, column: 36, scope: !13072)
!13082 = !DILocation(line: 1129, column: 43, scope: !13072)
!13083 = !DILocation(line: 1129, column: 13, scope: !13072)
!13084 = !DILocation(line: 1130, column: 11, scope: !13072)
!13085 = !DILocation(line: 1130, column: 15, scope: !13072)
!13086 = !DILocation(line: 1132, column: 23, scope: !13072)
!13087 = !DILocation(line: 1132, column: 27, scope: !13072)
!13088 = !DILocation(line: 1132, column: 34, scope: !13072)
!13089 = !DILocation(line: 1132, column: 48, scope: !13072)
!13090 = !DILocation(line: 1130, column: 3, scope: !13072)
!13091 = distinct !DISubprogram(name: "hash_delete", scope: !737, file: !737, line: 1140, type: !845, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !728, retainedNodes: !140)
!13092 = !DILocalVariable(name: "table", arg: 1, scope: !13091, file: !737, line: 1140, type: !837)
!13093 = !DILocation(line: 1140, column: 26, scope: !13091)
!13094 = !DILocalVariable(name: "entry", arg: 2, scope: !13091, file: !737, line: 1140, type: !428)
!13095 = !DILocation(line: 1140, column: 45, scope: !13091)
!13096 = !DILocalVariable(name: "data", scope: !13091, file: !737, line: 1142, type: !47)
!13097 = !DILocation(line: 1142, column: 9, scope: !13091)
!13098 = !DILocalVariable(name: "bucket", scope: !13091, file: !737, line: 1143, type: !740)
!13099 = !DILocation(line: 1143, column: 22, scope: !13091)
!13100 = !DILocation(line: 1145, column: 27, scope: !13091)
!13101 = !DILocation(line: 1145, column: 34, scope: !13091)
!13102 = !DILocation(line: 1145, column: 10, scope: !13091)
!13103 = !DILocation(line: 1145, column: 8, scope: !13091)
!13104 = !DILocation(line: 1146, column: 8, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13091, file: !737, line: 1146, column: 7)
!13106 = !DILocation(line: 1146, column: 7, scope: !13091)
!13107 = !DILocation(line: 1147, column: 5, scope: !13105)
!13108 = !DILocation(line: 1149, column: 3, scope: !13091)
!13109 = !DILocation(line: 1149, column: 10, scope: !13091)
!13110 = !DILocation(line: 1149, column: 19, scope: !13091)
!13111 = !DILocation(line: 1150, column: 8, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13091, file: !737, line: 1150, column: 7)
!13113 = !DILocation(line: 1150, column: 16, scope: !13112)
!13114 = !DILocation(line: 1150, column: 7, scope: !13091)
!13115 = !DILocation(line: 1152, column: 7, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13112, file: !737, line: 1151, column: 5)
!13117 = !DILocation(line: 1152, column: 14, scope: !13116)
!13118 = !DILocation(line: 1152, column: 28, scope: !13116)
!13119 = !DILocation(line: 1157, column: 11, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13116, file: !737, line: 1157, column: 11)
!13121 = !DILocation(line: 1157, column: 18, scope: !13120)
!13122 = !DILocation(line: 1158, column: 13, scope: !13120)
!13123 = !DILocation(line: 1158, column: 20, scope: !13120)
!13124 = !DILocation(line: 1158, column: 28, scope: !13120)
!13125 = !DILocation(line: 1158, column: 47, scope: !13120)
!13126 = !DILocation(line: 1158, column: 54, scope: !13120)
!13127 = !DILocation(line: 1158, column: 45, scope: !13120)
!13128 = !DILocation(line: 1158, column: 11, scope: !13120)
!13129 = !DILocation(line: 1157, column: 11, scope: !13116)
!13130 = !DILocation(line: 1162, column: 25, scope: !13131)
!13131 = distinct !DILexicalBlock(scope: !13120, file: !737, line: 1159, column: 9)
!13132 = !DILocation(line: 1162, column: 11, scope: !13131)
!13133 = !DILocation(line: 1163, column: 15, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !13131, file: !737, line: 1163, column: 15)
!13135 = !DILocation(line: 1163, column: 22, scope: !13134)
!13136 = !DILocation(line: 1164, column: 17, scope: !13134)
!13137 = !DILocation(line: 1164, column: 24, scope: !13134)
!13138 = !DILocation(line: 1164, column: 32, scope: !13134)
!13139 = !DILocation(line: 1164, column: 51, scope: !13134)
!13140 = !DILocation(line: 1164, column: 58, scope: !13134)
!13141 = !DILocation(line: 1164, column: 49, scope: !13134)
!13142 = !DILocation(line: 1164, column: 15, scope: !13134)
!13143 = !DILocation(line: 1163, column: 15, scope: !13131)
!13144 = !DILocalVariable(name: "tuning", scope: !13145, file: !737, line: 1166, type: !752)
!13145 = distinct !DILexicalBlock(scope: !13134, file: !737, line: 1165, column: 13)
!13146 = !DILocation(line: 1166, column: 34, scope: !13145)
!13147 = !DILocation(line: 1166, column: 43, scope: !13145)
!13148 = !DILocation(line: 1166, column: 50, scope: !13145)
!13149 = !DILocalVariable(name: "candidate", scope: !13145, file: !737, line: 1167, type: !52)
!13150 = !DILocation(line: 1167, column: 22, scope: !13145)
!13151 = !DILocation(line: 1168, column: 18, scope: !13145)
!13152 = !DILocation(line: 1168, column: 26, scope: !13145)
!13153 = !DILocation(line: 1169, column: 20, scope: !13145)
!13154 = !DILocation(line: 1169, column: 27, scope: !13145)
!13155 = !DILocation(line: 1169, column: 39, scope: !13145)
!13156 = !DILocation(line: 1169, column: 47, scope: !13145)
!13157 = !DILocation(line: 1169, column: 37, scope: !13145)
!13158 = !DILocation(line: 1170, column: 21, scope: !13145)
!13159 = !DILocation(line: 1170, column: 28, scope: !13145)
!13160 = !DILocation(line: 1170, column: 40, scope: !13145)
!13161 = !DILocation(line: 1170, column: 48, scope: !13145)
!13162 = !DILocation(line: 1170, column: 38, scope: !13145)
!13163 = !DILocation(line: 1171, column: 23, scope: !13145)
!13164 = !DILocation(line: 1171, column: 31, scope: !13145)
!13165 = !DILocation(line: 1171, column: 21, scope: !13145)
!13166 = !DILocation(line: 1168, column: 17, scope: !13145)
!13167 = !DILocation(line: 1173, column: 33, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13145, file: !737, line: 1173, column: 19)
!13169 = !DILocation(line: 1173, column: 40, scope: !13168)
!13170 = !DILocation(line: 1173, column: 20, scope: !13168)
!13171 = !DILocation(line: 1173, column: 19, scope: !13145)
!13172 = !DILocalVariable(name: "cursor", scope: !13173, file: !737, line: 1181, type: !740)
!13173 = distinct !DILexicalBlock(scope: !13168, file: !737, line: 1174, column: 17)
!13174 = !DILocation(line: 1181, column: 38, scope: !13173)
!13175 = !DILocation(line: 1181, column: 47, scope: !13173)
!13176 = !DILocation(line: 1181, column: 54, scope: !13173)
!13177 = !DILocalVariable(name: "next", scope: !13173, file: !737, line: 1182, type: !740)
!13178 = !DILocation(line: 1182, column: 38, scope: !13173)
!13179 = !DILocation(line: 1183, column: 19, scope: !13173)
!13180 = !DILocation(line: 1183, column: 26, scope: !13173)
!13181 = !DILocation(line: 1185, column: 30, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13173, file: !737, line: 1184, column: 21)
!13183 = !DILocation(line: 1185, column: 38, scope: !13182)
!13184 = !DILocation(line: 1185, column: 28, scope: !13182)
!13185 = !DILocation(line: 1186, column: 29, scope: !13182)
!13186 = !DILocation(line: 1186, column: 23, scope: !13182)
!13187 = !DILocation(line: 1187, column: 32, scope: !13182)
!13188 = !DILocation(line: 1187, column: 30, scope: !13182)
!13189 = distinct !{!13189, !13179, !13190}
!13190 = !DILocation(line: 1188, column: 21, scope: !13173)
!13191 = !DILocation(line: 1189, column: 19, scope: !13173)
!13192 = !DILocation(line: 1189, column: 26, scope: !13173)
!13193 = !DILocation(line: 1189, column: 42, scope: !13173)
!13194 = !DILocation(line: 1191, column: 17, scope: !13173)
!13195 = !DILocation(line: 1192, column: 13, scope: !13145)
!13196 = !DILocation(line: 1193, column: 9, scope: !13131)
!13197 = !DILocation(line: 1194, column: 5, scope: !13116)
!13198 = !DILocation(line: 1196, column: 10, scope: !13091)
!13199 = !DILocation(line: 1196, column: 3, scope: !13091)
!13200 = !DILocation(line: 1197, column: 1, scope: !13091)
!13201 = distinct !DISubprogram(name: "triple_hash", scope: !13202, file: !13202, line: 34, type: !520, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1798, retainedNodes: !140)
!13202 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!13203 = !DILocalVariable(name: "x", arg: 1, scope: !13201, file: !13202, line: 34, type: !428)
!13204 = !DILocation(line: 34, column: 26, scope: !13201)
!13205 = !DILocalVariable(name: "table_size", arg: 2, scope: !13201, file: !13202, line: 34, type: !52)
!13206 = !DILocation(line: 34, column: 36, scope: !13201)
!13207 = !DILocalVariable(name: "p", scope: !13201, file: !13202, line: 36, type: !1801)
!13208 = !DILocation(line: 36, column: 26, scope: !13201)
!13209 = !DILocation(line: 36, column: 30, scope: !13201)
!13210 = !DILocalVariable(name: "tmp", scope: !13201, file: !13202, line: 37, type: !52)
!13211 = !DILocation(line: 37, column: 10, scope: !13201)
!13212 = !DILocation(line: 37, column: 26, scope: !13201)
!13213 = !DILocation(line: 37, column: 29, scope: !13201)
!13214 = !DILocation(line: 37, column: 35, scope: !13201)
!13215 = !DILocation(line: 37, column: 16, scope: !13201)
!13216 = !DILocation(line: 40, column: 11, scope: !13201)
!13217 = !DILocation(line: 40, column: 17, scope: !13201)
!13218 = !DILocation(line: 40, column: 20, scope: !13201)
!13219 = !DILocation(line: 40, column: 15, scope: !13201)
!13220 = !DILocation(line: 40, column: 30, scope: !13201)
!13221 = !DILocation(line: 40, column: 28, scope: !13201)
!13222 = !DILocation(line: 40, column: 3, scope: !13201)
!13223 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !13202, file: !13202, line: 45, type: !520, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1798, retainedNodes: !140)
!13224 = !DILocalVariable(name: "x", arg: 1, scope: !13223, file: !13202, line: 45, type: !428)
!13225 = !DILocation(line: 45, column: 34, scope: !13223)
!13226 = !DILocalVariable(name: "table_size", arg: 2, scope: !13223, file: !13202, line: 45, type: !52)
!13227 = !DILocation(line: 45, column: 44, scope: !13223)
!13228 = !DILocalVariable(name: "p", scope: !13223, file: !13202, line: 47, type: !1801)
!13229 = !DILocation(line: 47, column: 26, scope: !13223)
!13230 = !DILocation(line: 47, column: 30, scope: !13223)
!13231 = !DILocation(line: 50, column: 10, scope: !13223)
!13232 = !DILocation(line: 50, column: 13, scope: !13223)
!13233 = !DILocation(line: 50, column: 22, scope: !13223)
!13234 = !DILocation(line: 50, column: 20, scope: !13223)
!13235 = !DILocation(line: 50, column: 3, scope: !13223)
!13236 = distinct !DISubprogram(name: "triple_compare", scope: !13202, file: !13202, line: 55, type: !522, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1798, retainedNodes: !140)
!13237 = !DILocalVariable(name: "x", arg: 1, scope: !13236, file: !13202, line: 55, type: !428)
!13238 = !DILocation(line: 55, column: 29, scope: !13236)
!13239 = !DILocalVariable(name: "y", arg: 2, scope: !13236, file: !13202, line: 55, type: !428)
!13240 = !DILocation(line: 55, column: 44, scope: !13236)
!13241 = !DILocalVariable(name: "a", scope: !13236, file: !13202, line: 57, type: !1801)
!13242 = !DILocation(line: 57, column: 26, scope: !13236)
!13243 = !DILocation(line: 57, column: 30, scope: !13236)
!13244 = !DILocalVariable(name: "b", scope: !13236, file: !13202, line: 58, type: !1801)
!13245 = !DILocation(line: 58, column: 26, scope: !13236)
!13246 = !DILocation(line: 58, column: 30, scope: !13236)
!13247 = !DILocation(line: 59, column: 11, scope: !13236)
!13248 = !DILocation(line: 59, column: 31, scope: !13236)
!13249 = !DILocation(line: 59, column: 45, scope: !13236)
!13250 = !DILocation(line: 59, column: 48, scope: !13236)
!13251 = !DILocation(line: 59, column: 54, scope: !13236)
!13252 = !DILocation(line: 59, column: 57, scope: !13236)
!13253 = !DILocation(line: 59, column: 34, scope: !13236)
!13254 = !DILocation(line: 0, scope: !13236)
!13255 = !DILocation(line: 59, column: 10, scope: !13236)
!13256 = !DILocation(line: 59, column: 3, scope: !13236)
!13257 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !13202, file: !13202, line: 63, type: !522, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1798, retainedNodes: !140)
!13258 = !DILocalVariable(name: "x", arg: 1, scope: !13257, file: !13202, line: 63, type: !428)
!13259 = !DILocation(line: 63, column: 37, scope: !13257)
!13260 = !DILocalVariable(name: "y", arg: 2, scope: !13257, file: !13202, line: 63, type: !428)
!13261 = !DILocation(line: 63, column: 52, scope: !13257)
!13262 = !DILocalVariable(name: "a", scope: !13257, file: !13202, line: 65, type: !1801)
!13263 = !DILocation(line: 65, column: 26, scope: !13257)
!13264 = !DILocation(line: 65, column: 30, scope: !13257)
!13265 = !DILocalVariable(name: "b", scope: !13257, file: !13202, line: 66, type: !1801)
!13266 = !DILocation(line: 66, column: 26, scope: !13257)
!13267 = !DILocation(line: 66, column: 30, scope: !13257)
!13268 = !DILocation(line: 67, column: 11, scope: !13257)
!13269 = !DILocation(line: 67, column: 31, scope: !13257)
!13270 = !DILocation(line: 67, column: 34, scope: !13257)
!13271 = !DILocation(line: 0, scope: !13257)
!13272 = !DILocation(line: 67, column: 10, scope: !13257)
!13273 = !DILocation(line: 67, column: 3, scope: !13257)
!13274 = distinct !DISubprogram(name: "triple_free", scope: !13202, file: !13202, line: 72, type: !518, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1798, retainedNodes: !140)
!13275 = !DILocalVariable(name: "x", arg: 1, scope: !13274, file: !13202, line: 72, type: !47)
!13276 = !DILocation(line: 72, column: 20, scope: !13274)
!13277 = !DILocalVariable(name: "a", scope: !13274, file: !13202, line: 74, type: !1808)
!13278 = !DILocation(line: 74, column: 20, scope: !13274)
!13279 = !DILocation(line: 74, column: 24, scope: !13274)
!13280 = !DILocation(line: 75, column: 9, scope: !13274)
!13281 = !DILocation(line: 75, column: 12, scope: !13274)
!13282 = !DILocation(line: 75, column: 3, scope: !13274)
!13283 = !DILocation(line: 76, column: 9, scope: !13274)
!13284 = !DILocation(line: 76, column: 3, scope: !13274)
!13285 = !DILocation(line: 77, column: 1, scope: !13274)
!13286 = distinct !DISubprogram(name: "opendirat", scope: !13287, file: !13287, line: 36, type: !1812, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1809, retainedNodes: !140)
!13287 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!13288 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13286, file: !13287, line: 36, type: !5)
!13289 = !DILocation(line: 36, column: 16, scope: !13286)
!13290 = !DILocalVariable(name: "dir", arg: 2, scope: !13286, file: !13287, line: 36, type: !112)
!13291 = !DILocation(line: 36, column: 36, scope: !13286)
!13292 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13286, file: !13287, line: 36, type: !5)
!13293 = !DILocation(line: 36, column: 45, scope: !13286)
!13294 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13286, file: !13287, line: 36, type: !126)
!13295 = !DILocation(line: 36, column: 63, scope: !13286)
!13296 = !DILocalVariable(name: "open_flags", scope: !13286, file: !13287, line: 38, type: !5)
!13297 = !DILocation(line: 38, column: 7, scope: !13286)
!13298 = !DILocation(line: 39, column: 36, scope: !13286)
!13299 = !DILocation(line: 39, column: 34, scope: !13286)
!13300 = !DILocalVariable(name: "new_fd", scope: !13286, file: !13287, line: 40, type: !5)
!13301 = !DILocation(line: 40, column: 7, scope: !13286)
!13302 = !DILocation(line: 40, column: 24, scope: !13286)
!13303 = !DILocation(line: 40, column: 32, scope: !13286)
!13304 = !DILocation(line: 40, column: 37, scope: !13286)
!13305 = !DILocation(line: 40, column: 16, scope: !13286)
!13306 = !DILocation(line: 42, column: 7, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13286, file: !13287, line: 42, column: 7)
!13308 = !DILocation(line: 42, column: 14, scope: !13307)
!13309 = !DILocation(line: 42, column: 7, scope: !13286)
!13310 = !DILocation(line: 43, column: 5, scope: !13307)
!13311 = !DILocalVariable(name: "dirp", scope: !13286, file: !13287, line: 44, type: !580)
!13312 = !DILocation(line: 44, column: 8, scope: !13286)
!13313 = !DILocation(line: 44, column: 26, scope: !13286)
!13314 = !DILocation(line: 44, column: 15, scope: !13286)
!13315 = !DILocation(line: 45, column: 7, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13286, file: !13287, line: 45, column: 7)
!13317 = !DILocation(line: 45, column: 7, scope: !13286)
!13318 = !DILocation(line: 46, column: 16, scope: !13316)
!13319 = !DILocation(line: 46, column: 6, scope: !13316)
!13320 = !DILocation(line: 46, column: 14, scope: !13316)
!13321 = !DILocation(line: 46, column: 5, scope: !13316)
!13322 = !DILocalVariable(name: "fdopendir_errno", scope: !13323, file: !13287, line: 49, type: !5)
!13323 = distinct !DILexicalBlock(scope: !13316, file: !13287, line: 48, column: 5)
!13324 = !DILocation(line: 49, column: 11, scope: !13323)
!13325 = !DILocation(line: 49, column: 29, scope: !13323)
!13326 = !DILocation(line: 50, column: 14, scope: !13323)
!13327 = !DILocation(line: 50, column: 7, scope: !13323)
!13328 = !DILocation(line: 51, column: 15, scope: !13323)
!13329 = !DILocation(line: 51, column: 7, scope: !13323)
!13330 = !DILocation(line: 51, column: 13, scope: !13323)
!13331 = !DILocation(line: 53, column: 10, scope: !13286)
!13332 = !DILocation(line: 53, column: 3, scope: !13286)
!13333 = !DILocation(line: 54, column: 1, scope: !13286)
!13334 = distinct !DISubprogram(name: "priv_set_remove_linkdir", scope: !13335, file: !13335, line: 51, type: !1817, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1814, retainedNodes: !140)
!13335 = !DIFile(filename: "./lib/priv-set.h", directory: "/home/mohamad/clone/coreutils")
!13336 = !DILocation(line: 53, column: 3, scope: !13334)
!13337 = distinct !DISubprogram(name: "priv_set_restore_linkdir", scope: !13335, file: !13335, line: 57, type: !1817, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1814, retainedNodes: !140)
!13338 = !DILocation(line: 59, column: 3, scope: !13337)
!13339 = distinct !DISubprogram(name: "set_program_name", scope: !911, file: !911, line: 39, type: !133, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !869, retainedNodes: !140)
!13340 = !DILocalVariable(name: "argv0", arg: 1, scope: !13339, file: !911, line: 39, type: !112)
!13341 = !DILocation(line: 39, column: 31, scope: !13339)
!13342 = !DILocalVariable(name: "slash", scope: !13339, file: !911, line: 46, type: !112)
!13343 = !DILocation(line: 46, column: 15, scope: !13339)
!13344 = !DILocalVariable(name: "base", scope: !13339, file: !911, line: 47, type: !112)
!13345 = !DILocation(line: 47, column: 15, scope: !13339)
!13346 = !DILocation(line: 51, column: 7, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13339, file: !911, line: 51, column: 7)
!13348 = !DILocation(line: 51, column: 13, scope: !13347)
!13349 = !DILocation(line: 51, column: 7, scope: !13339)
!13350 = !DILocation(line: 55, column: 14, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13347, file: !911, line: 52, column: 5)
!13352 = !DILocation(line: 54, column: 7, scope: !13351)
!13353 = !DILocation(line: 56, column: 7, scope: !13351)
!13354 = !DILocation(line: 59, column: 20, scope: !13339)
!13355 = !DILocation(line: 59, column: 11, scope: !13339)
!13356 = !DILocation(line: 59, column: 9, scope: !13339)
!13357 = !DILocation(line: 60, column: 11, scope: !13339)
!13358 = !DILocation(line: 60, column: 17, scope: !13339)
!13359 = !DILocation(line: 60, column: 27, scope: !13339)
!13360 = !DILocation(line: 60, column: 33, scope: !13339)
!13361 = !DILocation(line: 60, column: 39, scope: !13339)
!13362 = !DILocation(line: 60, column: 8, scope: !13339)
!13363 = !DILocation(line: 61, column: 7, scope: !13364)
!13364 = distinct !DILexicalBlock(scope: !13339, file: !911, line: 61, column: 7)
!13365 = !DILocation(line: 61, column: 14, scope: !13364)
!13366 = !DILocation(line: 61, column: 12, scope: !13364)
!13367 = !DILocation(line: 61, column: 20, scope: !13364)
!13368 = !DILocation(line: 61, column: 25, scope: !13364)
!13369 = !DILocation(line: 61, column: 37, scope: !13364)
!13370 = !DILocation(line: 61, column: 42, scope: !13364)
!13371 = !DILocation(line: 61, column: 28, scope: !13364)
!13372 = !DILocation(line: 61, column: 61, scope: !13364)
!13373 = !DILocation(line: 61, column: 7, scope: !13339)
!13374 = !DILocation(line: 63, column: 15, scope: !13375)
!13375 = distinct !DILexicalBlock(scope: !13364, file: !911, line: 62, column: 5)
!13376 = !DILocation(line: 63, column: 13, scope: !13375)
!13377 = !DILocation(line: 64, column: 20, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13375, file: !911, line: 64, column: 11)
!13379 = !DILocation(line: 64, column: 11, scope: !13378)
!13380 = !DILocation(line: 64, column: 36, scope: !13378)
!13381 = !DILocation(line: 64, column: 11, scope: !13375)
!13382 = !DILocation(line: 66, column: 19, scope: !13383)
!13383 = distinct !DILexicalBlock(scope: !13378, file: !911, line: 65, column: 9)
!13384 = !DILocation(line: 66, column: 24, scope: !13383)
!13385 = !DILocation(line: 66, column: 17, scope: !13383)
!13386 = !DILocation(line: 70, column: 52, scope: !13383)
!13387 = !DILocation(line: 70, column: 41, scope: !13383)
!13388 = !DILocation(line: 72, column: 9, scope: !13383)
!13389 = !DILocation(line: 73, column: 5, scope: !13375)
!13390 = !DILocation(line: 84, column: 18, scope: !13339)
!13391 = !DILocation(line: 84, column: 16, scope: !13339)
!13392 = !DILocation(line: 90, column: 38, scope: !13339)
!13393 = !DILocation(line: 90, column: 27, scope: !13339)
!13394 = !DILocation(line: 92, column: 1, scope: !13339)
!13395 = distinct !DISubprogram(name: "qcopy_acl", scope: !13396, file: !13396, line: 39, type: !1577, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1819, retainedNodes: !140)
!13396 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!13397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2520, line: 260, size: 32, elements: !13398)
!13398 = !{!13399}
!13399 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13397, file: !2520, line: 261, baseType: !157, size: 32)
!13400 = !DILocalVariable(name: "src_name", arg: 1, scope: !13395, file: !13396, line: 39, type: !112)
!13401 = !DILocation(line: 39, column: 24, scope: !13395)
!13402 = !DILocalVariable(name: "source_desc", arg: 2, scope: !13395, file: !13396, line: 39, type: !5)
!13403 = !DILocation(line: 39, column: 38, scope: !13395)
!13404 = !DILocalVariable(name: "dst_name", arg: 3, scope: !13395, file: !13396, line: 39, type: !112)
!13405 = !DILocation(line: 39, column: 63, scope: !13395)
!13406 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !13395, file: !13396, line: 40, type: !5)
!13407 = !DILocation(line: 40, column: 16, scope: !13395)
!13408 = !DILocalVariable(name: "mode", arg: 5, scope: !13395, file: !13396, line: 40, type: !157)
!13409 = !DILocation(line: 40, column: 34, scope: !13395)
!13410 = !DILocalVariable(name: "ctx", scope: !13395, file: !13396, line: 42, type: !13397)
!13411 = !DILocation(line: 42, column: 29, scope: !13395)
!13412 = !DILocalVariable(name: "ret", scope: !13395, file: !13396, line: 43, type: !5)
!13413 = !DILocation(line: 43, column: 7, scope: !13395)
!13414 = !DILocation(line: 45, column: 26, scope: !13395)
!13415 = !DILocation(line: 45, column: 36, scope: !13395)
!13416 = !DILocation(line: 45, column: 49, scope: !13395)
!13417 = !DILocation(line: 45, column: 9, scope: !13395)
!13418 = !DILocation(line: 45, column: 7, scope: !13395)
!13419 = !DILocation(line: 46, column: 7, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13395, file: !13396, line: 46, column: 7)
!13421 = !DILocation(line: 46, column: 11, scope: !13420)
!13422 = !DILocation(line: 46, column: 7, scope: !13395)
!13423 = !DILocation(line: 47, column: 5, scope: !13420)
!13424 = !DILocation(line: 48, column: 32, scope: !13395)
!13425 = !DILocation(line: 48, column: 42, scope: !13395)
!13426 = !DILocation(line: 48, column: 9, scope: !13395)
!13427 = !DILocation(line: 48, column: 7, scope: !13395)
!13428 = !DILocation(line: 49, column: 3, scope: !13395)
!13429 = !DILocation(line: 50, column: 10, scope: !13395)
!13430 = !DILocation(line: 50, column: 3, scope: !13395)
!13431 = !DILocation(line: 51, column: 1, scope: !13395)
!13432 = distinct !DISubprogram(name: "qset_acl", scope: !13433, file: !13433, line: 39, type: !1582, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1821, retainedNodes: !140)
!13433 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!13434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2520, line: 260, size: 32, elements: !13435)
!13435 = !{!13436}
!13436 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13434, file: !2520, line: 261, baseType: !157, size: 32)
!13437 = !DILocalVariable(name: "name", arg: 1, scope: !13432, file: !13433, line: 39, type: !112)
!13438 = !DILocation(line: 39, column: 23, scope: !13432)
!13439 = !DILocalVariable(name: "desc", arg: 2, scope: !13432, file: !13433, line: 39, type: !5)
!13440 = !DILocation(line: 39, column: 33, scope: !13432)
!13441 = !DILocalVariable(name: "mode", arg: 3, scope: !13432, file: !13433, line: 39, type: !157)
!13442 = !DILocation(line: 39, column: 46, scope: !13432)
!13443 = !DILocalVariable(name: "ctx", scope: !13432, file: !13433, line: 41, type: !13434)
!13444 = !DILocation(line: 41, column: 29, scope: !13432)
!13445 = !DILocalVariable(name: "ret", scope: !13432, file: !13433, line: 42, type: !5)
!13446 = !DILocation(line: 42, column: 7, scope: !13432)
!13447 = !DILocation(line: 44, column: 3, scope: !13432)
!13448 = !DILocation(line: 45, column: 14, scope: !13432)
!13449 = !DILocation(line: 45, column: 7, scope: !13432)
!13450 = !DILocation(line: 45, column: 12, scope: !13432)
!13451 = !{!13452, !2981, i64 0}
!13452 = !{!"permission_context", !2981, i64 0}
!13453 = !DILocation(line: 46, column: 32, scope: !13432)
!13454 = !DILocation(line: 46, column: 38, scope: !13432)
!13455 = !DILocation(line: 46, column: 9, scope: !13432)
!13456 = !DILocation(line: 46, column: 7, scope: !13432)
!13457 = !DILocation(line: 47, column: 3, scope: !13432)
!13458 = !DILocation(line: 48, column: 10, scope: !13432)
!13459 = !DILocation(line: 48, column: 3, scope: !13432)
!13460 = distinct !DISubprogram(name: "clone_quoting_options", scope: !943, file: !943, line: 122, type: !939, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13461 = !DILocalVariable(name: "o", arg: 1, scope: !13460, file: !943, line: 122, type: !941)
!13462 = !DILocation(line: 122, column: 48, scope: !13460)
!13463 = !DILocalVariable(name: "e", scope: !13460, file: !943, line: 124, type: !5)
!13464 = !DILocation(line: 124, column: 7, scope: !13460)
!13465 = !DILocation(line: 124, column: 11, scope: !13460)
!13466 = !DILocalVariable(name: "p", scope: !13460, file: !943, line: 125, type: !941)
!13467 = !DILocation(line: 125, column: 27, scope: !13460)
!13468 = !DILocation(line: 125, column: 40, scope: !13460)
!13469 = !DILocation(line: 125, column: 44, scope: !13460)
!13470 = !DILocation(line: 125, column: 31, scope: !13460)
!13471 = !DILocation(line: 127, column: 11, scope: !13460)
!13472 = !DILocation(line: 127, column: 3, scope: !13460)
!13473 = !DILocation(line: 127, column: 9, scope: !13460)
!13474 = !DILocation(line: 128, column: 10, scope: !13460)
!13475 = !DILocation(line: 128, column: 3, scope: !13460)
!13476 = distinct !DISubprogram(name: "get_quoting_style", scope: !943, file: !943, line: 133, type: !951, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13477 = !DILocalVariable(name: "o", arg: 1, scope: !13476, file: !943, line: 133, type: !953)
!13478 = !DILocation(line: 133, column: 50, scope: !13476)
!13479 = !DILocation(line: 135, column: 11, scope: !13476)
!13480 = !DILocation(line: 135, column: 15, scope: !13476)
!13481 = !DILocation(line: 135, column: 46, scope: !13476)
!13482 = !{!13483, !2982, i64 0}
!13483 = !{!"quoting_options", !2982, i64 0, !2981, i64 4, !2982, i64 8, !2994, i64 40, !2994, i64 48}
!13484 = !DILocation(line: 135, column: 3, scope: !13476)
!13485 = distinct !DISubprogram(name: "set_quoting_style", scope: !943, file: !943, line: 141, type: !955, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13486 = !DILocalVariable(name: "o", arg: 1, scope: !13485, file: !943, line: 141, type: !941)
!13487 = !DILocation(line: 141, column: 44, scope: !13485)
!13488 = !DILocalVariable(name: "s", arg: 2, scope: !13485, file: !943, line: 141, type: !917)
!13489 = !DILocation(line: 141, column: 66, scope: !13485)
!13490 = !DILocation(line: 143, column: 47, scope: !13485)
!13491 = !DILocation(line: 143, column: 4, scope: !13485)
!13492 = !DILocation(line: 143, column: 8, scope: !13485)
!13493 = !DILocation(line: 143, column: 39, scope: !13485)
!13494 = !DILocation(line: 143, column: 45, scope: !13485)
!13495 = !DILocation(line: 144, column: 1, scope: !13485)
!13496 = distinct !DISubprogram(name: "set_char_quoting", scope: !943, file: !943, line: 152, type: !957, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13497 = !DILocalVariable(name: "o", arg: 1, scope: !13496, file: !943, line: 152, type: !941)
!13498 = !DILocation(line: 152, column: 43, scope: !13496)
!13499 = !DILocalVariable(name: "c", arg: 2, scope: !13496, file: !943, line: 152, type: !8)
!13500 = !DILocation(line: 152, column: 51, scope: !13496)
!13501 = !DILocalVariable(name: "i", arg: 3, scope: !13496, file: !943, line: 152, type: !5)
!13502 = !DILocation(line: 152, column: 58, scope: !13496)
!13503 = !DILocalVariable(name: "uc", scope: !13496, file: !943, line: 154, type: !468)
!13504 = !DILocation(line: 154, column: 17, scope: !13496)
!13505 = !DILocation(line: 154, column: 22, scope: !13496)
!13506 = !DILocalVariable(name: "p", scope: !13496, file: !943, line: 155, type: !959)
!13507 = !DILocation(line: 155, column: 17, scope: !13496)
!13508 = !DILocation(line: 156, column: 6, scope: !13496)
!13509 = !DILocation(line: 156, column: 10, scope: !13496)
!13510 = !DILocation(line: 156, column: 41, scope: !13496)
!13511 = !DILocation(line: 156, column: 5, scope: !13496)
!13512 = !DILocation(line: 156, column: 59, scope: !13496)
!13513 = !DILocation(line: 156, column: 62, scope: !13496)
!13514 = !DILocation(line: 156, column: 57, scope: !13496)
!13515 = !DILocalVariable(name: "shift", scope: !13496, file: !943, line: 157, type: !5)
!13516 = !DILocation(line: 157, column: 7, scope: !13496)
!13517 = !DILocation(line: 157, column: 15, scope: !13496)
!13518 = !DILocation(line: 157, column: 18, scope: !13496)
!13519 = !DILocalVariable(name: "r", scope: !13496, file: !943, line: 158, type: !5)
!13520 = !DILocation(line: 158, column: 7, scope: !13496)
!13521 = !DILocation(line: 158, column: 13, scope: !13496)
!13522 = !DILocation(line: 158, column: 12, scope: !13496)
!13523 = !DILocation(line: 158, column: 18, scope: !13496)
!13524 = !DILocation(line: 158, column: 15, scope: !13496)
!13525 = !DILocation(line: 158, column: 25, scope: !13496)
!13526 = !DILocation(line: 159, column: 11, scope: !13496)
!13527 = !DILocation(line: 159, column: 13, scope: !13496)
!13528 = !DILocation(line: 159, column: 20, scope: !13496)
!13529 = !DILocation(line: 159, column: 18, scope: !13496)
!13530 = !DILocation(line: 159, column: 26, scope: !13496)
!13531 = !DILocation(line: 159, column: 23, scope: !13496)
!13532 = !DILocation(line: 159, column: 4, scope: !13496)
!13533 = !DILocation(line: 159, column: 6, scope: !13496)
!13534 = !DILocation(line: 160, column: 10, scope: !13496)
!13535 = !DILocation(line: 160, column: 3, scope: !13496)
!13536 = distinct !DISubprogram(name: "set_quoting_flags", scope: !943, file: !943, line: 168, type: !960, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13537 = !DILocalVariable(name: "o", arg: 1, scope: !13536, file: !943, line: 168, type: !941)
!13538 = !DILocation(line: 168, column: 44, scope: !13536)
!13539 = !DILocalVariable(name: "i", arg: 2, scope: !13536, file: !943, line: 168, type: !5)
!13540 = !DILocation(line: 168, column: 51, scope: !13536)
!13541 = !DILocalVariable(name: "r", scope: !13536, file: !943, line: 170, type: !5)
!13542 = !DILocation(line: 170, column: 7, scope: !13536)
!13543 = !DILocation(line: 171, column: 8, scope: !13544)
!13544 = distinct !DILexicalBlock(scope: !13536, file: !943, line: 171, column: 7)
!13545 = !DILocation(line: 171, column: 7, scope: !13536)
!13546 = !DILocation(line: 172, column: 7, scope: !13544)
!13547 = !DILocation(line: 172, column: 5, scope: !13544)
!13548 = !DILocation(line: 173, column: 7, scope: !13536)
!13549 = !DILocation(line: 173, column: 10, scope: !13536)
!13550 = !{!13483, !2981, i64 4}
!13551 = !DILocation(line: 173, column: 5, scope: !13536)
!13552 = !DILocation(line: 174, column: 14, scope: !13536)
!13553 = !DILocation(line: 174, column: 3, scope: !13536)
!13554 = !DILocation(line: 174, column: 6, scope: !13536)
!13555 = !DILocation(line: 174, column: 12, scope: !13536)
!13556 = !DILocation(line: 175, column: 10, scope: !13536)
!13557 = !DILocation(line: 175, column: 3, scope: !13536)
!13558 = distinct !DISubprogram(name: "set_custom_quoting", scope: !943, file: !943, line: 179, type: !962, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13559 = !DILocalVariable(name: "o", arg: 1, scope: !13558, file: !943, line: 179, type: !941)
!13560 = !DILocation(line: 179, column: 45, scope: !13558)
!13561 = !DILocalVariable(name: "left_quote", arg: 2, scope: !13558, file: !943, line: 180, type: !112)
!13562 = !DILocation(line: 180, column: 33, scope: !13558)
!13563 = !DILocalVariable(name: "right_quote", arg: 3, scope: !13558, file: !943, line: 180, type: !112)
!13564 = !DILocation(line: 180, column: 57, scope: !13558)
!13565 = !DILocation(line: 182, column: 8, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13558, file: !943, line: 182, column: 7)
!13567 = !DILocation(line: 182, column: 7, scope: !13558)
!13568 = !DILocation(line: 183, column: 7, scope: !13566)
!13569 = !DILocation(line: 183, column: 5, scope: !13566)
!13570 = !DILocation(line: 184, column: 3, scope: !13558)
!13571 = !DILocation(line: 184, column: 6, scope: !13558)
!13572 = !DILocation(line: 184, column: 12, scope: !13558)
!13573 = !DILocation(line: 185, column: 8, scope: !13574)
!13574 = distinct !DILexicalBlock(scope: !13558, file: !943, line: 185, column: 7)
!13575 = !DILocation(line: 185, column: 19, scope: !13574)
!13576 = !DILocation(line: 185, column: 23, scope: !13574)
!13577 = !DILocation(line: 185, column: 7, scope: !13558)
!13578 = !DILocation(line: 186, column: 5, scope: !13574)
!13579 = !DILocation(line: 187, column: 19, scope: !13558)
!13580 = !DILocation(line: 187, column: 3, scope: !13558)
!13581 = !DILocation(line: 187, column: 6, scope: !13558)
!13582 = !DILocation(line: 187, column: 17, scope: !13558)
!13583 = !{!13483, !2994, i64 40}
!13584 = !DILocation(line: 188, column: 20, scope: !13558)
!13585 = !DILocation(line: 188, column: 3, scope: !13558)
!13586 = !DILocation(line: 188, column: 6, scope: !13558)
!13587 = !DILocation(line: 188, column: 18, scope: !13558)
!13588 = !{!13483, !2994, i64 48}
!13589 = !DILocation(line: 189, column: 1, scope: !13558)
!13590 = distinct !DISubprogram(name: "quotearg_buffer", scope: !943, file: !943, line: 784, type: !964, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13591 = !DILocalVariable(name: "buffer", arg: 1, scope: !13590, file: !943, line: 784, type: !7)
!13592 = !DILocation(line: 784, column: 24, scope: !13590)
!13593 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13590, file: !943, line: 784, type: !52)
!13594 = !DILocation(line: 784, column: 39, scope: !13590)
!13595 = !DILocalVariable(name: "arg", arg: 3, scope: !13590, file: !943, line: 785, type: !112)
!13596 = !DILocation(line: 785, column: 30, scope: !13590)
!13597 = !DILocalVariable(name: "argsize", arg: 4, scope: !13590, file: !943, line: 785, type: !52)
!13598 = !DILocation(line: 785, column: 42, scope: !13590)
!13599 = !DILocalVariable(name: "o", arg: 5, scope: !13590, file: !943, line: 786, type: !953)
!13600 = !DILocation(line: 786, column: 48, scope: !13590)
!13601 = !DILocalVariable(name: "p", scope: !13590, file: !943, line: 788, type: !953)
!13602 = !DILocation(line: 788, column: 33, scope: !13590)
!13603 = !DILocation(line: 788, column: 37, scope: !13590)
!13604 = !DILocation(line: 788, column: 41, scope: !13590)
!13605 = !DILocalVariable(name: "e", scope: !13590, file: !943, line: 789, type: !5)
!13606 = !DILocation(line: 789, column: 7, scope: !13590)
!13607 = !DILocation(line: 789, column: 11, scope: !13590)
!13608 = !DILocalVariable(name: "r", scope: !13590, file: !943, line: 790, type: !52)
!13609 = !DILocation(line: 790, column: 10, scope: !13590)
!13610 = !DILocation(line: 790, column: 40, scope: !13590)
!13611 = !DILocation(line: 790, column: 48, scope: !13590)
!13612 = !DILocation(line: 790, column: 60, scope: !13590)
!13613 = !DILocation(line: 790, column: 65, scope: !13590)
!13614 = !DILocation(line: 791, column: 40, scope: !13590)
!13615 = !DILocation(line: 791, column: 43, scope: !13590)
!13616 = !DILocation(line: 791, column: 50, scope: !13590)
!13617 = !DILocation(line: 791, column: 53, scope: !13590)
!13618 = !DILocation(line: 791, column: 60, scope: !13590)
!13619 = !DILocation(line: 791, column: 63, scope: !13590)
!13620 = !DILocation(line: 792, column: 40, scope: !13590)
!13621 = !DILocation(line: 792, column: 43, scope: !13590)
!13622 = !DILocation(line: 792, column: 55, scope: !13590)
!13623 = !DILocation(line: 792, column: 58, scope: !13590)
!13624 = !DILocation(line: 790, column: 14, scope: !13590)
!13625 = !DILocation(line: 793, column: 11, scope: !13590)
!13626 = !DILocation(line: 793, column: 3, scope: !13590)
!13627 = !DILocation(line: 793, column: 9, scope: !13590)
!13628 = !DILocation(line: 794, column: 10, scope: !13590)
!13629 = !DILocation(line: 794, column: 3, scope: !13590)
!13630 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !943, file: !943, line: 256, type: !1011, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !914, retainedNodes: !140)
!13631 = !DILocalVariable(name: "buffer", arg: 1, scope: !13630, file: !943, line: 256, type: !7)
!13632 = !DILocation(line: 256, column: 33, scope: !13630)
!13633 = !DILocalVariable(name: "buffersize", arg: 2, scope: !13630, file: !943, line: 256, type: !52)
!13634 = !DILocation(line: 256, column: 48, scope: !13630)
!13635 = !DILocalVariable(name: "arg", arg: 3, scope: !13630, file: !943, line: 257, type: !112)
!13636 = !DILocation(line: 257, column: 39, scope: !13630)
!13637 = !DILocalVariable(name: "argsize", arg: 4, scope: !13630, file: !943, line: 257, type: !52)
!13638 = !DILocation(line: 257, column: 51, scope: !13630)
!13639 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !13630, file: !943, line: 258, type: !917)
!13640 = !DILocation(line: 258, column: 46, scope: !13630)
!13641 = !DILocalVariable(name: "flags", arg: 6, scope: !13630, file: !943, line: 258, type: !5)
!13642 = !DILocation(line: 258, column: 65, scope: !13630)
!13643 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !13630, file: !943, line: 259, type: !1013)
!13644 = !DILocation(line: 259, column: 47, scope: !13630)
!13645 = !DILocalVariable(name: "left_quote", arg: 8, scope: !13630, file: !943, line: 260, type: !112)
!13646 = !DILocation(line: 260, column: 39, scope: !13630)
!13647 = !DILocalVariable(name: "right_quote", arg: 9, scope: !13630, file: !943, line: 261, type: !112)
!13648 = !DILocation(line: 261, column: 39, scope: !13630)
!13649 = !DILocalVariable(name: "i", scope: !13630, file: !943, line: 263, type: !52)
!13650 = !DILocation(line: 263, column: 10, scope: !13630)
!13651 = !DILocalVariable(name: "len", scope: !13630, file: !943, line: 264, type: !52)
!13652 = !DILocation(line: 264, column: 10, scope: !13630)
!13653 = !DILocalVariable(name: "orig_buffersize", scope: !13630, file: !943, line: 265, type: !52)
!13654 = !DILocation(line: 265, column: 10, scope: !13630)
!13655 = !DILocalVariable(name: "quote_string", scope: !13630, file: !943, line: 266, type: !112)
!13656 = !DILocation(line: 266, column: 15, scope: !13630)
!13657 = !DILocalVariable(name: "quote_string_len", scope: !13630, file: !943, line: 267, type: !52)
!13658 = !DILocation(line: 267, column: 10, scope: !13630)
!13659 = !DILocalVariable(name: "backslash_escapes", scope: !13630, file: !943, line: 268, type: !117)
!13660 = !DILocation(line: 268, column: 8, scope: !13630)
!13661 = !DILocalVariable(name: "unibyte_locale", scope: !13630, file: !943, line: 269, type: !117)
!13662 = !DILocation(line: 269, column: 8, scope: !13630)
!13663 = !DILocation(line: 269, column: 25, scope: !13630)
!13664 = !DILocation(line: 269, column: 36, scope: !13630)
!13665 = !DILocalVariable(name: "elide_outer_quotes", scope: !13630, file: !943, line: 270, type: !117)
!13666 = !DILocation(line: 270, column: 8, scope: !13630)
!13667 = !DILocation(line: 270, column: 30, scope: !13630)
!13668 = !DILocation(line: 270, column: 36, scope: !13630)
!13669 = !DILocation(line: 270, column: 61, scope: !13630)
!13670 = !DILocalVariable(name: "pending_shell_escape_end", scope: !13630, file: !943, line: 271, type: !117)
!13671 = !DILocation(line: 271, column: 8, scope: !13630)
!13672 = !DILocalVariable(name: "encountered_single_quote", scope: !13630, file: !943, line: 272, type: !117)
!13673 = !DILocation(line: 272, column: 8, scope: !13630)
!13674 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !13630, file: !943, line: 273, type: !117)
!13675 = !DILocation(line: 273, column: 8, scope: !13630)
!13676 = !DILocation(line: 273, column: 3, scope: !13630)
!13677 = !DILabel(scope: !13630, name: "process_input", file: !943, line: 314)
!13678 = !DILocation(line: 314, column: 2, scope: !13630)
!13679 = !DILocation(line: 316, column: 11, scope: !13630)
!13680 = !DILocation(line: 316, column: 3, scope: !13630)
!13681 = !DILocation(line: 319, column: 21, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13630, file: !943, line: 317, column: 5)
!13683 = !DILocation(line: 320, column: 26, scope: !13682)
!13684 = !DILocation(line: 321, column: 7, scope: !13682)
!13685 = !DILocation(line: 323, column: 12, scope: !13686)
!13686 = distinct !DILexicalBlock(scope: !13682, file: !943, line: 323, column: 11)
!13687 = !DILocation(line: 323, column: 11, scope: !13682)
!13688 = !DILocation(line: 324, column: 9, scope: !13686)
!13689 = !DILocation(line: 324, column: 9, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13691, file: !943, line: 324, column: 9)
!13691 = distinct !DILexicalBlock(scope: !13686, file: !943, line: 324, column: 9)
!13692 = !DILocation(line: 324, column: 9, scope: !13691)
!13693 = !DILocation(line: 325, column: 25, scope: !13682)
!13694 = !DILocation(line: 326, column: 20, scope: !13682)
!13695 = !DILocation(line: 327, column: 24, scope: !13682)
!13696 = !DILocation(line: 328, column: 7, scope: !13682)
!13697 = !DILocation(line: 331, column: 25, scope: !13682)
!13698 = !DILocation(line: 332, column: 26, scope: !13682)
!13699 = !DILocation(line: 333, column: 7, scope: !13682)
!13700 = !DILocation(line: 339, column: 13, scope: !13701)
!13701 = distinct !DILexicalBlock(scope: !13702, file: !943, line: 339, column: 13)
!13702 = distinct !DILexicalBlock(scope: !13682, file: !943, line: 338, column: 7)
!13703 = !DILocation(line: 339, column: 27, scope: !13701)
!13704 = !DILocation(line: 339, column: 13, scope: !13702)
!13705 = !DILocation(line: 362, column: 50, scope: !13706)
!13706 = distinct !DILexicalBlock(scope: !13701, file: !943, line: 340, column: 11)
!13707 = !DILocation(line: 362, column: 26, scope: !13706)
!13708 = !DILocation(line: 362, column: 24, scope: !13706)
!13709 = !DILocation(line: 363, column: 51, scope: !13706)
!13710 = !DILocation(line: 363, column: 27, scope: !13706)
!13711 = !DILocation(line: 363, column: 25, scope: !13706)
!13712 = !DILocation(line: 364, column: 11, scope: !13706)
!13713 = !DILocation(line: 365, column: 14, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13702, file: !943, line: 365, column: 13)
!13715 = !DILocation(line: 365, column: 13, scope: !13702)
!13716 = !DILocation(line: 366, column: 31, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13714, file: !943, line: 366, column: 11)
!13718 = !DILocation(line: 366, column: 29, scope: !13717)
!13719 = !DILocation(line: 366, column: 16, scope: !13717)
!13720 = !DILocation(line: 366, column: 44, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13717, file: !943, line: 366, column: 11)
!13722 = !DILocation(line: 366, column: 43, scope: !13721)
!13723 = !DILocation(line: 366, column: 11, scope: !13717)
!13724 = !DILocation(line: 367, column: 13, scope: !13721)
!13725 = !DILocation(line: 367, column: 13, scope: !13726)
!13726 = distinct !DILexicalBlock(scope: !13727, file: !943, line: 367, column: 13)
!13727 = distinct !DILexicalBlock(scope: !13721, file: !943, line: 367, column: 13)
!13728 = !DILocation(line: 367, column: 13, scope: !13727)
!13729 = !DILocation(line: 366, column: 70, scope: !13721)
!13730 = !DILocation(line: 366, column: 11, scope: !13721)
!13731 = distinct !{!13731, !13723, !13732}
!13732 = !DILocation(line: 367, column: 13, scope: !13717)
!13733 = !DILocation(line: 368, column: 27, scope: !13702)
!13734 = !DILocation(line: 369, column: 24, scope: !13702)
!13735 = !DILocation(line: 369, column: 22, scope: !13702)
!13736 = !DILocation(line: 370, column: 36, scope: !13702)
!13737 = !DILocation(line: 370, column: 28, scope: !13702)
!13738 = !DILocation(line: 370, column: 26, scope: !13702)
!13739 = !DILocation(line: 372, column: 7, scope: !13682)
!13740 = !DILocation(line: 375, column: 25, scope: !13682)
!13741 = !DILocation(line: 376, column: 7, scope: !13682)
!13742 = !DILocation(line: 378, column: 26, scope: !13682)
!13743 = !DILocation(line: 379, column: 7, scope: !13682)
!13744 = !DILocation(line: 381, column: 12, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13682, file: !943, line: 381, column: 11)
!13746 = !DILocation(line: 381, column: 11, scope: !13682)
!13747 = !DILocation(line: 382, column: 27, scope: !13745)
!13748 = !DILocation(line: 382, column: 9, scope: !13745)
!13749 = !DILocation(line: 383, column: 7, scope: !13682)
!13750 = !DILocation(line: 385, column: 21, scope: !13682)
!13751 = !DILocation(line: 386, column: 12, scope: !13752)
!13752 = distinct !DILexicalBlock(scope: !13682, file: !943, line: 386, column: 11)
!13753 = !DILocation(line: 386, column: 11, scope: !13682)
!13754 = !DILocation(line: 387, column: 9, scope: !13752)
!13755 = !DILocation(line: 387, column: 9, scope: !13756)
!13756 = distinct !DILexicalBlock(scope: !13757, file: !943, line: 387, column: 9)
!13757 = distinct !DILexicalBlock(scope: !13752, file: !943, line: 387, column: 9)
!13758 = !DILocation(line: 387, column: 9, scope: !13757)
!13759 = !DILocation(line: 388, column: 20, scope: !13682)
!13760 = !DILocation(line: 389, column: 24, scope: !13682)
!13761 = !DILocation(line: 390, column: 7, scope: !13682)
!13762 = !DILocation(line: 393, column: 26, scope: !13682)
!13763 = !DILocation(line: 394, column: 7, scope: !13682)
!13764 = !DILocation(line: 397, column: 7, scope: !13682)
!13765 = !DILocation(line: 400, column: 10, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13630, file: !943, line: 400, column: 3)
!13767 = !DILocation(line: 400, column: 8, scope: !13766)
!13768 = !DILocation(line: 400, column: 19, scope: !13769)
!13769 = distinct !DILexicalBlock(scope: !13766, file: !943, line: 400, column: 3)
!13770 = !DILocation(line: 400, column: 27, scope: !13769)
!13771 = !DILocation(line: 400, column: 41, scope: !13769)
!13772 = !DILocation(line: 400, column: 45, scope: !13769)
!13773 = !DILocation(line: 400, column: 48, scope: !13769)
!13774 = !DILocation(line: 400, column: 58, scope: !13769)
!13775 = !DILocation(line: 400, column: 63, scope: !13769)
!13776 = !DILocation(line: 400, column: 60, scope: !13769)
!13777 = !DILocation(line: 400, column: 16, scope: !13769)
!13778 = !DILocation(line: 400, column: 3, scope: !13766)
!13779 = !DILocalVariable(name: "c", scope: !13780, file: !943, line: 402, type: !468)
!13780 = distinct !DILexicalBlock(scope: !13769, file: !943, line: 401, column: 5)
!13781 = !DILocation(line: 402, column: 21, scope: !13780)
!13782 = !DILocalVariable(name: "esc", scope: !13780, file: !943, line: 403, type: !468)
!13783 = !DILocation(line: 403, column: 21, scope: !13780)
!13784 = !DILocalVariable(name: "is_right_quote", scope: !13780, file: !943, line: 404, type: !117)
!13785 = !DILocation(line: 404, column: 12, scope: !13780)
!13786 = !DILocalVariable(name: "escaping", scope: !13780, file: !943, line: 405, type: !117)
!13787 = !DILocation(line: 405, column: 12, scope: !13780)
!13788 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !13780, file: !943, line: 406, type: !117)
!13789 = !DILocation(line: 406, column: 12, scope: !13780)
!13790 = !DILocation(line: 408, column: 11, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13780, file: !943, line: 408, column: 11)
!13792 = !DILocation(line: 409, column: 11, scope: !13791)
!13793 = !DILocation(line: 409, column: 14, scope: !13791)
!13794 = !DILocation(line: 409, column: 28, scope: !13791)
!13795 = !DILocation(line: 410, column: 11, scope: !13791)
!13796 = !DILocation(line: 410, column: 14, scope: !13791)
!13797 = !DILocation(line: 411, column: 11, scope: !13791)
!13798 = !DILocation(line: 411, column: 15, scope: !13791)
!13799 = !DILocation(line: 411, column: 19, scope: !13791)
!13800 = !DILocation(line: 411, column: 17, scope: !13791)
!13801 = !DILocation(line: 412, column: 19, scope: !13791)
!13802 = !DILocation(line: 412, column: 27, scope: !13791)
!13803 = !DILocation(line: 412, column: 39, scope: !13791)
!13804 = !DILocation(line: 412, column: 46, scope: !13791)
!13805 = !DILocation(line: 412, column: 44, scope: !13791)
!13806 = !DILocation(line: 416, column: 40, scope: !13791)
!13807 = !DILocation(line: 416, column: 32, scope: !13791)
!13808 = !DILocation(line: 416, column: 30, scope: !13791)
!13809 = !DILocation(line: 416, column: 48, scope: !13791)
!13810 = !DILocation(line: 412, column: 15, scope: !13791)
!13811 = !DILocation(line: 417, column: 11, scope: !13791)
!13812 = !DILocation(line: 417, column: 22, scope: !13791)
!13813 = !DILocation(line: 417, column: 28, scope: !13791)
!13814 = !DILocation(line: 417, column: 26, scope: !13791)
!13815 = !DILocation(line: 417, column: 31, scope: !13791)
!13816 = !DILocation(line: 417, column: 45, scope: !13791)
!13817 = !DILocation(line: 417, column: 14, scope: !13791)
!13818 = !DILocation(line: 417, column: 63, scope: !13791)
!13819 = !DILocation(line: 408, column: 11, scope: !13780)
!13820 = !DILocation(line: 419, column: 15, scope: !13821)
!13821 = distinct !DILexicalBlock(scope: !13822, file: !943, line: 419, column: 15)
!13822 = distinct !DILexicalBlock(scope: !13791, file: !943, line: 418, column: 9)
!13823 = !DILocation(line: 419, column: 15, scope: !13822)
!13824 = !DILocation(line: 420, column: 13, scope: !13821)
!13825 = !DILocation(line: 421, column: 26, scope: !13822)
!13826 = !DILocation(line: 422, column: 9, scope: !13822)
!13827 = !DILocation(line: 424, column: 11, scope: !13780)
!13828 = !DILocation(line: 424, column: 15, scope: !13780)
!13829 = !DILocation(line: 424, column: 9, scope: !13780)
!13830 = !DILocation(line: 425, column: 15, scope: !13780)
!13831 = !DILocation(line: 425, column: 7, scope: !13780)
!13832 = !DILocation(line: 428, column: 15, scope: !13833)
!13833 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 428, column: 15)
!13834 = distinct !DILexicalBlock(scope: !13780, file: !943, line: 426, column: 9)
!13835 = !DILocation(line: 428, column: 15, scope: !13834)
!13836 = !DILocation(line: 430, column: 15, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13833, file: !943, line: 429, column: 13)
!13838 = !DILocation(line: 430, column: 15, scope: !13839)
!13839 = distinct !DILexicalBlock(scope: !13840, file: !943, line: 430, column: 15)
!13840 = distinct !DILexicalBlock(scope: !13837, file: !943, line: 430, column: 15)
!13841 = !DILocation(line: 430, column: 15, scope: !13840)
!13842 = !DILocation(line: 430, column: 15, scope: !13843)
!13843 = distinct !DILexicalBlock(scope: !13840, file: !943, line: 430, column: 15)
!13844 = !DILocation(line: 430, column: 15, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13843, file: !943, line: 430, column: 15)
!13846 = !DILocation(line: 430, column: 15, scope: !13847)
!13847 = distinct !DILexicalBlock(scope: !13848, file: !943, line: 430, column: 15)
!13848 = distinct !DILexicalBlock(scope: !13845, file: !943, line: 430, column: 15)
!13849 = !DILocation(line: 430, column: 15, scope: !13848)
!13850 = !DILocation(line: 430, column: 15, scope: !13851)
!13851 = distinct !DILexicalBlock(scope: !13852, file: !943, line: 430, column: 15)
!13852 = distinct !DILexicalBlock(scope: !13845, file: !943, line: 430, column: 15)
!13853 = !DILocation(line: 430, column: 15, scope: !13852)
!13854 = !DILocation(line: 430, column: 15, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !943, line: 430, column: 15)
!13856 = distinct !DILexicalBlock(scope: !13845, file: !943, line: 430, column: 15)
!13857 = !DILocation(line: 430, column: 15, scope: !13856)
!13858 = !DILocation(line: 430, column: 15, scope: !13859)
!13859 = distinct !DILexicalBlock(scope: !13860, file: !943, line: 430, column: 15)
!13860 = distinct !DILexicalBlock(scope: !13840, file: !943, line: 430, column: 15)
!13861 = !DILocation(line: 430, column: 15, scope: !13860)
!13862 = !DILocation(line: 437, column: 19, scope: !13863)
!13863 = distinct !DILexicalBlock(scope: !13837, file: !943, line: 437, column: 19)
!13864 = !DILocation(line: 437, column: 33, scope: !13863)
!13865 = !DILocation(line: 438, column: 19, scope: !13863)
!13866 = !DILocation(line: 438, column: 22, scope: !13863)
!13867 = !DILocation(line: 438, column: 24, scope: !13863)
!13868 = !DILocation(line: 438, column: 30, scope: !13863)
!13869 = !DILocation(line: 438, column: 28, scope: !13863)
!13870 = !DILocation(line: 438, column: 38, scope: !13863)
!13871 = !DILocation(line: 438, column: 48, scope: !13863)
!13872 = !DILocation(line: 438, column: 52, scope: !13863)
!13873 = !DILocation(line: 438, column: 54, scope: !13863)
!13874 = !DILocation(line: 438, column: 45, scope: !13863)
!13875 = !DILocation(line: 438, column: 59, scope: !13863)
!13876 = !DILocation(line: 438, column: 62, scope: !13863)
!13877 = !DILocation(line: 438, column: 66, scope: !13863)
!13878 = !DILocation(line: 438, column: 68, scope: !13863)
!13879 = !DILocation(line: 438, column: 73, scope: !13863)
!13880 = !DILocation(line: 437, column: 19, scope: !13837)
!13881 = !DILocation(line: 440, column: 19, scope: !13882)
!13882 = distinct !DILexicalBlock(scope: !13863, file: !943, line: 439, column: 17)
!13883 = !DILocation(line: 440, column: 19, scope: !13884)
!13884 = distinct !DILexicalBlock(scope: !13885, file: !943, line: 440, column: 19)
!13885 = distinct !DILexicalBlock(scope: !13882, file: !943, line: 440, column: 19)
!13886 = !DILocation(line: 440, column: 19, scope: !13885)
!13887 = !DILocation(line: 441, column: 19, scope: !13882)
!13888 = !DILocation(line: 441, column: 19, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13890, file: !943, line: 441, column: 19)
!13890 = distinct !DILexicalBlock(scope: !13882, file: !943, line: 441, column: 19)
!13891 = !DILocation(line: 441, column: 19, scope: !13890)
!13892 = !DILocation(line: 442, column: 17, scope: !13882)
!13893 = !DILocation(line: 443, column: 17, scope: !13837)
!13894 = !DILocation(line: 448, column: 13, scope: !13837)
!13895 = !DILocation(line: 449, column: 20, scope: !13896)
!13896 = distinct !DILexicalBlock(scope: !13833, file: !943, line: 449, column: 20)
!13897 = !DILocation(line: 449, column: 26, scope: !13896)
!13898 = !DILocation(line: 449, column: 20, scope: !13833)
!13899 = !DILocation(line: 450, column: 13, scope: !13896)
!13900 = !DILocation(line: 451, column: 11, scope: !13834)
!13901 = !DILocation(line: 454, column: 19, scope: !13834)
!13902 = !DILocation(line: 454, column: 11, scope: !13834)
!13903 = !DILocation(line: 457, column: 19, scope: !13904)
!13904 = distinct !DILexicalBlock(scope: !13905, file: !943, line: 457, column: 19)
!13905 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 455, column: 13)
!13906 = !DILocation(line: 457, column: 19, scope: !13905)
!13907 = !DILocation(line: 458, column: 17, scope: !13904)
!13908 = !DILocation(line: 459, column: 15, scope: !13905)
!13909 = !DILocation(line: 462, column: 20, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13905, file: !943, line: 462, column: 19)
!13911 = !DILocation(line: 462, column: 26, scope: !13910)
!13912 = !DILocation(line: 463, column: 19, scope: !13910)
!13913 = !DILocation(line: 463, column: 22, scope: !13910)
!13914 = !DILocation(line: 463, column: 24, scope: !13910)
!13915 = !DILocation(line: 463, column: 30, scope: !13910)
!13916 = !DILocation(line: 463, column: 28, scope: !13910)
!13917 = !DILocation(line: 463, column: 38, scope: !13910)
!13918 = !DILocation(line: 463, column: 41, scope: !13910)
!13919 = !DILocation(line: 463, column: 45, scope: !13910)
!13920 = !DILocation(line: 463, column: 47, scope: !13910)
!13921 = !DILocation(line: 463, column: 52, scope: !13910)
!13922 = !DILocation(line: 462, column: 19, scope: !13905)
!13923 = !DILocation(line: 464, column: 25, scope: !13910)
!13924 = !DILocation(line: 464, column: 29, scope: !13910)
!13925 = !DILocation(line: 464, column: 31, scope: !13910)
!13926 = !DILocation(line: 464, column: 17, scope: !13910)
!13927 = !DILocation(line: 471, column: 25, scope: !13928)
!13928 = distinct !DILexicalBlock(scope: !13929, file: !943, line: 471, column: 25)
!13929 = distinct !DILexicalBlock(scope: !13910, file: !943, line: 465, column: 19)
!13930 = !DILocation(line: 471, column: 25, scope: !13929)
!13931 = !DILocation(line: 472, column: 23, scope: !13928)
!13932 = !DILocation(line: 473, column: 25, scope: !13929)
!13933 = !DILocation(line: 473, column: 29, scope: !13929)
!13934 = !DILocation(line: 473, column: 31, scope: !13929)
!13935 = !DILocation(line: 473, column: 23, scope: !13929)
!13936 = !DILocation(line: 474, column: 23, scope: !13929)
!13937 = !DILocation(line: 475, column: 21, scope: !13929)
!13938 = !DILocation(line: 475, column: 21, scope: !13939)
!13939 = distinct !DILexicalBlock(scope: !13940, file: !943, line: 475, column: 21)
!13940 = distinct !DILexicalBlock(scope: !13929, file: !943, line: 475, column: 21)
!13941 = !DILocation(line: 475, column: 21, scope: !13940)
!13942 = !DILocation(line: 476, column: 21, scope: !13929)
!13943 = !DILocation(line: 476, column: 21, scope: !13944)
!13944 = distinct !DILexicalBlock(scope: !13945, file: !943, line: 476, column: 21)
!13945 = distinct !DILexicalBlock(scope: !13929, file: !943, line: 476, column: 21)
!13946 = !DILocation(line: 476, column: 21, scope: !13945)
!13947 = !DILocation(line: 477, column: 21, scope: !13929)
!13948 = !DILocation(line: 477, column: 21, scope: !13949)
!13949 = distinct !DILexicalBlock(scope: !13950, file: !943, line: 477, column: 21)
!13950 = distinct !DILexicalBlock(scope: !13929, file: !943, line: 477, column: 21)
!13951 = !DILocation(line: 477, column: 21, scope: !13950)
!13952 = !DILocation(line: 478, column: 21, scope: !13929)
!13953 = !DILocation(line: 478, column: 21, scope: !13954)
!13954 = distinct !DILexicalBlock(scope: !13955, file: !943, line: 478, column: 21)
!13955 = distinct !DILexicalBlock(scope: !13929, file: !943, line: 478, column: 21)
!13956 = !DILocation(line: 478, column: 21, scope: !13955)
!13957 = !DILocation(line: 479, column: 21, scope: !13929)
!13958 = !DILocation(line: 482, column: 21, scope: !13929)
!13959 = !DILocation(line: 483, column: 19, scope: !13929)
!13960 = !DILocation(line: 484, column: 15, scope: !13905)
!13961 = !DILocation(line: 487, column: 15, scope: !13905)
!13962 = !DILocation(line: 489, column: 11, scope: !13834)
!13963 = !DILocation(line: 491, column: 24, scope: !13834)
!13964 = !DILocation(line: 491, column: 31, scope: !13834)
!13965 = !DILocation(line: 492, column: 24, scope: !13834)
!13966 = !DILocation(line: 492, column: 31, scope: !13834)
!13967 = !DILocation(line: 493, column: 24, scope: !13834)
!13968 = !DILocation(line: 493, column: 31, scope: !13834)
!13969 = !DILocation(line: 494, column: 24, scope: !13834)
!13970 = !DILocation(line: 494, column: 31, scope: !13834)
!13971 = !DILocation(line: 495, column: 24, scope: !13834)
!13972 = !DILocation(line: 495, column: 31, scope: !13834)
!13973 = !DILocation(line: 496, column: 24, scope: !13834)
!13974 = !DILocation(line: 496, column: 31, scope: !13834)
!13975 = !DILocation(line: 497, column: 24, scope: !13834)
!13976 = !DILocation(line: 497, column: 31, scope: !13834)
!13977 = !DILocation(line: 498, column: 26, scope: !13834)
!13978 = !DILocation(line: 498, column: 24, scope: !13834)
!13979 = !DILocation(line: 500, column: 15, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 500, column: 15)
!13981 = !DILocation(line: 500, column: 29, scope: !13980)
!13982 = !DILocation(line: 500, column: 15, scope: !13834)
!13983 = !DILocation(line: 502, column: 19, scope: !13984)
!13984 = distinct !DILexicalBlock(scope: !13985, file: !943, line: 502, column: 19)
!13985 = distinct !DILexicalBlock(scope: !13980, file: !943, line: 501, column: 13)
!13986 = !DILocation(line: 502, column: 19, scope: !13985)
!13987 = !DILocation(line: 503, column: 17, scope: !13984)
!13988 = !DILocation(line: 504, column: 15, scope: !13985)
!13989 = !DILocation(line: 509, column: 15, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 509, column: 15)
!13991 = !DILocation(line: 509, column: 33, scope: !13990)
!13992 = !DILocation(line: 509, column: 36, scope: !13990)
!13993 = !DILocation(line: 509, column: 55, scope: !13990)
!13994 = !DILocation(line: 509, column: 58, scope: !13990)
!13995 = !DILocation(line: 509, column: 15, scope: !13834)
!13996 = !DILocation(line: 510, column: 13, scope: !13990)
!13997 = !DILabel(scope: !13834, name: "c_and_shell_escape", file: !943, line: 512)
!13998 = !DILocation(line: 512, column: 9, scope: !13834)
!13999 = !DILocation(line: 513, column: 15, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 513, column: 15)
!14001 = !DILocation(line: 513, column: 29, scope: !14000)
!14002 = !DILocation(line: 514, column: 15, scope: !14000)
!14003 = !DILocation(line: 514, column: 18, scope: !14000)
!14004 = !DILocation(line: 513, column: 15, scope: !13834)
!14005 = !DILocation(line: 515, column: 13, scope: !14000)
!14006 = !DILabel(scope: !13834, name: "c_escape", file: !943, line: 517)
!14007 = !DILocation(line: 517, column: 9, scope: !13834)
!14008 = !DILocation(line: 518, column: 15, scope: !14009)
!14009 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 518, column: 15)
!14010 = !DILocation(line: 518, column: 15, scope: !13834)
!14011 = !DILocation(line: 520, column: 19, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !14009, file: !943, line: 519, column: 13)
!14013 = !DILocation(line: 520, column: 17, scope: !14012)
!14014 = !DILocation(line: 521, column: 15, scope: !14012)
!14015 = !DILocation(line: 523, column: 11, scope: !13834)
!14016 = !DILocation(line: 526, column: 18, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 526, column: 15)
!14018 = !DILocation(line: 526, column: 26, scope: !14017)
!14019 = !DILocation(line: 526, column: 15, scope: !13834)
!14020 = !DILocation(line: 526, column: 40, scope: !14017)
!14021 = !DILocation(line: 526, column: 47, scope: !14017)
!14022 = !DILocation(line: 526, column: 57, scope: !14017)
!14023 = !DILocation(line: 526, column: 65, scope: !14017)
!14024 = !DILocation(line: 527, column: 13, scope: !14017)
!14025 = !DILocation(line: 528, column: 11, scope: !13834)
!14026 = !DILocation(line: 530, column: 15, scope: !14027)
!14027 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 530, column: 15)
!14028 = !DILocation(line: 530, column: 17, scope: !14027)
!14029 = !DILocation(line: 530, column: 15, scope: !13834)
!14030 = !DILocation(line: 531, column: 13, scope: !14027)
!14031 = !DILocation(line: 532, column: 11, scope: !13834)
!14032 = !DILocation(line: 534, column: 36, scope: !13834)
!14033 = !DILocation(line: 535, column: 11, scope: !13834)
!14034 = !DILocation(line: 548, column: 15, scope: !14035)
!14035 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 548, column: 15)
!14036 = !DILocation(line: 548, column: 29, scope: !14035)
!14037 = !DILocation(line: 549, column: 15, scope: !14035)
!14038 = !DILocation(line: 549, column: 18, scope: !14035)
!14039 = !DILocation(line: 548, column: 15, scope: !13834)
!14040 = !DILocation(line: 550, column: 13, scope: !14035)
!14041 = !DILocation(line: 551, column: 11, scope: !13834)
!14042 = !DILocation(line: 554, column: 36, scope: !13834)
!14043 = !DILocation(line: 555, column: 36, scope: !13834)
!14044 = !DILocation(line: 556, column: 15, scope: !14045)
!14045 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 556, column: 15)
!14046 = !DILocation(line: 556, column: 29, scope: !14045)
!14047 = !DILocation(line: 556, column: 15, scope: !13834)
!14048 = !DILocation(line: 558, column: 19, scope: !14049)
!14049 = distinct !DILexicalBlock(scope: !14050, file: !943, line: 558, column: 19)
!14050 = distinct !DILexicalBlock(scope: !14045, file: !943, line: 557, column: 13)
!14051 = !DILocation(line: 558, column: 19, scope: !14050)
!14052 = !DILocation(line: 559, column: 17, scope: !14049)
!14053 = !DILocation(line: 561, column: 19, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14050, file: !943, line: 561, column: 19)
!14055 = !DILocation(line: 561, column: 30, scope: !14054)
!14056 = !DILocation(line: 561, column: 35, scope: !14054)
!14057 = !DILocation(line: 561, column: 19, scope: !14050)
!14058 = !DILocation(line: 566, column: 37, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14054, file: !943, line: 562, column: 17)
!14060 = !DILocation(line: 566, column: 35, scope: !14059)
!14061 = !DILocation(line: 567, column: 30, scope: !14059)
!14062 = !DILocation(line: 568, column: 17, scope: !14059)
!14063 = !DILocation(line: 570, column: 15, scope: !14050)
!14064 = !DILocation(line: 570, column: 15, scope: !14065)
!14065 = distinct !DILexicalBlock(scope: !14066, file: !943, line: 570, column: 15)
!14066 = distinct !DILexicalBlock(scope: !14050, file: !943, line: 570, column: 15)
!14067 = !DILocation(line: 570, column: 15, scope: !14066)
!14068 = !DILocation(line: 571, column: 15, scope: !14050)
!14069 = !DILocation(line: 571, column: 15, scope: !14070)
!14070 = distinct !DILexicalBlock(scope: !14071, file: !943, line: 571, column: 15)
!14071 = distinct !DILexicalBlock(scope: !14050, file: !943, line: 571, column: 15)
!14072 = !DILocation(line: 571, column: 15, scope: !14071)
!14073 = !DILocation(line: 572, column: 15, scope: !14050)
!14074 = !DILocation(line: 572, column: 15, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14076, file: !943, line: 572, column: 15)
!14076 = distinct !DILexicalBlock(scope: !14050, file: !943, line: 572, column: 15)
!14077 = !DILocation(line: 572, column: 15, scope: !14076)
!14078 = !DILocation(line: 573, column: 40, scope: !14050)
!14079 = !DILocation(line: 574, column: 13, scope: !14050)
!14080 = !DILocation(line: 575, column: 11, scope: !13834)
!14081 = !DILocation(line: 599, column: 36, scope: !13834)
!14082 = !DILocation(line: 600, column: 11, scope: !13834)
!14083 = !DILocalVariable(name: "m", scope: !14084, file: !943, line: 610, type: !52)
!14084 = distinct !DILexicalBlock(scope: !13834, file: !943, line: 608, column: 11)
!14085 = !DILocation(line: 610, column: 20, scope: !14084)
!14086 = !DILocalVariable(name: "printable", scope: !14084, file: !943, line: 612, type: !117)
!14087 = !DILocation(line: 612, column: 18, scope: !14084)
!14088 = !DILocation(line: 614, column: 17, scope: !14089)
!14089 = distinct !DILexicalBlock(scope: !14084, file: !943, line: 614, column: 17)
!14090 = !DILocation(line: 614, column: 17, scope: !14084)
!14091 = !DILocation(line: 616, column: 19, scope: !14092)
!14092 = distinct !DILexicalBlock(scope: !14089, file: !943, line: 615, column: 15)
!14093 = !DILocation(line: 617, column: 29, scope: !14092)
!14094 = !DILocation(line: 617, column: 41, scope: !14092)
!14095 = !DILocation(line: 617, column: 27, scope: !14092)
!14096 = !DILocation(line: 618, column: 15, scope: !14092)
!14097 = !DILocalVariable(name: "mbstate", scope: !14098, file: !943, line: 621, type: !1017)
!14098 = distinct !DILexicalBlock(scope: !14089, file: !943, line: 620, column: 15)
!14099 = !DILocation(line: 621, column: 27, scope: !14098)
!14100 = !DILocation(line: 622, column: 17, scope: !14098)
!14101 = !DILocation(line: 624, column: 19, scope: !14098)
!14102 = !DILocation(line: 625, column: 27, scope: !14098)
!14103 = !DILocation(line: 626, column: 21, scope: !14104)
!14104 = distinct !DILexicalBlock(scope: !14098, file: !943, line: 626, column: 21)
!14105 = !DILocation(line: 626, column: 29, scope: !14104)
!14106 = !DILocation(line: 626, column: 21, scope: !14098)
!14107 = !DILocation(line: 627, column: 37, scope: !14104)
!14108 = !DILocation(line: 627, column: 29, scope: !14104)
!14109 = !DILocation(line: 627, column: 27, scope: !14104)
!14110 = !DILocation(line: 627, column: 19, scope: !14104)
!14111 = !DILocation(line: 629, column: 17, scope: !14098)
!14112 = !DILocalVariable(name: "w", scope: !14113, file: !943, line: 631, type: !1031)
!14113 = distinct !DILexicalBlock(scope: !14098, file: !943, line: 630, column: 19)
!14114 = !DILocation(line: 631, column: 29, scope: !14113)
!14115 = !DILocalVariable(name: "bytes", scope: !14113, file: !943, line: 632, type: !52)
!14116 = !DILocation(line: 632, column: 28, scope: !14113)
!14117 = !DILocation(line: 632, column: 50, scope: !14113)
!14118 = !DILocation(line: 632, column: 54, scope: !14113)
!14119 = !DILocation(line: 632, column: 58, scope: !14113)
!14120 = !DILocation(line: 632, column: 56, scope: !14113)
!14121 = !DILocation(line: 633, column: 45, scope: !14113)
!14122 = !DILocation(line: 633, column: 56, scope: !14113)
!14123 = !DILocation(line: 633, column: 60, scope: !14113)
!14124 = !DILocation(line: 633, column: 58, scope: !14113)
!14125 = !DILocation(line: 633, column: 53, scope: !14113)
!14126 = !DILocation(line: 632, column: 36, scope: !14113)
!14127 = !DILocation(line: 634, column: 25, scope: !14128)
!14128 = distinct !DILexicalBlock(scope: !14113, file: !943, line: 634, column: 25)
!14129 = !DILocation(line: 634, column: 31, scope: !14128)
!14130 = !DILocation(line: 634, column: 25, scope: !14113)
!14131 = !DILocation(line: 635, column: 23, scope: !14128)
!14132 = !DILocation(line: 636, column: 30, scope: !14133)
!14133 = distinct !DILexicalBlock(scope: !14128, file: !943, line: 636, column: 30)
!14134 = !DILocation(line: 636, column: 36, scope: !14133)
!14135 = !DILocation(line: 636, column: 30, scope: !14128)
!14136 = !DILocation(line: 638, column: 35, scope: !14137)
!14137 = distinct !DILexicalBlock(scope: !14133, file: !943, line: 637, column: 23)
!14138 = !DILocation(line: 639, column: 25, scope: !14137)
!14139 = !DILocation(line: 641, column: 30, scope: !14140)
!14140 = distinct !DILexicalBlock(scope: !14133, file: !943, line: 641, column: 30)
!14141 = !DILocation(line: 641, column: 36, scope: !14140)
!14142 = !DILocation(line: 641, column: 30, scope: !14133)
!14143 = !DILocation(line: 643, column: 35, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14140, file: !943, line: 642, column: 23)
!14145 = !DILocation(line: 644, column: 25, scope: !14144)
!14146 = !DILocation(line: 644, column: 32, scope: !14144)
!14147 = !DILocation(line: 644, column: 36, scope: !14144)
!14148 = !DILocation(line: 644, column: 34, scope: !14144)
!14149 = !DILocation(line: 644, column: 40, scope: !14144)
!14150 = !DILocation(line: 644, column: 38, scope: !14144)
!14151 = !DILocation(line: 644, column: 48, scope: !14144)
!14152 = !DILocation(line: 644, column: 51, scope: !14144)
!14153 = !DILocation(line: 644, column: 55, scope: !14144)
!14154 = !DILocation(line: 644, column: 59, scope: !14144)
!14155 = !DILocation(line: 644, column: 57, scope: !14144)
!14156 = !DILocation(line: 0, scope: !14144)
!14157 = !DILocation(line: 645, column: 28, scope: !14144)
!14158 = distinct !{!14158, !14145, !14157}
!14159 = !DILocation(line: 646, column: 25, scope: !14144)
!14160 = !DILocation(line: 654, column: 44, scope: !14161)
!14161 = distinct !DILexicalBlock(scope: !14162, file: !943, line: 654, column: 29)
!14162 = distinct !DILexicalBlock(scope: !14140, file: !943, line: 649, column: 23)
!14163 = !DILocation(line: 655, column: 29, scope: !14161)
!14164 = !DILocation(line: 655, column: 32, scope: !14161)
!14165 = !DILocation(line: 655, column: 46, scope: !14161)
!14166 = !DILocation(line: 654, column: 29, scope: !14162)
!14167 = !DILocalVariable(name: "j", scope: !14168, file: !943, line: 657, type: !52)
!14168 = distinct !DILexicalBlock(scope: !14161, file: !943, line: 656, column: 27)
!14169 = !DILocation(line: 657, column: 36, scope: !14168)
!14170 = !DILocation(line: 658, column: 36, scope: !14171)
!14171 = distinct !DILexicalBlock(scope: !14168, file: !943, line: 658, column: 29)
!14172 = !DILocation(line: 658, column: 34, scope: !14171)
!14173 = !DILocation(line: 658, column: 41, scope: !14174)
!14174 = distinct !DILexicalBlock(scope: !14171, file: !943, line: 658, column: 29)
!14175 = !DILocation(line: 658, column: 45, scope: !14174)
!14176 = !DILocation(line: 658, column: 43, scope: !14174)
!14177 = !DILocation(line: 658, column: 29, scope: !14171)
!14178 = !DILocation(line: 659, column: 39, scope: !14174)
!14179 = !DILocation(line: 659, column: 43, scope: !14174)
!14180 = !DILocation(line: 659, column: 47, scope: !14174)
!14181 = !DILocation(line: 659, column: 45, scope: !14174)
!14182 = !DILocation(line: 659, column: 51, scope: !14174)
!14183 = !DILocation(line: 659, column: 49, scope: !14174)
!14184 = !DILocation(line: 659, column: 31, scope: !14174)
!14185 = !DILocation(line: 663, column: 35, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14174, file: !943, line: 660, column: 33)
!14187 = !DILocation(line: 666, column: 35, scope: !14186)
!14188 = !DILocation(line: 667, column: 33, scope: !14186)
!14189 = !DILocation(line: 658, column: 53, scope: !14174)
!14190 = !DILocation(line: 658, column: 29, scope: !14174)
!14191 = distinct !{!14191, !14177, !14192}
!14192 = !DILocation(line: 667, column: 33, scope: !14171)
!14193 = !DILocation(line: 668, column: 27, scope: !14168)
!14194 = !DILocation(line: 670, column: 41, scope: !14195)
!14195 = distinct !DILexicalBlock(scope: !14162, file: !943, line: 670, column: 29)
!14196 = !DILocation(line: 670, column: 31, scope: !14195)
!14197 = !DILocation(line: 670, column: 29, scope: !14162)
!14198 = !DILocation(line: 671, column: 37, scope: !14195)
!14199 = !DILocation(line: 671, column: 27, scope: !14195)
!14200 = !DILocation(line: 672, column: 30, scope: !14162)
!14201 = !DILocation(line: 672, column: 27, scope: !14162)
!14202 = !DILocation(line: 674, column: 19, scope: !14113)
!14203 = !DILocation(line: 675, column: 26, scope: !14098)
!14204 = !DILocation(line: 675, column: 24, scope: !14098)
!14205 = distinct !{!14205, !14111, !14206}
!14206 = !DILocation(line: 675, column: 44, scope: !14098)
!14207 = !DILocation(line: 678, column: 40, scope: !14084)
!14208 = !DILocation(line: 678, column: 38, scope: !14084)
!14209 = !DILocation(line: 680, column: 21, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14084, file: !943, line: 680, column: 17)
!14211 = !DILocation(line: 680, column: 19, scope: !14210)
!14212 = !DILocation(line: 680, column: 23, scope: !14210)
!14213 = !DILocation(line: 680, column: 27, scope: !14210)
!14214 = !DILocation(line: 680, column: 45, scope: !14210)
!14215 = !DILocation(line: 680, column: 50, scope: !14210)
!14216 = !DILocation(line: 680, column: 17, scope: !14084)
!14217 = !DILocalVariable(name: "ilim", scope: !14218, file: !943, line: 684, type: !52)
!14218 = distinct !DILexicalBlock(scope: !14210, file: !943, line: 681, column: 15)
!14219 = !DILocation(line: 684, column: 24, scope: !14218)
!14220 = !DILocation(line: 684, column: 31, scope: !14218)
!14221 = !DILocation(line: 684, column: 35, scope: !14218)
!14222 = !DILocation(line: 684, column: 33, scope: !14218)
!14223 = !DILocation(line: 686, column: 17, scope: !14218)
!14224 = !DILocation(line: 688, column: 25, scope: !14225)
!14225 = distinct !DILexicalBlock(scope: !14226, file: !943, line: 688, column: 25)
!14226 = distinct !DILexicalBlock(scope: !14227, file: !943, line: 687, column: 19)
!14227 = distinct !DILexicalBlock(scope: !14228, file: !943, line: 686, column: 17)
!14228 = distinct !DILexicalBlock(scope: !14218, file: !943, line: 686, column: 17)
!14229 = !DILocation(line: 688, column: 43, scope: !14225)
!14230 = !DILocation(line: 688, column: 48, scope: !14225)
!14231 = !DILocation(line: 688, column: 25, scope: !14226)
!14232 = !DILocation(line: 690, column: 25, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14225, file: !943, line: 689, column: 23)
!14234 = !DILocation(line: 690, column: 25, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14236, file: !943, line: 690, column: 25)
!14236 = distinct !DILexicalBlock(scope: !14233, file: !943, line: 690, column: 25)
!14237 = !DILocation(line: 690, column: 25, scope: !14236)
!14238 = !DILocation(line: 690, column: 25, scope: !14239)
!14239 = distinct !DILexicalBlock(scope: !14236, file: !943, line: 690, column: 25)
!14240 = !DILocation(line: 690, column: 25, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14239, file: !943, line: 690, column: 25)
!14242 = !DILocation(line: 690, column: 25, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14244, file: !943, line: 690, column: 25)
!14244 = distinct !DILexicalBlock(scope: !14241, file: !943, line: 690, column: 25)
!14245 = !DILocation(line: 690, column: 25, scope: !14244)
!14246 = !DILocation(line: 690, column: 25, scope: !14247)
!14247 = distinct !DILexicalBlock(scope: !14248, file: !943, line: 690, column: 25)
!14248 = distinct !DILexicalBlock(scope: !14241, file: !943, line: 690, column: 25)
!14249 = !DILocation(line: 690, column: 25, scope: !14248)
!14250 = !DILocation(line: 690, column: 25, scope: !14251)
!14251 = distinct !DILexicalBlock(scope: !14252, file: !943, line: 690, column: 25)
!14252 = distinct !DILexicalBlock(scope: !14241, file: !943, line: 690, column: 25)
!14253 = !DILocation(line: 690, column: 25, scope: !14252)
!14254 = !DILocation(line: 690, column: 25, scope: !14255)
!14255 = distinct !DILexicalBlock(scope: !14256, file: !943, line: 690, column: 25)
!14256 = distinct !DILexicalBlock(scope: !14236, file: !943, line: 690, column: 25)
!14257 = !DILocation(line: 690, column: 25, scope: !14256)
!14258 = !DILocation(line: 691, column: 25, scope: !14233)
!14259 = !DILocation(line: 691, column: 25, scope: !14260)
!14260 = distinct !DILexicalBlock(scope: !14261, file: !943, line: 691, column: 25)
!14261 = distinct !DILexicalBlock(scope: !14233, file: !943, line: 691, column: 25)
!14262 = !DILocation(line: 691, column: 25, scope: !14261)
!14263 = !DILocation(line: 692, column: 25, scope: !14233)
!14264 = !DILocation(line: 692, column: 25, scope: !14265)
!14265 = distinct !DILexicalBlock(scope: !14266, file: !943, line: 692, column: 25)
!14266 = distinct !DILexicalBlock(scope: !14233, file: !943, line: 692, column: 25)
!14267 = !DILocation(line: 692, column: 25, scope: !14266)
!14268 = !DILocation(line: 693, column: 36, scope: !14233)
!14269 = !DILocation(line: 693, column: 38, scope: !14233)
!14270 = !DILocation(line: 693, column: 33, scope: !14233)
!14271 = !DILocation(line: 693, column: 29, scope: !14233)
!14272 = !DILocation(line: 693, column: 27, scope: !14233)
!14273 = !DILocation(line: 694, column: 23, scope: !14233)
!14274 = !DILocation(line: 695, column: 30, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14225, file: !943, line: 695, column: 30)
!14276 = !DILocation(line: 695, column: 30, scope: !14225)
!14277 = !DILocation(line: 697, column: 25, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14275, file: !943, line: 696, column: 23)
!14279 = !DILocation(line: 697, column: 25, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14281, file: !943, line: 697, column: 25)
!14281 = distinct !DILexicalBlock(scope: !14278, file: !943, line: 697, column: 25)
!14282 = !DILocation(line: 697, column: 25, scope: !14281)
!14283 = !DILocation(line: 698, column: 40, scope: !14278)
!14284 = !DILocation(line: 699, column: 23, scope: !14278)
!14285 = !DILocation(line: 700, column: 25, scope: !14286)
!14286 = distinct !DILexicalBlock(scope: !14226, file: !943, line: 700, column: 25)
!14287 = !DILocation(line: 700, column: 33, scope: !14286)
!14288 = !DILocation(line: 700, column: 35, scope: !14286)
!14289 = !DILocation(line: 700, column: 30, scope: !14286)
!14290 = !DILocation(line: 700, column: 25, scope: !14226)
!14291 = !DILocation(line: 701, column: 23, scope: !14286)
!14292 = !DILocation(line: 702, column: 21, scope: !14226)
!14293 = !DILocation(line: 702, column: 21, scope: !14294)
!14294 = distinct !DILexicalBlock(scope: !14295, file: !943, line: 702, column: 21)
!14295 = distinct !DILexicalBlock(scope: !14226, file: !943, line: 702, column: 21)
!14296 = !DILocation(line: 702, column: 21, scope: !14295)
!14297 = !DILocation(line: 702, column: 21, scope: !14298)
!14298 = distinct !DILexicalBlock(scope: !14294, file: !943, line: 702, column: 21)
!14299 = !DILocation(line: 702, column: 21, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14301, file: !943, line: 702, column: 21)
!14301 = distinct !DILexicalBlock(scope: !14298, file: !943, line: 702, column: 21)
!14302 = !DILocation(line: 702, column: 21, scope: !14301)
!14303 = !DILocation(line: 702, column: 21, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14305, file: !943, line: 702, column: 21)
!14305 = distinct !DILexicalBlock(scope: !14298, file: !943, line: 702, column: 21)
!14306 = !DILocation(line: 702, column: 21, scope: !14305)
!14307 = !DILocation(line: 703, column: 21, scope: !14226)
!14308 = !DILocation(line: 703, column: 21, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14310, file: !943, line: 703, column: 21)
!14310 = distinct !DILexicalBlock(scope: !14226, file: !943, line: 703, column: 21)
!14311 = !DILocation(line: 703, column: 21, scope: !14310)
!14312 = !DILocation(line: 704, column: 25, scope: !14226)
!14313 = !DILocation(line: 704, column: 29, scope: !14226)
!14314 = !DILocation(line: 704, column: 23, scope: !14226)
!14315 = !DILocation(line: 686, column: 17, scope: !14227)
!14316 = distinct !{!14316, !14317, !14318}
!14317 = !DILocation(line: 686, column: 17, scope: !14228)
!14318 = !DILocation(line: 705, column: 19, scope: !14228)
!14319 = !DILocation(line: 707, column: 17, scope: !14218)
!14320 = !DILocation(line: 710, column: 9, scope: !13834)
!14321 = !DILocation(line: 712, column: 16, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !13780, file: !943, line: 712, column: 11)
!14323 = !DILocation(line: 712, column: 34, scope: !14322)
!14324 = !DILocation(line: 712, column: 37, scope: !14322)
!14325 = !DILocation(line: 712, column: 51, scope: !14322)
!14326 = !DILocation(line: 713, column: 15, scope: !14322)
!14327 = !DILocation(line: 713, column: 18, scope: !14322)
!14328 = !DILocation(line: 714, column: 14, scope: !14322)
!14329 = !DILocation(line: 714, column: 17, scope: !14322)
!14330 = !DILocation(line: 715, column: 14, scope: !14322)
!14331 = !DILocation(line: 715, column: 17, scope: !14322)
!14332 = !DILocation(line: 715, column: 33, scope: !14322)
!14333 = !DILocation(line: 715, column: 35, scope: !14322)
!14334 = !DILocation(line: 715, column: 51, scope: !14322)
!14335 = !DILocation(line: 715, column: 53, scope: !14322)
!14336 = !DILocation(line: 715, column: 47, scope: !14322)
!14337 = !DILocation(line: 715, column: 65, scope: !14322)
!14338 = !DILocation(line: 716, column: 11, scope: !14322)
!14339 = !DILocation(line: 716, column: 15, scope: !14322)
!14340 = !DILocation(line: 712, column: 11, scope: !13780)
!14341 = !DILocation(line: 717, column: 9, scope: !14322)
!14342 = !DILabel(scope: !13780, name: "store_escape", file: !943, line: 719)
!14343 = !DILocation(line: 719, column: 5, scope: !13780)
!14344 = !DILocation(line: 720, column: 7, scope: !13780)
!14345 = !DILocation(line: 720, column: 7, scope: !14346)
!14346 = distinct !DILexicalBlock(scope: !14347, file: !943, line: 720, column: 7)
!14347 = distinct !DILexicalBlock(scope: !13780, file: !943, line: 720, column: 7)
!14348 = !DILocation(line: 720, column: 7, scope: !14347)
!14349 = !DILocation(line: 720, column: 7, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14347, file: !943, line: 720, column: 7)
!14351 = !DILocation(line: 720, column: 7, scope: !14352)
!14352 = distinct !DILexicalBlock(scope: !14350, file: !943, line: 720, column: 7)
!14353 = !DILocation(line: 720, column: 7, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14355, file: !943, line: 720, column: 7)
!14355 = distinct !DILexicalBlock(scope: !14352, file: !943, line: 720, column: 7)
!14356 = !DILocation(line: 720, column: 7, scope: !14355)
!14357 = !DILocation(line: 720, column: 7, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14359, file: !943, line: 720, column: 7)
!14359 = distinct !DILexicalBlock(scope: !14352, file: !943, line: 720, column: 7)
!14360 = !DILocation(line: 720, column: 7, scope: !14359)
!14361 = !DILocation(line: 720, column: 7, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14363, file: !943, line: 720, column: 7)
!14363 = distinct !DILexicalBlock(scope: !14352, file: !943, line: 720, column: 7)
!14364 = !DILocation(line: 720, column: 7, scope: !14363)
!14365 = !DILocation(line: 720, column: 7, scope: !14366)
!14366 = distinct !DILexicalBlock(scope: !14367, file: !943, line: 720, column: 7)
!14367 = distinct !DILexicalBlock(scope: !14347, file: !943, line: 720, column: 7)
!14368 = !DILocation(line: 720, column: 7, scope: !14367)
!14369 = !DILabel(scope: !13780, name: "store_c", file: !943, line: 722)
!14370 = !DILocation(line: 722, column: 5, scope: !13780)
!14371 = !DILocation(line: 723, column: 7, scope: !13780)
!14372 = !DILocation(line: 723, column: 7, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !943, line: 723, column: 7)
!14374 = distinct !DILexicalBlock(scope: !13780, file: !943, line: 723, column: 7)
!14375 = !DILocation(line: 723, column: 7, scope: !14374)
!14376 = !DILocation(line: 723, column: 7, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14373, file: !943, line: 723, column: 7)
!14378 = !DILocation(line: 723, column: 7, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !943, line: 723, column: 7)
!14380 = distinct !DILexicalBlock(scope: !14377, file: !943, line: 723, column: 7)
!14381 = !DILocation(line: 723, column: 7, scope: !14380)
!14382 = !DILocation(line: 723, column: 7, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14384, file: !943, line: 723, column: 7)
!14384 = distinct !DILexicalBlock(scope: !14377, file: !943, line: 723, column: 7)
!14385 = !DILocation(line: 723, column: 7, scope: !14384)
!14386 = !DILocation(line: 724, column: 7, scope: !13780)
!14387 = !DILocation(line: 724, column: 7, scope: !14388)
!14388 = distinct !DILexicalBlock(scope: !14389, file: !943, line: 724, column: 7)
!14389 = distinct !DILexicalBlock(scope: !13780, file: !943, line: 724, column: 7)
!14390 = !DILocation(line: 724, column: 7, scope: !14389)
!14391 = !DILocation(line: 726, column: 13, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !13780, file: !943, line: 726, column: 11)
!14393 = !DILocation(line: 726, column: 11, scope: !13780)
!14394 = !DILocation(line: 727, column: 38, scope: !14392)
!14395 = !DILocation(line: 727, column: 9, scope: !14392)
!14396 = !DILocation(line: 728, column: 5, scope: !13780)
!14397 = !DILocation(line: 400, column: 75, scope: !13769)
!14398 = !DILocation(line: 400, column: 3, scope: !13769)
!14399 = distinct !{!14399, !13778, !14400}
!14400 = !DILocation(line: 728, column: 5, scope: !13766)
!14401 = !DILocation(line: 730, column: 7, scope: !14402)
!14402 = distinct !DILexicalBlock(scope: !13630, file: !943, line: 730, column: 7)
!14403 = !DILocation(line: 730, column: 11, scope: !14402)
!14404 = !DILocation(line: 730, column: 16, scope: !14402)
!14405 = !DILocation(line: 730, column: 19, scope: !14402)
!14406 = !DILocation(line: 730, column: 33, scope: !14402)
!14407 = !DILocation(line: 731, column: 7, scope: !14402)
!14408 = !DILocation(line: 731, column: 10, scope: !14402)
!14409 = !DILocation(line: 730, column: 7, scope: !13630)
!14410 = !DILocation(line: 732, column: 5, scope: !14402)
!14411 = !DILocation(line: 738, column: 7, scope: !14412)
!14412 = distinct !DILexicalBlock(scope: !13630, file: !943, line: 738, column: 7)
!14413 = !DILocation(line: 738, column: 21, scope: !14412)
!14414 = !DILocation(line: 738, column: 51, scope: !14412)
!14415 = !DILocation(line: 738, column: 56, scope: !14412)
!14416 = !DILocation(line: 739, column: 7, scope: !14412)
!14417 = !DILocation(line: 739, column: 10, scope: !14412)
!14418 = !DILocation(line: 738, column: 7, scope: !13630)
!14419 = !DILocation(line: 741, column: 11, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14421, file: !943, line: 741, column: 11)
!14421 = distinct !DILexicalBlock(scope: !14412, file: !943, line: 740, column: 5)
!14422 = !DILocation(line: 741, column: 11, scope: !14421)
!14423 = !DILocation(line: 742, column: 42, scope: !14420)
!14424 = !DILocation(line: 742, column: 50, scope: !14420)
!14425 = !DILocation(line: 742, column: 67, scope: !14420)
!14426 = !DILocation(line: 742, column: 72, scope: !14420)
!14427 = !DILocation(line: 744, column: 42, scope: !14420)
!14428 = !DILocation(line: 744, column: 49, scope: !14420)
!14429 = !DILocation(line: 745, column: 42, scope: !14420)
!14430 = !DILocation(line: 745, column: 54, scope: !14420)
!14431 = !DILocation(line: 742, column: 16, scope: !14420)
!14432 = !DILocation(line: 742, column: 9, scope: !14420)
!14433 = !DILocation(line: 746, column: 18, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14420, file: !943, line: 746, column: 16)
!14435 = !DILocation(line: 746, column: 29, scope: !14434)
!14436 = !DILocation(line: 746, column: 32, scope: !14434)
!14437 = !DILocation(line: 746, column: 16, scope: !14420)
!14438 = !DILocation(line: 749, column: 24, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14434, file: !943, line: 747, column: 9)
!14440 = !DILocation(line: 749, column: 22, scope: !14439)
!14441 = !DILocation(line: 750, column: 15, scope: !14439)
!14442 = !DILocation(line: 751, column: 11, scope: !14439)
!14443 = !DILocation(line: 753, column: 5, scope: !14421)
!14444 = !DILocation(line: 755, column: 7, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !13630, file: !943, line: 755, column: 7)
!14446 = !DILocation(line: 755, column: 20, scope: !14445)
!14447 = !DILocation(line: 755, column: 24, scope: !14445)
!14448 = !DILocation(line: 755, column: 7, scope: !13630)
!14449 = !DILocation(line: 756, column: 5, scope: !14445)
!14450 = !DILocation(line: 756, column: 13, scope: !14451)
!14451 = distinct !DILexicalBlock(scope: !14452, file: !943, line: 756, column: 5)
!14452 = distinct !DILexicalBlock(scope: !14445, file: !943, line: 756, column: 5)
!14453 = !DILocation(line: 756, column: 12, scope: !14451)
!14454 = !DILocation(line: 756, column: 5, scope: !14452)
!14455 = !DILocation(line: 757, column: 7, scope: !14451)
!14456 = !DILocation(line: 757, column: 7, scope: !14457)
!14457 = distinct !DILexicalBlock(scope: !14458, file: !943, line: 757, column: 7)
!14458 = distinct !DILexicalBlock(scope: !14451, file: !943, line: 757, column: 7)
!14459 = !DILocation(line: 757, column: 7, scope: !14458)
!14460 = !DILocation(line: 756, column: 39, scope: !14451)
!14461 = !DILocation(line: 756, column: 5, scope: !14451)
!14462 = distinct !{!14462, !14454, !14463}
!14463 = !DILocation(line: 757, column: 7, scope: !14452)
!14464 = !DILocation(line: 759, column: 7, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !13630, file: !943, line: 759, column: 7)
!14466 = !DILocation(line: 759, column: 13, scope: !14465)
!14467 = !DILocation(line: 759, column: 11, scope: !14465)
!14468 = !DILocation(line: 759, column: 7, scope: !13630)
!14469 = !DILocation(line: 760, column: 5, scope: !14465)
!14470 = !DILocation(line: 760, column: 12, scope: !14465)
!14471 = !DILocation(line: 760, column: 17, scope: !14465)
!14472 = !DILocation(line: 761, column: 10, scope: !13630)
!14473 = !DILocation(line: 761, column: 3, scope: !13630)
!14474 = !DILabel(scope: !13630, name: "force_outer_quoting_style", file: !943, line: 763)
!14475 = !DILocation(line: 763, column: 2, scope: !13630)
!14476 = !DILocation(line: 766, column: 7, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !13630, file: !943, line: 766, column: 7)
!14478 = !DILocation(line: 766, column: 21, scope: !14477)
!14479 = !DILocation(line: 766, column: 51, scope: !14477)
!14480 = !DILocation(line: 766, column: 54, scope: !14477)
!14481 = !DILocation(line: 766, column: 7, scope: !13630)
!14482 = !DILocation(line: 767, column: 19, scope: !14477)
!14483 = !DILocation(line: 767, column: 5, scope: !14477)
!14484 = !DILocation(line: 768, column: 36, scope: !13630)
!14485 = !DILocation(line: 768, column: 44, scope: !13630)
!14486 = !DILocation(line: 768, column: 56, scope: !13630)
!14487 = !DILocation(line: 768, column: 61, scope: !13630)
!14488 = !DILocation(line: 769, column: 36, scope: !13630)
!14489 = !DILocation(line: 770, column: 36, scope: !13630)
!14490 = !DILocation(line: 770, column: 42, scope: !13630)
!14491 = !DILocation(line: 771, column: 36, scope: !13630)
!14492 = !DILocation(line: 771, column: 48, scope: !13630)
!14493 = !DILocation(line: 768, column: 10, scope: !13630)
!14494 = !DILocation(line: 768, column: 3, scope: !13630)
!14495 = !DILocation(line: 772, column: 1, scope: !13630)
!14496 = distinct !DISubprogram(name: "gettext_quote", scope: !943, file: !943, line: 207, type: !1032, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14497 = !DILocalVariable(name: "msgid", arg: 1, scope: !14496, file: !943, line: 207, type: !112)
!14498 = !DILocation(line: 207, column: 28, scope: !14496)
!14499 = !DILocalVariable(name: "s", arg: 2, scope: !14496, file: !943, line: 207, type: !917)
!14500 = !DILocation(line: 207, column: 54, scope: !14496)
!14501 = !DILocalVariable(name: "translation", scope: !14496, file: !943, line: 209, type: !112)
!14502 = !DILocation(line: 209, column: 15, scope: !14496)
!14503 = !DILocation(line: 209, column: 29, scope: !14496)
!14504 = !DILocalVariable(name: "locale_code", scope: !14496, file: !943, line: 210, type: !112)
!14505 = !DILocation(line: 210, column: 15, scope: !14496)
!14506 = !DILocation(line: 212, column: 7, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14496, file: !943, line: 212, column: 7)
!14508 = !DILocation(line: 212, column: 22, scope: !14507)
!14509 = !DILocation(line: 212, column: 19, scope: !14507)
!14510 = !DILocation(line: 212, column: 7, scope: !14496)
!14511 = !DILocation(line: 213, column: 12, scope: !14507)
!14512 = !DILocation(line: 213, column: 5, scope: !14507)
!14513 = !DILocation(line: 233, column: 17, scope: !14496)
!14514 = !DILocation(line: 233, column: 15, scope: !14496)
!14515 = !DILocation(line: 234, column: 7, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14496, file: !943, line: 234, column: 7)
!14517 = !DILocation(line: 234, column: 7, scope: !14496)
!14518 = !DILocation(line: 235, column: 12, scope: !14516)
!14519 = !DILocation(line: 235, column: 21, scope: !14516)
!14520 = !DILocation(line: 235, column: 5, scope: !14516)
!14521 = !DILocation(line: 236, column: 7, scope: !14522)
!14522 = distinct !DILexicalBlock(scope: !14496, file: !943, line: 236, column: 7)
!14523 = !DILocation(line: 236, column: 7, scope: !14496)
!14524 = !DILocation(line: 237, column: 12, scope: !14522)
!14525 = !DILocation(line: 237, column: 21, scope: !14522)
!14526 = !DILocation(line: 237, column: 5, scope: !14522)
!14527 = !DILocation(line: 239, column: 11, scope: !14496)
!14528 = !DILocation(line: 239, column: 13, scope: !14496)
!14529 = !DILocation(line: 239, column: 3, scope: !14496)
!14530 = !DILocation(line: 240, column: 1, scope: !14496)
!14531 = distinct !DISubprogram(name: "quotearg_alloc", scope: !943, file: !943, line: 799, type: !966, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14532 = !DILocalVariable(name: "arg", arg: 1, scope: !14531, file: !943, line: 799, type: !112)
!14533 = !DILocation(line: 799, column: 29, scope: !14531)
!14534 = !DILocalVariable(name: "argsize", arg: 2, scope: !14531, file: !943, line: 799, type: !52)
!14535 = !DILocation(line: 799, column: 41, scope: !14531)
!14536 = !DILocalVariable(name: "o", arg: 3, scope: !14531, file: !943, line: 800, type: !953)
!14537 = !DILocation(line: 800, column: 47, scope: !14531)
!14538 = !DILocation(line: 802, column: 30, scope: !14531)
!14539 = !DILocation(line: 802, column: 35, scope: !14531)
!14540 = !DILocation(line: 802, column: 50, scope: !14531)
!14541 = !DILocation(line: 802, column: 10, scope: !14531)
!14542 = !DILocation(line: 802, column: 3, scope: !14531)
!14543 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !943, file: !943, line: 812, type: !968, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14544 = !DILocalVariable(name: "arg", arg: 1, scope: !14543, file: !943, line: 812, type: !112)
!14545 = !DILocation(line: 812, column: 33, scope: !14543)
!14546 = !DILocalVariable(name: "argsize", arg: 2, scope: !14543, file: !943, line: 812, type: !52)
!14547 = !DILocation(line: 812, column: 45, scope: !14543)
!14548 = !DILocalVariable(name: "size", arg: 3, scope: !14543, file: !943, line: 812, type: !599)
!14549 = !DILocation(line: 812, column: 62, scope: !14543)
!14550 = !DILocalVariable(name: "o", arg: 4, scope: !14543, file: !943, line: 813, type: !953)
!14551 = !DILocation(line: 813, column: 51, scope: !14543)
!14552 = !DILocalVariable(name: "p", scope: !14543, file: !943, line: 815, type: !953)
!14553 = !DILocation(line: 815, column: 33, scope: !14543)
!14554 = !DILocation(line: 815, column: 37, scope: !14543)
!14555 = !DILocation(line: 815, column: 41, scope: !14543)
!14556 = !DILocalVariable(name: "e", scope: !14543, file: !943, line: 816, type: !5)
!14557 = !DILocation(line: 816, column: 7, scope: !14543)
!14558 = !DILocation(line: 816, column: 11, scope: !14543)
!14559 = !DILocalVariable(name: "flags", scope: !14543, file: !943, line: 818, type: !5)
!14560 = !DILocation(line: 818, column: 7, scope: !14543)
!14561 = !DILocation(line: 818, column: 15, scope: !14543)
!14562 = !DILocation(line: 818, column: 18, scope: !14543)
!14563 = !DILocation(line: 818, column: 27, scope: !14543)
!14564 = !DILocation(line: 818, column: 24, scope: !14543)
!14565 = !DILocalVariable(name: "bufsize", scope: !14543, file: !943, line: 819, type: !52)
!14566 = !DILocation(line: 819, column: 10, scope: !14543)
!14567 = !DILocation(line: 819, column: 52, scope: !14543)
!14568 = !DILocation(line: 819, column: 57, scope: !14543)
!14569 = !DILocation(line: 819, column: 66, scope: !14543)
!14570 = !DILocation(line: 819, column: 69, scope: !14543)
!14571 = !DILocation(line: 820, column: 46, scope: !14543)
!14572 = !DILocation(line: 820, column: 53, scope: !14543)
!14573 = !DILocation(line: 820, column: 56, scope: !14543)
!14574 = !DILocation(line: 821, column: 46, scope: !14543)
!14575 = !DILocation(line: 821, column: 49, scope: !14543)
!14576 = !DILocation(line: 822, column: 46, scope: !14543)
!14577 = !DILocation(line: 822, column: 49, scope: !14543)
!14578 = !DILocation(line: 819, column: 20, scope: !14543)
!14579 = !DILocation(line: 822, column: 62, scope: !14543)
!14580 = !DILocalVariable(name: "buf", scope: !14543, file: !943, line: 823, type: !7)
!14581 = !DILocation(line: 823, column: 9, scope: !14543)
!14582 = !DILocation(line: 823, column: 27, scope: !14543)
!14583 = !DILocation(line: 823, column: 15, scope: !14543)
!14584 = !DILocation(line: 824, column: 29, scope: !14543)
!14585 = !DILocation(line: 824, column: 34, scope: !14543)
!14586 = !DILocation(line: 824, column: 43, scope: !14543)
!14587 = !DILocation(line: 824, column: 48, scope: !14543)
!14588 = !DILocation(line: 824, column: 57, scope: !14543)
!14589 = !DILocation(line: 824, column: 60, scope: !14543)
!14590 = !DILocation(line: 824, column: 67, scope: !14543)
!14591 = !DILocation(line: 825, column: 29, scope: !14543)
!14592 = !DILocation(line: 825, column: 32, scope: !14543)
!14593 = !DILocation(line: 826, column: 29, scope: !14543)
!14594 = !DILocation(line: 826, column: 32, scope: !14543)
!14595 = !DILocation(line: 826, column: 44, scope: !14543)
!14596 = !DILocation(line: 826, column: 47, scope: !14543)
!14597 = !DILocation(line: 824, column: 3, scope: !14543)
!14598 = !DILocation(line: 827, column: 11, scope: !14543)
!14599 = !DILocation(line: 827, column: 3, scope: !14543)
!14600 = !DILocation(line: 827, column: 9, scope: !14543)
!14601 = !DILocation(line: 828, column: 7, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14543, file: !943, line: 828, column: 7)
!14603 = !DILocation(line: 828, column: 7, scope: !14543)
!14604 = !DILocation(line: 829, column: 13, scope: !14602)
!14605 = !DILocation(line: 829, column: 21, scope: !14602)
!14606 = !DILocation(line: 829, column: 6, scope: !14602)
!14607 = !DILocation(line: 829, column: 11, scope: !14602)
!14608 = !DILocation(line: 829, column: 5, scope: !14602)
!14609 = !DILocation(line: 830, column: 10, scope: !14543)
!14610 = !DILocation(line: 830, column: 3, scope: !14543)
!14611 = distinct !DISubprogram(name: "quotearg_free", scope: !943, file: !943, line: 848, type: !131, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14612 = !DILocalVariable(name: "sv", scope: !14611, file: !943, line: 850, type: !970)
!14613 = !DILocation(line: 850, column: 19, scope: !14611)
!14614 = !DILocation(line: 850, column: 24, scope: !14611)
!14615 = !DILocalVariable(name: "i", scope: !14611, file: !943, line: 851, type: !5)
!14616 = !DILocation(line: 851, column: 7, scope: !14611)
!14617 = !DILocation(line: 852, column: 10, scope: !14618)
!14618 = distinct !DILexicalBlock(scope: !14611, file: !943, line: 852, column: 3)
!14619 = !DILocation(line: 852, column: 8, scope: !14618)
!14620 = !DILocation(line: 852, column: 15, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14618, file: !943, line: 852, column: 3)
!14622 = !DILocation(line: 852, column: 19, scope: !14621)
!14623 = !DILocation(line: 852, column: 17, scope: !14621)
!14624 = !DILocation(line: 852, column: 3, scope: !14618)
!14625 = !DILocation(line: 853, column: 11, scope: !14621)
!14626 = !DILocation(line: 853, column: 14, scope: !14621)
!14627 = !DILocation(line: 853, column: 17, scope: !14621)
!14628 = !{!14629, !2994, i64 8}
!14629 = !{!"slotvec", !3178, i64 0, !2994, i64 8}
!14630 = !DILocation(line: 853, column: 5, scope: !14621)
!14631 = !DILocation(line: 852, column: 28, scope: !14621)
!14632 = !DILocation(line: 852, column: 3, scope: !14621)
!14633 = distinct !{!14633, !14624, !14634}
!14634 = !DILocation(line: 853, column: 20, scope: !14618)
!14635 = !DILocation(line: 854, column: 7, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14611, file: !943, line: 854, column: 7)
!14637 = !DILocation(line: 854, column: 13, scope: !14636)
!14638 = !DILocation(line: 854, column: 17, scope: !14636)
!14639 = !DILocation(line: 854, column: 7, scope: !14611)
!14640 = !DILocation(line: 856, column: 13, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14636, file: !943, line: 855, column: 5)
!14642 = !DILocation(line: 856, column: 19, scope: !14641)
!14643 = !DILocation(line: 856, column: 7, scope: !14641)
!14644 = !DILocation(line: 857, column: 21, scope: !14641)
!14645 = !{!14629, !3178, i64 0}
!14646 = !DILocation(line: 858, column: 20, scope: !14641)
!14647 = !DILocation(line: 859, column: 5, scope: !14641)
!14648 = !DILocation(line: 860, column: 7, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14611, file: !943, line: 860, column: 7)
!14650 = !DILocation(line: 860, column: 10, scope: !14649)
!14651 = !DILocation(line: 860, column: 7, scope: !14611)
!14652 = !DILocation(line: 862, column: 13, scope: !14653)
!14653 = distinct !DILexicalBlock(scope: !14649, file: !943, line: 861, column: 5)
!14654 = !DILocation(line: 862, column: 7, scope: !14653)
!14655 = !DILocation(line: 863, column: 15, scope: !14653)
!14656 = !DILocation(line: 864, column: 5, scope: !14653)
!14657 = !DILocation(line: 865, column: 10, scope: !14611)
!14658 = !DILocation(line: 866, column: 1, scope: !14611)
!14659 = distinct !DISubprogram(name: "quotearg_n", scope: !943, file: !943, line: 931, type: !975, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14660 = !DILocalVariable(name: "n", arg: 1, scope: !14659, file: !943, line: 931, type: !5)
!14661 = !DILocation(line: 931, column: 17, scope: !14659)
!14662 = !DILocalVariable(name: "arg", arg: 2, scope: !14659, file: !943, line: 931, type: !112)
!14663 = !DILocation(line: 931, column: 32, scope: !14659)
!14664 = !DILocation(line: 933, column: 30, scope: !14659)
!14665 = !DILocation(line: 933, column: 33, scope: !14659)
!14666 = !DILocation(line: 933, column: 10, scope: !14659)
!14667 = !DILocation(line: 933, column: 3, scope: !14659)
!14668 = distinct !DISubprogram(name: "quotearg_n_options", scope: !943, file: !943, line: 877, type: !1034, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14669 = !DILocalVariable(name: "n", arg: 1, scope: !14668, file: !943, line: 877, type: !5)
!14670 = !DILocation(line: 877, column: 25, scope: !14668)
!14671 = !DILocalVariable(name: "arg", arg: 2, scope: !14668, file: !943, line: 877, type: !112)
!14672 = !DILocation(line: 877, column: 40, scope: !14668)
!14673 = !DILocalVariable(name: "argsize", arg: 3, scope: !14668, file: !943, line: 877, type: !52)
!14674 = !DILocation(line: 877, column: 52, scope: !14668)
!14675 = !DILocalVariable(name: "options", arg: 4, scope: !14668, file: !943, line: 878, type: !953)
!14676 = !DILocation(line: 878, column: 51, scope: !14668)
!14677 = !DILocalVariable(name: "e", scope: !14668, file: !943, line: 880, type: !5)
!14678 = !DILocation(line: 880, column: 7, scope: !14668)
!14679 = !DILocation(line: 880, column: 11, scope: !14668)
!14680 = !DILocalVariable(name: "sv", scope: !14668, file: !943, line: 882, type: !970)
!14681 = !DILocation(line: 882, column: 19, scope: !14668)
!14682 = !DILocation(line: 882, column: 24, scope: !14668)
!14683 = !DILocation(line: 884, column: 7, scope: !14684)
!14684 = distinct !DILexicalBlock(scope: !14668, file: !943, line: 884, column: 7)
!14685 = !DILocation(line: 884, column: 9, scope: !14684)
!14686 = !DILocation(line: 884, column: 7, scope: !14668)
!14687 = !DILocation(line: 885, column: 5, scope: !14684)
!14688 = !DILocation(line: 887, column: 7, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14668, file: !943, line: 887, column: 7)
!14690 = !DILocation(line: 887, column: 17, scope: !14689)
!14691 = !DILocation(line: 887, column: 14, scope: !14689)
!14692 = !DILocation(line: 887, column: 7, scope: !14668)
!14693 = !DILocalVariable(name: "preallocated", scope: !14694, file: !943, line: 889, type: !117)
!14694 = distinct !DILexicalBlock(scope: !14689, file: !943, line: 888, column: 5)
!14695 = !DILocation(line: 889, column: 12, scope: !14694)
!14696 = !DILocation(line: 889, column: 28, scope: !14694)
!14697 = !DILocation(line: 889, column: 31, scope: !14694)
!14698 = !DILocalVariable(name: "nmax", scope: !14694, file: !943, line: 890, type: !5)
!14699 = !DILocation(line: 890, column: 11, scope: !14694)
!14700 = !DILocation(line: 892, column: 11, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14694, file: !943, line: 892, column: 11)
!14702 = !DILocation(line: 892, column: 18, scope: !14701)
!14703 = !DILocation(line: 892, column: 16, scope: !14701)
!14704 = !DILocation(line: 892, column: 11, scope: !14694)
!14705 = !DILocation(line: 893, column: 9, scope: !14701)
!14706 = !DILocation(line: 895, column: 32, scope: !14694)
!14707 = !DILocation(line: 895, column: 54, scope: !14694)
!14708 = !DILocation(line: 895, column: 59, scope: !14694)
!14709 = !DILocation(line: 895, column: 61, scope: !14694)
!14710 = !DILocation(line: 895, column: 58, scope: !14694)
!14711 = !DILocation(line: 895, column: 66, scope: !14694)
!14712 = !DILocation(line: 895, column: 22, scope: !14694)
!14713 = !DILocation(line: 895, column: 20, scope: !14694)
!14714 = !DILocation(line: 895, column: 15, scope: !14694)
!14715 = !DILocation(line: 896, column: 11, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14694, file: !943, line: 896, column: 11)
!14717 = !DILocation(line: 896, column: 11, scope: !14694)
!14718 = !DILocation(line: 897, column: 10, scope: !14716)
!14719 = !DILocation(line: 897, column: 15, scope: !14716)
!14720 = !{i64 0, i64 8, !3837, i64 8, i64 8, !2993}
!14721 = !DILocation(line: 897, column: 9, scope: !14716)
!14722 = !DILocation(line: 898, column: 15, scope: !14694)
!14723 = !DILocation(line: 898, column: 20, scope: !14694)
!14724 = !DILocation(line: 898, column: 18, scope: !14694)
!14725 = !DILocation(line: 898, column: 7, scope: !14694)
!14726 = !DILocation(line: 898, column: 32, scope: !14694)
!14727 = !DILocation(line: 898, column: 34, scope: !14694)
!14728 = !DILocation(line: 898, column: 40, scope: !14694)
!14729 = !DILocation(line: 898, column: 38, scope: !14694)
!14730 = !DILocation(line: 898, column: 31, scope: !14694)
!14731 = !DILocation(line: 898, column: 48, scope: !14694)
!14732 = !DILocation(line: 899, column: 16, scope: !14694)
!14733 = !DILocation(line: 899, column: 18, scope: !14694)
!14734 = !DILocation(line: 899, column: 14, scope: !14694)
!14735 = !DILocation(line: 900, column: 5, scope: !14694)
!14736 = !DILocalVariable(name: "size", scope: !14737, file: !943, line: 903, type: !52)
!14737 = distinct !DILexicalBlock(scope: !14668, file: !943, line: 902, column: 3)
!14738 = !DILocation(line: 903, column: 12, scope: !14737)
!14739 = !DILocation(line: 903, column: 19, scope: !14737)
!14740 = !DILocation(line: 903, column: 22, scope: !14737)
!14741 = !DILocation(line: 903, column: 25, scope: !14737)
!14742 = !DILocalVariable(name: "val", scope: !14737, file: !943, line: 904, type: !7)
!14743 = !DILocation(line: 904, column: 11, scope: !14737)
!14744 = !DILocation(line: 904, column: 17, scope: !14737)
!14745 = !DILocation(line: 904, column: 20, scope: !14737)
!14746 = !DILocation(line: 904, column: 23, scope: !14737)
!14747 = !DILocalVariable(name: "flags", scope: !14737, file: !943, line: 906, type: !5)
!14748 = !DILocation(line: 906, column: 9, scope: !14737)
!14749 = !DILocation(line: 906, column: 17, scope: !14737)
!14750 = !DILocation(line: 906, column: 26, scope: !14737)
!14751 = !DILocation(line: 906, column: 32, scope: !14737)
!14752 = !DILocalVariable(name: "qsize", scope: !14737, file: !943, line: 907, type: !52)
!14753 = !DILocation(line: 907, column: 12, scope: !14737)
!14754 = !DILocation(line: 907, column: 46, scope: !14737)
!14755 = !DILocation(line: 907, column: 51, scope: !14737)
!14756 = !DILocation(line: 907, column: 57, scope: !14737)
!14757 = !DILocation(line: 907, column: 62, scope: !14737)
!14758 = !DILocation(line: 908, column: 46, scope: !14737)
!14759 = !DILocation(line: 908, column: 55, scope: !14737)
!14760 = !DILocation(line: 908, column: 62, scope: !14737)
!14761 = !DILocation(line: 909, column: 46, scope: !14737)
!14762 = !DILocation(line: 909, column: 55, scope: !14737)
!14763 = !DILocation(line: 910, column: 46, scope: !14737)
!14764 = !DILocation(line: 910, column: 55, scope: !14737)
!14765 = !DILocation(line: 911, column: 46, scope: !14737)
!14766 = !DILocation(line: 911, column: 55, scope: !14737)
!14767 = !DILocation(line: 907, column: 20, scope: !14737)
!14768 = !DILocation(line: 913, column: 9, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14737, file: !943, line: 913, column: 9)
!14770 = !DILocation(line: 913, column: 17, scope: !14769)
!14771 = !DILocation(line: 913, column: 14, scope: !14769)
!14772 = !DILocation(line: 913, column: 9, scope: !14737)
!14773 = !DILocation(line: 915, column: 29, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14769, file: !943, line: 914, column: 7)
!14775 = !DILocation(line: 915, column: 35, scope: !14774)
!14776 = !DILocation(line: 915, column: 27, scope: !14774)
!14777 = !DILocation(line: 915, column: 9, scope: !14774)
!14778 = !DILocation(line: 915, column: 12, scope: !14774)
!14779 = !DILocation(line: 915, column: 15, scope: !14774)
!14780 = !DILocation(line: 915, column: 20, scope: !14774)
!14781 = !DILocation(line: 916, column: 13, scope: !14782)
!14782 = distinct !DILexicalBlock(scope: !14774, file: !943, line: 916, column: 13)
!14783 = !DILocation(line: 916, column: 17, scope: !14782)
!14784 = !DILocation(line: 916, column: 13, scope: !14774)
!14785 = !DILocation(line: 917, column: 17, scope: !14782)
!14786 = !DILocation(line: 917, column: 11, scope: !14782)
!14787 = !DILocation(line: 918, column: 39, scope: !14774)
!14788 = !DILocation(line: 918, column: 27, scope: !14774)
!14789 = !DILocation(line: 918, column: 25, scope: !14774)
!14790 = !DILocation(line: 918, column: 9, scope: !14774)
!14791 = !DILocation(line: 918, column: 12, scope: !14774)
!14792 = !DILocation(line: 918, column: 15, scope: !14774)
!14793 = !DILocation(line: 918, column: 19, scope: !14774)
!14794 = !DILocation(line: 919, column: 35, scope: !14774)
!14795 = !DILocation(line: 919, column: 40, scope: !14774)
!14796 = !DILocation(line: 919, column: 46, scope: !14774)
!14797 = !DILocation(line: 919, column: 51, scope: !14774)
!14798 = !DILocation(line: 919, column: 60, scope: !14774)
!14799 = !DILocation(line: 919, column: 69, scope: !14774)
!14800 = !DILocation(line: 920, column: 35, scope: !14774)
!14801 = !DILocation(line: 920, column: 42, scope: !14774)
!14802 = !DILocation(line: 920, column: 51, scope: !14774)
!14803 = !DILocation(line: 921, column: 35, scope: !14774)
!14804 = !DILocation(line: 921, column: 44, scope: !14774)
!14805 = !DILocation(line: 922, column: 35, scope: !14774)
!14806 = !DILocation(line: 922, column: 44, scope: !14774)
!14807 = !DILocation(line: 919, column: 9, scope: !14774)
!14808 = !DILocation(line: 923, column: 7, scope: !14774)
!14809 = !DILocation(line: 925, column: 13, scope: !14737)
!14810 = !DILocation(line: 925, column: 5, scope: !14737)
!14811 = !DILocation(line: 925, column: 11, scope: !14737)
!14812 = !DILocation(line: 926, column: 12, scope: !14737)
!14813 = !DILocation(line: 926, column: 5, scope: !14737)
!14814 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !943, file: !943, line: 937, type: !977, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14815 = !DILocalVariable(name: "n", arg: 1, scope: !14814, file: !943, line: 937, type: !5)
!14816 = !DILocation(line: 937, column: 21, scope: !14814)
!14817 = !DILocalVariable(name: "arg", arg: 2, scope: !14814, file: !943, line: 937, type: !112)
!14818 = !DILocation(line: 937, column: 36, scope: !14814)
!14819 = !DILocalVariable(name: "argsize", arg: 3, scope: !14814, file: !943, line: 937, type: !52)
!14820 = !DILocation(line: 937, column: 48, scope: !14814)
!14821 = !DILocation(line: 939, column: 30, scope: !14814)
!14822 = !DILocation(line: 939, column: 33, scope: !14814)
!14823 = !DILocation(line: 939, column: 38, scope: !14814)
!14824 = !DILocation(line: 939, column: 10, scope: !14814)
!14825 = !DILocation(line: 939, column: 3, scope: !14814)
!14826 = distinct !DISubprogram(name: "quotearg", scope: !943, file: !943, line: 943, type: !979, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14827 = !DILocalVariable(name: "arg", arg: 1, scope: !14826, file: !943, line: 943, type: !112)
!14828 = !DILocation(line: 943, column: 23, scope: !14826)
!14829 = !DILocation(line: 945, column: 25, scope: !14826)
!14830 = !DILocation(line: 945, column: 10, scope: !14826)
!14831 = !DILocation(line: 945, column: 3, scope: !14826)
!14832 = distinct !DISubprogram(name: "quotearg_mem", scope: !943, file: !943, line: 949, type: !981, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14833 = !DILocalVariable(name: "arg", arg: 1, scope: !14832, file: !943, line: 949, type: !112)
!14834 = !DILocation(line: 949, column: 27, scope: !14832)
!14835 = !DILocalVariable(name: "argsize", arg: 2, scope: !14832, file: !943, line: 949, type: !52)
!14836 = !DILocation(line: 949, column: 39, scope: !14832)
!14837 = !DILocation(line: 951, column: 29, scope: !14832)
!14838 = !DILocation(line: 951, column: 34, scope: !14832)
!14839 = !DILocation(line: 951, column: 10, scope: !14832)
!14840 = !DILocation(line: 951, column: 3, scope: !14832)
!14841 = distinct !DISubprogram(name: "quotearg_n_style", scope: !943, file: !943, line: 955, type: !983, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14842 = !DILocalVariable(name: "n", arg: 1, scope: !14841, file: !943, line: 955, type: !5)
!14843 = !DILocation(line: 955, column: 23, scope: !14841)
!14844 = !DILocalVariable(name: "s", arg: 2, scope: !14841, file: !943, line: 955, type: !917)
!14845 = !DILocation(line: 955, column: 45, scope: !14841)
!14846 = !DILocalVariable(name: "arg", arg: 3, scope: !14841, file: !943, line: 955, type: !112)
!14847 = !DILocation(line: 955, column: 60, scope: !14841)
!14848 = !DILocalVariable(name: "o", scope: !14841, file: !943, line: 957, type: !954)
!14849 = !DILocation(line: 957, column: 32, scope: !14841)
!14850 = !DILocation(line: 957, column: 64, scope: !14841)
!14851 = !DILocation(line: 957, column: 36, scope: !14841)
!14852 = !DILocation(line: 958, column: 30, scope: !14841)
!14853 = !DILocation(line: 958, column: 33, scope: !14841)
!14854 = !DILocation(line: 958, column: 10, scope: !14841)
!14855 = !DILocation(line: 958, column: 3, scope: !14841)
!14856 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !943, file: !943, line: 193, type: !1036, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14857 = !DILocalVariable(name: "style", arg: 1, scope: !14856, file: !943, line: 193, type: !917)
!14858 = !DILocation(line: 193, column: 48, scope: !14856)
!14859 = !DILocalVariable(name: "o", scope: !14856, file: !943, line: 195, type: !942)
!14860 = !DILocation(line: 195, column: 26, scope: !14856)
!14861 = !DILocation(line: 196, column: 7, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14856, file: !943, line: 196, column: 7)
!14863 = !DILocation(line: 196, column: 13, scope: !14862)
!14864 = !DILocation(line: 196, column: 7, scope: !14856)
!14865 = !DILocation(line: 197, column: 5, scope: !14862)
!14866 = !DILocation(line: 198, column: 13, scope: !14856)
!14867 = !DILocation(line: 198, column: 5, scope: !14856)
!14868 = !DILocation(line: 198, column: 11, scope: !14856)
!14869 = !DILocation(line: 199, column: 3, scope: !14856)
!14870 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !943, file: !943, line: 962, type: !985, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14871 = !DILocalVariable(name: "n", arg: 1, scope: !14870, file: !943, line: 962, type: !5)
!14872 = !DILocation(line: 962, column: 27, scope: !14870)
!14873 = !DILocalVariable(name: "s", arg: 2, scope: !14870, file: !943, line: 962, type: !917)
!14874 = !DILocation(line: 962, column: 49, scope: !14870)
!14875 = !DILocalVariable(name: "arg", arg: 3, scope: !14870, file: !943, line: 963, type: !112)
!14876 = !DILocation(line: 963, column: 35, scope: !14870)
!14877 = !DILocalVariable(name: "argsize", arg: 4, scope: !14870, file: !943, line: 963, type: !52)
!14878 = !DILocation(line: 963, column: 47, scope: !14870)
!14879 = !DILocalVariable(name: "o", scope: !14870, file: !943, line: 965, type: !954)
!14880 = !DILocation(line: 965, column: 32, scope: !14870)
!14881 = !DILocation(line: 965, column: 64, scope: !14870)
!14882 = !DILocation(line: 965, column: 36, scope: !14870)
!14883 = !DILocation(line: 966, column: 30, scope: !14870)
!14884 = !DILocation(line: 966, column: 33, scope: !14870)
!14885 = !DILocation(line: 966, column: 38, scope: !14870)
!14886 = !DILocation(line: 966, column: 10, scope: !14870)
!14887 = !DILocation(line: 966, column: 3, scope: !14870)
!14888 = distinct !DISubprogram(name: "quotearg_style", scope: !943, file: !943, line: 970, type: !987, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14889 = !DILocalVariable(name: "s", arg: 1, scope: !14888, file: !943, line: 970, type: !917)
!14890 = !DILocation(line: 970, column: 36, scope: !14888)
!14891 = !DILocalVariable(name: "arg", arg: 2, scope: !14888, file: !943, line: 970, type: !112)
!14892 = !DILocation(line: 970, column: 51, scope: !14888)
!14893 = !DILocation(line: 972, column: 31, scope: !14888)
!14894 = !DILocation(line: 972, column: 34, scope: !14888)
!14895 = !DILocation(line: 972, column: 10, scope: !14888)
!14896 = !DILocation(line: 972, column: 3, scope: !14888)
!14897 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !943, file: !943, line: 976, type: !989, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14898 = !DILocalVariable(name: "s", arg: 1, scope: !14897, file: !943, line: 976, type: !917)
!14899 = !DILocation(line: 976, column: 40, scope: !14897)
!14900 = !DILocalVariable(name: "arg", arg: 2, scope: !14897, file: !943, line: 976, type: !112)
!14901 = !DILocation(line: 976, column: 55, scope: !14897)
!14902 = !DILocalVariable(name: "argsize", arg: 3, scope: !14897, file: !943, line: 976, type: !52)
!14903 = !DILocation(line: 976, column: 67, scope: !14897)
!14904 = !DILocation(line: 978, column: 35, scope: !14897)
!14905 = !DILocation(line: 978, column: 38, scope: !14897)
!14906 = !DILocation(line: 978, column: 43, scope: !14897)
!14907 = !DILocation(line: 978, column: 10, scope: !14897)
!14908 = !DILocation(line: 978, column: 3, scope: !14897)
!14909 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !943, file: !943, line: 982, type: !991, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14910 = !DILocalVariable(name: "arg", arg: 1, scope: !14909, file: !943, line: 982, type: !112)
!14911 = !DILocation(line: 982, column: 32, scope: !14909)
!14912 = !DILocalVariable(name: "argsize", arg: 2, scope: !14909, file: !943, line: 982, type: !52)
!14913 = !DILocation(line: 982, column: 44, scope: !14909)
!14914 = !DILocalVariable(name: "ch", arg: 3, scope: !14909, file: !943, line: 982, type: !8)
!14915 = !DILocation(line: 982, column: 58, scope: !14909)
!14916 = !DILocalVariable(name: "options", scope: !14909, file: !943, line: 984, type: !942)
!14917 = !DILocation(line: 984, column: 26, scope: !14909)
!14918 = !DILocation(line: 985, column: 13, scope: !14909)
!14919 = !{i64 0, i64 4, !3652, i64 4, i64 4, !2980, i64 8, i64 32, !3652, i64 40, i64 8, !2993, i64 48, i64 8, !2993}
!14920 = !DILocation(line: 986, column: 31, scope: !14909)
!14921 = !DILocation(line: 986, column: 3, scope: !14909)
!14922 = !DILocation(line: 987, column: 33, scope: !14909)
!14923 = !DILocation(line: 987, column: 38, scope: !14909)
!14924 = !DILocation(line: 987, column: 10, scope: !14909)
!14925 = !DILocation(line: 987, column: 3, scope: !14909)
!14926 = distinct !DISubprogram(name: "quotearg_char", scope: !943, file: !943, line: 991, type: !993, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14927 = !DILocalVariable(name: "arg", arg: 1, scope: !14926, file: !943, line: 991, type: !112)
!14928 = !DILocation(line: 991, column: 28, scope: !14926)
!14929 = !DILocalVariable(name: "ch", arg: 2, scope: !14926, file: !943, line: 991, type: !8)
!14930 = !DILocation(line: 991, column: 38, scope: !14926)
!14931 = !DILocation(line: 993, column: 29, scope: !14926)
!14932 = !DILocation(line: 993, column: 44, scope: !14926)
!14933 = !DILocation(line: 993, column: 10, scope: !14926)
!14934 = !DILocation(line: 993, column: 3, scope: !14926)
!14935 = distinct !DISubprogram(name: "quotearg_colon", scope: !943, file: !943, line: 997, type: !979, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14936 = !DILocalVariable(name: "arg", arg: 1, scope: !14935, file: !943, line: 997, type: !112)
!14937 = !DILocation(line: 997, column: 29, scope: !14935)
!14938 = !DILocation(line: 999, column: 25, scope: !14935)
!14939 = !DILocation(line: 999, column: 10, scope: !14935)
!14940 = !DILocation(line: 999, column: 3, scope: !14935)
!14941 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !943, file: !943, line: 1003, type: !981, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14942 = !DILocalVariable(name: "arg", arg: 1, scope: !14941, file: !943, line: 1003, type: !112)
!14943 = !DILocation(line: 1003, column: 33, scope: !14941)
!14944 = !DILocalVariable(name: "argsize", arg: 2, scope: !14941, file: !943, line: 1003, type: !52)
!14945 = !DILocation(line: 1003, column: 45, scope: !14941)
!14946 = !DILocation(line: 1005, column: 29, scope: !14941)
!14947 = !DILocation(line: 1005, column: 34, scope: !14941)
!14948 = !DILocation(line: 1005, column: 10, scope: !14941)
!14949 = !DILocation(line: 1005, column: 3, scope: !14941)
!14950 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !943, file: !943, line: 1009, type: !983, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14951 = !DILocalVariable(name: "n", arg: 1, scope: !14950, file: !943, line: 1009, type: !5)
!14952 = !DILocation(line: 1009, column: 29, scope: !14950)
!14953 = !DILocalVariable(name: "s", arg: 2, scope: !14950, file: !943, line: 1009, type: !917)
!14954 = !DILocation(line: 1009, column: 51, scope: !14950)
!14955 = !DILocalVariable(name: "arg", arg: 3, scope: !14950, file: !943, line: 1009, type: !112)
!14956 = !DILocation(line: 1009, column: 66, scope: !14950)
!14957 = !DILocalVariable(name: "options", scope: !14950, file: !943, line: 1011, type: !942)
!14958 = !DILocation(line: 1011, column: 26, scope: !14950)
!14959 = !DILocation(line: 1012, column: 41, scope: !14950)
!14960 = !DILocation(line: 1012, column: 13, scope: !14950)
!14961 = !DILocation(line: 1013, column: 3, scope: !14950)
!14962 = !DILocation(line: 1014, column: 30, scope: !14950)
!14963 = !DILocation(line: 1014, column: 33, scope: !14950)
!14964 = !DILocation(line: 1014, column: 10, scope: !14950)
!14965 = !DILocation(line: 1014, column: 3, scope: !14950)
!14966 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !943, file: !943, line: 1018, type: !995, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14967 = !DILocalVariable(name: "n", arg: 1, scope: !14966, file: !943, line: 1018, type: !5)
!14968 = !DILocation(line: 1018, column: 24, scope: !14966)
!14969 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14966, file: !943, line: 1018, type: !112)
!14970 = !DILocation(line: 1018, column: 39, scope: !14966)
!14971 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14966, file: !943, line: 1019, type: !112)
!14972 = !DILocation(line: 1019, column: 32, scope: !14966)
!14973 = !DILocalVariable(name: "arg", arg: 4, scope: !14966, file: !943, line: 1019, type: !112)
!14974 = !DILocation(line: 1019, column: 57, scope: !14966)
!14975 = !DILocation(line: 1021, column: 33, scope: !14966)
!14976 = !DILocation(line: 1021, column: 36, scope: !14966)
!14977 = !DILocation(line: 1021, column: 48, scope: !14966)
!14978 = !DILocation(line: 1021, column: 61, scope: !14966)
!14979 = !DILocation(line: 1021, column: 10, scope: !14966)
!14980 = !DILocation(line: 1021, column: 3, scope: !14966)
!14981 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !943, file: !943, line: 1026, type: !997, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!14982 = !DILocalVariable(name: "n", arg: 1, scope: !14981, file: !943, line: 1026, type: !5)
!14983 = !DILocation(line: 1026, column: 28, scope: !14981)
!14984 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14981, file: !943, line: 1026, type: !112)
!14985 = !DILocation(line: 1026, column: 43, scope: !14981)
!14986 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14981, file: !943, line: 1027, type: !112)
!14987 = !DILocation(line: 1027, column: 36, scope: !14981)
!14988 = !DILocalVariable(name: "arg", arg: 4, scope: !14981, file: !943, line: 1028, type: !112)
!14989 = !DILocation(line: 1028, column: 36, scope: !14981)
!14990 = !DILocalVariable(name: "argsize", arg: 5, scope: !14981, file: !943, line: 1028, type: !52)
!14991 = !DILocation(line: 1028, column: 48, scope: !14981)
!14992 = !DILocalVariable(name: "o", scope: !14981, file: !943, line: 1030, type: !942)
!14993 = !DILocation(line: 1030, column: 26, scope: !14981)
!14994 = !DILocation(line: 1030, column: 30, scope: !14981)
!14995 = !DILocation(line: 1031, column: 27, scope: !14981)
!14996 = !DILocation(line: 1031, column: 39, scope: !14981)
!14997 = !DILocation(line: 1031, column: 3, scope: !14981)
!14998 = !DILocation(line: 1032, column: 30, scope: !14981)
!14999 = !DILocation(line: 1032, column: 33, scope: !14981)
!15000 = !DILocation(line: 1032, column: 38, scope: !14981)
!15001 = !DILocation(line: 1032, column: 10, scope: !14981)
!15002 = !DILocation(line: 1032, column: 3, scope: !14981)
!15003 = distinct !DISubprogram(name: "quotearg_custom", scope: !943, file: !943, line: 1036, type: !999, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!15004 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15003, file: !943, line: 1036, type: !112)
!15005 = !DILocation(line: 1036, column: 30, scope: !15003)
!15006 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15003, file: !943, line: 1036, type: !112)
!15007 = !DILocation(line: 1036, column: 54, scope: !15003)
!15008 = !DILocalVariable(name: "arg", arg: 3, scope: !15003, file: !943, line: 1037, type: !112)
!15009 = !DILocation(line: 1037, column: 30, scope: !15003)
!15010 = !DILocation(line: 1039, column: 32, scope: !15003)
!15011 = !DILocation(line: 1039, column: 44, scope: !15003)
!15012 = !DILocation(line: 1039, column: 57, scope: !15003)
!15013 = !DILocation(line: 1039, column: 10, scope: !15003)
!15014 = !DILocation(line: 1039, column: 3, scope: !15003)
!15015 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !943, file: !943, line: 1043, type: !1001, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!15016 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15015, file: !943, line: 1043, type: !112)
!15017 = !DILocation(line: 1043, column: 34, scope: !15015)
!15018 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15015, file: !943, line: 1043, type: !112)
!15019 = !DILocation(line: 1043, column: 58, scope: !15015)
!15020 = !DILocalVariable(name: "arg", arg: 3, scope: !15015, file: !943, line: 1044, type: !112)
!15021 = !DILocation(line: 1044, column: 34, scope: !15015)
!15022 = !DILocalVariable(name: "argsize", arg: 4, scope: !15015, file: !943, line: 1044, type: !52)
!15023 = !DILocation(line: 1044, column: 46, scope: !15015)
!15024 = !DILocation(line: 1046, column: 36, scope: !15015)
!15025 = !DILocation(line: 1046, column: 48, scope: !15015)
!15026 = !DILocation(line: 1046, column: 61, scope: !15015)
!15027 = !DILocation(line: 1047, column: 33, scope: !15015)
!15028 = !DILocation(line: 1046, column: 10, scope: !15015)
!15029 = !DILocation(line: 1046, column: 3, scope: !15015)
!15030 = distinct !DISubprogram(name: "quote_n_mem", scope: !943, file: !943, line: 1061, type: !1003, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!15031 = !DILocalVariable(name: "n", arg: 1, scope: !15030, file: !943, line: 1061, type: !5)
!15032 = !DILocation(line: 1061, column: 18, scope: !15030)
!15033 = !DILocalVariable(name: "arg", arg: 2, scope: !15030, file: !943, line: 1061, type: !112)
!15034 = !DILocation(line: 1061, column: 33, scope: !15030)
!15035 = !DILocalVariable(name: "argsize", arg: 3, scope: !15030, file: !943, line: 1061, type: !52)
!15036 = !DILocation(line: 1061, column: 45, scope: !15030)
!15037 = !DILocation(line: 1063, column: 30, scope: !15030)
!15038 = !DILocation(line: 1063, column: 33, scope: !15030)
!15039 = !DILocation(line: 1063, column: 38, scope: !15030)
!15040 = !DILocation(line: 1063, column: 10, scope: !15030)
!15041 = !DILocation(line: 1063, column: 3, scope: !15030)
!15042 = distinct !DISubprogram(name: "quote_mem", scope: !943, file: !943, line: 1067, type: !1005, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!15043 = !DILocalVariable(name: "arg", arg: 1, scope: !15042, file: !943, line: 1067, type: !112)
!15044 = !DILocation(line: 1067, column: 24, scope: !15042)
!15045 = !DILocalVariable(name: "argsize", arg: 2, scope: !15042, file: !943, line: 1067, type: !52)
!15046 = !DILocation(line: 1067, column: 36, scope: !15042)
!15047 = !DILocation(line: 1069, column: 26, scope: !15042)
!15048 = !DILocation(line: 1069, column: 31, scope: !15042)
!15049 = !DILocation(line: 1069, column: 10, scope: !15042)
!15050 = !DILocation(line: 1069, column: 3, scope: !15042)
!15051 = distinct !DISubprogram(name: "quote_n", scope: !943, file: !943, line: 1073, type: !1007, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!15052 = !DILocalVariable(name: "n", arg: 1, scope: !15051, file: !943, line: 1073, type: !5)
!15053 = !DILocation(line: 1073, column: 14, scope: !15051)
!15054 = !DILocalVariable(name: "arg", arg: 2, scope: !15051, file: !943, line: 1073, type: !112)
!15055 = !DILocation(line: 1073, column: 29, scope: !15051)
!15056 = !DILocation(line: 1075, column: 23, scope: !15051)
!15057 = !DILocation(line: 1075, column: 26, scope: !15051)
!15058 = !DILocation(line: 1075, column: 10, scope: !15051)
!15059 = !DILocation(line: 1075, column: 3, scope: !15051)
!15060 = distinct !DISubprogram(name: "quote", scope: !943, file: !943, line: 1079, type: !1009, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !914, retainedNodes: !140)
!15061 = !DILocalVariable(name: "arg", arg: 1, scope: !15060, file: !943, line: 1079, type: !112)
!15062 = !DILocation(line: 1079, column: 20, scope: !15060)
!15063 = !DILocation(line: 1081, column: 22, scope: !15060)
!15064 = !DILocation(line: 1081, column: 10, scope: !15060)
!15065 = !DILocation(line: 1081, column: 3, scope: !15060)
!15066 = distinct !DISubprogram(name: "renameatu", scope: !15067, file: !15067, line: 77, type: !1826, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1823, retainedNodes: !140)
!15067 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!15068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !15069)
!15069 = !{!15070, !15071, !15072, !15073, !15074, !15075, !15076, !15077, !15078, !15079, !15080, !15081, !15086, !15087, !15088}
!15070 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15068, file: !315, line: 48, baseType: !228, size: 64)
!15071 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15068, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!15072 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15068, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!15073 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15068, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!15074 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15068, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!15075 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15068, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!15076 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15068, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!15077 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15068, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!15078 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15068, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!15079 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15068, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!15080 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15068, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!15081 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15068, file: !315, line: 91, baseType: !15082, size: 128, offset: 576)
!15082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !15083)
!15083 = !{!15084, !15085}
!15084 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15082, file: !335, line: 122, baseType: !338, size: 64)
!15085 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15082, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!15086 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15068, file: !315, line: 92, baseType: !15082, size: 128, offset: 704)
!15087 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15068, file: !315, line: 93, baseType: !15082, size: 128, offset: 832)
!15088 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15068, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!15089 = !DILocalVariable(name: "fd1", arg: 1, scope: !15066, file: !15067, line: 77, type: !5)
!15090 = !DILocation(line: 77, column: 16, scope: !15066)
!15091 = !DILocalVariable(name: "src", arg: 2, scope: !15066, file: !15067, line: 77, type: !112)
!15092 = !DILocation(line: 77, column: 33, scope: !15066)
!15093 = !DILocalVariable(name: "fd2", arg: 3, scope: !15066, file: !15067, line: 77, type: !5)
!15094 = !DILocation(line: 77, column: 42, scope: !15066)
!15095 = !DILocalVariable(name: "dst", arg: 4, scope: !15066, file: !15067, line: 77, type: !112)
!15096 = !DILocation(line: 77, column: 59, scope: !15066)
!15097 = !DILocalVariable(name: "flags", arg: 5, scope: !15066, file: !15067, line: 78, type: !67)
!15098 = !DILocation(line: 78, column: 25, scope: !15066)
!15099 = !DILocalVariable(name: "ret_val", scope: !15066, file: !15067, line: 80, type: !5)
!15100 = !DILocation(line: 80, column: 7, scope: !15066)
!15101 = !DILocalVariable(name: "err", scope: !15066, file: !15067, line: 81, type: !5)
!15102 = !DILocation(line: 81, column: 7, scope: !15066)
!15103 = !DILocation(line: 87, column: 37, scope: !15066)
!15104 = !DILocation(line: 87, column: 42, scope: !15066)
!15105 = !DILocation(line: 87, column: 47, scope: !15066)
!15106 = !DILocation(line: 87, column: 52, scope: !15066)
!15107 = !DILocation(line: 87, column: 57, scope: !15066)
!15108 = !DILocation(line: 87, column: 13, scope: !15066)
!15109 = !DILocation(line: 87, column: 11, scope: !15066)
!15110 = !DILocation(line: 88, column: 9, scope: !15066)
!15111 = !DILocation(line: 88, column: 7, scope: !15066)
!15112 = !DILocation(line: 99, column: 10, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15066, file: !15067, line: 99, column: 7)
!15114 = !DILocation(line: 99, column: 18, scope: !15113)
!15115 = !DILocation(line: 99, column: 22, scope: !15113)
!15116 = !DILocation(line: 99, column: 26, scope: !15113)
!15117 = !DILocation(line: 99, column: 30, scope: !15113)
!15118 = !DILocation(line: 99, column: 40, scope: !15113)
!15119 = !DILocation(line: 99, column: 43, scope: !15113)
!15120 = !DILocation(line: 99, column: 47, scope: !15113)
!15121 = !DILocation(line: 99, column: 57, scope: !15113)
!15122 = !DILocation(line: 99, column: 60, scope: !15113)
!15123 = !DILocation(line: 99, column: 64, scope: !15113)
!15124 = !DILocation(line: 99, column: 7, scope: !15066)
!15125 = !DILocation(line: 100, column: 12, scope: !15113)
!15126 = !DILocation(line: 100, column: 5, scope: !15113)
!15127 = !DILocalVariable(name: "src_len", scope: !15128, file: !15067, line: 104, type: !52)
!15128 = distinct !DILexicalBlock(scope: !15066, file: !15067, line: 103, column: 3)
!15129 = !DILocation(line: 104, column: 10, scope: !15128)
!15130 = !DILocalVariable(name: "dst_len", scope: !15128, file: !15067, line: 105, type: !52)
!15131 = !DILocation(line: 105, column: 10, scope: !15128)
!15132 = !DILocalVariable(name: "src_temp", scope: !15128, file: !15067, line: 106, type: !7)
!15133 = !DILocation(line: 106, column: 9, scope: !15128)
!15134 = !DILocation(line: 106, column: 29, scope: !15128)
!15135 = !DILocalVariable(name: "dst_temp", scope: !15128, file: !15067, line: 107, type: !7)
!15136 = !DILocation(line: 107, column: 9, scope: !15128)
!15137 = !DILocation(line: 107, column: 29, scope: !15128)
!15138 = !DILocalVariable(name: "src_slash", scope: !15128, file: !15067, line: 108, type: !117)
!15139 = !DILocation(line: 108, column: 8, scope: !15128)
!15140 = !DILocalVariable(name: "dst_slash", scope: !15128, file: !15067, line: 109, type: !117)
!15141 = !DILocation(line: 109, column: 8, scope: !15128)
!15142 = !DILocalVariable(name: "rename_errno", scope: !15128, file: !15067, line: 110, type: !5)
!15143 = !DILocation(line: 110, column: 7, scope: !15128)
!15144 = !DILocalVariable(name: "src_st", scope: !15128, file: !15067, line: 111, type: !15068)
!15145 = !DILocation(line: 111, column: 15, scope: !15128)
!15146 = !DILocalVariable(name: "dst_st", scope: !15128, file: !15067, line: 112, type: !15068)
!15147 = !DILocation(line: 112, column: 15, scope: !15128)
!15148 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15128, file: !15067, line: 113, type: !117)
!15149 = !DILocation(line: 113, column: 8, scope: !15128)
!15150 = !DILocation(line: 115, column: 7, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15128, file: !15067, line: 115, column: 7)
!15152 = !DILocation(line: 115, column: 13, scope: !15151)
!15153 = !DILocation(line: 115, column: 7, scope: !15128)
!15154 = !DILocation(line: 118, column: 11, scope: !15155)
!15155 = distinct !DILexicalBlock(scope: !15156, file: !15067, line: 118, column: 11)
!15156 = distinct !DILexicalBlock(scope: !15151, file: !15067, line: 116, column: 5)
!15157 = !DILocation(line: 118, column: 17, scope: !15155)
!15158 = !DILocation(line: 118, column: 11, scope: !15156)
!15159 = !DILocation(line: 119, column: 16, scope: !15155)
!15160 = !DILocation(line: 119, column: 9, scope: !15155)
!15161 = !DILocation(line: 124, column: 24, scope: !15162)
!15162 = distinct !DILexicalBlock(scope: !15163, file: !15067, line: 124, column: 15)
!15163 = distinct !DILexicalBlock(scope: !15155, file: !15067, line: 121, column: 9)
!15164 = !DILocation(line: 124, column: 29, scope: !15162)
!15165 = !DILocation(line: 124, column: 15, scope: !15162)
!15166 = !DILocation(line: 124, column: 43, scope: !15162)
!15167 = !DILocation(line: 124, column: 48, scope: !15162)
!15168 = !DILocation(line: 124, column: 51, scope: !15162)
!15169 = !DILocation(line: 124, column: 57, scope: !15162)
!15170 = !DILocation(line: 124, column: 15, scope: !15163)
!15171 = !DILocation(line: 125, column: 20, scope: !15162)
!15172 = !DILocation(line: 125, column: 13, scope: !15162)
!15173 = !DILocation(line: 126, column: 15, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15163, file: !15067, line: 126, column: 15)
!15175 = !DILocation(line: 126, column: 21, scope: !15174)
!15176 = !DILocation(line: 126, column: 15, scope: !15163)
!15177 = !DILocation(line: 127, column: 13, scope: !15174)
!15178 = !DILocation(line: 128, column: 33, scope: !15163)
!15179 = !DILocation(line: 130, column: 5, scope: !15156)
!15180 = !DILocation(line: 133, column: 21, scope: !15128)
!15181 = !DILocation(line: 133, column: 13, scope: !15128)
!15182 = !DILocation(line: 133, column: 11, scope: !15128)
!15183 = !DILocation(line: 134, column: 21, scope: !15128)
!15184 = !DILocation(line: 134, column: 13, scope: !15128)
!15185 = !DILocation(line: 134, column: 11, scope: !15128)
!15186 = !DILocation(line: 135, column: 8, scope: !15187)
!15187 = distinct !DILexicalBlock(scope: !15128, file: !15067, line: 135, column: 7)
!15188 = !DILocation(line: 135, column: 16, scope: !15187)
!15189 = !DILocation(line: 135, column: 20, scope: !15187)
!15190 = !DILocation(line: 135, column: 7, scope: !15128)
!15191 = !DILocation(line: 136, column: 22, scope: !15187)
!15192 = !DILocation(line: 136, column: 27, scope: !15187)
!15193 = !DILocation(line: 136, column: 32, scope: !15187)
!15194 = !DILocation(line: 136, column: 37, scope: !15187)
!15195 = !DILocation(line: 136, column: 12, scope: !15187)
!15196 = !DILocation(line: 136, column: 5, scope: !15187)
!15197 = !DILocation(line: 138, column: 15, scope: !15128)
!15198 = !DILocation(line: 138, column: 19, scope: !15128)
!15199 = !DILocation(line: 138, column: 27, scope: !15128)
!15200 = !DILocation(line: 138, column: 32, scope: !15128)
!15201 = !DILocation(line: 138, column: 13, scope: !15128)
!15202 = !DILocation(line: 139, column: 15, scope: !15128)
!15203 = !DILocation(line: 139, column: 19, scope: !15128)
!15204 = !DILocation(line: 139, column: 27, scope: !15128)
!15205 = !DILocation(line: 139, column: 32, scope: !15128)
!15206 = !DILocation(line: 139, column: 13, scope: !15128)
!15207 = !DILocation(line: 140, column: 8, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15128, file: !15067, line: 140, column: 7)
!15209 = !DILocation(line: 140, column: 18, scope: !15208)
!15210 = !DILocation(line: 140, column: 22, scope: !15208)
!15211 = !DILocation(line: 140, column: 7, scope: !15128)
!15212 = !DILocation(line: 141, column: 22, scope: !15208)
!15213 = !DILocation(line: 141, column: 27, scope: !15208)
!15214 = !DILocation(line: 141, column: 32, scope: !15208)
!15215 = !DILocation(line: 141, column: 37, scope: !15208)
!15216 = !DILocation(line: 141, column: 12, scope: !15208)
!15217 = !DILocation(line: 141, column: 5, scope: !15208)
!15218 = !DILocation(line: 147, column: 16, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15128, file: !15067, line: 147, column: 7)
!15220 = !DILocation(line: 147, column: 21, scope: !15219)
!15221 = !DILocation(line: 147, column: 7, scope: !15219)
!15222 = !DILocation(line: 147, column: 7, scope: !15128)
!15223 = !DILocation(line: 148, column: 5, scope: !15219)
!15224 = !DILocation(line: 149, column: 7, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15128, file: !15067, line: 149, column: 7)
!15226 = !DILocation(line: 149, column: 7, scope: !15128)
!15227 = !DILocation(line: 151, column: 12, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15229, file: !15067, line: 151, column: 11)
!15229 = distinct !DILexicalBlock(scope: !15225, file: !15067, line: 150, column: 5)
!15230 = !DILocation(line: 151, column: 11, scope: !15229)
!15231 = !DILocation(line: 152, column: 16, scope: !15228)
!15232 = !DILocation(line: 152, column: 9, scope: !15228)
!15233 = !DILocation(line: 153, column: 5, scope: !15229)
!15234 = !DILocation(line: 154, column: 21, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15225, file: !15067, line: 154, column: 12)
!15236 = !DILocation(line: 154, column: 26, scope: !15235)
!15237 = !DILocation(line: 154, column: 12, scope: !15235)
!15238 = !DILocation(line: 154, column: 12, scope: !15225)
!15239 = !DILocation(line: 156, column: 11, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15241, file: !15067, line: 156, column: 11)
!15241 = distinct !DILexicalBlock(scope: !15235, file: !15067, line: 155, column: 5)
!15242 = !DILocation(line: 156, column: 17, scope: !15240)
!15243 = !DILocation(line: 156, column: 27, scope: !15240)
!15244 = !DILocation(line: 156, column: 31, scope: !15240)
!15245 = !DILocation(line: 156, column: 11, scope: !15241)
!15246 = !DILocation(line: 157, column: 9, scope: !15240)
!15247 = !DILocation(line: 158, column: 5, scope: !15241)
!15248 = !DILocation(line: 159, column: 13, scope: !15249)
!15249 = distinct !DILexicalBlock(scope: !15235, file: !15067, line: 159, column: 12)
!15250 = !DILocation(line: 159, column: 12, scope: !15235)
!15251 = !DILocation(line: 160, column: 12, scope: !15249)
!15252 = !DILocation(line: 160, column: 5, scope: !15249)
!15253 = !DILocation(line: 161, column: 13, scope: !15254)
!15254 = distinct !DILexicalBlock(scope: !15249, file: !15067, line: 161, column: 12)
!15255 = !DILocation(line: 161, column: 12, scope: !15249)
!15256 = !DILocation(line: 162, column: 12, scope: !15254)
!15257 = !DILocation(line: 162, column: 5, scope: !15254)
!15258 = !DILocation(line: 214, column: 23, scope: !15128)
!15259 = !DILocation(line: 214, column: 28, scope: !15128)
!15260 = !DILocation(line: 214, column: 38, scope: !15128)
!15261 = !DILocation(line: 214, column: 43, scope: !15128)
!15262 = !DILocation(line: 214, column: 13, scope: !15128)
!15263 = !DILocation(line: 214, column: 11, scope: !15128)
!15264 = !DILocation(line: 215, column: 18, scope: !15128)
!15265 = !DILocation(line: 215, column: 16, scope: !15128)
!15266 = !DILocation(line: 216, column: 3, scope: !15128)
!15267 = !DILabel(scope: !15128, name: "out", file: !15067, line: 217)
!15268 = !DILocation(line: 217, column: 2, scope: !15128)
!15269 = !DILocation(line: 218, column: 7, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15128, file: !15067, line: 218, column: 7)
!15271 = !DILocation(line: 218, column: 19, scope: !15270)
!15272 = !DILocation(line: 218, column: 16, scope: !15270)
!15273 = !DILocation(line: 218, column: 7, scope: !15128)
!15274 = !DILocation(line: 219, column: 11, scope: !15270)
!15275 = !DILocation(line: 219, column: 5, scope: !15270)
!15276 = !DILocation(line: 220, column: 7, scope: !15277)
!15277 = distinct !DILexicalBlock(scope: !15128, file: !15067, line: 220, column: 7)
!15278 = !DILocation(line: 220, column: 19, scope: !15277)
!15279 = !DILocation(line: 220, column: 16, scope: !15277)
!15280 = !DILocation(line: 220, column: 7, scope: !15128)
!15281 = !DILocation(line: 221, column: 11, scope: !15277)
!15282 = !DILocation(line: 221, column: 5, scope: !15277)
!15283 = !DILocation(line: 222, column: 11, scope: !15128)
!15284 = !DILocation(line: 222, column: 3, scope: !15128)
!15285 = !DILocation(line: 222, column: 9, scope: !15128)
!15286 = !DILocation(line: 223, column: 10, scope: !15128)
!15287 = !DILocation(line: 223, column: 3, scope: !15128)
!15288 = !DILocation(line: 233, column: 1, scope: !15066)
!15289 = distinct !DISubprogram(name: "errno_fail", scope: !15067, file: !15067, line: 33, type: !1828, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1823, retainedNodes: !140)
!15290 = !DILocalVariable(name: "e", arg: 1, scope: !15289, file: !15067, line: 33, type: !5)
!15291 = !DILocation(line: 33, column: 17, scope: !15289)
!15292 = !DILocation(line: 35, column: 11, scope: !15289)
!15293 = !DILocation(line: 35, column: 3, scope: !15289)
!15294 = !DILocation(line: 35, column: 9, scope: !15289)
!15295 = !DILocation(line: 36, column: 3, scope: !15289)
!15296 = distinct !DISubprogram(name: "get_root_dev_ino", scope: !15297, file: !15297, line: 29, type: !1833, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1830, retainedNodes: !140)
!15297 = !DIFile(filename: "lib/root-dev-ino.c", directory: "/home/mohamad/clone/coreutils")
!15298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !15299)
!15299 = !{!15300, !15301, !15302, !15303, !15304, !15305, !15306, !15307, !15308, !15309, !15310, !15311, !15316, !15317, !15318}
!15300 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15298, file: !315, line: 48, baseType: !228, size: 64)
!15301 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15298, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!15302 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15298, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!15303 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15298, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!15304 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15298, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!15305 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15298, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!15306 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15298, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!15307 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15298, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!15308 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15298, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!15309 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15298, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!15310 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15298, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!15311 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15298, file: !315, line: 91, baseType: !15312, size: 128, offset: 576)
!15312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !15313)
!15313 = !{!15314, !15315}
!15314 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15312, file: !335, line: 122, baseType: !338, size: 64)
!15315 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15312, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!15316 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15298, file: !315, line: 92, baseType: !15312, size: 128, offset: 704)
!15317 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15298, file: !315, line: 93, baseType: !15312, size: 128, offset: 832)
!15318 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15298, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!15319 = !DILocalVariable(name: "root_d_i", arg: 1, scope: !15296, file: !15297, line: 29, type: !1835)
!15320 = !DILocation(line: 29, column: 35, scope: !15296)
!15321 = !DILocalVariable(name: "statbuf", scope: !15296, file: !15297, line: 31, type: !15298)
!15322 = !DILocation(line: 31, column: 15, scope: !15296)
!15323 = !DILocation(line: 32, column: 7, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15296, file: !15297, line: 32, column: 7)
!15325 = !DILocation(line: 32, column: 7, scope: !15296)
!15326 = !DILocation(line: 33, column: 5, scope: !15324)
!15327 = !DILocation(line: 34, column: 30, scope: !15296)
!15328 = !DILocation(line: 34, column: 3, scope: !15296)
!15329 = !DILocation(line: 34, column: 13, scope: !15296)
!15330 = !DILocation(line: 34, column: 20, scope: !15296)
!15331 = !DILocation(line: 35, column: 30, scope: !15296)
!15332 = !DILocation(line: 35, column: 3, scope: !15296)
!15333 = !DILocation(line: 35, column: 13, scope: !15296)
!15334 = !DILocation(line: 35, column: 20, scope: !15296)
!15335 = !DILocation(line: 36, column: 10, scope: !15296)
!15336 = !DILocation(line: 36, column: 3, scope: !15296)
!15337 = !DILocation(line: 37, column: 1, scope: !15296)
!15338 = distinct !DISubprogram(name: "safe_write", scope: !15339, file: !15339, line: 56, type: !1796, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1840, retainedNodes: !140)
!15339 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mohamad/clone/coreutils")
!15340 = !DILocalVariable(name: "fd", arg: 1, scope: !15338, file: !15339, line: 56, type: !5)
!15341 = !DILocation(line: 56, column: 14, scope: !15338)
!15342 = !DILocalVariable(name: "buf", arg: 2, scope: !15338, file: !15339, line: 56, type: !428)
!15343 = !DILocation(line: 56, column: 30, scope: !15338)
!15344 = !DILocalVariable(name: "count", arg: 3, scope: !15338, file: !15339, line: 56, type: !52)
!15345 = !DILocation(line: 56, column: 42, scope: !15338)
!15346 = !DILocation(line: 58, column: 3, scope: !15338)
!15347 = !DILocalVariable(name: "result", scope: !15348, file: !15339, line: 60, type: !579)
!15348 = distinct !DILexicalBlock(scope: !15349, file: !15339, line: 59, column: 5)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !15339, line: 58, column: 3)
!15350 = distinct !DILexicalBlock(scope: !15338, file: !15339, line: 58, column: 3)
!15351 = !DILocation(line: 60, column: 15, scope: !15348)
!15352 = !DILocation(line: 60, column: 28, scope: !15348)
!15353 = !DILocation(line: 60, column: 32, scope: !15348)
!15354 = !DILocation(line: 60, column: 37, scope: !15348)
!15355 = !DILocation(line: 60, column: 24, scope: !15348)
!15356 = !DILocation(line: 62, column: 16, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15348, file: !15339, line: 62, column: 11)
!15358 = !DILocation(line: 62, column: 13, scope: !15357)
!15359 = !DILocation(line: 62, column: 11, scope: !15348)
!15360 = !DILocation(line: 63, column: 16, scope: !15357)
!15361 = !DILocation(line: 63, column: 9, scope: !15357)
!15362 = !DILocation(line: 64, column: 16, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15357, file: !15339, line: 64, column: 16)
!15364 = !DILocation(line: 64, column: 16, scope: !15357)
!15365 = !DILocation(line: 65, column: 9, scope: !15363)
!15366 = distinct !{!15366, !15367, !15368}
!15367 = !DILocation(line: 58, column: 3, scope: !15350)
!15368 = !DILocation(line: 70, column: 5, scope: !15350)
!15369 = !DILocation(line: 66, column: 16, scope: !15370)
!15370 = distinct !DILexicalBlock(scope: !15363, file: !15339, line: 66, column: 16)
!15371 = !DILocation(line: 66, column: 22, scope: !15370)
!15372 = !DILocation(line: 66, column: 32, scope: !15370)
!15373 = !DILocation(line: 66, column: 53, scope: !15370)
!15374 = !DILocation(line: 66, column: 51, scope: !15370)
!15375 = !DILocation(line: 66, column: 16, scope: !15363)
!15376 = !DILocation(line: 67, column: 15, scope: !15370)
!15377 = !DILocation(line: 67, column: 9, scope: !15370)
!15378 = !DILocation(line: 69, column: 16, scope: !15370)
!15379 = !DILocation(line: 69, column: 9, scope: !15370)
!15380 = !DILocation(line: 58, column: 3, scope: !15349)
!15381 = !DILocation(line: 71, column: 1, scope: !15338)
!15382 = distinct !DISubprogram(name: "same_name", scope: !15383, file: !15383, line: 61, type: !1846, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !140)
!15383 = !DIFile(filename: "lib/same.c", directory: "/home/mohamad/clone/coreutils")
!15384 = !DILocalVariable(name: "source", arg: 1, scope: !15382, file: !15383, line: 61, type: !112)
!15385 = !DILocation(line: 61, column: 24, scope: !15382)
!15386 = !DILocalVariable(name: "dest", arg: 2, scope: !15382, file: !15383, line: 61, type: !112)
!15387 = !DILocation(line: 61, column: 44, scope: !15382)
!15388 = !DILocation(line: 63, column: 33, scope: !15382)
!15389 = !DILocation(line: 63, column: 51, scope: !15382)
!15390 = !DILocation(line: 63, column: 10, scope: !15382)
!15391 = !DILocation(line: 63, column: 3, scope: !15382)
!15392 = distinct !DISubprogram(name: "same_nameat", scope: !15383, file: !15383, line: 70, type: !1848, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1843, retainedNodes: !140)
!15393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !15394)
!15394 = !{!15395, !15396, !15397, !15398, !15399, !15400, !15401, !15402, !15403, !15404, !15405, !15406, !15411, !15412, !15413}
!15395 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15393, file: !315, line: 48, baseType: !228, size: 64)
!15396 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15393, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!15397 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15393, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!15398 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15393, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!15399 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15393, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!15400 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15393, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!15401 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15393, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!15402 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15393, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!15403 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15393, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!15404 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15393, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!15405 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15393, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!15406 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15393, file: !315, line: 91, baseType: !15407, size: 128, offset: 576)
!15407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !15408)
!15408 = !{!15409, !15410}
!15409 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15407, file: !335, line: 122, baseType: !338, size: 64)
!15410 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15407, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!15411 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15393, file: !315, line: 92, baseType: !15407, size: 128, offset: 704)
!15412 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15393, file: !315, line: 93, baseType: !15407, size: 128, offset: 832)
!15413 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15393, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!15414 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !15392, file: !15383, line: 70, type: !5)
!15415 = !DILocation(line: 70, column: 18, scope: !15392)
!15416 = !DILocalVariable(name: "source", arg: 2, scope: !15392, file: !15383, line: 70, type: !112)
!15417 = !DILocation(line: 70, column: 42, scope: !15392)
!15418 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !15392, file: !15383, line: 71, type: !5)
!15419 = !DILocation(line: 71, column: 18, scope: !15392)
!15420 = !DILocalVariable(name: "dest", arg: 4, scope: !15392, file: !15383, line: 71, type: !112)
!15421 = !DILocation(line: 71, column: 40, scope: !15392)
!15422 = !DILocalVariable(name: "source_basename", scope: !15392, file: !15383, line: 74, type: !112)
!15423 = !DILocation(line: 74, column: 15, scope: !15392)
!15424 = !DILocation(line: 74, column: 49, scope: !15392)
!15425 = !DILocation(line: 74, column: 33, scope: !15392)
!15426 = !DILocalVariable(name: "dest_basename", scope: !15392, file: !15383, line: 75, type: !112)
!15427 = !DILocation(line: 75, column: 15, scope: !15392)
!15428 = !DILocation(line: 75, column: 47, scope: !15392)
!15429 = !DILocation(line: 75, column: 31, scope: !15392)
!15430 = !DILocalVariable(name: "source_baselen", scope: !15392, file: !15383, line: 76, type: !52)
!15431 = !DILocation(line: 76, column: 10, scope: !15392)
!15432 = !DILocation(line: 76, column: 37, scope: !15392)
!15433 = !DILocation(line: 76, column: 27, scope: !15392)
!15434 = !DILocalVariable(name: "dest_baselen", scope: !15392, file: !15383, line: 77, type: !52)
!15435 = !DILocation(line: 77, column: 10, scope: !15392)
!15436 = !DILocation(line: 77, column: 35, scope: !15392)
!15437 = !DILocation(line: 77, column: 25, scope: !15392)
!15438 = !DILocalVariable(name: "identical_basenames", scope: !15392, file: !15383, line: 78, type: !117)
!15439 = !DILocation(line: 78, column: 8, scope: !15392)
!15440 = !DILocation(line: 79, column: 6, scope: !15392)
!15441 = !DILocation(line: 79, column: 24, scope: !15392)
!15442 = !DILocation(line: 79, column: 21, scope: !15392)
!15443 = !DILocation(line: 80, column: 6, scope: !15392)
!15444 = !DILocation(line: 80, column: 17, scope: !15392)
!15445 = !DILocation(line: 80, column: 34, scope: !15392)
!15446 = !DILocation(line: 80, column: 49, scope: !15392)
!15447 = !DILocation(line: 80, column: 9, scope: !15392)
!15448 = !DILocation(line: 80, column: 63, scope: !15392)
!15449 = !DILocation(line: 0, scope: !15392)
!15450 = !DILocalVariable(name: "compare_dirs", scope: !15392, file: !15383, line: 81, type: !117)
!15451 = !DILocation(line: 81, column: 8, scope: !15392)
!15452 = !DILocation(line: 81, column: 23, scope: !15392)
!15453 = !DILocalVariable(name: "same", scope: !15392, file: !15383, line: 82, type: !117)
!15454 = !DILocation(line: 82, column: 8, scope: !15392)
!15455 = !DILocation(line: 92, column: 7, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15392, file: !15383, line: 92, column: 7)
!15457 = !DILocation(line: 92, column: 7, scope: !15392)
!15458 = !DILocalVariable(name: "source_dir_stats", scope: !15459, file: !15383, line: 94, type: !15393)
!15459 = distinct !DILexicalBlock(scope: !15456, file: !15383, line: 93, column: 5)
!15460 = !DILocation(line: 94, column: 19, scope: !15459)
!15461 = !DILocalVariable(name: "dest_dir_stats", scope: !15459, file: !15383, line: 95, type: !15393)
!15462 = !DILocation(line: 95, column: 19, scope: !15459)
!15463 = !DILocalVariable(name: "source_dirname", scope: !15459, file: !15383, line: 98, type: !7)
!15464 = !DILocation(line: 98, column: 13, scope: !15459)
!15465 = !DILocation(line: 98, column: 40, scope: !15459)
!15466 = !DILocation(line: 98, column: 30, scope: !15459)
!15467 = !DILocalVariable(name: "flags", scope: !15459, file: !15383, line: 99, type: !5)
!15468 = !DILocation(line: 99, column: 11, scope: !15459)
!15469 = !DILocation(line: 100, column: 20, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15459, file: !15383, line: 100, column: 11)
!15471 = !DILocation(line: 100, column: 32, scope: !15470)
!15472 = !DILocation(line: 100, column: 67, scope: !15470)
!15473 = !DILocation(line: 100, column: 11, scope: !15470)
!15474 = !DILocation(line: 100, column: 74, scope: !15470)
!15475 = !DILocation(line: 100, column: 11, scope: !15459)
!15476 = !DILocation(line: 103, column: 21, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15470, file: !15383, line: 101, column: 9)
!15478 = !DILocation(line: 103, column: 34, scope: !15477)
!15479 = !DILocation(line: 103, column: 11, scope: !15477)
!15480 = !DILocation(line: 104, column: 9, scope: !15477)
!15481 = !DILocation(line: 105, column: 13, scope: !15459)
!15482 = !DILocation(line: 105, column: 7, scope: !15459)
!15483 = !DILocalVariable(name: "dest_dirname", scope: !15459, file: !15383, line: 107, type: !7)
!15484 = !DILocation(line: 107, column: 13, scope: !15459)
!15485 = !DILocation(line: 107, column: 38, scope: !15459)
!15486 = !DILocation(line: 107, column: 28, scope: !15459)
!15487 = !DILocation(line: 137, column: 20, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15459, file: !15383, line: 137, column: 11)
!15489 = !DILocation(line: 137, column: 30, scope: !15488)
!15490 = !DILocation(line: 137, column: 61, scope: !15488)
!15491 = !DILocation(line: 137, column: 11, scope: !15488)
!15492 = !DILocation(line: 137, column: 68, scope: !15488)
!15493 = !DILocation(line: 137, column: 11, scope: !15459)
!15494 = !DILocation(line: 140, column: 21, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15488, file: !15383, line: 138, column: 9)
!15496 = !DILocation(line: 140, column: 34, scope: !15495)
!15497 = !DILocation(line: 140, column: 11, scope: !15495)
!15498 = !DILocation(line: 141, column: 9, scope: !15495)
!15499 = !DILocation(line: 142, column: 14, scope: !15459)
!15500 = !DILocation(line: 0, scope: !15459)
!15501 = !DILocation(line: 142, column: 12, scope: !15459)
!15502 = !DILocation(line: 145, column: 13, scope: !15459)
!15503 = !DILocation(line: 145, column: 7, scope: !15459)
!15504 = !DILocation(line: 146, column: 5, scope: !15459)
!15505 = !DILocation(line: 148, column: 10, scope: !15392)
!15506 = !DILocation(line: 148, column: 3, scope: !15392)
!15507 = distinct !DISubprogram(name: "streamsavedir", scope: !1070, file: !1070, line: 91, type: !1066, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1055, retainedNodes: !140)
!15508 = !DILocalVariable(name: "dirp", arg: 1, scope: !15507, file: !1070, line: 91, type: !580)
!15509 = !DILocation(line: 91, column: 21, scope: !15507)
!15510 = !DILocalVariable(name: "option", arg: 2, scope: !15507, file: !1070, line: 91, type: !1058)
!15511 = !DILocation(line: 91, column: 47, scope: !15507)
!15512 = !DILocalVariable(name: "name_space", scope: !15507, file: !1070, line: 93, type: !7)
!15513 = !DILocation(line: 93, column: 9, scope: !15507)
!15514 = !DILocalVariable(name: "allocated", scope: !15507, file: !1070, line: 94, type: !52)
!15515 = !DILocation(line: 94, column: 10, scope: !15507)
!15516 = !DILocalVariable(name: "entries", scope: !15507, file: !1070, line: 95, type: !1068)
!15517 = !DILocation(line: 95, column: 15, scope: !15507)
!15518 = !DILocalVariable(name: "entries_allocated", scope: !15507, file: !1070, line: 96, type: !52)
!15519 = !DILocation(line: 96, column: 10, scope: !15507)
!15520 = !DILocalVariable(name: "entries_used", scope: !15507, file: !1070, line: 97, type: !52)
!15521 = !DILocation(line: 97, column: 10, scope: !15507)
!15522 = !DILocalVariable(name: "used", scope: !15507, file: !1070, line: 98, type: !52)
!15523 = !DILocation(line: 98, column: 10, scope: !15507)
!15524 = !DILocalVariable(name: "readdir_errno", scope: !15507, file: !1070, line: 99, type: !5)
!15525 = !DILocation(line: 99, column: 7, scope: !15507)
!15526 = !DILocalVariable(name: "cmp", scope: !15507, file: !1070, line: 100, type: !1076)
!15527 = !DILocation(line: 100, column: 23, scope: !15507)
!15528 = !DILocation(line: 100, column: 55, scope: !15507)
!15529 = !DILocation(line: 100, column: 29, scope: !15507)
!15530 = !DILocation(line: 102, column: 7, scope: !15531)
!15531 = distinct !DILexicalBlock(scope: !15507, file: !1070, line: 102, column: 7)
!15532 = !DILocation(line: 102, column: 12, scope: !15531)
!15533 = !DILocation(line: 102, column: 7, scope: !15507)
!15534 = !DILocation(line: 103, column: 5, scope: !15531)
!15535 = !DILocation(line: 105, column: 3, scope: !15507)
!15536 = !DILocalVariable(name: "dp", scope: !15537, file: !1070, line: 107, type: !1082)
!15537 = distinct !DILexicalBlock(scope: !15538, file: !1070, line: 106, column: 5)
!15538 = distinct !DILexicalBlock(scope: !15539, file: !1070, line: 105, column: 3)
!15539 = distinct !DILexicalBlock(scope: !15507, file: !1070, line: 105, column: 3)
!15540 = !DILocation(line: 107, column: 28, scope: !15537)
!15541 = !DILocalVariable(name: "entry", scope: !15537, file: !1070, line: 108, type: !112)
!15542 = !DILocation(line: 108, column: 19, scope: !15537)
!15543 = !DILocation(line: 110, column: 7, scope: !15537)
!15544 = !DILocation(line: 110, column: 13, scope: !15537)
!15545 = !DILocation(line: 111, column: 21, scope: !15537)
!15546 = !DILocation(line: 111, column: 12, scope: !15537)
!15547 = !DILocation(line: 111, column: 10, scope: !15537)
!15548 = !DILocation(line: 112, column: 13, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15537, file: !1070, line: 112, column: 11)
!15550 = !DILocation(line: 112, column: 11, scope: !15537)
!15551 = !DILocation(line: 113, column: 9, scope: !15549)
!15552 = !DILocation(line: 117, column: 15, scope: !15537)
!15553 = !DILocation(line: 117, column: 19, scope: !15537)
!15554 = !DILocation(line: 117, column: 13, scope: !15537)
!15555 = !DILocation(line: 118, column: 11, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15537, file: !1070, line: 118, column: 11)
!15557 = !DILocation(line: 118, column: 17, scope: !15556)
!15558 = !DILocation(line: 118, column: 26, scope: !15556)
!15559 = !DILocation(line: 118, column: 39, scope: !15556)
!15560 = !DILocation(line: 118, column: 48, scope: !15556)
!15561 = !DILocation(line: 118, column: 64, scope: !15556)
!15562 = !DILocation(line: 118, column: 11, scope: !15537)
!15563 = !DILocalVariable(name: "entry_size", scope: !15564, file: !1070, line: 120, type: !52)
!15564 = distinct !DILexicalBlock(scope: !15556, file: !1070, line: 119, column: 9)
!15565 = !DILocation(line: 120, column: 18, scope: !15564)
!15566 = !DILocation(line: 120, column: 31, scope: !15564)
!15567 = !DILocation(line: 120, column: 52, scope: !15564)
!15568 = !DILocation(line: 121, column: 15, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15564, file: !1070, line: 121, column: 15)
!15570 = !DILocation(line: 121, column: 15, scope: !15564)
!15571 = !DILocation(line: 123, column: 19, scope: !15572)
!15572 = distinct !DILexicalBlock(scope: !15573, file: !1070, line: 123, column: 19)
!15573 = distinct !DILexicalBlock(scope: !15569, file: !1070, line: 122, column: 13)
!15574 = !DILocation(line: 123, column: 40, scope: !15572)
!15575 = !DILocation(line: 123, column: 37, scope: !15572)
!15576 = !DILocation(line: 123, column: 19, scope: !15573)
!15577 = !DILocalVariable(name: "n", scope: !15578, file: !1070, line: 125, type: !52)
!15578 = distinct !DILexicalBlock(scope: !15572, file: !1070, line: 124, column: 17)
!15579 = !DILocation(line: 125, column: 26, scope: !15578)
!15580 = !DILocation(line: 125, column: 30, scope: !15578)
!15581 = !DILocation(line: 126, column: 41, scope: !15578)
!15582 = !DILocation(line: 126, column: 29, scope: !15578)
!15583 = !DILocation(line: 126, column: 27, scope: !15578)
!15584 = !DILocation(line: 127, column: 39, scope: !15578)
!15585 = !DILocation(line: 127, column: 37, scope: !15578)
!15586 = !DILocation(line: 128, column: 17, scope: !15578)
!15587 = !DILocation(line: 129, column: 53, scope: !15573)
!15588 = !DILocation(line: 129, column: 44, scope: !15573)
!15589 = !DILocation(line: 129, column: 15, scope: !15573)
!15590 = !DILocation(line: 129, column: 23, scope: !15573)
!15591 = !DILocation(line: 129, column: 37, scope: !15573)
!15592 = !DILocation(line: 129, column: 42, scope: !15573)
!15593 = !{!15594, !2994, i64 0}
!15594 = !{!"", !2994, i64 0, !3178, i64 8}
!15595 = !DILocation(line: 131, column: 43, scope: !15573)
!15596 = !DILocation(line: 131, column: 47, scope: !15573)
!15597 = !{!15598, !3178, i64 0}
!15598 = !{!"dirent", !3178, i64 0, !3178, i64 8, !3800, i64 16, !2982, i64 18, !2982, i64 19}
!15599 = !DILocation(line: 131, column: 15, scope: !15573)
!15600 = !DILocation(line: 131, column: 23, scope: !15573)
!15601 = !DILocation(line: 131, column: 37, scope: !15573)
!15602 = !DILocation(line: 131, column: 41, scope: !15573)
!15603 = !{!15594, !3178, i64 8}
!15604 = !DILocation(line: 133, column: 27, scope: !15573)
!15605 = !DILocation(line: 134, column: 13, scope: !15573)
!15606 = !DILocation(line: 137, column: 19, scope: !15607)
!15607 = distinct !DILexicalBlock(scope: !15608, file: !1070, line: 137, column: 19)
!15608 = distinct !DILexicalBlock(scope: !15569, file: !1070, line: 136, column: 13)
!15609 = !DILocation(line: 137, column: 31, scope: !15607)
!15610 = !DILocation(line: 137, column: 29, scope: !15607)
!15611 = !DILocation(line: 137, column: 39, scope: !15607)
!15612 = !DILocation(line: 137, column: 36, scope: !15607)
!15613 = !DILocation(line: 137, column: 19, scope: !15608)
!15614 = !DILocalVariable(name: "n", scope: !15615, file: !1070, line: 139, type: !52)
!15615 = distinct !DILexicalBlock(scope: !15607, file: !1070, line: 138, column: 17)
!15616 = !DILocation(line: 139, column: 26, scope: !15615)
!15617 = !DILocation(line: 139, column: 30, scope: !15615)
!15618 = !DILocation(line: 139, column: 37, scope: !15615)
!15619 = !DILocation(line: 139, column: 35, scope: !15615)
!15620 = !DILocation(line: 140, column: 23, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15615, file: !1070, line: 140, column: 23)
!15622 = !DILocation(line: 140, column: 27, scope: !15621)
!15623 = !DILocation(line: 140, column: 25, scope: !15621)
!15624 = !DILocation(line: 140, column: 23, scope: !15615)
!15625 = !DILocation(line: 141, column: 21, scope: !15621)
!15626 = !DILocation(line: 142, column: 44, scope: !15615)
!15627 = !DILocation(line: 142, column: 32, scope: !15615)
!15628 = !DILocation(line: 142, column: 30, scope: !15615)
!15629 = !DILocation(line: 143, column: 31, scope: !15615)
!15630 = !DILocation(line: 143, column: 29, scope: !15615)
!15631 = !DILocation(line: 144, column: 17, scope: !15615)
!15632 = !DILocation(line: 145, column: 23, scope: !15608)
!15633 = !DILocation(line: 145, column: 36, scope: !15608)
!15634 = !DILocation(line: 145, column: 34, scope: !15608)
!15635 = !DILocation(line: 145, column: 42, scope: !15608)
!15636 = !DILocation(line: 145, column: 49, scope: !15608)
!15637 = !DILocation(line: 145, column: 15, scope: !15608)
!15638 = !DILocation(line: 147, column: 19, scope: !15564)
!15639 = !DILocation(line: 147, column: 16, scope: !15564)
!15640 = !DILocation(line: 148, column: 9, scope: !15564)
!15641 = !DILocation(line: 105, column: 3, scope: !15538)
!15642 = distinct !{!15642, !15643, !15644}
!15643 = !DILocation(line: 105, column: 3, scope: !15539)
!15644 = !DILocation(line: 149, column: 5, scope: !15539)
!15645 = !DILocation(line: 151, column: 19, scope: !15507)
!15646 = !DILocation(line: 151, column: 17, scope: !15507)
!15647 = !DILocation(line: 152, column: 7, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15507, file: !1070, line: 152, column: 7)
!15649 = !DILocation(line: 152, column: 21, scope: !15648)
!15650 = !DILocation(line: 152, column: 7, scope: !15507)
!15651 = !DILocation(line: 154, column: 13, scope: !15652)
!15652 = distinct !DILexicalBlock(scope: !15648, file: !1070, line: 153, column: 5)
!15653 = !DILocation(line: 154, column: 7, scope: !15652)
!15654 = !DILocation(line: 155, column: 13, scope: !15652)
!15655 = !DILocation(line: 155, column: 7, scope: !15652)
!15656 = !DILocation(line: 156, column: 15, scope: !15652)
!15657 = !DILocation(line: 156, column: 7, scope: !15652)
!15658 = !DILocation(line: 156, column: 13, scope: !15652)
!15659 = !DILocation(line: 157, column: 7, scope: !15652)
!15660 = !DILocation(line: 160, column: 7, scope: !15661)
!15661 = distinct !DILexicalBlock(scope: !15507, file: !1070, line: 160, column: 7)
!15662 = !DILocation(line: 160, column: 7, scope: !15507)
!15663 = !DILocalVariable(name: "i", scope: !15664, file: !1070, line: 162, type: !52)
!15664 = distinct !DILexicalBlock(scope: !15661, file: !1070, line: 161, column: 5)
!15665 = !DILocation(line: 162, column: 14, scope: !15664)
!15666 = !DILocation(line: 164, column: 11, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15664, file: !1070, line: 164, column: 11)
!15668 = !DILocation(line: 164, column: 11, scope: !15664)
!15669 = !DILocation(line: 165, column: 16, scope: !15667)
!15670 = !DILocation(line: 165, column: 25, scope: !15667)
!15671 = !DILocation(line: 165, column: 56, scope: !15667)
!15672 = !DILocation(line: 165, column: 9, scope: !15667)
!15673 = !DILocation(line: 166, column: 29, scope: !15664)
!15674 = !DILocation(line: 166, column: 34, scope: !15664)
!15675 = !DILocation(line: 166, column: 20, scope: !15664)
!15676 = !DILocation(line: 166, column: 18, scope: !15664)
!15677 = !DILocation(line: 167, column: 12, scope: !15664)
!15678 = !DILocation(line: 168, column: 14, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15664, file: !1070, line: 168, column: 7)
!15680 = !DILocation(line: 168, column: 12, scope: !15679)
!15681 = !DILocation(line: 168, column: 19, scope: !15682)
!15682 = distinct !DILexicalBlock(scope: !15679, file: !1070, line: 168, column: 7)
!15683 = !DILocation(line: 168, column: 23, scope: !15682)
!15684 = !DILocation(line: 168, column: 21, scope: !15682)
!15685 = !DILocation(line: 168, column: 7, scope: !15679)
!15686 = !DILocalVariable(name: "dest", scope: !15687, file: !1070, line: 170, type: !7)
!15687 = distinct !DILexicalBlock(scope: !15682, file: !1070, line: 169, column: 9)
!15688 = !DILocation(line: 170, column: 17, scope: !15687)
!15689 = !DILocation(line: 170, column: 24, scope: !15687)
!15690 = !DILocation(line: 170, column: 37, scope: !15687)
!15691 = !DILocation(line: 170, column: 35, scope: !15687)
!15692 = !DILocation(line: 171, column: 27, scope: !15687)
!15693 = !DILocation(line: 171, column: 33, scope: !15687)
!15694 = !DILocation(line: 171, column: 41, scope: !15687)
!15695 = !DILocation(line: 171, column: 44, scope: !15687)
!15696 = !DILocation(line: 171, column: 19, scope: !15687)
!15697 = !DILocation(line: 171, column: 52, scope: !15687)
!15698 = !DILocation(line: 171, column: 50, scope: !15687)
!15699 = !DILocation(line: 171, column: 57, scope: !15687)
!15700 = !DILocation(line: 171, column: 16, scope: !15687)
!15701 = !DILocation(line: 172, column: 17, scope: !15687)
!15702 = !DILocation(line: 172, column: 25, scope: !15687)
!15703 = !DILocation(line: 172, column: 28, scope: !15687)
!15704 = !DILocation(line: 172, column: 11, scope: !15687)
!15705 = !DILocation(line: 173, column: 9, scope: !15687)
!15706 = !DILocation(line: 168, column: 38, scope: !15682)
!15707 = !DILocation(line: 168, column: 7, scope: !15682)
!15708 = distinct !{!15708, !15685, !15709}
!15709 = !DILocation(line: 173, column: 9, scope: !15679)
!15710 = !DILocation(line: 174, column: 13, scope: !15664)
!15711 = !DILocation(line: 174, column: 7, scope: !15664)
!15712 = !DILocation(line: 175, column: 5, scope: !15664)
!15713 = !DILocation(line: 176, column: 12, scope: !15714)
!15714 = distinct !DILexicalBlock(scope: !15661, file: !1070, line: 176, column: 12)
!15715 = !DILocation(line: 176, column: 20, scope: !15714)
!15716 = !DILocation(line: 176, column: 17, scope: !15714)
!15717 = !DILocation(line: 176, column: 12, scope: !15661)
!15718 = !DILocation(line: 177, column: 28, scope: !15714)
!15719 = !DILocation(line: 177, column: 40, scope: !15714)
!15720 = !DILocation(line: 177, column: 45, scope: !15714)
!15721 = !DILocation(line: 177, column: 18, scope: !15714)
!15722 = !DILocation(line: 177, column: 16, scope: !15714)
!15723 = !DILocation(line: 177, column: 5, scope: !15714)
!15724 = !DILocation(line: 179, column: 3, scope: !15507)
!15725 = !DILocation(line: 179, column: 14, scope: !15507)
!15726 = !DILocation(line: 179, column: 20, scope: !15507)
!15727 = !DILocation(line: 180, column: 10, scope: !15507)
!15728 = !DILocation(line: 180, column: 3, scope: !15507)
!15729 = !DILocation(line: 181, column: 1, scope: !15507)
!15730 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !1070, file: !1070, line: 51, type: !1078, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1055, retainedNodes: !140)
!15731 = !DILocalVariable(name: "a", arg: 1, scope: !15730, file: !1070, line: 51, type: !428)
!15732 = !DILocation(line: 51, column: 32, scope: !15730)
!15733 = !DILocalVariable(name: "b", arg: 2, scope: !15730, file: !1070, line: 51, type: !428)
!15734 = !DILocation(line: 51, column: 47, scope: !15730)
!15735 = !DILocalVariable(name: "dea", scope: !15730, file: !1070, line: 53, type: !1093)
!15736 = !DILocation(line: 53, column: 21, scope: !15730)
!15737 = !DILocation(line: 53, column: 27, scope: !15730)
!15738 = !DILocalVariable(name: "deb", scope: !15730, file: !1070, line: 54, type: !1093)
!15739 = !DILocation(line: 54, column: 21, scope: !15730)
!15740 = !DILocation(line: 54, column: 27, scope: !15730)
!15741 = !DILocation(line: 56, column: 18, scope: !15730)
!15742 = !DILocation(line: 56, column: 23, scope: !15730)
!15743 = !DILocation(line: 56, column: 29, scope: !15730)
!15744 = !DILocation(line: 56, column: 34, scope: !15730)
!15745 = !DILocation(line: 56, column: 10, scope: !15730)
!15746 = !DILocation(line: 56, column: 3, scope: !15730)
!15747 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !1070, file: !1070, line: 63, type: !1078, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1055, retainedNodes: !140)
!15748 = !DILocalVariable(name: "a", arg: 1, scope: !15747, file: !1070, line: 63, type: !428)
!15749 = !DILocation(line: 63, column: 33, scope: !15747)
!15750 = !DILocalVariable(name: "b", arg: 2, scope: !15747, file: !1070, line: 63, type: !428)
!15751 = !DILocation(line: 63, column: 48, scope: !15747)
!15752 = !DILocalVariable(name: "dea", scope: !15747, file: !1070, line: 65, type: !1093)
!15753 = !DILocation(line: 65, column: 21, scope: !15747)
!15754 = !DILocation(line: 65, column: 27, scope: !15747)
!15755 = !DILocalVariable(name: "deb", scope: !15747, file: !1070, line: 66, type: !1093)
!15756 = !DILocation(line: 66, column: 21, scope: !15747)
!15757 = !DILocation(line: 66, column: 27, scope: !15747)
!15758 = !DILocation(line: 68, column: 10, scope: !15747)
!15759 = !DILocation(line: 68, column: 15, scope: !15747)
!15760 = !DILocation(line: 68, column: 21, scope: !15747)
!15761 = !DILocation(line: 68, column: 26, scope: !15747)
!15762 = !DILocation(line: 68, column: 19, scope: !15747)
!15763 = !DILocation(line: 68, column: 37, scope: !15747)
!15764 = !DILocation(line: 68, column: 42, scope: !15747)
!15765 = !DILocation(line: 68, column: 48, scope: !15747)
!15766 = !DILocation(line: 68, column: 53, scope: !15747)
!15767 = !DILocation(line: 68, column: 46, scope: !15747)
!15768 = !DILocation(line: 68, column: 3, scope: !15747)
!15769 = distinct !DISubprogram(name: "savedir", scope: !1070, file: !1070, line: 189, type: !1091, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1055, retainedNodes: !140)
!15770 = !DILocalVariable(name: "dir", arg: 1, scope: !15769, file: !1070, line: 189, type: !112)
!15771 = !DILocation(line: 189, column: 22, scope: !15769)
!15772 = !DILocalVariable(name: "option", arg: 2, scope: !15769, file: !1070, line: 189, type: !1058)
!15773 = !DILocation(line: 189, column: 47, scope: !15769)
!15774 = !DILocalVariable(name: "dirp", scope: !15769, file: !1070, line: 191, type: !580)
!15775 = !DILocation(line: 191, column: 8, scope: !15769)
!15776 = !DILocation(line: 191, column: 24, scope: !15769)
!15777 = !DILocation(line: 191, column: 15, scope: !15769)
!15778 = !DILocation(line: 192, column: 9, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15769, file: !1070, line: 192, column: 7)
!15780 = !DILocation(line: 192, column: 7, scope: !15769)
!15781 = !DILocation(line: 193, column: 5, scope: !15779)
!15782 = !DILocalVariable(name: "name_space", scope: !15783, file: !1070, line: 196, type: !7)
!15783 = distinct !DILexicalBlock(scope: !15779, file: !1070, line: 195, column: 5)
!15784 = !DILocation(line: 196, column: 13, scope: !15783)
!15785 = !DILocation(line: 196, column: 41, scope: !15783)
!15786 = !DILocation(line: 196, column: 47, scope: !15783)
!15787 = !DILocation(line: 196, column: 26, scope: !15783)
!15788 = !DILocation(line: 197, column: 21, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15783, file: !1070, line: 197, column: 11)
!15790 = !DILocation(line: 197, column: 11, scope: !15789)
!15791 = !DILocation(line: 197, column: 27, scope: !15789)
!15792 = !DILocation(line: 197, column: 11, scope: !15783)
!15793 = !DILocalVariable(name: "closedir_errno", scope: !15794, file: !1070, line: 199, type: !5)
!15794 = distinct !DILexicalBlock(scope: !15789, file: !1070, line: 198, column: 9)
!15795 = !DILocation(line: 199, column: 15, scope: !15794)
!15796 = !DILocation(line: 199, column: 32, scope: !15794)
!15797 = !DILocation(line: 200, column: 17, scope: !15794)
!15798 = !DILocation(line: 200, column: 11, scope: !15794)
!15799 = !DILocation(line: 201, column: 19, scope: !15794)
!15800 = !DILocation(line: 201, column: 11, scope: !15794)
!15801 = !DILocation(line: 201, column: 17, scope: !15794)
!15802 = !DILocation(line: 202, column: 11, scope: !15794)
!15803 = !DILocation(line: 204, column: 14, scope: !15783)
!15804 = !DILocation(line: 204, column: 7, scope: !15783)
!15805 = !DILocation(line: 206, column: 1, scope: !15769)
!15806 = distinct !DISubprogram(name: "getcon", scope: !1857, file: !1857, line: 87, type: !1853, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15807 = !DILocalVariable(name: "con", arg: 1, scope: !15806, file: !1857, line: 87, type: !1855)
!15808 = !DILocation(line: 87, column: 29, scope: !15806)
!15809 = !DILocation(line: 88, column: 5, scope: !15806)
!15810 = !DILocation(line: 88, column: 11, scope: !15806)
!15811 = !DILocation(line: 88, column: 22, scope: !15806)
!15812 = distinct !DISubprogram(name: "freecon", scope: !1857, file: !1857, line: 90, type: !1858, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15813 = !DILocalVariable(name: "con", arg: 1, scope: !15812, file: !1857, line: 90, type: !1856)
!15814 = !DILocation(line: 90, column: 29, scope: !15812)
!15815 = !DILocation(line: 90, column: 56, scope: !15812)
!15816 = distinct !DISubprogram(name: "getfscreatecon", scope: !1857, file: !1857, line: 93, type: !1853, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15817 = !DILocalVariable(name: "con", arg: 1, scope: !15816, file: !1857, line: 93, type: !1855)
!15818 = !DILocation(line: 93, column: 37, scope: !15816)
!15819 = !DILocation(line: 94, column: 5, scope: !15816)
!15820 = !DILocation(line: 94, column: 11, scope: !15816)
!15821 = !DILocation(line: 94, column: 22, scope: !15816)
!15822 = distinct !DISubprogram(name: "setfscreatecon", scope: !1857, file: !1857, line: 96, type: !1860, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15823 = !DILocalVariable(name: "con", arg: 1, scope: !15822, file: !1857, line: 96, type: !1856)
!15824 = !DILocation(line: 96, column: 36, scope: !15822)
!15825 = !DILocation(line: 97, column: 5, scope: !15822)
!15826 = !DILocation(line: 97, column: 11, scope: !15822)
!15827 = !DILocation(line: 97, column: 22, scope: !15822)
!15828 = distinct !DISubprogram(name: "matchpathcon", scope: !1857, file: !1857, line: 99, type: !1862, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15829 = !DILocalVariable(name: "file", arg: 1, scope: !15828, file: !1857, line: 99, type: !112)
!15830 = !DILocation(line: 99, column: 27, scope: !15828)
!15831 = !DILocalVariable(name: "m", arg: 2, scope: !15828, file: !1857, line: 100, type: !157)
!15832 = !DILocation(line: 100, column: 22, scope: !15828)
!15833 = !DILocalVariable(name: "con", arg: 3, scope: !15828, file: !1857, line: 101, type: !1855)
!15834 = !DILocation(line: 101, column: 23, scope: !15828)
!15835 = !DILocation(line: 102, column: 5, scope: !15828)
!15836 = !DILocation(line: 102, column: 11, scope: !15828)
!15837 = !DILocation(line: 102, column: 22, scope: !15828)
!15838 = distinct !DISubprogram(name: "getfilecon", scope: !1857, file: !1857, line: 104, type: !1864, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15839 = !DILocalVariable(name: "file", arg: 1, scope: !15838, file: !1857, line: 104, type: !112)
!15840 = !DILocation(line: 104, column: 25, scope: !15838)
!15841 = !DILocalVariable(name: "con", arg: 2, scope: !15838, file: !1857, line: 105, type: !1855)
!15842 = !DILocation(line: 105, column: 33, scope: !15838)
!15843 = !DILocation(line: 106, column: 5, scope: !15838)
!15844 = !DILocation(line: 106, column: 11, scope: !15838)
!15845 = !DILocation(line: 106, column: 22, scope: !15838)
!15846 = distinct !DISubprogram(name: "lgetfilecon", scope: !1857, file: !1857, line: 108, type: !1864, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15847 = !DILocalVariable(name: "file", arg: 1, scope: !15846, file: !1857, line: 108, type: !112)
!15848 = !DILocation(line: 108, column: 26, scope: !15846)
!15849 = !DILocalVariable(name: "con", arg: 2, scope: !15846, file: !1857, line: 109, type: !1855)
!15850 = !DILocation(line: 109, column: 34, scope: !15846)
!15851 = !DILocation(line: 110, column: 5, scope: !15846)
!15852 = !DILocation(line: 110, column: 11, scope: !15846)
!15853 = !DILocation(line: 110, column: 22, scope: !15846)
!15854 = distinct !DISubprogram(name: "fgetfilecon", scope: !1857, file: !1857, line: 112, type: !1866, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15855 = !DILocalVariable(name: "fd", arg: 1, scope: !15854, file: !1857, line: 112, type: !5)
!15856 = !DILocation(line: 112, column: 18, scope: !15854)
!15857 = !DILocalVariable(name: "con", arg: 2, scope: !15854, file: !1857, line: 112, type: !1855)
!15858 = !DILocation(line: 112, column: 42, scope: !15854)
!15859 = !DILocation(line: 113, column: 5, scope: !15854)
!15860 = !DILocation(line: 113, column: 11, scope: !15854)
!15861 = !DILocation(line: 113, column: 22, scope: !15854)
!15862 = distinct !DISubprogram(name: "setfilecon", scope: !1857, file: !1857, line: 115, type: !1868, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15863 = !DILocalVariable(name: "file", arg: 1, scope: !15862, file: !1857, line: 115, type: !112)
!15864 = !DILocation(line: 115, column: 25, scope: !15862)
!15865 = !DILocalVariable(name: "con", arg: 2, scope: !15862, file: !1857, line: 116, type: !1856)
!15866 = !DILocation(line: 116, column: 32, scope: !15862)
!15867 = !DILocation(line: 117, column: 5, scope: !15862)
!15868 = !DILocation(line: 117, column: 11, scope: !15862)
!15869 = !DILocation(line: 117, column: 22, scope: !15862)
!15870 = distinct !DISubprogram(name: "lsetfilecon", scope: !1857, file: !1857, line: 119, type: !1868, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15871 = !DILocalVariable(name: "file", arg: 1, scope: !15870, file: !1857, line: 119, type: !112)
!15872 = !DILocation(line: 119, column: 26, scope: !15870)
!15873 = !DILocalVariable(name: "con", arg: 2, scope: !15870, file: !1857, line: 120, type: !1856)
!15874 = !DILocation(line: 120, column: 33, scope: !15870)
!15875 = !DILocation(line: 121, column: 5, scope: !15870)
!15876 = !DILocation(line: 121, column: 11, scope: !15870)
!15877 = !DILocation(line: 121, column: 22, scope: !15870)
!15878 = distinct !DISubprogram(name: "fsetfilecon", scope: !1857, file: !1857, line: 123, type: !1870, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15879 = !DILocalVariable(name: "fd", arg: 1, scope: !15878, file: !1857, line: 123, type: !5)
!15880 = !DILocation(line: 123, column: 18, scope: !15878)
!15881 = !DILocalVariable(name: "con", arg: 2, scope: !15878, file: !1857, line: 124, type: !1856)
!15882 = !DILocation(line: 124, column: 33, scope: !15878)
!15883 = !DILocation(line: 125, column: 5, scope: !15878)
!15884 = !DILocation(line: 125, column: 11, scope: !15878)
!15885 = !DILocation(line: 125, column: 22, scope: !15878)
!15886 = distinct !DISubprogram(name: "security_check_context", scope: !1857, file: !1857, line: 128, type: !1860, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15887 = !DILocalVariable(name: "con", arg: 1, scope: !15886, file: !1857, line: 128, type: !1856)
!15888 = !DILocation(line: 128, column: 44, scope: !15886)
!15889 = !DILocation(line: 129, column: 5, scope: !15886)
!15890 = !DILocation(line: 129, column: 11, scope: !15886)
!15891 = !DILocation(line: 129, column: 22, scope: !15886)
!15892 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1857, file: !1857, line: 131, type: !1860, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15893 = !DILocalVariable(name: "con", arg: 1, scope: !15892, file: !1857, line: 131, type: !1856)
!15894 = !DILocation(line: 131, column: 48, scope: !15892)
!15895 = !DILocation(line: 132, column: 5, scope: !15892)
!15896 = !DILocation(line: 132, column: 11, scope: !15892)
!15897 = !DILocation(line: 132, column: 22, scope: !15892)
!15898 = distinct !DISubprogram(name: "setexeccon", scope: !1857, file: !1857, line: 134, type: !1860, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15899 = !DILocalVariable(name: "con", arg: 1, scope: !15898, file: !1857, line: 134, type: !1856)
!15900 = !DILocation(line: 134, column: 32, scope: !15898)
!15901 = !DILocation(line: 135, column: 5, scope: !15898)
!15902 = !DILocation(line: 135, column: 11, scope: !15898)
!15903 = !DILocation(line: 135, column: 22, scope: !15898)
!15904 = distinct !DISubprogram(name: "security_compute_create", scope: !1857, file: !1857, line: 137, type: !1872, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15905 = !DILocalVariable(name: "scon", arg: 1, scope: !15904, file: !1857, line: 137, type: !1856)
!15906 = !DILocation(line: 137, column: 45, scope: !15904)
!15907 = !DILocalVariable(name: "tcon", arg: 2, scope: !15904, file: !1857, line: 138, type: !1856)
!15908 = !DILocation(line: 138, column: 45, scope: !15904)
!15909 = !DILocalVariable(name: "tclass", arg: 3, scope: !15904, file: !1857, line: 139, type: !1874)
!15910 = !DILocation(line: 139, column: 43, scope: !15904)
!15911 = !DILocalVariable(name: "newcon", arg: 4, scope: !15904, file: !1857, line: 140, type: !1855)
!15912 = !DILocation(line: 140, column: 46, scope: !15904)
!15913 = !DILocation(line: 141, column: 5, scope: !15904)
!15914 = !DILocation(line: 141, column: 11, scope: !15904)
!15915 = !DILocation(line: 141, column: 22, scope: !15904)
!15916 = distinct !DISubprogram(name: "string_to_security_class", scope: !1857, file: !1857, line: 143, type: !1875, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15917 = !DILocalVariable(name: "name", arg: 1, scope: !15916, file: !1857, line: 143, type: !112)
!15918 = !DILocation(line: 143, column: 39, scope: !15916)
!15919 = !DILocation(line: 144, column: 5, scope: !15916)
!15920 = !DILocation(line: 144, column: 11, scope: !15916)
!15921 = !DILocation(line: 144, column: 22, scope: !15916)
!15922 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1857, file: !1857, line: 146, type: !1877, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1850, retainedNodes: !140)
!15923 = !DILocalVariable(name: "path", arg: 1, scope: !15922, file: !1857, line: 146, type: !112)
!15924 = !DILocation(line: 146, column: 39, scope: !15922)
!15925 = !DILocalVariable(name: "prefix", arg: 2, scope: !15922, file: !1857, line: 147, type: !112)
!15926 = !DILocation(line: 147, column: 39, scope: !15922)
!15927 = !DILocation(line: 148, column: 5, scope: !15922)
!15928 = !DILocation(line: 148, column: 11, scope: !15922)
!15929 = !DILocation(line: 148, column: 22, scope: !15922)
!15930 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !15931, file: !15931, line: 66, type: !1882, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15931 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mohamad/clone/coreutils")
!15932 = !DILocalVariable(name: "st", arg: 1, scope: !15930, file: !15931, line: 66, type: !1884)
!15933 = !DILocation(line: 66, column: 39, scope: !15930)
!15934 = !DILocation(line: 69, column: 10, scope: !15930)
!15935 = !DILocation(line: 69, column: 38, scope: !15930)
!15936 = !{!3177, !3178, i64 80}
!15937 = !DILocation(line: 69, column: 3, scope: !15930)
!15938 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !15931, file: !15931, line: 79, type: !1882, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15939 = !DILocalVariable(name: "st", arg: 1, scope: !15938, file: !15931, line: 79, type: !1884)
!15940 = !DILocation(line: 79, column: 39, scope: !15938)
!15941 = !DILocation(line: 82, column: 10, scope: !15938)
!15942 = !DILocation(line: 82, column: 38, scope: !15938)
!15943 = !{!3177, !3178, i64 112}
!15944 = !DILocation(line: 82, column: 3, scope: !15938)
!15945 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !15931, file: !15931, line: 92, type: !1882, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15946 = !DILocalVariable(name: "st", arg: 1, scope: !15945, file: !15931, line: 92, type: !1884)
!15947 = !DILocation(line: 92, column: 39, scope: !15945)
!15948 = !DILocation(line: 95, column: 10, scope: !15945)
!15949 = !DILocation(line: 95, column: 38, scope: !15945)
!15950 = !{!3177, !3178, i64 96}
!15951 = !DILocation(line: 95, column: 3, scope: !15945)
!15952 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !15931, file: !15931, line: 105, type: !1882, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15953 = !DILocalVariable(name: "st", arg: 1, scope: !15952, file: !15931, line: 105, type: !1884)
!15954 = !DILocation(line: 105, column: 43, scope: !15952)
!15955 = !DILocation(line: 112, column: 3, scope: !15952)
!15956 = distinct !DISubprogram(name: "get_stat_atime", scope: !15931, file: !15931, line: 118, type: !1907, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15957 = !DILocalVariable(name: "st", arg: 1, scope: !15956, file: !15931, line: 118, type: !1884)
!15958 = !DILocation(line: 118, column: 36, scope: !15956)
!15959 = !DILocation(line: 121, column: 10, scope: !15956)
!15960 = !DILocation(line: 121, column: 3, scope: !15956)
!15961 = distinct !DISubprogram(name: "get_stat_ctime", scope: !15931, file: !15931, line: 132, type: !1907, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15962 = !DILocalVariable(name: "st", arg: 1, scope: !15961, file: !15931, line: 132, type: !1884)
!15963 = !DILocation(line: 132, column: 36, scope: !15961)
!15964 = !DILocation(line: 135, column: 10, scope: !15961)
!15965 = !DILocation(line: 135, column: 3, scope: !15961)
!15966 = distinct !DISubprogram(name: "get_stat_mtime", scope: !15931, file: !15931, line: 146, type: !1907, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15967 = !DILocalVariable(name: "st", arg: 1, scope: !15966, file: !15931, line: 146, type: !1884)
!15968 = !DILocation(line: 146, column: 36, scope: !15966)
!15969 = !DILocation(line: 149, column: 10, scope: !15966)
!15970 = !DILocation(line: 149, column: 3, scope: !15966)
!15971 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !15931, file: !15931, line: 161, type: !1907, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15972 = !DILocalVariable(name: "st", arg: 1, scope: !15971, file: !15931, line: 161, type: !1884)
!15973 = !DILocation(line: 161, column: 40, scope: !15971)
!15974 = !DILocalVariable(name: "t", scope: !15971, file: !15931, line: 163, type: !1900)
!15975 = !DILocation(line: 163, column: 19, scope: !15971)
!15976 = !DILocation(line: 183, column: 5, scope: !15971)
!15977 = !DILocation(line: 183, column: 12, scope: !15971)
!15978 = !{!3179, !3178, i64 0}
!15979 = !DILocation(line: 184, column: 5, scope: !15971)
!15980 = !DILocation(line: 184, column: 13, scope: !15971)
!15981 = !{!3179, !3178, i64 8}
!15982 = !DILocation(line: 202, column: 3, scope: !15971)
!15983 = distinct !DISubprogram(name: "stat_time_normalize", scope: !15931, file: !15931, line: 211, type: !1909, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1879, retainedNodes: !140)
!15984 = !DILocalVariable(name: "result", arg: 1, scope: !15983, file: !15931, line: 211, type: !5)
!15985 = !DILocation(line: 211, column: 26, scope: !15983)
!15986 = !DILocalVariable(name: "st", arg: 2, scope: !15983, file: !15931, line: 211, type: !1911)
!15987 = !DILocation(line: 211, column: 47, scope: !15983)
!15988 = !DILocation(line: 243, column: 10, scope: !15983)
!15989 = !DILocation(line: 243, column: 3, scope: !15983)
!15990 = distinct !DISubprogram(name: "statat", scope: !15991, file: !15991, line: 102, type: !1915, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1912, retainedNodes: !140)
!15991 = !DIFile(filename: "./lib/openat.h", directory: "/home/mohamad/clone/coreutils")
!15992 = !DILocalVariable(name: "fd", arg: 1, scope: !15990, file: !15991, line: 102, type: !5)
!15993 = !DILocation(line: 102, column: 13, scope: !15990)
!15994 = !DILocalVariable(name: "name", arg: 2, scope: !15990, file: !15991, line: 102, type: !112)
!15995 = !DILocation(line: 102, column: 29, scope: !15990)
!15996 = !DILocalVariable(name: "st", arg: 3, scope: !15990, file: !15991, line: 102, type: !1917)
!15997 = !DILocation(line: 102, column: 48, scope: !15990)
!15998 = !DILocation(line: 104, column: 19, scope: !15990)
!15999 = !DILocation(line: 104, column: 23, scope: !15990)
!16000 = !DILocation(line: 104, column: 29, scope: !15990)
!16001 = !DILocation(line: 104, column: 10, scope: !15990)
!16002 = !DILocation(line: 104, column: 3, scope: !15990)
!16003 = distinct !DISubprogram(name: "lstatat", scope: !15991, file: !15991, line: 108, type: !1915, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1912, retainedNodes: !140)
!16004 = !DILocalVariable(name: "fd", arg: 1, scope: !16003, file: !15991, line: 108, type: !5)
!16005 = !DILocation(line: 108, column: 14, scope: !16003)
!16006 = !DILocalVariable(name: "name", arg: 2, scope: !16003, file: !15991, line: 108, type: !112)
!16007 = !DILocation(line: 108, column: 30, scope: !16003)
!16008 = !DILocalVariable(name: "st", arg: 3, scope: !16003, file: !15991, line: 108, type: !1917)
!16009 = !DILocation(line: 108, column: 49, scope: !16003)
!16010 = !DILocation(line: 110, column: 19, scope: !16003)
!16011 = !DILocation(line: 110, column: 23, scope: !16003)
!16012 = !DILocation(line: 110, column: 29, scope: !16003)
!16013 = !DILocation(line: 110, column: 10, scope: !16003)
!16014 = !DILocation(line: 110, column: 3, scope: !16003)
!16015 = distinct !DISubprogram(name: "try_tempname_len", scope: !1119, file: !1119, line: 188, type: !1101, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16016 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16015, file: !1119, line: 188, type: !7)
!16017 = !DILocation(line: 188, column: 25, scope: !16015)
!16018 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16015, file: !1119, line: 188, type: !5)
!16019 = !DILocation(line: 188, column: 35, scope: !16015)
!16020 = !DILocalVariable(name: "args", arg: 3, scope: !16015, file: !1119, line: 188, type: !47)
!16021 = !DILocation(line: 188, column: 52, scope: !16015)
!16022 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16015, file: !1119, line: 189, type: !1103)
!16023 = !DILocation(line: 189, column: 25, scope: !16015)
!16024 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16015, file: !1119, line: 189, type: !52)
!16025 = !DILocation(line: 189, column: 59, scope: !16015)
!16026 = !DILocalVariable(name: "len", scope: !16015, file: !1119, line: 191, type: !52)
!16027 = !DILocation(line: 191, column: 10, scope: !16015)
!16028 = !DILocalVariable(name: "XXXXXX", scope: !16015, file: !1119, line: 192, type: !7)
!16029 = !DILocation(line: 192, column: 9, scope: !16015)
!16030 = !DILocalVariable(name: "count", scope: !16015, file: !1119, line: 193, type: !67)
!16031 = !DILocation(line: 193, column: 16, scope: !16015)
!16032 = !DILocalVariable(name: "fd", scope: !16015, file: !1119, line: 194, type: !5)
!16033 = !DILocation(line: 194, column: 7, scope: !16015)
!16034 = !DILocalVariable(name: "save_errno", scope: !16015, file: !1119, line: 195, type: !5)
!16035 = !DILocation(line: 195, column: 7, scope: !16015)
!16036 = !DILocation(line: 195, column: 20, scope: !16015)
!16037 = !DILocalVariable(name: "rand_src", scope: !16015, file: !1119, line: 196, type: !1104)
!16038 = !DILocation(line: 196, column: 26, scope: !16015)
!16039 = !DILocalVariable(name: "attempts", scope: !16015, file: !1119, line: 212, type: !67)
!16040 = !DILocation(line: 212, column: 16, scope: !16015)
!16041 = !DILocation(line: 215, column: 17, scope: !16015)
!16042 = !DILocation(line: 215, column: 9, scope: !16015)
!16043 = !DILocation(line: 215, column: 7, scope: !16015)
!16044 = !DILocation(line: 216, column: 7, scope: !16045)
!16045 = distinct !DILexicalBlock(scope: !16015, file: !1119, line: 216, column: 7)
!16046 = !DILocation(line: 216, column: 13, scope: !16045)
!16047 = !DILocation(line: 216, column: 28, scope: !16045)
!16048 = !DILocation(line: 216, column: 26, scope: !16045)
!16049 = !DILocation(line: 216, column: 11, scope: !16045)
!16050 = !DILocation(line: 217, column: 7, scope: !16045)
!16051 = !DILocation(line: 217, column: 29, scope: !16045)
!16052 = !DILocation(line: 217, column: 34, scope: !16045)
!16053 = !DILocation(line: 217, column: 40, scope: !16045)
!16054 = !DILocation(line: 217, column: 38, scope: !16045)
!16055 = !DILocation(line: 217, column: 55, scope: !16045)
!16056 = !DILocation(line: 217, column: 53, scope: !16045)
!16057 = !DILocation(line: 218, column: 28, scope: !16045)
!16058 = !DILocation(line: 217, column: 12, scope: !16045)
!16059 = !DILocation(line: 216, column: 7, scope: !16015)
!16060 = !DILocation(line: 220, column: 7, scope: !16061)
!16061 = distinct !DILexicalBlock(scope: !16045, file: !1119, line: 219, column: 5)
!16062 = !DILocation(line: 221, column: 7, scope: !16061)
!16063 = !DILocation(line: 225, column: 13, scope: !16015)
!16064 = !DILocation(line: 225, column: 18, scope: !16015)
!16065 = !DILocation(line: 225, column: 24, scope: !16015)
!16066 = !DILocation(line: 225, column: 22, scope: !16015)
!16067 = !DILocation(line: 225, column: 39, scope: !16015)
!16068 = !DILocation(line: 225, column: 37, scope: !16015)
!16069 = !DILocation(line: 225, column: 10, scope: !16015)
!16070 = !DILocation(line: 228, column: 37, scope: !16015)
!16071 = !DILocation(line: 228, column: 14, scope: !16015)
!16072 = !DILocation(line: 228, column: 12, scope: !16015)
!16073 = !DILocation(line: 229, column: 9, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16015, file: !1119, line: 229, column: 7)
!16075 = !DILocation(line: 229, column: 7, scope: !16015)
!16076 = !DILocation(line: 230, column: 5, scope: !16074)
!16077 = !DILocation(line: 232, column: 14, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16015, file: !1119, line: 232, column: 3)
!16079 = !DILocation(line: 232, column: 8, scope: !16078)
!16080 = !DILocation(line: 232, column: 19, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16078, file: !1119, line: 232, column: 3)
!16082 = !DILocation(line: 232, column: 27, scope: !16081)
!16083 = !DILocation(line: 232, column: 25, scope: !16081)
!16084 = !DILocation(line: 232, column: 3, scope: !16078)
!16085 = !DILocalVariable(name: "i", scope: !16086, file: !1119, line: 234, type: !52)
!16086 = distinct !DILexicalBlock(scope: !16081, file: !1119, line: 233, column: 5)
!16087 = !DILocation(line: 234, column: 14, scope: !16086)
!16088 = !DILocation(line: 236, column: 14, scope: !16089)
!16089 = distinct !DILexicalBlock(scope: !16086, file: !1119, line: 236, column: 7)
!16090 = !DILocation(line: 236, column: 12, scope: !16089)
!16091 = !DILocation(line: 236, column: 19, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16089, file: !1119, line: 236, column: 7)
!16093 = !DILocation(line: 236, column: 23, scope: !16092)
!16094 = !DILocation(line: 236, column: 21, scope: !16092)
!16095 = !DILocation(line: 236, column: 7, scope: !16089)
!16096 = !DILocation(line: 237, column: 45, scope: !16092)
!16097 = !DILocation(line: 237, column: 29, scope: !16092)
!16098 = !DILocation(line: 237, column: 21, scope: !16092)
!16099 = !DILocation(line: 237, column: 9, scope: !16092)
!16100 = !DILocation(line: 237, column: 16, scope: !16092)
!16101 = !DILocation(line: 237, column: 19, scope: !16092)
!16102 = !DILocation(line: 236, column: 38, scope: !16092)
!16103 = !DILocation(line: 236, column: 7, scope: !16092)
!16104 = distinct !{!16104, !16095, !16105}
!16105 = !DILocation(line: 237, column: 74, scope: !16089)
!16106 = !DILocation(line: 239, column: 12, scope: !16086)
!16107 = !DILocation(line: 239, column: 21, scope: !16086)
!16108 = !DILocation(line: 239, column: 27, scope: !16086)
!16109 = !DILocation(line: 239, column: 10, scope: !16086)
!16110 = !DILocation(line: 240, column: 11, scope: !16111)
!16111 = distinct !DILexicalBlock(scope: !16086, file: !1119, line: 240, column: 11)
!16112 = !DILocation(line: 240, column: 14, scope: !16111)
!16113 = !DILocation(line: 240, column: 11, scope: !16086)
!16114 = !DILocation(line: 242, column: 11, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16111, file: !1119, line: 241, column: 9)
!16116 = !DILocation(line: 243, column: 11, scope: !16115)
!16117 = !DILocation(line: 245, column: 16, scope: !16118)
!16118 = distinct !DILexicalBlock(scope: !16111, file: !1119, line: 245, column: 16)
!16119 = !DILocation(line: 245, column: 22, scope: !16118)
!16120 = !DILocation(line: 245, column: 16, scope: !16111)
!16121 = !DILocation(line: 247, column: 14, scope: !16122)
!16122 = distinct !DILexicalBlock(scope: !16118, file: !1119, line: 246, column: 9)
!16123 = !DILocation(line: 248, column: 11, scope: !16122)
!16124 = !DILocation(line: 250, column: 5, scope: !16086)
!16125 = !DILocation(line: 232, column: 37, scope: !16081)
!16126 = !DILocation(line: 232, column: 3, scope: !16081)
!16127 = distinct !{!16127, !16084, !16128}
!16128 = !DILocation(line: 250, column: 5, scope: !16078)
!16129 = !DILocation(line: 252, column: 21, scope: !16015)
!16130 = !DILocation(line: 252, column: 3, scope: !16015)
!16131 = !DILocation(line: 255, column: 3, scope: !16015)
!16132 = !DILocation(line: 256, column: 3, scope: !16015)
!16133 = !DILabel(scope: !16015, name: "done", file: !1119, line: 258)
!16134 = !DILocation(line: 258, column: 2, scope: !16015)
!16135 = !DILocalVariable(name: "saved_errno", scope: !16136, file: !1119, line: 260, type: !5)
!16136 = distinct !DILexicalBlock(scope: !16015, file: !1119, line: 259, column: 3)
!16137 = !DILocation(line: 260, column: 9, scope: !16136)
!16138 = !DILocation(line: 260, column: 23, scope: !16136)
!16139 = !DILocation(line: 261, column: 23, scope: !16136)
!16140 = !DILocation(line: 261, column: 5, scope: !16136)
!16141 = !DILocation(line: 262, column: 5, scope: !16136)
!16142 = !DILocation(line: 264, column: 10, scope: !16015)
!16143 = !DILocation(line: 264, column: 3, scope: !16015)
!16144 = !DILocation(line: 265, column: 1, scope: !16015)
!16145 = distinct !DISubprogram(name: "check_x_suffix", scope: !1119, file: !1119, line: 178, type: !1116, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16146 = !DILocalVariable(name: "s", arg: 1, scope: !16145, file: !1119, line: 178, type: !112)
!16147 = !DILocation(line: 178, column: 29, scope: !16145)
!16148 = !DILocalVariable(name: "len", arg: 2, scope: !16145, file: !1119, line: 178, type: !52)
!16149 = !DILocation(line: 178, column: 39, scope: !16145)
!16150 = !DILocation(line: 180, column: 10, scope: !16145)
!16151 = !DILocation(line: 180, column: 25, scope: !16145)
!16152 = !DILocation(line: 180, column: 17, scope: !16145)
!16153 = !DILocation(line: 180, column: 14, scope: !16145)
!16154 = !DILocation(line: 180, column: 3, scope: !16145)
!16155 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1119, file: !1119, line: 307, type: !1110, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16156 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16155, file: !1119, line: 307, type: !7)
!16157 = !DILocation(line: 307, column: 25, scope: !16155)
!16158 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16155, file: !1119, line: 307, type: !5)
!16159 = !DILocation(line: 307, column: 35, scope: !16155)
!16160 = !DILocalVariable(name: "flags", arg: 3, scope: !16155, file: !1119, line: 307, type: !5)
!16161 = !DILocation(line: 307, column: 50, scope: !16155)
!16162 = !DILocalVariable(name: "kind", arg: 4, scope: !16155, file: !1119, line: 307, type: !5)
!16163 = !DILocation(line: 307, column: 61, scope: !16155)
!16164 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16155, file: !1119, line: 308, type: !52)
!16165 = !DILocation(line: 308, column: 26, scope: !16155)
!16166 = !DILocalVariable(name: "tryfunc", scope: !16155, file: !1119, line: 310, type: !1103)
!16167 = !DILocation(line: 310, column: 9, scope: !16155)
!16168 = !DILocation(line: 312, column: 11, scope: !16155)
!16169 = !DILocation(line: 312, column: 3, scope: !16155)
!16170 = !DILocation(line: 315, column: 15, scope: !16171)
!16171 = distinct !DILexicalBlock(scope: !16155, file: !1119, line: 313, column: 5)
!16172 = !DILocation(line: 316, column: 7, scope: !16171)
!16173 = !DILocation(line: 319, column: 15, scope: !16171)
!16174 = !DILocation(line: 320, column: 7, scope: !16171)
!16175 = !DILocation(line: 323, column: 15, scope: !16171)
!16176 = !DILocation(line: 324, column: 7, scope: !16171)
!16177 = !DILocation(line: 327, column: 7, scope: !16171)
!16178 = !DILocation(line: 330, column: 28, scope: !16155)
!16179 = !DILocation(line: 330, column: 34, scope: !16155)
!16180 = !DILocation(line: 330, column: 45, scope: !16155)
!16181 = !DILocation(line: 330, column: 53, scope: !16155)
!16182 = !DILocation(line: 330, column: 62, scope: !16155)
!16183 = !DILocation(line: 330, column: 10, scope: !16155)
!16184 = !DILocation(line: 330, column: 3, scope: !16155)
!16185 = distinct !DISubprogram(name: "try_file", scope: !1119, file: !1119, line: 268, type: !543, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16186 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16185, file: !1119, line: 268, type: !7)
!16187 = !DILocation(line: 268, column: 17, scope: !16185)
!16188 = !DILocalVariable(name: "flags", arg: 2, scope: !16185, file: !1119, line: 268, type: !47)
!16189 = !DILocation(line: 268, column: 29, scope: !16185)
!16190 = !DILocalVariable(name: "openflags", scope: !16185, file: !1119, line: 270, type: !126)
!16191 = !DILocation(line: 270, column: 8, scope: !16185)
!16192 = !DILocation(line: 270, column: 20, scope: !16185)
!16193 = !DILocation(line: 271, column: 18, scope: !16185)
!16194 = !DILocation(line: 272, column: 20, scope: !16185)
!16195 = !DILocation(line: 272, column: 19, scope: !16185)
!16196 = !DILocation(line: 272, column: 30, scope: !16185)
!16197 = !DILocation(line: 273, column: 18, scope: !16185)
!16198 = !DILocation(line: 273, column: 27, scope: !16185)
!16199 = !DILocation(line: 273, column: 37, scope: !16185)
!16200 = !DILocation(line: 271, column: 10, scope: !16185)
!16201 = !DILocation(line: 271, column: 3, scope: !16185)
!16202 = distinct !DISubprogram(name: "try_dir", scope: !1119, file: !1119, line: 277, type: !543, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16203 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16202, file: !1119, line: 277, type: !7)
!16204 = !DILocation(line: 277, column: 16, scope: !16202)
!16205 = !DILocalVariable(name: "flags", arg: 2, scope: !16202, file: !1119, line: 277, type: !47)
!16206 = !DILocation(line: 277, column: 28, scope: !16202)
!16207 = !DILocation(line: 279, column: 19, scope: !16202)
!16208 = !DILocation(line: 279, column: 10, scope: !16202)
!16209 = !DILocation(line: 279, column: 3, scope: !16202)
!16210 = distinct !DISubprogram(name: "try_nocreate", scope: !1119, file: !1119, line: 283, type: !543, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !315, line: 46, size: 1152, elements: !16212)
!16212 = !{!16213, !16214, !16215, !16216, !16217, !16218, !16219, !16220, !16221, !16222, !16223, !16224, !16229, !16230, !16231}
!16213 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16211, file: !315, line: 48, baseType: !228, size: 64)
!16214 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16211, file: !315, line: 53, baseType: !225, size: 64, offset: 64)
!16215 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16211, file: !315, line: 61, baseType: !320, size: 64, offset: 128)
!16216 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16211, file: !315, line: 62, baseType: !130, size: 32, offset: 192)
!16217 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16211, file: !315, line: 64, baseType: !323, size: 32, offset: 224)
!16218 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16211, file: !315, line: 65, baseType: !325, size: 32, offset: 256)
!16219 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16211, file: !315, line: 67, baseType: !5, size: 32, offset: 288)
!16220 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16211, file: !315, line: 69, baseType: !228, size: 64, offset: 320)
!16221 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16211, file: !315, line: 74, baseType: !30, size: 64, offset: 384)
!16222 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16211, file: !315, line: 78, baseType: !330, size: 64, offset: 448)
!16223 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16211, file: !315, line: 80, baseType: !332, size: 64, offset: 512)
!16224 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16211, file: !315, line: 91, baseType: !16225, size: 128, offset: 576)
!16225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !335, line: 120, size: 128, elements: !16226)
!16226 = !{!16227, !16228}
!16227 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16225, file: !335, line: 122, baseType: !338, size: 64)
!16228 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16225, file: !335, line: 123, baseType: !340, size: 64, offset: 64)
!16229 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16211, file: !315, line: 92, baseType: !16225, size: 128, offset: 704)
!16230 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16211, file: !315, line: 93, baseType: !16225, size: 128, offset: 832)
!16231 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16211, file: !315, line: 106, baseType: !344, size: 192, offset: 960)
!16232 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16210, file: !1119, line: 283, type: !7)
!16233 = !DILocation(line: 283, column: 21, scope: !16210)
!16234 = !DILocalVariable(name: "flags", arg: 2, scope: !16210, file: !1119, line: 283, type: !47)
!16235 = !DILocation(line: 283, column: 33, scope: !16210)
!16236 = !DILocalVariable(name: "st", scope: !16210, file: !1119, line: 285, type: !16211)
!16237 = !DILocation(line: 285, column: 17, scope: !16210)
!16238 = !DILocation(line: 287, column: 7, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16210, file: !1119, line: 287, column: 7)
!16240 = !DILocation(line: 287, column: 41, scope: !16239)
!16241 = !DILocation(line: 287, column: 46, scope: !16239)
!16242 = !DILocation(line: 287, column: 49, scope: !16239)
!16243 = !DILocation(line: 287, column: 55, scope: !16239)
!16244 = !DILocation(line: 287, column: 7, scope: !16210)
!16245 = !DILocation(line: 288, column: 5, scope: !16239)
!16246 = !DILocation(line: 289, column: 10, scope: !16210)
!16247 = !DILocation(line: 289, column: 16, scope: !16210)
!16248 = !DILocation(line: 289, column: 3, scope: !16210)
!16249 = distinct !DISubprogram(name: "gen_tempname", scope: !1119, file: !1119, line: 334, type: !1112, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16250 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16249, file: !1119, line: 334, type: !7)
!16251 = !DILocation(line: 334, column: 23, scope: !16249)
!16252 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16249, file: !1119, line: 334, type: !5)
!16253 = !DILocation(line: 334, column: 33, scope: !16249)
!16254 = !DILocalVariable(name: "flags", arg: 3, scope: !16249, file: !1119, line: 334, type: !5)
!16255 = !DILocation(line: 334, column: 48, scope: !16249)
!16256 = !DILocalVariable(name: "kind", arg: 4, scope: !16249, file: !1119, line: 334, type: !5)
!16257 = !DILocation(line: 334, column: 59, scope: !16249)
!16258 = !DILocation(line: 336, column: 28, scope: !16249)
!16259 = !DILocation(line: 336, column: 34, scope: !16249)
!16260 = !DILocation(line: 336, column: 45, scope: !16249)
!16261 = !DILocation(line: 336, column: 52, scope: !16249)
!16262 = !DILocation(line: 336, column: 10, scope: !16249)
!16263 = !DILocation(line: 336, column: 3, scope: !16249)
!16264 = distinct !DISubprogram(name: "try_tempname", scope: !1119, file: !1119, line: 340, type: !1114, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1098, retainedNodes: !140)
!16265 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16264, file: !1119, line: 340, type: !7)
!16266 = !DILocation(line: 340, column: 23, scope: !16264)
!16267 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16264, file: !1119, line: 340, type: !5)
!16268 = !DILocation(line: 340, column: 33, scope: !16264)
!16269 = !DILocalVariable(name: "args", arg: 3, scope: !16264, file: !1119, line: 340, type: !47)
!16270 = !DILocation(line: 340, column: 50, scope: !16264)
!16271 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16264, file: !1119, line: 341, type: !1103)
!16272 = !DILocation(line: 341, column: 23, scope: !16264)
!16273 = !DILocation(line: 343, column: 28, scope: !16264)
!16274 = !DILocation(line: 343, column: 34, scope: !16264)
!16275 = !DILocation(line: 343, column: 45, scope: !16264)
!16276 = !DILocation(line: 343, column: 51, scope: !16264)
!16277 = !DILocation(line: 343, column: 10, scope: !16264)
!16278 = !DILocation(line: 343, column: 3, scope: !16264)
!16279 = distinct !DISubprogram(name: "fd_safer", scope: !16280, file: !16280, line: 37, type: !1828, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1939, retainedNodes: !140)
!16280 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!16281 = !DILocalVariable(name: "fd", arg: 1, scope: !16279, file: !16280, line: 37, type: !5)
!16282 = !DILocation(line: 37, column: 15, scope: !16279)
!16283 = !DILocation(line: 39, column: 23, scope: !16284)
!16284 = distinct !DILexicalBlock(scope: !16279, file: !16280, line: 39, column: 7)
!16285 = !DILocation(line: 39, column: 20, scope: !16284)
!16286 = !DILocation(line: 39, column: 26, scope: !16284)
!16287 = !DILocation(line: 39, column: 29, scope: !16284)
!16288 = !DILocation(line: 39, column: 32, scope: !16284)
!16289 = !DILocation(line: 39, column: 7, scope: !16279)
!16290 = !DILocalVariable(name: "f", scope: !16291, file: !16280, line: 41, type: !5)
!16291 = distinct !DILexicalBlock(scope: !16284, file: !16280, line: 40, column: 5)
!16292 = !DILocation(line: 41, column: 11, scope: !16291)
!16293 = !DILocation(line: 41, column: 26, scope: !16291)
!16294 = !DILocation(line: 41, column: 15, scope: !16291)
!16295 = !DILocalVariable(name: "e", scope: !16291, file: !16280, line: 42, type: !5)
!16296 = !DILocation(line: 42, column: 11, scope: !16291)
!16297 = !DILocation(line: 42, column: 15, scope: !16291)
!16298 = !DILocation(line: 43, column: 14, scope: !16291)
!16299 = !DILocation(line: 43, column: 7, scope: !16291)
!16300 = !DILocation(line: 44, column: 15, scope: !16291)
!16301 = !DILocation(line: 44, column: 7, scope: !16291)
!16302 = !DILocation(line: 44, column: 13, scope: !16291)
!16303 = !DILocation(line: 45, column: 12, scope: !16291)
!16304 = !DILocation(line: 45, column: 10, scope: !16291)
!16305 = !DILocation(line: 46, column: 5, scope: !16291)
!16306 = !DILocation(line: 48, column: 10, scope: !16279)
!16307 = !DILocation(line: 48, column: 3, scope: !16279)
!16308 = distinct !DISubprogram(name: "utimecmp", scope: !1123, file: !1123, line: 123, type: !1152, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1149, retainedNodes: !140)
!16309 = !DILocalVariable(name: "dst_name", arg: 1, scope: !16308, file: !1123, line: 123, type: !112)
!16310 = !DILocation(line: 123, column: 23, scope: !16308)
!16311 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !16308, file: !1123, line: 124, type: !1126)
!16312 = !DILocation(line: 124, column: 30, scope: !16308)
!16313 = !DILocalVariable(name: "src_stat", arg: 3, scope: !16308, file: !1123, line: 125, type: !1126)
!16314 = !DILocation(line: 125, column: 30, scope: !16308)
!16315 = !DILocalVariable(name: "options", arg: 4, scope: !16308, file: !1123, line: 126, type: !5)
!16316 = !DILocation(line: 126, column: 15, scope: !16308)
!16317 = !DILocation(line: 128, column: 32, scope: !16308)
!16318 = !DILocation(line: 128, column: 42, scope: !16308)
!16319 = !DILocation(line: 128, column: 52, scope: !16308)
!16320 = !DILocation(line: 128, column: 62, scope: !16308)
!16321 = !DILocation(line: 128, column: 10, scope: !16308)
!16322 = !DILocation(line: 128, column: 3, scope: !16308)
!16323 = !DILocalVariable(name: "dfd", arg: 1, scope: !1122, file: !1123, line: 132, type: !5)
!16324 = !DILocation(line: 132, column: 17, scope: !1122)
!16325 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1122, file: !1123, line: 132, type: !112)
!16326 = !DILocation(line: 132, column: 34, scope: !1122)
!16327 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1122, file: !1123, line: 133, type: !1126)
!16328 = !DILocation(line: 133, column: 32, scope: !1122)
!16329 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1122, file: !1123, line: 134, type: !1126)
!16330 = !DILocation(line: 134, column: 32, scope: !1122)
!16331 = !DILocalVariable(name: "options", arg: 5, scope: !1122, file: !1123, line: 135, type: !5)
!16332 = !DILocation(line: 135, column: 17, scope: !1122)
!16333 = !DILocalVariable(name: "dst_s", scope: !1122, file: !1123, line: 153, type: !1154)
!16334 = !DILocation(line: 153, column: 10, scope: !1122)
!16335 = !DILocation(line: 153, column: 18, scope: !1122)
!16336 = !DILocation(line: 153, column: 28, scope: !1122)
!16337 = !{!3177, !3178, i64 88}
!16338 = !DILocalVariable(name: "src_s", scope: !1122, file: !1123, line: 154, type: !1154)
!16339 = !DILocation(line: 154, column: 10, scope: !1122)
!16340 = !DILocation(line: 154, column: 18, scope: !1122)
!16341 = !DILocation(line: 154, column: 28, scope: !1122)
!16342 = !DILocalVariable(name: "dst_ns", scope: !1122, file: !1123, line: 155, type: !5)
!16343 = !DILocation(line: 155, column: 7, scope: !1122)
!16344 = !DILocation(line: 155, column: 35, scope: !1122)
!16345 = !DILocation(line: 155, column: 16, scope: !1122)
!16346 = !DILocalVariable(name: "src_ns", scope: !1122, file: !1123, line: 156, type: !5)
!16347 = !DILocation(line: 156, column: 7, scope: !1122)
!16348 = !DILocation(line: 156, column: 35, scope: !1122)
!16349 = !DILocation(line: 156, column: 16, scope: !1122)
!16350 = !DILocation(line: 158, column: 7, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !1122, file: !1123, line: 158, column: 7)
!16352 = !DILocation(line: 158, column: 15, scope: !16351)
!16353 = !DILocation(line: 158, column: 7, scope: !1122)
!16354 = !DILocalVariable(name: "dst_res", scope: !16355, file: !1123, line: 167, type: !1155)
!16355 = distinct !DILexicalBlock(scope: !16351, file: !1123, line: 159, column: 5)
!16356 = !DILocation(line: 167, column: 22, scope: !16355)
!16357 = !DILocalVariable(name: "tmp_dst_res", scope: !16355, file: !1123, line: 168, type: !1156)
!16358 = !DILocation(line: 168, column: 21, scope: !16355)
!16359 = !DILocalVariable(name: "res", scope: !16355, file: !1123, line: 171, type: !5)
!16360 = !DILocation(line: 171, column: 11, scope: !16355)
!16361 = !DILocation(line: 176, column: 11, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16355, file: !1123, line: 176, column: 11)
!16363 = !DILocation(line: 176, column: 20, scope: !16362)
!16364 = !DILocation(line: 176, column: 17, scope: !16362)
!16365 = !DILocation(line: 176, column: 26, scope: !16362)
!16366 = !DILocation(line: 176, column: 29, scope: !16362)
!16367 = !DILocation(line: 176, column: 39, scope: !16362)
!16368 = !DILocation(line: 176, column: 36, scope: !16362)
!16369 = !DILocation(line: 176, column: 11, scope: !16355)
!16370 = !DILocation(line: 177, column: 9, scope: !16362)
!16371 = !DILocation(line: 178, column: 11, scope: !16372)
!16372 = distinct !DILexicalBlock(scope: !16355, file: !1123, line: 178, column: 11)
!16373 = !DILocation(line: 178, column: 20, scope: !16372)
!16374 = !DILocation(line: 178, column: 26, scope: !16372)
!16375 = !DILocation(line: 178, column: 17, scope: !16372)
!16376 = !DILocation(line: 178, column: 11, scope: !16355)
!16377 = !DILocation(line: 179, column: 9, scope: !16372)
!16378 = !DILocation(line: 180, column: 11, scope: !16379)
!16379 = distinct !DILexicalBlock(scope: !16355, file: !1123, line: 180, column: 11)
!16380 = !DILocation(line: 180, column: 20, scope: !16379)
!16381 = !DILocation(line: 180, column: 26, scope: !16379)
!16382 = !DILocation(line: 180, column: 17, scope: !16379)
!16383 = !DILocation(line: 180, column: 11, scope: !16355)
!16384 = !DILocation(line: 181, column: 9, scope: !16379)
!16385 = !DILocation(line: 185, column: 13, scope: !16386)
!16386 = distinct !DILexicalBlock(scope: !16355, file: !1123, line: 185, column: 11)
!16387 = !DILocation(line: 185, column: 11, scope: !16355)
!16388 = !DILocation(line: 186, column: 14, scope: !16386)
!16389 = !DILocation(line: 186, column: 12, scope: !16386)
!16390 = !DILocation(line: 186, column: 9, scope: !16386)
!16391 = !DILocation(line: 187, column: 11, scope: !16392)
!16392 = distinct !DILexicalBlock(scope: !16355, file: !1123, line: 187, column: 11)
!16393 = !DILocation(line: 187, column: 11, scope: !16355)
!16394 = !DILocation(line: 189, column: 17, scope: !16395)
!16395 = distinct !DILexicalBlock(scope: !16396, file: !1123, line: 189, column: 15)
!16396 = distinct !DILexicalBlock(scope: !16392, file: !1123, line: 188, column: 9)
!16397 = !DILocation(line: 189, column: 15, scope: !16396)
!16398 = !DILocation(line: 191, column: 29, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16395, file: !1123, line: 190, column: 13)
!16400 = !DILocation(line: 191, column: 27, scope: !16399)
!16401 = !DILocation(line: 192, column: 20, scope: !16402)
!16402 = distinct !DILexicalBlock(scope: !16399, file: !1123, line: 192, column: 19)
!16403 = !DILocation(line: 192, column: 19, scope: !16399)
!16404 = !DILocation(line: 193, column: 17, scope: !16402)
!16405 = !DILocation(line: 194, column: 15, scope: !16399)
!16406 = !DILocation(line: 194, column: 28, scope: !16399)
!16407 = !DILocation(line: 194, column: 39, scope: !16399)
!16408 = !{!16409, !2981, i64 8}
!16409 = !{!"fs_res", !3178, i64 0, !2981, i64 8, !3105, i64 12}
!16410 = !DILocation(line: 195, column: 15, scope: !16399)
!16411 = !DILocation(line: 195, column: 28, scope: !16399)
!16412 = !DILocation(line: 195, column: 34, scope: !16399)
!16413 = !{!16409, !3105, i64 12}
!16414 = !DILocation(line: 196, column: 13, scope: !16399)
!16415 = !DILocation(line: 197, column: 30, scope: !16396)
!16416 = !DILocation(line: 197, column: 40, scope: !16396)
!16417 = !DILocation(line: 197, column: 11, scope: !16396)
!16418 = !DILocation(line: 197, column: 24, scope: !16396)
!16419 = !DILocation(line: 197, column: 28, scope: !16396)
!16420 = !{!16409, !3178, i64 0}
!16421 = !DILocation(line: 198, column: 34, scope: !16396)
!16422 = !DILocation(line: 198, column: 38, scope: !16396)
!16423 = !DILocation(line: 198, column: 21, scope: !16396)
!16424 = !DILocation(line: 198, column: 19, scope: !16396)
!16425 = !DILocation(line: 199, column: 17, scope: !16426)
!16426 = distinct !DILexicalBlock(scope: !16396, file: !1123, line: 199, column: 15)
!16427 = !DILocation(line: 199, column: 15, scope: !16396)
!16428 = !DILocation(line: 200, column: 13, scope: !16426)
!16429 = !DILocation(line: 202, column: 15, scope: !16430)
!16430 = distinct !DILexicalBlock(scope: !16396, file: !1123, line: 202, column: 15)
!16431 = !DILocation(line: 202, column: 26, scope: !16430)
!16432 = !DILocation(line: 202, column: 23, scope: !16430)
!16433 = !DILocation(line: 202, column: 15, scope: !16396)
!16434 = !DILocation(line: 206, column: 27, scope: !16435)
!16435 = distinct !DILexicalBlock(scope: !16430, file: !1123, line: 203, column: 13)
!16436 = !DILocation(line: 207, column: 13, scope: !16435)
!16437 = !DILocation(line: 208, column: 9, scope: !16396)
!16438 = !DILocation(line: 210, column: 9, scope: !16392)
!16439 = !DILabel(scope: !16440, name: "low_memory", file: !1123, line: 211)
!16440 = distinct !DILexicalBlock(scope: !16392, file: !1123, line: 210, column: 9)
!16441 = !DILocation(line: 211, column: 9, scope: !16440)
!16442 = !DILocation(line: 212, column: 15, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16440, file: !1123, line: 212, column: 15)
!16444 = !DILocation(line: 212, column: 15, scope: !16440)
!16445 = !DILocation(line: 214, column: 33, scope: !16446)
!16446 = distinct !DILexicalBlock(scope: !16443, file: !1123, line: 213, column: 13)
!16447 = !DILocation(line: 214, column: 43, scope: !16446)
!16448 = !DILocation(line: 214, column: 27, scope: !16446)
!16449 = !DILocation(line: 214, column: 31, scope: !16446)
!16450 = !DILocation(line: 215, column: 38, scope: !16446)
!16451 = !DILocation(line: 215, column: 42, scope: !16446)
!16452 = !DILocation(line: 215, column: 25, scope: !16446)
!16453 = !DILocation(line: 215, column: 23, scope: !16446)
!16454 = !DILocation(line: 216, column: 13, scope: !16446)
!16455 = !DILocation(line: 217, column: 16, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16440, file: !1123, line: 217, column: 15)
!16457 = !DILocation(line: 217, column: 15, scope: !16440)
!16458 = !DILocation(line: 219, column: 23, scope: !16459)
!16459 = distinct !DILexicalBlock(scope: !16456, file: !1123, line: 218, column: 13)
!16460 = !DILocation(line: 220, column: 15, scope: !16459)
!16461 = !DILocation(line: 220, column: 24, scope: !16459)
!16462 = !DILocation(line: 220, column: 35, scope: !16459)
!16463 = !DILocation(line: 221, column: 15, scope: !16459)
!16464 = !DILocation(line: 221, column: 24, scope: !16459)
!16465 = !DILocation(line: 221, column: 30, scope: !16459)
!16466 = !DILocation(line: 222, column: 13, scope: !16459)
!16467 = !DILocation(line: 225, column: 13, scope: !16355)
!16468 = !DILocation(line: 225, column: 22, scope: !16355)
!16469 = !DILocation(line: 225, column: 11, scope: !16355)
!16470 = !DILocation(line: 257, column: 13, scope: !16471)
!16471 = distinct !DILexicalBlock(scope: !16355, file: !1123, line: 257, column: 11)
!16472 = !DILocation(line: 257, column: 22, scope: !16471)
!16473 = !DILocation(line: 257, column: 11, scope: !16355)
!16474 = !DILocalVariable(name: "dst_a_s", scope: !16475, file: !1123, line: 262, type: !1154)
!16475 = distinct !DILexicalBlock(scope: !16471, file: !1123, line: 258, column: 9)
!16476 = !DILocation(line: 262, column: 18, scope: !16475)
!16477 = !DILocation(line: 262, column: 28, scope: !16475)
!16478 = !DILocation(line: 262, column: 38, scope: !16475)
!16479 = !{!3177, !3178, i64 72}
!16480 = !DILocalVariable(name: "dst_c_s", scope: !16475, file: !1123, line: 263, type: !1154)
!16481 = !DILocation(line: 263, column: 18, scope: !16475)
!16482 = !DILocation(line: 263, column: 28, scope: !16475)
!16483 = !DILocation(line: 263, column: 38, scope: !16475)
!16484 = !{!3177, !3178, i64 104}
!16485 = !DILocalVariable(name: "dst_m_s", scope: !16475, file: !1123, line: 264, type: !1154)
!16486 = !DILocation(line: 264, column: 18, scope: !16475)
!16487 = !DILocation(line: 264, column: 28, scope: !16475)
!16488 = !DILocalVariable(name: "dst_a_ns", scope: !16475, file: !1123, line: 265, type: !5)
!16489 = !DILocation(line: 265, column: 15, scope: !16475)
!16490 = !DILocation(line: 265, column: 45, scope: !16475)
!16491 = !DILocation(line: 265, column: 26, scope: !16475)
!16492 = !DILocalVariable(name: "dst_c_ns", scope: !16475, file: !1123, line: 266, type: !5)
!16493 = !DILocation(line: 266, column: 15, scope: !16475)
!16494 = !DILocation(line: 266, column: 45, scope: !16475)
!16495 = !DILocation(line: 266, column: 26, scope: !16475)
!16496 = !DILocalVariable(name: "dst_m_ns", scope: !16475, file: !1123, line: 267, type: !5)
!16497 = !DILocation(line: 267, column: 15, scope: !16475)
!16498 = !DILocation(line: 267, column: 26, scope: !16475)
!16499 = !DILocalVariable(name: "odd_second", scope: !16500, file: !1123, line: 276, type: !117)
!16500 = distinct !DILexicalBlock(scope: !16475, file: !1123, line: 275, column: 11)
!16501 = !DILocation(line: 276, column: 18, scope: !16500)
!16502 = !DILocation(line: 276, column: 32, scope: !16500)
!16503 = !DILocation(line: 276, column: 42, scope: !16500)
!16504 = !DILocation(line: 276, column: 40, scope: !16500)
!16505 = !DILocation(line: 276, column: 52, scope: !16500)
!16506 = !DILocation(line: 276, column: 50, scope: !16500)
!16507 = !DILocation(line: 276, column: 61, scope: !16500)
!16508 = !DILocation(line: 276, column: 31, scope: !16500)
!16509 = !DILocalVariable(name: "a", scope: !16510, file: !1123, line: 285, type: !5)
!16510 = distinct !DILexicalBlock(scope: !16511, file: !1123, line: 284, column: 15)
!16511 = distinct !DILexicalBlock(scope: !16500, file: !1123, line: 278, column: 17)
!16512 = !DILocation(line: 285, column: 21, scope: !16510)
!16513 = !DILocation(line: 285, column: 25, scope: !16510)
!16514 = !DILocalVariable(name: "c", scope: !16510, file: !1123, line: 286, type: !5)
!16515 = !DILocation(line: 286, column: 21, scope: !16510)
!16516 = !DILocation(line: 286, column: 25, scope: !16510)
!16517 = !DILocalVariable(name: "m", scope: !16510, file: !1123, line: 287, type: !5)
!16518 = !DILocation(line: 287, column: 21, scope: !16510)
!16519 = !DILocation(line: 287, column: 25, scope: !16510)
!16520 = !DILocalVariable(name: "SR10", scope: !16510, file: !1123, line: 291, type: !5)
!16521 = !DILocation(line: 291, column: 21, scope: !16510)
!16522 = !DILocation(line: 291, column: 54, scope: !16510)
!16523 = !DILocation(line: 293, column: 22, scope: !16524)
!16524 = distinct !DILexicalBlock(scope: !16510, file: !1123, line: 293, column: 21)
!16525 = !DILocation(line: 293, column: 26, scope: !16524)
!16526 = !DILocation(line: 293, column: 24, scope: !16524)
!16527 = !DILocation(line: 293, column: 33, scope: !16524)
!16528 = !DILocation(line: 293, column: 37, scope: !16524)
!16529 = !DILocation(line: 293, column: 35, scope: !16524)
!16530 = !DILocation(line: 293, column: 31, scope: !16524)
!16531 = !DILocation(line: 293, column: 44, scope: !16524)
!16532 = !DILocation(line: 293, column: 48, scope: !16524)
!16533 = !DILocation(line: 293, column: 46, scope: !16524)
!16534 = !DILocation(line: 293, column: 42, scope: !16524)
!16535 = !DILocation(line: 293, column: 54, scope: !16524)
!16536 = !DILocation(line: 293, column: 21, scope: !16510)
!16537 = !DILocation(line: 294, column: 23, scope: !16524)
!16538 = !DILocation(line: 294, column: 19, scope: !16524)
!16539 = !DILocation(line: 296, column: 30, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16524, file: !1123, line: 296, column: 19)
!16541 = !DILocation(line: 296, column: 28, scope: !16540)
!16542 = !DILocation(line: 296, column: 41, scope: !16540)
!16543 = !DILocation(line: 296, column: 38, scope: !16540)
!16544 = !DILocation(line: 296, column: 52, scope: !16540)
!16545 = !DILocation(line: 296, column: 49, scope: !16540)
!16546 = !DILocation(line: 296, column: 63, scope: !16540)
!16547 = !DILocation(line: 296, column: 60, scope: !16540)
!16548 = !DILocation(line: 296, column: 24, scope: !16540)
!16549 = !DILocation(line: 297, column: 25, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16540, file: !1123, line: 296, column: 19)
!16551 = !DILocation(line: 297, column: 31, scope: !16550)
!16552 = !DILocation(line: 297, column: 40, scope: !16550)
!16553 = !DILocation(line: 297, column: 29, scope: !16550)
!16554 = !DILocation(line: 298, column: 25, scope: !16550)
!16555 = !DILocation(line: 298, column: 29, scope: !16550)
!16556 = !DILocation(line: 298, column: 31, scope: !16550)
!16557 = !DILocation(line: 298, column: 38, scope: !16550)
!16558 = !DILocation(line: 298, column: 40, scope: !16550)
!16559 = !DILocation(line: 298, column: 36, scope: !16550)
!16560 = !DILocation(line: 298, column: 47, scope: !16550)
!16561 = !DILocation(line: 298, column: 49, scope: !16550)
!16562 = !DILocation(line: 298, column: 45, scope: !16550)
!16563 = !DILocation(line: 298, column: 55, scope: !16550)
!16564 = !DILocation(line: 0, scope: !16550)
!16565 = !DILocation(line: 296, column: 19, scope: !16540)
!16566 = !DILocation(line: 300, column: 25, scope: !16567)
!16567 = distinct !DILexicalBlock(scope: !16550, file: !1123, line: 300, column: 25)
!16568 = !DILocation(line: 300, column: 29, scope: !16567)
!16569 = !DILocation(line: 300, column: 25, scope: !16550)
!16570 = !DILocation(line: 302, column: 31, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16572, file: !1123, line: 302, column: 29)
!16572 = distinct !DILexicalBlock(scope: !16567, file: !1123, line: 301, column: 23)
!16573 = !DILocation(line: 302, column: 29, scope: !16572)
!16574 = !DILocation(line: 303, column: 31, scope: !16571)
!16575 = !DILocation(line: 303, column: 27, scope: !16571)
!16576 = !DILocation(line: 304, column: 25, scope: !16572)
!16577 = !DILocation(line: 300, column: 32, scope: !16567)
!16578 = !DILocation(line: 299, column: 28, scope: !16550)
!16579 = !DILocation(line: 299, column: 37, scope: !16550)
!16580 = !DILocation(line: 299, column: 46, scope: !16550)
!16581 = !DILocation(line: 299, column: 55, scope: !16550)
!16582 = !DILocation(line: 296, column: 19, scope: !16550)
!16583 = distinct !{!16583, !16565, !16584}
!16584 = !DILocation(line: 305, column: 23, scope: !16540)
!16585 = !DILocation(line: 308, column: 35, scope: !16500)
!16586 = !DILocation(line: 308, column: 13, scope: !16500)
!16587 = !DILocation(line: 308, column: 22, scope: !16500)
!16588 = !DILocation(line: 308, column: 33, scope: !16500)
!16589 = !DILocation(line: 311, column: 36, scope: !16590)
!16590 = distinct !DILexicalBlock(scope: !16475, file: !1123, line: 311, column: 15)
!16591 = !DILocation(line: 311, column: 34, scope: !16590)
!16592 = !DILocation(line: 311, column: 15, scope: !16475)
!16593 = !DILocalVariable(name: "timespec", scope: !16594, file: !1123, line: 313, type: !1161)
!16594 = distinct !DILexicalBlock(scope: !16590, file: !1123, line: 312, column: 13)
!16595 = !DILocation(line: 313, column: 31, scope: !16594)
!16596 = !DILocalVariable(name: "dst_status", scope: !16594, file: !1123, line: 314, type: !1128)
!16597 = !DILocation(line: 314, column: 27, scope: !16594)
!16598 = !DILocation(line: 318, column: 25, scope: !16594)
!16599 = !DILocation(line: 318, column: 32, scope: !16594)
!16600 = !DILocation(line: 318, column: 22, scope: !16594)
!16601 = !DILocalVariable(name: "s", scope: !16602, file: !1123, line: 324, type: !1154)
!16602 = distinct !DILexicalBlock(scope: !16594, file: !1123, line: 323, column: 15)
!16603 = !DILocation(line: 324, column: 24, scope: !16602)
!16604 = !DILocation(line: 324, column: 28, scope: !16602)
!16605 = !DILocation(line: 324, column: 39, scope: !16602)
!16606 = !DILocation(line: 324, column: 43, scope: !16602)
!16607 = !DILocation(line: 324, column: 36, scope: !16602)
!16608 = !DILocation(line: 324, column: 34, scope: !16602)
!16609 = !DILocation(line: 325, column: 21, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16602, file: !1123, line: 325, column: 21)
!16611 = !DILocation(line: 325, column: 29, scope: !16610)
!16612 = !DILocation(line: 325, column: 27, scope: !16610)
!16613 = !DILocation(line: 325, column: 35, scope: !16610)
!16614 = !DILocation(line: 325, column: 39, scope: !16610)
!16615 = !DILocation(line: 325, column: 48, scope: !16610)
!16616 = !DILocation(line: 325, column: 45, scope: !16610)
!16617 = !DILocation(line: 325, column: 54, scope: !16610)
!16618 = !DILocation(line: 325, column: 57, scope: !16610)
!16619 = !DILocation(line: 325, column: 67, scope: !16610)
!16620 = !DILocation(line: 325, column: 64, scope: !16610)
!16621 = !DILocation(line: 325, column: 21, scope: !16602)
!16622 = !DILocation(line: 326, column: 19, scope: !16610)
!16623 = !DILocation(line: 327, column: 21, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16602, file: !1123, line: 327, column: 21)
!16625 = !DILocation(line: 327, column: 29, scope: !16624)
!16626 = !DILocation(line: 327, column: 27, scope: !16624)
!16627 = !DILocation(line: 328, column: 21, scope: !16624)
!16628 = !DILocation(line: 328, column: 25, scope: !16624)
!16629 = !DILocation(line: 328, column: 34, scope: !16624)
!16630 = !DILocation(line: 328, column: 31, scope: !16624)
!16631 = !DILocation(line: 328, column: 36, scope: !16624)
!16632 = !DILocation(line: 328, column: 39, scope: !16624)
!16633 = !DILocation(line: 328, column: 48, scope: !16624)
!16634 = !DILocation(line: 328, column: 57, scope: !16624)
!16635 = !DILocation(line: 328, column: 66, scope: !16624)
!16636 = !DILocation(line: 328, column: 64, scope: !16624)
!16637 = !DILocation(line: 328, column: 55, scope: !16624)
!16638 = !DILocation(line: 328, column: 46, scope: !16624)
!16639 = !DILocation(line: 327, column: 21, scope: !16602)
!16640 = !DILocation(line: 329, column: 19, scope: !16624)
!16641 = !DILocation(line: 338, column: 36, scope: !16594)
!16642 = !DILocation(line: 338, column: 15, scope: !16594)
!16643 = !DILocation(line: 338, column: 27, scope: !16594)
!16644 = !DILocation(line: 338, column: 34, scope: !16594)
!16645 = !DILocation(line: 339, column: 37, scope: !16594)
!16646 = !DILocation(line: 339, column: 15, scope: !16594)
!16647 = !DILocation(line: 339, column: 27, scope: !16594)
!16648 = !DILocation(line: 339, column: 35, scope: !16594)
!16649 = !DILocation(line: 340, column: 36, scope: !16594)
!16650 = !DILocation(line: 340, column: 47, scope: !16594)
!16651 = !DILocation(line: 340, column: 51, scope: !16594)
!16652 = !DILocation(line: 340, column: 46, scope: !16594)
!16653 = !DILocation(line: 340, column: 44, scope: !16594)
!16654 = !DILocation(line: 340, column: 15, scope: !16594)
!16655 = !DILocation(line: 340, column: 27, scope: !16594)
!16656 = !DILocation(line: 340, column: 34, scope: !16594)
!16657 = !DILocation(line: 341, column: 37, scope: !16594)
!16658 = !DILocation(line: 341, column: 48, scope: !16594)
!16659 = !DILocation(line: 341, column: 52, scope: !16594)
!16660 = !DILocation(line: 341, column: 46, scope: !16594)
!16661 = !DILocation(line: 341, column: 15, scope: !16594)
!16662 = !DILocation(line: 341, column: 27, scope: !16594)
!16663 = !DILocation(line: 341, column: 35, scope: !16594)
!16664 = !DILocation(line: 343, column: 30, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16594, file: !1123, line: 343, column: 19)
!16666 = !DILocation(line: 343, column: 35, scope: !16665)
!16667 = !DILocation(line: 343, column: 45, scope: !16665)
!16668 = !DILocation(line: 343, column: 19, scope: !16665)
!16669 = !DILocation(line: 343, column: 19, scope: !16594)
!16670 = !DILocation(line: 344, column: 17, scope: !16665)
!16671 = !DILocalVariable(name: "stat_result", scope: !16672, file: !1123, line: 348, type: !5)
!16672 = distinct !DILexicalBlock(scope: !16594, file: !1123, line: 347, column: 15)
!16673 = !DILocation(line: 348, column: 21, scope: !16672)
!16674 = !DILocation(line: 349, column: 30, scope: !16672)
!16675 = !DILocation(line: 349, column: 35, scope: !16672)
!16676 = !DILocation(line: 349, column: 21, scope: !16672)
!16677 = !DILocation(line: 351, column: 21, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16672, file: !1123, line: 351, column: 21)
!16679 = !DILocation(line: 352, column: 35, scope: !16678)
!16680 = !DILocation(line: 352, column: 46, scope: !16678)
!16681 = !DILocation(line: 352, column: 44, scope: !16678)
!16682 = !DILocation(line: 352, column: 21, scope: !16678)
!16683 = !DILocation(line: 353, column: 24, scope: !16678)
!16684 = !DILocation(line: 353, column: 58, scope: !16678)
!16685 = !DILocation(line: 353, column: 56, scope: !16678)
!16686 = !DILocation(line: 353, column: 21, scope: !16678)
!16687 = !DILocation(line: 351, column: 21, scope: !16672)
!16688 = !DILocation(line: 357, column: 42, scope: !16689)
!16689 = distinct !DILexicalBlock(scope: !16678, file: !1123, line: 354, column: 19)
!16690 = !DILocation(line: 357, column: 21, scope: !16689)
!16691 = !DILocation(line: 357, column: 33, scope: !16689)
!16692 = !DILocation(line: 357, column: 40, scope: !16689)
!16693 = !DILocation(line: 358, column: 43, scope: !16689)
!16694 = !DILocation(line: 358, column: 21, scope: !16689)
!16695 = !DILocation(line: 358, column: 33, scope: !16689)
!16696 = !DILocation(line: 358, column: 41, scope: !16689)
!16697 = !DILocation(line: 359, column: 32, scope: !16689)
!16698 = !DILocation(line: 359, column: 37, scope: !16689)
!16699 = !DILocation(line: 359, column: 47, scope: !16689)
!16700 = !DILocation(line: 359, column: 21, scope: !16689)
!16701 = !DILocation(line: 360, column: 19, scope: !16689)
!16702 = !DILocation(line: 362, column: 21, scope: !16703)
!16703 = distinct !DILexicalBlock(scope: !16672, file: !1123, line: 362, column: 21)
!16704 = !DILocation(line: 362, column: 33, scope: !16703)
!16705 = !DILocation(line: 362, column: 21, scope: !16672)
!16706 = !DILocation(line: 363, column: 19, scope: !16703)
!16707 = !DILocalVariable(name: "old_res", scope: !16708, file: !1123, line: 369, type: !5)
!16708 = distinct !DILexicalBlock(scope: !16594, file: !1123, line: 368, column: 15)
!16709 = !DILocation(line: 369, column: 21, scope: !16708)
!16710 = !DILocation(line: 369, column: 31, scope: !16708)
!16711 = !DILocalVariable(name: "a", scope: !16708, file: !1123, line: 370, type: !5)
!16712 = !DILocation(line: 370, column: 21, scope: !16708)
!16713 = !DILocation(line: 370, column: 48, scope: !16708)
!16714 = !DILocation(line: 370, column: 57, scope: !16708)
!16715 = !DILocation(line: 370, column: 34, scope: !16708)
!16716 = !DILocation(line: 371, column: 28, scope: !16708)
!16717 = !DILocation(line: 371, column: 26, scope: !16708)
!16718 = !DILocation(line: 370, column: 25, scope: !16708)
!16719 = !DILocation(line: 373, column: 21, scope: !16708)
!16720 = !DILocation(line: 375, column: 27, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16708, file: !1123, line: 375, column: 17)
!16722 = !DILocation(line: 375, column: 24, scope: !16721)
!16723 = !DILocation(line: 375, column: 22, scope: !16721)
!16724 = !DILocation(line: 375, column: 32, scope: !16725)
!16725 = distinct !DILexicalBlock(scope: !16721, file: !1123, line: 375, column: 17)
!16726 = !DILocation(line: 375, column: 34, scope: !16725)
!16727 = !DILocation(line: 375, column: 39, scope: !16725)
!16728 = !DILocation(line: 375, column: 17, scope: !16721)
!16729 = !DILocation(line: 377, column: 25, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16731, file: !1123, line: 377, column: 25)
!16731 = distinct !DILexicalBlock(scope: !16725, file: !1123, line: 376, column: 19)
!16732 = !DILocation(line: 377, column: 29, scope: !16730)
!16733 = !DILocation(line: 377, column: 25, scope: !16731)
!16734 = !DILocation(line: 379, column: 29, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16730, file: !1123, line: 378, column: 23)
!16736 = !DILocation(line: 380, column: 25, scope: !16735)
!16737 = !DILocation(line: 382, column: 25, scope: !16731)
!16738 = !DILocation(line: 383, column: 25, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16731, file: !1123, line: 383, column: 25)
!16740 = !DILocation(line: 383, column: 32, scope: !16739)
!16741 = !DILocation(line: 383, column: 29, scope: !16739)
!16742 = !DILocation(line: 383, column: 25, scope: !16731)
!16743 = !DILocation(line: 384, column: 23, scope: !16739)
!16744 = !DILocation(line: 385, column: 19, scope: !16731)
!16745 = !DILocation(line: 375, column: 47, scope: !16725)
!16746 = !DILocation(line: 375, column: 17, scope: !16725)
!16747 = distinct !{!16747, !16728, !16748}
!16748 = !DILocation(line: 385, column: 19, scope: !16721)
!16749 = !DILocation(line: 387, column: 13, scope: !16594)
!16750 = !DILocation(line: 389, column: 33, scope: !16475)
!16751 = !DILocation(line: 389, column: 11, scope: !16475)
!16752 = !DILocation(line: 389, column: 20, scope: !16475)
!16753 = !DILocation(line: 389, column: 31, scope: !16475)
!16754 = !DILocation(line: 390, column: 11, scope: !16475)
!16755 = !DILocation(line: 390, column: 20, scope: !16475)
!16756 = !DILocation(line: 390, column: 26, scope: !16475)
!16757 = !DILocation(line: 391, column: 9, scope: !16475)
!16758 = !DILocation(line: 394, column: 19, scope: !16355)
!16759 = !DILocation(line: 394, column: 23, scope: !16355)
!16760 = !DILocation(line: 394, column: 16, scope: !16355)
!16761 = !DILocation(line: 394, column: 13, scope: !16355)
!16762 = !DILocation(line: 395, column: 17, scope: !16355)
!16763 = !DILocation(line: 395, column: 26, scope: !16355)
!16764 = !DILocation(line: 395, column: 24, scope: !16355)
!16765 = !DILocation(line: 395, column: 14, scope: !16355)
!16766 = !DILocation(line: 396, column: 5, scope: !16355)
!16767 = !DILocation(line: 399, column: 11, scope: !1122)
!16768 = !DILocation(line: 399, column: 19, scope: !1122)
!16769 = !DILocation(line: 399, column: 17, scope: !1122)
!16770 = !DILocation(line: 400, column: 13, scope: !1122)
!16771 = !DILocation(line: 400, column: 21, scope: !1122)
!16772 = !DILocation(line: 400, column: 19, scope: !1122)
!16773 = !DILocation(line: 401, column: 13, scope: !1122)
!16774 = !DILocation(line: 401, column: 22, scope: !1122)
!16775 = !DILocation(line: 401, column: 20, scope: !1122)
!16776 = !DILocation(line: 402, column: 13, scope: !1122)
!16777 = !DILocation(line: 402, column: 22, scope: !1122)
!16778 = !DILocation(line: 402, column: 20, scope: !1122)
!16779 = !DILocation(line: 399, column: 3, scope: !1122)
!16780 = !DILocation(line: 403, column: 1, scope: !1122)
!16781 = distinct !DISubprogram(name: "dev_info_hash", scope: !1123, file: !1123, line: 85, type: !520, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1149, retainedNodes: !140)
!16782 = !DILocalVariable(name: "x", arg: 1, scope: !16781, file: !1123, line: 85, type: !428)
!16783 = !DILocation(line: 85, column: 28, scope: !16781)
!16784 = !DILocalVariable(name: "table_size", arg: 2, scope: !16781, file: !1123, line: 85, type: !52)
!16785 = !DILocation(line: 85, column: 38, scope: !16781)
!16786 = !DILocalVariable(name: "p", scope: !16781, file: !1123, line: 87, type: !1162)
!16787 = !DILocation(line: 87, column: 24, scope: !16781)
!16788 = !DILocation(line: 87, column: 28, scope: !16781)
!16789 = !DILocation(line: 96, column: 10, scope: !16781)
!16790 = !DILocation(line: 96, column: 13, scope: !16781)
!16791 = !DILocation(line: 96, column: 19, scope: !16781)
!16792 = !DILocation(line: 96, column: 17, scope: !16781)
!16793 = !DILocation(line: 96, column: 3, scope: !16781)
!16794 = distinct !DISubprogram(name: "dev_info_compare", scope: !1123, file: !1123, line: 101, type: !522, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1149, retainedNodes: !140)
!16795 = !DILocalVariable(name: "x", arg: 1, scope: !16794, file: !1123, line: 101, type: !428)
!16796 = !DILocation(line: 101, column: 31, scope: !16794)
!16797 = !DILocalVariable(name: "y", arg: 2, scope: !16794, file: !1123, line: 101, type: !428)
!16798 = !DILocation(line: 101, column: 46, scope: !16794)
!16799 = !DILocalVariable(name: "a", scope: !16794, file: !1123, line: 103, type: !1162)
!16800 = !DILocation(line: 103, column: 24, scope: !16794)
!16801 = !DILocation(line: 103, column: 28, scope: !16794)
!16802 = !DILocalVariable(name: "b", scope: !16794, file: !1123, line: 104, type: !1162)
!16803 = !DILocation(line: 104, column: 24, scope: !16794)
!16804 = !DILocation(line: 104, column: 28, scope: !16794)
!16805 = !DILocation(line: 105, column: 10, scope: !16794)
!16806 = !DILocation(line: 105, column: 13, scope: !16794)
!16807 = !DILocation(line: 105, column: 20, scope: !16794)
!16808 = !DILocation(line: 105, column: 23, scope: !16794)
!16809 = !DILocation(line: 105, column: 17, scope: !16794)
!16810 = !DILocation(line: 105, column: 3, scope: !16794)
!16811 = distinct !DISubprogram(name: "lutimensat", scope: !16812, file: !16812, line: 42, type: !1172, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1169, retainedNodes: !140)
!16812 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mohamad/clone/coreutils")
!16813 = !DILocalVariable(name: "dir", arg: 1, scope: !16811, file: !16812, line: 42, type: !5)
!16814 = !DILocation(line: 42, column: 17, scope: !16811)
!16815 = !DILocalVariable(name: "file", arg: 2, scope: !16811, file: !16812, line: 42, type: !112)
!16816 = !DILocation(line: 42, column: 34, scope: !16811)
!16817 = !DILocalVariable(name: "times", arg: 3, scope: !16811, file: !16812, line: 42, type: !1174)
!16818 = !DILocation(line: 42, column: 62, scope: !16811)
!16819 = !DILocation(line: 44, column: 21, scope: !16811)
!16820 = !DILocation(line: 44, column: 26, scope: !16811)
!16821 = !DILocation(line: 44, column: 32, scope: !16811)
!16822 = !DILocation(line: 44, column: 10, scope: !16811)
!16823 = !DILocation(line: 44, column: 3, scope: !16811)
!16824 = distinct !DISubprogram(name: "fdutimens", scope: !1219, file: !1219, line: 170, type: !1172, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1169, retainedNodes: !140)
!16825 = !DILocalVariable(name: "fd", arg: 1, scope: !16824, file: !1219, line: 170, type: !5)
!16826 = !DILocation(line: 170, column: 16, scope: !16824)
!16827 = !DILocalVariable(name: "file", arg: 2, scope: !16824, file: !1219, line: 170, type: !112)
!16828 = !DILocation(line: 170, column: 32, scope: !16824)
!16829 = !DILocalVariable(name: "timespec", arg: 3, scope: !16824, file: !1219, line: 170, type: !1174)
!16830 = !DILocation(line: 170, column: 60, scope: !16824)
!16831 = !DILocalVariable(name: "adjusted_timespec", scope: !16824, file: !1219, line: 172, type: !1180)
!16832 = !DILocation(line: 172, column: 19, scope: !16824)
!16833 = !DILocalVariable(name: "ts", scope: !16824, file: !1219, line: 173, type: !1181)
!16834 = !DILocation(line: 173, column: 20, scope: !16824)
!16835 = !DILocation(line: 173, column: 25, scope: !16824)
!16836 = !DILocation(line: 173, column: 36, scope: !16824)
!16837 = !DILocalVariable(name: "adjustment_needed", scope: !16824, file: !1219, line: 174, type: !5)
!16838 = !DILocation(line: 174, column: 7, scope: !16824)
!16839 = !DILocalVariable(name: "st", scope: !16824, file: !1219, line: 175, type: !1198)
!16840 = !DILocation(line: 175, column: 15, scope: !16824)
!16841 = !DILocation(line: 177, column: 7, scope: !16842)
!16842 = distinct !DILexicalBlock(scope: !16824, file: !1219, line: 177, column: 7)
!16843 = !DILocation(line: 177, column: 7, scope: !16824)
!16844 = !DILocation(line: 179, column: 7, scope: !16845)
!16845 = distinct !DILexicalBlock(scope: !16842, file: !1219, line: 178, column: 5)
!16846 = !DILocation(line: 179, column: 30, scope: !16845)
!16847 = !DILocation(line: 180, column: 7, scope: !16845)
!16848 = !DILocation(line: 180, column: 30, scope: !16845)
!16849 = !DILocation(line: 181, column: 46, scope: !16845)
!16850 = !DILocation(line: 181, column: 27, scope: !16845)
!16851 = !DILocation(line: 181, column: 25, scope: !16845)
!16852 = !DILocation(line: 182, column: 5, scope: !16845)
!16853 = !DILocation(line: 183, column: 7, scope: !16854)
!16854 = distinct !DILexicalBlock(scope: !16824, file: !1219, line: 183, column: 7)
!16855 = !DILocation(line: 183, column: 25, scope: !16854)
!16856 = !DILocation(line: 183, column: 7, scope: !16824)
!16857 = !DILocation(line: 184, column: 5, scope: !16854)
!16858 = !DILocation(line: 189, column: 7, scope: !16859)
!16859 = distinct !DILexicalBlock(scope: !16824, file: !1219, line: 189, column: 7)
!16860 = !DILocation(line: 189, column: 10, scope: !16859)
!16861 = !DILocation(line: 189, column: 14, scope: !16859)
!16862 = !DILocation(line: 189, column: 18, scope: !16859)
!16863 = !DILocation(line: 189, column: 7, scope: !16824)
!16864 = !DILocation(line: 191, column: 7, scope: !16865)
!16865 = distinct !DILexicalBlock(scope: !16859, file: !1219, line: 190, column: 5)
!16866 = !DILocation(line: 191, column: 13, scope: !16865)
!16867 = !DILocation(line: 192, column: 7, scope: !16865)
!16868 = !DILocation(line: 218, column: 12, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16824, file: !1219, line: 218, column: 7)
!16870 = !DILocation(line: 218, column: 9, scope: !16869)
!16871 = !DILocation(line: 218, column: 7, scope: !16824)
!16872 = !DILocalVariable(name: "result", scope: !16873, file: !1219, line: 220, type: !5)
!16873 = distinct !DILexicalBlock(scope: !16869, file: !1219, line: 219, column: 5)
!16874 = !DILocation(line: 220, column: 11, scope: !16873)
!16875 = !DILocation(line: 234, column: 11, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16873, file: !1219, line: 234, column: 11)
!16877 = !DILocation(line: 234, column: 29, scope: !16876)
!16878 = !DILocation(line: 234, column: 11, scope: !16873)
!16879 = !DILocation(line: 236, column: 15, scope: !16880)
!16880 = distinct !DILexicalBlock(scope: !16881, file: !1219, line: 236, column: 15)
!16881 = distinct !DILexicalBlock(scope: !16876, file: !1219, line: 235, column: 9)
!16882 = !DILocation(line: 236, column: 18, scope: !16880)
!16883 = !DILocation(line: 236, column: 15, scope: !16881)
!16884 = !DILocation(line: 236, column: 30, scope: !16880)
!16885 = !DILocation(line: 236, column: 24, scope: !16880)
!16886 = !DILocation(line: 236, column: 50, scope: !16880)
!16887 = !DILocation(line: 236, column: 43, scope: !16880)
!16888 = !DILocation(line: 237, column: 13, scope: !16880)
!16889 = !DILocation(line: 238, column: 15, scope: !16890)
!16890 = distinct !DILexicalBlock(scope: !16881, file: !1219, line: 238, column: 15)
!16891 = !DILocation(line: 238, column: 21, scope: !16890)
!16892 = !DILocation(line: 238, column: 29, scope: !16890)
!16893 = !DILocation(line: 238, column: 15, scope: !16881)
!16894 = !DILocation(line: 239, column: 13, scope: !16890)
!16895 = !DILocation(line: 239, column: 21, scope: !16890)
!16896 = !DILocation(line: 240, column: 20, scope: !16897)
!16897 = distinct !DILexicalBlock(scope: !16890, file: !1219, line: 240, column: 20)
!16898 = !DILocation(line: 240, column: 26, scope: !16897)
!16899 = !DILocation(line: 240, column: 34, scope: !16897)
!16900 = !DILocation(line: 240, column: 20, scope: !16890)
!16901 = !DILocation(line: 241, column: 13, scope: !16897)
!16902 = !DILocation(line: 241, column: 21, scope: !16897)
!16903 = !DILocation(line: 243, column: 28, scope: !16881)
!16904 = !DILocation(line: 244, column: 9, scope: !16881)
!16905 = !DILocation(line: 247, column: 11, scope: !16906)
!16906 = distinct !DILexicalBlock(scope: !16873, file: !1219, line: 247, column: 11)
!16907 = !DILocation(line: 247, column: 14, scope: !16906)
!16908 = !DILocation(line: 247, column: 11, scope: !16873)
!16909 = !DILocation(line: 249, column: 41, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16906, file: !1219, line: 248, column: 9)
!16911 = !DILocation(line: 249, column: 47, scope: !16910)
!16912 = !DILocation(line: 249, column: 20, scope: !16910)
!16913 = !DILocation(line: 249, column: 18, scope: !16910)
!16914 = !DILocation(line: 258, column: 19, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16910, file: !1219, line: 258, column: 15)
!16916 = !DILocation(line: 258, column: 17, scope: !16915)
!16917 = !DILocation(line: 258, column: 15, scope: !16910)
!16918 = !DILocation(line: 259, column: 13, scope: !16915)
!16919 = !DILocation(line: 259, column: 19, scope: !16915)
!16920 = !DILocation(line: 261, column: 15, scope: !16921)
!16921 = distinct !DILexicalBlock(scope: !16910, file: !1219, line: 261, column: 15)
!16922 = !DILocation(line: 261, column: 22, scope: !16921)
!16923 = !DILocation(line: 261, column: 27, scope: !16921)
!16924 = !DILocation(line: 261, column: 30, scope: !16921)
!16925 = !DILocation(line: 261, column: 36, scope: !16921)
!16926 = !DILocation(line: 261, column: 15, scope: !16910)
!16927 = !DILocation(line: 263, column: 38, scope: !16928)
!16928 = distinct !DILexicalBlock(scope: !16921, file: !1219, line: 262, column: 13)
!16929 = !DILocation(line: 264, column: 22, scope: !16928)
!16930 = !DILocation(line: 264, column: 15, scope: !16928)
!16931 = !DILocation(line: 266, column: 9, scope: !16910)
!16932 = !DILocation(line: 269, column: 16, scope: !16933)
!16933 = distinct !DILexicalBlock(scope: !16873, file: !1219, line: 269, column: 11)
!16934 = !DILocation(line: 269, column: 13, scope: !16933)
!16935 = !DILocation(line: 269, column: 11, scope: !16873)
!16936 = !DILocation(line: 271, column: 30, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16933, file: !1219, line: 270, column: 9)
!16938 = !DILocation(line: 271, column: 34, scope: !16937)
!16939 = !DILocation(line: 271, column: 20, scope: !16937)
!16940 = !DILocation(line: 271, column: 18, scope: !16937)
!16941 = !DILocation(line: 274, column: 19, scope: !16942)
!16942 = distinct !DILexicalBlock(scope: !16937, file: !1219, line: 274, column: 15)
!16943 = !DILocation(line: 274, column: 17, scope: !16942)
!16944 = !DILocation(line: 274, column: 15, scope: !16937)
!16945 = !DILocation(line: 275, column: 13, scope: !16942)
!16946 = !DILocation(line: 275, column: 19, scope: !16942)
!16947 = !DILocation(line: 277, column: 15, scope: !16948)
!16948 = distinct !DILexicalBlock(scope: !16937, file: !1219, line: 277, column: 15)
!16949 = !DILocation(line: 277, column: 22, scope: !16948)
!16950 = !DILocation(line: 277, column: 27, scope: !16948)
!16951 = !DILocation(line: 277, column: 30, scope: !16948)
!16952 = !DILocation(line: 277, column: 36, scope: !16948)
!16953 = !DILocation(line: 277, column: 15, scope: !16937)
!16954 = !DILocation(line: 279, column: 38, scope: !16955)
!16955 = distinct !DILexicalBlock(scope: !16948, file: !1219, line: 278, column: 13)
!16956 = !DILocation(line: 280, column: 22, scope: !16955)
!16957 = !DILocation(line: 280, column: 15, scope: !16955)
!16958 = !DILocation(line: 282, column: 9, scope: !16937)
!16959 = !DILocation(line: 284, column: 5, scope: !16873)
!16960 = !DILocation(line: 285, column: 26, scope: !16824)
!16961 = !DILocation(line: 286, column: 27, scope: !16824)
!16962 = !DILocation(line: 377, column: 7, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16824, file: !1219, line: 377, column: 7)
!16964 = !DILocation(line: 377, column: 7, scope: !16824)
!16965 = !DILocation(line: 379, column: 11, scope: !16966)
!16966 = distinct !DILexicalBlock(scope: !16967, file: !1219, line: 379, column: 11)
!16967 = distinct !DILexicalBlock(scope: !16963, file: !1219, line: 378, column: 5)
!16968 = !DILocation(line: 379, column: 29, scope: !16966)
!16969 = !DILocation(line: 380, column: 11, scope: !16966)
!16970 = !DILocation(line: 380, column: 15, scope: !16966)
!16971 = !DILocation(line: 380, column: 18, scope: !16966)
!16972 = !DILocation(line: 379, column: 11, scope: !16967)
!16973 = !DILocation(line: 380, column: 30, scope: !16966)
!16974 = !DILocation(line: 380, column: 24, scope: !16966)
!16975 = !DILocation(line: 380, column: 50, scope: !16966)
!16976 = !DILocation(line: 380, column: 43, scope: !16966)
!16977 = !DILocation(line: 381, column: 9, scope: !16966)
!16978 = !DILocation(line: 382, column: 11, scope: !16979)
!16979 = distinct !DILexicalBlock(scope: !16967, file: !1219, line: 382, column: 11)
!16980 = !DILocation(line: 382, column: 14, scope: !16979)
!16981 = !DILocation(line: 382, column: 17, scope: !16979)
!16982 = !DILocation(line: 382, column: 11, scope: !16967)
!16983 = !DILocation(line: 383, column: 9, scope: !16979)
!16984 = !DILocation(line: 384, column: 5, scope: !16967)
!16985 = !DILocalVariable(name: "timeval", scope: !16986, file: !1219, line: 388, type: !1182)
!16986 = distinct !DILexicalBlock(scope: !16824, file: !1219, line: 386, column: 3)
!16987 = !DILocation(line: 388, column: 20, scope: !16986)
!16988 = !DILocalVariable(name: "t", scope: !16986, file: !1219, line: 389, type: !1189)
!16989 = !DILocation(line: 389, column: 21, scope: !16986)
!16990 = !DILocation(line: 390, column: 9, scope: !16991)
!16991 = distinct !DILexicalBlock(scope: !16986, file: !1219, line: 390, column: 9)
!16992 = !DILocation(line: 390, column: 9, scope: !16986)
!16993 = !DILocation(line: 392, column: 29, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16991, file: !1219, line: 391, column: 7)
!16995 = !DILocation(line: 392, column: 35, scope: !16994)
!16996 = !DILocation(line: 392, column: 9, scope: !16994)
!16997 = !DILocation(line: 392, column: 20, scope: !16994)
!16998 = !DILocation(line: 392, column: 27, scope: !16994)
!16999 = !{!17000, !3178, i64 0}
!17000 = !{!"timeval", !3178, i64 0, !3178, i64 8}
!17001 = !DILocation(line: 393, column: 30, scope: !16994)
!17002 = !DILocation(line: 393, column: 36, scope: !16994)
!17003 = !DILocation(line: 393, column: 44, scope: !16994)
!17004 = !DILocation(line: 393, column: 9, scope: !16994)
!17005 = !DILocation(line: 393, column: 20, scope: !16994)
!17006 = !DILocation(line: 393, column: 28, scope: !16994)
!17007 = !{!17000, !3178, i64 8}
!17008 = !DILocation(line: 394, column: 29, scope: !16994)
!17009 = !DILocation(line: 394, column: 35, scope: !16994)
!17010 = !DILocation(line: 394, column: 9, scope: !16994)
!17011 = !DILocation(line: 394, column: 20, scope: !16994)
!17012 = !DILocation(line: 394, column: 27, scope: !16994)
!17013 = !DILocation(line: 395, column: 30, scope: !16994)
!17014 = !DILocation(line: 395, column: 36, scope: !16994)
!17015 = !DILocation(line: 395, column: 44, scope: !16994)
!17016 = !DILocation(line: 395, column: 9, scope: !16994)
!17017 = !DILocation(line: 395, column: 20, scope: !16994)
!17018 = !DILocation(line: 395, column: 28, scope: !16994)
!17019 = !DILocation(line: 396, column: 13, scope: !16994)
!17020 = !DILocation(line: 396, column: 11, scope: !16994)
!17021 = !DILocation(line: 397, column: 7, scope: !16994)
!17022 = !DILocation(line: 399, column: 9, scope: !16991)
!17023 = !DILocation(line: 401, column: 9, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !16986, file: !1219, line: 401, column: 9)
!17025 = !DILocation(line: 401, column: 12, scope: !17024)
!17026 = !DILocation(line: 401, column: 9, scope: !16986)
!17027 = !DILocation(line: 404, column: 37, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !17024, file: !1219, line: 402, column: 7)
!17029 = !DILocation(line: 404, column: 43, scope: !17028)
!17030 = !DILocation(line: 404, column: 16, scope: !17028)
!17031 = !DILocation(line: 404, column: 9, scope: !17028)
!17032 = !DILocation(line: 425, column: 13, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17034, file: !1219, line: 425, column: 13)
!17034 = distinct !DILexicalBlock(scope: !17024, file: !1219, line: 408, column: 7)
!17035 = !DILocation(line: 425, column: 29, scope: !17033)
!17036 = !DILocation(line: 425, column: 13, scope: !17034)
!17037 = !DILocation(line: 433, column: 17, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17039, file: !1219, line: 433, column: 17)
!17039 = distinct !DILexicalBlock(scope: !17033, file: !1219, line: 426, column: 11)
!17040 = !DILocation(line: 433, column: 17, scope: !17039)
!17041 = !DILocalVariable(name: "abig", scope: !17042, file: !1219, line: 435, type: !117)
!17042 = distinct !DILexicalBlock(scope: !17038, file: !1219, line: 434, column: 15)
!17043 = !DILocation(line: 435, column: 22, scope: !17042)
!17044 = !DILocation(line: 435, column: 39, scope: !17042)
!17045 = !DILocation(line: 435, column: 44, scope: !17042)
!17046 = !DILocation(line: 435, column: 36, scope: !17042)
!17047 = !DILocalVariable(name: "mbig", scope: !17042, file: !1219, line: 436, type: !117)
!17048 = !DILocation(line: 436, column: 22, scope: !17042)
!17049 = !DILocation(line: 436, column: 39, scope: !17042)
!17050 = !DILocation(line: 436, column: 44, scope: !17042)
!17051 = !DILocation(line: 436, column: 36, scope: !17042)
!17052 = !DILocation(line: 437, column: 22, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17042, file: !1219, line: 437, column: 21)
!17054 = !DILocation(line: 437, column: 29, scope: !17053)
!17055 = !DILocation(line: 437, column: 27, scope: !17053)
!17056 = !DILocation(line: 437, column: 35, scope: !17053)
!17057 = !DILocation(line: 437, column: 45, scope: !17053)
!17058 = !DILocation(line: 437, column: 38, scope: !17053)
!17059 = !DILocation(line: 437, column: 54, scope: !17053)
!17060 = !DILocation(line: 437, column: 21, scope: !17042)
!17061 = !DILocalVariable(name: "adiff", scope: !17062, file: !1219, line: 441, type: !1154)
!17062 = distinct !DILexicalBlock(scope: !17053, file: !1219, line: 438, column: 19)
!17063 = !DILocation(line: 441, column: 28, scope: !17062)
!17064 = !DILocation(line: 441, column: 39, scope: !17062)
!17065 = !DILocation(line: 441, column: 50, scope: !17062)
!17066 = !DILocation(line: 441, column: 55, scope: !17062)
!17067 = !DILocation(line: 441, column: 48, scope: !17062)
!17068 = !DILocalVariable(name: "mdiff", scope: !17062, file: !1219, line: 442, type: !1154)
!17069 = !DILocation(line: 442, column: 28, scope: !17062)
!17070 = !DILocation(line: 442, column: 39, scope: !17062)
!17071 = !DILocation(line: 442, column: 50, scope: !17062)
!17072 = !DILocation(line: 442, column: 55, scope: !17062)
!17073 = !DILocation(line: 442, column: 48, scope: !17062)
!17074 = !DILocalVariable(name: "tt", scope: !17062, file: !1219, line: 444, type: !1189)
!17075 = !DILocation(line: 444, column: 37, scope: !17062)
!17076 = !DILocalVariable(name: "truncated_timeval", scope: !17062, file: !1219, line: 445, type: !1182)
!17077 = !DILocation(line: 445, column: 36, scope: !17062)
!17078 = !DILocation(line: 446, column: 21, scope: !17062)
!17079 = !DILocation(line: 446, column: 44, scope: !17062)
!17080 = !DILocation(line: 447, column: 21, scope: !17062)
!17081 = !DILocation(line: 447, column: 44, scope: !17062)
!17082 = !DILocation(line: 448, column: 25, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !17062, file: !1219, line: 448, column: 25)
!17084 = !DILocation(line: 448, column: 30, scope: !17083)
!17085 = !DILocation(line: 448, column: 33, scope: !17083)
!17086 = !DILocation(line: 448, column: 39, scope: !17083)
!17087 = !DILocation(line: 448, column: 44, scope: !17083)
!17088 = !DILocation(line: 448, column: 47, scope: !17083)
!17089 = !DILocation(line: 448, column: 71, scope: !17083)
!17090 = !DILocation(line: 448, column: 25, scope: !17062)
!17091 = !DILocation(line: 450, column: 30, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17083, file: !1219, line: 449, column: 23)
!17093 = !DILocation(line: 450, column: 28, scope: !17092)
!17094 = !DILocation(line: 451, column: 25, scope: !17092)
!17095 = !DILocation(line: 451, column: 31, scope: !17092)
!17096 = !DILocation(line: 451, column: 39, scope: !17092)
!17097 = !DILocation(line: 452, column: 23, scope: !17092)
!17098 = !DILocation(line: 453, column: 25, scope: !17099)
!17099 = distinct !DILexicalBlock(scope: !17062, file: !1219, line: 453, column: 25)
!17100 = !DILocation(line: 453, column: 30, scope: !17099)
!17101 = !DILocation(line: 453, column: 33, scope: !17099)
!17102 = !DILocation(line: 453, column: 39, scope: !17099)
!17103 = !DILocation(line: 453, column: 44, scope: !17099)
!17104 = !DILocation(line: 453, column: 47, scope: !17099)
!17105 = !DILocation(line: 453, column: 71, scope: !17099)
!17106 = !DILocation(line: 453, column: 25, scope: !17062)
!17107 = !DILocation(line: 455, column: 30, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17099, file: !1219, line: 454, column: 23)
!17109 = !DILocation(line: 455, column: 28, scope: !17108)
!17110 = !DILocation(line: 456, column: 25, scope: !17108)
!17111 = !DILocation(line: 456, column: 31, scope: !17108)
!17112 = !DILocation(line: 456, column: 39, scope: !17108)
!17113 = !DILocation(line: 457, column: 23, scope: !17108)
!17114 = !DILocation(line: 458, column: 25, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17062, file: !1219, line: 458, column: 25)
!17116 = !DILocation(line: 458, column: 25, scope: !17062)
!17117 = !DILocation(line: 459, column: 23, scope: !17115)
!17118 = !DILocation(line: 460, column: 19, scope: !17062)
!17119 = !DILocation(line: 461, column: 15, scope: !17042)
!17120 = !DILocation(line: 464, column: 13, scope: !17039)
!17121 = !DILocation(line: 470, column: 10, scope: !17122)
!17122 = distinct !DILexicalBlock(scope: !16986, file: !1219, line: 470, column: 9)
!17123 = !DILocation(line: 470, column: 9, scope: !16986)
!17124 = !DILocation(line: 476, column: 9, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17122, file: !1219, line: 471, column: 7)
!17126 = !DILocation(line: 482, column: 20, scope: !16986)
!17127 = !DILocation(line: 482, column: 26, scope: !16986)
!17128 = !DILocation(line: 482, column: 12, scope: !16986)
!17129 = !DILocation(line: 482, column: 5, scope: !16986)
!17130 = !DILocation(line: 500, column: 1, scope: !16824)
!17131 = distinct !DISubprogram(name: "validate_timespec", scope: !1219, file: !1219, line: 87, type: !1192, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1169, retainedNodes: !140)
!17132 = !DILocalVariable(name: "timespec", arg: 1, scope: !17131, file: !1219, line: 87, type: !1181)
!17133 = !DILocation(line: 87, column: 36, scope: !17131)
!17134 = !DILocalVariable(name: "result", scope: !17131, file: !1219, line: 89, type: !5)
!17135 = !DILocation(line: 89, column: 7, scope: !17131)
!17136 = !DILocalVariable(name: "utime_omit_count", scope: !17131, file: !1219, line: 90, type: !5)
!17137 = !DILocation(line: 90, column: 7, scope: !17131)
!17138 = !DILocation(line: 91, column: 8, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17131, file: !1219, line: 91, column: 7)
!17140 = !DILocation(line: 91, column: 20, scope: !17139)
!17141 = !DILocation(line: 91, column: 28, scope: !17139)
!17142 = !DILocation(line: 92, column: 8, scope: !17139)
!17143 = !DILocation(line: 92, column: 11, scope: !17139)
!17144 = !DILocation(line: 92, column: 23, scope: !17139)
!17145 = !DILocation(line: 92, column: 31, scope: !17139)
!17146 = !DILocation(line: 93, column: 8, scope: !17139)
!17147 = !DILocation(line: 93, column: 19, scope: !17139)
!17148 = !DILocation(line: 93, column: 31, scope: !17139)
!17149 = !DILocation(line: 93, column: 16, scope: !17139)
!17150 = !DILocation(line: 94, column: 14, scope: !17139)
!17151 = !DILocation(line: 94, column: 17, scope: !17139)
!17152 = !DILocation(line: 94, column: 29, scope: !17139)
!17153 = !DILocation(line: 94, column: 37, scope: !17139)
!17154 = !DILocation(line: 95, column: 7, scope: !17139)
!17155 = !DILocation(line: 95, column: 11, scope: !17139)
!17156 = !DILocation(line: 95, column: 23, scope: !17139)
!17157 = !DILocation(line: 95, column: 31, scope: !17139)
!17158 = !DILocation(line: 96, column: 11, scope: !17139)
!17159 = !DILocation(line: 96, column: 14, scope: !17139)
!17160 = !DILocation(line: 96, column: 26, scope: !17139)
!17161 = !DILocation(line: 96, column: 34, scope: !17139)
!17162 = !DILocation(line: 97, column: 11, scope: !17139)
!17163 = !DILocation(line: 97, column: 22, scope: !17139)
!17164 = !DILocation(line: 97, column: 34, scope: !17139)
!17165 = !DILocation(line: 97, column: 19, scope: !17139)
!17166 = !DILocation(line: 98, column: 17, scope: !17139)
!17167 = !DILocation(line: 98, column: 20, scope: !17139)
!17168 = !DILocation(line: 98, column: 32, scope: !17139)
!17169 = !DILocation(line: 98, column: 40, scope: !17139)
!17170 = !DILocation(line: 91, column: 7, scope: !17131)
!17171 = !DILocation(line: 100, column: 7, scope: !17172)
!17172 = distinct !DILexicalBlock(scope: !17139, file: !1219, line: 99, column: 5)
!17173 = !DILocation(line: 100, column: 13, scope: !17172)
!17174 = !DILocation(line: 101, column: 7, scope: !17172)
!17175 = !DILocation(line: 107, column: 7, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17131, file: !1219, line: 107, column: 7)
!17177 = !DILocation(line: 107, column: 19, scope: !17176)
!17178 = !DILocation(line: 107, column: 27, scope: !17176)
!17179 = !DILocation(line: 108, column: 7, scope: !17176)
!17180 = !DILocation(line: 108, column: 10, scope: !17176)
!17181 = !DILocation(line: 108, column: 22, scope: !17176)
!17182 = !DILocation(line: 108, column: 30, scope: !17176)
!17183 = !DILocation(line: 107, column: 7, scope: !17131)
!17184 = !DILocation(line: 110, column: 7, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17176, file: !1219, line: 109, column: 5)
!17186 = !DILocation(line: 110, column: 19, scope: !17185)
!17187 = !DILocation(line: 110, column: 26, scope: !17185)
!17188 = !DILocation(line: 111, column: 14, scope: !17185)
!17189 = !DILocation(line: 112, column: 11, scope: !17190)
!17190 = distinct !DILexicalBlock(scope: !17185, file: !1219, line: 112, column: 11)
!17191 = !DILocation(line: 112, column: 23, scope: !17190)
!17192 = !DILocation(line: 112, column: 31, scope: !17190)
!17193 = !DILocation(line: 112, column: 11, scope: !17185)
!17194 = !DILocation(line: 113, column: 25, scope: !17190)
!17195 = !DILocation(line: 113, column: 9, scope: !17190)
!17196 = !DILocation(line: 114, column: 5, scope: !17185)
!17197 = !DILocation(line: 115, column: 7, scope: !17198)
!17198 = distinct !DILexicalBlock(scope: !17131, file: !1219, line: 115, column: 7)
!17199 = !DILocation(line: 115, column: 19, scope: !17198)
!17200 = !DILocation(line: 115, column: 27, scope: !17198)
!17201 = !DILocation(line: 116, column: 7, scope: !17198)
!17202 = !DILocation(line: 116, column: 10, scope: !17198)
!17203 = !DILocation(line: 116, column: 22, scope: !17198)
!17204 = !DILocation(line: 116, column: 30, scope: !17198)
!17205 = !DILocation(line: 115, column: 7, scope: !17131)
!17206 = !DILocation(line: 118, column: 7, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17198, file: !1219, line: 117, column: 5)
!17208 = !DILocation(line: 118, column: 19, scope: !17207)
!17209 = !DILocation(line: 118, column: 26, scope: !17207)
!17210 = !DILocation(line: 119, column: 14, scope: !17207)
!17211 = !DILocation(line: 120, column: 11, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17207, file: !1219, line: 120, column: 11)
!17213 = !DILocation(line: 120, column: 23, scope: !17212)
!17214 = !DILocation(line: 120, column: 31, scope: !17212)
!17215 = !DILocation(line: 120, column: 11, scope: !17207)
!17216 = !DILocation(line: 121, column: 25, scope: !17212)
!17217 = !DILocation(line: 121, column: 9, scope: !17212)
!17218 = !DILocation(line: 122, column: 5, scope: !17207)
!17219 = !DILocation(line: 123, column: 10, scope: !17131)
!17220 = !DILocation(line: 123, column: 20, scope: !17131)
!17221 = !DILocation(line: 123, column: 37, scope: !17131)
!17222 = !DILocation(line: 123, column: 17, scope: !17131)
!17223 = !DILocation(line: 123, column: 3, scope: !17131)
!17224 = !DILocation(line: 124, column: 1, scope: !17131)
!17225 = distinct !DISubprogram(name: "update_timespec", scope: !1219, file: !1219, line: 133, type: !1194, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1169, retainedNodes: !140)
!17226 = !DILocalVariable(name: "statbuf", arg: 1, scope: !17225, file: !1219, line: 133, type: !1196)
!17227 = !DILocation(line: 133, column: 37, scope: !17225)
!17228 = !DILocalVariable(name: "ts", arg: 2, scope: !17225, file: !1219, line: 133, type: !1215)
!17229 = !DILocation(line: 133, column: 63, scope: !17225)
!17230 = !DILocalVariable(name: "timespec", scope: !17225, file: !1219, line: 135, type: !1181)
!17231 = !DILocation(line: 135, column: 20, scope: !17225)
!17232 = !DILocation(line: 135, column: 32, scope: !17225)
!17233 = !DILocation(line: 135, column: 31, scope: !17225)
!17234 = !DILocation(line: 136, column: 7, scope: !17235)
!17235 = distinct !DILexicalBlock(scope: !17225, file: !1219, line: 136, column: 7)
!17236 = !DILocation(line: 136, column: 19, scope: !17235)
!17237 = !DILocation(line: 136, column: 27, scope: !17235)
!17238 = !DILocation(line: 137, column: 7, scope: !17235)
!17239 = !DILocation(line: 137, column: 10, scope: !17235)
!17240 = !DILocation(line: 137, column: 22, scope: !17235)
!17241 = !DILocation(line: 137, column: 30, scope: !17235)
!17242 = !DILocation(line: 136, column: 7, scope: !17225)
!17243 = !DILocation(line: 138, column: 5, scope: !17235)
!17244 = !DILocation(line: 139, column: 7, scope: !17245)
!17245 = distinct !DILexicalBlock(scope: !17225, file: !1219, line: 139, column: 7)
!17246 = !DILocation(line: 139, column: 19, scope: !17245)
!17247 = !DILocation(line: 139, column: 27, scope: !17245)
!17248 = !DILocation(line: 140, column: 7, scope: !17245)
!17249 = !DILocation(line: 140, column: 10, scope: !17245)
!17250 = !DILocation(line: 140, column: 22, scope: !17245)
!17251 = !DILocation(line: 140, column: 30, scope: !17245)
!17252 = !DILocation(line: 139, column: 7, scope: !17225)
!17253 = !DILocation(line: 142, column: 8, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17245, file: !1219, line: 141, column: 5)
!17255 = !DILocation(line: 142, column: 11, scope: !17254)
!17256 = !DILocation(line: 143, column: 7, scope: !17254)
!17257 = !DILocation(line: 146, column: 7, scope: !17258)
!17258 = distinct !DILexicalBlock(scope: !17225, file: !1219, line: 146, column: 7)
!17259 = !DILocation(line: 146, column: 19, scope: !17258)
!17260 = !DILocation(line: 146, column: 27, scope: !17258)
!17261 = !DILocation(line: 146, column: 7, scope: !17225)
!17262 = !DILocation(line: 147, column: 5, scope: !17258)
!17263 = !DILocation(line: 147, column: 35, scope: !17258)
!17264 = !DILocation(line: 147, column: 19, scope: !17258)
!17265 = !DILocation(line: 148, column: 12, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17258, file: !1219, line: 148, column: 12)
!17267 = !DILocation(line: 148, column: 24, scope: !17266)
!17268 = !DILocation(line: 148, column: 32, scope: !17266)
!17269 = !DILocation(line: 148, column: 12, scope: !17258)
!17270 = !DILocation(line: 149, column: 15, scope: !17266)
!17271 = !DILocation(line: 149, column: 5, scope: !17266)
!17272 = !DILocation(line: 151, column: 7, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17225, file: !1219, line: 151, column: 7)
!17274 = !DILocation(line: 151, column: 19, scope: !17273)
!17275 = !DILocation(line: 151, column: 27, scope: !17273)
!17276 = !DILocation(line: 151, column: 7, scope: !17225)
!17277 = !DILocation(line: 152, column: 5, scope: !17273)
!17278 = !DILocation(line: 152, column: 35, scope: !17273)
!17279 = !DILocation(line: 152, column: 19, scope: !17273)
!17280 = !DILocation(line: 153, column: 12, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17273, file: !1219, line: 153, column: 12)
!17282 = !DILocation(line: 153, column: 24, scope: !17281)
!17283 = !DILocation(line: 153, column: 32, scope: !17281)
!17284 = !DILocation(line: 153, column: 12, scope: !17273)
!17285 = !DILocation(line: 154, column: 15, scope: !17281)
!17286 = !DILocation(line: 154, column: 5, scope: !17281)
!17287 = !DILocation(line: 156, column: 3, scope: !17225)
!17288 = !DILocation(line: 157, column: 1, scope: !17225)
!17289 = distinct !DISubprogram(name: "utimens", scope: !1219, file: !1219, line: 505, type: !1190, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1169, retainedNodes: !140)
!17290 = !DILocalVariable(name: "file", arg: 1, scope: !17289, file: !1219, line: 505, type: !112)
!17291 = !DILocation(line: 505, column: 22, scope: !17289)
!17292 = !DILocalVariable(name: "timespec", arg: 2, scope: !17289, file: !1219, line: 505, type: !1174)
!17293 = !DILocation(line: 505, column: 50, scope: !17289)
!17294 = !DILocation(line: 507, column: 25, scope: !17289)
!17295 = !DILocation(line: 507, column: 31, scope: !17289)
!17296 = !DILocation(line: 507, column: 10, scope: !17289)
!17297 = !DILocation(line: 507, column: 3, scope: !17289)
!17298 = distinct !DISubprogram(name: "lutimens", scope: !1219, file: !1219, line: 515, type: !1190, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1169, retainedNodes: !140)
!17299 = !DILocalVariable(name: "file", arg: 1, scope: !17298, file: !1219, line: 515, type: !112)
!17300 = !DILocation(line: 515, column: 23, scope: !17298)
!17301 = !DILocalVariable(name: "timespec", arg: 2, scope: !17298, file: !1219, line: 515, type: !1174)
!17302 = !DILocation(line: 515, column: 51, scope: !17298)
!17303 = !DILocalVariable(name: "adjusted_timespec", scope: !17298, file: !1219, line: 517, type: !1180)
!17304 = !DILocation(line: 517, column: 19, scope: !17298)
!17305 = !DILocalVariable(name: "ts", scope: !17298, file: !1219, line: 518, type: !1181)
!17306 = !DILocation(line: 518, column: 20, scope: !17298)
!17307 = !DILocation(line: 518, column: 25, scope: !17298)
!17308 = !DILocation(line: 518, column: 36, scope: !17298)
!17309 = !DILocalVariable(name: "adjustment_needed", scope: !17298, file: !1219, line: 519, type: !5)
!17310 = !DILocation(line: 519, column: 7, scope: !17298)
!17311 = !DILocalVariable(name: "st", scope: !17298, file: !1219, line: 520, type: !1198)
!17312 = !DILocation(line: 520, column: 15, scope: !17298)
!17313 = !DILocation(line: 522, column: 7, scope: !17314)
!17314 = distinct !DILexicalBlock(scope: !17298, file: !1219, line: 522, column: 7)
!17315 = !DILocation(line: 522, column: 7, scope: !17298)
!17316 = !DILocation(line: 524, column: 7, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17314, file: !1219, line: 523, column: 5)
!17318 = !DILocation(line: 524, column: 30, scope: !17317)
!17319 = !DILocation(line: 525, column: 7, scope: !17317)
!17320 = !DILocation(line: 525, column: 30, scope: !17317)
!17321 = !DILocation(line: 526, column: 46, scope: !17317)
!17322 = !DILocation(line: 526, column: 27, scope: !17317)
!17323 = !DILocation(line: 526, column: 25, scope: !17317)
!17324 = !DILocation(line: 527, column: 5, scope: !17317)
!17325 = !DILocation(line: 528, column: 7, scope: !17326)
!17326 = distinct !DILexicalBlock(scope: !17298, file: !1219, line: 528, column: 7)
!17327 = !DILocation(line: 528, column: 25, scope: !17326)
!17328 = !DILocation(line: 528, column: 7, scope: !17298)
!17329 = !DILocation(line: 529, column: 5, scope: !17326)
!17330 = !DILocation(line: 537, column: 12, scope: !17331)
!17331 = distinct !DILexicalBlock(scope: !17298, file: !1219, line: 537, column: 7)
!17332 = !DILocation(line: 537, column: 9, scope: !17331)
!17333 = !DILocation(line: 537, column: 7, scope: !17298)
!17334 = !DILocalVariable(name: "result", scope: !17335, file: !1219, line: 539, type: !5)
!17335 = distinct !DILexicalBlock(scope: !17331, file: !1219, line: 538, column: 5)
!17336 = !DILocation(line: 539, column: 11, scope: !17335)
!17337 = !DILocation(line: 553, column: 11, scope: !17338)
!17338 = distinct !DILexicalBlock(scope: !17335, file: !1219, line: 553, column: 11)
!17339 = !DILocation(line: 553, column: 29, scope: !17338)
!17340 = !DILocation(line: 553, column: 11, scope: !17335)
!17341 = !DILocation(line: 555, column: 22, scope: !17342)
!17342 = distinct !DILexicalBlock(scope: !17343, file: !1219, line: 555, column: 15)
!17343 = distinct !DILexicalBlock(scope: !17338, file: !1219, line: 554, column: 9)
!17344 = !DILocation(line: 555, column: 15, scope: !17342)
!17345 = !DILocation(line: 555, column: 15, scope: !17343)
!17346 = !DILocation(line: 556, column: 13, scope: !17342)
!17347 = !DILocation(line: 557, column: 15, scope: !17348)
!17348 = distinct !DILexicalBlock(scope: !17343, file: !1219, line: 557, column: 15)
!17349 = !DILocation(line: 557, column: 21, scope: !17348)
!17350 = !DILocation(line: 557, column: 29, scope: !17348)
!17351 = !DILocation(line: 557, column: 15, scope: !17343)
!17352 = !DILocation(line: 558, column: 13, scope: !17348)
!17353 = !DILocation(line: 558, column: 21, scope: !17348)
!17354 = !DILocation(line: 559, column: 20, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17348, file: !1219, line: 559, column: 20)
!17356 = !DILocation(line: 559, column: 26, scope: !17355)
!17357 = !DILocation(line: 559, column: 34, scope: !17355)
!17358 = !DILocation(line: 559, column: 20, scope: !17348)
!17359 = !DILocation(line: 560, column: 13, scope: !17355)
!17360 = !DILocation(line: 560, column: 21, scope: !17355)
!17361 = !DILocation(line: 562, column: 28, scope: !17343)
!17362 = !DILocation(line: 563, column: 9, scope: !17343)
!17363 = !DILocation(line: 565, column: 37, scope: !17335)
!17364 = !DILocation(line: 565, column: 43, scope: !17335)
!17365 = !DILocation(line: 565, column: 16, scope: !17335)
!17366 = !DILocation(line: 565, column: 14, scope: !17335)
!17367 = !DILocation(line: 574, column: 15, scope: !17368)
!17368 = distinct !DILexicalBlock(scope: !17335, file: !1219, line: 574, column: 11)
!17369 = !DILocation(line: 574, column: 13, scope: !17368)
!17370 = !DILocation(line: 574, column: 11, scope: !17335)
!17371 = !DILocation(line: 575, column: 9, scope: !17368)
!17372 = !DILocation(line: 575, column: 15, scope: !17368)
!17373 = !DILocation(line: 577, column: 11, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17335, file: !1219, line: 577, column: 11)
!17375 = !DILocation(line: 577, column: 18, scope: !17374)
!17376 = !DILocation(line: 577, column: 23, scope: !17374)
!17377 = !DILocation(line: 577, column: 26, scope: !17374)
!17378 = !DILocation(line: 577, column: 32, scope: !17374)
!17379 = !DILocation(line: 577, column: 11, scope: !17335)
!17380 = !DILocation(line: 579, column: 34, scope: !17381)
!17381 = distinct !DILexicalBlock(scope: !17374, file: !1219, line: 578, column: 9)
!17382 = !DILocation(line: 580, column: 35, scope: !17381)
!17383 = !DILocation(line: 581, column: 18, scope: !17381)
!17384 = !DILocation(line: 581, column: 11, scope: !17381)
!17385 = !DILocation(line: 583, column: 5, scope: !17335)
!17386 = !DILocation(line: 584, column: 27, scope: !17298)
!17387 = !DILocation(line: 591, column: 7, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17298, file: !1219, line: 591, column: 7)
!17389 = !DILocation(line: 591, column: 7, scope: !17298)
!17390 = !DILocation(line: 593, column: 11, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17392, file: !1219, line: 593, column: 11)
!17392 = distinct !DILexicalBlock(scope: !17388, file: !1219, line: 592, column: 5)
!17393 = !DILocation(line: 593, column: 29, scope: !17391)
!17394 = !DILocation(line: 593, column: 34, scope: !17391)
!17395 = !DILocation(line: 593, column: 44, scope: !17391)
!17396 = !DILocation(line: 593, column: 37, scope: !17391)
!17397 = !DILocation(line: 593, column: 11, scope: !17392)
!17398 = !DILocation(line: 594, column: 9, scope: !17391)
!17399 = !DILocation(line: 595, column: 11, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17392, file: !1219, line: 595, column: 11)
!17401 = !DILocation(line: 595, column: 14, scope: !17400)
!17402 = !DILocation(line: 595, column: 17, scope: !17400)
!17403 = !DILocation(line: 595, column: 11, scope: !17392)
!17404 = !DILocation(line: 596, column: 9, scope: !17400)
!17405 = !DILocation(line: 597, column: 5, scope: !17392)
!17406 = !DILocation(line: 624, column: 9, scope: !17407)
!17407 = distinct !DILexicalBlock(scope: !17298, file: !1219, line: 624, column: 7)
!17408 = !DILocation(line: 624, column: 54, scope: !17407)
!17409 = !DILocation(line: 624, column: 64, scope: !17407)
!17410 = !DILocation(line: 624, column: 57, scope: !17407)
!17411 = !DILocation(line: 624, column: 7, scope: !17298)
!17412 = !DILocation(line: 625, column: 5, scope: !17407)
!17413 = !DILocation(line: 626, column: 8, scope: !17414)
!17414 = distinct !DILexicalBlock(scope: !17298, file: !1219, line: 626, column: 7)
!17415 = !DILocation(line: 626, column: 7, scope: !17298)
!17416 = !DILocation(line: 627, column: 27, scope: !17414)
!17417 = !DILocation(line: 627, column: 33, scope: !17414)
!17418 = !DILocation(line: 627, column: 12, scope: !17414)
!17419 = !DILocation(line: 627, column: 5, scope: !17414)
!17420 = !DILocation(line: 628, column: 3, scope: !17298)
!17421 = !DILocation(line: 628, column: 9, scope: !17298)
!17422 = !DILocation(line: 629, column: 3, scope: !17298)
!17423 = !DILocation(line: 630, column: 1, scope: !17298)
!17424 = distinct !DISubprogram(name: "version_etc_arn", scope: !17425, file: !17425, line: 61, type: !1945, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !140)
!17425 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!17426 = !DILocalVariable(name: "stream", arg: 1, scope: !17424, file: !17425, line: 61, type: !1947)
!17427 = !DILocation(line: 61, column: 24, scope: !17424)
!17428 = !DILocalVariable(name: "command_name", arg: 2, scope: !17424, file: !17425, line: 62, type: !112)
!17429 = !DILocation(line: 62, column: 30, scope: !17424)
!17430 = !DILocalVariable(name: "package", arg: 3, scope: !17424, file: !17425, line: 62, type: !112)
!17431 = !DILocation(line: 62, column: 56, scope: !17424)
!17432 = !DILocalVariable(name: "version", arg: 4, scope: !17424, file: !17425, line: 63, type: !112)
!17433 = !DILocation(line: 63, column: 30, scope: !17424)
!17434 = !DILocalVariable(name: "authors", arg: 5, scope: !17424, file: !17425, line: 64, type: !1249)
!17435 = !DILocation(line: 64, column: 39, scope: !17424)
!17436 = !DILocalVariable(name: "n_authors", arg: 6, scope: !17424, file: !17425, line: 64, type: !52)
!17437 = !DILocation(line: 64, column: 55, scope: !17424)
!17438 = !DILocation(line: 66, column: 7, scope: !17439)
!17439 = distinct !DILexicalBlock(scope: !17424, file: !17425, line: 66, column: 7)
!17440 = !DILocation(line: 66, column: 7, scope: !17424)
!17441 = !DILocation(line: 67, column: 14, scope: !17439)
!17442 = !DILocation(line: 67, column: 38, scope: !17439)
!17443 = !DILocation(line: 67, column: 52, scope: !17439)
!17444 = !DILocation(line: 67, column: 61, scope: !17439)
!17445 = !DILocation(line: 67, column: 5, scope: !17439)
!17446 = !DILocation(line: 69, column: 14, scope: !17439)
!17447 = !DILocation(line: 69, column: 33, scope: !17439)
!17448 = !DILocation(line: 69, column: 42, scope: !17439)
!17449 = !DILocation(line: 69, column: 5, scope: !17439)
!17450 = !DILocation(line: 83, column: 12, scope: !17424)
!17451 = !DILocation(line: 83, column: 43, scope: !17424)
!17452 = !DILocation(line: 83, column: 3, scope: !17424)
!17453 = !DILocation(line: 85, column: 3, scope: !17424)
!17454 = !DILocation(line: 88, column: 12, scope: !17424)
!17455 = !DILocation(line: 88, column: 20, scope: !17424)
!17456 = !DILocation(line: 88, column: 3, scope: !17424)
!17457 = !DILocation(line: 95, column: 3, scope: !17424)
!17458 = !DILocation(line: 97, column: 11, scope: !17424)
!17459 = !DILocation(line: 97, column: 3, scope: !17424)
!17460 = !DILocation(line: 102, column: 7, scope: !17461)
!17461 = distinct !DILexicalBlock(scope: !17424, file: !17425, line: 98, column: 5)
!17462 = !DILocation(line: 105, column: 16, scope: !17461)
!17463 = !DILocation(line: 105, column: 24, scope: !17461)
!17464 = !DILocation(line: 105, column: 47, scope: !17461)
!17465 = !DILocation(line: 105, column: 7, scope: !17461)
!17466 = !DILocation(line: 106, column: 7, scope: !17461)
!17467 = !DILocation(line: 109, column: 16, scope: !17461)
!17468 = !DILocation(line: 109, column: 24, scope: !17461)
!17469 = !DILocation(line: 109, column: 54, scope: !17461)
!17470 = !DILocation(line: 109, column: 66, scope: !17461)
!17471 = !DILocation(line: 109, column: 7, scope: !17461)
!17472 = !DILocation(line: 110, column: 7, scope: !17461)
!17473 = !DILocation(line: 113, column: 16, scope: !17461)
!17474 = !DILocation(line: 113, column: 24, scope: !17461)
!17475 = !DILocation(line: 114, column: 16, scope: !17461)
!17476 = !DILocation(line: 114, column: 28, scope: !17461)
!17477 = !DILocation(line: 114, column: 40, scope: !17461)
!17478 = !DILocation(line: 113, column: 7, scope: !17461)
!17479 = !DILocation(line: 115, column: 7, scope: !17461)
!17480 = !DILocation(line: 120, column: 16, scope: !17461)
!17481 = !DILocation(line: 120, column: 24, scope: !17461)
!17482 = !DILocation(line: 121, column: 16, scope: !17461)
!17483 = !DILocation(line: 121, column: 28, scope: !17461)
!17484 = !DILocation(line: 121, column: 40, scope: !17461)
!17485 = !DILocation(line: 121, column: 52, scope: !17461)
!17486 = !DILocation(line: 120, column: 7, scope: !17461)
!17487 = !DILocation(line: 122, column: 7, scope: !17461)
!17488 = !DILocation(line: 127, column: 16, scope: !17461)
!17489 = !DILocation(line: 127, column: 24, scope: !17461)
!17490 = !DILocation(line: 128, column: 16, scope: !17461)
!17491 = !DILocation(line: 128, column: 28, scope: !17461)
!17492 = !DILocation(line: 128, column: 40, scope: !17461)
!17493 = !DILocation(line: 128, column: 52, scope: !17461)
!17494 = !DILocation(line: 128, column: 64, scope: !17461)
!17495 = !DILocation(line: 127, column: 7, scope: !17461)
!17496 = !DILocation(line: 129, column: 7, scope: !17461)
!17497 = !DILocation(line: 134, column: 16, scope: !17461)
!17498 = !DILocation(line: 134, column: 24, scope: !17461)
!17499 = !DILocation(line: 135, column: 16, scope: !17461)
!17500 = !DILocation(line: 135, column: 28, scope: !17461)
!17501 = !DILocation(line: 135, column: 40, scope: !17461)
!17502 = !DILocation(line: 135, column: 52, scope: !17461)
!17503 = !DILocation(line: 135, column: 64, scope: !17461)
!17504 = !DILocation(line: 136, column: 16, scope: !17461)
!17505 = !DILocation(line: 134, column: 7, scope: !17461)
!17506 = !DILocation(line: 137, column: 7, scope: !17461)
!17507 = !DILocation(line: 142, column: 16, scope: !17461)
!17508 = !DILocation(line: 142, column: 24, scope: !17461)
!17509 = !DILocation(line: 143, column: 16, scope: !17461)
!17510 = !DILocation(line: 143, column: 28, scope: !17461)
!17511 = !DILocation(line: 143, column: 40, scope: !17461)
!17512 = !DILocation(line: 143, column: 52, scope: !17461)
!17513 = !DILocation(line: 143, column: 64, scope: !17461)
!17514 = !DILocation(line: 144, column: 16, scope: !17461)
!17515 = !DILocation(line: 144, column: 28, scope: !17461)
!17516 = !DILocation(line: 142, column: 7, scope: !17461)
!17517 = !DILocation(line: 145, column: 7, scope: !17461)
!17518 = !DILocation(line: 150, column: 16, scope: !17461)
!17519 = !DILocation(line: 150, column: 24, scope: !17461)
!17520 = !DILocation(line: 152, column: 17, scope: !17461)
!17521 = !DILocation(line: 152, column: 29, scope: !17461)
!17522 = !DILocation(line: 152, column: 41, scope: !17461)
!17523 = !DILocation(line: 152, column: 53, scope: !17461)
!17524 = !DILocation(line: 152, column: 65, scope: !17461)
!17525 = !DILocation(line: 153, column: 17, scope: !17461)
!17526 = !DILocation(line: 153, column: 29, scope: !17461)
!17527 = !DILocation(line: 153, column: 41, scope: !17461)
!17528 = !DILocation(line: 150, column: 7, scope: !17461)
!17529 = !DILocation(line: 154, column: 7, scope: !17461)
!17530 = !DILocation(line: 159, column: 16, scope: !17461)
!17531 = !DILocation(line: 159, column: 24, scope: !17461)
!17532 = !DILocation(line: 161, column: 16, scope: !17461)
!17533 = !DILocation(line: 161, column: 28, scope: !17461)
!17534 = !DILocation(line: 161, column: 40, scope: !17461)
!17535 = !DILocation(line: 161, column: 52, scope: !17461)
!17536 = !DILocation(line: 161, column: 64, scope: !17461)
!17537 = !DILocation(line: 162, column: 16, scope: !17461)
!17538 = !DILocation(line: 162, column: 28, scope: !17461)
!17539 = !DILocation(line: 162, column: 40, scope: !17461)
!17540 = !DILocation(line: 162, column: 52, scope: !17461)
!17541 = !DILocation(line: 159, column: 7, scope: !17461)
!17542 = !DILocation(line: 163, column: 7, scope: !17461)
!17543 = !DILocation(line: 170, column: 16, scope: !17461)
!17544 = !DILocation(line: 170, column: 24, scope: !17461)
!17545 = !DILocation(line: 172, column: 17, scope: !17461)
!17546 = !DILocation(line: 172, column: 29, scope: !17461)
!17547 = !DILocation(line: 172, column: 41, scope: !17461)
!17548 = !DILocation(line: 172, column: 53, scope: !17461)
!17549 = !DILocation(line: 172, column: 65, scope: !17461)
!17550 = !DILocation(line: 173, column: 17, scope: !17461)
!17551 = !DILocation(line: 173, column: 29, scope: !17461)
!17552 = !DILocation(line: 173, column: 41, scope: !17461)
!17553 = !DILocation(line: 173, column: 53, scope: !17461)
!17554 = !DILocation(line: 170, column: 7, scope: !17461)
!17555 = !DILocation(line: 174, column: 7, scope: !17461)
!17556 = !DILocation(line: 176, column: 1, scope: !17424)
!17557 = distinct !DISubprogram(name: "version_etc_ar", scope: !17425, file: !17425, line: 183, type: !1988, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !140)
!17558 = !DILocalVariable(name: "stream", arg: 1, scope: !17557, file: !17425, line: 183, type: !1947)
!17559 = !DILocation(line: 183, column: 23, scope: !17557)
!17560 = !DILocalVariable(name: "command_name", arg: 2, scope: !17557, file: !17425, line: 184, type: !112)
!17561 = !DILocation(line: 184, column: 29, scope: !17557)
!17562 = !DILocalVariable(name: "package", arg: 3, scope: !17557, file: !17425, line: 184, type: !112)
!17563 = !DILocation(line: 184, column: 55, scope: !17557)
!17564 = !DILocalVariable(name: "version", arg: 4, scope: !17557, file: !17425, line: 185, type: !112)
!17565 = !DILocation(line: 185, column: 29, scope: !17557)
!17566 = !DILocalVariable(name: "authors", arg: 5, scope: !17557, file: !17425, line: 185, type: !1249)
!17567 = !DILocation(line: 185, column: 59, scope: !17557)
!17568 = !DILocalVariable(name: "n_authors", scope: !17557, file: !17425, line: 187, type: !52)
!17569 = !DILocation(line: 187, column: 10, scope: !17557)
!17570 = !DILocation(line: 189, column: 18, scope: !17571)
!17571 = distinct !DILexicalBlock(scope: !17557, file: !17425, line: 189, column: 3)
!17572 = !DILocation(line: 189, column: 8, scope: !17571)
!17573 = !DILocation(line: 189, column: 23, scope: !17574)
!17574 = distinct !DILexicalBlock(scope: !17571, file: !17425, line: 189, column: 3)
!17575 = !DILocation(line: 189, column: 31, scope: !17574)
!17576 = !DILocation(line: 189, column: 3, scope: !17571)
!17577 = !DILocation(line: 189, column: 52, scope: !17574)
!17578 = !DILocation(line: 189, column: 3, scope: !17574)
!17579 = distinct !{!17579, !17576, !17580}
!17580 = !DILocation(line: 190, column: 5, scope: !17571)
!17581 = !DILocation(line: 191, column: 20, scope: !17557)
!17582 = !DILocation(line: 191, column: 28, scope: !17557)
!17583 = !DILocation(line: 191, column: 42, scope: !17557)
!17584 = !DILocation(line: 191, column: 51, scope: !17557)
!17585 = !DILocation(line: 191, column: 60, scope: !17557)
!17586 = !DILocation(line: 191, column: 69, scope: !17557)
!17587 = !DILocation(line: 191, column: 3, scope: !17557)
!17588 = !DILocation(line: 192, column: 1, scope: !17557)
!17589 = distinct !DISubprogram(name: "version_etc_va", scope: !17425, file: !17425, line: 199, type: !1990, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !140)
!17590 = !DILocalVariable(name: "stream", arg: 1, scope: !17589, file: !17425, line: 199, type: !1947)
!17591 = !DILocation(line: 199, column: 23, scope: !17589)
!17592 = !DILocalVariable(name: "command_name", arg: 2, scope: !17589, file: !17425, line: 200, type: !112)
!17593 = !DILocation(line: 200, column: 29, scope: !17589)
!17594 = !DILocalVariable(name: "package", arg: 3, scope: !17589, file: !17425, line: 200, type: !112)
!17595 = !DILocation(line: 200, column: 55, scope: !17589)
!17596 = !DILocalVariable(name: "version", arg: 4, scope: !17589, file: !17425, line: 201, type: !112)
!17597 = !DILocation(line: 201, column: 29, scope: !17589)
!17598 = !DILocalVariable(name: "authors", arg: 5, scope: !17589, file: !17425, line: 201, type: !1992)
!17599 = !DILocation(line: 201, column: 46, scope: !17589)
!17600 = !DILocalVariable(name: "n_authors", scope: !17589, file: !17425, line: 203, type: !52)
!17601 = !DILocation(line: 203, column: 10, scope: !17589)
!17602 = !DILocalVariable(name: "authtab", scope: !17589, file: !17425, line: 204, type: !1999)
!17603 = !DILocation(line: 204, column: 15, scope: !17589)
!17604 = !DILocation(line: 206, column: 18, scope: !17605)
!17605 = distinct !DILexicalBlock(scope: !17589, file: !17425, line: 206, column: 3)
!17606 = !DILocation(line: 206, column: 8, scope: !17605)
!17607 = !DILocation(line: 207, column: 8, scope: !17608)
!17608 = distinct !DILexicalBlock(scope: !17605, file: !17425, line: 206, column: 3)
!17609 = !DILocation(line: 207, column: 18, scope: !17608)
!17610 = !DILocation(line: 208, column: 10, scope: !17608)
!17611 = !DILocation(line: 208, column: 35, scope: !17608)
!17612 = !DILocation(line: 208, column: 22, scope: !17608)
!17613 = !DILocation(line: 208, column: 14, scope: !17608)
!17614 = !DILocation(line: 208, column: 33, scope: !17608)
!17615 = !DILocation(line: 208, column: 67, scope: !17608)
!17616 = !DILocation(line: 0, scope: !17608)
!17617 = !DILocation(line: 206, column: 3, scope: !17605)
!17618 = !DILocation(line: 209, column: 17, scope: !17608)
!17619 = !DILocation(line: 206, column: 3, scope: !17608)
!17620 = distinct !{!17620, !17617, !17621}
!17621 = !DILocation(line: 210, column: 5, scope: !17605)
!17622 = !DILocation(line: 211, column: 20, scope: !17589)
!17623 = !DILocation(line: 211, column: 28, scope: !17589)
!17624 = !DILocation(line: 211, column: 42, scope: !17589)
!17625 = !DILocation(line: 211, column: 51, scope: !17589)
!17626 = !DILocation(line: 212, column: 20, scope: !17589)
!17627 = !DILocation(line: 212, column: 29, scope: !17589)
!17628 = !DILocation(line: 211, column: 3, scope: !17589)
!17629 = !DILocation(line: 213, column: 1, scope: !17589)
!17630 = distinct !DISubprogram(name: "version_etc", scope: !17425, file: !17425, line: 230, type: !17631, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !140)
!17631 = !DISubroutineType(types: !17632)
!17632 = !{null, !1947, !112, !112, !112, null}
!17633 = !DILocalVariable(name: "stream", arg: 1, scope: !17630, file: !17425, line: 230, type: !1947)
!17634 = !DILocation(line: 230, column: 20, scope: !17630)
!17635 = !DILocalVariable(name: "command_name", arg: 2, scope: !17630, file: !17425, line: 231, type: !112)
!17636 = !DILocation(line: 231, column: 26, scope: !17630)
!17637 = !DILocalVariable(name: "package", arg: 3, scope: !17630, file: !17425, line: 231, type: !112)
!17638 = !DILocation(line: 231, column: 52, scope: !17630)
!17639 = !DILocalVariable(name: "version", arg: 4, scope: !17630, file: !17425, line: 232, type: !112)
!17640 = !DILocation(line: 232, column: 26, scope: !17630)
!17641 = !DILocalVariable(name: "authors", scope: !17630, file: !17425, line: 234, type: !2002)
!17642 = !DILocation(line: 234, column: 11, scope: !17630)
!17643 = !DILocation(line: 236, column: 3, scope: !17630)
!17644 = !DILocation(line: 237, column: 19, scope: !17630)
!17645 = !DILocation(line: 237, column: 27, scope: !17630)
!17646 = !DILocation(line: 237, column: 41, scope: !17630)
!17647 = !DILocation(line: 237, column: 50, scope: !17630)
!17648 = !DILocation(line: 237, column: 59, scope: !17630)
!17649 = !DILocation(line: 237, column: 3, scope: !17630)
!17650 = !DILocation(line: 238, column: 3, scope: !17630)
!17651 = !DILocation(line: 239, column: 1, scope: !17630)
!17652 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !17425, file: !17425, line: 242, type: !131, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1942, retainedNodes: !140)
!17653 = !DILocation(line: 244, column: 3, scope: !17652)
!17654 = !DILocation(line: 249, column: 11, scope: !17652)
!17655 = !DILocation(line: 249, column: 3, scope: !17652)
!17656 = !DILocation(line: 255, column: 11, scope: !17652)
!17657 = !DILocation(line: 255, column: 3, scope: !17652)
!17658 = !DILocation(line: 260, column: 11, scope: !17652)
!17659 = !DILocation(line: 260, column: 3, scope: !17652)
!17660 = !DILocation(line: 262, column: 1, scope: !17652)
!17661 = !DILocation(line: 37, column: 9, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !1232, file: !1233, line: 37, column: 7)
!17663 = !DILocation(line: 37, column: 7, scope: !1232)
!17664 = !DILocalVariable(name: "can", scope: !17665, file: !1233, line: 39, type: !117)
!17665 = distinct !DILexicalBlock(scope: !17662, file: !1233, line: 38, column: 5)
!17666 = !DILocation(line: 39, column: 12, scope: !17665)
!17667 = !DILocation(line: 44, column: 14, scope: !17665)
!17668 = !DILocation(line: 44, column: 25, scope: !17665)
!17669 = !DILocation(line: 44, column: 11, scope: !17665)
!17670 = !DILocation(line: 46, column: 19, scope: !17665)
!17671 = !DILocation(line: 46, column: 17, scope: !17665)
!17672 = !DILocation(line: 47, column: 19, scope: !17665)
!17673 = !DILocation(line: 48, column: 5, scope: !17665)
!17674 = !DILocation(line: 50, column: 10, scope: !1232)
!17675 = !DILocation(line: 50, column: 3, scope: !1232)
!17676 = distinct !DISubprogram(name: "xnmalloc", scope: !17677, file: !17677, line: 99, type: !2009, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17677 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mohamad/clone/coreutils")
!17678 = !DILocalVariable(name: "n", arg: 1, scope: !17676, file: !17677, line: 99, type: !52)
!17679 = !DILocation(line: 99, column: 18, scope: !17676)
!17680 = !DILocalVariable(name: "s", arg: 2, scope: !17676, file: !17677, line: 99, type: !52)
!17681 = !DILocation(line: 99, column: 28, scope: !17676)
!17682 = !DILocation(line: 101, column: 7, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17676, file: !17677, line: 101, column: 7)
!17684 = !DILocation(line: 101, column: 7, scope: !17676)
!17685 = !DILocation(line: 102, column: 5, scope: !17683)
!17686 = !DILocation(line: 103, column: 19, scope: !17676)
!17687 = !DILocation(line: 103, column: 23, scope: !17676)
!17688 = !DILocation(line: 103, column: 21, scope: !17676)
!17689 = !DILocation(line: 103, column: 10, scope: !17676)
!17690 = !DILocation(line: 103, column: 3, scope: !17676)
!17691 = distinct !DISubprogram(name: "xmalloc", scope: !17692, file: !17692, line: 39, type: !2017, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17692 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!17693 = !DILocalVariable(name: "n", arg: 1, scope: !17691, file: !17692, line: 39, type: !52)
!17694 = !DILocation(line: 39, column: 17, scope: !17691)
!17695 = !DILocalVariable(name: "p", scope: !17691, file: !17692, line: 41, type: !47)
!17696 = !DILocation(line: 41, column: 9, scope: !17691)
!17697 = !DILocation(line: 41, column: 21, scope: !17691)
!17698 = !DILocation(line: 41, column: 13, scope: !17691)
!17699 = !DILocation(line: 42, column: 8, scope: !17700)
!17700 = distinct !DILexicalBlock(scope: !17691, file: !17692, line: 42, column: 7)
!17701 = !DILocation(line: 42, column: 10, scope: !17700)
!17702 = !DILocation(line: 42, column: 13, scope: !17700)
!17703 = !DILocation(line: 42, column: 15, scope: !17700)
!17704 = !DILocation(line: 42, column: 7, scope: !17691)
!17705 = !DILocation(line: 43, column: 5, scope: !17700)
!17706 = !DILocation(line: 44, column: 10, scope: !17691)
!17707 = !DILocation(line: 44, column: 3, scope: !17691)
!17708 = distinct !DISubprogram(name: "xnrealloc", scope: !17677, file: !17677, line: 112, type: !2011, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17709 = !DILocalVariable(name: "p", arg: 1, scope: !17708, file: !17677, line: 112, type: !47)
!17710 = !DILocation(line: 112, column: 18, scope: !17708)
!17711 = !DILocalVariable(name: "n", arg: 2, scope: !17708, file: !17677, line: 112, type: !52)
!17712 = !DILocation(line: 112, column: 28, scope: !17708)
!17713 = !DILocalVariable(name: "s", arg: 3, scope: !17708, file: !17677, line: 112, type: !52)
!17714 = !DILocation(line: 112, column: 38, scope: !17708)
!17715 = !DILocation(line: 114, column: 7, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17708, file: !17677, line: 114, column: 7)
!17717 = !DILocation(line: 114, column: 7, scope: !17708)
!17718 = !DILocation(line: 115, column: 5, scope: !17716)
!17719 = !DILocation(line: 116, column: 20, scope: !17708)
!17720 = !DILocation(line: 116, column: 23, scope: !17708)
!17721 = !DILocation(line: 116, column: 27, scope: !17708)
!17722 = !DILocation(line: 116, column: 25, scope: !17708)
!17723 = !DILocation(line: 116, column: 10, scope: !17708)
!17724 = !DILocation(line: 116, column: 3, scope: !17708)
!17725 = distinct !DISubprogram(name: "xrealloc", scope: !17692, file: !17692, line: 51, type: !2019, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17726 = !DILocalVariable(name: "p", arg: 1, scope: !17725, file: !17692, line: 51, type: !47)
!17727 = !DILocation(line: 51, column: 17, scope: !17725)
!17728 = !DILocalVariable(name: "n", arg: 2, scope: !17725, file: !17692, line: 51, type: !52)
!17729 = !DILocation(line: 51, column: 27, scope: !17725)
!17730 = !DILocation(line: 53, column: 8, scope: !17731)
!17731 = distinct !DILexicalBlock(scope: !17725, file: !17692, line: 53, column: 7)
!17732 = !DILocation(line: 53, column: 10, scope: !17731)
!17733 = !DILocation(line: 53, column: 13, scope: !17731)
!17734 = !DILocation(line: 53, column: 7, scope: !17725)
!17735 = !DILocation(line: 57, column: 13, scope: !17736)
!17736 = distinct !DILexicalBlock(scope: !17731, file: !17692, line: 54, column: 5)
!17737 = !DILocation(line: 57, column: 7, scope: !17736)
!17738 = !DILocation(line: 58, column: 7, scope: !17736)
!17739 = !DILocation(line: 61, column: 16, scope: !17725)
!17740 = !DILocation(line: 61, column: 19, scope: !17725)
!17741 = !DILocation(line: 61, column: 7, scope: !17725)
!17742 = !DILocation(line: 61, column: 5, scope: !17725)
!17743 = !DILocation(line: 62, column: 8, scope: !17744)
!17744 = distinct !DILexicalBlock(scope: !17725, file: !17692, line: 62, column: 7)
!17745 = !DILocation(line: 62, column: 10, scope: !17744)
!17746 = !DILocation(line: 62, column: 13, scope: !17744)
!17747 = !DILocation(line: 62, column: 7, scope: !17725)
!17748 = !DILocation(line: 63, column: 5, scope: !17744)
!17749 = !DILocation(line: 64, column: 10, scope: !17725)
!17750 = !DILocation(line: 64, column: 3, scope: !17725)
!17751 = !DILocation(line: 65, column: 1, scope: !17725)
!17752 = distinct !DISubprogram(name: "x2nrealloc", scope: !17677, file: !17677, line: 174, type: !2013, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17753 = !DILocalVariable(name: "p", arg: 1, scope: !17752, file: !17677, line: 174, type: !47)
!17754 = !DILocation(line: 174, column: 19, scope: !17752)
!17755 = !DILocalVariable(name: "pn", arg: 2, scope: !17752, file: !17677, line: 174, type: !599)
!17756 = !DILocation(line: 174, column: 30, scope: !17752)
!17757 = !DILocalVariable(name: "s", arg: 3, scope: !17752, file: !17677, line: 174, type: !52)
!17758 = !DILocation(line: 174, column: 41, scope: !17752)
!17759 = !DILocalVariable(name: "n", scope: !17752, file: !17677, line: 176, type: !52)
!17760 = !DILocation(line: 176, column: 10, scope: !17752)
!17761 = !DILocation(line: 176, column: 15, scope: !17752)
!17762 = !DILocation(line: 176, column: 14, scope: !17752)
!17763 = !DILocation(line: 178, column: 9, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17752, file: !17677, line: 178, column: 7)
!17765 = !DILocation(line: 178, column: 7, scope: !17752)
!17766 = !DILocation(line: 180, column: 13, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17768, file: !17677, line: 180, column: 11)
!17768 = distinct !DILexicalBlock(scope: !17764, file: !17677, line: 179, column: 5)
!17769 = !DILocation(line: 180, column: 11, scope: !17768)
!17770 = !DILocation(line: 188, column: 32, scope: !17771)
!17771 = distinct !DILexicalBlock(scope: !17767, file: !17677, line: 181, column: 9)
!17772 = !DILocation(line: 188, column: 30, scope: !17771)
!17773 = !DILocation(line: 188, column: 13, scope: !17771)
!17774 = !DILocation(line: 189, column: 17, scope: !17771)
!17775 = !DILocation(line: 189, column: 16, scope: !17771)
!17776 = !DILocation(line: 189, column: 13, scope: !17771)
!17777 = !DILocation(line: 190, column: 9, scope: !17771)
!17778 = !DILocation(line: 191, column: 11, scope: !17779)
!17779 = distinct !DILexicalBlock(scope: !17768, file: !17677, line: 191, column: 11)
!17780 = !DILocation(line: 191, column: 11, scope: !17768)
!17781 = !DILocation(line: 192, column: 9, scope: !17779)
!17782 = !DILocation(line: 193, column: 5, scope: !17768)
!17783 = !DILocation(line: 200, column: 71, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17785, file: !17677, line: 200, column: 11)
!17785 = distinct !DILexicalBlock(scope: !17764, file: !17677, line: 195, column: 5)
!17786 = !DILocation(line: 200, column: 69, scope: !17784)
!17787 = !DILocation(line: 201, column: 14, scope: !17784)
!17788 = !DILocation(line: 201, column: 11, scope: !17784)
!17789 = !DILocation(line: 200, column: 11, scope: !17785)
!17790 = !DILocation(line: 202, column: 9, scope: !17784)
!17791 = !DILocation(line: 203, column: 12, scope: !17785)
!17792 = !DILocation(line: 203, column: 14, scope: !17785)
!17793 = !DILocation(line: 203, column: 18, scope: !17785)
!17794 = !DILocation(line: 203, column: 9, scope: !17785)
!17795 = !DILocation(line: 206, column: 9, scope: !17752)
!17796 = !DILocation(line: 206, column: 4, scope: !17752)
!17797 = !DILocation(line: 206, column: 7, scope: !17752)
!17798 = !DILocation(line: 207, column: 20, scope: !17752)
!17799 = !DILocation(line: 207, column: 23, scope: !17752)
!17800 = !DILocation(line: 207, column: 27, scope: !17752)
!17801 = !DILocation(line: 207, column: 25, scope: !17752)
!17802 = !DILocation(line: 207, column: 10, scope: !17752)
!17803 = !DILocation(line: 207, column: 3, scope: !17752)
!17804 = distinct !DISubprogram(name: "xcharalloc", scope: !17677, file: !17677, line: 216, type: !2015, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17805 = !DILocalVariable(name: "n", arg: 1, scope: !17804, file: !17677, line: 216, type: !52)
!17806 = !DILocation(line: 216, column: 20, scope: !17804)
!17807 = !DILocation(line: 218, column: 10, scope: !17804)
!17808 = !DILocation(line: 218, column: 3, scope: !17804)
!17809 = distinct !DISubprogram(name: "x2realloc", scope: !17692, file: !17692, line: 74, type: !2021, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17810 = !DILocalVariable(name: "p", arg: 1, scope: !17809, file: !17692, line: 74, type: !47)
!17811 = !DILocation(line: 74, column: 18, scope: !17809)
!17812 = !DILocalVariable(name: "pn", arg: 2, scope: !17809, file: !17692, line: 74, type: !599)
!17813 = !DILocation(line: 74, column: 29, scope: !17809)
!17814 = !DILocation(line: 76, column: 22, scope: !17809)
!17815 = !DILocation(line: 76, column: 25, scope: !17809)
!17816 = !DILocation(line: 76, column: 10, scope: !17809)
!17817 = !DILocation(line: 76, column: 3, scope: !17809)
!17818 = distinct !DISubprogram(name: "xzalloc", scope: !17692, file: !17692, line: 84, type: !2017, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17819 = !DILocalVariable(name: "s", arg: 1, scope: !17818, file: !17692, line: 84, type: !52)
!17820 = !DILocation(line: 84, column: 17, scope: !17818)
!17821 = !DILocation(line: 86, column: 27, scope: !17818)
!17822 = !DILocation(line: 86, column: 18, scope: !17818)
!17823 = !DILocation(line: 86, column: 34, scope: !17818)
!17824 = !DILocation(line: 86, column: 10, scope: !17818)
!17825 = !DILocation(line: 86, column: 3, scope: !17818)
!17826 = distinct !DISubprogram(name: "xcalloc", scope: !17692, file: !17692, line: 93, type: !2009, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17827 = !DILocalVariable(name: "n", arg: 1, scope: !17826, file: !17692, line: 93, type: !52)
!17828 = !DILocation(line: 93, column: 17, scope: !17826)
!17829 = !DILocalVariable(name: "s", arg: 2, scope: !17826, file: !17692, line: 93, type: !52)
!17830 = !DILocation(line: 93, column: 27, scope: !17826)
!17831 = !DILocalVariable(name: "p", scope: !17826, file: !17692, line: 95, type: !47)
!17832 = !DILocation(line: 95, column: 9, scope: !17826)
!17833 = !DILocation(line: 100, column: 7, scope: !17834)
!17834 = distinct !DILexicalBlock(scope: !17826, file: !17692, line: 100, column: 7)
!17835 = !DILocation(line: 101, column: 7, scope: !17834)
!17836 = !DILocation(line: 101, column: 26, scope: !17834)
!17837 = !DILocation(line: 101, column: 29, scope: !17834)
!17838 = !DILocation(line: 101, column: 18, scope: !17834)
!17839 = !DILocation(line: 101, column: 16, scope: !17834)
!17840 = !DILocation(line: 100, column: 7, scope: !17826)
!17841 = !DILocation(line: 102, column: 5, scope: !17834)
!17842 = !DILocation(line: 103, column: 10, scope: !17826)
!17843 = !DILocation(line: 103, column: 3, scope: !17826)
!17844 = distinct !DISubprogram(name: "xmemdup", scope: !17692, file: !17692, line: 111, type: !426, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17845 = !DILocalVariable(name: "p", arg: 1, scope: !17844, file: !17692, line: 111, type: !428)
!17846 = !DILocation(line: 111, column: 22, scope: !17844)
!17847 = !DILocalVariable(name: "s", arg: 2, scope: !17844, file: !17692, line: 111, type: !52)
!17848 = !DILocation(line: 111, column: 32, scope: !17844)
!17849 = !DILocation(line: 113, column: 27, scope: !17844)
!17850 = !DILocation(line: 113, column: 18, scope: !17844)
!17851 = !DILocation(line: 113, column: 31, scope: !17844)
!17852 = !DILocation(line: 113, column: 34, scope: !17844)
!17853 = !DILocation(line: 113, column: 10, scope: !17844)
!17854 = !DILocation(line: 113, column: 3, scope: !17844)
!17855 = distinct !DISubprogram(name: "xstrdup", scope: !17692, file: !17692, line: 119, type: !979, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2006, retainedNodes: !140)
!17856 = !DILocalVariable(name: "string", arg: 1, scope: !17855, file: !17692, line: 119, type: !112)
!17857 = !DILocation(line: 119, column: 22, scope: !17855)
!17858 = !DILocation(line: 121, column: 19, scope: !17855)
!17859 = !DILocation(line: 121, column: 35, scope: !17855)
!17860 = !DILocation(line: 121, column: 27, scope: !17855)
!17861 = !DILocation(line: 121, column: 43, scope: !17855)
!17862 = !DILocation(line: 121, column: 10, scope: !17855)
!17863 = !DILocation(line: 121, column: 3, scope: !17855)
!17864 = distinct !DISubprogram(name: "xalloc_die", scope: !17865, file: !17865, line: 32, type: !131, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2023, retainedNodes: !140)
!17865 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!17866 = !DILocation(line: 34, column: 10, scope: !17864)
!17867 = !DILocation(line: 34, column: 33, scope: !17864)
!17868 = !DILocation(line: 34, column: 3, scope: !17864)
!17869 = !DILocation(line: 40, column: 3, scope: !17864)
!17870 = distinct !DISubprogram(name: "xfts_open", scope: !17871, file: !17871, line: 33, type: !2029, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2026, retainedNodes: !140)
!17871 = !DIFile(filename: "lib/xfts.c", directory: "/home/mohamad/clone/coreutils")
!17872 = !DILocalVariable(name: "argv", arg: 1, scope: !17870, file: !17871, line: 33, type: !1331)
!17873 = !DILocation(line: 33, column: 26, scope: !17870)
!17874 = !DILocalVariable(name: "options", arg: 2, scope: !17870, file: !17871, line: 33, type: !5)
!17875 = !DILocation(line: 33, column: 36, scope: !17870)
!17876 = !DILocalVariable(name: "compar", arg: 3, scope: !17870, file: !17871, line: 34, type: !2113)
!17877 = !DILocation(line: 34, column: 18, scope: !17870)
!17878 = !DILocalVariable(name: "fts", scope: !17870, file: !17871, line: 36, type: !2031)
!17879 = !DILocation(line: 36, column: 8, scope: !17870)
!17880 = !DILocation(line: 36, column: 24, scope: !17870)
!17881 = !DILocation(line: 36, column: 30, scope: !17870)
!17882 = !DILocation(line: 36, column: 38, scope: !17870)
!17883 = !DILocation(line: 36, column: 51, scope: !17870)
!17884 = !DILocation(line: 36, column: 14, scope: !17870)
!17885 = !DILocation(line: 37, column: 7, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17870, file: !17871, line: 37, column: 7)
!17887 = !DILocation(line: 37, column: 11, scope: !17886)
!17888 = !DILocation(line: 37, column: 7, scope: !17870)
!17889 = !DILocation(line: 41, column: 7, scope: !17890)
!17890 = distinct !DILexicalBlock(scope: !17886, file: !17871, line: 38, column: 5)
!17891 = !DILocation(line: 42, column: 7, scope: !17890)
!17892 = !DILocation(line: 45, column: 10, scope: !17870)
!17893 = !DILocation(line: 45, column: 3, scope: !17870)
!17894 = distinct !DISubprogram(name: "cycle_warning_required", scope: !17871, file: !17871, line: 56, type: !2120, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2026, retainedNodes: !140)
!17895 = !DILocalVariable(name: "fts", arg: 1, scope: !17894, file: !17871, line: 56, type: !2122)
!17896 = !DILocation(line: 56, column: 36, scope: !17894)
!17897 = !DILocalVariable(name: "ent", arg: 2, scope: !17894, file: !17871, line: 56, type: !2117)
!17898 = !DILocation(line: 56, column: 55, scope: !17894)
!17899 = !DILocation(line: 62, column: 12, scope: !17894)
!17900 = !{!3813, !2981, i64 72}
!17901 = !DILocation(line: 62, column: 38, scope: !17894)
!17902 = !DILocation(line: 62, column: 42, scope: !17894)
!17903 = !DILocation(line: 63, column: 11, scope: !17894)
!17904 = !DILocation(line: 63, column: 15, scope: !17894)
!17905 = !DILocation(line: 63, column: 41, scope: !17894)
!17906 = !DILocation(line: 63, column: 44, scope: !17894)
!17907 = !DILocation(line: 64, column: 15, scope: !17894)
!17908 = !DILocation(line: 64, column: 18, scope: !17894)
!17909 = !DILocation(line: 64, column: 23, scope: !17894)
!17910 = !DILocation(line: 64, column: 33, scope: !17894)
!17911 = !DILocation(line: 0, scope: !17894)
!17912 = !DILocation(line: 62, column: 3, scope: !17894)
!17913 = distinct !DISubprogram(name: "yesno", scope: !17914, file: !17914, line: 32, type: !1234, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2124, retainedNodes: !140)
!17914 = !DIFile(filename: "lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!17915 = !DILocalVariable(name: "yes", scope: !17913, file: !17914, line: 34, type: !117)
!17916 = !DILocation(line: 34, column: 8, scope: !17913)
!17917 = !DILocalVariable(name: "response", scope: !17913, file: !17914, line: 37, type: !7)
!17918 = !DILocation(line: 37, column: 9, scope: !17913)
!17919 = !DILocalVariable(name: "response_size", scope: !17913, file: !17914, line: 38, type: !52)
!17920 = !DILocation(line: 38, column: 10, scope: !17913)
!17921 = !DILocalVariable(name: "response_len", scope: !17913, file: !17914, line: 39, type: !579)
!17922 = !DILocation(line: 39, column: 11, scope: !17913)
!17923 = !DILocation(line: 39, column: 62, scope: !17913)
!17924 = !DILocation(line: 39, column: 26, scope: !17913)
!17925 = !DILocation(line: 41, column: 7, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17913, file: !17914, line: 41, column: 7)
!17927 = !DILocation(line: 41, column: 20, scope: !17926)
!17928 = !DILocation(line: 41, column: 7, scope: !17913)
!17929 = !DILocation(line: 42, column: 9, scope: !17926)
!17930 = !DILocation(line: 42, column: 5, scope: !17926)
!17931 = !DILocation(line: 47, column: 11, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17933, file: !17914, line: 47, column: 11)
!17933 = distinct !DILexicalBlock(scope: !17926, file: !17914, line: 44, column: 5)
!17934 = !DILocation(line: 47, column: 20, scope: !17932)
!17935 = !DILocation(line: 47, column: 33, scope: !17932)
!17936 = !DILocation(line: 47, column: 38, scope: !17932)
!17937 = !DILocation(line: 47, column: 11, scope: !17933)
!17938 = !DILocation(line: 48, column: 9, scope: !17932)
!17939 = !DILocation(line: 48, column: 18, scope: !17932)
!17940 = !DILocation(line: 48, column: 31, scope: !17932)
!17941 = !DILocation(line: 48, column: 36, scope: !17932)
!17942 = !DILocation(line: 49, column: 27, scope: !17933)
!17943 = !DILocation(line: 49, column: 18, scope: !17933)
!17944 = !DILocation(line: 49, column: 16, scope: !17933)
!17945 = !DILocation(line: 49, column: 11, scope: !17933)
!17946 = !DILocation(line: 52, column: 9, scope: !17913)
!17947 = !DILocation(line: 52, column: 3, scope: !17913)
!17948 = !DILocation(line: 62, column: 10, scope: !17913)
!17949 = !DILocation(line: 62, column: 3, scope: !17913)
!17950 = distinct !DISubprogram(name: "rpl_fflush", scope: !17951, file: !17951, line: 129, type: !2168, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2165, retainedNodes: !140)
!17951 = !DIFile(filename: "lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!17952 = !DILocalVariable(name: "stream", arg: 1, scope: !17950, file: !17951, line: 129, type: !2170)
!17953 = !DILocation(line: 129, column: 19, scope: !17950)
!17954 = !DILocation(line: 150, column: 7, scope: !17955)
!17955 = distinct !DILexicalBlock(scope: !17950, file: !17951, line: 150, column: 7)
!17956 = !DILocation(line: 150, column: 14, scope: !17955)
!17957 = !DILocation(line: 150, column: 22, scope: !17955)
!17958 = !DILocation(line: 150, column: 27, scope: !17955)
!17959 = !DILocation(line: 150, column: 7, scope: !17950)
!17960 = !DILocation(line: 151, column: 20, scope: !17955)
!17961 = !DILocation(line: 151, column: 12, scope: !17955)
!17962 = !DILocation(line: 151, column: 5, scope: !17955)
!17963 = !DILocation(line: 156, column: 44, scope: !17950)
!17964 = !DILocation(line: 156, column: 3, scope: !17950)
!17965 = !DILocation(line: 158, column: 18, scope: !17950)
!17966 = !DILocation(line: 158, column: 10, scope: !17950)
!17967 = !DILocation(line: 158, column: 3, scope: !17950)
!17968 = !DILocation(line: 232, column: 1, scope: !17950)
!17969 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !17951, file: !17951, line: 41, type: !2210, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2165, retainedNodes: !140)
!17970 = !DILocalVariable(name: "fp", arg: 1, scope: !17969, file: !17951, line: 41, type: !2170)
!17971 = !DILocation(line: 41, column: 48, scope: !17969)
!17972 = !DILocation(line: 43, column: 7, scope: !17973)
!17973 = distinct !DILexicalBlock(scope: !17969, file: !17951, line: 43, column: 7)
!17974 = !DILocation(line: 43, column: 11, scope: !17973)
!17975 = !{!17976, !2981, i64 0}
!17976 = !{!"_IO_FILE", !2981, i64 0, !2994, i64 8, !2994, i64 16, !2994, i64 24, !2994, i64 32, !2994, i64 40, !2994, i64 48, !2994, i64 56, !2994, i64 64, !2994, i64 72, !2994, i64 80, !2994, i64 88, !2994, i64 96, !2994, i64 104, !2981, i64 112, !2981, i64 116, !3178, i64 120, !3800, i64 128, !2982, i64 130, !2982, i64 131, !2994, i64 136, !3178, i64 144, !2994, i64 152, !2994, i64 160, !2994, i64 168, !2994, i64 176, !3178, i64 184, !2981, i64 192, !2982, i64 196}
!17977 = !DILocation(line: 43, column: 18, scope: !17973)
!17978 = !DILocation(line: 43, column: 7, scope: !17969)
!17979 = !DILocation(line: 45, column: 13, scope: !17973)
!17980 = !DILocation(line: 45, column: 5, scope: !17973)
!17981 = !DILocation(line: 46, column: 1, scope: !17969)
!17982 = distinct !DISubprogram(name: "freadahead", scope: !17983, file: !17983, line: 34, type: !2215, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2212, retainedNodes: !140)
!17983 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!17984 = !DILocalVariable(name: "fp", arg: 1, scope: !17982, file: !17983, line: 34, type: !2217)
!17985 = !DILocation(line: 34, column: 19, scope: !17982)
!17986 = !DILocation(line: 38, column: 7, scope: !17987)
!17987 = distinct !DILexicalBlock(scope: !17982, file: !17983, line: 38, column: 7)
!17988 = !DILocation(line: 38, column: 11, scope: !17987)
!17989 = !{!17976, !2994, i64 40}
!17990 = !DILocation(line: 38, column: 27, scope: !17987)
!17991 = !DILocation(line: 38, column: 31, scope: !17987)
!17992 = !{!17976, !2994, i64 32}
!17993 = !DILocation(line: 38, column: 25, scope: !17987)
!17994 = !DILocation(line: 38, column: 7, scope: !17982)
!17995 = !DILocation(line: 39, column: 5, scope: !17987)
!17996 = !DILocation(line: 40, column: 11, scope: !17982)
!17997 = !DILocation(line: 40, column: 15, scope: !17982)
!17998 = !{!17976, !2994, i64 16}
!17999 = !DILocation(line: 40, column: 30, scope: !17982)
!18000 = !DILocation(line: 40, column: 34, scope: !17982)
!18001 = !{!17976, !2994, i64 8}
!18002 = !DILocation(line: 40, column: 28, scope: !17982)
!18003 = !DILocation(line: 41, column: 13, scope: !17982)
!18004 = !DILocation(line: 41, column: 17, scope: !17982)
!18005 = !DILocation(line: 41, column: 24, scope: !17982)
!18006 = !DILocation(line: 41, column: 42, scope: !17982)
!18007 = !DILocation(line: 41, column: 46, scope: !17982)
!18008 = !{!17976, !2994, i64 88}
!18009 = !DILocation(line: 41, column: 61, scope: !17982)
!18010 = !DILocation(line: 41, column: 65, scope: !17982)
!18011 = !{!17976, !2994, i64 72}
!18012 = !DILocation(line: 41, column: 59, scope: !17982)
!18013 = !DILocation(line: 41, column: 10, scope: !17982)
!18014 = !DILocation(line: 40, column: 3, scope: !17982)
!18015 = !DILocation(line: 103, column: 1, scope: !17982)
!18016 = distinct !DISubprogram(name: "rpl_fseeko", scope: !18017, file: !18017, line: 28, type: !2260, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2257, retainedNodes: !140)
!18017 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!18018 = !DILocalVariable(name: "fp", arg: 1, scope: !18016, file: !18017, line: 28, type: !2262)
!18019 = !DILocation(line: 28, column: 15, scope: !18016)
!18020 = !DILocalVariable(name: "offset", arg: 2, scope: !18016, file: !18017, line: 28, type: !245)
!18021 = !DILocation(line: 28, column: 25, scope: !18016)
!18022 = !DILocalVariable(name: "whence", arg: 3, scope: !18016, file: !18017, line: 28, type: !5)
!18023 = !DILocation(line: 28, column: 37, scope: !18016)
!18024 = !DILocation(line: 52, column: 7, scope: !18025)
!18025 = distinct !DILexicalBlock(scope: !18016, file: !18017, line: 52, column: 7)
!18026 = !DILocation(line: 52, column: 11, scope: !18025)
!18027 = !DILocation(line: 52, column: 27, scope: !18025)
!18028 = !DILocation(line: 52, column: 31, scope: !18025)
!18029 = !DILocation(line: 52, column: 24, scope: !18025)
!18030 = !DILocation(line: 53, column: 7, scope: !18025)
!18031 = !DILocation(line: 53, column: 10, scope: !18025)
!18032 = !DILocation(line: 53, column: 14, scope: !18025)
!18033 = !DILocation(line: 53, column: 31, scope: !18025)
!18034 = !DILocation(line: 53, column: 35, scope: !18025)
!18035 = !DILocation(line: 53, column: 28, scope: !18025)
!18036 = !DILocation(line: 54, column: 7, scope: !18025)
!18037 = !DILocation(line: 54, column: 10, scope: !18025)
!18038 = !DILocation(line: 54, column: 14, scope: !18025)
!18039 = !DILocation(line: 54, column: 28, scope: !18025)
!18040 = !DILocation(line: 52, column: 7, scope: !18016)
!18041 = !DILocalVariable(name: "pos", scope: !18042, file: !18017, line: 117, type: !245)
!18042 = distinct !DILexicalBlock(scope: !18025, file: !18017, line: 113, column: 5)
!18043 = !DILocation(line: 117, column: 13, scope: !18042)
!18044 = !DILocation(line: 117, column: 34, scope: !18042)
!18045 = !DILocation(line: 117, column: 26, scope: !18042)
!18046 = !DILocation(line: 117, column: 39, scope: !18042)
!18047 = !DILocation(line: 117, column: 47, scope: !18042)
!18048 = !DILocation(line: 117, column: 19, scope: !18042)
!18049 = !DILocation(line: 118, column: 11, scope: !18050)
!18050 = distinct !DILexicalBlock(scope: !18042, file: !18017, line: 118, column: 11)
!18051 = !DILocation(line: 118, column: 15, scope: !18050)
!18052 = !DILocation(line: 118, column: 11, scope: !18042)
!18053 = !DILocation(line: 124, column: 11, scope: !18054)
!18054 = distinct !DILexicalBlock(scope: !18050, file: !18017, line: 119, column: 9)
!18055 = !DILocation(line: 129, column: 7, scope: !18042)
!18056 = !DILocation(line: 129, column: 11, scope: !18042)
!18057 = !DILocation(line: 129, column: 18, scope: !18042)
!18058 = !DILocation(line: 130, column: 21, scope: !18042)
!18059 = !DILocation(line: 130, column: 7, scope: !18042)
!18060 = !DILocation(line: 130, column: 11, scope: !18042)
!18061 = !DILocation(line: 130, column: 19, scope: !18042)
!18062 = !{!17976, !3178, i64 144}
!18063 = !DILocation(line: 161, column: 7, scope: !18042)
!18064 = !DILocation(line: 163, column: 18, scope: !18016)
!18065 = !DILocation(line: 163, column: 22, scope: !18016)
!18066 = !DILocation(line: 163, column: 30, scope: !18016)
!18067 = !DILocation(line: 163, column: 10, scope: !18016)
!18068 = !DILocation(line: 163, column: 3, scope: !18016)
!18069 = !DILocation(line: 164, column: 1, scope: !18016)
!18070 = distinct !DISubprogram(name: "rpl_fts_open", scope: !2306, file: !2306, line: 358, type: !2409, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18071 = !DILocalVariable(name: "argv", arg: 1, scope: !18070, file: !2306, line: 358, type: !1331)
!18072 = !DILocation(line: 358, column: 25, scope: !18070)
!18073 = !DILocalVariable(name: "options", arg: 2, scope: !18070, file: !2306, line: 359, type: !5)
!18074 = !DILocation(line: 359, column: 24, scope: !18070)
!18075 = !DILocalVariable(name: "compar", arg: 3, scope: !18070, file: !2306, line: 360, type: !2411)
!18076 = !DILocation(line: 360, column: 17, scope: !18070)
!18077 = !DILocalVariable(name: "sp", scope: !18070, file: !2306, line: 362, type: !2331)
!18078 = !DILocation(line: 362, column: 23, scope: !18070)
!18079 = !DILocalVariable(name: "p", scope: !18070, file: !2306, line: 363, type: !2414)
!18080 = !DILocation(line: 363, column: 26, scope: !18070)
!18081 = !DILocalVariable(name: "root", scope: !18070, file: !2306, line: 363, type: !2414)
!18082 = !DILocation(line: 363, column: 30, scope: !18070)
!18083 = !DILocalVariable(name: "nitems", scope: !18070, file: !2306, line: 364, type: !52)
!18084 = !DILocation(line: 364, column: 25, scope: !18070)
!18085 = !DILocalVariable(name: "parent", scope: !18070, file: !2306, line: 365, type: !2414)
!18086 = !DILocation(line: 365, column: 17, scope: !18070)
!18087 = !DILocalVariable(name: "tmp", scope: !18070, file: !2306, line: 366, type: !2414)
!18088 = !DILocation(line: 366, column: 17, scope: !18070)
!18089 = !DILocalVariable(name: "defer_stat", scope: !18070, file: !2306, line: 367, type: !117)
!18090 = !DILocation(line: 367, column: 14, scope: !18070)
!18091 = !DILocation(line: 370, column: 13, scope: !18092)
!18092 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 370, column: 13)
!18093 = !DILocation(line: 370, column: 21, scope: !18092)
!18094 = !DILocation(line: 370, column: 13, scope: !18070)
!18095 = !DILocation(line: 371, column: 17, scope: !18096)
!18096 = distinct !DILexicalBlock(scope: !18092, file: !2306, line: 370, column: 40)
!18097 = !DILocation(line: 372, column: 17, scope: !18096)
!18098 = !DILocation(line: 374, column: 14, scope: !18099)
!18099 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 374, column: 13)
!18100 = !DILocation(line: 374, column: 22, scope: !18099)
!18101 = !DILocation(line: 374, column: 37, scope: !18099)
!18102 = !DILocation(line: 374, column: 41, scope: !18099)
!18103 = !DILocation(line: 374, column: 49, scope: !18099)
!18104 = !DILocation(line: 374, column: 13, scope: !18070)
!18105 = !DILocation(line: 375, column: 17, scope: !18106)
!18106 = distinct !DILexicalBlock(scope: !18099, file: !2306, line: 374, column: 63)
!18107 = !DILocation(line: 376, column: 17, scope: !18106)
!18108 = !DILocation(line: 378, column: 17, scope: !18109)
!18109 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 378, column: 14)
!18110 = !DILocation(line: 378, column: 25, scope: !18109)
!18111 = !DILocation(line: 378, column: 14, scope: !18070)
!18112 = !DILocation(line: 379, column: 17, scope: !18113)
!18113 = distinct !DILexicalBlock(scope: !18109, file: !2306, line: 378, column: 58)
!18114 = !DILocation(line: 380, column: 17, scope: !18113)
!18115 = !DILocation(line: 384, column: 19, scope: !18116)
!18116 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 384, column: 13)
!18117 = !DILocation(line: 384, column: 17, scope: !18116)
!18118 = !DILocation(line: 384, column: 40, scope: !18116)
!18119 = !DILocation(line: 384, column: 13, scope: !18070)
!18120 = !DILocation(line: 385, column: 17, scope: !18116)
!18121 = !DILocation(line: 386, column: 16, scope: !18070)
!18122 = !DILocation(line: 386, column: 9, scope: !18070)
!18123 = !DILocation(line: 387, column: 26, scope: !18070)
!18124 = !DILocation(line: 387, column: 9, scope: !18070)
!18125 = !DILocation(line: 387, column: 13, scope: !18070)
!18126 = !DILocation(line: 387, column: 24, scope: !18070)
!18127 = !{!3813, !2994, i64 64}
!18128 = !DILocation(line: 388, column: 27, scope: !18070)
!18129 = !DILocation(line: 388, column: 9, scope: !18070)
!18130 = !DILocation(line: 388, column: 13, scope: !18070)
!18131 = !DILocation(line: 388, column: 25, scope: !18070)
!18132 = !DILocation(line: 391, column: 13, scope: !18133)
!18133 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 391, column: 13)
!18134 = !DILocation(line: 391, column: 13, scope: !18070)
!18135 = !DILocation(line: 392, column: 17, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18133, file: !2306, line: 391, column: 33)
!18137 = !DILocation(line: 393, column: 17, scope: !18136)
!18138 = !DILocation(line: 394, column: 9, scope: !18136)
!18139 = !DILocation(line: 397, column: 9, scope: !18070)
!18140 = !DILocation(line: 397, column: 13, scope: !18070)
!18141 = !DILocation(line: 397, column: 24, scope: !18070)
!18142 = !DILocation(line: 398, column: 14, scope: !18143)
!18143 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 398, column: 14)
!18144 = !DILocation(line: 398, column: 31, scope: !18143)
!18145 = !DILocation(line: 398, column: 14, scope: !18070)
!18146 = !DILocalVariable(name: "fd", scope: !18147, file: !2306, line: 404, type: !5)
!18147 = distinct !DILexicalBlock(scope: !18143, file: !2306, line: 399, column: 11)
!18148 = !DILocation(line: 404, column: 17, scope: !18147)
!18149 = !DILocation(line: 404, column: 22, scope: !18147)
!18150 = !DILocation(line: 405, column: 17, scope: !18151)
!18151 = distinct !DILexicalBlock(scope: !18147, file: !2306, line: 405, column: 17)
!18152 = !DILocation(line: 405, column: 20, scope: !18151)
!18153 = !DILocation(line: 405, column: 17, scope: !18147)
!18154 = !DILocation(line: 423, column: 15, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18151, file: !2306, line: 406, column: 15)
!18156 = !DILocation(line: 426, column: 24, scope: !18157)
!18157 = distinct !DILexicalBlock(scope: !18151, file: !2306, line: 425, column: 15)
!18158 = !DILocation(line: 426, column: 17, scope: !18157)
!18159 = !DILocation(line: 428, column: 11, scope: !18147)
!18160 = !DILocalVariable(name: "maxarglen", scope: !18161, file: !2306, line: 438, type: !52)
!18161 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 437, column: 9)
!18162 = !DILocation(line: 438, column: 18, scope: !18161)
!18163 = !DILocation(line: 438, column: 44, scope: !18161)
!18164 = !DILocation(line: 438, column: 30, scope: !18161)
!18165 = !DILocation(line: 439, column: 28, scope: !18166)
!18166 = distinct !DILexicalBlock(scope: !18161, file: !2306, line: 439, column: 15)
!18167 = !DILocation(line: 439, column: 32, scope: !18166)
!18168 = !DILocation(line: 439, column: 17, scope: !18166)
!18169 = !DILocation(line: 439, column: 15, scope: !18161)
!18170 = !DILocation(line: 440, column: 19, scope: !18166)
!18171 = !DILocation(line: 444, column: 14, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 444, column: 13)
!18173 = !DILocation(line: 444, column: 13, scope: !18172)
!18174 = !DILocation(line: 444, column: 19, scope: !18172)
!18175 = !DILocation(line: 444, column: 13, scope: !18070)
!18176 = !DILocation(line: 445, column: 41, scope: !18177)
!18177 = distinct !DILexicalBlock(scope: !18178, file: !2306, line: 445, column: 21)
!18178 = distinct !DILexicalBlock(scope: !18172, file: !2306, line: 444, column: 28)
!18179 = !DILocation(line: 445, column: 31, scope: !18177)
!18180 = !DILocation(line: 445, column: 29, scope: !18177)
!18181 = !DILocation(line: 445, column: 53, scope: !18177)
!18182 = !DILocation(line: 445, column: 21, scope: !18178)
!18183 = !DILocation(line: 446, column: 25, scope: !18177)
!18184 = !DILocation(line: 447, column: 17, scope: !18178)
!18185 = !DILocation(line: 447, column: 25, scope: !18178)
!18186 = !DILocation(line: 447, column: 35, scope: !18178)
!18187 = !DILocation(line: 448, column: 17, scope: !18178)
!18188 = !DILocation(line: 448, column: 25, scope: !18178)
!18189 = !DILocation(line: 448, column: 46, scope: !18178)
!18190 = !DILocation(line: 449, column: 11, scope: !18178)
!18191 = !DILocation(line: 462, column: 23, scope: !18070)
!18192 = !DILocation(line: 462, column: 30, scope: !18070)
!18193 = !DILocation(line: 462, column: 38, scope: !18070)
!18194 = !DILocation(line: 462, column: 41, scope: !18070)
!18195 = !DILocation(line: 462, column: 20, scope: !18070)
!18196 = !DILocation(line: 465, column: 19, scope: !18197)
!18197 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 465, column: 9)
!18198 = !DILocation(line: 465, column: 34, scope: !18197)
!18199 = !DILocation(line: 465, column: 14, scope: !18197)
!18200 = !DILocation(line: 465, column: 40, scope: !18201)
!18201 = distinct !DILexicalBlock(scope: !18197, file: !2306, line: 465, column: 9)
!18202 = !DILocation(line: 465, column: 39, scope: !18201)
!18203 = !DILocation(line: 465, column: 45, scope: !18201)
!18204 = !DILocation(line: 465, column: 9, scope: !18197)
!18205 = !DILocalVariable(name: "len", scope: !18206, file: !2306, line: 467, type: !52)
!18206 = distinct !DILexicalBlock(scope: !18201, file: !2306, line: 465, column: 72)
!18207 = !DILocation(line: 467, column: 24, scope: !18206)
!18208 = !DILocation(line: 467, column: 38, scope: !18206)
!18209 = !DILocation(line: 467, column: 37, scope: !18206)
!18210 = !DILocation(line: 467, column: 30, scope: !18206)
!18211 = !DILocation(line: 469, column: 25, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18206, file: !2306, line: 469, column: 22)
!18213 = !DILocation(line: 469, column: 33, scope: !18212)
!18214 = !DILocation(line: 469, column: 22, scope: !18206)
!18215 = !DILocalVariable(name: "v", scope: !18216, file: !2306, line: 473, type: !112)
!18216 = distinct !DILexicalBlock(scope: !18212, file: !2306, line: 470, column: 19)
!18217 = !DILocation(line: 473, column: 33, scope: !18216)
!18218 = !DILocation(line: 473, column: 38, scope: !18216)
!18219 = !DILocation(line: 473, column: 37, scope: !18216)
!18220 = !DILocation(line: 474, column: 29, scope: !18221)
!18221 = distinct !DILexicalBlock(scope: !18216, file: !2306, line: 474, column: 25)
!18222 = !DILocation(line: 474, column: 27, scope: !18221)
!18223 = !DILocation(line: 474, column: 33, scope: !18221)
!18224 = !DILocation(line: 474, column: 36, scope: !18221)
!18225 = !DILocation(line: 474, column: 38, scope: !18221)
!18226 = !DILocation(line: 474, column: 42, scope: !18221)
!18227 = !DILocation(line: 474, column: 47, scope: !18221)
!18228 = !DILocation(line: 474, column: 25, scope: !18216)
!18229 = !DILocation(line: 475, column: 23, scope: !18221)
!18230 = !DILocation(line: 475, column: 34, scope: !18221)
!18231 = !DILocation(line: 475, column: 32, scope: !18221)
!18232 = !DILocation(line: 475, column: 38, scope: !18221)
!18233 = !DILocation(line: 475, column: 41, scope: !18221)
!18234 = !DILocation(line: 475, column: 43, scope: !18221)
!18235 = !DILocation(line: 475, column: 47, scope: !18221)
!18236 = !DILocation(line: 475, column: 52, scope: !18221)
!18237 = !DILocation(line: 0, scope: !18221)
!18238 = !DILocation(line: 476, column: 25, scope: !18221)
!18239 = distinct !{!18239, !18229, !18240}
!18240 = !DILocation(line: 476, column: 27, scope: !18221)
!18241 = !DILocation(line: 477, column: 19, scope: !18216)
!18242 = !DILocation(line: 479, column: 36, scope: !18243)
!18243 = distinct !DILexicalBlock(scope: !18206, file: !2306, line: 479, column: 21)
!18244 = !DILocation(line: 479, column: 41, scope: !18243)
!18245 = !DILocation(line: 479, column: 40, scope: !18243)
!18246 = !DILocation(line: 479, column: 47, scope: !18243)
!18247 = !DILocation(line: 479, column: 26, scope: !18243)
!18248 = !DILocation(line: 479, column: 24, scope: !18243)
!18249 = !DILocation(line: 479, column: 53, scope: !18243)
!18250 = !DILocation(line: 479, column: 21, scope: !18206)
!18251 = !DILocation(line: 480, column: 25, scope: !18243)
!18252 = !DILocation(line: 481, column: 17, scope: !18206)
!18253 = !DILocation(line: 481, column: 20, scope: !18206)
!18254 = !DILocation(line: 481, column: 30, scope: !18206)
!18255 = !DILocation(line: 482, column: 33, scope: !18206)
!18256 = !DILocation(line: 482, column: 17, scope: !18206)
!18257 = !DILocation(line: 482, column: 20, scope: !18206)
!18258 = !DILocation(line: 482, column: 31, scope: !18206)
!18259 = !DILocation(line: 483, column: 34, scope: !18206)
!18260 = !DILocation(line: 483, column: 37, scope: !18206)
!18261 = !DILocation(line: 483, column: 17, scope: !18206)
!18262 = !DILocation(line: 483, column: 20, scope: !18206)
!18263 = !DILocation(line: 483, column: 32, scope: !18206)
!18264 = !DILocation(line: 487, column: 21, scope: !18265)
!18265 = distinct !DILexicalBlock(scope: !18206, file: !2306, line: 487, column: 21)
!18266 = !DILocation(line: 487, column: 32, scope: !18265)
!18267 = !DILocation(line: 487, column: 35, scope: !18265)
!18268 = !DILocation(line: 487, column: 40, scope: !18265)
!18269 = !DILocation(line: 487, column: 21, scope: !18206)
!18270 = !DILocation(line: 488, column: 25, scope: !18271)
!18271 = distinct !DILexicalBlock(scope: !18265, file: !2306, line: 487, column: 49)
!18272 = !DILocation(line: 488, column: 28, scope: !18271)
!18273 = !DILocation(line: 488, column: 37, scope: !18271)
!18274 = !DILocation(line: 489, column: 47, scope: !18271)
!18275 = !DILocation(line: 489, column: 25, scope: !18271)
!18276 = !DILocation(line: 490, column: 17, scope: !18271)
!18277 = !DILocation(line: 491, column: 48, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18265, file: !2306, line: 490, column: 24)
!18279 = !DILocation(line: 491, column: 52, scope: !18278)
!18280 = !DILocation(line: 491, column: 39, scope: !18278)
!18281 = !DILocation(line: 491, column: 25, scope: !18278)
!18282 = !DILocation(line: 491, column: 28, scope: !18278)
!18283 = !DILocation(line: 491, column: 37, scope: !18278)
!18284 = !DILocation(line: 498, column: 21, scope: !18285)
!18285 = distinct !DILexicalBlock(scope: !18206, file: !2306, line: 498, column: 21)
!18286 = !DILocation(line: 498, column: 21, scope: !18206)
!18287 = !DILocation(line: 499, column: 39, scope: !18288)
!18288 = distinct !DILexicalBlock(scope: !18285, file: !2306, line: 498, column: 29)
!18289 = !DILocation(line: 499, column: 25, scope: !18288)
!18290 = !DILocation(line: 499, column: 28, scope: !18288)
!18291 = !DILocation(line: 499, column: 37, scope: !18288)
!18292 = !DILocation(line: 500, column: 32, scope: !18288)
!18293 = !DILocation(line: 500, column: 30, scope: !18288)
!18294 = !DILocation(line: 501, column: 17, scope: !18288)
!18295 = !DILocation(line: 502, column: 25, scope: !18296)
!18296 = distinct !DILexicalBlock(scope: !18285, file: !2306, line: 501, column: 24)
!18297 = !DILocation(line: 502, column: 28, scope: !18296)
!18298 = !DILocation(line: 502, column: 37, scope: !18296)
!18299 = !DILocation(line: 503, column: 29, scope: !18300)
!18300 = distinct !DILexicalBlock(scope: !18296, file: !2306, line: 503, column: 29)
!18301 = !DILocation(line: 503, column: 34, scope: !18300)
!18302 = !DILocation(line: 503, column: 29, scope: !18296)
!18303 = !DILocation(line: 504, column: 46, scope: !18300)
!18304 = !DILocation(line: 504, column: 44, scope: !18300)
!18305 = !DILocation(line: 504, column: 37, scope: !18300)
!18306 = !DILocation(line: 504, column: 33, scope: !18300)
!18307 = !DILocation(line: 506, column: 49, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18300, file: !2306, line: 505, column: 30)
!18309 = !DILocation(line: 506, column: 33, scope: !18308)
!18310 = !DILocation(line: 506, column: 38, scope: !18308)
!18311 = !DILocation(line: 506, column: 47, scope: !18308)
!18312 = !DILocation(line: 507, column: 39, scope: !18308)
!18313 = !DILocation(line: 507, column: 37, scope: !18308)
!18314 = !DILocation(line: 510, column: 9, scope: !18206)
!18315 = !DILocation(line: 465, column: 54, scope: !18201)
!18316 = !DILocation(line: 465, column: 62, scope: !18201)
!18317 = !DILocation(line: 465, column: 9, scope: !18201)
!18318 = distinct !{!18318, !18204, !18319}
!18319 = !DILocation(line: 510, column: 9, scope: !18197)
!18320 = !DILocation(line: 511, column: 13, scope: !18321)
!18321 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 511, column: 13)
!18322 = !DILocation(line: 511, column: 20, scope: !18321)
!18323 = !DILocation(line: 511, column: 23, scope: !18321)
!18324 = !DILocation(line: 511, column: 30, scope: !18321)
!18325 = !DILocation(line: 511, column: 13, scope: !18070)
!18326 = !DILocation(line: 512, column: 33, scope: !18321)
!18327 = !DILocation(line: 512, column: 37, scope: !18321)
!18328 = !DILocation(line: 512, column: 43, scope: !18321)
!18329 = !DILocation(line: 512, column: 24, scope: !18321)
!18330 = !DILocation(line: 512, column: 22, scope: !18321)
!18331 = !DILocation(line: 512, column: 17, scope: !18321)
!18332 = !DILocation(line: 519, column: 38, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 519, column: 13)
!18334 = !DILocation(line: 519, column: 28, scope: !18333)
!18335 = !DILocation(line: 519, column: 14, scope: !18333)
!18336 = !DILocation(line: 519, column: 18, scope: !18333)
!18337 = !DILocation(line: 519, column: 26, scope: !18333)
!18338 = !{!3813, !2994, i64 0}
!18339 = !DILocation(line: 519, column: 50, scope: !18333)
!18340 = !DILocation(line: 519, column: 13, scope: !18070)
!18341 = !DILocation(line: 520, column: 17, scope: !18333)
!18342 = !DILocation(line: 521, column: 33, scope: !18070)
!18343 = !DILocation(line: 521, column: 9, scope: !18070)
!18344 = !DILocation(line: 521, column: 13, scope: !18070)
!18345 = !DILocation(line: 521, column: 22, scope: !18070)
!18346 = !DILocation(line: 521, column: 31, scope: !18070)
!18347 = !DILocation(line: 522, column: 9, scope: !18070)
!18348 = !DILocation(line: 522, column: 13, scope: !18070)
!18349 = !DILocation(line: 522, column: 22, scope: !18070)
!18350 = !DILocation(line: 522, column: 31, scope: !18070)
!18351 = !DILocation(line: 523, column: 9, scope: !18070)
!18352 = !DILocation(line: 523, column: 13, scope: !18070)
!18353 = !DILocation(line: 523, column: 22, scope: !18070)
!18354 = !DILocation(line: 523, column: 32, scope: !18070)
!18355 = !DILocation(line: 524, column: 26, scope: !18356)
!18356 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 524, column: 13)
!18357 = !DILocation(line: 524, column: 15, scope: !18356)
!18358 = !DILocation(line: 524, column: 13, scope: !18070)
!18359 = !DILocation(line: 525, column: 17, scope: !18356)
!18360 = !DILocation(line: 534, column: 14, scope: !18361)
!18361 = distinct !DILexicalBlock(scope: !18070, file: !2306, line: 534, column: 13)
!18362 = !DILocation(line: 534, column: 33, scope: !18361)
!18363 = !DILocation(line: 534, column: 37, scope: !18361)
!18364 = !DILocation(line: 535, column: 13, scope: !18361)
!18365 = !DILocation(line: 535, column: 40, scope: !18361)
!18366 = !DILocation(line: 535, column: 31, scope: !18361)
!18367 = !DILocation(line: 535, column: 17, scope: !18361)
!18368 = !DILocation(line: 535, column: 21, scope: !18361)
!18369 = !DILocation(line: 535, column: 29, scope: !18361)
!18370 = !{!3813, !2981, i64 40}
!18371 = !DILocation(line: 535, column: 50, scope: !18361)
!18372 = !DILocation(line: 534, column: 13, scope: !18070)
!18373 = !DILocation(line: 536, column: 17, scope: !18361)
!18374 = !DILocation(line: 538, column: 23, scope: !18070)
!18375 = !DILocation(line: 538, column: 27, scope: !18070)
!18376 = !DILocation(line: 538, column: 9, scope: !18070)
!18377 = !DILocation(line: 539, column: 17, scope: !18070)
!18378 = !DILocation(line: 539, column: 9, scope: !18070)
!18379 = !DILabel(scope: !18070, name: "mem3", file: !2306, line: 541)
!18380 = !DILocation(line: 541, column: 1, scope: !18070)
!18381 = !DILocation(line: 541, column: 19, scope: !18070)
!18382 = !DILocation(line: 541, column: 9, scope: !18070)
!18383 = !DILocation(line: 542, column: 14, scope: !18070)
!18384 = !DILocation(line: 542, column: 9, scope: !18070)
!18385 = !DILabel(scope: !18070, name: "mem2", file: !2306, line: 543)
!18386 = !DILocation(line: 543, column: 1, scope: !18070)
!18387 = !DILocation(line: 543, column: 14, scope: !18070)
!18388 = !DILocation(line: 543, column: 18, scope: !18070)
!18389 = !{!3813, !2994, i64 32}
!18390 = !DILocation(line: 543, column: 9, scope: !18070)
!18391 = !DILabel(scope: !18070, name: "mem1", file: !2306, line: 544)
!18392 = !DILocation(line: 544, column: 1, scope: !18070)
!18393 = !DILocation(line: 544, column: 14, scope: !18070)
!18394 = !DILocation(line: 544, column: 9, scope: !18070)
!18395 = !DILocation(line: 545, column: 9, scope: !18070)
!18396 = !DILocation(line: 546, column: 1, scope: !18070)
!18397 = distinct !DISubprogram(name: "fts_maxarglen", scope: !2306, file: !2306, line: 2022, type: !2492, scopeLine: 2023, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18398 = !DILocalVariable(name: "argv", arg: 1, scope: !18397, file: !2306, line: 2022, type: !1331)
!18399 = !DILocation(line: 2022, column: 30, scope: !18397)
!18400 = !DILocalVariable(name: "len", scope: !18397, file: !2306, line: 2024, type: !52)
!18401 = !DILocation(line: 2024, column: 16, scope: !18397)
!18402 = !DILocalVariable(name: "max", scope: !18397, file: !2306, line: 2024, type: !52)
!18403 = !DILocation(line: 2024, column: 21, scope: !18397)
!18404 = !DILocation(line: 2026, column: 18, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18397, file: !2306, line: 2026, column: 9)
!18406 = !DILocation(line: 2026, column: 14, scope: !18405)
!18407 = !DILocation(line: 2026, column: 24, scope: !18408)
!18408 = distinct !DILexicalBlock(scope: !18405, file: !2306, line: 2026, column: 9)
!18409 = !DILocation(line: 2026, column: 23, scope: !18408)
!18410 = !DILocation(line: 2026, column: 9, scope: !18405)
!18411 = !DILocation(line: 2027, column: 36, scope: !18412)
!18412 = distinct !DILexicalBlock(scope: !18408, file: !2306, line: 2027, column: 21)
!18413 = !DILocation(line: 2027, column: 35, scope: !18412)
!18414 = !DILocation(line: 2027, column: 28, scope: !18412)
!18415 = !DILocation(line: 2027, column: 26, scope: !18412)
!18416 = !DILocation(line: 2027, column: 45, scope: !18412)
!18417 = !DILocation(line: 2027, column: 43, scope: !18412)
!18418 = !DILocation(line: 2027, column: 21, scope: !18408)
!18419 = !DILocation(line: 2028, column: 31, scope: !18412)
!18420 = !DILocation(line: 2028, column: 29, scope: !18412)
!18421 = !DILocation(line: 2028, column: 25, scope: !18412)
!18422 = !DILocation(line: 2026, column: 30, scope: !18408)
!18423 = !DILocation(line: 2026, column: 9, scope: !18408)
!18424 = distinct !{!18424, !18410, !18425}
!18425 = !DILocation(line: 2028, column: 31, scope: !18405)
!18426 = !DILocation(line: 2029, column: 17, scope: !18397)
!18427 = !DILocation(line: 2029, column: 21, scope: !18397)
!18428 = !DILocation(line: 2029, column: 9, scope: !18397)
!18429 = distinct !DISubprogram(name: "fts_palloc", scope: !2306, file: !2306, line: 1966, type: !2490, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18430 = !DILocalVariable(name: "sp", arg: 1, scope: !18429, file: !2306, line: 1966, type: !2331)
!18431 = !DILocation(line: 1966, column: 18, scope: !18429)
!18432 = !DILocalVariable(name: "more", arg: 2, scope: !18429, file: !2306, line: 1966, type: !52)
!18433 = !DILocation(line: 1966, column: 29, scope: !18429)
!18434 = !DILocalVariable(name: "p", scope: !18429, file: !2306, line: 1968, type: !7)
!18435 = !DILocation(line: 1968, column: 15, scope: !18429)
!18436 = !DILocalVariable(name: "new_len", scope: !18429, file: !2306, line: 1969, type: !52)
!18437 = !DILocation(line: 1969, column: 16, scope: !18429)
!18438 = !DILocation(line: 1969, column: 26, scope: !18429)
!18439 = !DILocation(line: 1969, column: 30, scope: !18429)
!18440 = !{!3813, !3178, i64 48}
!18441 = !DILocation(line: 1969, column: 44, scope: !18429)
!18442 = !DILocation(line: 1969, column: 42, scope: !18429)
!18443 = !DILocation(line: 1969, column: 49, scope: !18429)
!18444 = !DILocation(line: 1974, column: 13, scope: !18445)
!18445 = distinct !DILexicalBlock(scope: !18429, file: !2306, line: 1974, column: 13)
!18446 = !DILocation(line: 1974, column: 23, scope: !18445)
!18447 = !DILocation(line: 1974, column: 27, scope: !18445)
!18448 = !DILocation(line: 1974, column: 21, scope: !18445)
!18449 = !DILocation(line: 1974, column: 13, scope: !18429)
!18450 = !DILocation(line: 1975, column: 22, scope: !18451)
!18451 = distinct !DILexicalBlock(scope: !18445, file: !2306, line: 1974, column: 40)
!18452 = !DILocation(line: 1975, column: 26, scope: !18451)
!18453 = !DILocation(line: 1975, column: 17, scope: !18451)
!18454 = !DILocation(line: 1976, column: 17, scope: !18451)
!18455 = !DILocation(line: 1976, column: 21, scope: !18451)
!18456 = !DILocation(line: 1976, column: 30, scope: !18451)
!18457 = !DILocation(line: 1977, column: 17, scope: !18451)
!18458 = !DILocation(line: 1978, column: 17, scope: !18451)
!18459 = !DILocation(line: 1980, column: 27, scope: !18429)
!18460 = !DILocation(line: 1980, column: 9, scope: !18429)
!18461 = !DILocation(line: 1980, column: 13, scope: !18429)
!18462 = !DILocation(line: 1980, column: 25, scope: !18429)
!18463 = !DILocation(line: 1981, column: 21, scope: !18429)
!18464 = !DILocation(line: 1981, column: 25, scope: !18429)
!18465 = !DILocation(line: 1981, column: 35, scope: !18429)
!18466 = !DILocation(line: 1981, column: 39, scope: !18429)
!18467 = !DILocation(line: 1981, column: 13, scope: !18429)
!18468 = !DILocation(line: 1981, column: 11, scope: !18429)
!18469 = !DILocation(line: 1982, column: 13, scope: !18470)
!18470 = distinct !DILexicalBlock(scope: !18429, file: !2306, line: 1982, column: 13)
!18471 = !DILocation(line: 1982, column: 15, scope: !18470)
!18472 = !DILocation(line: 1982, column: 13, scope: !18429)
!18473 = !DILocation(line: 1983, column: 22, scope: !18474)
!18474 = distinct !DILexicalBlock(scope: !18470, file: !2306, line: 1982, column: 24)
!18475 = !DILocation(line: 1983, column: 26, scope: !18474)
!18476 = !DILocation(line: 1983, column: 17, scope: !18474)
!18477 = !DILocation(line: 1984, column: 17, scope: !18474)
!18478 = !DILocation(line: 1984, column: 21, scope: !18474)
!18479 = !DILocation(line: 1984, column: 30, scope: !18474)
!18480 = !DILocation(line: 1985, column: 17, scope: !18474)
!18481 = !DILocation(line: 1987, column: 24, scope: !18429)
!18482 = !DILocation(line: 1987, column: 9, scope: !18429)
!18483 = !DILocation(line: 1987, column: 13, scope: !18429)
!18484 = !DILocation(line: 1987, column: 22, scope: !18429)
!18485 = !DILocation(line: 1988, column: 9, scope: !18429)
!18486 = !DILocation(line: 1989, column: 1, scope: !18429)
!18487 = distinct !DISubprogram(name: "fts_alloc", scope: !2306, file: !2306, line: 1913, type: !2486, scopeLine: 1914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18488 = !DILocalVariable(name: "sp", arg: 1, scope: !18487, file: !2306, line: 1913, type: !2331)
!18489 = !DILocation(line: 1913, column: 17, scope: !18487)
!18490 = !DILocalVariable(name: "name", arg: 2, scope: !18487, file: !2306, line: 1913, type: !112)
!18491 = !DILocation(line: 1913, column: 33, scope: !18487)
!18492 = !DILocalVariable(name: "namelen", arg: 3, scope: !18487, file: !2306, line: 1913, type: !52)
!18493 = !DILocation(line: 1913, column: 55, scope: !18487)
!18494 = !DILocalVariable(name: "p", scope: !18487, file: !2306, line: 1915, type: !2414)
!18495 = !DILocation(line: 1915, column: 26, scope: !18487)
!18496 = !DILocalVariable(name: "len", scope: !18487, file: !2306, line: 1916, type: !52)
!18497 = !DILocation(line: 1916, column: 16, scope: !18487)
!18498 = !DILocation(line: 1922, column: 15, scope: !18487)
!18499 = !DILocation(line: 1922, column: 13, scope: !18487)
!18500 = !DILocation(line: 1923, column: 25, scope: !18501)
!18501 = distinct !DILexicalBlock(scope: !18487, file: !2306, line: 1923, column: 13)
!18502 = !DILocation(line: 1923, column: 18, scope: !18501)
!18503 = !DILocation(line: 1923, column: 16, scope: !18501)
!18504 = !DILocation(line: 1923, column: 31, scope: !18501)
!18505 = !DILocation(line: 1923, column: 13, scope: !18487)
!18506 = !DILocation(line: 1924, column: 17, scope: !18501)
!18507 = !DILocation(line: 1927, column: 16, scope: !18487)
!18508 = !DILocation(line: 1927, column: 19, scope: !18487)
!18509 = !DILocation(line: 1927, column: 9, scope: !18487)
!18510 = !DILocation(line: 1927, column: 29, scope: !18487)
!18511 = !DILocation(line: 1927, column: 35, scope: !18487)
!18512 = !DILocation(line: 1928, column: 9, scope: !18487)
!18513 = !DILocation(line: 1928, column: 12, scope: !18487)
!18514 = !DILocation(line: 1928, column: 21, scope: !18487)
!18515 = !DILocation(line: 1928, column: 30, scope: !18487)
!18516 = !DILocation(line: 1930, column: 26, scope: !18487)
!18517 = !DILocation(line: 1930, column: 9, scope: !18487)
!18518 = !DILocation(line: 1930, column: 12, scope: !18487)
!18519 = !DILocation(line: 1930, column: 24, scope: !18487)
!18520 = !DILocation(line: 1931, column: 22, scope: !18487)
!18521 = !DILocation(line: 1931, column: 9, scope: !18487)
!18522 = !DILocation(line: 1931, column: 12, scope: !18487)
!18523 = !DILocation(line: 1931, column: 20, scope: !18487)
!18524 = !DILocation(line: 1932, column: 23, scope: !18487)
!18525 = !DILocation(line: 1932, column: 27, scope: !18487)
!18526 = !DILocation(line: 1932, column: 9, scope: !18487)
!18527 = !DILocation(line: 1932, column: 12, scope: !18487)
!18528 = !DILocation(line: 1932, column: 21, scope: !18487)
!18529 = !DILocation(line: 1933, column: 9, scope: !18487)
!18530 = !DILocation(line: 1933, column: 12, scope: !18487)
!18531 = !DILocation(line: 1933, column: 22, scope: !18487)
!18532 = !DILocation(line: 1934, column: 9, scope: !18487)
!18533 = !DILocation(line: 1934, column: 12, scope: !18487)
!18534 = !DILocation(line: 1934, column: 21, scope: !18487)
!18535 = !DILocation(line: 1935, column: 9, scope: !18487)
!18536 = !DILocation(line: 1935, column: 12, scope: !18487)
!18537 = !DILocation(line: 1935, column: 22, scope: !18487)
!18538 = !DILocation(line: 1936, column: 9, scope: !18487)
!18539 = !DILocation(line: 1936, column: 12, scope: !18487)
!18540 = !DILocation(line: 1936, column: 22, scope: !18487)
!18541 = !DILocation(line: 1937, column: 9, scope: !18487)
!18542 = !DILocation(line: 1937, column: 12, scope: !18487)
!18543 = !DILocation(line: 1937, column: 23, scope: !18487)
!18544 = !DILocation(line: 1938, column: 9, scope: !18487)
!18545 = !DILocation(line: 1938, column: 12, scope: !18487)
!18546 = !DILocation(line: 1938, column: 24, scope: !18487)
!18547 = !DILocation(line: 1939, column: 17, scope: !18487)
!18548 = !DILocation(line: 1939, column: 9, scope: !18487)
!18549 = !DILocation(line: 1940, column: 1, scope: !18487)
!18550 = distinct !DISubprogram(name: "fts_set_stat_required", scope: !2306, file: !2306, line: 290, type: !2423, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18551 = !DILocalVariable(name: "p", arg: 1, scope: !18550, file: !2306, line: 290, type: !2414)
!18552 = !DILocation(line: 290, column: 32, scope: !18550)
!18553 = !DILocalVariable(name: "required", arg: 2, scope: !18550, file: !2306, line: 290, type: !117)
!18554 = !DILocation(line: 290, column: 40, scope: !18550)
!18555 = !DILocation(line: 292, column: 3, scope: !18550)
!18556 = !DILocation(line: 292, column: 3, scope: !18557)
!18557 = distinct !DILexicalBlock(scope: !18558, file: !2306, line: 292, column: 3)
!18558 = distinct !DILexicalBlock(scope: !18550, file: !2306, line: 292, column: 3)
!18559 = !DILocation(line: 292, column: 3, scope: !18558)
!18560 = !DILocation(line: 293, column: 28, scope: !18550)
!18561 = !DILocation(line: 293, column: 27, scope: !18550)
!18562 = !DILocation(line: 293, column: 3, scope: !18550)
!18563 = !DILocation(line: 293, column: 6, scope: !18550)
!18564 = !DILocation(line: 293, column: 17, scope: !18550)
!18565 = !DILocation(line: 293, column: 25, scope: !18550)
!18566 = !DILocation(line: 296, column: 1, scope: !18550)
!18567 = distinct !DISubprogram(name: "fts_stat", scope: !2306, file: !2306, line: 1799, type: !2481, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18568 = !DILocalVariable(name: "sp", arg: 1, scope: !18567, file: !2306, line: 1799, type: !2331)
!18569 = !DILocation(line: 1799, column: 15, scope: !18567)
!18570 = !DILocalVariable(name: "p", arg: 2, scope: !18567, file: !2306, line: 1799, type: !2414)
!18571 = !DILocation(line: 1799, column: 36, scope: !18567)
!18572 = !DILocalVariable(name: "follow", arg: 3, scope: !18567, file: !2306, line: 1799, type: !117)
!18573 = !DILocation(line: 1799, column: 44, scope: !18567)
!18574 = !DILocalVariable(name: "sbp", scope: !18567, file: !2306, line: 1801, type: !2478)
!18575 = !DILocation(line: 1801, column: 22, scope: !18567)
!18576 = !DILocation(line: 1801, column: 28, scope: !18567)
!18577 = !DILocation(line: 1801, column: 31, scope: !18567)
!18578 = !DILocation(line: 1803, column: 13, scope: !18579)
!18579 = distinct !DILexicalBlock(scope: !18567, file: !2306, line: 1803, column: 13)
!18580 = !DILocation(line: 1803, column: 16, scope: !18579)
!18581 = !DILocation(line: 1803, column: 26, scope: !18579)
!18582 = !DILocation(line: 1803, column: 43, scope: !18579)
!18583 = !DILocation(line: 1803, column: 46, scope: !18579)
!18584 = !DILocation(line: 1803, column: 13, scope: !18567)
!18585 = !DILocation(line: 1804, column: 24, scope: !18579)
!18586 = !DILocation(line: 1804, column: 17, scope: !18579)
!18587 = !DILocation(line: 1811, column: 13, scope: !18588)
!18588 = distinct !DILexicalBlock(scope: !18567, file: !2306, line: 1811, column: 13)
!18589 = !DILocation(line: 1811, column: 32, scope: !18588)
!18590 = !DILocation(line: 1811, column: 35, scope: !18588)
!18591 = !DILocation(line: 1811, column: 13, scope: !18567)
!18592 = !DILocation(line: 1812, column: 26, scope: !18593)
!18593 = distinct !DILexicalBlock(scope: !18594, file: !2306, line: 1812, column: 21)
!18594 = distinct !DILexicalBlock(scope: !18588, file: !2306, line: 1811, column: 43)
!18595 = !DILocation(line: 1812, column: 29, scope: !18593)
!18596 = !DILocation(line: 1812, column: 42, scope: !18593)
!18597 = !DILocation(line: 1812, column: 21, scope: !18593)
!18598 = !DILocation(line: 1812, column: 21, scope: !18594)
!18599 = !DILocation(line: 1813, column: 29, scope: !18600)
!18600 = distinct !DILexicalBlock(scope: !18601, file: !2306, line: 1813, column: 29)
!18601 = distinct !DILexicalBlock(scope: !18593, file: !2306, line: 1812, column: 48)
!18602 = !DILocation(line: 1813, column: 35, scope: !18600)
!18603 = !DILocation(line: 1814, column: 29, scope: !18600)
!18604 = !DILocation(line: 1814, column: 38, scope: !18600)
!18605 = !DILocation(line: 1814, column: 41, scope: !18600)
!18606 = !DILocation(line: 1814, column: 54, scope: !18600)
!18607 = !DILocation(line: 1814, column: 32, scope: !18600)
!18608 = !DILocation(line: 1814, column: 59, scope: !18600)
!18609 = !DILocation(line: 1813, column: 29, scope: !18601)
!18610 = !DILocation(line: 1815, column: 33, scope: !18611)
!18611 = distinct !DILexicalBlock(scope: !18600, file: !2306, line: 1814, column: 65)
!18612 = !DILocation(line: 1816, column: 33, scope: !18611)
!18613 = !DILocation(line: 1818, column: 40, scope: !18601)
!18614 = !DILocation(line: 1818, column: 25, scope: !18601)
!18615 = !DILocation(line: 1818, column: 28, scope: !18601)
!18616 = !DILocation(line: 1818, column: 38, scope: !18601)
!18617 = !DILocation(line: 1819, column: 25, scope: !18601)
!18618 = !DILocation(line: 1821, column: 9, scope: !18594)
!18619 = !DILocation(line: 1821, column: 28, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18588, file: !2306, line: 1821, column: 20)
!18621 = !DILocation(line: 1821, column: 32, scope: !18620)
!18622 = !DILocation(line: 1821, column: 44, scope: !18620)
!18623 = !DILocation(line: 1821, column: 47, scope: !18620)
!18624 = !DILocation(line: 1821, column: 60, scope: !18620)
!18625 = !DILocation(line: 1821, column: 20, scope: !18620)
!18626 = !DILocation(line: 1821, column: 20, scope: !18588)
!18627 = !DILocation(line: 1823, column: 32, scope: !18628)
!18628 = distinct !DILexicalBlock(scope: !18620, file: !2306, line: 1822, column: 50)
!18629 = !DILocation(line: 1823, column: 17, scope: !18628)
!18630 = !DILocation(line: 1823, column: 20, scope: !18628)
!18631 = !DILocation(line: 1823, column: 30, scope: !18628)
!18632 = !DILabel(scope: !18628, name: "err", file: !2306, line: 1824)
!18633 = !DILocation(line: 1824, column: 1, scope: !18628)
!18634 = !DILocation(line: 1824, column: 24, scope: !18628)
!18635 = !DILocation(line: 1824, column: 17, scope: !18628)
!18636 = !DILocation(line: 1825, column: 17, scope: !18628)
!18637 = !DILocation(line: 1828, column: 13, scope: !18638)
!18638 = distinct !DILexicalBlock(scope: !18567, file: !2306, line: 1828, column: 13)
!18639 = !DILocation(line: 1828, column: 13, scope: !18567)
!18640 = !DILocation(line: 1830, column: 23, scope: !18641)
!18641 = distinct !DILexicalBlock(scope: !18638, file: !2306, line: 1828, column: 36)
!18642 = !DILocation(line: 1830, column: 28, scope: !18641)
!18643 = !DILocation(line: 1830, column: 37, scope: !18641)
!18644 = !DILocation(line: 1831, column: 23, scope: !18641)
!18645 = !DILocation(line: 1831, column: 26, scope: !18641)
!18646 = !DILocation(line: 1831, column: 29, scope: !18641)
!18647 = !DILocation(line: 1831, column: 39, scope: !18641)
!18648 = !DILocation(line: 1830, column: 22, scope: !18641)
!18649 = !DILocation(line: 1833, column: 24, scope: !18641)
!18650 = !DILocation(line: 1833, column: 29, scope: !18641)
!18651 = !DILocation(line: 1833, column: 41, scope: !18641)
!18652 = !DILocation(line: 1833, column: 40, scope: !18641)
!18653 = !DILocation(line: 1833, column: 38, scope: !18641)
!18654 = !DILocation(line: 1829, column: 17, scope: !18641)
!18655 = !DILocation(line: 1829, column: 20, scope: !18641)
!18656 = !DILocation(line: 1830, column: 19, scope: !18641)
!18657 = !DILocation(line: 1834, column: 21, scope: !18658)
!18658 = distinct !DILexicalBlock(scope: !18641, file: !2306, line: 1834, column: 21)
!18659 = !DILocation(line: 1834, column: 21, scope: !18641)
!18660 = !DILocation(line: 1836, column: 33, scope: !18661)
!18661 = distinct !DILexicalBlock(scope: !18658, file: !2306, line: 1834, column: 41)
!18662 = !DILocation(line: 1836, column: 36, scope: !18661)
!18663 = !DILocation(line: 1836, column: 46, scope: !18661)
!18664 = !DILocation(line: 1836, column: 32, scope: !18661)
!18665 = !DILocation(line: 1836, column: 25, scope: !18661)
!18666 = !DILocation(line: 1839, column: 17, scope: !18641)
!18667 = !DILocation(line: 1841, column: 13, scope: !18668)
!18668 = distinct !DILexicalBlock(scope: !18567, file: !2306, line: 1841, column: 13)
!18669 = !DILocation(line: 1841, column: 13, scope: !18567)
!18670 = !DILocation(line: 1842, column: 17, scope: !18668)
!18671 = !DILocation(line: 1843, column: 13, scope: !18672)
!18672 = distinct !DILexicalBlock(scope: !18567, file: !2306, line: 1843, column: 13)
!18673 = !DILocation(line: 1843, column: 13, scope: !18567)
!18674 = !DILocation(line: 1844, column: 17, scope: !18672)
!18675 = !DILocation(line: 1845, column: 9, scope: !18567)
!18676 = !DILocation(line: 1846, column: 1, scope: !18567)
!18677 = distinct !DISubprogram(name: "fts_sort", scope: !2306, file: !2306, line: 1863, type: !2483, scopeLine: 1864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18678 = !DILocalVariable(name: "sp", arg: 1, scope: !18677, file: !2306, line: 1863, type: !2331)
!18679 = !DILocation(line: 1863, column: 16, scope: !18677)
!18680 = !DILocalVariable(name: "head", arg: 2, scope: !18677, file: !2306, line: 1863, type: !2414)
!18681 = !DILocation(line: 1863, column: 28, scope: !18677)
!18682 = !DILocalVariable(name: "nitems", arg: 3, scope: !18677, file: !2306, line: 1863, type: !52)
!18683 = !DILocation(line: 1863, column: 50, scope: !18677)
!18684 = !DILocalVariable(name: "ap", scope: !18677, file: !2306, line: 1865, type: !2485)
!18685 = !DILocation(line: 1865, column: 27, scope: !18677)
!18686 = !DILocalVariable(name: "p", scope: !18677, file: !2306, line: 1865, type: !2414)
!18687 = !DILocation(line: 1865, column: 32, scope: !18677)
!18688 = !DILocalVariable(name: "dummy", scope: !18677, file: !2306, line: 1874, type: !2414)
!18689 = !DILocation(line: 1874, column: 17, scope: !18677)
!18690 = !DILocalVariable(name: "compare", scope: !18677, file: !2306, line: 1875, type: !1077)
!18691 = !DILocation(line: 1875, column: 15, scope: !18677)
!18692 = !DILocation(line: 1877, column: 16, scope: !18677)
!18693 = !DILocation(line: 1877, column: 48, scope: !18677)
!18694 = !DILocation(line: 1877, column: 37, scope: !18677)
!18695 = !DILocation(line: 1877, column: 34, scope: !18677)
!18696 = !DILocation(line: 1876, column: 12, scope: !18677)
!18697 = !DILocation(line: 1878, column: 53, scope: !18677)
!18698 = !DILocation(line: 1878, column: 57, scope: !18677)
!18699 = !DILocation(line: 1878, column: 14, scope: !18677)
!18700 = !DILocation(line: 1888, column: 13, scope: !18701)
!18701 = distinct !DILexicalBlock(scope: !18677, file: !2306, line: 1888, column: 13)
!18702 = !DILocation(line: 1888, column: 22, scope: !18701)
!18703 = !DILocation(line: 1888, column: 26, scope: !18701)
!18704 = !{!3813, !3178, i64 56}
!18705 = !DILocation(line: 1888, column: 20, scope: !18701)
!18706 = !DILocation(line: 1888, column: 13, scope: !18677)
!18707 = !DILocalVariable(name: "a", scope: !18708, file: !2306, line: 1889, type: !2485)
!18708 = distinct !DILexicalBlock(scope: !18701, file: !2306, line: 1888, column: 38)
!18709 = !DILocation(line: 1889, column: 26, scope: !18708)
!18710 = !DILocation(line: 1891, column: 34, scope: !18708)
!18711 = !DILocation(line: 1891, column: 41, scope: !18708)
!18712 = !DILocation(line: 1891, column: 17, scope: !18708)
!18713 = !DILocation(line: 1891, column: 21, scope: !18708)
!18714 = !DILocation(line: 1891, column: 32, scope: !18708)
!18715 = !DILocation(line: 1892, column: 44, scope: !18716)
!18716 = distinct !DILexicalBlock(scope: !18708, file: !2306, line: 1892, column: 21)
!18717 = !DILocation(line: 1892, column: 48, scope: !18716)
!18718 = !DILocation(line: 1892, column: 42, scope: !18716)
!18719 = !DILocation(line: 1893, column: 21, scope: !18716)
!18720 = !DILocation(line: 1893, column: 40, scope: !18716)
!18721 = !DILocation(line: 1893, column: 44, scope: !18716)
!18722 = !{!3813, !2994, i64 16}
!18723 = !DILocation(line: 1894, column: 40, scope: !18716)
!18724 = !DILocation(line: 1894, column: 44, scope: !18716)
!18725 = !DILocation(line: 1894, column: 55, scope: !18716)
!18726 = !DILocation(line: 1893, column: 31, scope: !18716)
!18727 = !DILocation(line: 1893, column: 29, scope: !18716)
!18728 = !DILocation(line: 1892, column: 21, scope: !18708)
!18729 = !DILocation(line: 1895, column: 30, scope: !18730)
!18730 = distinct !DILexicalBlock(scope: !18716, file: !2306, line: 1894, column: 70)
!18731 = !DILocation(line: 1895, column: 34, scope: !18730)
!18732 = !DILocation(line: 1895, column: 25, scope: !18730)
!18733 = !DILocation(line: 1896, column: 25, scope: !18730)
!18734 = !DILocation(line: 1896, column: 29, scope: !18730)
!18735 = !DILocation(line: 1896, column: 39, scope: !18730)
!18736 = !DILocation(line: 1897, column: 25, scope: !18730)
!18737 = !DILocation(line: 1897, column: 29, scope: !18730)
!18738 = !DILocation(line: 1897, column: 40, scope: !18730)
!18739 = !DILocation(line: 1898, column: 33, scope: !18730)
!18740 = !DILocation(line: 1898, column: 25, scope: !18730)
!18741 = !DILocation(line: 1900, column: 33, scope: !18708)
!18742 = !DILocation(line: 1900, column: 17, scope: !18708)
!18743 = !DILocation(line: 1900, column: 21, scope: !18708)
!18744 = !DILocation(line: 1900, column: 31, scope: !18708)
!18745 = !DILocation(line: 1901, column: 9, scope: !18708)
!18746 = !DILocation(line: 1902, column: 19, scope: !18747)
!18747 = distinct !DILexicalBlock(scope: !18677, file: !2306, line: 1902, column: 9)
!18748 = !DILocation(line: 1902, column: 23, scope: !18747)
!18749 = !DILocation(line: 1902, column: 17, scope: !18747)
!18750 = !DILocation(line: 1902, column: 38, scope: !18747)
!18751 = !DILocation(line: 1902, column: 36, scope: !18747)
!18752 = !DILocation(line: 1902, column: 14, scope: !18747)
!18753 = !DILocation(line: 1902, column: 44, scope: !18754)
!18754 = distinct !DILexicalBlock(scope: !18747, file: !2306, line: 1902, column: 9)
!18755 = !DILocation(line: 1902, column: 9, scope: !18747)
!18756 = !DILocation(line: 1903, column: 25, scope: !18754)
!18757 = !DILocation(line: 1903, column: 20, scope: !18754)
!18758 = !DILocation(line: 1903, column: 23, scope: !18754)
!18759 = !DILocation(line: 1903, column: 17, scope: !18754)
!18760 = !DILocation(line: 1902, column: 51, scope: !18754)
!18761 = !DILocation(line: 1902, column: 54, scope: !18754)
!18762 = !DILocation(line: 1902, column: 49, scope: !18754)
!18763 = !DILocation(line: 1902, column: 9, scope: !18754)
!18764 = distinct !{!18764, !18755, !18765}
!18765 = !DILocation(line: 1903, column: 25, scope: !18747)
!18766 = !DILocation(line: 1904, column: 23, scope: !18677)
!18767 = !DILocation(line: 1904, column: 27, scope: !18677)
!18768 = !DILocation(line: 1904, column: 15, scope: !18677)
!18769 = !DILocation(line: 1904, column: 38, scope: !18677)
!18770 = !DILocation(line: 1904, column: 64, scope: !18677)
!18771 = !DILocation(line: 1904, column: 9, scope: !18677)
!18772 = !DILocation(line: 1905, column: 28, scope: !18773)
!18773 = distinct !DILexicalBlock(scope: !18677, file: !2306, line: 1905, column: 9)
!18774 = !DILocation(line: 1905, column: 32, scope: !18773)
!18775 = !DILocation(line: 1905, column: 26, scope: !18773)
!18776 = !DILocation(line: 1905, column: 21, scope: !18773)
!18777 = !DILocation(line: 1905, column: 19, scope: !18773)
!18778 = !DILocation(line: 1905, column: 14, scope: !18773)
!18779 = !DILocation(line: 1905, column: 44, scope: !18780)
!18780 = distinct !DILexicalBlock(scope: !18773, file: !2306, line: 1905, column: 9)
!18781 = !DILocation(line: 1905, column: 9, scope: !18773)
!18782 = !DILocation(line: 1906, column: 35, scope: !18780)
!18783 = !DILocation(line: 1906, column: 17, scope: !18780)
!18784 = !DILocation(line: 1906, column: 24, scope: !18780)
!18785 = !DILocation(line: 1906, column: 33, scope: !18780)
!18786 = !DILocation(line: 1905, column: 54, scope: !18780)
!18787 = !DILocation(line: 1905, column: 9, scope: !18780)
!18788 = distinct !{!18788, !18781, !18789}
!18789 = !DILocation(line: 1906, column: 39, scope: !18773)
!18790 = !DILocation(line: 1907, column: 9, scope: !18677)
!18791 = !DILocation(line: 1907, column: 16, scope: !18677)
!18792 = !DILocation(line: 1907, column: 25, scope: !18677)
!18793 = !DILocation(line: 1908, column: 17, scope: !18677)
!18794 = !DILocation(line: 1908, column: 9, scope: !18677)
!18795 = !DILocation(line: 1909, column: 1, scope: !18677)
!18796 = distinct !DISubprogram(name: "setup_dir", scope: !2430, file: !2430, line: 50, type: !2425, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18797 = !DILocalVariable(name: "fts", arg: 1, scope: !18796, file: !2430, line: 50, type: !2331)
!18798 = !DILocation(line: 50, column: 17, scope: !18796)
!18799 = !DILocation(line: 52, column: 7, scope: !18800)
!18800 = distinct !DILexicalBlock(scope: !18796, file: !2430, line: 52, column: 7)
!18801 = !DILocation(line: 52, column: 12, scope: !18800)
!18802 = !DILocation(line: 52, column: 24, scope: !18800)
!18803 = !DILocation(line: 52, column: 7, scope: !18796)
!18804 = !DILocation(line: 55, column: 27, scope: !18805)
!18805 = distinct !DILexicalBlock(scope: !18800, file: !2430, line: 53, column: 5)
!18806 = !DILocation(line: 55, column: 7, scope: !18805)
!18807 = !DILocation(line: 55, column: 12, scope: !18805)
!18808 = !DILocation(line: 55, column: 22, scope: !18805)
!18809 = !DILocation(line: 55, column: 25, scope: !18805)
!18810 = !DILocation(line: 57, column: 13, scope: !18811)
!18811 = distinct !DILexicalBlock(scope: !18805, file: !2430, line: 57, column: 11)
!18812 = !DILocation(line: 57, column: 18, scope: !18811)
!18813 = !DILocation(line: 57, column: 28, scope: !18811)
!18814 = !DILocation(line: 57, column: 11, scope: !18805)
!18815 = !DILocation(line: 58, column: 9, scope: !18811)
!18816 = !DILocation(line: 59, column: 5, scope: !18805)
!18817 = !DILocation(line: 62, column: 30, scope: !18818)
!18818 = distinct !DILexicalBlock(scope: !18800, file: !2430, line: 61, column: 5)
!18819 = !DILocation(line: 62, column: 7, scope: !18818)
!18820 = !DILocation(line: 62, column: 12, scope: !18818)
!18821 = !DILocation(line: 62, column: 22, scope: !18818)
!18822 = !DILocation(line: 62, column: 28, scope: !18818)
!18823 = !DILocation(line: 63, column: 13, scope: !18824)
!18824 = distinct !DILexicalBlock(scope: !18818, file: !2430, line: 63, column: 11)
!18825 = !DILocation(line: 63, column: 18, scope: !18824)
!18826 = !DILocation(line: 63, column: 28, scope: !18824)
!18827 = !DILocation(line: 63, column: 11, scope: !18818)
!18828 = !DILocation(line: 64, column: 9, scope: !18824)
!18829 = !DILocation(line: 65, column: 25, scope: !18818)
!18830 = !DILocation(line: 65, column: 30, scope: !18818)
!18831 = !DILocation(line: 65, column: 40, scope: !18818)
!18832 = !DILocation(line: 65, column: 7, scope: !18818)
!18833 = !DILocation(line: 68, column: 3, scope: !18796)
!18834 = !DILocation(line: 69, column: 1, scope: !18796)
!18835 = distinct !DISubprogram(name: "diropen", scope: !2306, file: !2306, line: 346, type: !2435, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18836 = !DILocalVariable(name: "sp", arg: 1, scope: !18835, file: !2306, line: 346, type: !2437)
!18837 = !DILocation(line: 346, column: 21, scope: !18835)
!18838 = !DILocalVariable(name: "dir", arg: 2, scope: !18835, file: !2306, line: 346, type: !112)
!18839 = !DILocation(line: 346, column: 37, scope: !18835)
!18840 = !DILocalVariable(name: "open_flags", scope: !18835, file: !2306, line: 348, type: !5)
!18841 = !DILocation(line: 348, column: 7, scope: !18835)
!18842 = !DILocation(line: 349, column: 24, scope: !18835)
!18843 = !DILocation(line: 349, column: 21, scope: !18835)
!18844 = !DILocalVariable(name: "fd", scope: !18835, file: !2306, line: 351, type: !5)
!18845 = !DILocation(line: 351, column: 7, scope: !18835)
!18846 = !DILocation(line: 351, column: 13, scope: !18835)
!18847 = !DILocation(line: 352, column: 23, scope: !18835)
!18848 = !DILocation(line: 352, column: 27, scope: !18835)
!18849 = !DILocation(line: 352, column: 39, scope: !18835)
!18850 = !DILocation(line: 352, column: 44, scope: !18835)
!18851 = !DILocation(line: 352, column: 15, scope: !18835)
!18852 = !DILocation(line: 353, column: 21, scope: !18835)
!18853 = !DILocation(line: 353, column: 26, scope: !18835)
!18854 = !DILocation(line: 353, column: 15, scope: !18835)
!18855 = !DILocation(line: 354, column: 10, scope: !18835)
!18856 = !DILocation(line: 354, column: 3, scope: !18835)
!18857 = distinct !DISubprogram(name: "fts_lfree", scope: !2306, file: !2306, line: 1944, type: !2488, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18858 = !DILocalVariable(name: "head", arg: 1, scope: !18857, file: !2306, line: 1944, type: !2414)
!18859 = !DILocation(line: 1944, column: 29, scope: !18857)
!18860 = !DILocalVariable(name: "p", scope: !18857, file: !2306, line: 1946, type: !2414)
!18861 = !DILocation(line: 1946, column: 26, scope: !18857)
!18862 = !DILocation(line: 1949, column: 9, scope: !18857)
!18863 = !DILocation(line: 1949, column: 21, scope: !18857)
!18864 = !DILocation(line: 1949, column: 19, scope: !18857)
!18865 = !DILocation(line: 1950, column: 24, scope: !18866)
!18866 = distinct !DILexicalBlock(scope: !18857, file: !2306, line: 1949, column: 28)
!18867 = !DILocation(line: 1950, column: 30, scope: !18866)
!18868 = !DILocation(line: 1950, column: 22, scope: !18866)
!18869 = !DILocation(line: 1951, column: 21, scope: !18870)
!18870 = distinct !DILexicalBlock(scope: !18866, file: !2306, line: 1951, column: 21)
!18871 = !DILocation(line: 1951, column: 24, scope: !18870)
!18872 = !DILocation(line: 1951, column: 21, scope: !18866)
!18873 = !DILocation(line: 1952, column: 35, scope: !18870)
!18874 = !DILocation(line: 1952, column: 38, scope: !18870)
!18875 = !DILocation(line: 1952, column: 25, scope: !18870)
!18876 = !DILocation(line: 1953, column: 22, scope: !18866)
!18877 = !DILocation(line: 1953, column: 17, scope: !18866)
!18878 = distinct !{!18878, !18862, !18879}
!18879 = !DILocation(line: 1954, column: 9, scope: !18857)
!18880 = !DILocation(line: 1955, column: 1, scope: !18857)
!18881 = distinct !DISubprogram(name: "AD_hash", scope: !2430, file: !2430, line: 41, type: !520, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18882 = !DILocalVariable(name: "x", arg: 1, scope: !18881, file: !2430, line: 41, type: !428)
!18883 = !DILocation(line: 41, column: 22, scope: !18881)
!18884 = !DILocalVariable(name: "table_size", arg: 2, scope: !18881, file: !2430, line: 41, type: !52)
!18885 = !DILocation(line: 41, column: 32, scope: !18881)
!18886 = !DILocalVariable(name: "ax", scope: !18881, file: !2430, line: 43, type: !2427)
!18887 = !DILocation(line: 43, column: 28, scope: !18881)
!18888 = !DILocation(line: 43, column: 33, scope: !18881)
!18889 = !DILocation(line: 44, column: 22, scope: !18881)
!18890 = !DILocation(line: 44, column: 26, scope: !18881)
!18891 = !{!18892, !3178, i64 8}
!18892 = !{!"Active_dir", !3178, i64 0, !3178, i64 8, !2994, i64 16}
!18893 = !DILocation(line: 44, column: 32, scope: !18881)
!18894 = !DILocation(line: 44, column: 30, scope: !18881)
!18895 = !DILocation(line: 44, column: 3, scope: !18881)
!18896 = distinct !DISubprogram(name: "AD_compare", scope: !2430, file: !2430, line: 32, type: !522, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18897 = !DILocalVariable(name: "x", arg: 1, scope: !18896, file: !2430, line: 32, type: !428)
!18898 = !DILocation(line: 32, column: 25, scope: !18896)
!18899 = !DILocalVariable(name: "y", arg: 2, scope: !18896, file: !2430, line: 32, type: !428)
!18900 = !DILocation(line: 32, column: 40, scope: !18896)
!18901 = !DILocalVariable(name: "ax", scope: !18896, file: !2430, line: 34, type: !2427)
!18902 = !DILocation(line: 34, column: 28, scope: !18896)
!18903 = !DILocation(line: 34, column: 33, scope: !18896)
!18904 = !DILocalVariable(name: "ay", scope: !18896, file: !2430, line: 35, type: !2427)
!18905 = !DILocation(line: 35, column: 28, scope: !18896)
!18906 = !DILocation(line: 35, column: 33, scope: !18896)
!18907 = !DILocation(line: 36, column: 10, scope: !18896)
!18908 = !DILocation(line: 36, column: 14, scope: !18896)
!18909 = !DILocation(line: 36, column: 21, scope: !18896)
!18910 = !DILocation(line: 36, column: 25, scope: !18896)
!18911 = !DILocation(line: 36, column: 18, scope: !18896)
!18912 = !DILocation(line: 37, column: 7, scope: !18896)
!18913 = !DILocation(line: 37, column: 10, scope: !18896)
!18914 = !DILocation(line: 37, column: 14, scope: !18896)
!18915 = !{!18892, !3178, i64 0}
!18916 = !DILocation(line: 37, column: 21, scope: !18896)
!18917 = !DILocation(line: 37, column: 25, scope: !18896)
!18918 = !DILocation(line: 37, column: 18, scope: !18896)
!18919 = !DILocation(line: 0, scope: !18896)
!18920 = !DILocation(line: 36, column: 3, scope: !18896)
!18921 = distinct !DISubprogram(name: "fts_compar", scope: !2306, file: !2306, line: 1849, type: !1078, scopeLine: 1850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18922 = !DILocalVariable(name: "a", arg: 1, scope: !18921, file: !2306, line: 1849, type: !428)
!18923 = !DILocation(line: 1849, column: 25, scope: !18921)
!18924 = !DILocalVariable(name: "b", arg: 2, scope: !18921, file: !2306, line: 1849, type: !428)
!18925 = !DILocation(line: 1849, column: 40, scope: !18921)
!18926 = !DILocalVariable(name: "pa", scope: !18921, file: !2306, line: 1856, type: !2312)
!18927 = !DILocation(line: 1856, column: 18, scope: !18921)
!18928 = !DILocation(line: 1856, column: 41, scope: !18921)
!18929 = !DILocation(line: 1856, column: 23, scope: !18921)
!18930 = !DILocalVariable(name: "pb", scope: !18921, file: !2306, line: 1857, type: !2312)
!18931 = !DILocation(line: 1857, column: 18, scope: !18921)
!18932 = !DILocation(line: 1857, column: 41, scope: !18921)
!18933 = !DILocation(line: 1857, column: 23, scope: !18921)
!18934 = !DILocation(line: 1858, column: 10, scope: !18921)
!18935 = !DILocation(line: 1858, column: 17, scope: !18921)
!18936 = !DILocation(line: 1858, column: 26, scope: !18921)
!18937 = !DILocation(line: 1858, column: 38, scope: !18921)
!18938 = !DILocation(line: 1858, column: 42, scope: !18921)
!18939 = !DILocation(line: 1858, column: 3, scope: !18921)
!18940 = distinct !DISubprogram(name: "rpl_fts_close", scope: !2306, file: !2306, line: 573, type: !2415, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!18941 = !DILocalVariable(name: "sp", arg: 1, scope: !18940, file: !2306, line: 573, type: !2331)
!18942 = !DILocation(line: 573, column: 17, scope: !18940)
!18943 = !DILocalVariable(name: "freep", scope: !18940, file: !2306, line: 575, type: !2414)
!18944 = !DILocation(line: 575, column: 26, scope: !18940)
!18945 = !DILocalVariable(name: "p", scope: !18940, file: !2306, line: 575, type: !2414)
!18946 = !DILocation(line: 575, column: 34, scope: !18940)
!18947 = !DILocalVariable(name: "saved_errno", scope: !18940, file: !2306, line: 576, type: !5)
!18948 = !DILocation(line: 576, column: 13, scope: !18940)
!18949 = !DILocation(line: 583, column: 13, scope: !18950)
!18950 = distinct !DILexicalBlock(scope: !18940, file: !2306, line: 583, column: 13)
!18951 = !DILocation(line: 583, column: 17, scope: !18950)
!18952 = !DILocation(line: 583, column: 13, scope: !18940)
!18953 = !DILocation(line: 584, column: 26, scope: !18954)
!18954 = distinct !DILexicalBlock(scope: !18955, file: !2306, line: 584, column: 17)
!18955 = distinct !DILexicalBlock(scope: !18950, file: !2306, line: 583, column: 26)
!18956 = !DILocation(line: 584, column: 30, scope: !18954)
!18957 = !DILocation(line: 584, column: 24, scope: !18954)
!18958 = !DILocation(line: 584, column: 22, scope: !18954)
!18959 = !DILocation(line: 584, column: 39, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18954, file: !2306, line: 584, column: 17)
!18961 = !DILocation(line: 584, column: 42, scope: !18960)
!18962 = !DILocation(line: 584, column: 52, scope: !18960)
!18963 = !DILocation(line: 584, column: 17, scope: !18954)
!18964 = !DILocation(line: 585, column: 33, scope: !18965)
!18965 = distinct !DILexicalBlock(scope: !18960, file: !2306, line: 584, column: 71)
!18966 = !DILocation(line: 585, column: 31, scope: !18965)
!18967 = !DILocation(line: 586, column: 29, scope: !18965)
!18968 = !DILocation(line: 586, column: 32, scope: !18965)
!18969 = !DILocation(line: 586, column: 41, scope: !18965)
!18970 = !DILocation(line: 586, column: 51, scope: !18965)
!18971 = !DILocation(line: 586, column: 54, scope: !18965)
!18972 = !DILocation(line: 586, column: 65, scope: !18965)
!18973 = !DILocation(line: 586, column: 68, scope: !18965)
!18974 = !DILocation(line: 586, column: 27, scope: !18965)
!18975 = !DILocation(line: 587, column: 30, scope: !18965)
!18976 = !DILocation(line: 587, column: 25, scope: !18965)
!18977 = !DILocation(line: 584, column: 17, scope: !18960)
!18978 = distinct !{!18978, !18963, !18979}
!18979 = !DILocation(line: 588, column: 17, scope: !18954)
!18980 = !DILocation(line: 589, column: 22, scope: !18955)
!18981 = !DILocation(line: 589, column: 17, scope: !18955)
!18982 = !DILocation(line: 590, column: 9, scope: !18955)
!18983 = !DILocation(line: 593, column: 13, scope: !18984)
!18984 = distinct !DILexicalBlock(scope: !18940, file: !2306, line: 593, column: 13)
!18985 = !DILocation(line: 593, column: 17, scope: !18984)
!18986 = !{!3813, !2994, i64 8}
!18987 = !DILocation(line: 593, column: 13, scope: !18940)
!18988 = !DILocation(line: 594, column: 27, scope: !18984)
!18989 = !DILocation(line: 594, column: 31, scope: !18984)
!18990 = !DILocation(line: 594, column: 17, scope: !18984)
!18991 = !DILocation(line: 595, column: 14, scope: !18940)
!18992 = !DILocation(line: 595, column: 18, scope: !18940)
!18993 = !DILocation(line: 595, column: 9, scope: !18940)
!18994 = !DILocation(line: 596, column: 14, scope: !18940)
!18995 = !DILocation(line: 596, column: 18, scope: !18940)
!18996 = !DILocation(line: 596, column: 9, scope: !18940)
!18997 = !DILocation(line: 598, column: 13, scope: !18998)
!18998 = distinct !DILexicalBlock(scope: !18940, file: !2306, line: 598, column: 13)
!18999 = !DILocation(line: 598, column: 13, scope: !18940)
!19000 = !DILocation(line: 600, column: 22, scope: !19001)
!19001 = distinct !DILexicalBlock(scope: !19002, file: !2306, line: 600, column: 17)
!19002 = distinct !DILexicalBlock(scope: !18998, file: !2306, line: 599, column: 11)
!19003 = !DILocation(line: 600, column: 26, scope: !19001)
!19004 = !DILocation(line: 600, column: 19, scope: !19001)
!19005 = !DILocation(line: 600, column: 17, scope: !19002)
!19006 = !DILocation(line: 601, column: 26, scope: !19007)
!19007 = distinct !DILexicalBlock(scope: !19001, file: !2306, line: 601, column: 19)
!19008 = !DILocation(line: 601, column: 30, scope: !19007)
!19009 = !DILocation(line: 601, column: 19, scope: !19007)
!19010 = !DILocation(line: 601, column: 19, scope: !19001)
!19011 = !DILocation(line: 602, column: 31, scope: !19007)
!19012 = !DILocation(line: 602, column: 29, scope: !19007)
!19013 = !DILocation(line: 602, column: 17, scope: !19007)
!19014 = !DILocation(line: 601, column: 40, scope: !19007)
!19015 = !DILocation(line: 603, column: 11, scope: !19002)
!19016 = !DILocation(line: 604, column: 19, scope: !19017)
!19017 = distinct !DILexicalBlock(scope: !18998, file: !2306, line: 604, column: 18)
!19018 = !DILocation(line: 604, column: 18, scope: !18998)
!19019 = !DILocation(line: 607, column: 24, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !19021, file: !2306, line: 607, column: 17)
!19021 = distinct !DILexicalBlock(scope: !19017, file: !2306, line: 605, column: 11)
!19022 = !DILocation(line: 607, column: 28, scope: !19020)
!19023 = !DILocation(line: 607, column: 17, scope: !19020)
!19024 = !DILocation(line: 607, column: 17, scope: !19021)
!19025 = !DILocation(line: 608, column: 29, scope: !19020)
!19026 = !DILocation(line: 608, column: 27, scope: !19020)
!19027 = !DILocation(line: 608, column: 15, scope: !19020)
!19028 = !DILocation(line: 612, column: 24, scope: !19029)
!19029 = distinct !DILexicalBlock(scope: !19021, file: !2306, line: 612, column: 17)
!19030 = !DILocation(line: 612, column: 28, scope: !19029)
!19031 = !DILocation(line: 612, column: 17, scope: !19029)
!19032 = !DILocation(line: 612, column: 17, scope: !19021)
!19033 = !DILocation(line: 613, column: 19, scope: !19034)
!19034 = distinct !DILexicalBlock(scope: !19029, file: !2306, line: 613, column: 19)
!19035 = !DILocation(line: 613, column: 31, scope: !19034)
!19036 = !DILocation(line: 613, column: 19, scope: !19029)
!19037 = !DILocation(line: 614, column: 31, scope: !19034)
!19038 = !DILocation(line: 614, column: 29, scope: !19034)
!19039 = !DILocation(line: 614, column: 17, scope: !19034)
!19040 = !DILocation(line: 613, column: 34, scope: !19034)
!19041 = !DILocation(line: 615, column: 11, scope: !19021)
!19042 = !DILocation(line: 617, column: 25, scope: !18940)
!19043 = !DILocation(line: 617, column: 29, scope: !18940)
!19044 = !DILocation(line: 617, column: 9, scope: !18940)
!19045 = !DILocation(line: 619, column: 13, scope: !19046)
!19046 = distinct !DILexicalBlock(scope: !18940, file: !2306, line: 619, column: 13)
!19047 = !DILocation(line: 619, column: 17, scope: !19046)
!19048 = !{!3813, !2994, i64 80}
!19049 = !DILocation(line: 619, column: 13, scope: !18940)
!19050 = !DILocation(line: 620, column: 22, scope: !19046)
!19051 = !DILocation(line: 620, column: 26, scope: !19046)
!19052 = !DILocation(line: 620, column: 11, scope: !19046)
!19053 = !DILocation(line: 622, column: 19, scope: !18940)
!19054 = !DILocation(line: 622, column: 9, scope: !18940)
!19055 = !DILocation(line: 625, column: 14, scope: !18940)
!19056 = !DILocation(line: 625, column: 9, scope: !18940)
!19057 = !DILocation(line: 628, column: 13, scope: !19058)
!19058 = distinct !DILexicalBlock(scope: !18940, file: !2306, line: 628, column: 13)
!19059 = !DILocation(line: 628, column: 13, scope: !18940)
!19060 = !DILocation(line: 629, column: 17, scope: !19061)
!19061 = distinct !DILexicalBlock(scope: !19058, file: !2306, line: 628, column: 26)
!19062 = !DILocation(line: 630, column: 17, scope: !19061)
!19063 = !DILocation(line: 633, column: 9, scope: !18940)
!19064 = !DILocation(line: 634, column: 1, scope: !18940)
!19065 = distinct !DISubprogram(name: "fd_ring_clear", scope: !2306, file: !2306, line: 276, type: !2439, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!19066 = !DILocalVariable(name: "fd_ring", arg: 1, scope: !19065, file: !2306, line: 276, type: !2441)
!19067 = !DILocation(line: 276, column: 24, scope: !19065)
!19068 = !DILocation(line: 278, column: 3, scope: !19065)
!19069 = !DILocation(line: 278, column: 27, scope: !19065)
!19070 = !DILocation(line: 278, column: 13, scope: !19065)
!19071 = !DILocation(line: 278, column: 11, scope: !19065)
!19072 = !DILocalVariable(name: "fd", scope: !19073, file: !2306, line: 280, type: !5)
!19073 = distinct !DILexicalBlock(scope: !19065, file: !2306, line: 279, column: 5)
!19074 = !DILocation(line: 280, column: 11, scope: !19073)
!19075 = !DILocation(line: 280, column: 28, scope: !19073)
!19076 = !DILocation(line: 280, column: 16, scope: !19073)
!19077 = !DILocation(line: 281, column: 16, scope: !19078)
!19078 = distinct !DILexicalBlock(scope: !19073, file: !2306, line: 281, column: 11)
!19079 = !DILocation(line: 281, column: 13, scope: !19078)
!19080 = !DILocation(line: 281, column: 11, scope: !19073)
!19081 = !DILocation(line: 282, column: 16, scope: !19078)
!19082 = !DILocation(line: 282, column: 9, scope: !19078)
!19083 = distinct !{!19083, !19068, !19084}
!19084 = !DILocation(line: 283, column: 5, scope: !19065)
!19085 = !DILocation(line: 284, column: 1, scope: !19065)
!19086 = distinct !DISubprogram(name: "free_dir", scope: !2430, file: !2430, line: 151, type: !2442, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!19087 = !DILocalVariable(name: "sp", arg: 1, scope: !19086, file: !2430, line: 151, type: !2331)
!19088 = !DILocation(line: 151, column: 16, scope: !19086)
!19089 = !DILocation(line: 153, column: 7, scope: !19090)
!19090 = distinct !DILexicalBlock(scope: !19086, file: !2430, line: 153, column: 7)
!19091 = !DILocation(line: 153, column: 11, scope: !19090)
!19092 = !DILocation(line: 153, column: 23, scope: !19090)
!19093 = !DILocation(line: 153, column: 7, scope: !19086)
!19094 = !DILocation(line: 155, column: 11, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19096, file: !2430, line: 155, column: 11)
!19096 = distinct !DILexicalBlock(scope: !19090, file: !2430, line: 154, column: 5)
!19097 = !DILocation(line: 155, column: 15, scope: !19095)
!19098 = !DILocation(line: 155, column: 25, scope: !19095)
!19099 = !DILocation(line: 155, column: 11, scope: !19096)
!19100 = !DILocation(line: 156, column: 20, scope: !19095)
!19101 = !DILocation(line: 156, column: 24, scope: !19095)
!19102 = !DILocation(line: 156, column: 34, scope: !19095)
!19103 = !DILocation(line: 156, column: 9, scope: !19095)
!19104 = !DILocation(line: 157, column: 5, scope: !19096)
!19105 = !DILocation(line: 159, column: 11, scope: !19090)
!19106 = !DILocation(line: 159, column: 15, scope: !19090)
!19107 = !DILocation(line: 159, column: 25, scope: !19090)
!19108 = !DILocation(line: 159, column: 5, scope: !19090)
!19109 = !DILocation(line: 160, column: 1, scope: !19086)
!19110 = distinct !DISubprogram(name: "rpl_fts_read", scope: !2306, file: !2306, line: 852, type: !2417, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!19111 = !DILocalVariable(name: "sp", arg: 1, scope: !19110, file: !2306, line: 852, type: !2331)
!19112 = !DILocation(line: 852, column: 25, scope: !19110)
!19113 = !DILocalVariable(name: "p", scope: !19110, file: !2306, line: 854, type: !2414)
!19114 = !DILocation(line: 854, column: 26, scope: !19110)
!19115 = !DILocalVariable(name: "tmp", scope: !19110, file: !2306, line: 854, type: !2414)
!19116 = !DILocation(line: 854, column: 30, scope: !19110)
!19117 = !DILocalVariable(name: "instr", scope: !19110, file: !2306, line: 855, type: !34)
!19118 = !DILocation(line: 855, column: 37, scope: !19110)
!19119 = !DILocalVariable(name: "t", scope: !19110, file: !2306, line: 856, type: !7)
!19120 = !DILocation(line: 856, column: 24, scope: !19110)
!19121 = !DILocation(line: 859, column: 13, scope: !19122)
!19122 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 859, column: 13)
!19123 = !DILocation(line: 859, column: 17, scope: !19122)
!19124 = !DILocation(line: 859, column: 25, scope: !19122)
!19125 = !DILocation(line: 859, column: 33, scope: !19122)
!19126 = !DILocation(line: 859, column: 36, scope: !19122)
!19127 = !DILocation(line: 859, column: 13, scope: !19110)
!19128 = !DILocation(line: 860, column: 17, scope: !19122)
!19129 = !DILocation(line: 863, column: 13, scope: !19110)
!19130 = !DILocation(line: 863, column: 17, scope: !19110)
!19131 = !DILocation(line: 863, column: 11, scope: !19110)
!19132 = !DILocation(line: 866, column: 17, scope: !19110)
!19133 = !DILocation(line: 866, column: 20, scope: !19110)
!19134 = !DILocation(line: 866, column: 15, scope: !19110)
!19135 = !DILocation(line: 867, column: 9, scope: !19110)
!19136 = !DILocation(line: 867, column: 12, scope: !19110)
!19137 = !DILocation(line: 867, column: 22, scope: !19110)
!19138 = !DILocation(line: 870, column: 13, scope: !19139)
!19139 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 870, column: 13)
!19140 = !DILocation(line: 870, column: 19, scope: !19139)
!19141 = !DILocation(line: 870, column: 13, scope: !19110)
!19142 = !DILocation(line: 871, column: 40, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19139, file: !2306, line: 870, column: 33)
!19144 = !DILocation(line: 871, column: 44, scope: !19143)
!19145 = !DILocation(line: 871, column: 31, scope: !19143)
!19146 = !DILocation(line: 871, column: 17, scope: !19143)
!19147 = !DILocation(line: 871, column: 20, scope: !19143)
!19148 = !DILocation(line: 871, column: 29, scope: !19143)
!19149 = !DILocation(line: 872, column: 25, scope: !19143)
!19150 = !DILocation(line: 872, column: 17, scope: !19143)
!19151 = !DILocation(line: 883, column: 13, scope: !19152)
!19152 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 883, column: 13)
!19153 = !DILocation(line: 883, column: 19, scope: !19152)
!19154 = !DILocation(line: 883, column: 33, scope: !19152)
!19155 = !DILocation(line: 884, column: 14, scope: !19152)
!19156 = !DILocation(line: 884, column: 17, scope: !19152)
!19157 = !DILocation(line: 884, column: 26, scope: !19152)
!19158 = !DILocation(line: 884, column: 36, scope: !19152)
!19159 = !DILocation(line: 884, column: 39, scope: !19152)
!19160 = !DILocation(line: 884, column: 42, scope: !19152)
!19161 = !DILocation(line: 884, column: 51, scope: !19152)
!19162 = !DILocation(line: 883, column: 13, scope: !19110)
!19163 = !DILocation(line: 885, column: 40, scope: !19164)
!19164 = distinct !DILexicalBlock(scope: !19152, file: !2306, line: 884, column: 67)
!19165 = !DILocation(line: 885, column: 44, scope: !19164)
!19166 = !DILocation(line: 885, column: 31, scope: !19164)
!19167 = !DILocation(line: 885, column: 17, scope: !19164)
!19168 = !DILocation(line: 885, column: 20, scope: !19164)
!19169 = !DILocation(line: 885, column: 29, scope: !19164)
!19170 = !DILocation(line: 886, column: 21, scope: !19171)
!19171 = distinct !DILexicalBlock(scope: !19164, file: !2306, line: 886, column: 21)
!19172 = !DILocation(line: 886, column: 24, scope: !19171)
!19173 = !DILocation(line: 886, column: 33, scope: !19171)
!19174 = !DILocation(line: 886, column: 42, scope: !19171)
!19175 = !DILocation(line: 886, column: 46, scope: !19171)
!19176 = !DILocation(line: 886, column: 21, scope: !19164)
!19177 = !DILocation(line: 887, column: 54, scope: !19178)
!19178 = distinct !DILexicalBlock(scope: !19179, file: !2306, line: 887, column: 29)
!19179 = distinct !DILexicalBlock(scope: !19171, file: !2306, line: 886, column: 66)
!19180 = !DILocation(line: 887, column: 45, scope: !19178)
!19181 = !DILocation(line: 887, column: 30, scope: !19178)
!19182 = !DILocation(line: 887, column: 33, scope: !19178)
!19183 = !DILocation(line: 887, column: 43, scope: !19178)
!19184 = !DILocation(line: 887, column: 64, scope: !19178)
!19185 = !DILocation(line: 887, column: 29, scope: !19179)
!19186 = !DILocation(line: 888, column: 48, scope: !19187)
!19187 = distinct !DILexicalBlock(scope: !19178, file: !2306, line: 887, column: 69)
!19188 = !DILocation(line: 888, column: 33, scope: !19187)
!19189 = !DILocation(line: 888, column: 36, scope: !19187)
!19190 = !DILocation(line: 888, column: 46, scope: !19187)
!19191 = !DILocation(line: 889, column: 33, scope: !19187)
!19192 = !DILocation(line: 889, column: 36, scope: !19187)
!19193 = !DILocation(line: 889, column: 45, scope: !19187)
!19194 = !DILocation(line: 890, column: 25, scope: !19187)
!19195 = !DILocation(line: 891, column: 33, scope: !19178)
!19196 = !DILocation(line: 891, column: 36, scope: !19178)
!19197 = !DILocation(line: 891, column: 46, scope: !19178)
!19198 = !DILocation(line: 892, column: 17, scope: !19179)
!19199 = !DILocation(line: 893, column: 17, scope: !19164)
!19200 = !DILocation(line: 897, column: 13, scope: !19201)
!19201 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 897, column: 13)
!19202 = !DILocation(line: 897, column: 16, scope: !19201)
!19203 = !DILocation(line: 897, column: 25, scope: !19201)
!19204 = !DILocation(line: 897, column: 13, scope: !19110)
!19205 = !DILocation(line: 899, column: 21, scope: !19206)
!19206 = distinct !DILexicalBlock(scope: !19207, file: !2306, line: 899, column: 21)
!19207 = distinct !DILexicalBlock(scope: !19201, file: !2306, line: 897, column: 35)
!19208 = !DILocation(line: 899, column: 27, scope: !19206)
!19209 = !DILocation(line: 899, column: 39, scope: !19206)
!19210 = !DILocation(line: 900, column: 22, scope: !19206)
!19211 = !DILocation(line: 900, column: 38, scope: !19206)
!19212 = !DILocation(line: 900, column: 41, scope: !19206)
!19213 = !DILocation(line: 900, column: 44, scope: !19206)
!19214 = !DILocation(line: 900, column: 55, scope: !19206)
!19215 = !DILocation(line: 900, column: 65, scope: !19206)
!19216 = !DILocation(line: 900, column: 69, scope: !19206)
!19217 = !DILocation(line: 900, column: 62, scope: !19206)
!19218 = !DILocation(line: 899, column: 21, scope: !19207)
!19219 = !DILocation(line: 901, column: 29, scope: !19220)
!19220 = distinct !DILexicalBlock(scope: !19221, file: !2306, line: 901, column: 29)
!19221 = distinct !DILexicalBlock(scope: !19206, file: !2306, line: 900, column: 79)
!19222 = !DILocation(line: 901, column: 32, scope: !19220)
!19223 = !DILocation(line: 901, column: 42, scope: !19220)
!19224 = !DILocation(line: 901, column: 29, scope: !19221)
!19225 = !DILocation(line: 902, column: 45, scope: !19220)
!19226 = !DILocation(line: 902, column: 48, scope: !19220)
!19227 = !DILocation(line: 902, column: 39, scope: !19220)
!19228 = !DILocation(line: 902, column: 33, scope: !19220)
!19229 = !DILocation(line: 903, column: 29, scope: !19230)
!19230 = distinct !DILexicalBlock(scope: !19221, file: !2306, line: 903, column: 29)
!19231 = !DILocation(line: 903, column: 33, scope: !19230)
!19232 = !DILocation(line: 903, column: 29, scope: !19221)
!19233 = !DILocation(line: 904, column: 43, scope: !19234)
!19234 = distinct !DILexicalBlock(scope: !19230, file: !2306, line: 903, column: 44)
!19235 = !DILocation(line: 904, column: 47, scope: !19234)
!19236 = !DILocation(line: 904, column: 33, scope: !19234)
!19237 = !DILocation(line: 905, column: 33, scope: !19234)
!19238 = !DILocation(line: 905, column: 37, scope: !19234)
!19239 = !DILocation(line: 905, column: 47, scope: !19234)
!19240 = !DILocation(line: 906, column: 25, scope: !19234)
!19241 = !DILocation(line: 907, column: 25, scope: !19221)
!19242 = !DILocation(line: 907, column: 28, scope: !19221)
!19243 = !DILocation(line: 907, column: 37, scope: !19221)
!19244 = !DILocation(line: 908, column: 25, scope: !19221)
!19245 = !DILocation(line: 908, column: 25, scope: !19246)
!19246 = distinct !DILexicalBlock(scope: !19221, file: !2306, line: 908, column: 25)
!19247 = !DILocation(line: 909, column: 33, scope: !19221)
!19248 = !DILocation(line: 909, column: 25, scope: !19221)
!19249 = !DILocation(line: 913, column: 21, scope: !19250)
!19250 = distinct !DILexicalBlock(scope: !19207, file: !2306, line: 913, column: 21)
!19251 = !DILocation(line: 913, column: 25, scope: !19250)
!19252 = !DILocation(line: 913, column: 35, scope: !19250)
!19253 = !DILocation(line: 913, column: 43, scope: !19250)
!19254 = !DILocation(line: 913, column: 46, scope: !19250)
!19255 = !DILocation(line: 913, column: 21, scope: !19207)
!19256 = !DILocation(line: 914, column: 25, scope: !19257)
!19257 = distinct !DILexicalBlock(scope: !19250, file: !2306, line: 913, column: 67)
!19258 = !DILocation(line: 915, column: 35, scope: !19257)
!19259 = !DILocation(line: 915, column: 39, scope: !19257)
!19260 = !DILocation(line: 915, column: 25, scope: !19257)
!19261 = !DILocation(line: 916, column: 25, scope: !19257)
!19262 = !DILocation(line: 916, column: 29, scope: !19257)
!19263 = !DILocation(line: 916, column: 39, scope: !19257)
!19264 = !DILocation(line: 917, column: 17, scope: !19257)
!19265 = !DILocation(line: 931, column: 21, scope: !19266)
!19266 = distinct !DILexicalBlock(scope: !19207, file: !2306, line: 931, column: 21)
!19267 = !DILocation(line: 931, column: 25, scope: !19266)
!19268 = !DILocation(line: 931, column: 35, scope: !19266)
!19269 = !DILocation(line: 931, column: 21, scope: !19207)
!19270 = !DILocation(line: 932, column: 48, scope: !19271)
!19271 = distinct !DILexicalBlock(scope: !19272, file: !2306, line: 932, column: 29)
!19272 = distinct !DILexicalBlock(scope: !19266, file: !2306, line: 931, column: 44)
!19273 = !DILocation(line: 932, column: 52, scope: !19271)
!19274 = !DILocation(line: 932, column: 59, scope: !19271)
!19275 = !DILocation(line: 932, column: 62, scope: !19271)
!19276 = !DILocation(line: 932, column: 29, scope: !19271)
!19277 = !DILocation(line: 932, column: 29, scope: !19272)
!19278 = !DILocation(line: 933, column: 48, scope: !19279)
!19279 = distinct !DILexicalBlock(scope: !19271, file: !2306, line: 932, column: 76)
!19280 = !DILocation(line: 933, column: 33, scope: !19279)
!19281 = !DILocation(line: 933, column: 36, scope: !19279)
!19282 = !DILocation(line: 933, column: 46, scope: !19279)
!19283 = !DILocation(line: 934, column: 33, scope: !19279)
!19284 = !DILocation(line: 934, column: 36, scope: !19279)
!19285 = !DILocation(line: 934, column: 46, scope: !19279)
!19286 = !DILocation(line: 935, column: 42, scope: !19287)
!19287 = distinct !DILexicalBlock(scope: !19279, file: !2306, line: 935, column: 33)
!19288 = !DILocation(line: 935, column: 46, scope: !19287)
!19289 = !DILocation(line: 935, column: 40, scope: !19287)
!19290 = !DILocation(line: 935, column: 38, scope: !19287)
!19291 = !DILocation(line: 935, column: 57, scope: !19292)
!19292 = distinct !DILexicalBlock(scope: !19287, file: !2306, line: 935, column: 33)
!19293 = !DILocation(line: 935, column: 59, scope: !19292)
!19294 = !DILocation(line: 935, column: 33, scope: !19287)
!19295 = !DILocation(line: 938, column: 45, scope: !19292)
!19296 = !DILocation(line: 938, column: 48, scope: !19292)
!19297 = !DILocation(line: 938, column: 60, scope: !19292)
!19298 = !DILocation(line: 937, column: 41, scope: !19292)
!19299 = !DILocation(line: 937, column: 44, scope: !19292)
!19300 = !DILocation(line: 937, column: 56, scope: !19292)
!19301 = !DILocation(line: 936, column: 42, scope: !19292)
!19302 = !DILocation(line: 936, column: 45, scope: !19292)
!19303 = !DILocation(line: 936, column: 40, scope: !19292)
!19304 = !DILocation(line: 935, column: 33, scope: !19292)
!19305 = distinct !{!19305, !19294, !19306}
!19306 = !DILocation(line: 938, column: 60, scope: !19287)
!19307 = !DILocation(line: 939, column: 25, scope: !19279)
!19308 = !DILocation(line: 940, column: 17, scope: !19272)
!19309 = !DILocation(line: 940, column: 55, scope: !19310)
!19310 = distinct !DILexicalBlock(scope: !19266, file: !2306, line: 940, column: 28)
!19311 = !DILocation(line: 940, column: 45, scope: !19310)
!19312 = !DILocation(line: 940, column: 29, scope: !19310)
!19313 = !DILocation(line: 940, column: 33, scope: !19310)
!19314 = !DILocation(line: 940, column: 43, scope: !19310)
!19315 = !DILocation(line: 940, column: 67, scope: !19310)
!19316 = !DILocation(line: 940, column: 28, scope: !19266)
!19317 = !DILocation(line: 941, column: 29, scope: !19318)
!19318 = distinct !DILexicalBlock(scope: !19319, file: !2306, line: 941, column: 29)
!19319 = distinct !DILexicalBlock(scope: !19310, file: !2306, line: 940, column: 76)
!19320 = !DILocation(line: 941, column: 29, scope: !19319)
!19321 = !DILocation(line: 942, column: 33, scope: !19318)
!19322 = !DILocation(line: 946, column: 29, scope: !19323)
!19323 = distinct !DILexicalBlock(scope: !19319, file: !2306, line: 946, column: 29)
!19324 = !DILocation(line: 946, column: 32, scope: !19323)
!19325 = !DILocation(line: 946, column: 42, scope: !19323)
!19326 = !DILocation(line: 946, column: 45, scope: !19323)
!19327 = !DILocation(line: 946, column: 48, scope: !19323)
!19328 = !DILocation(line: 946, column: 57, scope: !19323)
!19329 = !DILocation(line: 946, column: 29, scope: !19319)
!19330 = !DILocation(line: 947, column: 33, scope: !19323)
!19331 = !DILocation(line: 947, column: 36, scope: !19323)
!19332 = !DILocation(line: 947, column: 45, scope: !19323)
!19333 = !DILocation(line: 948, column: 25, scope: !19319)
!19334 = !DILocation(line: 948, column: 25, scope: !19335)
!19335 = distinct !DILexicalBlock(scope: !19319, file: !2306, line: 948, column: 25)
!19336 = !DILocation(line: 949, column: 33, scope: !19319)
!19337 = !DILocation(line: 949, column: 25, scope: !19319)
!19338 = !DILocation(line: 951, column: 21, scope: !19207)
!19339 = !DILocation(line: 951, column: 25, scope: !19207)
!19340 = !DILocation(line: 951, column: 19, scope: !19207)
!19341 = !DILocation(line: 952, column: 17, scope: !19207)
!19342 = !DILocation(line: 952, column: 21, scope: !19207)
!19343 = !DILocation(line: 952, column: 31, scope: !19207)
!19344 = !DILocation(line: 953, column: 17, scope: !19207)
!19345 = !DILocation(line: 897, column: 28, scope: !19201)
!19346 = !DILabel(scope: !19110, name: "next", file: !2306, line: 957)
!19347 = !DILocation(line: 957, column: 1, scope: !19110)
!19348 = !DILocation(line: 957, column: 15, scope: !19110)
!19349 = !DILocation(line: 957, column: 13, scope: !19110)
!19350 = !DILocation(line: 962, column: 13, scope: !19351)
!19351 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 962, column: 13)
!19352 = !DILocation(line: 962, column: 16, scope: !19351)
!19353 = !DILocation(line: 962, column: 25, scope: !19351)
!19354 = !DILocation(line: 962, column: 33, scope: !19351)
!19355 = !DILocation(line: 962, column: 36, scope: !19351)
!19356 = !DILocation(line: 962, column: 39, scope: !19351)
!19357 = !DILocation(line: 962, column: 51, scope: !19351)
!19358 = !DILocation(line: 962, column: 13, scope: !19110)
!19359 = !DILocation(line: 964, column: 17, scope: !19360)
!19360 = distinct !DILexicalBlock(scope: !19351, file: !2306, line: 963, column: 11)
!19361 = !DILocation(line: 964, column: 22, scope: !19360)
!19362 = !DILocation(line: 964, column: 15, scope: !19360)
!19363 = !DILocation(line: 965, column: 27, scope: !19360)
!19364 = !DILocation(line: 965, column: 13, scope: !19360)
!19365 = !DILocation(line: 965, column: 17, scope: !19360)
!19366 = !DILocation(line: 965, column: 25, scope: !19360)
!19367 = !DILocation(line: 966, column: 13, scope: !19360)
!19368 = !DILocation(line: 966, column: 17, scope: !19360)
!19369 = !DILocation(line: 966, column: 26, scope: !19360)
!19370 = !DILocation(line: 966, column: 29, scope: !19360)
!19371 = !DILocation(line: 966, column: 42, scope: !19360)
!19372 = !DILocation(line: 968, column: 33, scope: !19373)
!19373 = distinct !DILexicalBlock(scope: !19360, file: !2306, line: 968, column: 17)
!19374 = !DILocation(line: 968, column: 22, scope: !19373)
!19375 = !DILocation(line: 968, column: 20, scope: !19373)
!19376 = !DILocation(line: 968, column: 45, scope: !19373)
!19377 = !DILocation(line: 968, column: 17, scope: !19360)
!19378 = !DILocation(line: 970, column: 21, scope: !19379)
!19379 = distinct !DILexicalBlock(scope: !19380, file: !2306, line: 970, column: 21)
!19380 = distinct !DILexicalBlock(scope: !19373, file: !2306, line: 969, column: 15)
!19381 = !DILocation(line: 970, column: 21, scope: !19380)
!19382 = !DILocation(line: 971, column: 19, scope: !19379)
!19383 = !DILocation(line: 972, column: 17, scope: !19380)
!19384 = !DILocation(line: 975, column: 18, scope: !19360)
!19385 = !DILocation(line: 975, column: 13, scope: !19360)
!19386 = !DILocation(line: 976, column: 13, scope: !19360)
!19387 = !DILocation(line: 979, column: 18, scope: !19388)
!19388 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 979, column: 13)
!19389 = !DILocation(line: 979, column: 21, scope: !19388)
!19390 = !DILocation(line: 979, column: 16, scope: !19388)
!19391 = !DILocation(line: 979, column: 31, scope: !19388)
!19392 = !DILocation(line: 979, column: 13, scope: !19110)
!19393 = !DILocation(line: 980, column: 31, scope: !19394)
!19394 = distinct !DILexicalBlock(scope: !19388, file: !2306, line: 979, column: 40)
!19395 = !DILocation(line: 980, column: 17, scope: !19394)
!19396 = !DILocation(line: 980, column: 21, scope: !19394)
!19397 = !DILocation(line: 980, column: 29, scope: !19394)
!19398 = !DILocation(line: 981, column: 22, scope: !19394)
!19399 = !DILocation(line: 981, column: 17, scope: !19394)
!19400 = !DILocation(line: 988, column: 21, scope: !19401)
!19401 = distinct !DILexicalBlock(scope: !19394, file: !2306, line: 988, column: 21)
!19402 = !DILocation(line: 988, column: 24, scope: !19401)
!19403 = !DILocation(line: 988, column: 34, scope: !19401)
!19404 = !DILocation(line: 988, column: 21, scope: !19394)
!19405 = !DILocation(line: 989, column: 49, scope: !19406)
!19406 = distinct !DILexicalBlock(scope: !19407, file: !2306, line: 989, column: 29)
!19407 = distinct !DILexicalBlock(scope: !19401, file: !2306, line: 988, column: 52)
!19408 = !DILocation(line: 989, column: 29, scope: !19406)
!19409 = !DILocation(line: 989, column: 29, scope: !19407)
!19410 = !DILocation(line: 990, column: 33, scope: !19411)
!19411 = distinct !DILexicalBlock(scope: !19406, file: !2306, line: 989, column: 54)
!19412 = !DILocation(line: 991, column: 33, scope: !19411)
!19413 = !DILocation(line: 993, column: 34, scope: !19407)
!19414 = !DILocation(line: 993, column: 25, scope: !19407)
!19415 = !DILocation(line: 994, column: 34, scope: !19407)
!19416 = !DILocation(line: 994, column: 38, scope: !19407)
!19417 = !DILocation(line: 994, column: 25, scope: !19407)
!19418 = !DILocation(line: 995, column: 35, scope: !19407)
!19419 = !DILocation(line: 995, column: 25, scope: !19407)
!19420 = !DILocation(line: 996, column: 25, scope: !19407)
!19421 = !DILocation(line: 1004, column: 21, scope: !19422)
!19422 = distinct !DILexicalBlock(scope: !19394, file: !2306, line: 1004, column: 21)
!19423 = !DILocation(line: 1004, column: 24, scope: !19422)
!19424 = !DILocation(line: 1004, column: 34, scope: !19422)
!19425 = !DILocation(line: 1004, column: 21, scope: !19394)
!19426 = !DILocation(line: 1005, column: 25, scope: !19422)
!19427 = !DILocation(line: 1006, column: 21, scope: !19428)
!19428 = distinct !DILexicalBlock(scope: !19394, file: !2306, line: 1006, column: 21)
!19429 = !DILocation(line: 1006, column: 24, scope: !19428)
!19430 = !DILocation(line: 1006, column: 34, scope: !19428)
!19431 = !DILocation(line: 1006, column: 21, scope: !19394)
!19432 = !DILocation(line: 1007, column: 48, scope: !19433)
!19433 = distinct !DILexicalBlock(scope: !19428, file: !2306, line: 1006, column: 49)
!19434 = !DILocation(line: 1007, column: 52, scope: !19433)
!19435 = !DILocation(line: 1007, column: 39, scope: !19433)
!19436 = !DILocation(line: 1007, column: 25, scope: !19433)
!19437 = !DILocation(line: 1007, column: 28, scope: !19433)
!19438 = !DILocation(line: 1007, column: 37, scope: !19433)
!19439 = !DILocation(line: 1008, column: 29, scope: !19440)
!19440 = distinct !DILexicalBlock(scope: !19433, file: !2306, line: 1008, column: 29)
!19441 = !DILocation(line: 1008, column: 32, scope: !19440)
!19442 = !DILocation(line: 1008, column: 41, scope: !19440)
!19443 = !DILocation(line: 1008, column: 50, scope: !19440)
!19444 = !DILocation(line: 1008, column: 54, scope: !19440)
!19445 = !DILocation(line: 1008, column: 29, scope: !19433)
!19446 = !DILocation(line: 1009, column: 62, scope: !19447)
!19447 = distinct !DILexicalBlock(scope: !19448, file: !2306, line: 1009, column: 37)
!19448 = distinct !DILexicalBlock(scope: !19440, file: !2306, line: 1008, column: 74)
!19449 = !DILocation(line: 1009, column: 53, scope: !19447)
!19450 = !DILocation(line: 1009, column: 38, scope: !19447)
!19451 = !DILocation(line: 1009, column: 41, scope: !19447)
!19452 = !DILocation(line: 1009, column: 51, scope: !19447)
!19453 = !DILocation(line: 1009, column: 72, scope: !19447)
!19454 = !DILocation(line: 1009, column: 37, scope: !19448)
!19455 = !DILocation(line: 1010, column: 56, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19447, file: !2306, line: 1009, column: 77)
!19457 = !DILocation(line: 1010, column: 41, scope: !19456)
!19458 = !DILocation(line: 1010, column: 44, scope: !19456)
!19459 = !DILocation(line: 1010, column: 54, scope: !19456)
!19460 = !DILocation(line: 1011, column: 41, scope: !19456)
!19461 = !DILocation(line: 1011, column: 44, scope: !19456)
!19462 = !DILocation(line: 1011, column: 53, scope: !19456)
!19463 = !DILocation(line: 1012, column: 33, scope: !19456)
!19464 = !DILocation(line: 1013, column: 41, scope: !19447)
!19465 = !DILocation(line: 1013, column: 44, scope: !19447)
!19466 = !DILocation(line: 1013, column: 54, scope: !19447)
!19467 = !DILocation(line: 1014, column: 25, scope: !19448)
!19468 = !DILocation(line: 1015, column: 25, scope: !19433)
!19469 = !DILocation(line: 1015, column: 28, scope: !19433)
!19470 = !DILocation(line: 1015, column: 38, scope: !19433)
!19471 = !DILocation(line: 1016, column: 17, scope: !19433)
!19472 = !DILocation(line: 1006, column: 37, scope: !19428)
!19473 = !DILabel(scope: !19394, name: "name", file: !2306, line: 1018)
!19474 = !DILocation(line: 1018, column: 1, scope: !19394)
!19475 = !DILocation(line: 1018, column: 21, scope: !19394)
!19476 = !DILocation(line: 1018, column: 25, scope: !19394)
!19477 = !DILocation(line: 1018, column: 36, scope: !19394)
!19478 = !DILocation(line: 1018, column: 34, scope: !19394)
!19479 = !DILocation(line: 1018, column: 19, scope: !19394)
!19480 = !DILocation(line: 1019, column: 19, scope: !19394)
!19481 = !DILocation(line: 1019, column: 22, scope: !19394)
!19482 = !DILocation(line: 1020, column: 25, scope: !19394)
!19483 = !DILocation(line: 1020, column: 28, scope: !19394)
!19484 = !DILocation(line: 1020, column: 31, scope: !19394)
!19485 = !DILocation(line: 1020, column: 17, scope: !19394)
!19486 = !DILocation(line: 1020, column: 41, scope: !19394)
!19487 = !DILocation(line: 1020, column: 44, scope: !19394)
!19488 = !DILocation(line: 1020, column: 56, scope: !19394)
!19489 = !DILabel(scope: !19394, name: "check_for_dir", file: !2306, line: 1021)
!19490 = !DILocation(line: 1021, column: 1, scope: !19394)
!19491 = !DILocation(line: 1022, column: 31, scope: !19394)
!19492 = !DILocation(line: 1022, column: 17, scope: !19394)
!19493 = !DILocation(line: 1022, column: 21, scope: !19394)
!19494 = !DILocation(line: 1022, column: 29, scope: !19394)
!19495 = !DILocation(line: 1023, column: 21, scope: !19496)
!19496 = distinct !DILexicalBlock(scope: !19394, file: !2306, line: 1023, column: 21)
!19497 = !DILocation(line: 1023, column: 24, scope: !19496)
!19498 = !DILocation(line: 1023, column: 33, scope: !19496)
!19499 = !DILocation(line: 1023, column: 21, scope: !19394)
!19500 = !DILocation(line: 1025, column: 25, scope: !19501)
!19501 = distinct !DILexicalBlock(scope: !19502, file: !2306, line: 1025, column: 25)
!19502 = distinct !DILexicalBlock(scope: !19496, file: !2306, line: 1024, column: 19)
!19503 = !DILocation(line: 1025, column: 28, scope: !19501)
!19504 = !DILocation(line: 1025, column: 39, scope: !19501)
!19505 = !DILocation(line: 1025, column: 47, scope: !19501)
!19506 = !DILocation(line: 1025, column: 25, scope: !19502)
!19507 = !DILocalVariable(name: "parent", scope: !19508, file: !2306, line: 1027, type: !2414)
!19508 = distinct !DILexicalBlock(scope: !19501, file: !2306, line: 1026, column: 23)
!19509 = !DILocation(line: 1027, column: 33, scope: !19508)
!19510 = !DILocation(line: 1027, column: 42, scope: !19508)
!19511 = !DILocation(line: 1027, column: 45, scope: !19508)
!19512 = !DILocation(line: 1028, column: 29, scope: !19513)
!19513 = distinct !DILexicalBlock(scope: !19508, file: !2306, line: 1028, column: 29)
!19514 = !DILocation(line: 1028, column: 37, scope: !19513)
!19515 = !DILocation(line: 1028, column: 58, scope: !19513)
!19516 = !DILocation(line: 1029, column: 29, scope: !19513)
!19517 = !DILocation(line: 1029, column: 32, scope: !19513)
!19518 = !DILocation(line: 1030, column: 29, scope: !19513)
!19519 = !DILocation(line: 1030, column: 32, scope: !19513)
!19520 = !DILocation(line: 1031, column: 29, scope: !19513)
!19521 = !DILocation(line: 1031, column: 52, scope: !19513)
!19522 = !DILocation(line: 1031, column: 60, scope: !19513)
!19523 = !DILocation(line: 1031, column: 64, scope: !19513)
!19524 = !DILocation(line: 1031, column: 33, scope: !19513)
!19525 = !DILocation(line: 1032, column: 33, scope: !19513)
!19526 = !DILocation(line: 1028, column: 29, scope: !19508)
!19527 = !DILocation(line: 1035, column: 27, scope: !19528)
!19528 = distinct !DILexicalBlock(scope: !19513, file: !2306, line: 1033, column: 27)
!19529 = !DILocation(line: 1038, column: 52, scope: !19530)
!19530 = distinct !DILexicalBlock(scope: !19513, file: !2306, line: 1037, column: 27)
!19531 = !DILocation(line: 1038, column: 56, scope: !19530)
!19532 = !DILocation(line: 1038, column: 43, scope: !19530)
!19533 = !DILocation(line: 1038, column: 29, scope: !19530)
!19534 = !DILocation(line: 1038, column: 32, scope: !19530)
!19535 = !DILocation(line: 1038, column: 41, scope: !19530)
!19536 = !DILocation(line: 1039, column: 33, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19530, file: !2306, line: 1039, column: 33)
!19538 = !DILocation(line: 1040, column: 33, scope: !19537)
!19539 = !DILocation(line: 1040, column: 36, scope: !19537)
!19540 = !DILocation(line: 1040, column: 39, scope: !19537)
!19541 = !DILocation(line: 1040, column: 49, scope: !19537)
!19542 = !DILocation(line: 1041, column: 33, scope: !19537)
!19543 = !DILocation(line: 1041, column: 40, scope: !19537)
!19544 = !DILocation(line: 1041, column: 48, scope: !19537)
!19545 = !DILocation(line: 1041, column: 38, scope: !19537)
!19546 = !DILocation(line: 1042, column: 33, scope: !19537)
!19547 = !DILocation(line: 1042, column: 36, scope: !19537)
!19548 = !DILocation(line: 1042, column: 44, scope: !19537)
!19549 = !DILocation(line: 1042, column: 65, scope: !19537)
!19550 = !DILocation(line: 1039, column: 33, scope: !19530)
!19551 = !DILocation(line: 1043, column: 35, scope: !19537)
!19552 = !DILocation(line: 1043, column: 43, scope: !19537)
!19553 = !DILocation(line: 1043, column: 63, scope: !19537)
!19554 = !DILocation(line: 1045, column: 23, scope: !19508)
!19555 = !DILocation(line: 1047, column: 23, scope: !19501)
!19556 = !DILocation(line: 1047, column: 23, scope: !19557)
!19557 = distinct !DILexicalBlock(scope: !19558, file: !2306, line: 1047, column: 23)
!19558 = distinct !DILexicalBlock(scope: !19501, file: !2306, line: 1047, column: 23)
!19559 = !DILocation(line: 1047, column: 23, scope: !19558)
!19560 = !DILocation(line: 1048, column: 19, scope: !19502)
!19561 = !DILocation(line: 1050, column: 21, scope: !19562)
!19562 = distinct !DILexicalBlock(scope: !19394, file: !2306, line: 1050, column: 21)
!19563 = !DILocation(line: 1050, column: 24, scope: !19562)
!19564 = !DILocation(line: 1050, column: 33, scope: !19562)
!19565 = !DILocation(line: 1050, column: 21, scope: !19394)
!19566 = !DILocation(line: 1055, column: 25, scope: !19567)
!19567 = distinct !DILexicalBlock(scope: !19568, file: !2306, line: 1055, column: 25)
!19568 = distinct !DILexicalBlock(scope: !19562, file: !2306, line: 1051, column: 19)
!19569 = !DILocation(line: 1055, column: 28, scope: !19567)
!19570 = !DILocation(line: 1055, column: 38, scope: !19567)
!19571 = !DILocation(line: 1055, column: 25, scope: !19568)
!19572 = !DILocation(line: 1056, column: 37, scope: !19567)
!19573 = !DILocation(line: 1056, column: 40, scope: !19567)
!19574 = !DILocation(line: 1056, column: 51, scope: !19567)
!19575 = !DILocation(line: 1056, column: 23, scope: !19567)
!19576 = !DILocation(line: 1056, column: 27, scope: !19567)
!19577 = !DILocation(line: 1056, column: 35, scope: !19567)
!19578 = !DILocation(line: 1058, column: 38, scope: !19579)
!19579 = distinct !DILexicalBlock(scope: !19568, file: !2306, line: 1058, column: 25)
!19580 = !DILocation(line: 1058, column: 42, scope: !19579)
!19581 = !DILocation(line: 1058, column: 27, scope: !19579)
!19582 = !DILocation(line: 1058, column: 25, scope: !19568)
!19583 = !DILocation(line: 1060, column: 25, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19579, file: !2306, line: 1059, column: 23)
!19585 = !DILocation(line: 1061, column: 25, scope: !19584)
!19586 = !DILocation(line: 1063, column: 19, scope: !19568)
!19587 = !DILocation(line: 1064, column: 24, scope: !19394)
!19588 = !DILocation(line: 1064, column: 17, scope: !19394)
!19589 = !DILocation(line: 979, column: 34, scope: !19388)
!19590 = !DILabel(scope: !19110, name: "cd_dot_dot", file: !2306, line: 1066)
!19591 = !DILocation(line: 1066, column: 1, scope: !19110)
!19592 = !DILocation(line: 1069, column: 13, scope: !19110)
!19593 = !DILocation(line: 1069, column: 18, scope: !19110)
!19594 = !DILocation(line: 1069, column: 11, scope: !19110)
!19595 = !DILocation(line: 1070, column: 23, scope: !19110)
!19596 = !DILocation(line: 1070, column: 9, scope: !19110)
!19597 = !DILocation(line: 1070, column: 13, scope: !19110)
!19598 = !DILocation(line: 1070, column: 21, scope: !19110)
!19599 = !DILocation(line: 1071, column: 14, scope: !19110)
!19600 = !DILocation(line: 1071, column: 9, scope: !19110)
!19601 = !DILocation(line: 1073, column: 13, scope: !19602)
!19602 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 1073, column: 13)
!19603 = !DILocation(line: 1073, column: 16, scope: !19602)
!19604 = !DILocation(line: 1073, column: 26, scope: !19602)
!19605 = !DILocation(line: 1073, column: 13, scope: !19110)
!19606 = !DILocation(line: 1078, column: 22, scope: !19607)
!19607 = distinct !DILexicalBlock(scope: !19602, file: !2306, line: 1073, column: 50)
!19608 = !DILocation(line: 1078, column: 17, scope: !19607)
!19609 = !DILocation(line: 1079, column: 17, scope: !19607)
!19610 = !DILocation(line: 1080, column: 25, scope: !19607)
!19611 = !DILocation(line: 1080, column: 29, scope: !19607)
!19612 = !DILocation(line: 1080, column: 37, scope: !19607)
!19613 = !DILocation(line: 1080, column: 17, scope: !19607)
!19614 = !DILocation(line: 1083, column: 9, scope: !19110)
!19615 = !DILocation(line: 1083, column: 9, scope: !19616)
!19616 = distinct !DILexicalBlock(scope: !19617, file: !2306, line: 1083, column: 9)
!19617 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 1083, column: 9)
!19618 = !DILocation(line: 1083, column: 9, scope: !19617)
!19619 = !DILocation(line: 1086, column: 9, scope: !19110)
!19620 = !DILocation(line: 1086, column: 13, scope: !19110)
!19621 = !DILocation(line: 1086, column: 22, scope: !19110)
!19622 = !DILocation(line: 1086, column: 25, scope: !19110)
!19623 = !DILocation(line: 1086, column: 38, scope: !19110)
!19624 = !DILocation(line: 1094, column: 13, scope: !19625)
!19625 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 1094, column: 13)
!19626 = !DILocation(line: 1094, column: 16, scope: !19625)
!19627 = !DILocation(line: 1094, column: 26, scope: !19625)
!19628 = !DILocation(line: 1094, column: 13, scope: !19110)
!19629 = !DILocation(line: 1095, column: 41, scope: !19630)
!19630 = distinct !DILexicalBlock(scope: !19631, file: !2306, line: 1095, column: 21)
!19631 = distinct !DILexicalBlock(scope: !19625, file: !2306, line: 1094, column: 44)
!19632 = !DILocation(line: 1095, column: 21, scope: !19630)
!19633 = !DILocation(line: 1095, column: 21, scope: !19631)
!19634 = !DILocation(line: 1096, column: 40, scope: !19635)
!19635 = distinct !DILexicalBlock(scope: !19630, file: !2306, line: 1095, column: 46)
!19636 = !DILocation(line: 1096, column: 25, scope: !19635)
!19637 = !DILocation(line: 1096, column: 28, scope: !19635)
!19638 = !DILocation(line: 1096, column: 38, scope: !19635)
!19639 = !DILocation(line: 1097, column: 25, scope: !19635)
!19640 = !DILocation(line: 1098, column: 17, scope: !19635)
!19641 = !DILocation(line: 1099, column: 9, scope: !19631)
!19642 = !DILocation(line: 1099, column: 20, scope: !19643)
!19643 = distinct !DILexicalBlock(scope: !19625, file: !2306, line: 1099, column: 20)
!19644 = !DILocation(line: 1099, column: 23, scope: !19643)
!19645 = !DILocation(line: 1099, column: 33, scope: !19643)
!19646 = !DILocation(line: 1099, column: 20, scope: !19625)
!19647 = !DILocation(line: 1100, column: 21, scope: !19648)
!19648 = distinct !DILexicalBlock(scope: !19649, file: !2306, line: 1100, column: 21)
!19649 = distinct !DILexicalBlock(scope: !19643, file: !2306, line: 1099, column: 50)
!19650 = !DILocation(line: 1100, column: 21, scope: !19649)
!19651 = !DILocation(line: 1101, column: 40, scope: !19652)
!19652 = distinct !DILexicalBlock(scope: !19648, file: !2306, line: 1100, column: 47)
!19653 = !DILocation(line: 1101, column: 25, scope: !19652)
!19654 = !DILocation(line: 1101, column: 28, scope: !19652)
!19655 = !DILocation(line: 1101, column: 38, scope: !19652)
!19656 = !DILocation(line: 1102, column: 25, scope: !19652)
!19657 = !DILocation(line: 1103, column: 17, scope: !19652)
!19658 = !DILocation(line: 1104, column: 29, scope: !19649)
!19659 = !DILocation(line: 1104, column: 32, scope: !19649)
!19660 = !DILocation(line: 1104, column: 23, scope: !19649)
!19661 = !DILocation(line: 1105, column: 9, scope: !19649)
!19662 = !DILocation(line: 1105, column: 22, scope: !19663)
!19663 = distinct !DILexicalBlock(scope: !19643, file: !2306, line: 1105, column: 20)
!19664 = !DILocation(line: 1105, column: 25, scope: !19663)
!19665 = !DILocation(line: 1105, column: 35, scope: !19663)
!19666 = !DILocation(line: 1105, column: 52, scope: !19663)
!19667 = !DILocation(line: 1106, column: 39, scope: !19663)
!19668 = !DILocation(line: 1106, column: 43, scope: !19663)
!19669 = !DILocation(line: 1106, column: 46, scope: !19663)
!19670 = !DILocation(line: 1106, column: 20, scope: !19663)
!19671 = !DILocation(line: 1105, column: 20, scope: !19643)
!19672 = !DILocation(line: 1107, column: 32, scope: !19673)
!19673 = distinct !DILexicalBlock(scope: !19663, file: !2306, line: 1106, column: 69)
!19674 = !DILocation(line: 1107, column: 17, scope: !19673)
!19675 = !DILocation(line: 1107, column: 20, scope: !19673)
!19676 = !DILocation(line: 1107, column: 30, scope: !19673)
!19677 = !DILocation(line: 1108, column: 17, scope: !19673)
!19678 = !DILocation(line: 1109, column: 9, scope: !19673)
!19679 = !DILocation(line: 1114, column: 13, scope: !19680)
!19680 = distinct !DILexicalBlock(scope: !19110, file: !2306, line: 1114, column: 13)
!19681 = !DILocation(line: 1114, column: 16, scope: !19680)
!19682 = !DILocation(line: 1114, column: 25, scope: !19680)
!19683 = !DILocation(line: 1114, column: 13, scope: !19110)
!19684 = !DILocation(line: 1115, column: 31, scope: !19685)
!19685 = distinct !DILexicalBlock(scope: !19680, file: !2306, line: 1114, column: 36)
!19686 = !DILocation(line: 1115, column: 34, scope: !19685)
!19687 = !DILocation(line: 1115, column: 17, scope: !19685)
!19688 = !DILocation(line: 1115, column: 20, scope: !19685)
!19689 = !DILocation(line: 1115, column: 29, scope: !19685)
!19690 = !DILocation(line: 1116, column: 21, scope: !19691)
!19691 = distinct !DILexicalBlock(scope: !19685, file: !2306, line: 1116, column: 21)
!19692 = !DILocation(line: 1116, column: 24, scope: !19691)
!19693 = !DILocation(line: 1116, column: 34, scope: !19691)
!19694 = !DILocation(line: 1116, column: 21, scope: !19685)
!19695 = !DILocation(line: 1117, column: 25, scope: !19691)
!19696 = !DILocation(line: 1117, column: 25, scope: !19697)
!19697 = distinct !DILexicalBlock(scope: !19691, file: !2306, line: 1117, column: 25)
!19698 = !DILocation(line: 1118, column: 9, scope: !19685)
!19699 = !DILocation(line: 1119, column: 16, scope: !19110)
!19700 = !DILocation(line: 1119, column: 41, scope: !19110)
!19701 = !DILocation(line: 1119, column: 9, scope: !19110)
!19702 = !DILocation(line: 1120, column: 1, scope: !19110)
!19703 = distinct !DISubprogram(name: "leave_dir", scope: !2430, file: !2430, line: 125, type: !2444, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!19704 = !DILocalVariable(name: "fts", arg: 1, scope: !19703, file: !2430, line: 125, type: !2331)
!19705 = !DILocation(line: 125, column: 17, scope: !19703)
!19706 = !DILocalVariable(name: "ent", arg: 2, scope: !19703, file: !2430, line: 125, type: !2414)
!19707 = !DILocation(line: 125, column: 30, scope: !19703)
!19708 = !DILocalVariable(name: "st", scope: !19703, file: !2430, line: 127, type: !2446)
!19709 = !DILocation(line: 127, column: 22, scope: !19703)
!19710 = !DILocation(line: 127, column: 27, scope: !19703)
!19711 = !DILocation(line: 127, column: 32, scope: !19703)
!19712 = !DILocation(line: 128, column: 7, scope: !19713)
!19713 = distinct !DILexicalBlock(scope: !19703, file: !2430, line: 128, column: 7)
!19714 = !DILocation(line: 128, column: 12, scope: !19713)
!19715 = !DILocation(line: 128, column: 24, scope: !19713)
!19716 = !DILocation(line: 128, column: 7, scope: !19703)
!19717 = !DILocalVariable(name: "obj", scope: !19718, file: !2430, line: 130, type: !2429)
!19718 = distinct !DILexicalBlock(scope: !19713, file: !2430, line: 129, column: 5)
!19719 = !DILocation(line: 130, column: 25, scope: !19718)
!19720 = !DILocalVariable(name: "found", scope: !19718, file: !2430, line: 131, type: !47)
!19721 = !DILocation(line: 131, column: 13, scope: !19718)
!19722 = !DILocation(line: 132, column: 17, scope: !19718)
!19723 = !DILocation(line: 132, column: 21, scope: !19718)
!19724 = !DILocation(line: 132, column: 11, scope: !19718)
!19725 = !DILocation(line: 132, column: 15, scope: !19718)
!19726 = !DILocation(line: 133, column: 17, scope: !19718)
!19727 = !DILocation(line: 133, column: 21, scope: !19718)
!19728 = !DILocation(line: 133, column: 11, scope: !19718)
!19729 = !DILocation(line: 133, column: 15, scope: !19718)
!19730 = !DILocation(line: 134, column: 28, scope: !19718)
!19731 = !DILocation(line: 134, column: 33, scope: !19718)
!19732 = !DILocation(line: 134, column: 43, scope: !19718)
!19733 = !DILocation(line: 134, column: 47, scope: !19718)
!19734 = !DILocation(line: 134, column: 15, scope: !19718)
!19735 = !DILocation(line: 134, column: 13, scope: !19718)
!19736 = !DILocation(line: 135, column: 12, scope: !19737)
!19737 = distinct !DILexicalBlock(scope: !19718, file: !2430, line: 135, column: 11)
!19738 = !DILocation(line: 135, column: 11, scope: !19718)
!19739 = !DILocation(line: 136, column: 9, scope: !19737)
!19740 = !DILocation(line: 137, column: 13, scope: !19718)
!19741 = !DILocation(line: 137, column: 7, scope: !19718)
!19742 = !DILocation(line: 138, column: 5, scope: !19718)
!19743 = !DILocalVariable(name: "parent", scope: !19744, file: !2430, line: 141, type: !2414)
!19744 = distinct !DILexicalBlock(scope: !19713, file: !2430, line: 140, column: 5)
!19745 = !DILocation(line: 141, column: 15, scope: !19744)
!19746 = !DILocation(line: 141, column: 24, scope: !19744)
!19747 = !DILocation(line: 141, column: 29, scope: !19744)
!19748 = !DILocation(line: 142, column: 11, scope: !19749)
!19749 = distinct !DILexicalBlock(scope: !19744, file: !2430, line: 142, column: 11)
!19750 = !DILocation(line: 142, column: 18, scope: !19749)
!19751 = !DILocation(line: 142, column: 26, scope: !19749)
!19752 = !DILocation(line: 142, column: 34, scope: !19749)
!19753 = !DILocation(line: 142, column: 42, scope: !19749)
!19754 = !DILocation(line: 142, column: 31, scope: !19749)
!19755 = !DILocation(line: 142, column: 11, scope: !19744)
!19756 = !DILocation(line: 143, column: 9, scope: !19749)
!19757 = !DILocation(line: 143, column: 9, scope: !19758)
!19758 = distinct !DILexicalBlock(scope: !19759, file: !2430, line: 143, column: 9)
!19759 = distinct !DILexicalBlock(scope: !19749, file: !2430, line: 143, column: 9)
!19760 = !{!19761, !3178, i64 16}
!19761 = !{!"cycle_check_state", !3861, i64 0, !3178, i64 16, !2981, i64 24}
!19762 = !DILocation(line: 143, column: 9, scope: !19759)
!19763 = !DILocation(line: 143, column: 9, scope: !19764)
!19764 = distinct !DILexicalBlock(scope: !19759, file: !2430, line: 143, column: 9)
!19765 = !{!19761, !3178, i64 0}
!19766 = !{!19761, !3178, i64 8}
!19767 = !DILocation(line: 143, column: 9, scope: !19768)
!19768 = distinct !DILexicalBlock(scope: !19764, file: !2430, line: 143, column: 9)
!19769 = !DILocation(line: 146, column: 1, scope: !19703)
!19770 = distinct !DISubprogram(name: "fts_safe_changedir", scope: !2306, file: !2306, line: 2043, type: !2494, scopeLine: 2044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!19771 = !DILocalVariable(name: "sp", arg: 1, scope: !19770, file: !2306, line: 2043, type: !2331)
!19772 = !DILocation(line: 2043, column: 26, scope: !19770)
!19773 = !DILocalVariable(name: "p", arg: 2, scope: !19770, file: !2306, line: 2043, type: !2414)
!19774 = !DILocation(line: 2043, column: 38, scope: !19770)
!19775 = !DILocalVariable(name: "fd", arg: 3, scope: !19770, file: !2306, line: 2043, type: !5)
!19776 = !DILocation(line: 2043, column: 45, scope: !19770)
!19777 = !DILocalVariable(name: "dir", arg: 4, scope: !19770, file: !2306, line: 2043, type: !112)
!19778 = !DILocation(line: 2043, column: 61, scope: !19770)
!19779 = !DILocalVariable(name: "ret", scope: !19770, file: !2306, line: 2045, type: !5)
!19780 = !DILocation(line: 2045, column: 13, scope: !19770)
!19781 = !DILocalVariable(name: "is_dotdot", scope: !19770, file: !2306, line: 2046, type: !117)
!19782 = !DILocation(line: 2046, column: 14, scope: !19770)
!19783 = !DILocation(line: 2046, column: 26, scope: !19770)
!19784 = !DILocation(line: 2046, column: 30, scope: !19770)
!19785 = !DILocation(line: 2046, column: 33, scope: !19770)
!19786 = !DILocation(line: 0, scope: !19770)
!19787 = !DILocalVariable(name: "newfd", scope: !19770, file: !2306, line: 2047, type: !5)
!19788 = !DILocation(line: 2047, column: 13, scope: !19770)
!19789 = !DILocation(line: 2053, column: 13, scope: !19790)
!19790 = distinct !DILexicalBlock(scope: !19770, file: !2306, line: 2053, column: 13)
!19791 = !DILocation(line: 2053, column: 13, scope: !19770)
!19792 = !DILocation(line: 2055, column: 17, scope: !19793)
!19793 = distinct !DILexicalBlock(scope: !19794, file: !2306, line: 2055, column: 17)
!19794 = distinct !DILexicalBlock(scope: !19790, file: !2306, line: 2054, column: 11)
!19795 = !DILocation(line: 2055, column: 35, scope: !19793)
!19796 = !DILocation(line: 2055, column: 43, scope: !19793)
!19797 = !DILocation(line: 2055, column: 40, scope: !19793)
!19798 = !DILocation(line: 2055, column: 17, scope: !19794)
!19799 = !DILocation(line: 2056, column: 22, scope: !19793)
!19800 = !DILocation(line: 2056, column: 15, scope: !19793)
!19801 = !DILocation(line: 2057, column: 13, scope: !19794)
!19802 = !DILocation(line: 2060, column: 13, scope: !19803)
!19803 = distinct !DILexicalBlock(scope: !19770, file: !2306, line: 2060, column: 13)
!19804 = !DILocation(line: 2060, column: 16, scope: !19803)
!19805 = !DILocation(line: 2060, column: 20, scope: !19803)
!19806 = !DILocation(line: 2060, column: 23, scope: !19803)
!19807 = !DILocation(line: 2060, column: 33, scope: !19803)
!19808 = !DILocation(line: 2060, column: 36, scope: !19803)
!19809 = !DILocation(line: 2060, column: 13, scope: !19770)
!19810 = !DILocation(line: 2067, column: 35, scope: !19811)
!19811 = distinct !DILexicalBlock(scope: !19812, file: !2306, line: 2067, column: 18)
!19812 = distinct !DILexicalBlock(scope: !19803, file: !2306, line: 2061, column: 11)
!19813 = !DILocation(line: 2067, column: 39, scope: !19811)
!19814 = !DILocation(line: 2067, column: 20, scope: !19811)
!19815 = !DILocation(line: 2067, column: 18, scope: !19812)
!19816 = !DILocalVariable(name: "parent_fd", scope: !19817, file: !2306, line: 2069, type: !5)
!19817 = distinct !DILexicalBlock(scope: !19811, file: !2306, line: 2068, column: 15)
!19818 = !DILocation(line: 2069, column: 21, scope: !19817)
!19819 = !DILocation(line: 2071, column: 42, scope: !19817)
!19820 = !DILocation(line: 2071, column: 46, scope: !19817)
!19821 = !DILocation(line: 2071, column: 29, scope: !19817)
!19822 = !DILocation(line: 2071, column: 27, scope: !19817)
!19823 = !DILocation(line: 2072, column: 26, scope: !19824)
!19824 = distinct !DILexicalBlock(scope: !19817, file: !2306, line: 2072, column: 21)
!19825 = !DILocation(line: 2072, column: 23, scope: !19824)
!19826 = !DILocation(line: 2072, column: 21, scope: !19817)
!19827 = !DILocation(line: 2074, column: 26, scope: !19828)
!19828 = distinct !DILexicalBlock(scope: !19824, file: !2306, line: 2073, column: 19)
!19829 = !DILocation(line: 2074, column: 24, scope: !19828)
!19830 = !DILocation(line: 2075, column: 25, scope: !19828)
!19831 = !DILocation(line: 2076, column: 19, scope: !19828)
!19832 = !DILocation(line: 2077, column: 15, scope: !19817)
!19833 = !DILocation(line: 2078, column: 11, scope: !19812)
!19834 = !DILocation(line: 2080, column: 17, scope: !19770)
!19835 = !DILocation(line: 2080, column: 15, scope: !19770)
!19836 = !DILocation(line: 2081, column: 13, scope: !19837)
!19837 = distinct !DILexicalBlock(scope: !19770, file: !2306, line: 2081, column: 13)
!19838 = !DILocation(line: 2081, column: 16, scope: !19837)
!19839 = !DILocation(line: 2081, column: 20, scope: !19837)
!19840 = !DILocation(line: 2081, column: 41, scope: !19837)
!19841 = !DILocation(line: 2081, column: 45, scope: !19837)
!19842 = !DILocation(line: 2081, column: 32, scope: !19837)
!19843 = !DILocation(line: 2081, column: 30, scope: !19837)
!19844 = !DILocation(line: 2081, column: 51, scope: !19837)
!19845 = !DILocation(line: 2081, column: 13, scope: !19770)
!19846 = !DILocation(line: 2082, column: 11, scope: !19837)
!19847 = !DILocation(line: 2091, column: 13, scope: !19848)
!19848 = distinct !DILexicalBlock(scope: !19770, file: !2306, line: 2091, column: 13)
!19849 = !DILocation(line: 2092, column: 13, scope: !19848)
!19850 = !DILocation(line: 2092, column: 17, scope: !19848)
!19851 = !DILocation(line: 2092, column: 21, scope: !19848)
!19852 = !DILocation(line: 2092, column: 24, scope: !19848)
!19853 = !DILocation(line: 2091, column: 13, scope: !19770)
!19854 = !DILocalVariable(name: "sb", scope: !19855, file: !2306, line: 2094, type: !2387)
!19855 = distinct !DILexicalBlock(scope: !19848, file: !2306, line: 2093, column: 11)
!19856 = !DILocation(line: 2094, column: 25, scope: !19855)
!19857 = !DILocation(line: 2095, column: 23, scope: !19858)
!19858 = distinct !DILexicalBlock(scope: !19855, file: !2306, line: 2095, column: 17)
!19859 = !DILocation(line: 2095, column: 17, scope: !19858)
!19860 = !DILocation(line: 2095, column: 17, scope: !19855)
!19861 = !DILocation(line: 2097, column: 21, scope: !19862)
!19862 = distinct !DILexicalBlock(scope: !19858, file: !2306, line: 2096, column: 15)
!19863 = !DILocation(line: 2098, column: 17, scope: !19862)
!19864 = !DILocation(line: 2100, column: 17, scope: !19865)
!19865 = distinct !DILexicalBlock(scope: !19855, file: !2306, line: 2100, column: 17)
!19866 = !DILocation(line: 2100, column: 20, scope: !19865)
!19867 = !DILocation(line: 2100, column: 31, scope: !19865)
!19868 = !DILocation(line: 2100, column: 44, scope: !19865)
!19869 = !DILocation(line: 2100, column: 38, scope: !19865)
!19870 = !DILocation(line: 2101, column: 17, scope: !19865)
!19871 = !DILocation(line: 2101, column: 20, scope: !19865)
!19872 = !DILocation(line: 2101, column: 23, scope: !19865)
!19873 = !DILocation(line: 2101, column: 34, scope: !19865)
!19874 = !DILocation(line: 2101, column: 47, scope: !19865)
!19875 = !DILocation(line: 2101, column: 41, scope: !19865)
!19876 = !DILocation(line: 2100, column: 17, scope: !19855)
!19877 = !DILocation(line: 2103, column: 17, scope: !19878)
!19878 = distinct !DILexicalBlock(scope: !19865, file: !2306, line: 2102, column: 15)
!19879 = !DILocation(line: 2104, column: 21, scope: !19878)
!19880 = !DILocation(line: 2105, column: 17, scope: !19878)
!19881 = !DILocation(line: 2107, column: 11, scope: !19855)
!19882 = !DILocation(line: 2109, column: 13, scope: !19883)
!19883 = distinct !DILexicalBlock(scope: !19770, file: !2306, line: 2109, column: 13)
!19884 = !DILocation(line: 2109, column: 13, scope: !19770)
!19885 = !DILocation(line: 2111, column: 29, scope: !19886)
!19886 = distinct !DILexicalBlock(scope: !19883, file: !2306, line: 2110, column: 11)
!19887 = !DILocation(line: 2111, column: 33, scope: !19886)
!19888 = !DILocation(line: 2111, column: 42, scope: !19886)
!19889 = !DILocation(line: 2111, column: 40, scope: !19886)
!19890 = !DILocation(line: 2111, column: 13, scope: !19886)
!19891 = !DILocation(line: 2112, column: 13, scope: !19886)
!19892 = !DILocation(line: 2115, column: 22, scope: !19770)
!19893 = !DILocation(line: 2115, column: 15, scope: !19770)
!19894 = !DILocation(line: 2115, column: 13, scope: !19770)
!19895 = !DILocation(line: 2115, column: 9, scope: !19770)
!19896 = !DILabel(scope: !19770, name: "bail", file: !2306, line: 2116)
!19897 = !DILocation(line: 2116, column: 1, scope: !19770)
!19898 = !DILocation(line: 2117, column: 13, scope: !19899)
!19899 = distinct !DILexicalBlock(scope: !19770, file: !2306, line: 2117, column: 13)
!19900 = !DILocation(line: 2117, column: 16, scope: !19899)
!19901 = !DILocation(line: 2117, column: 13, scope: !19770)
!19902 = !DILocalVariable(name: "oerrno", scope: !19903, file: !2306, line: 2119, type: !5)
!19903 = distinct !DILexicalBlock(scope: !19899, file: !2306, line: 2118, column: 11)
!19904 = !DILocation(line: 2119, column: 17, scope: !19903)
!19905 = !DILocation(line: 2119, column: 26, scope: !19903)
!19906 = !DILocation(line: 2120, column: 25, scope: !19903)
!19907 = !DILocation(line: 2120, column: 19, scope: !19903)
!19908 = !DILocation(line: 2121, column: 13, scope: !19903)
!19909 = !DILocation(line: 2122, column: 11, scope: !19903)
!19910 = !DILocation(line: 2123, column: 16, scope: !19770)
!19911 = !DILocation(line: 2123, column: 9, scope: !19770)
!19912 = !DILocation(line: 2124, column: 1, scope: !19770)
!19913 = distinct !DISubprogram(name: "fts_build", scope: !2306, file: !2306, line: 1300, type: !2421, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!19914 = !DILocalVariable(name: "sp", arg: 1, scope: !19913, file: !2306, line: 1300, type: !2331)
!19915 = !DILocation(line: 1300, column: 26, scope: !19913)
!19916 = !DILocalVariable(name: "type", arg: 2, scope: !19913, file: !2306, line: 1300, type: !5)
!19917 = !DILocation(line: 1300, column: 34, scope: !19913)
!19918 = !DILocalVariable(name: "p", scope: !19913, file: !2306, line: 1302, type: !2414)
!19919 = !DILocation(line: 1302, column: 26, scope: !19913)
!19920 = !DILocalVariable(name: "head", scope: !19913, file: !2306, line: 1302, type: !2414)
!19921 = !DILocation(line: 1302, column: 30, scope: !19913)
!19922 = !DILocalVariable(name: "nitems", scope: !19913, file: !2306, line: 1303, type: !52)
!19923 = !DILocation(line: 1303, column: 25, scope: !19913)
!19924 = !DILocalVariable(name: "tail", scope: !19913, file: !2306, line: 1304, type: !2414)
!19925 = !DILocation(line: 1304, column: 17, scope: !19913)
!19926 = !DILocalVariable(name: "oldaddr", scope: !19913, file: !2306, line: 1305, type: !47)
!19927 = !DILocation(line: 1305, column: 15, scope: !19913)
!19928 = !DILocalVariable(name: "saved_errno", scope: !19913, file: !2306, line: 1306, type: !5)
!19929 = !DILocation(line: 1306, column: 13, scope: !19913)
!19930 = !DILocalVariable(name: "descend", scope: !19913, file: !2306, line: 1307, type: !117)
!19931 = !DILocation(line: 1307, column: 14, scope: !19913)
!19932 = !DILocalVariable(name: "doadjust", scope: !19913, file: !2306, line: 1308, type: !117)
!19933 = !DILocation(line: 1308, column: 14, scope: !19913)
!19934 = !DILocalVariable(name: "level", scope: !19913, file: !2306, line: 1309, type: !539)
!19935 = !DILocation(line: 1309, column: 19, scope: !19913)
!19936 = !DILocalVariable(name: "len", scope: !19913, file: !2306, line: 1310, type: !52)
!19937 = !DILocation(line: 1310, column: 16, scope: !19913)
!19938 = !DILocalVariable(name: "maxlen", scope: !19913, file: !2306, line: 1310, type: !52)
!19939 = !DILocation(line: 1310, column: 21, scope: !19913)
!19940 = !DILocalVariable(name: "new_len", scope: !19913, file: !2306, line: 1310, type: !52)
!19941 = !DILocation(line: 1310, column: 29, scope: !19913)
!19942 = !DILocalVariable(name: "cp", scope: !19913, file: !2306, line: 1311, type: !7)
!19943 = !DILocation(line: 1311, column: 15, scope: !19913)
!19944 = !DILocalVariable(name: "dir_fd", scope: !19913, file: !2306, line: 1312, type: !5)
!19945 = !DILocation(line: 1312, column: 13, scope: !19913)
!19946 = !DILocalVariable(name: "cur", scope: !19913, file: !2306, line: 1313, type: !2414)
!19947 = !DILocation(line: 1313, column: 17, scope: !19913)
!19948 = !DILocation(line: 1313, column: 23, scope: !19913)
!19949 = !DILocation(line: 1313, column: 27, scope: !19913)
!19950 = !DILocalVariable(name: "continue_readdir", scope: !19913, file: !2306, line: 1314, type: !117)
!19951 = !DILocation(line: 1314, column: 14, scope: !19913)
!19952 = !DILocation(line: 1314, column: 35, scope: !19913)
!19953 = !DILocation(line: 1314, column: 40, scope: !19913)
!19954 = !DILocation(line: 1314, column: 34, scope: !19913)
!19955 = !DILocation(line: 1314, column: 33, scope: !19913)
!19956 = !DILocalVariable(name: "sort_by_inode", scope: !19913, file: !2306, line: 1315, type: !117)
!19957 = !DILocation(line: 1315, column: 14, scope: !19913)
!19958 = !DILocalVariable(name: "max_entries", scope: !19913, file: !2306, line: 1316, type: !52)
!19959 = !DILocation(line: 1316, column: 16, scope: !19913)
!19960 = !DILocation(line: 1321, column: 13, scope: !19961)
!19961 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1321, column: 13)
!19962 = !DILocation(line: 1321, column: 13, scope: !19913)
!19963 = !DILocalVariable(name: "dp", scope: !19964, file: !2306, line: 1323, type: !580)
!19964 = distinct !DILexicalBlock(scope: !19961, file: !2306, line: 1322, column: 11)
!19965 = !DILocation(line: 1323, column: 18, scope: !19964)
!19966 = !DILocation(line: 1323, column: 23, scope: !19964)
!19967 = !DILocation(line: 1323, column: 28, scope: !19964)
!19968 = !DILocation(line: 1324, column: 29, scope: !19964)
!19969 = !DILocation(line: 1324, column: 22, scope: !19964)
!19970 = !DILocation(line: 1324, column: 20, scope: !19964)
!19971 = !DILocation(line: 1325, column: 17, scope: !19972)
!19972 = distinct !DILexicalBlock(scope: !19964, file: !2306, line: 1325, column: 17)
!19973 = !DILocation(line: 1325, column: 24, scope: !19972)
!19974 = !DILocation(line: 1325, column: 17, scope: !19964)
!19975 = !DILocation(line: 1327, column: 17, scope: !19976)
!19976 = distinct !DILexicalBlock(scope: !19972, file: !2306, line: 1326, column: 15)
!19977 = !DILocation(line: 1327, column: 17, scope: !19978)
!19978 = distinct !DILexicalBlock(scope: !19976, file: !2306, line: 1327, column: 17)
!19979 = !DILocation(line: 1328, column: 21, scope: !19980)
!19980 = distinct !DILexicalBlock(scope: !19976, file: !2306, line: 1328, column: 21)
!19981 = !DILocation(line: 1328, column: 26, scope: !19980)
!19982 = !DILocation(line: 1328, column: 21, scope: !19976)
!19983 = !DILocation(line: 1330, column: 21, scope: !19984)
!19984 = distinct !DILexicalBlock(scope: !19980, file: !2306, line: 1329, column: 19)
!19985 = !DILocation(line: 1330, column: 26, scope: !19984)
!19986 = !DILocation(line: 1330, column: 35, scope: !19984)
!19987 = !DILocation(line: 1331, column: 38, scope: !19984)
!19988 = !DILocation(line: 1331, column: 21, scope: !19984)
!19989 = !DILocation(line: 1331, column: 26, scope: !19984)
!19990 = !DILocation(line: 1331, column: 36, scope: !19984)
!19991 = !DILocation(line: 1332, column: 19, scope: !19984)
!19992 = !DILocation(line: 1333, column: 17, scope: !19976)
!19993 = !DILocation(line: 1335, column: 11, scope: !19964)
!19994 = !DILocation(line: 1340, column: 34, scope: !19995)
!19995 = distinct !DILexicalBlock(scope: !19996, file: !2306, line: 1340, column: 17)
!19996 = distinct !DILexicalBlock(scope: !19961, file: !2306, line: 1337, column: 11)
!19997 = !DILocation(line: 0, scope: !19995)
!19998 = !DILocation(line: 1340, column: 18, scope: !19995)
!19999 = !DILocation(line: 1340, column: 23, scope: !19995)
!20000 = !DILocation(line: 1340, column: 32, scope: !19995)
!20001 = !DILocation(line: 1340, column: 74, scope: !19995)
!20002 = !DILocation(line: 1340, column: 17, scope: !19996)
!20003 = !DILocation(line: 1342, column: 21, scope: !20004)
!20004 = distinct !DILexicalBlock(scope: !20005, file: !2306, line: 1342, column: 21)
!20005 = distinct !DILexicalBlock(scope: !19995, file: !2306, line: 1341, column: 15)
!20006 = !DILocation(line: 1342, column: 26, scope: !20004)
!20007 = !DILocation(line: 1342, column: 21, scope: !20005)
!20008 = !DILocation(line: 1344, column: 21, scope: !20009)
!20009 = distinct !DILexicalBlock(scope: !20004, file: !2306, line: 1343, column: 19)
!20010 = !DILocation(line: 1344, column: 26, scope: !20009)
!20011 = !DILocation(line: 1344, column: 35, scope: !20009)
!20012 = !DILocation(line: 1345, column: 38, scope: !20009)
!20013 = !DILocation(line: 1345, column: 21, scope: !20009)
!20014 = !DILocation(line: 1345, column: 26, scope: !20009)
!20015 = !DILocation(line: 1345, column: 36, scope: !20009)
!20016 = !DILocation(line: 1346, column: 19, scope: !20009)
!20017 = !DILocation(line: 1347, column: 17, scope: !20005)
!20018 = !DILocation(line: 1352, column: 17, scope: !20019)
!20019 = distinct !DILexicalBlock(scope: !19996, file: !2306, line: 1352, column: 17)
!20020 = !DILocation(line: 1352, column: 22, scope: !20019)
!20021 = !DILocation(line: 1352, column: 31, scope: !20019)
!20022 = !DILocation(line: 1352, column: 17, scope: !19996)
!20023 = !DILocation(line: 1353, column: 40, scope: !20019)
!20024 = !DILocation(line: 1353, column: 44, scope: !20019)
!20025 = !DILocation(line: 1353, column: 31, scope: !20019)
!20026 = !DILocation(line: 1353, column: 15, scope: !20019)
!20027 = !DILocation(line: 1353, column: 20, scope: !20019)
!20028 = !DILocation(line: 1353, column: 29, scope: !20019)
!20029 = !DILocation(line: 1354, column: 22, scope: !20030)
!20030 = distinct !DILexicalBlock(scope: !20019, file: !2306, line: 1354, column: 22)
!20031 = !DILocation(line: 1354, column: 26, scope: !20030)
!20032 = !DILocation(line: 1354, column: 38, scope: !20030)
!20033 = !DILocation(line: 1354, column: 22, scope: !20019)
!20034 = !DILocation(line: 1361, column: 17, scope: !20035)
!20035 = distinct !DILexicalBlock(scope: !20030, file: !2306, line: 1355, column: 15)
!20036 = !DILocation(line: 1361, column: 17, scope: !20037)
!20037 = distinct !DILexicalBlock(scope: !20035, file: !2306, line: 1361, column: 17)
!20038 = !DILocation(line: 1362, column: 27, scope: !20035)
!20039 = !DILocation(line: 1362, column: 31, scope: !20035)
!20040 = !DILocation(line: 1362, column: 17, scope: !20035)
!20041 = !DILocation(line: 1363, column: 34, scope: !20042)
!20042 = distinct !DILexicalBlock(scope: !20035, file: !2306, line: 1363, column: 21)
!20043 = !DILocation(line: 1363, column: 38, scope: !20042)
!20044 = !DILocation(line: 1363, column: 23, scope: !20042)
!20045 = !DILocation(line: 1363, column: 21, scope: !20035)
!20046 = !DILocation(line: 1365, column: 21, scope: !20047)
!20047 = distinct !DILexicalBlock(scope: !20042, file: !2306, line: 1364, column: 19)
!20048 = !DILocation(line: 1366, column: 21, scope: !20047)
!20049 = !DILocation(line: 1368, column: 15, scope: !20035)
!20050 = !DILocation(line: 1378, column: 23, scope: !19913)
!20051 = !DILocation(line: 1378, column: 27, scope: !19913)
!20052 = !DILocation(line: 1378, column: 21, scope: !19913)
!20053 = !DILocation(line: 1395, column: 13, scope: !20054)
!20054 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1395, column: 13)
!20055 = !DILocation(line: 1395, column: 13, scope: !19913)
!20056 = !DILocation(line: 1399, column: 21, scope: !20057)
!20057 = distinct !DILexicalBlock(scope: !20054, file: !2306, line: 1396, column: 11)
!20058 = !DILocation(line: 1400, column: 11, scope: !20057)
!20059 = !DILocation(line: 1405, column: 24, scope: !20060)
!20060 = distinct !DILexicalBlock(scope: !20054, file: !2306, line: 1402, column: 11)
!20061 = !DILocation(line: 1405, column: 29, scope: !20060)
!20062 = !DILocation(line: 1406, column: 24, scope: !20060)
!20063 = !DILocation(line: 1406, column: 30, scope: !20060)
!20064 = !DILocation(line: 1406, column: 49, scope: !20060)
!20065 = !DILocation(line: 1406, column: 52, scope: !20060)
!20066 = !DILocation(line: 1407, column: 30, scope: !20060)
!20067 = !DILocation(line: 1407, column: 35, scope: !20060)
!20068 = !DILocation(line: 1408, column: 30, scope: !20060)
!20069 = !DILocation(line: 1408, column: 33, scope: !20060)
!20070 = !DILocation(line: 1408, column: 38, scope: !20060)
!20071 = !DILocation(line: 1408, column: 49, scope: !20060)
!20072 = !DILocation(line: 1408, column: 58, scope: !20060)
!20073 = !DILocation(line: 1409, column: 30, scope: !20060)
!20074 = !DILocation(line: 1409, column: 53, scope: !20060)
!20075 = !DILocation(line: 1409, column: 58, scope: !20060)
!20076 = !DILocation(line: 1409, column: 34, scope: !20060)
!20077 = !DILocation(line: 1410, column: 34, scope: !20060)
!20078 = !DILocation(line: 0, scope: !20060)
!20079 = !DILocation(line: 1406, column: 27, scope: !20060)
!20080 = !DILocation(line: 1405, column: 21, scope: !20060)
!20081 = !DILocation(line: 1411, column: 17, scope: !20082)
!20082 = distinct !DILexicalBlock(scope: !20060, file: !2306, line: 1411, column: 17)
!20083 = !DILocation(line: 1411, column: 25, scope: !20082)
!20084 = !DILocation(line: 1411, column: 28, scope: !20082)
!20085 = !DILocation(line: 1411, column: 33, scope: !20082)
!20086 = !DILocation(line: 1411, column: 17, scope: !20060)
!20087 = !DILocation(line: 1413, column: 21, scope: !20088)
!20088 = distinct !DILexicalBlock(scope: !20089, file: !2306, line: 1413, column: 21)
!20089 = distinct !DILexicalBlock(scope: !20082, file: !2306, line: 1412, column: 15)
!20090 = !DILocation(line: 1413, column: 21, scope: !20089)
!20091 = !DILocation(line: 1414, column: 35, scope: !20088)
!20092 = !DILocation(line: 1414, column: 28, scope: !20088)
!20093 = !DILocation(line: 1414, column: 26, scope: !20088)
!20094 = !DILocation(line: 1414, column: 19, scope: !20088)
!20095 = !DILocation(line: 1415, column: 21, scope: !20096)
!20096 = distinct !DILexicalBlock(scope: !20089, file: !2306, line: 1415, column: 21)
!20097 = !DILocation(line: 1415, column: 28, scope: !20096)
!20098 = !DILocation(line: 1415, column: 32, scope: !20096)
!20099 = !DILocation(line: 1415, column: 54, scope: !20096)
!20100 = !DILocation(line: 1415, column: 58, scope: !20096)
!20101 = !DILocation(line: 1415, column: 63, scope: !20096)
!20102 = !DILocation(line: 1415, column: 35, scope: !20096)
!20103 = !DILocation(line: 1415, column: 21, scope: !20089)
!20104 = !DILocation(line: 1416, column: 29, scope: !20105)
!20105 = distinct !DILexicalBlock(scope: !20106, file: !2306, line: 1416, column: 29)
!20106 = distinct !DILexicalBlock(scope: !20096, file: !2306, line: 1415, column: 78)
!20107 = !DILocation(line: 1416, column: 37, scope: !20105)
!20108 = !DILocation(line: 1416, column: 40, scope: !20105)
!20109 = !DILocation(line: 1416, column: 45, scope: !20105)
!20110 = !DILocation(line: 1416, column: 29, scope: !20106)
!20111 = !DILocation(line: 1417, column: 50, scope: !20105)
!20112 = !DILocation(line: 1417, column: 33, scope: !20105)
!20113 = !DILocation(line: 1417, column: 38, scope: !20105)
!20114 = !DILocation(line: 1417, column: 48, scope: !20105)
!20115 = !DILocation(line: 1418, column: 25, scope: !20106)
!20116 = !DILocation(line: 1418, column: 30, scope: !20106)
!20117 = !DILocation(line: 1418, column: 40, scope: !20106)
!20118 = !DILocation(line: 1419, column: 33, scope: !20106)
!20119 = !DILocation(line: 1420, column: 25, scope: !20106)
!20120 = !DILocation(line: 1420, column: 25, scope: !20121)
!20121 = distinct !DILexicalBlock(scope: !20106, file: !2306, line: 1420, column: 25)
!20122 = !DILocation(line: 1421, column: 29, scope: !20123)
!20123 = distinct !DILexicalBlock(scope: !20106, file: !2306, line: 1421, column: 29)
!20124 = !DILocation(line: 1421, column: 46, scope: !20123)
!20125 = !DILocation(line: 1421, column: 54, scope: !20123)
!20126 = !DILocation(line: 1421, column: 51, scope: !20123)
!20127 = !DILocation(line: 1421, column: 29, scope: !20106)
!20128 = !DILocation(line: 1422, column: 40, scope: !20123)
!20129 = !DILocation(line: 1422, column: 33, scope: !20123)
!20130 = !DILocation(line: 1423, column: 25, scope: !20106)
!20131 = !DILocation(line: 1423, column: 30, scope: !20106)
!20132 = !DILocation(line: 1423, column: 39, scope: !20106)
!20133 = !DILocation(line: 1424, column: 17, scope: !20106)
!20134 = !DILocation(line: 1425, column: 33, scope: !20096)
!20135 = !DILocation(line: 1426, column: 15, scope: !20089)
!20136 = !DILocation(line: 1439, column: 15, scope: !19913)
!20137 = !DILocation(line: 1439, column: 13, scope: !19913)
!20138 = !DILocation(line: 1440, column: 13, scope: !20139)
!20139 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1440, column: 13)
!20140 = !DILocation(line: 1440, column: 13, scope: !19913)
!20141 = !DILocation(line: 1441, column: 22, scope: !20142)
!20142 = distinct !DILexicalBlock(scope: !20139, file: !2306, line: 1440, column: 33)
!20143 = !DILocation(line: 1441, column: 26, scope: !20142)
!20144 = !DILocation(line: 1441, column: 37, scope: !20142)
!20145 = !DILocation(line: 1441, column: 35, scope: !20142)
!20146 = !DILocation(line: 1441, column: 20, scope: !20142)
!20147 = !DILocation(line: 1442, column: 20, scope: !20142)
!20148 = !DILocation(line: 1442, column: 23, scope: !20142)
!20149 = !DILocation(line: 1443, column: 9, scope: !20142)
!20150 = !DILocation(line: 1445, column: 20, scope: !20151)
!20151 = distinct !DILexicalBlock(scope: !20139, file: !2306, line: 1443, column: 16)
!20152 = !DILocation(line: 1447, column: 12, scope: !19913)
!20153 = !DILocation(line: 1448, column: 18, scope: !19913)
!20154 = !DILocation(line: 1448, column: 22, scope: !19913)
!20155 = !DILocation(line: 1448, column: 36, scope: !19913)
!20156 = !DILocation(line: 1448, column: 34, scope: !19913)
!20157 = !DILocation(line: 1448, column: 16, scope: !19913)
!20158 = !DILocation(line: 1450, column: 17, scope: !19913)
!20159 = !DILocation(line: 1450, column: 22, scope: !19913)
!20160 = !DILocation(line: 1450, column: 32, scope: !19913)
!20161 = !DILocation(line: 1450, column: 15, scope: !19913)
!20162 = !DILocation(line: 1453, column: 18, scope: !19913)
!20163 = !DILocation(line: 1454, column: 14, scope: !19913)
!20164 = !DILocation(line: 1455, column: 14, scope: !19913)
!20165 = !DILocation(line: 1456, column: 16, scope: !19913)
!20166 = !DILocation(line: 1457, column: 9, scope: !19913)
!20167 = !DILocation(line: 1457, column: 16, scope: !19913)
!20168 = !DILocation(line: 1457, column: 21, scope: !19913)
!20169 = !DILocalVariable(name: "d_namelen", scope: !20170, file: !2306, line: 1458, type: !52)
!20170 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1457, column: 31)
!20171 = !DILocation(line: 1458, column: 24, scope: !20170)
!20172 = !DILocation(line: 1459, column: 17, scope: !20170)
!20173 = !DILocalVariable(name: "dp", scope: !20170, file: !2306, line: 1460, type: !2468)
!20174 = !DILocation(line: 1460, column: 32, scope: !20170)
!20175 = !DILocation(line: 1460, column: 45, scope: !20170)
!20176 = !DILocation(line: 1460, column: 50, scope: !20170)
!20177 = !DILocation(line: 1460, column: 37, scope: !20170)
!20178 = !DILocation(line: 1461, column: 21, scope: !20179)
!20179 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1461, column: 21)
!20180 = !DILocation(line: 1461, column: 24, scope: !20179)
!20181 = !DILocation(line: 1461, column: 21, scope: !20170)
!20182 = !DILocation(line: 1462, column: 29, scope: !20183)
!20183 = distinct !DILexicalBlock(scope: !20184, file: !2306, line: 1462, column: 29)
!20184 = distinct !DILexicalBlock(scope: !20179, file: !2306, line: 1461, column: 33)
!20185 = !DILocation(line: 1462, column: 29, scope: !20184)
!20186 = !DILocation(line: 1463, column: 50, scope: !20187)
!20187 = distinct !DILexicalBlock(scope: !20183, file: !2306, line: 1462, column: 36)
!20188 = !DILocation(line: 1463, column: 33, scope: !20187)
!20189 = !DILocation(line: 1463, column: 38, scope: !20187)
!20190 = !DILocation(line: 1463, column: 48, scope: !20187)
!20191 = !DILocation(line: 1466, column: 50, scope: !20187)
!20192 = !DILocation(line: 1466, column: 67, scope: !20187)
!20193 = !DILocation(line: 1466, column: 70, scope: !20187)
!20194 = !DILocation(line: 1466, column: 49, scope: !20187)
!20195 = !DILocation(line: 1466, column: 33, scope: !20187)
!20196 = !DILocation(line: 1466, column: 38, scope: !20187)
!20197 = !DILocation(line: 1466, column: 47, scope: !20187)
!20198 = !DILocation(line: 1468, column: 25, scope: !20187)
!20199 = !DILocation(line: 1469, column: 25, scope: !20184)
!20200 = !DILocation(line: 1471, column: 22, scope: !20201)
!20201 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1471, column: 21)
!20202 = !DILocation(line: 1471, column: 40, scope: !20201)
!20203 = !DILocation(line: 1471, column: 43, scope: !20201)
!20204 = !DILocation(line: 1471, column: 21, scope: !20170)
!20205 = !DILocation(line: 1472, column: 25, scope: !20201)
!20206 = distinct !{!20206, !20166, !20207}
!20207 = !DILocation(line: 1590, column: 9, scope: !19913)
!20208 = !DILocation(line: 1474, column: 29, scope: !20170)
!20209 = !DILocation(line: 1474, column: 27, scope: !20170)
!20210 = !DILocation(line: 1475, column: 32, scope: !20170)
!20211 = !DILocation(line: 1475, column: 36, scope: !20170)
!20212 = !DILocation(line: 1475, column: 40, scope: !20170)
!20213 = !DILocation(line: 1475, column: 48, scope: !20170)
!20214 = !DILocation(line: 1475, column: 21, scope: !20170)
!20215 = !DILocation(line: 1475, column: 19, scope: !20170)
!20216 = !DILocation(line: 1476, column: 22, scope: !20217)
!20217 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1476, column: 21)
!20218 = !DILocation(line: 1476, column: 21, scope: !20170)
!20219 = !DILocation(line: 1477, column: 25, scope: !20217)
!20220 = !DILocation(line: 1478, column: 21, scope: !20221)
!20221 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1478, column: 21)
!20222 = !DILocation(line: 1478, column: 34, scope: !20221)
!20223 = !DILocation(line: 1478, column: 31, scope: !20221)
!20224 = !DILocation(line: 1478, column: 21, scope: !20170)
!20225 = !DILocation(line: 1480, column: 35, scope: !20226)
!20226 = distinct !DILexicalBlock(scope: !20221, file: !2306, line: 1478, column: 42)
!20227 = !DILocation(line: 1480, column: 39, scope: !20226)
!20228 = !DILocation(line: 1480, column: 33, scope: !20226)
!20229 = !DILocation(line: 1481, column: 42, scope: !20230)
!20230 = distinct !DILexicalBlock(scope: !20226, file: !2306, line: 1481, column: 29)
!20231 = !DILocation(line: 1481, column: 46, scope: !20230)
!20232 = !DILocation(line: 1481, column: 58, scope: !20230)
!20233 = !DILocation(line: 1481, column: 56, scope: !20230)
!20234 = !DILocation(line: 1481, column: 62, scope: !20230)
!20235 = !DILocation(line: 1481, column: 31, scope: !20230)
!20236 = !DILocation(line: 1481, column: 29, scope: !20226)
!20237 = !DILocation(line: 1481, column: 68, scope: !20230)
!20238 = !DILabel(scope: !20239, name: "mem1", file: !2306, line: 1487)
!20239 = distinct !DILexicalBlock(scope: !20230, file: !2306, line: 1481, column: 68)
!20240 = !DILocation(line: 1487, column: 1, scope: !20239)
!20241 = !DILocation(line: 1487, column: 47, scope: !20239)
!20242 = !DILocation(line: 1487, column: 45, scope: !20239)
!20243 = !DILocation(line: 1488, column: 38, scope: !20239)
!20244 = !DILocation(line: 1488, column: 33, scope: !20239)
!20245 = !DILocation(line: 1489, column: 43, scope: !20239)
!20246 = !DILocation(line: 1489, column: 33, scope: !20239)
!20247 = !DILocation(line: 1490, column: 33, scope: !20239)
!20248 = !DILocation(line: 1490, column: 33, scope: !20249)
!20249 = distinct !DILexicalBlock(scope: !20239, file: !2306, line: 1490, column: 33)
!20250 = !DILocation(line: 1491, column: 33, scope: !20239)
!20251 = !DILocation(line: 1491, column: 38, scope: !20239)
!20252 = !DILocation(line: 1491, column: 47, scope: !20239)
!20253 = !DILocation(line: 1492, column: 33, scope: !20239)
!20254 = !DILocation(line: 1493, column: 33, scope: !20239)
!20255 = !DILocation(line: 1494, column: 33, scope: !20239)
!20256 = !DILocation(line: 1497, column: 29, scope: !20257)
!20257 = distinct !DILexicalBlock(scope: !20226, file: !2306, line: 1497, column: 29)
!20258 = !DILocation(line: 1497, column: 40, scope: !20257)
!20259 = !DILocation(line: 1497, column: 44, scope: !20257)
!20260 = !DILocation(line: 1497, column: 37, scope: !20257)
!20261 = !DILocation(line: 1497, column: 29, scope: !20226)
!20262 = !DILocation(line: 1498, column: 42, scope: !20263)
!20263 = distinct !DILexicalBlock(scope: !20257, file: !2306, line: 1497, column: 54)
!20264 = !DILocation(line: 1499, column: 37, scope: !20265)
!20265 = distinct !DILexicalBlock(scope: !20263, file: !2306, line: 1499, column: 37)
!20266 = !DILocation(line: 1499, column: 37, scope: !20263)
!20267 = !DILocation(line: 1500, column: 46, scope: !20265)
!20268 = !DILocation(line: 1500, column: 50, scope: !20265)
!20269 = !DILocation(line: 1500, column: 61, scope: !20265)
!20270 = !DILocation(line: 1500, column: 59, scope: !20265)
!20271 = !DILocation(line: 1500, column: 44, scope: !20265)
!20272 = !DILocation(line: 1500, column: 41, scope: !20265)
!20273 = !DILocation(line: 1501, column: 25, scope: !20263)
!20274 = !DILocation(line: 1502, column: 34, scope: !20226)
!20275 = !DILocation(line: 1502, column: 38, scope: !20226)
!20276 = !DILocation(line: 1502, column: 52, scope: !20226)
!20277 = !DILocation(line: 1502, column: 50, scope: !20226)
!20278 = !DILocation(line: 1502, column: 32, scope: !20226)
!20279 = !DILocation(line: 1503, column: 17, scope: !20226)
!20280 = !DILocation(line: 1505, column: 27, scope: !20170)
!20281 = !DILocation(line: 1505, column: 33, scope: !20170)
!20282 = !DILocation(line: 1505, column: 31, scope: !20170)
!20283 = !DILocation(line: 1505, column: 25, scope: !20170)
!20284 = !DILocation(line: 1506, column: 21, scope: !20285)
!20285 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1506, column: 21)
!20286 = !DILocation(line: 1506, column: 31, scope: !20285)
!20287 = !DILocation(line: 1506, column: 29, scope: !20285)
!20288 = !DILocation(line: 1506, column: 21, scope: !20170)
!20289 = !DILocation(line: 1513, column: 30, scope: !20290)
!20290 = distinct !DILexicalBlock(scope: !20285, file: !2306, line: 1506, column: 36)
!20291 = !DILocation(line: 1513, column: 25, scope: !20290)
!20292 = !DILocation(line: 1514, column: 35, scope: !20290)
!20293 = !DILocation(line: 1514, column: 25, scope: !20290)
!20294 = !DILocation(line: 1515, column: 25, scope: !20290)
!20295 = !DILocation(line: 1515, column: 25, scope: !20296)
!20296 = distinct !DILexicalBlock(scope: !20290, file: !2306, line: 1515, column: 25)
!20297 = !DILocation(line: 1516, column: 25, scope: !20290)
!20298 = !DILocation(line: 1516, column: 30, scope: !20290)
!20299 = !DILocation(line: 1516, column: 39, scope: !20290)
!20300 = !DILocation(line: 1517, column: 25, scope: !20290)
!20301 = !DILocation(line: 1518, column: 25, scope: !20290)
!20302 = !DILocation(line: 1519, column: 25, scope: !20290)
!20303 = !DILocation(line: 1521, column: 32, scope: !20170)
!20304 = !DILocation(line: 1521, column: 17, scope: !20170)
!20305 = !DILocation(line: 1521, column: 20, scope: !20170)
!20306 = !DILocation(line: 1521, column: 30, scope: !20170)
!20307 = !DILocation(line: 1522, column: 33, scope: !20170)
!20308 = !DILocation(line: 1522, column: 37, scope: !20170)
!20309 = !DILocation(line: 1522, column: 17, scope: !20170)
!20310 = !DILocation(line: 1522, column: 20, scope: !20170)
!20311 = !DILocation(line: 1522, column: 31, scope: !20170)
!20312 = !DILocation(line: 1523, column: 34, scope: !20170)
!20313 = !DILocation(line: 1523, column: 17, scope: !20170)
!20314 = !DILocation(line: 1523, column: 20, scope: !20170)
!20315 = !DILocation(line: 1523, column: 32, scope: !20170)
!20316 = !DILocation(line: 1527, column: 40, scope: !20170)
!20317 = !DILocation(line: 1527, column: 17, scope: !20170)
!20318 = !DILocation(line: 1527, column: 20, scope: !20170)
!20319 = !DILocation(line: 1527, column: 31, scope: !20170)
!20320 = !DILocation(line: 1527, column: 38, scope: !20170)
!20321 = !DILocation(line: 1530, column: 21, scope: !20322)
!20322 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1530, column: 21)
!20323 = !DILocation(line: 1530, column: 21, scope: !20170)
!20324 = !DILocation(line: 1531, column: 42, scope: !20325)
!20325 = distinct !DILexicalBlock(scope: !20322, file: !2306, line: 1530, column: 41)
!20326 = !DILocation(line: 1531, column: 45, scope: !20325)
!20327 = !DILocation(line: 1531, column: 25, scope: !20325)
!20328 = !DILocation(line: 1531, column: 28, scope: !20325)
!20329 = !DILocation(line: 1531, column: 40, scope: !20325)
!20330 = !DILocation(line: 1532, column: 33, scope: !20325)
!20331 = !DILocation(line: 1532, column: 37, scope: !20325)
!20332 = !DILocation(line: 1532, column: 40, scope: !20325)
!20333 = !DILocation(line: 1532, column: 25, scope: !20325)
!20334 = !DILocation(line: 1532, column: 50, scope: !20325)
!20335 = !DILocation(line: 1532, column: 53, scope: !20325)
!20336 = !DILocation(line: 1532, column: 65, scope: !20325)
!20337 = !DILocation(line: 1533, column: 17, scope: !20325)
!20338 = !DILocation(line: 1534, column: 42, scope: !20322)
!20339 = !DILocation(line: 1534, column: 45, scope: !20322)
!20340 = !DILocation(line: 1534, column: 25, scope: !20322)
!20341 = !DILocation(line: 1534, column: 28, scope: !20322)
!20342 = !DILocation(line: 1534, column: 40, scope: !20322)
!20343 = !DILocation(line: 1536, column: 21, scope: !20344)
!20344 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1536, column: 21)
!20345 = !DILocation(line: 1536, column: 25, scope: !20344)
!20346 = !DILocation(line: 1536, column: 36, scope: !20344)
!20347 = !DILocation(line: 1536, column: 44, scope: !20344)
!20348 = !DILocation(line: 1536, column: 47, scope: !20344)
!20349 = !DILocation(line: 1536, column: 21, scope: !20170)
!20350 = !DILocalVariable(name: "skip_stat", scope: !20351, file: !2306, line: 1549, type: !117)
!20351 = distinct !DILexicalBlock(scope: !20344, file: !2306, line: 1536, column: 70)
!20352 = !DILocation(line: 1549, column: 30, scope: !20351)
!20353 = !DILocation(line: 1549, column: 43, scope: !20351)
!20354 = !DILocation(line: 1550, column: 43, scope: !20351)
!20355 = !DILocation(line: 1550, column: 46, scope: !20351)
!20356 = !DILocation(line: 1551, column: 43, scope: !20351)
!20357 = !DILocation(line: 1551, column: 46, scope: !20351)
!20358 = !{!15598, !2982, i64 18}
!20359 = !DILocation(line: 1552, column: 43, scope: !20351)
!20360 = !DILocation(line: 1552, column: 48, scope: !20351)
!20361 = !DILocation(line: 1552, column: 46, scope: !20351)
!20362 = !DILocation(line: 0, scope: !20351)
!20363 = !DILocation(line: 1553, column: 25, scope: !20351)
!20364 = !DILocation(line: 1553, column: 28, scope: !20351)
!20365 = !DILocation(line: 1553, column: 37, scope: !20351)
!20366 = !DILocation(line: 1556, column: 40, scope: !20351)
!20367 = !DILocation(line: 1556, column: 43, scope: !20351)
!20368 = !DILocation(line: 1556, column: 54, scope: !20351)
!20369 = !DILocation(line: 1556, column: 25, scope: !20351)
!20370 = !DILocation(line: 1557, column: 47, scope: !20351)
!20371 = !DILocation(line: 1557, column: 51, scope: !20351)
!20372 = !DILocation(line: 1557, column: 50, scope: !20351)
!20373 = !DILocation(line: 1557, column: 25, scope: !20351)
!20374 = !DILocation(line: 1558, column: 17, scope: !20351)
!20375 = !DILocation(line: 1559, column: 48, scope: !20376)
!20376 = distinct !DILexicalBlock(scope: !20344, file: !2306, line: 1558, column: 24)
!20377 = !DILocation(line: 1559, column: 52, scope: !20376)
!20378 = !DILocation(line: 1559, column: 39, scope: !20376)
!20379 = !DILocation(line: 1559, column: 25, scope: !20376)
!20380 = !DILocation(line: 1559, column: 28, scope: !20376)
!20381 = !DILocation(line: 1559, column: 37, scope: !20376)
!20382 = !DILocation(line: 1563, column: 17, scope: !20170)
!20383 = !DILocation(line: 1563, column: 20, scope: !20170)
!20384 = !DILocation(line: 1563, column: 29, scope: !20170)
!20385 = !DILocation(line: 1564, column: 21, scope: !20386)
!20386 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1564, column: 21)
!20387 = !DILocation(line: 1564, column: 26, scope: !20386)
!20388 = !DILocation(line: 1564, column: 21, scope: !20170)
!20389 = !DILocation(line: 1565, column: 39, scope: !20386)
!20390 = !DILocation(line: 1565, column: 37, scope: !20386)
!20391 = !DILocation(line: 1565, column: 30, scope: !20386)
!20392 = !DILocation(line: 1565, column: 25, scope: !20386)
!20393 = !DILocation(line: 1567, column: 42, scope: !20394)
!20394 = distinct !DILexicalBlock(scope: !20386, file: !2306, line: 1566, column: 22)
!20395 = !DILocation(line: 1567, column: 25, scope: !20394)
!20396 = !DILocation(line: 1567, column: 31, scope: !20394)
!20397 = !DILocation(line: 1567, column: 40, scope: !20394)
!20398 = !DILocation(line: 1568, column: 32, scope: !20394)
!20399 = !DILocation(line: 1568, column: 30, scope: !20394)
!20400 = !DILocation(line: 1579, column: 21, scope: !20401)
!20401 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1579, column: 21)
!20402 = !DILocation(line: 1579, column: 28, scope: !20401)
!20403 = !DILocation(line: 1580, column: 21, scope: !20401)
!20404 = !DILocation(line: 1580, column: 25, scope: !20401)
!20405 = !DILocation(line: 1580, column: 29, scope: !20401)
!20406 = !DILocation(line: 1579, column: 21, scope: !20170)
!20407 = !DILocation(line: 1581, column: 68, scope: !20401)
!20408 = !DILocation(line: 1581, column: 73, scope: !20401)
!20409 = !DILocation(line: 1581, column: 35, scope: !20401)
!20410 = !DILocation(line: 1581, column: 33, scope: !20401)
!20411 = !DILocation(line: 1581, column: 19, scope: !20401)
!20412 = !DILocation(line: 1583, column: 17, scope: !20170)
!20413 = !DILocation(line: 1584, column: 21, scope: !20414)
!20414 = distinct !DILexicalBlock(scope: !20170, file: !2306, line: 1584, column: 21)
!20415 = !DILocation(line: 1584, column: 36, scope: !20414)
!20416 = !DILocation(line: 1584, column: 33, scope: !20414)
!20417 = !DILocation(line: 1584, column: 21, scope: !20170)
!20418 = !DILocation(line: 1588, column: 25, scope: !20419)
!20419 = distinct !DILexicalBlock(scope: !20414, file: !2306, line: 1584, column: 44)
!20420 = !DILocation(line: 1592, column: 13, scope: !20421)
!20421 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1592, column: 13)
!20422 = !DILocation(line: 1592, column: 18, scope: !20421)
!20423 = !DILocation(line: 1592, column: 13, scope: !19913)
!20424 = !DILocation(line: 1593, column: 17, scope: !20421)
!20425 = !DILocation(line: 1593, column: 17, scope: !20426)
!20426 = distinct !DILexicalBlock(scope: !20421, file: !2306, line: 1593, column: 17)
!20427 = !DILabel(scope: !19913, name: "break_without_closedir", file: !2306, line: 1595)
!20428 = !DILocation(line: 1595, column: 2, scope: !19913)
!20429 = !DILocation(line: 1601, column: 13, scope: !20430)
!20430 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1601, column: 13)
!20431 = !DILocation(line: 1601, column: 13, scope: !19913)
!20432 = !DILocation(line: 1602, column: 29, scope: !20430)
!20433 = !DILocation(line: 1602, column: 33, scope: !20430)
!20434 = !DILocation(line: 1602, column: 17, scope: !20430)
!20435 = !DILocation(line: 1608, column: 13, scope: !20436)
!20436 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1608, column: 13)
!20437 = !DILocation(line: 1608, column: 13, scope: !19913)
!20438 = !DILocation(line: 1609, column: 21, scope: !20439)
!20439 = distinct !DILexicalBlock(scope: !20440, file: !2306, line: 1609, column: 21)
!20440 = distinct !DILexicalBlock(scope: !20436, file: !2306, line: 1608, column: 33)
!20441 = !DILocation(line: 1609, column: 28, scope: !20439)
!20442 = !DILocation(line: 1609, column: 32, scope: !20439)
!20443 = !DILocation(line: 1609, column: 25, scope: !20439)
!20444 = !DILocation(line: 1609, column: 44, scope: !20439)
!20445 = !DILocation(line: 1609, column: 47, scope: !20439)
!20446 = !DILocation(line: 1609, column: 54, scope: !20439)
!20447 = !DILocation(line: 1609, column: 21, scope: !20440)
!20448 = !DILocation(line: 1610, column: 25, scope: !20439)
!20449 = !DILocation(line: 1611, column: 18, scope: !20440)
!20450 = !DILocation(line: 1611, column: 21, scope: !20440)
!20451 = !DILocation(line: 1612, column: 9, scope: !20440)
!20452 = !DILocation(line: 1621, column: 14, scope: !20453)
!20453 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1621, column: 13)
!20454 = !DILocation(line: 1621, column: 31, scope: !20453)
!20455 = !DILocation(line: 1621, column: 34, scope: !20453)
!20456 = !DILocation(line: 1621, column: 42, scope: !20453)
!20457 = !DILocation(line: 1621, column: 46, scope: !20453)
!20458 = !DILocation(line: 1621, column: 51, scope: !20453)
!20459 = !DILocation(line: 1621, column: 61, scope: !20453)
!20460 = !DILocation(line: 1621, column: 65, scope: !20453)
!20461 = !DILocation(line: 1621, column: 73, scope: !20453)
!20462 = !DILocation(line: 1622, column: 14, scope: !20453)
!20463 = !DILocation(line: 1622, column: 19, scope: !20453)
!20464 = !DILocation(line: 1622, column: 29, scope: !20453)
!20465 = !DILocation(line: 1621, column: 13, scope: !19913)
!20466 = !DILocation(line: 1623, column: 36, scope: !20453)
!20467 = !DILocation(line: 1623, column: 16, scope: !20453)
!20468 = !DILocation(line: 1624, column: 35, scope: !20453)
!20469 = !DILocation(line: 1624, column: 39, scope: !20453)
!20470 = !DILocation(line: 1624, column: 44, scope: !20453)
!20471 = !DILocation(line: 1624, column: 16, scope: !20453)
!20472 = !DILocation(line: 1625, column: 17, scope: !20473)
!20473 = distinct !DILexicalBlock(scope: !20453, file: !2306, line: 1624, column: 68)
!20474 = !DILocation(line: 1625, column: 22, scope: !20473)
!20475 = !DILocation(line: 1625, column: 31, scope: !20473)
!20476 = !DILocation(line: 1626, column: 17, scope: !20473)
!20477 = !DILocation(line: 1627, column: 27, scope: !20473)
!20478 = !DILocation(line: 1627, column: 17, scope: !20473)
!20479 = !DILocation(line: 1628, column: 17, scope: !20473)
!20480 = !DILocation(line: 1632, column: 14, scope: !20481)
!20481 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1632, column: 13)
!20482 = !DILocation(line: 1632, column: 13, scope: !19913)
!20483 = !DILocation(line: 1633, column: 21, scope: !20484)
!20484 = distinct !DILexicalBlock(scope: !20485, file: !2306, line: 1633, column: 21)
!20485 = distinct !DILexicalBlock(scope: !20481, file: !2306, line: 1632, column: 22)
!20486 = !DILocation(line: 1633, column: 26, scope: !20484)
!20487 = !DILocation(line: 1634, column: 21, scope: !20484)
!20488 = !DILocation(line: 1634, column: 24, scope: !20484)
!20489 = !DILocation(line: 1634, column: 29, scope: !20484)
!20490 = !DILocation(line: 1634, column: 38, scope: !20484)
!20491 = !DILocation(line: 1634, column: 49, scope: !20484)
!20492 = !DILocation(line: 1634, column: 52, scope: !20484)
!20493 = !DILocation(line: 1634, column: 57, scope: !20484)
!20494 = !DILocation(line: 1634, column: 66, scope: !20484)
!20495 = !DILocation(line: 1633, column: 21, scope: !20485)
!20496 = !DILocation(line: 1635, column: 25, scope: !20484)
!20497 = !DILocation(line: 1635, column: 30, scope: !20484)
!20498 = !DILocation(line: 1635, column: 39, scope: !20484)
!20499 = !DILocation(line: 1636, column: 27, scope: !20485)
!20500 = !DILocation(line: 1636, column: 17, scope: !20485)
!20501 = !DILocation(line: 1637, column: 17, scope: !20485)
!20502 = !DILocation(line: 1640, column: 13, scope: !20503)
!20503 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1640, column: 13)
!20504 = !DILocation(line: 1640, column: 13, scope: !19913)
!20505 = !DILocation(line: 1641, column: 17, scope: !20506)
!20506 = distinct !DILexicalBlock(scope: !20503, file: !2306, line: 1640, column: 28)
!20507 = !DILocation(line: 1641, column: 21, scope: !20506)
!20508 = !DILocation(line: 1641, column: 32, scope: !20506)
!20509 = !DILocation(line: 1642, column: 34, scope: !20506)
!20510 = !DILocation(line: 1642, column: 38, scope: !20506)
!20511 = !DILocation(line: 1642, column: 44, scope: !20506)
!20512 = !DILocation(line: 1642, column: 24, scope: !20506)
!20513 = !DILocation(line: 1642, column: 22, scope: !20506)
!20514 = !DILocation(line: 1643, column: 17, scope: !20506)
!20515 = !DILocation(line: 1643, column: 21, scope: !20506)
!20516 = !DILocation(line: 1643, column: 32, scope: !20506)
!20517 = !DILocation(line: 1644, column: 9, scope: !20506)
!20518 = !DILocation(line: 1647, column: 13, scope: !20519)
!20519 = distinct !DILexicalBlock(scope: !19913, file: !2306, line: 1647, column: 13)
!20520 = !DILocation(line: 1647, column: 17, scope: !20519)
!20521 = !DILocation(line: 1647, column: 28, scope: !20519)
!20522 = !DILocation(line: 1647, column: 31, scope: !20519)
!20523 = !DILocation(line: 1647, column: 38, scope: !20519)
!20524 = !DILocation(line: 1647, column: 13, scope: !19913)
!20525 = !DILocation(line: 1648, column: 33, scope: !20519)
!20526 = !DILocation(line: 1648, column: 37, scope: !20519)
!20527 = !DILocation(line: 1648, column: 43, scope: !20519)
!20528 = !DILocation(line: 1648, column: 24, scope: !20519)
!20529 = !DILocation(line: 1648, column: 22, scope: !20519)
!20530 = !DILocation(line: 1648, column: 17, scope: !20519)
!20531 = !DILocation(line: 1649, column: 17, scope: !19913)
!20532 = !DILocation(line: 1649, column: 9, scope: !19913)
!20533 = !DILocation(line: 1650, column: 1, scope: !19913)
!20534 = distinct !DISubprogram(name: "restore_initial_cwd", scope: !2306, file: !2306, line: 333, type: !2415, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20535 = !DILocalVariable(name: "sp", arg: 1, scope: !20534, file: !2306, line: 333, type: !2331)
!20536 = !DILocation(line: 333, column: 27, scope: !20534)
!20537 = !DILocalVariable(name: "fail", scope: !20534, file: !2306, line: 335, type: !5)
!20538 = !DILocation(line: 335, column: 7, scope: !20534)
!20539 = !DILocation(line: 335, column: 14, scope: !20534)
!20540 = !DILocation(line: 0, scope: !20534)
!20541 = !DILocation(line: 336, column: 20, scope: !20534)
!20542 = !DILocation(line: 336, column: 24, scope: !20534)
!20543 = !DILocation(line: 336, column: 3, scope: !20534)
!20544 = !DILocation(line: 337, column: 10, scope: !20534)
!20545 = !DILocation(line: 337, column: 3, scope: !20534)
!20546 = distinct !DISubprogram(name: "fts_load", scope: !2306, file: !2306, line: 550, type: !2444, scopeLine: 551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20547 = !DILocalVariable(name: "sp", arg: 1, scope: !20546, file: !2306, line: 550, type: !2331)
!20548 = !DILocation(line: 550, column: 16, scope: !20546)
!20549 = !DILocalVariable(name: "p", arg: 2, scope: !20546, file: !2306, line: 550, type: !2414)
!20550 = !DILocation(line: 550, column: 37, scope: !20546)
!20551 = !DILocalVariable(name: "len", scope: !20546, file: !2306, line: 552, type: !52)
!20552 = !DILocation(line: 552, column: 25, scope: !20546)
!20553 = !DILocalVariable(name: "cp", scope: !20546, file: !2306, line: 553, type: !7)
!20554 = !DILocation(line: 553, column: 24, scope: !20546)
!20555 = !DILocation(line: 562, column: 32, scope: !20546)
!20556 = !DILocation(line: 562, column: 35, scope: !20546)
!20557 = !DILocation(line: 562, column: 15, scope: !20546)
!20558 = !DILocation(line: 562, column: 18, scope: !20546)
!20559 = !DILocation(line: 562, column: 30, scope: !20546)
!20560 = !DILocation(line: 562, column: 13, scope: !20546)
!20561 = !DILocation(line: 563, column: 17, scope: !20546)
!20562 = !DILocation(line: 563, column: 21, scope: !20546)
!20563 = !DILocation(line: 563, column: 31, scope: !20546)
!20564 = !DILocation(line: 563, column: 34, scope: !20546)
!20565 = !DILocation(line: 563, column: 9, scope: !20546)
!20566 = !DILocation(line: 563, column: 44, scope: !20546)
!20567 = !DILocation(line: 563, column: 48, scope: !20546)
!20568 = !DILocation(line: 564, column: 27, scope: !20569)
!20569 = distinct !DILexicalBlock(scope: !20546, file: !2306, line: 564, column: 13)
!20570 = !DILocation(line: 564, column: 30, scope: !20569)
!20571 = !DILocation(line: 564, column: 19, scope: !20569)
!20572 = !DILocation(line: 564, column: 17, scope: !20569)
!20573 = !DILocation(line: 564, column: 46, scope: !20569)
!20574 = !DILocation(line: 564, column: 50, scope: !20569)
!20575 = !DILocation(line: 564, column: 56, scope: !20569)
!20576 = !DILocation(line: 564, column: 59, scope: !20569)
!20577 = !DILocation(line: 564, column: 53, scope: !20569)
!20578 = !DILocation(line: 564, column: 68, scope: !20569)
!20579 = !DILocation(line: 564, column: 71, scope: !20569)
!20580 = !DILocation(line: 564, column: 13, scope: !20546)
!20581 = !DILocation(line: 565, column: 30, scope: !20582)
!20582 = distinct !DILexicalBlock(scope: !20569, file: !2306, line: 564, column: 79)
!20583 = !DILocation(line: 565, column: 23, scope: !20582)
!20584 = !DILocation(line: 565, column: 21, scope: !20582)
!20585 = !DILocation(line: 566, column: 25, scope: !20582)
!20586 = !DILocation(line: 566, column: 28, scope: !20582)
!20587 = !DILocation(line: 566, column: 17, scope: !20582)
!20588 = !DILocation(line: 566, column: 38, scope: !20582)
!20589 = !DILocation(line: 566, column: 42, scope: !20582)
!20590 = !DILocation(line: 566, column: 46, scope: !20582)
!20591 = !DILocation(line: 567, column: 34, scope: !20582)
!20592 = !DILocation(line: 567, column: 17, scope: !20582)
!20593 = !DILocation(line: 567, column: 20, scope: !20582)
!20594 = !DILocation(line: 567, column: 32, scope: !20582)
!20595 = !DILocation(line: 568, column: 9, scope: !20582)
!20596 = !DILocation(line: 569, column: 40, scope: !20546)
!20597 = !DILocation(line: 569, column: 44, scope: !20546)
!20598 = !DILocation(line: 569, column: 26, scope: !20546)
!20599 = !DILocation(line: 569, column: 29, scope: !20546)
!20600 = !DILocation(line: 569, column: 38, scope: !20546)
!20601 = !DILocation(line: 569, column: 9, scope: !20546)
!20602 = !DILocation(line: 569, column: 12, scope: !20546)
!20603 = !DILocation(line: 569, column: 24, scope: !20546)
!20604 = !DILocation(line: 570, column: 1, scope: !20546)
!20605 = distinct !DISubprogram(name: "leaf_optimization", scope: !2306, file: !2306, line: 792, type: !2448, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20606 = !DILocalVariable(name: "p", arg: 1, scope: !20605, file: !2306, line: 792, type: !2313)
!20607 = !DILocation(line: 792, column: 34, scope: !20605)
!20608 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20605, file: !2306, line: 792, type: !5)
!20609 = !DILocation(line: 792, column: 41, scope: !20605)
!20610 = !DILocation(line: 794, column: 28, scope: !20605)
!20611 = !DILocation(line: 794, column: 31, scope: !20605)
!20612 = !DILocation(line: 794, column: 11, scope: !20605)
!20613 = !DILocation(line: 794, column: 3, scope: !20605)
!20614 = !DILocation(line: 800, column: 7, scope: !20615)
!20615 = distinct !DILexicalBlock(scope: !20605, file: !2306, line: 795, column: 5)
!20616 = !DILocation(line: 804, column: 7, scope: !20615)
!20617 = !DILocation(line: 808, column: 7, scope: !20615)
!20618 = !DILocation(line: 812, column: 7, scope: !20615)
!20619 = !DILocation(line: 818, column: 7, scope: !20615)
!20620 = !DILocation(line: 822, column: 7, scope: !20615)
!20621 = !DILocation(line: 825, column: 7, scope: !20615)
!20622 = !DILocation(line: 827, column: 1, scope: !20605)
!20623 = distinct !DISubprogram(name: "enter_dir", scope: !2430, file: !2430, line: 74, type: !2463, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20624 = !DILocalVariable(name: "fts", arg: 1, scope: !20623, file: !2430, line: 74, type: !2331)
!20625 = !DILocation(line: 74, column: 17, scope: !20623)
!20626 = !DILocalVariable(name: "ent", arg: 2, scope: !20623, file: !2430, line: 74, type: !2414)
!20627 = !DILocation(line: 74, column: 30, scope: !20623)
!20628 = !DILocation(line: 76, column: 7, scope: !20629)
!20629 = distinct !DILexicalBlock(scope: !20623, file: !2430, line: 76, column: 7)
!20630 = !DILocation(line: 76, column: 12, scope: !20629)
!20631 = !DILocation(line: 76, column: 24, scope: !20629)
!20632 = !DILocation(line: 76, column: 7, scope: !20623)
!20633 = !DILocalVariable(name: "st", scope: !20634, file: !2430, line: 78, type: !2446)
!20634 = distinct !DILexicalBlock(scope: !20629, file: !2430, line: 77, column: 5)
!20635 = !DILocation(line: 78, column: 26, scope: !20634)
!20636 = !DILocation(line: 78, column: 31, scope: !20634)
!20637 = !DILocation(line: 78, column: 36, scope: !20634)
!20638 = !DILocalVariable(name: "ad", scope: !20634, file: !2430, line: 79, type: !2465)
!20639 = !DILocation(line: 79, column: 26, scope: !20634)
!20640 = !DILocation(line: 79, column: 31, scope: !20634)
!20641 = !DILocalVariable(name: "ad_from_table", scope: !20634, file: !2430, line: 80, type: !2465)
!20642 = !DILocation(line: 80, column: 26, scope: !20634)
!20643 = !DILocation(line: 82, column: 12, scope: !20644)
!20644 = distinct !DILexicalBlock(scope: !20634, file: !2430, line: 82, column: 11)
!20645 = !DILocation(line: 82, column: 11, scope: !20634)
!20646 = !DILocation(line: 83, column: 9, scope: !20644)
!20647 = !DILocation(line: 85, column: 17, scope: !20634)
!20648 = !DILocation(line: 85, column: 21, scope: !20634)
!20649 = !DILocation(line: 85, column: 7, scope: !20634)
!20650 = !DILocation(line: 85, column: 11, scope: !20634)
!20651 = !DILocation(line: 85, column: 15, scope: !20634)
!20652 = !DILocation(line: 86, column: 17, scope: !20634)
!20653 = !DILocation(line: 86, column: 21, scope: !20634)
!20654 = !DILocation(line: 86, column: 7, scope: !20634)
!20655 = !DILocation(line: 86, column: 11, scope: !20634)
!20656 = !DILocation(line: 86, column: 15, scope: !20634)
!20657 = !DILocation(line: 87, column: 21, scope: !20634)
!20658 = !DILocation(line: 87, column: 7, scope: !20634)
!20659 = !DILocation(line: 87, column: 11, scope: !20634)
!20660 = !DILocation(line: 87, column: 19, scope: !20634)
!20661 = !{!18892, !2994, i64 16}
!20662 = !DILocation(line: 92, column: 36, scope: !20634)
!20663 = !DILocation(line: 92, column: 41, scope: !20634)
!20664 = !DILocation(line: 92, column: 51, scope: !20634)
!20665 = !DILocation(line: 92, column: 55, scope: !20634)
!20666 = !DILocation(line: 92, column: 23, scope: !20634)
!20667 = !DILocation(line: 92, column: 21, scope: !20634)
!20668 = !DILocation(line: 94, column: 11, scope: !20669)
!20669 = distinct !DILexicalBlock(scope: !20634, file: !2430, line: 94, column: 11)
!20670 = !DILocation(line: 94, column: 28, scope: !20669)
!20671 = !DILocation(line: 94, column: 25, scope: !20669)
!20672 = !DILocation(line: 94, column: 11, scope: !20634)
!20673 = !DILocation(line: 96, column: 17, scope: !20674)
!20674 = distinct !DILexicalBlock(scope: !20669, file: !2430, line: 95, column: 9)
!20675 = !DILocation(line: 96, column: 11, scope: !20674)
!20676 = !DILocation(line: 97, column: 16, scope: !20677)
!20677 = distinct !DILexicalBlock(scope: !20674, file: !2430, line: 97, column: 15)
!20678 = !DILocation(line: 97, column: 15, scope: !20674)
!20679 = !DILocation(line: 98, column: 13, scope: !20677)
!20680 = !DILocation(line: 102, column: 28, scope: !20674)
!20681 = !DILocation(line: 102, column: 43, scope: !20674)
!20682 = !DILocation(line: 102, column: 11, scope: !20674)
!20683 = !DILocation(line: 102, column: 16, scope: !20674)
!20684 = !DILocation(line: 102, column: 26, scope: !20674)
!20685 = !DILocation(line: 103, column: 11, scope: !20674)
!20686 = !DILocation(line: 103, column: 16, scope: !20674)
!20687 = !DILocation(line: 103, column: 25, scope: !20674)
!20688 = !DILocation(line: 104, column: 9, scope: !20674)
!20689 = !DILocation(line: 105, column: 5, scope: !20634)
!20690 = !DILocation(line: 108, column: 24, scope: !20691)
!20691 = distinct !DILexicalBlock(scope: !20692, file: !2430, line: 108, column: 11)
!20692 = distinct !DILexicalBlock(scope: !20629, file: !2430, line: 107, column: 5)
!20693 = !DILocation(line: 108, column: 29, scope: !20691)
!20694 = !DILocation(line: 108, column: 39, scope: !20691)
!20695 = !DILocation(line: 108, column: 46, scope: !20691)
!20696 = !DILocation(line: 108, column: 51, scope: !20691)
!20697 = !DILocation(line: 108, column: 11, scope: !20691)
!20698 = !DILocation(line: 108, column: 11, scope: !20692)
!20699 = !DILocation(line: 114, column: 28, scope: !20700)
!20700 = distinct !DILexicalBlock(scope: !20691, file: !2430, line: 109, column: 9)
!20701 = !DILocation(line: 114, column: 11, scope: !20700)
!20702 = !DILocation(line: 114, column: 16, scope: !20700)
!20703 = !DILocation(line: 114, column: 26, scope: !20700)
!20704 = !DILocation(line: 115, column: 11, scope: !20700)
!20705 = !DILocation(line: 115, column: 16, scope: !20700)
!20706 = !DILocation(line: 115, column: 25, scope: !20700)
!20707 = !DILocation(line: 116, column: 9, scope: !20700)
!20708 = !DILocation(line: 119, column: 3, scope: !20623)
!20709 = !DILocation(line: 120, column: 1, scope: !20623)
!20710 = distinct !DISubprogram(name: "cwd_advance_fd", scope: !2306, file: !2306, line: 305, type: !2466, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20711 = !DILocalVariable(name: "sp", arg: 1, scope: !20710, file: !2306, line: 305, type: !2331)
!20712 = !DILocation(line: 305, column: 22, scope: !20710)
!20713 = !DILocalVariable(name: "fd", arg: 2, scope: !20710, file: !2306, line: 305, type: !5)
!20714 = !DILocation(line: 305, column: 30, scope: !20710)
!20715 = !DILocalVariable(name: "chdir_down_one", arg: 3, scope: !20710, file: !2306, line: 305, type: !117)
!20716 = !DILocation(line: 305, column: 39, scope: !20710)
!20717 = !DILocalVariable(name: "old", scope: !20710, file: !2306, line: 307, type: !5)
!20718 = !DILocation(line: 307, column: 7, scope: !20710)
!20719 = !DILocation(line: 307, column: 13, scope: !20710)
!20720 = !DILocation(line: 307, column: 17, scope: !20710)
!20721 = !DILocation(line: 308, column: 3, scope: !20710)
!20722 = !DILocation(line: 308, column: 3, scope: !20723)
!20723 = distinct !DILexicalBlock(scope: !20724, file: !2306, line: 308, column: 3)
!20724 = distinct !DILexicalBlock(scope: !20710, file: !2306, line: 308, column: 3)
!20725 = !DILocation(line: 308, column: 3, scope: !20724)
!20726 = !DILocation(line: 310, column: 7, scope: !20727)
!20727 = distinct !DILexicalBlock(scope: !20710, file: !2306, line: 310, column: 7)
!20728 = !DILocation(line: 310, column: 7, scope: !20710)
!20729 = !DILocalVariable(name: "prev_fd_in_slot", scope: !20730, file: !2306, line: 314, type: !5)
!20730 = distinct !DILexicalBlock(scope: !20727, file: !2306, line: 311, column: 5)
!20731 = !DILocation(line: 314, column: 11, scope: !20730)
!20732 = !DILocation(line: 314, column: 43, scope: !20730)
!20733 = !DILocation(line: 314, column: 47, scope: !20730)
!20734 = !DILocation(line: 314, column: 60, scope: !20730)
!20735 = !DILocation(line: 314, column: 29, scope: !20730)
!20736 = !DILocation(line: 316, column: 16, scope: !20737)
!20737 = distinct !DILexicalBlock(scope: !20730, file: !2306, line: 316, column: 11)
!20738 = !DILocation(line: 316, column: 13, scope: !20737)
!20739 = !DILocation(line: 316, column: 11, scope: !20730)
!20740 = !DILocation(line: 317, column: 16, scope: !20737)
!20741 = !DILocation(line: 317, column: 9, scope: !20737)
!20742 = !DILocation(line: 318, column: 5, scope: !20730)
!20743 = !DILocation(line: 319, column: 15, scope: !20744)
!20744 = distinct !DILexicalBlock(scope: !20727, file: !2306, line: 319, column: 13)
!20745 = !DILocation(line: 319, column: 13, scope: !20727)
!20746 = !DILocation(line: 321, column: 16, scope: !20747)
!20747 = distinct !DILexicalBlock(scope: !20748, file: !2306, line: 321, column: 11)
!20748 = distinct !DILexicalBlock(scope: !20744, file: !2306, line: 320, column: 5)
!20749 = !DILocation(line: 321, column: 13, scope: !20747)
!20750 = !DILocation(line: 321, column: 11, scope: !20748)
!20751 = !DILocation(line: 322, column: 16, scope: !20747)
!20752 = !DILocation(line: 322, column: 9, scope: !20747)
!20753 = !DILocation(line: 323, column: 5, scope: !20748)
!20754 = !DILocation(line: 325, column: 20, scope: !20710)
!20755 = !DILocation(line: 325, column: 3, scope: !20710)
!20756 = !DILocation(line: 325, column: 7, scope: !20710)
!20757 = !DILocation(line: 325, column: 18, scope: !20710)
!20758 = !DILocation(line: 326, column: 1, scope: !20710)
!20759 = distinct !DISubprogram(name: "filesystem_type", scope: !2306, file: !2306, line: 709, type: !2450, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "statfs", file: !20761, line: 24, size: 960, elements: !20762)
!20761 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/statfs.h", directory: "")
!20762 = !{!20763, !20764, !20765, !20767, !20768, !20769, !20771, !20772, !20778, !20779, !20780, !20781}
!20763 = !DIDerivedType(tag: DW_TAG_member, name: "f_type", scope: !20760, file: !20761, line: 26, baseType: !2453, size: 64)
!20764 = !DIDerivedType(tag: DW_TAG_member, name: "f_bsize", scope: !20760, file: !20761, line: 27, baseType: !2453, size: 64, offset: 64)
!20765 = !DIDerivedType(tag: DW_TAG_member, name: "f_blocks", scope: !20760, file: !20761, line: 29, baseType: !20766, size: 64, offset: 128)
!20766 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsblkcnt_t", file: !31, line: 162, baseType: !54)
!20767 = !DIDerivedType(tag: DW_TAG_member, name: "f_bfree", scope: !20760, file: !20761, line: 30, baseType: !20766, size: 64, offset: 192)
!20768 = !DIDerivedType(tag: DW_TAG_member, name: "f_bavail", scope: !20760, file: !20761, line: 31, baseType: !20766, size: 64, offset: 256)
!20769 = !DIDerivedType(tag: DW_TAG_member, name: "f_files", scope: !20760, file: !20761, line: 32, baseType: !20770, size: 64, offset: 320)
!20770 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsfilcnt_t", file: !31, line: 166, baseType: !54)
!20771 = !DIDerivedType(tag: DW_TAG_member, name: "f_ffree", scope: !20760, file: !20761, line: 33, baseType: !20770, size: 64, offset: 384)
!20772 = !DIDerivedType(tag: DW_TAG_member, name: "f_fsid", scope: !20760, file: !20761, line: 41, baseType: !20773, size: 64, offset: 448)
!20773 = !DIDerivedType(tag: DW_TAG_typedef, name: "__fsid_t", file: !31, line: 134, baseType: !20774)
!20774 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 134, size: 64, elements: !20775)
!20775 = !{!20776}
!20776 = !DIDerivedType(tag: DW_TAG_member, name: "__val", scope: !20774, file: !31, line: 134, baseType: !20777, size: 64)
!20777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !206)
!20778 = !DIDerivedType(tag: DW_TAG_member, name: "f_namelen", scope: !20760, file: !20761, line: 42, baseType: !2453, size: 64, offset: 512)
!20779 = !DIDerivedType(tag: DW_TAG_member, name: "f_frsize", scope: !20760, file: !20761, line: 43, baseType: !2453, size: 64, offset: 576)
!20780 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !20760, file: !20761, line: 44, baseType: !2453, size: 64, offset: 640)
!20781 = !DIDerivedType(tag: DW_TAG_member, name: "f_spare", scope: !20760, file: !20761, line: 45, baseType: !20782, size: 256, offset: 704)
!20782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2453, size: 256, elements: !1029)
!20783 = !DILocalVariable(name: "p", arg: 1, scope: !20759, file: !2306, line: 709, type: !2313)
!20784 = !DILocation(line: 709, column: 32, scope: !20759)
!20785 = !DILocalVariable(name: "fd", arg: 2, scope: !20759, file: !2306, line: 709, type: !5)
!20786 = !DILocation(line: 709, column: 39, scope: !20759)
!20787 = !DILocalVariable(name: "sp", scope: !20759, file: !2306, line: 711, type: !2331)
!20788 = !DILocation(line: 711, column: 8, scope: !20759)
!20789 = !DILocation(line: 711, column: 13, scope: !20759)
!20790 = !DILocation(line: 711, column: 16, scope: !20759)
!20791 = !DILocalVariable(name: "h", scope: !20759, file: !2306, line: 712, type: !2454)
!20792 = !DILocation(line: 712, column: 15, scope: !20759)
!20793 = !DILocation(line: 712, column: 19, scope: !20759)
!20794 = !DILocation(line: 712, column: 23, scope: !20759)
!20795 = !DILocalVariable(name: "ent", scope: !20759, file: !2306, line: 713, type: !2456)
!20796 = !DILocation(line: 713, column: 20, scope: !20759)
!20797 = !DILocalVariable(name: "fs_buf", scope: !20759, file: !2306, line: 714, type: !20760)
!20798 = !DILocation(line: 714, column: 17, scope: !20759)
!20799 = !DILocation(line: 718, column: 8, scope: !20800)
!20800 = distinct !DILexicalBlock(scope: !20759, file: !2306, line: 718, column: 7)
!20801 = !DILocation(line: 718, column: 7, scope: !20759)
!20802 = !DILocation(line: 719, column: 5, scope: !20800)
!20803 = !DILocation(line: 721, column: 9, scope: !20804)
!20804 = distinct !DILexicalBlock(scope: !20759, file: !2306, line: 721, column: 7)
!20805 = !DILocation(line: 721, column: 7, scope: !20759)
!20806 = !DILocation(line: 723, column: 9, scope: !20804)
!20807 = !DILocation(line: 722, column: 9, scope: !20804)
!20808 = !DILocation(line: 722, column: 13, scope: !20804)
!20809 = !DILocation(line: 723, column: 7, scope: !20804)
!20810 = !DILocation(line: 722, column: 7, scope: !20804)
!20811 = !DILocation(line: 722, column: 5, scope: !20804)
!20812 = !DILocation(line: 725, column: 7, scope: !20813)
!20813 = distinct !DILexicalBlock(scope: !20759, file: !2306, line: 725, column: 7)
!20814 = !DILocation(line: 725, column: 7, scope: !20759)
!20815 = !DILocalVariable(name: "tmp", scope: !20816, file: !2306, line: 727, type: !2457)
!20816 = distinct !DILexicalBlock(scope: !20813, file: !2306, line: 726, column: 5)
!20817 = !DILocation(line: 727, column: 23, scope: !20816)
!20818 = !DILocation(line: 728, column: 20, scope: !20816)
!20819 = !DILocation(line: 728, column: 23, scope: !20816)
!20820 = !DILocation(line: 728, column: 34, scope: !20816)
!20821 = !DILocation(line: 728, column: 11, scope: !20816)
!20822 = !DILocation(line: 728, column: 18, scope: !20816)
!20823 = !{!20824, !3178, i64 0}
!20824 = !{!"dev_type", !3178, i64 0, !3178, i64 8}
!20825 = !DILocation(line: 729, column: 26, scope: !20816)
!20826 = !DILocation(line: 729, column: 29, scope: !20816)
!20827 = !DILocation(line: 729, column: 13, scope: !20816)
!20828 = !DILocation(line: 729, column: 11, scope: !20816)
!20829 = !DILocation(line: 730, column: 11, scope: !20830)
!20830 = distinct !DILexicalBlock(scope: !20816, file: !2306, line: 730, column: 11)
!20831 = !DILocation(line: 730, column: 11, scope: !20816)
!20832 = !DILocation(line: 731, column: 16, scope: !20830)
!20833 = !DILocation(line: 731, column: 21, scope: !20830)
!20834 = !{!20824, !3178, i64 8}
!20835 = !DILocation(line: 731, column: 9, scope: !20830)
!20836 = !DILocation(line: 732, column: 5, scope: !20816)
!20837 = !DILocation(line: 735, column: 7, scope: !20838)
!20838 = distinct !DILexicalBlock(scope: !20759, file: !2306, line: 735, column: 7)
!20839 = !DILocation(line: 735, column: 10, scope: !20838)
!20840 = !DILocation(line: 735, column: 14, scope: !20838)
!20841 = !DILocation(line: 735, column: 26, scope: !20838)
!20842 = !DILocation(line: 735, column: 17, scope: !20838)
!20843 = !DILocation(line: 735, column: 39, scope: !20838)
!20844 = !DILocation(line: 735, column: 7, scope: !20759)
!20845 = !DILocation(line: 736, column: 5, scope: !20838)
!20846 = !DILocation(line: 738, column: 7, scope: !20847)
!20847 = distinct !DILexicalBlock(scope: !20759, file: !2306, line: 738, column: 7)
!20848 = !DILocation(line: 738, column: 7, scope: !20759)
!20849 = !DILocalVariable(name: "t2", scope: !20850, file: !2306, line: 740, type: !2456)
!20850 = distinct !DILexicalBlock(scope: !20847, file: !2306, line: 739, column: 5)
!20851 = !DILocation(line: 740, column: 24, scope: !20850)
!20852 = !DILocation(line: 740, column: 29, scope: !20850)
!20853 = !DILocation(line: 741, column: 11, scope: !20854)
!20854 = distinct !DILexicalBlock(scope: !20850, file: !2306, line: 741, column: 11)
!20855 = !DILocation(line: 741, column: 11, scope: !20850)
!20856 = !DILocation(line: 743, column: 24, scope: !20857)
!20857 = distinct !DILexicalBlock(scope: !20854, file: !2306, line: 742, column: 9)
!20858 = !DILocation(line: 743, column: 27, scope: !20857)
!20859 = !DILocation(line: 743, column: 38, scope: !20857)
!20860 = !DILocation(line: 743, column: 11, scope: !20857)
!20861 = !DILocation(line: 743, column: 15, scope: !20857)
!20862 = !DILocation(line: 743, column: 22, scope: !20857)
!20863 = !DILocation(line: 744, column: 31, scope: !20857)
!20864 = !{!20865, !3178, i64 0}
!20865 = !{!"statfs", !3178, i64 0, !3178, i64 8, !3178, i64 16, !3178, i64 24, !3178, i64 32, !3178, i64 40, !3178, i64 48, !20866, i64 56, !3178, i64 64, !3178, i64 72, !3178, i64 80, !2982, i64 88}
!20866 = !{!"", !2982, i64 0}
!20867 = !DILocation(line: 744, column: 11, scope: !20857)
!20868 = !DILocation(line: 744, column: 15, scope: !20857)
!20869 = !DILocation(line: 744, column: 22, scope: !20857)
!20870 = !DILocation(line: 746, column: 30, scope: !20857)
!20871 = !DILocation(line: 746, column: 33, scope: !20857)
!20872 = !DILocation(line: 746, column: 17, scope: !20857)
!20873 = !DILocation(line: 746, column: 15, scope: !20857)
!20874 = !DILocation(line: 747, column: 15, scope: !20875)
!20875 = distinct !DILexicalBlock(scope: !20857, file: !2306, line: 747, column: 15)
!20876 = !DILocation(line: 747, column: 15, scope: !20857)
!20877 = !DILocation(line: 748, column: 13, scope: !20875)
!20878 = !DILocation(line: 748, column: 13, scope: !20879)
!20879 = distinct !DILexicalBlock(scope: !20880, file: !2306, line: 748, column: 13)
!20880 = distinct !DILexicalBlock(scope: !20875, file: !2306, line: 748, column: 13)
!20881 = !DILocation(line: 748, column: 13, scope: !20880)
!20882 = !DILocation(line: 750, column: 19, scope: !20875)
!20883 = !DILocation(line: 750, column: 13, scope: !20875)
!20884 = !DILocation(line: 751, column: 9, scope: !20857)
!20885 = !DILocation(line: 752, column: 5, scope: !20850)
!20886 = !DILocation(line: 754, column: 17, scope: !20759)
!20887 = !DILocation(line: 754, column: 3, scope: !20759)
!20888 = !DILocation(line: 755, column: 1, scope: !20759)
!20889 = distinct !DISubprogram(name: "dev_type_hash", scope: !2306, file: !2306, line: 689, type: !520, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20890 = !DILocalVariable(name: "x", arg: 1, scope: !20889, file: !2306, line: 689, type: !428)
!20891 = !DILocation(line: 689, column: 28, scope: !20889)
!20892 = !DILocalVariable(name: "table_size", arg: 2, scope: !20889, file: !2306, line: 689, type: !52)
!20893 = !DILocation(line: 689, column: 38, scope: !20889)
!20894 = !DILocalVariable(name: "ax", scope: !20889, file: !2306, line: 691, type: !2461)
!20895 = !DILocation(line: 691, column: 26, scope: !20889)
!20896 = !DILocation(line: 691, column: 31, scope: !20889)
!20897 = !DILocalVariable(name: "dev", scope: !20889, file: !2306, line: 692, type: !459)
!20898 = !DILocation(line: 692, column: 13, scope: !20889)
!20899 = !DILocation(line: 692, column: 19, scope: !20889)
!20900 = !DILocation(line: 692, column: 23, scope: !20889)
!20901 = !DILocation(line: 693, column: 10, scope: !20889)
!20902 = !DILocation(line: 693, column: 16, scope: !20889)
!20903 = !DILocation(line: 693, column: 14, scope: !20889)
!20904 = !DILocation(line: 693, column: 3, scope: !20889)
!20905 = distinct !DISubprogram(name: "dev_type_compare", scope: !2306, file: !2306, line: 697, type: !522, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20906 = !DILocalVariable(name: "x", arg: 1, scope: !20905, file: !2306, line: 697, type: !428)
!20907 = !DILocation(line: 697, column: 31, scope: !20905)
!20908 = !DILocalVariable(name: "y", arg: 2, scope: !20905, file: !2306, line: 697, type: !428)
!20909 = !DILocation(line: 697, column: 46, scope: !20905)
!20910 = !DILocalVariable(name: "ax", scope: !20905, file: !2306, line: 699, type: !2461)
!20911 = !DILocation(line: 699, column: 26, scope: !20905)
!20912 = !DILocation(line: 699, column: 31, scope: !20905)
!20913 = !DILocalVariable(name: "ay", scope: !20905, file: !2306, line: 700, type: !2461)
!20914 = !DILocation(line: 700, column: 26, scope: !20905)
!20915 = !DILocation(line: 700, column: 31, scope: !20905)
!20916 = !DILocation(line: 701, column: 10, scope: !20905)
!20917 = !DILocation(line: 701, column: 14, scope: !20905)
!20918 = !DILocation(line: 701, column: 24, scope: !20905)
!20919 = !DILocation(line: 701, column: 28, scope: !20905)
!20920 = !DILocation(line: 701, column: 21, scope: !20905)
!20921 = !DILocation(line: 701, column: 3, scope: !20905)
!20922 = distinct !DISubprogram(name: "set_stat_type", scope: !2306, file: !2306, line: 1234, type: !2476, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20923 = !DILocalVariable(name: "st", arg: 1, scope: !20922, file: !2306, line: 1234, type: !2478)
!20924 = !DILocation(line: 1234, column: 29, scope: !20922)
!20925 = !DILocalVariable(name: "dtype", arg: 2, scope: !20922, file: !2306, line: 1234, type: !67)
!20926 = !DILocation(line: 1234, column: 46, scope: !20922)
!20927 = !DILocalVariable(name: "type", scope: !20922, file: !2306, line: 1236, type: !157)
!20928 = !DILocation(line: 1236, column: 10, scope: !20922)
!20929 = !DILocation(line: 1237, column: 11, scope: !20922)
!20930 = !DILocation(line: 1237, column: 3, scope: !20922)
!20931 = !DILocation(line: 1240, column: 12, scope: !20932)
!20932 = distinct !DILexicalBlock(scope: !20922, file: !2306, line: 1238, column: 5)
!20933 = !DILocation(line: 1241, column: 7, scope: !20932)
!20934 = !DILocation(line: 1243, column: 12, scope: !20932)
!20935 = !DILocation(line: 1244, column: 7, scope: !20932)
!20936 = !DILocation(line: 1246, column: 12, scope: !20932)
!20937 = !DILocation(line: 1247, column: 7, scope: !20932)
!20938 = !DILocation(line: 1249, column: 12, scope: !20932)
!20939 = !DILocation(line: 1250, column: 7, scope: !20932)
!20940 = !DILocation(line: 1252, column: 12, scope: !20932)
!20941 = !DILocation(line: 1253, column: 7, scope: !20932)
!20942 = !DILocation(line: 1255, column: 12, scope: !20932)
!20943 = !DILocation(line: 1256, column: 7, scope: !20932)
!20944 = !DILocation(line: 1258, column: 12, scope: !20932)
!20945 = !DILocation(line: 1259, column: 7, scope: !20932)
!20946 = !DILocation(line: 1261, column: 12, scope: !20932)
!20947 = !DILocation(line: 1262, column: 5, scope: !20932)
!20948 = !DILocation(line: 1263, column: 17, scope: !20922)
!20949 = !DILocation(line: 1263, column: 3, scope: !20922)
!20950 = !DILocation(line: 1263, column: 7, scope: !20922)
!20951 = !DILocation(line: 1263, column: 15, scope: !20922)
!20952 = !DILocation(line: 1264, column: 1, scope: !20922)
!20953 = distinct !DISubprogram(name: "dirent_inode_sort_may_be_useful", scope: !2306, file: !2306, line: 762, type: !2479, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20954 = !DILocalVariable(name: "p", arg: 1, scope: !20953, file: !2306, line: 762, type: !2313)
!20955 = !DILocation(line: 762, column: 48, scope: !20953)
!20956 = !DILocalVariable(name: "dir_fd", arg: 2, scope: !20953, file: !2306, line: 762, type: !5)
!20957 = !DILocation(line: 762, column: 55, scope: !20953)
!20958 = !DILocation(line: 770, column: 28, scope: !20953)
!20959 = !DILocation(line: 770, column: 31, scope: !20953)
!20960 = !DILocation(line: 770, column: 11, scope: !20953)
!20961 = !DILocation(line: 770, column: 3, scope: !20953)
!20962 = !DILocation(line: 777, column: 7, scope: !20963)
!20963 = distinct !DILexicalBlock(scope: !20953, file: !2306, line: 771, column: 5)
!20964 = !DILocation(line: 780, column: 7, scope: !20963)
!20965 = !DILocation(line: 782, column: 1, scope: !20953)
!20966 = distinct !DISubprogram(name: "fts_padjust", scope: !2306, file: !2306, line: 1997, type: !2444, scopeLine: 1998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!20967 = !DILocalVariable(name: "sp", arg: 1, scope: !20966, file: !2306, line: 1997, type: !2331)
!20968 = !DILocation(line: 1997, column: 19, scope: !20966)
!20969 = !DILocalVariable(name: "head", arg: 2, scope: !20966, file: !2306, line: 1997, type: !2414)
!20970 = !DILocation(line: 1997, column: 31, scope: !20966)
!20971 = !DILocalVariable(name: "p", scope: !20966, file: !2306, line: 1999, type: !2414)
!20972 = !DILocation(line: 1999, column: 17, scope: !20966)
!20973 = !DILocalVariable(name: "addr", scope: !20966, file: !2306, line: 2000, type: !7)
!20974 = !DILocation(line: 2000, column: 15, scope: !20966)
!20975 = !DILocation(line: 2000, column: 22, scope: !20966)
!20976 = !DILocation(line: 2000, column: 26, scope: !20966)
!20977 = !DILocation(line: 2010, column: 18, scope: !20978)
!20978 = distinct !DILexicalBlock(scope: !20966, file: !2306, line: 2010, column: 9)
!20979 = !DILocation(line: 2010, column: 22, scope: !20978)
!20980 = !DILocation(line: 2010, column: 16, scope: !20978)
!20981 = !DILocation(line: 2010, column: 14, scope: !20978)
!20982 = !DILocation(line: 2010, column: 33, scope: !20983)
!20983 = distinct !DILexicalBlock(scope: !20978, file: !2306, line: 2010, column: 9)
!20984 = !DILocation(line: 2010, column: 9, scope: !20978)
!20985 = !DILocation(line: 2011, column: 17, scope: !20983)
!20986 = !DILocation(line: 2011, column: 17, scope: !20987)
!20987 = distinct !DILexicalBlock(scope: !20988, file: !2306, line: 2011, column: 17)
!20988 = distinct !DILexicalBlock(scope: !20983, file: !2306, line: 2011, column: 17)
!20989 = !DILocation(line: 2011, column: 17, scope: !20988)
!20990 = !DILocation(line: 2011, column: 17, scope: !20991)
!20991 = distinct !DILexicalBlock(scope: !20987, file: !2306, line: 2011, column: 17)
!20992 = !DILocation(line: 2010, column: 40, scope: !20983)
!20993 = !DILocation(line: 2010, column: 43, scope: !20983)
!20994 = !DILocation(line: 2010, column: 38, scope: !20983)
!20995 = !DILocation(line: 2010, column: 9, scope: !20983)
!20996 = distinct !{!20996, !20984, !20997}
!20997 = !DILocation(line: 2011, column: 17, scope: !20978)
!20998 = !DILocation(line: 2014, column: 18, scope: !20999)
!20999 = distinct !DILexicalBlock(scope: !20966, file: !2306, line: 2014, column: 9)
!21000 = !DILocation(line: 2014, column: 16, scope: !20999)
!21001 = !DILocation(line: 2014, column: 14, scope: !20999)
!21002 = !DILocation(line: 2014, column: 24, scope: !21003)
!21003 = distinct !DILexicalBlock(scope: !20999, file: !2306, line: 2014, column: 9)
!21004 = !DILocation(line: 2014, column: 27, scope: !21003)
!21005 = !DILocation(line: 2014, column: 37, scope: !21003)
!21006 = !DILocation(line: 2014, column: 9, scope: !20999)
!21007 = !DILocation(line: 2015, column: 17, scope: !21008)
!21008 = distinct !DILexicalBlock(scope: !21003, file: !2306, line: 2014, column: 56)
!21009 = !DILocation(line: 2015, column: 17, scope: !21010)
!21010 = distinct !DILexicalBlock(scope: !21011, file: !2306, line: 2015, column: 17)
!21011 = distinct !DILexicalBlock(scope: !21008, file: !2306, line: 2015, column: 17)
!21012 = !DILocation(line: 2015, column: 17, scope: !21011)
!21013 = !DILocation(line: 2015, column: 17, scope: !21014)
!21014 = distinct !DILexicalBlock(scope: !21010, file: !2306, line: 2015, column: 17)
!21015 = !DILocation(line: 2016, column: 21, scope: !21008)
!21016 = !DILocation(line: 2016, column: 24, scope: !21008)
!21017 = !DILocation(line: 2016, column: 35, scope: !21008)
!21018 = !DILocation(line: 2016, column: 38, scope: !21008)
!21019 = !DILocation(line: 2016, column: 49, scope: !21008)
!21020 = !DILocation(line: 2016, column: 52, scope: !21008)
!21021 = !DILocation(line: 2016, column: 19, scope: !21008)
!21022 = !DILocation(line: 2014, column: 9, scope: !21003)
!21023 = distinct !{!21023, !21006, !21024}
!21024 = !DILocation(line: 2017, column: 9, scope: !20999)
!21025 = !DILocation(line: 2018, column: 1, scope: !20966)
!21026 = distinct !DISubprogram(name: "fts_compare_ino", scope: !2306, file: !2306, line: 1225, type: !2347, scopeLine: 1226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!21027 = !DILocalVariable(name: "a", arg: 1, scope: !21026, file: !2306, line: 1225, type: !2349)
!21028 = !DILocation(line: 1225, column: 41, scope: !21026)
!21029 = !DILocalVariable(name: "b", arg: 2, scope: !21026, file: !2306, line: 1225, type: !2349)
!21030 = !DILocation(line: 1225, column: 67, scope: !21026)
!21031 = !DILocation(line: 1227, column: 11, scope: !21026)
!21032 = !DILocation(line: 1227, column: 17, scope: !21026)
!21033 = !DILocation(line: 1227, column: 28, scope: !21026)
!21034 = !DILocation(line: 1227, column: 37, scope: !21026)
!21035 = !DILocation(line: 1227, column: 43, scope: !21026)
!21036 = !DILocation(line: 1227, column: 54, scope: !21026)
!21037 = !DILocation(line: 1227, column: 35, scope: !21026)
!21038 = !DILocation(line: 1228, column: 13, scope: !21026)
!21039 = !DILocation(line: 1228, column: 19, scope: !21026)
!21040 = !DILocation(line: 1228, column: 30, scope: !21026)
!21041 = !DILocation(line: 1228, column: 39, scope: !21026)
!21042 = !DILocation(line: 1228, column: 45, scope: !21026)
!21043 = !DILocation(line: 1228, column: 56, scope: !21026)
!21044 = !DILocation(line: 1228, column: 37, scope: !21026)
!21045 = !DILocation(line: 1227, column: 3, scope: !21026)
!21046 = distinct !DISubprogram(name: "rpl_fts_set", scope: !2306, file: !2306, line: 1130, type: !2419, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!21047 = !DILocalVariable(name: "sp", arg: 1, scope: !21046, file: !2306, line: 1130, type: !2331)
!21048 = !DILocation(line: 1130, column: 14, scope: !21046)
!21049 = !DILocalVariable(name: "p", arg: 2, scope: !21046, file: !2306, line: 1130, type: !2414)
!21050 = !DILocation(line: 1130, column: 37, scope: !21046)
!21051 = !DILocalVariable(name: "instr", arg: 3, scope: !21046, file: !2306, line: 1130, type: !5)
!21052 = !DILocation(line: 1130, column: 44, scope: !21046)
!21053 = !DILocation(line: 1132, column: 13, scope: !21054)
!21054 = distinct !DILexicalBlock(scope: !21046, file: !2306, line: 1132, column: 13)
!21055 = !DILocation(line: 1132, column: 19, scope: !21054)
!21056 = !DILocation(line: 1132, column: 24, scope: !21054)
!21057 = !DILocation(line: 1132, column: 27, scope: !21054)
!21058 = !DILocation(line: 1132, column: 33, scope: !21054)
!21059 = !DILocation(line: 1132, column: 46, scope: !21054)
!21060 = !DILocation(line: 1132, column: 49, scope: !21054)
!21061 = !DILocation(line: 1132, column: 55, scope: !21054)
!21062 = !DILocation(line: 1132, column: 69, scope: !21054)
!21063 = !DILocation(line: 1133, column: 13, scope: !21054)
!21064 = !DILocation(line: 1133, column: 19, scope: !21054)
!21065 = !DILocation(line: 1133, column: 34, scope: !21054)
!21066 = !DILocation(line: 1133, column: 37, scope: !21054)
!21067 = !DILocation(line: 1133, column: 43, scope: !21054)
!21068 = !DILocation(line: 1132, column: 13, scope: !21046)
!21069 = !DILocation(line: 1134, column: 17, scope: !21070)
!21070 = distinct !DILexicalBlock(scope: !21054, file: !2306, line: 1133, column: 56)
!21071 = !DILocation(line: 1135, column: 17, scope: !21070)
!21072 = !DILocation(line: 1137, column: 24, scope: !21046)
!21073 = !DILocation(line: 1137, column: 9, scope: !21046)
!21074 = !DILocation(line: 1137, column: 12, scope: !21046)
!21075 = !DILocation(line: 1137, column: 22, scope: !21046)
!21076 = !DILocation(line: 1138, column: 9, scope: !21046)
!21077 = !DILocation(line: 1139, column: 1, scope: !21046)
!21078 = distinct !DISubprogram(name: "rpl_fts_children", scope: !2306, file: !2306, line: 1142, type: !2421, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2302, retainedNodes: !140)
!21079 = !DILocalVariable(name: "sp", arg: 1, scope: !21078, file: !2306, line: 1142, type: !2331)
!21080 = !DILocation(line: 1142, column: 29, scope: !21078)
!21081 = !DILocalVariable(name: "instr", arg: 2, scope: !21078, file: !2306, line: 1142, type: !5)
!21082 = !DILocation(line: 1142, column: 37, scope: !21078)
!21083 = !DILocalVariable(name: "p", scope: !21078, file: !2306, line: 1144, type: !2414)
!21084 = !DILocation(line: 1144, column: 26, scope: !21078)
!21085 = !DILocalVariable(name: "fd", scope: !21078, file: !2306, line: 1145, type: !5)
!21086 = !DILocation(line: 1145, column: 13, scope: !21078)
!21087 = !DILocation(line: 1147, column: 13, scope: !21088)
!21088 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1147, column: 13)
!21089 = !DILocation(line: 1147, column: 19, scope: !21088)
!21090 = !DILocation(line: 1147, column: 24, scope: !21088)
!21091 = !DILocation(line: 1147, column: 27, scope: !21088)
!21092 = !DILocation(line: 1147, column: 33, scope: !21088)
!21093 = !DILocation(line: 1147, column: 13, scope: !21078)
!21094 = !DILocation(line: 1148, column: 17, scope: !21095)
!21095 = distinct !DILexicalBlock(scope: !21088, file: !2306, line: 1147, column: 50)
!21096 = !DILocation(line: 1149, column: 17, scope: !21095)
!21097 = !DILocation(line: 1153, column: 13, scope: !21078)
!21098 = !DILocation(line: 1153, column: 17, scope: !21078)
!21099 = !DILocation(line: 1153, column: 11, scope: !21078)
!21100 = !DILocation(line: 1159, column: 9, scope: !21078)
!21101 = !DILocation(line: 1162, column: 13, scope: !21102)
!21102 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1162, column: 13)
!21103 = !DILocation(line: 1162, column: 13, scope: !21078)
!21104 = !DILocation(line: 1163, column: 17, scope: !21102)
!21105 = !DILocation(line: 1166, column: 13, scope: !21106)
!21106 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1166, column: 13)
!21107 = !DILocation(line: 1166, column: 16, scope: !21106)
!21108 = !DILocation(line: 1166, column: 25, scope: !21106)
!21109 = !DILocation(line: 1166, column: 13, scope: !21078)
!21110 = !DILocation(line: 1167, column: 25, scope: !21106)
!21111 = !DILocation(line: 1167, column: 28, scope: !21106)
!21112 = !DILocation(line: 1167, column: 17, scope: !21106)
!21113 = !DILocation(line: 1174, column: 13, scope: !21114)
!21114 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1174, column: 13)
!21115 = !DILocation(line: 1174, column: 16, scope: !21114)
!21116 = !DILocation(line: 1174, column: 25, scope: !21114)
!21117 = !DILocation(line: 1174, column: 13, scope: !21078)
!21118 = !DILocation(line: 1175, column: 17, scope: !21114)
!21119 = !DILocation(line: 1178, column: 13, scope: !21120)
!21120 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1178, column: 13)
!21121 = !DILocation(line: 1178, column: 17, scope: !21120)
!21122 = !DILocation(line: 1178, column: 27, scope: !21120)
!21123 = !DILocation(line: 1178, column: 13, scope: !21078)
!21124 = !DILocation(line: 1179, column: 27, scope: !21120)
!21125 = !DILocation(line: 1179, column: 31, scope: !21120)
!21126 = !DILocation(line: 1179, column: 17, scope: !21120)
!21127 = !DILocation(line: 1181, column: 13, scope: !21128)
!21128 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1181, column: 13)
!21129 = !DILocation(line: 1181, column: 19, scope: !21128)
!21130 = !DILocation(line: 1181, column: 13, scope: !21078)
!21131 = !DILocation(line: 1182, column: 17, scope: !21132)
!21132 = distinct !DILexicalBlock(scope: !21128, file: !2306, line: 1181, column: 36)
!21133 = !DILocation(line: 1183, column: 23, scope: !21132)
!21134 = !DILocation(line: 1184, column: 9, scope: !21132)
!21135 = !DILocation(line: 1185, column: 23, scope: !21128)
!21136 = !DILocation(line: 1194, column: 13, scope: !21137)
!21137 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1194, column: 13)
!21138 = !DILocation(line: 1194, column: 16, scope: !21137)
!21139 = !DILocation(line: 1194, column: 26, scope: !21137)
!21140 = !DILocation(line: 1194, column: 43, scope: !21137)
!21141 = !DILocation(line: 1194, column: 46, scope: !21137)
!21142 = !DILocation(line: 1194, column: 49, scope: !21137)
!21143 = !DILocation(line: 1194, column: 64, scope: !21137)
!21144 = !DILocation(line: 1194, column: 71, scope: !21137)
!21145 = !DILocation(line: 1195, column: 13, scope: !21137)
!21146 = !DILocation(line: 1194, column: 13, scope: !21078)
!21147 = !DILocation(line: 1196, column: 51, scope: !21137)
!21148 = !DILocation(line: 1196, column: 55, scope: !21137)
!21149 = !DILocation(line: 1196, column: 41, scope: !21137)
!21150 = !DILocation(line: 1196, column: 25, scope: !21137)
!21151 = !DILocation(line: 1196, column: 29, scope: !21137)
!21152 = !DILocation(line: 1196, column: 39, scope: !21137)
!21153 = !DILocation(line: 1196, column: 17, scope: !21137)
!21154 = !DILocation(line: 1198, column: 28, scope: !21155)
!21155 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1198, column: 13)
!21156 = !DILocation(line: 1198, column: 19, scope: !21155)
!21157 = !DILocation(line: 1198, column: 17, scope: !21155)
!21158 = !DILocation(line: 1198, column: 38, scope: !21155)
!21159 = !DILocation(line: 1198, column: 13, scope: !21078)
!21160 = !DILocation(line: 1199, column: 25, scope: !21155)
!21161 = !DILocation(line: 1199, column: 29, scope: !21155)
!21162 = !DILocation(line: 1199, column: 39, scope: !21155)
!21163 = !DILocation(line: 1199, column: 17, scope: !21155)
!21164 = !DILocation(line: 1200, column: 35, scope: !21078)
!21165 = !DILocation(line: 1200, column: 39, scope: !21078)
!21166 = !DILocation(line: 1200, column: 25, scope: !21078)
!21167 = !DILocation(line: 1200, column: 9, scope: !21078)
!21168 = !DILocation(line: 1200, column: 13, scope: !21078)
!21169 = !DILocation(line: 1200, column: 23, scope: !21078)
!21170 = !DILocation(line: 1201, column: 13, scope: !21171)
!21171 = distinct !DILexicalBlock(scope: !21078, file: !2306, line: 1201, column: 13)
!21172 = !DILocation(line: 1201, column: 13, scope: !21078)
!21173 = !DILocation(line: 1203, column: 29, scope: !21174)
!21174 = distinct !DILexicalBlock(scope: !21171, file: !2306, line: 1202, column: 11)
!21175 = !DILocation(line: 1203, column: 33, scope: !21174)
!21176 = !DILocation(line: 1203, column: 13, scope: !21174)
!21177 = !DILocation(line: 1204, column: 11, scope: !21174)
!21178 = !DILocation(line: 1207, column: 24, scope: !21179)
!21179 = distinct !DILexicalBlock(scope: !21180, file: !2306, line: 1207, column: 17)
!21180 = distinct !DILexicalBlock(scope: !21171, file: !2306, line: 1206, column: 11)
!21181 = !DILocation(line: 1207, column: 17, scope: !21179)
!21182 = !DILocation(line: 1207, column: 17, scope: !21180)
!21183 = !DILocalVariable(name: "saved_errno", scope: !21184, file: !2306, line: 1209, type: !5)
!21184 = distinct !DILexicalBlock(scope: !21179, file: !2306, line: 1208, column: 15)
!21185 = !DILocation(line: 1209, column: 21, scope: !21184)
!21186 = !DILocation(line: 1209, column: 35, scope: !21184)
!21187 = !DILocation(line: 1210, column: 24, scope: !21184)
!21188 = !DILocation(line: 1210, column: 17, scope: !21184)
!21189 = !DILocation(line: 1211, column: 17, scope: !21184)
!21190 = !DILocation(line: 1212, column: 17, scope: !21184)
!21191 = !DILocation(line: 1214, column: 20, scope: !21180)
!21192 = !DILocation(line: 1214, column: 13, scope: !21180)
!21193 = !DILocation(line: 1216, column: 17, scope: !21078)
!21194 = !DILocation(line: 1216, column: 21, scope: !21078)
!21195 = !DILocation(line: 1216, column: 9, scope: !21078)
!21196 = !DILocation(line: 1217, column: 1, scope: !21078)
!21197 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !21198, file: !21198, line: 461, type: !2499, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2496, retainedNodes: !140)
!21198 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!21199 = !DILocalVariable(name: "pwc", arg: 1, scope: !21197, file: !21198, line: 461, type: !2501)
!21200 = !DILocation(line: 461, column: 23, scope: !21197)
!21201 = !DILocalVariable(name: "s", arg: 2, scope: !21197, file: !21198, line: 461, type: !112)
!21202 = !DILocation(line: 461, column: 40, scope: !21197)
!21203 = !DILocalVariable(name: "n", arg: 3, scope: !21197, file: !21198, line: 461, type: !52)
!21204 = !DILocation(line: 461, column: 50, scope: !21197)
!21205 = !DILocalVariable(name: "ps", arg: 4, scope: !21197, file: !21198, line: 461, type: !2502)
!21206 = !DILocation(line: 461, column: 64, scope: !21197)
!21207 = !DILocalVariable(name: "ret", scope: !21197, file: !21198, line: 463, type: !52)
!21208 = !DILocation(line: 463, column: 10, scope: !21197)
!21209 = !DILocalVariable(name: "wc", scope: !21197, file: !21198, line: 464, type: !1031)
!21210 = !DILocation(line: 464, column: 11, scope: !21197)
!21211 = !DILocation(line: 480, column: 9, scope: !21212)
!21212 = distinct !DILexicalBlock(scope: !21197, file: !21198, line: 480, column: 7)
!21213 = !DILocation(line: 480, column: 7, scope: !21197)
!21214 = !DILocation(line: 481, column: 9, scope: !21212)
!21215 = !DILocation(line: 481, column: 5, scope: !21212)
!21216 = !DILocation(line: 515, column: 18, scope: !21197)
!21217 = !DILocation(line: 515, column: 23, scope: !21197)
!21218 = !DILocation(line: 515, column: 26, scope: !21197)
!21219 = !DILocation(line: 515, column: 29, scope: !21197)
!21220 = !DILocation(line: 515, column: 9, scope: !21197)
!21221 = !DILocation(line: 515, column: 7, scope: !21197)
!21222 = !DILocation(line: 523, column: 22, scope: !21223)
!21223 = distinct !DILexicalBlock(scope: !21197, file: !21198, line: 523, column: 7)
!21224 = !DILocation(line: 523, column: 19, scope: !21223)
!21225 = !DILocation(line: 523, column: 26, scope: !21223)
!21226 = !DILocation(line: 523, column: 29, scope: !21223)
!21227 = !DILocation(line: 523, column: 31, scope: !21223)
!21228 = !DILocation(line: 523, column: 36, scope: !21223)
!21229 = !DILocation(line: 523, column: 41, scope: !21223)
!21230 = !DILocation(line: 523, column: 7, scope: !21197)
!21231 = !DILocalVariable(name: "uc", scope: !21232, file: !21198, line: 525, type: !468)
!21232 = distinct !DILexicalBlock(scope: !21223, file: !21198, line: 524, column: 5)
!21233 = !DILocation(line: 525, column: 21, scope: !21232)
!21234 = !DILocation(line: 525, column: 27, scope: !21232)
!21235 = !DILocation(line: 525, column: 26, scope: !21232)
!21236 = !DILocation(line: 526, column: 14, scope: !21232)
!21237 = !DILocation(line: 526, column: 8, scope: !21232)
!21238 = !DILocation(line: 526, column: 12, scope: !21232)
!21239 = !DILocation(line: 527, column: 7, scope: !21232)
!21240 = !DILocation(line: 531, column: 10, scope: !21197)
!21241 = !DILocation(line: 531, column: 3, scope: !21197)
!21242 = !DILocation(line: 532, column: 1, scope: !21197)
!21243 = distinct !DISubprogram(name: "free_permission_context", scope: !21244, file: !21244, line: 479, type: !2516, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2513, retainedNodes: !140)
!21244 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!21245 = !DILocalVariable(name: "ctx", arg: 1, scope: !21243, file: !21244, line: 479, type: !2518)
!21246 = !DILocation(line: 479, column: 53, scope: !21243)
!21247 = !DILocation(line: 507, column: 1, scope: !21243)
!21248 = distinct !DISubprogram(name: "get_permissions", scope: !21249, file: !21249, line: 33, type: !2526, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2523, retainedNodes: !140)
!21249 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!21250 = !DILocalVariable(name: "name", arg: 1, scope: !21248, file: !21249, line: 33, type: !112)
!21251 = !DILocation(line: 33, column: 30, scope: !21248)
!21252 = !DILocalVariable(name: "desc", arg: 2, scope: !21248, file: !21249, line: 33, type: !5)
!21253 = !DILocation(line: 33, column: 40, scope: !21248)
!21254 = !DILocalVariable(name: "mode", arg: 3, scope: !21248, file: !21249, line: 33, type: !157)
!21255 = !DILocation(line: 33, column: 53, scope: !21248)
!21256 = !DILocalVariable(name: "ctx", arg: 4, scope: !21248, file: !21249, line: 34, type: !2528)
!21257 = !DILocation(line: 34, column: 45, scope: !21248)
!21258 = !DILocation(line: 36, column: 11, scope: !21248)
!21259 = !DILocation(line: 36, column: 3, scope: !21248)
!21260 = !DILocation(line: 37, column: 15, scope: !21248)
!21261 = !DILocation(line: 37, column: 3, scope: !21248)
!21262 = !DILocation(line: 37, column: 8, scope: !21248)
!21263 = !DILocation(line: 37, column: 13, scope: !21248)
!21264 = !DILocation(line: 289, column: 3, scope: !21248)
!21265 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !21266, file: !21266, line: 760, type: !1582, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2532, retainedNodes: !140)
!21266 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!21267 = !DILocalVariable(name: "name", arg: 1, scope: !21265, file: !21266, line: 760, type: !112)
!21268 = !DILocation(line: 760, column: 30, scope: !21265)
!21269 = !DILocalVariable(name: "desc", arg: 2, scope: !21265, file: !21266, line: 760, type: !5)
!21270 = !DILocation(line: 760, column: 40, scope: !21265)
!21271 = !DILocalVariable(name: "mode", arg: 3, scope: !21265, file: !21266, line: 760, type: !157)
!21272 = !DILocation(line: 760, column: 53, scope: !21265)
!21273 = !DILocation(line: 762, column: 22, scope: !21274)
!21274 = distinct !DILexicalBlock(scope: !21265, file: !21266, line: 762, column: 7)
!21275 = !DILocation(line: 762, column: 27, scope: !21274)
!21276 = !DILocation(line: 762, column: 7, scope: !21265)
!21277 = !DILocation(line: 763, column: 20, scope: !21274)
!21278 = !DILocation(line: 763, column: 26, scope: !21274)
!21279 = !DILocation(line: 763, column: 12, scope: !21274)
!21280 = !DILocation(line: 763, column: 5, scope: !21274)
!21281 = !DILocation(line: 765, column: 19, scope: !21274)
!21282 = !DILocation(line: 765, column: 25, scope: !21274)
!21283 = !DILocation(line: 765, column: 12, scope: !21274)
!21284 = !DILocation(line: 765, column: 5, scope: !21274)
!21285 = !DILocation(line: 766, column: 1, scope: !21265)
!21286 = distinct !DISubprogram(name: "set_permissions", scope: !21266, file: !21266, line: 776, type: !2535, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2532, retainedNodes: !140)
!21287 = !DILocalVariable(name: "ctx", arg: 1, scope: !21286, file: !21266, line: 776, type: !2537)
!21288 = !DILocation(line: 776, column: 45, scope: !21286)
!21289 = !DILocalVariable(name: "name", arg: 2, scope: !21286, file: !21266, line: 776, type: !112)
!21290 = !DILocation(line: 776, column: 62, scope: !21286)
!21291 = !DILocalVariable(name: "desc", arg: 3, scope: !21286, file: !21266, line: 776, type: !5)
!21292 = !DILocation(line: 776, column: 72, scope: !21286)
!21293 = !DILocalVariable(name: "acls_set", scope: !21286, file: !21266, line: 778, type: !117)
!21294 = !DILocation(line: 778, column: 8, scope: !21286)
!21295 = !DILocalVariable(name: "early_chmod", scope: !21286, file: !21266, line: 779, type: !117)
!21296 = !DILocation(line: 779, column: 8, scope: !21286)
!21297 = !DILocalVariable(name: "must_chmod", scope: !21286, file: !21266, line: 780, type: !117)
!21298 = !DILocation(line: 780, column: 8, scope: !21286)
!21299 = !DILocalVariable(name: "ret", scope: !21286, file: !21266, line: 781, type: !5)
!21300 = !DILocation(line: 781, column: 7, scope: !21286)
!21301 = !DILocation(line: 801, column: 15, scope: !21286)
!21302 = !DILocation(line: 804, column: 7, scope: !21303)
!21303 = distinct !DILexicalBlock(scope: !21286, file: !21266, line: 804, column: 7)
!21304 = !DILocation(line: 804, column: 7, scope: !21286)
!21305 = !DILocation(line: 806, column: 30, scope: !21306)
!21306 = distinct !DILexicalBlock(scope: !21303, file: !21266, line: 805, column: 5)
!21307 = !DILocation(line: 806, column: 36, scope: !21306)
!21308 = !DILocation(line: 806, column: 42, scope: !21306)
!21309 = !DILocation(line: 806, column: 47, scope: !21306)
!21310 = !DILocation(line: 806, column: 13, scope: !21306)
!21311 = !DILocation(line: 806, column: 11, scope: !21306)
!21312 = !DILocation(line: 807, column: 11, scope: !21313)
!21313 = distinct !DILexicalBlock(scope: !21306, file: !21266, line: 807, column: 11)
!21314 = !DILocation(line: 807, column: 15, scope: !21313)
!21315 = !DILocation(line: 807, column: 11, scope: !21306)
!21316 = !DILocation(line: 808, column: 9, scope: !21313)
!21317 = !DILocation(line: 809, column: 5, scope: !21306)
!21318 = !DILocation(line: 833, column: 7, scope: !21319)
!21319 = distinct !DILexicalBlock(scope: !21286, file: !21266, line: 833, column: 7)
!21320 = !DILocation(line: 833, column: 18, scope: !21319)
!21321 = !DILocation(line: 833, column: 23, scope: !21319)
!21322 = !DILocation(line: 833, column: 7, scope: !21286)
!21323 = !DILocalVariable(name: "saved_errno", scope: !21324, file: !21266, line: 835, type: !5)
!21324 = distinct !DILexicalBlock(scope: !21319, file: !21266, line: 834, column: 5)
!21325 = !DILocation(line: 835, column: 11, scope: !21324)
!21326 = !DILocation(line: 835, column: 25, scope: !21324)
!21327 = !DILocation(line: 835, column: 31, scope: !21324)
!21328 = !DILocation(line: 837, column: 30, scope: !21324)
!21329 = !DILocation(line: 837, column: 36, scope: !21324)
!21330 = !DILocation(line: 837, column: 42, scope: !21324)
!21331 = !DILocation(line: 837, column: 47, scope: !21324)
!21332 = !DILocation(line: 837, column: 13, scope: !21324)
!21333 = !DILocation(line: 837, column: 11, scope: !21324)
!21334 = !DILocation(line: 839, column: 11, scope: !21335)
!21335 = distinct !DILexicalBlock(scope: !21324, file: !21266, line: 839, column: 11)
!21336 = !DILocation(line: 839, column: 11, scope: !21324)
!21337 = !DILocation(line: 841, column: 19, scope: !21338)
!21338 = distinct !DILexicalBlock(scope: !21335, file: !21266, line: 840, column: 9)
!21339 = !DILocation(line: 841, column: 11, scope: !21338)
!21340 = !DILocation(line: 841, column: 17, scope: !21338)
!21341 = !DILocation(line: 842, column: 15, scope: !21338)
!21342 = !DILocation(line: 843, column: 9, scope: !21338)
!21343 = !DILocation(line: 844, column: 5, scope: !21324)
!21344 = !DILocation(line: 846, column: 10, scope: !21286)
!21345 = !DILocation(line: 846, column: 3, scope: !21286)
!21346 = !DILocation(line: 847, column: 1, scope: !21286)
!21347 = distinct !DISubprogram(name: "__argmatch_die", scope: !1297, file: !1297, line: 60, type: !131, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1244, retainedNodes: !140)
!21348 = !DILocation(line: 62, column: 3, scope: !21347)
!21349 = !DILocation(line: 63, column: 1, scope: !21347)
!21350 = distinct !DISubprogram(name: "argmatch", scope: !1297, file: !1297, line: 82, type: !1247, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1244, retainedNodes: !140)
!21351 = !DILocalVariable(name: "arg", arg: 1, scope: !21350, file: !1297, line: 82, type: !112)
!21352 = !DILocation(line: 82, column: 23, scope: !21350)
!21353 = !DILocalVariable(name: "arglist", arg: 2, scope: !21350, file: !1297, line: 82, type: !1249)
!21354 = !DILocation(line: 82, column: 47, scope: !21350)
!21355 = !DILocalVariable(name: "vallist", arg: 3, scope: !21350, file: !1297, line: 83, type: !428)
!21356 = !DILocation(line: 83, column: 23, scope: !21350)
!21357 = !DILocalVariable(name: "valsize", arg: 4, scope: !21350, file: !1297, line: 83, type: !52)
!21358 = !DILocation(line: 83, column: 39, scope: !21350)
!21359 = !DILocalVariable(name: "i", scope: !21350, file: !1297, line: 85, type: !52)
!21360 = !DILocation(line: 85, column: 10, scope: !21350)
!21361 = !DILocalVariable(name: "arglen", scope: !21350, file: !1297, line: 86, type: !52)
!21362 = !DILocation(line: 86, column: 10, scope: !21350)
!21363 = !DILocalVariable(name: "matchind", scope: !21350, file: !1297, line: 87, type: !539)
!21364 = !DILocation(line: 87, column: 13, scope: !21350)
!21365 = !DILocalVariable(name: "ambiguous", scope: !21350, file: !1297, line: 88, type: !117)
!21366 = !DILocation(line: 88, column: 8, scope: !21350)
!21367 = !DILocation(line: 90, column: 20, scope: !21350)
!21368 = !DILocation(line: 90, column: 12, scope: !21350)
!21369 = !DILocation(line: 90, column: 10, scope: !21350)
!21370 = !DILocation(line: 93, column: 10, scope: !21371)
!21371 = distinct !DILexicalBlock(scope: !21350, file: !1297, line: 93, column: 3)
!21372 = !DILocation(line: 93, column: 8, scope: !21371)
!21373 = !DILocation(line: 93, column: 15, scope: !21374)
!21374 = distinct !DILexicalBlock(scope: !21371, file: !1297, line: 93, column: 3)
!21375 = !DILocation(line: 93, column: 23, scope: !21374)
!21376 = !DILocation(line: 93, column: 3, scope: !21371)
!21377 = !DILocation(line: 95, column: 21, scope: !21378)
!21378 = distinct !DILexicalBlock(scope: !21379, file: !1297, line: 95, column: 11)
!21379 = distinct !DILexicalBlock(scope: !21374, file: !1297, line: 94, column: 5)
!21380 = !DILocation(line: 95, column: 29, scope: !21378)
!21381 = !DILocation(line: 95, column: 33, scope: !21378)
!21382 = !DILocation(line: 95, column: 38, scope: !21378)
!21383 = !DILocation(line: 95, column: 12, scope: !21378)
!21384 = !DILocation(line: 95, column: 11, scope: !21379)
!21385 = !DILocation(line: 97, column: 23, scope: !21386)
!21386 = distinct !DILexicalBlock(scope: !21387, file: !1297, line: 97, column: 15)
!21387 = distinct !DILexicalBlock(scope: !21378, file: !1297, line: 96, column: 9)
!21388 = !DILocation(line: 97, column: 31, scope: !21386)
!21389 = !DILocation(line: 97, column: 15, scope: !21386)
!21390 = !DILocation(line: 97, column: 38, scope: !21386)
!21391 = !DILocation(line: 97, column: 35, scope: !21386)
!21392 = !DILocation(line: 97, column: 15, scope: !21387)
!21393 = !DILocation(line: 99, column: 20, scope: !21386)
!21394 = !DILocation(line: 99, column: 13, scope: !21386)
!21395 = !DILocation(line: 100, column: 20, scope: !21396)
!21396 = distinct !DILexicalBlock(scope: !21386, file: !1297, line: 100, column: 20)
!21397 = !DILocation(line: 100, column: 29, scope: !21396)
!21398 = !DILocation(line: 100, column: 20, scope: !21386)
!21399 = !DILocation(line: 102, column: 24, scope: !21396)
!21400 = !DILocation(line: 102, column: 22, scope: !21396)
!21401 = !DILocation(line: 102, column: 13, scope: !21396)
!21402 = !DILocation(line: 106, column: 19, scope: !21403)
!21403 = distinct !DILexicalBlock(scope: !21404, file: !1297, line: 106, column: 19)
!21404 = distinct !DILexicalBlock(scope: !21396, file: !1297, line: 104, column: 13)
!21405 = !DILocation(line: 106, column: 27, scope: !21403)
!21406 = !DILocation(line: 107, column: 19, scope: !21403)
!21407 = !DILocation(line: 107, column: 45, scope: !21403)
!21408 = !DILocation(line: 107, column: 55, scope: !21403)
!21409 = !DILocation(line: 107, column: 65, scope: !21403)
!21410 = !DILocation(line: 107, column: 63, scope: !21403)
!21411 = !DILocation(line: 107, column: 53, scope: !21403)
!21412 = !DILocation(line: 108, column: 45, scope: !21403)
!21413 = !DILocation(line: 108, column: 55, scope: !21403)
!21414 = !DILocation(line: 108, column: 65, scope: !21403)
!21415 = !DILocation(line: 108, column: 63, scope: !21403)
!21416 = !DILocation(line: 108, column: 53, scope: !21403)
!21417 = !DILocation(line: 108, column: 68, scope: !21403)
!21418 = !DILocation(line: 107, column: 22, scope: !21403)
!21419 = !DILocation(line: 106, column: 19, scope: !21404)
!21420 = !DILocation(line: 112, column: 29, scope: !21421)
!21421 = distinct !DILexicalBlock(scope: !21403, file: !1297, line: 109, column: 17)
!21422 = !DILocation(line: 113, column: 17, scope: !21421)
!21423 = !DILocation(line: 115, column: 9, scope: !21387)
!21424 = !DILocation(line: 116, column: 5, scope: !21379)
!21425 = !DILocation(line: 93, column: 28, scope: !21374)
!21426 = !DILocation(line: 93, column: 3, scope: !21374)
!21427 = distinct !{!21427, !21376, !21428}
!21428 = !DILocation(line: 116, column: 5, scope: !21371)
!21429 = !DILocation(line: 117, column: 7, scope: !21430)
!21430 = distinct !DILexicalBlock(scope: !21350, file: !1297, line: 117, column: 7)
!21431 = !DILocation(line: 117, column: 7, scope: !21350)
!21432 = !DILocation(line: 118, column: 5, scope: !21430)
!21433 = !DILocation(line: 120, column: 12, scope: !21430)
!21434 = !DILocation(line: 120, column: 5, scope: !21430)
!21435 = !DILocation(line: 121, column: 1, scope: !21350)
!21436 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1297, file: !1297, line: 129, type: !1250, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1244, retainedNodes: !140)
!21437 = !DILocalVariable(name: "context", arg: 1, scope: !21436, file: !1297, line: 129, type: !112)
!21438 = !DILocation(line: 129, column: 31, scope: !21436)
!21439 = !DILocalVariable(name: "value", arg: 2, scope: !21436, file: !1297, line: 129, type: !112)
!21440 = !DILocation(line: 129, column: 52, scope: !21436)
!21441 = !DILocalVariable(name: "problem", arg: 3, scope: !21436, file: !1297, line: 129, type: !539)
!21442 = !DILocation(line: 129, column: 69, scope: !21436)
!21443 = !DILocalVariable(name: "format", scope: !21436, file: !1297, line: 131, type: !112)
!21444 = !DILocation(line: 131, column: 15, scope: !21436)
!21445 = !DILocation(line: 131, column: 25, scope: !21436)
!21446 = !DILocation(line: 131, column: 33, scope: !21436)
!21447 = !DILocation(line: 132, column: 27, scope: !21436)
!21448 = !DILocation(line: 133, column: 27, scope: !21436)
!21449 = !DILocation(line: 135, column: 16, scope: !21436)
!21450 = !DILocation(line: 135, column: 69, scope: !21436)
!21451 = !DILocation(line: 135, column: 24, scope: !21436)
!21452 = !DILocation(line: 136, column: 22, scope: !21436)
!21453 = !DILocation(line: 136, column: 10, scope: !21436)
!21454 = !DILocation(line: 135, column: 3, scope: !21436)
!21455 = !DILocation(line: 137, column: 1, scope: !21436)
!21456 = distinct !DISubprogram(name: "argmatch_valid", scope: !1297, file: !1297, line: 144, type: !1252, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1244, retainedNodes: !140)
!21457 = !DILocalVariable(name: "arglist", arg: 1, scope: !21456, file: !1297, line: 144, type: !1249)
!21458 = !DILocation(line: 144, column: 36, scope: !21456)
!21459 = !DILocalVariable(name: "vallist", arg: 2, scope: !21456, file: !1297, line: 145, type: !428)
!21460 = !DILocation(line: 145, column: 29, scope: !21456)
!21461 = !DILocalVariable(name: "valsize", arg: 3, scope: !21456, file: !1297, line: 145, type: !52)
!21462 = !DILocation(line: 145, column: 45, scope: !21456)
!21463 = !DILocalVariable(name: "i", scope: !21456, file: !1297, line: 147, type: !52)
!21464 = !DILocation(line: 147, column: 10, scope: !21456)
!21465 = !DILocalVariable(name: "last_val", scope: !21456, file: !1297, line: 148, type: !112)
!21466 = !DILocation(line: 148, column: 15, scope: !21456)
!21467 = !DILocation(line: 152, column: 3, scope: !21456)
!21468 = !DILocation(line: 153, column: 10, scope: !21469)
!21469 = distinct !DILexicalBlock(scope: !21456, file: !1297, line: 153, column: 3)
!21470 = !DILocation(line: 153, column: 8, scope: !21469)
!21471 = !DILocation(line: 153, column: 15, scope: !21472)
!21472 = distinct !DILexicalBlock(scope: !21469, file: !1297, line: 153, column: 3)
!21473 = !DILocation(line: 153, column: 23, scope: !21472)
!21474 = !DILocation(line: 153, column: 3, scope: !21469)
!21475 = !DILocation(line: 154, column: 10, scope: !21476)
!21476 = distinct !DILexicalBlock(scope: !21472, file: !1297, line: 154, column: 9)
!21477 = !DILocation(line: 154, column: 12, scope: !21476)
!21478 = !DILocation(line: 155, column: 9, scope: !21476)
!21479 = !DILocation(line: 155, column: 20, scope: !21476)
!21480 = !DILocation(line: 155, column: 45, scope: !21476)
!21481 = !DILocation(line: 155, column: 55, scope: !21476)
!21482 = !DILocation(line: 155, column: 65, scope: !21476)
!21483 = !DILocation(line: 155, column: 63, scope: !21476)
!21484 = !DILocation(line: 155, column: 53, scope: !21476)
!21485 = !DILocation(line: 155, column: 68, scope: !21476)
!21486 = !DILocation(line: 155, column: 12, scope: !21476)
!21487 = !DILocation(line: 154, column: 9, scope: !21472)
!21488 = !DILocation(line: 157, column: 18, scope: !21489)
!21489 = distinct !DILexicalBlock(scope: !21476, file: !1297, line: 156, column: 7)
!21490 = !DILocation(line: 157, column: 45, scope: !21489)
!21491 = !DILocation(line: 157, column: 53, scope: !21489)
!21492 = !DILocation(line: 157, column: 38, scope: !21489)
!21493 = !DILocation(line: 157, column: 9, scope: !21489)
!21494 = !DILocation(line: 158, column: 35, scope: !21489)
!21495 = !DILocation(line: 158, column: 45, scope: !21489)
!21496 = !DILocation(line: 158, column: 55, scope: !21489)
!21497 = !DILocation(line: 158, column: 53, scope: !21489)
!21498 = !DILocation(line: 158, column: 43, scope: !21489)
!21499 = !DILocation(line: 158, column: 18, scope: !21489)
!21500 = !DILocation(line: 159, column: 7, scope: !21489)
!21501 = !DILocation(line: 162, column: 18, scope: !21502)
!21502 = distinct !DILexicalBlock(scope: !21476, file: !1297, line: 161, column: 7)
!21503 = !DILocation(line: 162, column: 41, scope: !21502)
!21504 = !DILocation(line: 162, column: 49, scope: !21502)
!21505 = !DILocation(line: 162, column: 34, scope: !21502)
!21506 = !DILocation(line: 162, column: 9, scope: !21502)
!21507 = !DILocation(line: 155, column: 75, scope: !21476)
!21508 = !DILocation(line: 153, column: 28, scope: !21472)
!21509 = !DILocation(line: 153, column: 3, scope: !21472)
!21510 = distinct !{!21510, !21474, !21511}
!21511 = !DILocation(line: 163, column: 7, scope: !21469)
!21512 = !DILocation(line: 164, column: 3, scope: !21456)
!21513 = !DILocation(line: 165, column: 1, scope: !21456)
!21514 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1297, file: !1297, line: 174, type: !1292, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1244, retainedNodes: !140)
!21515 = !DILocalVariable(name: "context", arg: 1, scope: !21514, file: !1297, line: 174, type: !112)
!21516 = !DILocation(line: 174, column: 35, scope: !21514)
!21517 = !DILocalVariable(name: "arg", arg: 2, scope: !21514, file: !1297, line: 175, type: !112)
!21518 = !DILocation(line: 175, column: 35, scope: !21514)
!21519 = !DILocalVariable(name: "arglist", arg: 3, scope: !21514, file: !1297, line: 175, type: !1249)
!21520 = !DILocation(line: 175, column: 59, scope: !21514)
!21521 = !DILocalVariable(name: "vallist", arg: 4, scope: !21514, file: !1297, line: 176, type: !428)
!21522 = !DILocation(line: 176, column: 35, scope: !21514)
!21523 = !DILocalVariable(name: "valsize", arg: 5, scope: !21514, file: !1297, line: 176, type: !52)
!21524 = !DILocation(line: 176, column: 51, scope: !21514)
!21525 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !21514, file: !1297, line: 177, type: !617)
!21526 = !DILocation(line: 177, column: 40, scope: !21514)
!21527 = !DILocalVariable(name: "res", scope: !21514, file: !1297, line: 179, type: !539)
!21528 = !DILocation(line: 179, column: 13, scope: !21514)
!21529 = !DILocation(line: 179, column: 29, scope: !21514)
!21530 = !DILocation(line: 179, column: 34, scope: !21514)
!21531 = !DILocation(line: 179, column: 43, scope: !21514)
!21532 = !DILocation(line: 179, column: 52, scope: !21514)
!21533 = !DILocation(line: 179, column: 19, scope: !21514)
!21534 = !DILocation(line: 180, column: 7, scope: !21535)
!21535 = distinct !DILexicalBlock(scope: !21514, file: !1297, line: 180, column: 7)
!21536 = !DILocation(line: 180, column: 11, scope: !21535)
!21537 = !DILocation(line: 180, column: 7, scope: !21514)
!21538 = !DILocation(line: 182, column: 12, scope: !21535)
!21539 = !DILocation(line: 182, column: 5, scope: !21535)
!21540 = !DILocation(line: 185, column: 21, scope: !21514)
!21541 = !DILocation(line: 185, column: 30, scope: !21514)
!21542 = !DILocation(line: 185, column: 35, scope: !21514)
!21543 = !DILocation(line: 185, column: 3, scope: !21514)
!21544 = !DILocation(line: 186, column: 19, scope: !21514)
!21545 = !DILocation(line: 186, column: 28, scope: !21514)
!21546 = !DILocation(line: 186, column: 37, scope: !21514)
!21547 = !DILocation(line: 186, column: 3, scope: !21514)
!21548 = !DILocation(line: 187, column: 5, scope: !21514)
!21549 = !DILocation(line: 187, column: 3, scope: !21514)
!21550 = !DILocation(line: 189, column: 3, scope: !21514)
!21551 = !DILocation(line: 190, column: 1, scope: !21514)
!21552 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1297, file: !1297, line: 195, type: !1294, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1244, retainedNodes: !140)
!21553 = !DILocalVariable(name: "value", arg: 1, scope: !21552, file: !1297, line: 195, type: !428)
!21554 = !DILocation(line: 195, column: 35, scope: !21552)
!21555 = !DILocalVariable(name: "arglist", arg: 2, scope: !21552, file: !1297, line: 196, type: !1249)
!21556 = !DILocation(line: 196, column: 42, scope: !21552)
!21557 = !DILocalVariable(name: "vallist", arg: 3, scope: !21552, file: !1297, line: 197, type: !428)
!21558 = !DILocation(line: 197, column: 35, scope: !21552)
!21559 = !DILocalVariable(name: "valsize", arg: 4, scope: !21552, file: !1297, line: 197, type: !52)
!21560 = !DILocation(line: 197, column: 51, scope: !21552)
!21561 = !DILocalVariable(name: "i", scope: !21552, file: !1297, line: 199, type: !52)
!21562 = !DILocation(line: 199, column: 10, scope: !21552)
!21563 = !DILocation(line: 201, column: 10, scope: !21564)
!21564 = distinct !DILexicalBlock(scope: !21552, file: !1297, line: 201, column: 3)
!21565 = !DILocation(line: 201, column: 8, scope: !21564)
!21566 = !DILocation(line: 201, column: 15, scope: !21567)
!21567 = distinct !DILexicalBlock(scope: !21564, file: !1297, line: 201, column: 3)
!21568 = !DILocation(line: 201, column: 23, scope: !21567)
!21569 = !DILocation(line: 201, column: 3, scope: !21564)
!21570 = !DILocation(line: 202, column: 18, scope: !21571)
!21571 = distinct !DILexicalBlock(scope: !21567, file: !1297, line: 202, column: 9)
!21572 = !DILocation(line: 202, column: 40, scope: !21571)
!21573 = !DILocation(line: 202, column: 50, scope: !21571)
!21574 = !DILocation(line: 202, column: 60, scope: !21571)
!21575 = !DILocation(line: 202, column: 58, scope: !21571)
!21576 = !DILocation(line: 202, column: 48, scope: !21571)
!21577 = !DILocation(line: 202, column: 63, scope: !21571)
!21578 = !DILocation(line: 202, column: 10, scope: !21571)
!21579 = !DILocation(line: 202, column: 9, scope: !21567)
!21580 = !DILocation(line: 203, column: 14, scope: !21571)
!21581 = !DILocation(line: 203, column: 22, scope: !21571)
!21582 = !DILocation(line: 203, column: 7, scope: !21571)
!21583 = !DILocation(line: 202, column: 70, scope: !21571)
!21584 = !DILocation(line: 201, column: 28, scope: !21567)
!21585 = !DILocation(line: 201, column: 3, scope: !21567)
!21586 = distinct !{!21586, !21569, !21587}
!21587 = !DILocation(line: 203, column: 23, scope: !21564)
!21588 = !DILocation(line: 204, column: 3, scope: !21552)
!21589 = !DILocation(line: 205, column: 1, scope: !21552)
!21590 = distinct !DISubprogram(name: "rotl64", scope: !21591, file: !21591, line: 39, type: !2544, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21591 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mohamad/clone/coreutils")
!21592 = !DILocalVariable(name: "x", arg: 1, scope: !21590, file: !21591, line: 39, type: !1552)
!21593 = !DILocation(line: 39, column: 18, scope: !21590)
!21594 = !DILocalVariable(name: "n", arg: 2, scope: !21590, file: !21591, line: 39, type: !5)
!21595 = !DILocation(line: 39, column: 25, scope: !21590)
!21596 = !DILocation(line: 41, column: 12, scope: !21590)
!21597 = !DILocation(line: 41, column: 17, scope: !21590)
!21598 = !DILocation(line: 41, column: 14, scope: !21590)
!21599 = !DILocation(line: 41, column: 23, scope: !21590)
!21600 = !DILocation(line: 41, column: 34, scope: !21590)
!21601 = !DILocation(line: 41, column: 32, scope: !21590)
!21602 = !DILocation(line: 41, column: 25, scope: !21590)
!21603 = !DILocation(line: 41, column: 20, scope: !21590)
!21604 = !DILocation(line: 41, column: 3, scope: !21590)
!21605 = distinct !DISubprogram(name: "rotr64", scope: !21591, file: !21591, line: 48, type: !2544, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21606 = !DILocalVariable(name: "x", arg: 1, scope: !21605, file: !21591, line: 48, type: !1552)
!21607 = !DILocation(line: 48, column: 18, scope: !21605)
!21608 = !DILocalVariable(name: "n", arg: 2, scope: !21605, file: !21591, line: 48, type: !5)
!21609 = !DILocation(line: 48, column: 25, scope: !21605)
!21610 = !DILocation(line: 50, column: 12, scope: !21605)
!21611 = !DILocation(line: 50, column: 17, scope: !21605)
!21612 = !DILocation(line: 50, column: 14, scope: !21605)
!21613 = !DILocation(line: 50, column: 23, scope: !21605)
!21614 = !DILocation(line: 50, column: 34, scope: !21605)
!21615 = !DILocation(line: 50, column: 32, scope: !21605)
!21616 = !DILocation(line: 50, column: 25, scope: !21605)
!21617 = !DILocation(line: 50, column: 20, scope: !21605)
!21618 = !DILocation(line: 50, column: 3, scope: !21605)
!21619 = distinct !DISubprogram(name: "rotl32", scope: !21591, file: !21591, line: 58, type: !2546, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21620 = !DILocalVariable(name: "x", arg: 1, scope: !21619, file: !21591, line: 58, type: !1555)
!21621 = !DILocation(line: 58, column: 18, scope: !21619)
!21622 = !DILocalVariable(name: "n", arg: 2, scope: !21619, file: !21591, line: 58, type: !5)
!21623 = !DILocation(line: 58, column: 25, scope: !21619)
!21624 = !DILocation(line: 60, column: 12, scope: !21619)
!21625 = !DILocation(line: 60, column: 17, scope: !21619)
!21626 = !DILocation(line: 60, column: 14, scope: !21619)
!21627 = !DILocation(line: 60, column: 23, scope: !21619)
!21628 = !DILocation(line: 60, column: 34, scope: !21619)
!21629 = !DILocation(line: 60, column: 32, scope: !21619)
!21630 = !DILocation(line: 60, column: 25, scope: !21619)
!21631 = !DILocation(line: 60, column: 20, scope: !21619)
!21632 = !DILocation(line: 60, column: 3, scope: !21619)
!21633 = distinct !DISubprogram(name: "rotr32", scope: !21591, file: !21591, line: 67, type: !2546, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21634 = !DILocalVariable(name: "x", arg: 1, scope: !21633, file: !21591, line: 67, type: !1555)
!21635 = !DILocation(line: 67, column: 18, scope: !21633)
!21636 = !DILocalVariable(name: "n", arg: 2, scope: !21633, file: !21591, line: 67, type: !5)
!21637 = !DILocation(line: 67, column: 25, scope: !21633)
!21638 = !DILocation(line: 69, column: 12, scope: !21633)
!21639 = !DILocation(line: 69, column: 17, scope: !21633)
!21640 = !DILocation(line: 69, column: 14, scope: !21633)
!21641 = !DILocation(line: 69, column: 23, scope: !21633)
!21642 = !DILocation(line: 69, column: 34, scope: !21633)
!21643 = !DILocation(line: 69, column: 32, scope: !21633)
!21644 = !DILocation(line: 69, column: 25, scope: !21633)
!21645 = !DILocation(line: 69, column: 20, scope: !21633)
!21646 = !DILocation(line: 69, column: 3, scope: !21633)
!21647 = distinct !DISubprogram(name: "rotl_sz", scope: !21591, file: !21591, line: 76, type: !2548, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21648 = !DILocalVariable(name: "x", arg: 1, scope: !21647, file: !21591, line: 76, type: !52)
!21649 = !DILocation(line: 76, column: 17, scope: !21647)
!21650 = !DILocalVariable(name: "n", arg: 2, scope: !21647, file: !21591, line: 76, type: !5)
!21651 = !DILocation(line: 76, column: 24, scope: !21647)
!21652 = !DILocation(line: 78, column: 12, scope: !21647)
!21653 = !DILocation(line: 78, column: 17, scope: !21647)
!21654 = !DILocation(line: 78, column: 14, scope: !21647)
!21655 = !DILocation(line: 78, column: 23, scope: !21647)
!21656 = !DILocation(line: 78, column: 53, scope: !21647)
!21657 = !DILocation(line: 78, column: 51, scope: !21647)
!21658 = !DILocation(line: 78, column: 25, scope: !21647)
!21659 = !DILocation(line: 78, column: 20, scope: !21647)
!21660 = !DILocation(line: 78, column: 3, scope: !21647)
!21661 = distinct !DISubprogram(name: "rotr_sz", scope: !21591, file: !21591, line: 85, type: !2548, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21662 = !DILocalVariable(name: "x", arg: 1, scope: !21661, file: !21591, line: 85, type: !52)
!21663 = !DILocation(line: 85, column: 17, scope: !21661)
!21664 = !DILocalVariable(name: "n", arg: 2, scope: !21661, file: !21591, line: 85, type: !5)
!21665 = !DILocation(line: 85, column: 24, scope: !21661)
!21666 = !DILocation(line: 87, column: 12, scope: !21661)
!21667 = !DILocation(line: 87, column: 17, scope: !21661)
!21668 = !DILocation(line: 87, column: 14, scope: !21661)
!21669 = !DILocation(line: 87, column: 23, scope: !21661)
!21670 = !DILocation(line: 87, column: 53, scope: !21661)
!21671 = !DILocation(line: 87, column: 51, scope: !21661)
!21672 = !DILocation(line: 87, column: 25, scope: !21661)
!21673 = !DILocation(line: 87, column: 20, scope: !21661)
!21674 = !DILocation(line: 87, column: 3, scope: !21661)
!21675 = distinct !DISubprogram(name: "rotl16", scope: !21591, file: !21591, line: 96, type: !2550, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21676 = !DILocalVariable(name: "x", arg: 1, scope: !21675, file: !21591, line: 96, type: !2552)
!21677 = !DILocation(line: 96, column: 18, scope: !21675)
!21678 = !DILocalVariable(name: "n", arg: 2, scope: !21675, file: !21591, line: 96, type: !5)
!21679 = !DILocation(line: 96, column: 25, scope: !21675)
!21680 = !DILocation(line: 98, column: 27, scope: !21675)
!21681 = !DILocation(line: 98, column: 12, scope: !21675)
!21682 = !DILocation(line: 98, column: 32, scope: !21675)
!21683 = !DILocation(line: 98, column: 29, scope: !21675)
!21684 = !DILocation(line: 98, column: 53, scope: !21675)
!21685 = !DILocation(line: 98, column: 38, scope: !21675)
!21686 = !DILocation(line: 98, column: 64, scope: !21675)
!21687 = !DILocation(line: 98, column: 62, scope: !21675)
!21688 = !DILocation(line: 98, column: 55, scope: !21675)
!21689 = !DILocation(line: 98, column: 35, scope: !21675)
!21690 = !DILocation(line: 99, column: 10, scope: !21675)
!21691 = !DILocation(line: 98, column: 10, scope: !21675)
!21692 = !DILocation(line: 98, column: 3, scope: !21675)
!21693 = distinct !DISubprogram(name: "rotr16", scope: !21591, file: !21591, line: 108, type: !2550, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21694 = !DILocalVariable(name: "x", arg: 1, scope: !21693, file: !21591, line: 108, type: !2552)
!21695 = !DILocation(line: 108, column: 18, scope: !21693)
!21696 = !DILocalVariable(name: "n", arg: 2, scope: !21693, file: !21591, line: 108, type: !5)
!21697 = !DILocation(line: 108, column: 25, scope: !21693)
!21698 = !DILocation(line: 110, column: 27, scope: !21693)
!21699 = !DILocation(line: 110, column: 12, scope: !21693)
!21700 = !DILocation(line: 110, column: 32, scope: !21693)
!21701 = !DILocation(line: 110, column: 29, scope: !21693)
!21702 = !DILocation(line: 110, column: 53, scope: !21693)
!21703 = !DILocation(line: 110, column: 38, scope: !21693)
!21704 = !DILocation(line: 110, column: 64, scope: !21693)
!21705 = !DILocation(line: 110, column: 62, scope: !21693)
!21706 = !DILocation(line: 110, column: 55, scope: !21693)
!21707 = !DILocation(line: 110, column: 35, scope: !21693)
!21708 = !DILocation(line: 111, column: 10, scope: !21693)
!21709 = !DILocation(line: 110, column: 10, scope: !21693)
!21710 = !DILocation(line: 110, column: 3, scope: !21693)
!21711 = distinct !DISubprogram(name: "rotl8", scope: !21591, file: !21591, line: 120, type: !2553, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21712 = !DILocalVariable(name: "x", arg: 1, scope: !21711, file: !21591, line: 120, type: !2555)
!21713 = !DILocation(line: 120, column: 16, scope: !21711)
!21714 = !DILocalVariable(name: "n", arg: 2, scope: !21711, file: !21591, line: 120, type: !5)
!21715 = !DILocation(line: 120, column: 23, scope: !21711)
!21716 = !DILocation(line: 122, column: 27, scope: !21711)
!21717 = !DILocation(line: 122, column: 12, scope: !21711)
!21718 = !DILocation(line: 122, column: 32, scope: !21711)
!21719 = !DILocation(line: 122, column: 29, scope: !21711)
!21720 = !DILocation(line: 122, column: 53, scope: !21711)
!21721 = !DILocation(line: 122, column: 38, scope: !21711)
!21722 = !DILocation(line: 122, column: 63, scope: !21711)
!21723 = !DILocation(line: 122, column: 61, scope: !21711)
!21724 = !DILocation(line: 122, column: 55, scope: !21711)
!21725 = !DILocation(line: 122, column: 35, scope: !21711)
!21726 = !DILocation(line: 122, column: 68, scope: !21711)
!21727 = !DILocation(line: 122, column: 10, scope: !21711)
!21728 = !DILocation(line: 122, column: 3, scope: !21711)
!21729 = distinct !DISubprogram(name: "rotr8", scope: !21591, file: !21591, line: 131, type: !2553, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2541, retainedNodes: !140)
!21730 = !DILocalVariable(name: "x", arg: 1, scope: !21729, file: !21591, line: 131, type: !2555)
!21731 = !DILocation(line: 131, column: 16, scope: !21729)
!21732 = !DILocalVariable(name: "n", arg: 2, scope: !21729, file: !21591, line: 131, type: !5)
!21733 = !DILocation(line: 131, column: 23, scope: !21729)
!21734 = !DILocation(line: 133, column: 27, scope: !21729)
!21735 = !DILocation(line: 133, column: 12, scope: !21729)
!21736 = !DILocation(line: 133, column: 32, scope: !21729)
!21737 = !DILocation(line: 133, column: 29, scope: !21729)
!21738 = !DILocation(line: 133, column: 53, scope: !21729)
!21739 = !DILocation(line: 133, column: 38, scope: !21729)
!21740 = !DILocation(line: 133, column: 63, scope: !21729)
!21741 = !DILocation(line: 133, column: 61, scope: !21729)
!21742 = !DILocation(line: 133, column: 55, scope: !21729)
!21743 = !DILocation(line: 133, column: 35, scope: !21729)
!21744 = !DILocation(line: 133, column: 68, scope: !21729)
!21745 = !DILocation(line: 133, column: 10, scope: !21729)
!21746 = !DILocation(line: 133, column: 3, scope: !21729)
!21747 = distinct !DISubprogram(name: "c_strcasecmp", scope: !21748, file: !21748, line: 27, type: !1877, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2556, retainedNodes: !140)
!21748 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!21749 = !DILocalVariable(name: "s1", arg: 1, scope: !21747, file: !21748, line: 27, type: !112)
!21750 = !DILocation(line: 27, column: 27, scope: !21747)
!21751 = !DILocalVariable(name: "s2", arg: 2, scope: !21747, file: !21748, line: 27, type: !112)
!21752 = !DILocation(line: 27, column: 43, scope: !21747)
!21753 = !DILocalVariable(name: "p1", scope: !21747, file: !21748, line: 29, type: !466)
!21754 = !DILocation(line: 29, column: 33, scope: !21747)
!21755 = !DILocation(line: 29, column: 62, scope: !21747)
!21756 = !DILocalVariable(name: "p2", scope: !21747, file: !21748, line: 30, type: !466)
!21757 = !DILocation(line: 30, column: 33, scope: !21747)
!21758 = !DILocation(line: 30, column: 62, scope: !21747)
!21759 = !DILocalVariable(name: "c1", scope: !21747, file: !21748, line: 31, type: !468)
!21760 = !DILocation(line: 31, column: 17, scope: !21747)
!21761 = !DILocalVariable(name: "c2", scope: !21747, file: !21748, line: 31, type: !468)
!21762 = !DILocation(line: 31, column: 21, scope: !21747)
!21763 = !DILocation(line: 33, column: 7, scope: !21764)
!21764 = distinct !DILexicalBlock(scope: !21747, file: !21748, line: 33, column: 7)
!21765 = !DILocation(line: 33, column: 13, scope: !21764)
!21766 = !DILocation(line: 33, column: 10, scope: !21764)
!21767 = !DILocation(line: 33, column: 7, scope: !21747)
!21768 = !DILocation(line: 34, column: 5, scope: !21764)
!21769 = !DILocation(line: 36, column: 3, scope: !21747)
!21770 = !DILocation(line: 38, column: 24, scope: !21771)
!21771 = distinct !DILexicalBlock(scope: !21747, file: !21748, line: 37, column: 5)
!21772 = !DILocation(line: 38, column: 23, scope: !21771)
!21773 = !DILocation(line: 38, column: 12, scope: !21771)
!21774 = !DILocation(line: 38, column: 10, scope: !21771)
!21775 = !DILocation(line: 39, column: 24, scope: !21771)
!21776 = !DILocation(line: 39, column: 23, scope: !21771)
!21777 = !DILocation(line: 39, column: 12, scope: !21771)
!21778 = !DILocation(line: 39, column: 10, scope: !21771)
!21779 = !DILocation(line: 41, column: 11, scope: !21780)
!21780 = distinct !DILexicalBlock(scope: !21771, file: !21748, line: 41, column: 11)
!21781 = !DILocation(line: 41, column: 14, scope: !21780)
!21782 = !DILocation(line: 41, column: 11, scope: !21771)
!21783 = !DILocation(line: 42, column: 9, scope: !21780)
!21784 = !DILocation(line: 44, column: 7, scope: !21771)
!21785 = !DILocation(line: 45, column: 7, scope: !21771)
!21786 = !DILocation(line: 46, column: 5, scope: !21771)
!21787 = !DILocation(line: 47, column: 10, scope: !21747)
!21788 = !DILocation(line: 47, column: 16, scope: !21747)
!21789 = !DILocation(line: 47, column: 13, scope: !21747)
!21790 = distinct !{!21790, !21769, !21791}
!21791 = !DILocation(line: 47, column: 18, scope: !21747)
!21792 = !DILocation(line: 50, column: 12, scope: !21793)
!21793 = distinct !DILexicalBlock(scope: !21747, file: !21748, line: 49, column: 7)
!21794 = !DILocation(line: 50, column: 17, scope: !21793)
!21795 = !DILocation(line: 50, column: 15, scope: !21793)
!21796 = !DILocation(line: 50, column: 5, scope: !21793)
!21797 = !DILocation(line: 56, column: 1, scope: !21747)
!21798 = distinct !DISubprogram(name: "close_stream", scope: !21799, file: !21799, line: 56, type: !2562, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2559, retainedNodes: !140)
!21799 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!21800 = !DILocalVariable(name: "stream", arg: 1, scope: !21798, file: !21799, line: 56, type: !2564)
!21801 = !DILocation(line: 56, column: 21, scope: !21798)
!21802 = !DILocalVariable(name: "some_pending", scope: !21798, file: !21799, line: 58, type: !2604)
!21803 = !DILocation(line: 58, column: 14, scope: !21798)
!21804 = !DILocation(line: 58, column: 42, scope: !21798)
!21805 = !DILocation(line: 58, column: 30, scope: !21798)
!21806 = !DILocation(line: 58, column: 50, scope: !21798)
!21807 = !DILocalVariable(name: "prev_fail", scope: !21798, file: !21799, line: 59, type: !2604)
!21808 = !DILocation(line: 59, column: 14, scope: !21798)
!21809 = !DILocation(line: 59, column: 27, scope: !21798)
!21810 = !DILocation(line: 59, column: 43, scope: !21798)
!21811 = !DILocalVariable(name: "fclose_fail", scope: !21798, file: !21799, line: 60, type: !2604)
!21812 = !DILocation(line: 60, column: 14, scope: !21798)
!21813 = !DILocation(line: 60, column: 37, scope: !21798)
!21814 = !DILocation(line: 60, column: 29, scope: !21798)
!21815 = !DILocation(line: 60, column: 45, scope: !21798)
!21816 = !DILocation(line: 70, column: 7, scope: !21817)
!21817 = distinct !DILexicalBlock(scope: !21798, file: !21799, line: 70, column: 7)
!21818 = !DILocation(line: 70, column: 17, scope: !21817)
!21819 = !DILocation(line: 70, column: 21, scope: !21817)
!21820 = !DILocation(line: 70, column: 33, scope: !21817)
!21821 = !DILocation(line: 70, column: 37, scope: !21817)
!21822 = !DILocation(line: 70, column: 50, scope: !21817)
!21823 = !DILocation(line: 70, column: 53, scope: !21817)
!21824 = !DILocation(line: 70, column: 59, scope: !21817)
!21825 = !DILocation(line: 70, column: 7, scope: !21798)
!21826 = !DILocation(line: 72, column: 13, scope: !21827)
!21827 = distinct !DILexicalBlock(scope: !21828, file: !21799, line: 72, column: 11)
!21828 = distinct !DILexicalBlock(scope: !21817, file: !21799, line: 71, column: 5)
!21829 = !DILocation(line: 72, column: 11, scope: !21828)
!21830 = !DILocation(line: 73, column: 9, scope: !21827)
!21831 = !DILocation(line: 73, column: 15, scope: !21827)
!21832 = !DILocation(line: 74, column: 7, scope: !21828)
!21833 = !DILocation(line: 77, column: 3, scope: !21798)
!21834 = !DILocation(line: 78, column: 1, scope: !21798)
!21835 = distinct !DISubprogram(name: "cycle_check_init", scope: !21836, file: !21836, line: 43, type: !2608, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2605, retainedNodes: !140)
!21836 = !DIFile(filename: "lib/cycle-check.c", directory: "/home/mohamad/clone/coreutils")
!21837 = !DILocalVariable(name: "state", arg: 1, scope: !21835, file: !21836, line: 43, type: !2610)
!21838 = !DILocation(line: 43, column: 45, scope: !21835)
!21839 = !DILocation(line: 45, column: 3, scope: !21835)
!21840 = !DILocation(line: 45, column: 10, scope: !21835)
!21841 = !DILocation(line: 45, column: 24, scope: !21835)
!21842 = !DILocation(line: 46, column: 3, scope: !21835)
!21843 = !DILocation(line: 46, column: 10, scope: !21835)
!21844 = !DILocation(line: 46, column: 16, scope: !21835)
!21845 = !{!19761, !2981, i64 24}
!21846 = !DILocation(line: 47, column: 1, scope: !21835)
!21847 = distinct !DISubprogram(name: "cycle_check", scope: !21836, file: !21836, line: 58, type: !2620, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2605, retainedNodes: !140)
!21848 = !DILocalVariable(name: "state", arg: 1, scope: !21847, file: !21836, line: 58, type: !2610)
!21849 = !DILocation(line: 58, column: 40, scope: !21847)
!21850 = !DILocalVariable(name: "sb", arg: 2, scope: !21847, file: !21836, line: 58, type: !2622)
!21851 = !DILocation(line: 58, column: 66, scope: !21847)
!21852 = !DILocation(line: 60, column: 3, scope: !21847)
!21853 = !DILocation(line: 65, column: 7, scope: !21854)
!21854 = distinct !DILexicalBlock(scope: !21847, file: !21836, line: 65, column: 7)
!21855 = !DILocation(line: 65, column: 14, scope: !21854)
!21856 = !DILocation(line: 65, column: 28, scope: !21854)
!21857 = !DILocation(line: 65, column: 31, scope: !21854)
!21858 = !DILocation(line: 65, column: 7, scope: !21847)
!21859 = !DILocation(line: 66, column: 5, scope: !21854)
!21860 = !DILocation(line: 70, column: 35, scope: !21861)
!21861 = distinct !DILexicalBlock(scope: !21847, file: !21836, line: 70, column: 7)
!21862 = !DILocation(line: 70, column: 42, scope: !21861)
!21863 = !DILocation(line: 70, column: 32, scope: !21861)
!21864 = !DILocation(line: 70, column: 7, scope: !21861)
!21865 = !DILocation(line: 70, column: 7, scope: !21847)
!21866 = !DILocation(line: 77, column: 11, scope: !21867)
!21867 = distinct !DILexicalBlock(scope: !21868, file: !21836, line: 77, column: 11)
!21868 = distinct !DILexicalBlock(scope: !21861, file: !21836, line: 71, column: 5)
!21869 = !DILocation(line: 77, column: 18, scope: !21867)
!21870 = !DILocation(line: 77, column: 32, scope: !21867)
!21871 = !DILocation(line: 77, column: 11, scope: !21868)
!21872 = !DILocation(line: 78, column: 9, scope: !21867)
!21873 = !DILocation(line: 80, column: 31, scope: !21868)
!21874 = !DILocation(line: 80, column: 35, scope: !21868)
!21875 = !DILocation(line: 80, column: 7, scope: !21868)
!21876 = !DILocation(line: 80, column: 14, scope: !21868)
!21877 = !DILocation(line: 80, column: 22, scope: !21868)
!21878 = !DILocation(line: 80, column: 29, scope: !21868)
!21879 = !DILocation(line: 81, column: 31, scope: !21868)
!21880 = !DILocation(line: 81, column: 35, scope: !21868)
!21881 = !DILocation(line: 81, column: 7, scope: !21868)
!21882 = !DILocation(line: 81, column: 14, scope: !21868)
!21883 = !DILocation(line: 81, column: 22, scope: !21868)
!21884 = !DILocation(line: 81, column: 29, scope: !21868)
!21885 = !DILocation(line: 82, column: 5, scope: !21868)
!21886 = !DILocation(line: 84, column: 3, scope: !21847)
!21887 = !DILocation(line: 85, column: 1, scope: !21847)
!21888 = distinct !DISubprogram(name: "is_zero_or_power_of_two", scope: !21836, file: !21836, line: 37, type: !2645, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2605, retainedNodes: !140)
!21889 = !DILocalVariable(name: "i", arg: 1, scope: !21888, file: !21836, line: 37, type: !459)
!21890 = !DILocation(line: 37, column: 36, scope: !21888)
!21891 = !DILocation(line: 39, column: 11, scope: !21888)
!21892 = !DILocation(line: 39, column: 16, scope: !21888)
!21893 = !DILocation(line: 39, column: 18, scope: !21888)
!21894 = !DILocation(line: 39, column: 13, scope: !21888)
!21895 = !DILocation(line: 39, column: 24, scope: !21888)
!21896 = !DILocation(line: 39, column: 3, scope: !21888)
!21897 = distinct !DISubprogram(name: "opendir_safer", scope: !21898, file: !21898, line: 31, type: !2650, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2647, retainedNodes: !140)
!21898 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!21899 = !DILocalVariable(name: "name", arg: 1, scope: !21897, file: !21898, line: 31, type: !112)
!21900 = !DILocation(line: 31, column: 28, scope: !21897)
!21901 = !DILocalVariable(name: "dp", scope: !21897, file: !21898, line: 33, type: !580)
!21902 = !DILocation(line: 33, column: 8, scope: !21897)
!21903 = !DILocation(line: 33, column: 22, scope: !21897)
!21904 = !DILocation(line: 33, column: 13, scope: !21897)
!21905 = !DILocation(line: 35, column: 7, scope: !21906)
!21906 = distinct !DILexicalBlock(scope: !21897, file: !21898, line: 35, column: 7)
!21907 = !DILocation(line: 35, column: 7, scope: !21897)
!21908 = !DILocalVariable(name: "fd", scope: !21909, file: !21898, line: 37, type: !5)
!21909 = distinct !DILexicalBlock(scope: !21906, file: !21898, line: 36, column: 5)
!21910 = !DILocation(line: 37, column: 11, scope: !21909)
!21911 = !DILocation(line: 37, column: 23, scope: !21909)
!21912 = !DILocation(line: 37, column: 16, scope: !21909)
!21913 = !DILocation(line: 39, column: 16, scope: !21914)
!21914 = distinct !DILexicalBlock(scope: !21909, file: !21898, line: 39, column: 11)
!21915 = !DILocation(line: 39, column: 13, scope: !21914)
!21916 = !DILocation(line: 39, column: 19, scope: !21914)
!21917 = !DILocation(line: 39, column: 22, scope: !21914)
!21918 = !DILocation(line: 39, column: 25, scope: !21914)
!21919 = !DILocation(line: 39, column: 11, scope: !21909)
!21920 = !DILocalVariable(name: "newdp", scope: !21921, file: !21898, line: 49, type: !580)
!21921 = distinct !DILexicalBlock(scope: !21914, file: !21898, line: 40, column: 9)
!21922 = !DILocation(line: 49, column: 16, scope: !21921)
!21923 = !DILocalVariable(name: "e", scope: !21921, file: !21898, line: 50, type: !5)
!21924 = !DILocation(line: 50, column: 15, scope: !21921)
!21925 = !DILocalVariable(name: "f", scope: !21921, file: !21898, line: 52, type: !5)
!21926 = !DILocation(line: 52, column: 15, scope: !21921)
!21927 = !DILocation(line: 52, column: 26, scope: !21921)
!21928 = !DILocation(line: 52, column: 19, scope: !21921)
!21929 = !DILocation(line: 53, column: 15, scope: !21930)
!21930 = distinct !DILexicalBlock(scope: !21921, file: !21898, line: 53, column: 15)
!21931 = !DILocation(line: 53, column: 17, scope: !21930)
!21932 = !DILocation(line: 53, column: 15, scope: !21921)
!21933 = !DILocation(line: 55, column: 19, scope: !21934)
!21934 = distinct !DILexicalBlock(scope: !21930, file: !21898, line: 54, column: 13)
!21935 = !DILocation(line: 55, column: 17, scope: !21934)
!21936 = !DILocation(line: 56, column: 21, scope: !21934)
!21937 = !DILocation(line: 57, column: 13, scope: !21934)
!21938 = !DILocation(line: 60, column: 34, scope: !21939)
!21939 = distinct !DILexicalBlock(scope: !21930, file: !21898, line: 59, column: 13)
!21940 = !DILocation(line: 60, column: 23, scope: !21939)
!21941 = !DILocation(line: 60, column: 21, scope: !21939)
!21942 = !DILocation(line: 61, column: 19, scope: !21939)
!21943 = !DILocation(line: 61, column: 17, scope: !21939)
!21944 = !DILocation(line: 62, column: 21, scope: !21945)
!21945 = distinct !DILexicalBlock(scope: !21939, file: !21898, line: 62, column: 19)
!21946 = !DILocation(line: 62, column: 19, scope: !21939)
!21947 = !DILocation(line: 63, column: 24, scope: !21945)
!21948 = !DILocation(line: 63, column: 17, scope: !21945)
!21949 = !DILocation(line: 69, column: 21, scope: !21921)
!21950 = !DILocation(line: 69, column: 11, scope: !21921)
!21951 = !DILocation(line: 70, column: 19, scope: !21921)
!21952 = !DILocation(line: 70, column: 11, scope: !21921)
!21953 = !DILocation(line: 70, column: 17, scope: !21921)
!21954 = !DILocation(line: 71, column: 16, scope: !21921)
!21955 = !DILocation(line: 71, column: 14, scope: !21921)
!21956 = !DILocation(line: 72, column: 9, scope: !21921)
!21957 = !DILocation(line: 73, column: 5, scope: !21909)
!21958 = !DILocation(line: 75, column: 10, scope: !21897)
!21959 = !DILocation(line: 75, column: 3, scope: !21897)
!21960 = distinct !DISubprogram(name: "gettime", scope: !21961, file: !21961, line: 29, type: !2655, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2652, retainedNodes: !140)
!21961 = !DIFile(filename: "lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!21962 = !DILocalVariable(name: "ts", arg: 1, scope: !21960, file: !21961, line: 29, type: !2657)
!21963 = !DILocation(line: 29, column: 27, scope: !21960)
!21964 = !DILocation(line: 32, column: 34, scope: !21960)
!21965 = !DILocation(line: 32, column: 3, scope: !21960)
!21966 = !DILocation(line: 39, column: 1, scope: !21960)
!21967 = distinct !DISubprogram(name: "current_timespec", scope: !21961, file: !21961, line: 44, type: !2662, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2652, retainedNodes: !140)
!21968 = !DILocalVariable(name: "ts", scope: !21967, file: !21961, line: 46, type: !2658)
!21969 = !DILocation(line: 46, column: 19, scope: !21967)
!21970 = !DILocation(line: 47, column: 3, scope: !21967)
!21971 = !DILocation(line: 48, column: 3, scope: !21967)
!21972 = distinct !DISubprogram(name: "hard_locale", scope: !21973, file: !21973, line: 38, type: !304, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2664, retainedNodes: !140)
!21973 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!21974 = !DILocalVariable(name: "category", arg: 1, scope: !21972, file: !21973, line: 38, type: !5)
!21975 = !DILocation(line: 38, column: 18, scope: !21972)
!21976 = !DILocalVariable(name: "hard", scope: !21972, file: !21973, line: 40, type: !117)
!21977 = !DILocation(line: 40, column: 8, scope: !21972)
!21978 = !DILocalVariable(name: "p", scope: !21972, file: !21973, line: 41, type: !112)
!21979 = !DILocation(line: 41, column: 15, scope: !21972)
!21980 = !DILocation(line: 41, column: 30, scope: !21972)
!21981 = !DILocation(line: 41, column: 19, scope: !21972)
!21982 = !DILocation(line: 43, column: 7, scope: !21983)
!21983 = distinct !DILexicalBlock(scope: !21972, file: !21973, line: 43, column: 7)
!21984 = !DILocation(line: 43, column: 7, scope: !21972)
!21985 = !DILocation(line: 47, column: 23, scope: !21986)
!21986 = distinct !DILexicalBlock(scope: !21987, file: !21973, line: 47, column: 15)
!21987 = distinct !DILexicalBlock(scope: !21988, file: !21973, line: 46, column: 9)
!21988 = distinct !DILexicalBlock(scope: !21989, file: !21973, line: 45, column: 11)
!21989 = distinct !DILexicalBlock(scope: !21983, file: !21973, line: 44, column: 5)
!21990 = !DILocation(line: 47, column: 15, scope: !21986)
!21991 = !DILocation(line: 47, column: 31, scope: !21986)
!21992 = !DILocation(line: 47, column: 36, scope: !21986)
!21993 = !DILocation(line: 47, column: 47, scope: !21986)
!21994 = !DILocation(line: 47, column: 39, scope: !21986)
!21995 = !DILocation(line: 47, column: 59, scope: !21986)
!21996 = !DILocation(line: 47, column: 15, scope: !21987)
!21997 = !DILocation(line: 48, column: 18, scope: !21986)
!21998 = !DILocation(line: 48, column: 13, scope: !21986)
!21999 = !DILocation(line: 69, column: 5, scope: !21989)
!22000 = !DILocation(line: 71, column: 10, scope: !21972)
!22001 = !DILocation(line: 71, column: 3, scope: !21972)
!22002 = distinct !DISubprogram(name: "hash_pjw", scope: !22003, file: !22003, line: 31, type: !520, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2667, retainedNodes: !140)
!22003 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!22004 = !DILocalVariable(name: "x", arg: 1, scope: !22002, file: !22003, line: 31, type: !428)
!22005 = !DILocation(line: 31, column: 23, scope: !22002)
!22006 = !DILocalVariable(name: "tablesize", arg: 2, scope: !22002, file: !22003, line: 31, type: !52)
!22007 = !DILocation(line: 31, column: 33, scope: !22002)
!22008 = !DILocalVariable(name: "s", scope: !22002, file: !22003, line: 33, type: !112)
!22009 = !DILocation(line: 33, column: 15, scope: !22002)
!22010 = !DILocalVariable(name: "h", scope: !22002, file: !22003, line: 34, type: !52)
!22011 = !DILocation(line: 34, column: 10, scope: !22002)
!22012 = !DILocation(line: 36, column: 12, scope: !22013)
!22013 = distinct !DILexicalBlock(scope: !22002, file: !22003, line: 36, column: 3)
!22014 = !DILocation(line: 36, column: 10, scope: !22013)
!22015 = !DILocation(line: 36, column: 8, scope: !22013)
!22016 = !DILocation(line: 36, column: 16, scope: !22017)
!22017 = distinct !DILexicalBlock(scope: !22013, file: !22003, line: 36, column: 3)
!22018 = !DILocation(line: 36, column: 15, scope: !22017)
!22019 = !DILocation(line: 36, column: 3, scope: !22013)
!22020 = !DILocation(line: 37, column: 10, scope: !22017)
!22021 = !DILocation(line: 37, column: 9, scope: !22017)
!22022 = !DILocation(line: 37, column: 16, scope: !22017)
!22023 = !DILocation(line: 37, column: 18, scope: !22017)
!22024 = !DILocation(line: 37, column: 27, scope: !22017)
!22025 = !DILocation(line: 37, column: 29, scope: !22017)
!22026 = !DILocation(line: 37, column: 24, scope: !22017)
!22027 = !DILocation(line: 37, column: 12, scope: !22017)
!22028 = !DILocation(line: 37, column: 7, scope: !22017)
!22029 = !DILocation(line: 37, column: 5, scope: !22017)
!22030 = !DILocation(line: 36, column: 20, scope: !22017)
!22031 = !DILocation(line: 36, column: 3, scope: !22017)
!22032 = distinct !{!22032, !22019, !22033}
!22033 = !DILocation(line: 37, column: 48, scope: !22013)
!22034 = !DILocation(line: 39, column: 10, scope: !22002)
!22035 = !DILocation(line: 39, column: 14, scope: !22002)
!22036 = !DILocation(line: 39, column: 12, scope: !22002)
!22037 = !DILocation(line: 39, column: 3, scope: !22002)
!22038 = distinct !DISubprogram(name: "i_ring_init", scope: !22039, file: !22039, line: 25, type: !2673, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2670, retainedNodes: !140)
!22039 = !DIFile(filename: "lib/i-ring.c", directory: "/home/mohamad/clone/coreutils")
!22040 = !DILocalVariable(name: "ir", arg: 1, scope: !22038, file: !22039, line: 25, type: !2675)
!22041 = !DILocation(line: 25, column: 22, scope: !22038)
!22042 = !DILocalVariable(name: "default_val", arg: 2, scope: !22038, file: !22039, line: 25, type: !5)
!22043 = !DILocation(line: 25, column: 30, scope: !22038)
!22044 = !DILocalVariable(name: "i", scope: !22038, file: !22039, line: 27, type: !5)
!22045 = !DILocation(line: 27, column: 7, scope: !22038)
!22046 = !DILocation(line: 28, column: 3, scope: !22038)
!22047 = !DILocation(line: 28, column: 7, scope: !22038)
!22048 = !DILocation(line: 28, column: 16, scope: !22038)
!22049 = !{!3814, !3105, i64 28}
!22050 = !DILocation(line: 29, column: 3, scope: !22038)
!22051 = !DILocation(line: 29, column: 7, scope: !22038)
!22052 = !DILocation(line: 29, column: 16, scope: !22038)
!22053 = !{!3814, !2981, i64 20}
!22054 = !DILocation(line: 30, column: 3, scope: !22038)
!22055 = !DILocation(line: 30, column: 7, scope: !22038)
!22056 = !DILocation(line: 30, column: 15, scope: !22038)
!22057 = !{!3814, !2981, i64 24}
!22058 = !DILocation(line: 31, column: 10, scope: !22059)
!22059 = distinct !DILexicalBlock(scope: !22038, file: !22039, line: 31, column: 3)
!22060 = !DILocation(line: 31, column: 8, scope: !22059)
!22061 = !DILocation(line: 31, column: 15, scope: !22062)
!22062 = distinct !DILexicalBlock(scope: !22059, file: !22039, line: 31, column: 3)
!22063 = !DILocation(line: 31, column: 17, scope: !22062)
!22064 = !DILocation(line: 31, column: 3, scope: !22059)
!22065 = !DILocation(line: 32, column: 22, scope: !22062)
!22066 = !DILocation(line: 32, column: 5, scope: !22062)
!22067 = !DILocation(line: 32, column: 9, scope: !22062)
!22068 = !DILocation(line: 32, column: 17, scope: !22062)
!22069 = !DILocation(line: 32, column: 20, scope: !22062)
!22070 = !DILocation(line: 31, column: 33, scope: !22062)
!22071 = !DILocation(line: 31, column: 3, scope: !22062)
!22072 = distinct !{!22072, !22064, !22073}
!22073 = !DILocation(line: 32, column: 22, scope: !22059)
!22074 = !DILocation(line: 33, column: 24, scope: !22038)
!22075 = !DILocation(line: 33, column: 3, scope: !22038)
!22076 = !DILocation(line: 33, column: 7, scope: !22038)
!22077 = !DILocation(line: 33, column: 22, scope: !22038)
!22078 = !{!3814, !2981, i64 16}
!22079 = !DILocation(line: 34, column: 1, scope: !22038)
!22080 = distinct !DISubprogram(name: "i_ring_empty", scope: !22039, file: !22039, line: 37, type: !2684, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2670, retainedNodes: !140)
!22081 = !DILocalVariable(name: "ir", arg: 1, scope: !22080, file: !22039, line: 37, type: !2686)
!22082 = !DILocation(line: 37, column: 29, scope: !22080)
!22083 = !DILocation(line: 39, column: 10, scope: !22080)
!22084 = !DILocation(line: 39, column: 14, scope: !22080)
!22085 = !DILocation(line: 39, column: 3, scope: !22080)
!22086 = distinct !DISubprogram(name: "i_ring_push", scope: !22039, file: !22039, line: 43, type: !2688, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2670, retainedNodes: !140)
!22087 = !DILocalVariable(name: "ir", arg: 1, scope: !22086, file: !22039, line: 43, type: !2675)
!22088 = !DILocation(line: 43, column: 22, scope: !22086)
!22089 = !DILocalVariable(name: "val", arg: 2, scope: !22086, file: !22039, line: 43, type: !5)
!22090 = !DILocation(line: 43, column: 30, scope: !22086)
!22091 = !DILocalVariable(name: "dest_idx", scope: !22086, file: !22039, line: 45, type: !67)
!22092 = !DILocation(line: 45, column: 16, scope: !22086)
!22093 = !DILocation(line: 45, column: 28, scope: !22086)
!22094 = !DILocation(line: 45, column: 32, scope: !22086)
!22095 = !DILocation(line: 45, column: 44, scope: !22086)
!22096 = !DILocation(line: 45, column: 48, scope: !22086)
!22097 = !DILocation(line: 45, column: 43, scope: !22086)
!22098 = !DILocation(line: 45, column: 41, scope: !22086)
!22099 = !DILocation(line: 45, column: 58, scope: !22086)
!22100 = !DILocalVariable(name: "old_val", scope: !22086, file: !22039, line: 46, type: !5)
!22101 = !DILocation(line: 46, column: 7, scope: !22086)
!22102 = !DILocation(line: 46, column: 17, scope: !22086)
!22103 = !DILocation(line: 46, column: 21, scope: !22086)
!22104 = !DILocation(line: 46, column: 29, scope: !22086)
!22105 = !DILocation(line: 47, column: 27, scope: !22086)
!22106 = !DILocation(line: 47, column: 3, scope: !22086)
!22107 = !DILocation(line: 47, column: 7, scope: !22086)
!22108 = !DILocation(line: 47, column: 15, scope: !22086)
!22109 = !DILocation(line: 47, column: 25, scope: !22086)
!22110 = !DILocation(line: 48, column: 18, scope: !22086)
!22111 = !DILocation(line: 48, column: 3, scope: !22086)
!22112 = !DILocation(line: 48, column: 7, scope: !22086)
!22113 = !DILocation(line: 48, column: 16, scope: !22086)
!22114 = !DILocation(line: 49, column: 7, scope: !22115)
!22115 = distinct !DILexicalBlock(scope: !22086, file: !22039, line: 49, column: 7)
!22116 = !DILocation(line: 49, column: 19, scope: !22115)
!22117 = !DILocation(line: 49, column: 23, scope: !22115)
!22118 = !DILocation(line: 49, column: 16, scope: !22115)
!22119 = !DILocation(line: 49, column: 7, scope: !22086)
!22120 = !DILocation(line: 50, column: 20, scope: !22115)
!22121 = !DILocation(line: 50, column: 24, scope: !22115)
!22122 = !DILocation(line: 50, column: 35, scope: !22115)
!22123 = !DILocation(line: 50, column: 39, scope: !22115)
!22124 = !DILocation(line: 50, column: 34, scope: !22115)
!22125 = !DILocation(line: 50, column: 32, scope: !22115)
!22126 = !DILocation(line: 50, column: 49, scope: !22115)
!22127 = !DILocation(line: 50, column: 5, scope: !22115)
!22128 = !DILocation(line: 50, column: 9, scope: !22115)
!22129 = !DILocation(line: 50, column: 17, scope: !22115)
!22130 = !DILocation(line: 51, column: 3, scope: !22086)
!22131 = !DILocation(line: 51, column: 7, scope: !22086)
!22132 = !DILocation(line: 51, column: 16, scope: !22086)
!22133 = !DILocation(line: 52, column: 10, scope: !22086)
!22134 = !DILocation(line: 52, column: 3, scope: !22086)
!22135 = distinct !DISubprogram(name: "i_ring_pop", scope: !22039, file: !22039, line: 56, type: !2690, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2670, retainedNodes: !140)
!22136 = !DILocalVariable(name: "ir", arg: 1, scope: !22135, file: !22039, line: 56, type: !2675)
!22137 = !DILocation(line: 56, column: 21, scope: !22135)
!22138 = !DILocalVariable(name: "top_val", scope: !22135, file: !22039, line: 58, type: !5)
!22139 = !DILocation(line: 58, column: 7, scope: !22135)
!22140 = !DILocation(line: 59, column: 21, scope: !22141)
!22141 = distinct !DILexicalBlock(scope: !22135, file: !22039, line: 59, column: 7)
!22142 = !DILocation(line: 59, column: 7, scope: !22141)
!22143 = !DILocation(line: 59, column: 7, scope: !22135)
!22144 = !DILocation(line: 60, column: 5, scope: !22141)
!22145 = !DILocation(line: 61, column: 13, scope: !22135)
!22146 = !DILocation(line: 61, column: 17, scope: !22135)
!22147 = !DILocation(line: 61, column: 25, scope: !22135)
!22148 = !DILocation(line: 61, column: 29, scope: !22135)
!22149 = !DILocation(line: 61, column: 11, scope: !22135)
!22150 = !DILocation(line: 62, column: 31, scope: !22135)
!22151 = !DILocation(line: 62, column: 35, scope: !22135)
!22152 = !DILocation(line: 62, column: 3, scope: !22135)
!22153 = !DILocation(line: 62, column: 7, scope: !22135)
!22154 = !DILocation(line: 62, column: 15, scope: !22135)
!22155 = !DILocation(line: 62, column: 19, scope: !22135)
!22156 = !DILocation(line: 62, column: 29, scope: !22135)
!22157 = !DILocation(line: 63, column: 7, scope: !22158)
!22158 = distinct !DILexicalBlock(scope: !22135, file: !22039, line: 63, column: 7)
!22159 = !DILocation(line: 63, column: 11, scope: !22158)
!22160 = !DILocation(line: 63, column: 23, scope: !22158)
!22161 = !DILocation(line: 63, column: 27, scope: !22158)
!22162 = !DILocation(line: 63, column: 20, scope: !22158)
!22163 = !DILocation(line: 63, column: 7, scope: !22135)
!22164 = !DILocation(line: 64, column: 5, scope: !22158)
!22165 = !DILocation(line: 64, column: 9, scope: !22158)
!22166 = !DILocation(line: 64, column: 18, scope: !22158)
!22167 = !DILocation(line: 66, column: 22, scope: !22158)
!22168 = !DILocation(line: 66, column: 26, scope: !22158)
!22169 = !DILocation(line: 66, column: 35, scope: !22158)
!22170 = !DILocation(line: 66, column: 49, scope: !22158)
!22171 = !DILocation(line: 66, column: 54, scope: !22158)
!22172 = !DILocation(line: 66, column: 5, scope: !22158)
!22173 = !DILocation(line: 66, column: 9, scope: !22158)
!22174 = !DILocation(line: 66, column: 18, scope: !22158)
!22175 = !DILocation(line: 67, column: 10, scope: !22135)
!22176 = !DILocation(line: 67, column: 3, scope: !22135)
!22177 = distinct !DISubprogram(name: "locale_charset", scope: !22178, file: !22178, line: 826, type: !2695, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2692, retainedNodes: !140)
!22178 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!22179 = !DILocalVariable(name: "codeset", scope: !22177, file: !22178, line: 828, type: !112)
!22180 = !DILocation(line: 828, column: 15, scope: !22177)
!22181 = !DILocation(line: 835, column: 13, scope: !22177)
!22182 = !DILocation(line: 835, column: 11, scope: !22177)
!22183 = !DILocation(line: 893, column: 7, scope: !22184)
!22184 = distinct !DILexicalBlock(scope: !22177, file: !22178, line: 893, column: 7)
!22185 = !DILocation(line: 893, column: 15, scope: !22184)
!22186 = !DILocation(line: 893, column: 7, scope: !22177)
!22187 = !DILocation(line: 895, column: 13, scope: !22184)
!22188 = !DILocation(line: 895, column: 5, scope: !22184)
!22189 = !DILocation(line: 1051, column: 13, scope: !22190)
!22190 = distinct !DILexicalBlock(scope: !22191, file: !22178, line: 1051, column: 13)
!22191 = distinct !DILexicalBlock(scope: !22192, file: !22178, line: 1041, column: 7)
!22192 = distinct !DILexicalBlock(scope: !22177, file: !22178, line: 1000, column: 3)
!22193 = !DILocation(line: 1051, column: 24, scope: !22190)
!22194 = !DILocation(line: 1051, column: 13, scope: !22191)
!22195 = !DILocation(line: 1052, column: 19, scope: !22190)
!22196 = !DILocation(line: 1052, column: 11, scope: !22190)
!22197 = !DILocation(line: 1139, column: 10, scope: !22177)
!22198 = !DILocation(line: 1139, column: 3, scope: !22177)
!22199 = distinct !DISubprogram(name: "openat_safer", scope: !22200, file: !22200, line: 29, type: !22201, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2696, retainedNodes: !140)
!22200 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!22201 = !DISubroutineType(types: !22202)
!22202 = !{!5, !5, !112, !5, null}
!22203 = !DILocalVariable(name: "fd", arg: 1, scope: !22199, file: !22200, line: 29, type: !5)
!22204 = !DILocation(line: 29, column: 19, scope: !22199)
!22205 = !DILocalVariable(name: "file", arg: 2, scope: !22199, file: !22200, line: 29, type: !112)
!22206 = !DILocation(line: 29, column: 35, scope: !22199)
!22207 = !DILocalVariable(name: "flags", arg: 3, scope: !22199, file: !22200, line: 29, type: !5)
!22208 = !DILocation(line: 29, column: 45, scope: !22199)
!22209 = !DILocalVariable(name: "mode", scope: !22199, file: !22200, line: 31, type: !157)
!22210 = !DILocation(line: 31, column: 10, scope: !22199)
!22211 = !DILocation(line: 33, column: 7, scope: !22212)
!22212 = distinct !DILexicalBlock(scope: !22199, file: !22200, line: 33, column: 7)
!22213 = !DILocation(line: 33, column: 13, scope: !22212)
!22214 = !DILocation(line: 33, column: 7, scope: !22199)
!22215 = !DILocalVariable(name: "ap", scope: !22216, file: !22200, line: 35, type: !2701)
!22216 = distinct !DILexicalBlock(scope: !22212, file: !22200, line: 34, column: 5)
!22217 = !DILocation(line: 35, column: 15, scope: !22216)
!22218 = !DILocation(line: 36, column: 7, scope: !22216)
!22219 = !DILocation(line: 40, column: 14, scope: !22216)
!22220 = !DILocation(line: 40, column: 12, scope: !22216)
!22221 = !DILocation(line: 42, column: 7, scope: !22216)
!22222 = !DILocation(line: 43, column: 5, scope: !22216)
!22223 = !DILocation(line: 45, column: 28, scope: !22199)
!22224 = !DILocation(line: 45, column: 32, scope: !22199)
!22225 = !DILocation(line: 45, column: 38, scope: !22199)
!22226 = !DILocation(line: 45, column: 45, scope: !22199)
!22227 = !DILocation(line: 45, column: 20, scope: !22199)
!22228 = !DILocation(line: 45, column: 10, scope: !22199)
!22229 = !DILocation(line: 45, column: 3, scope: !22199)
!22230 = distinct !DISubprogram(name: "randint_new", scope: !2717, file: !2717, line: 71, type: !2713, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2710, retainedNodes: !140)
!22231 = !DILocalVariable(name: "source", arg: 1, scope: !22230, file: !2717, line: 71, type: !2720)
!22232 = !DILocation(line: 71, column: 38, scope: !22230)
!22233 = !DILocalVariable(name: "s", scope: !22230, file: !2717, line: 73, type: !2715)
!22234 = !DILocation(line: 73, column: 26, scope: !22230)
!22235 = !DILocation(line: 73, column: 30, scope: !22230)
!22236 = !DILocation(line: 74, column: 15, scope: !22230)
!22237 = !DILocation(line: 74, column: 3, scope: !22230)
!22238 = !DILocation(line: 74, column: 6, scope: !22230)
!22239 = !DILocation(line: 74, column: 13, scope: !22230)
!22240 = !{!22241, !2994, i64 0}
!22241 = !{!"randint_source", !2994, i64 0, !3178, i64 8, !3178, i64 16}
!22242 = !DILocation(line: 75, column: 16, scope: !22230)
!22243 = !DILocation(line: 75, column: 19, scope: !22230)
!22244 = !DILocation(line: 75, column: 27, scope: !22230)
!22245 = !{!22241, !3178, i64 16}
!22246 = !DILocation(line: 75, column: 3, scope: !22230)
!22247 = !DILocation(line: 75, column: 6, scope: !22230)
!22248 = !DILocation(line: 75, column: 14, scope: !22230)
!22249 = !{!22241, !3178, i64 8}
!22250 = !DILocation(line: 76, column: 10, scope: !22230)
!22251 = !DILocation(line: 76, column: 3, scope: !22230)
!22252 = distinct !DISubprogram(name: "randint_all_new", scope: !2717, file: !2717, line: 84, type: !2726, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2710, retainedNodes: !140)
!22253 = !DILocalVariable(name: "name", arg: 1, scope: !22252, file: !2717, line: 84, type: !112)
!22254 = !DILocation(line: 84, column: 30, scope: !22252)
!22255 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22252, file: !2717, line: 84, type: !52)
!22256 = !DILocation(line: 84, column: 43, scope: !22252)
!22257 = !DILocalVariable(name: "source", scope: !22252, file: !2717, line: 86, type: !2720)
!22258 = !DILocation(line: 86, column: 27, scope: !22252)
!22259 = !DILocation(line: 86, column: 50, scope: !22252)
!22260 = !DILocation(line: 86, column: 56, scope: !22252)
!22261 = !DILocation(line: 86, column: 36, scope: !22252)
!22262 = !DILocalVariable(name: "s", scope: !22252, file: !2717, line: 87, type: !2715)
!22263 = !DILocation(line: 87, column: 26, scope: !22252)
!22264 = !DILocation(line: 87, column: 43, scope: !22252)
!22265 = !DILocation(line: 87, column: 30, scope: !22252)
!22266 = !DILocation(line: 88, column: 12, scope: !22252)
!22267 = !DILocation(line: 88, column: 15, scope: !22252)
!22268 = !DILocation(line: 88, column: 3, scope: !22252)
!22269 = !DILocation(line: 89, column: 10, scope: !22252)
!22270 = !DILocation(line: 89, column: 3, scope: !22252)
!22271 = distinct !DISubprogram(name: "randint_get_source", scope: !2717, file: !2717, line: 95, type: !2728, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2710, retainedNodes: !140)
!22272 = !DILocalVariable(name: "s", arg: 1, scope: !22271, file: !2717, line: 95, type: !2730)
!22273 = !DILocation(line: 95, column: 50, scope: !22271)
!22274 = !DILocation(line: 97, column: 10, scope: !22271)
!22275 = !DILocation(line: 97, column: 13, scope: !22271)
!22276 = !DILocation(line: 97, column: 3, scope: !22271)
!22277 = distinct !DISubprogram(name: "randint_genmax", scope: !2717, file: !2717, line: 116, type: !2732, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2710, retainedNodes: !140)
!22278 = !DILocalVariable(name: "s", arg: 1, scope: !22277, file: !2717, line: 116, type: !2715)
!22279 = !DILocation(line: 116, column: 40, scope: !22277)
!22280 = !DILocalVariable(name: "genmax", arg: 2, scope: !22277, file: !2717, line: 116, type: !2724)
!22281 = !DILocation(line: 116, column: 51, scope: !22277)
!22282 = !DILocalVariable(name: "source", scope: !22277, file: !2717, line: 118, type: !2720)
!22283 = !DILocation(line: 118, column: 27, scope: !22277)
!22284 = !DILocation(line: 118, column: 36, scope: !22277)
!22285 = !DILocation(line: 118, column: 39, scope: !22277)
!22286 = !DILocalVariable(name: "randnum", scope: !22277, file: !2717, line: 119, type: !2724)
!22287 = !DILocation(line: 119, column: 11, scope: !22277)
!22288 = !DILocation(line: 119, column: 21, scope: !22277)
!22289 = !DILocation(line: 119, column: 24, scope: !22277)
!22290 = !DILocalVariable(name: "randmax", scope: !22277, file: !2717, line: 120, type: !2724)
!22291 = !DILocation(line: 120, column: 11, scope: !22277)
!22292 = !DILocation(line: 120, column: 21, scope: !22277)
!22293 = !DILocation(line: 120, column: 24, scope: !22277)
!22294 = !DILocalVariable(name: "choices", scope: !22277, file: !2717, line: 121, type: !2724)
!22295 = !DILocation(line: 121, column: 11, scope: !22277)
!22296 = !DILocation(line: 121, column: 21, scope: !22277)
!22297 = !DILocation(line: 121, column: 28, scope: !22277)
!22298 = !DILocation(line: 123, column: 3, scope: !22277)
!22299 = !DILocation(line: 125, column: 11, scope: !22300)
!22300 = distinct !DILexicalBlock(scope: !22301, file: !2717, line: 125, column: 11)
!22301 = distinct !DILexicalBlock(scope: !22277, file: !2717, line: 124, column: 5)
!22302 = !DILocation(line: 125, column: 21, scope: !22300)
!22303 = !DILocation(line: 125, column: 19, scope: !22300)
!22304 = !DILocation(line: 125, column: 11, scope: !22301)
!22305 = !DILocalVariable(name: "i", scope: !22306, file: !2717, line: 130, type: !52)
!22306 = distinct !DILexicalBlock(scope: !22300, file: !2717, line: 126, column: 9)
!22307 = !DILocation(line: 130, column: 18, scope: !22306)
!22308 = !DILocalVariable(name: "rmax", scope: !22306, file: !2717, line: 131, type: !2724)
!22309 = !DILocation(line: 131, column: 19, scope: !22306)
!22310 = !DILocation(line: 131, column: 26, scope: !22306)
!22311 = !DILocalVariable(name: "buf", scope: !22306, file: !2717, line: 132, type: !2734)
!22312 = !DILocation(line: 132, column: 25, scope: !22306)
!22313 = !DILocation(line: 134, column: 11, scope: !22306)
!22314 = !DILocation(line: 136, column: 34, scope: !22315)
!22315 = distinct !DILexicalBlock(scope: !22306, file: !2717, line: 135, column: 13)
!22316 = !DILocation(line: 136, column: 22, scope: !22315)
!22317 = !DILocation(line: 136, column: 40, scope: !22315)
!22318 = !DILocation(line: 136, column: 20, scope: !22315)
!22319 = !DILocation(line: 137, column: 16, scope: !22315)
!22320 = !DILocation(line: 138, column: 13, scope: !22315)
!22321 = !DILocation(line: 139, column: 18, scope: !22306)
!22322 = !DILocation(line: 139, column: 25, scope: !22306)
!22323 = !DILocation(line: 139, column: 23, scope: !22306)
!22324 = distinct !{!22324, !22313, !22325}
!22325 = !DILocation(line: 139, column: 31, scope: !22306)
!22326 = !DILocation(line: 141, column: 21, scope: !22306)
!22327 = !DILocation(line: 141, column: 29, scope: !22306)
!22328 = !DILocation(line: 141, column: 34, scope: !22306)
!22329 = !DILocation(line: 141, column: 11, scope: !22306)
!22330 = !DILocation(line: 150, column: 13, scope: !22306)
!22331 = !DILocation(line: 152, column: 11, scope: !22306)
!22332 = !DILocation(line: 154, column: 37, scope: !22333)
!22333 = distinct !DILexicalBlock(scope: !22306, file: !2717, line: 153, column: 13)
!22334 = !DILocation(line: 154, column: 25, scope: !22333)
!22335 = !DILocation(line: 154, column: 52, scope: !22333)
!22336 = !DILocation(line: 154, column: 48, scope: !22333)
!22337 = !DILocation(line: 154, column: 46, scope: !22333)
!22338 = !DILocation(line: 154, column: 23, scope: !22333)
!22339 = !DILocation(line: 155, column: 37, scope: !22333)
!22340 = !DILocation(line: 155, column: 25, scope: !22333)
!22341 = !DILocation(line: 155, column: 46, scope: !22333)
!22342 = !DILocation(line: 155, column: 23, scope: !22333)
!22343 = !DILocation(line: 156, column: 16, scope: !22333)
!22344 = !DILocation(line: 157, column: 13, scope: !22333)
!22345 = !DILocation(line: 158, column: 18, scope: !22306)
!22346 = !DILocation(line: 158, column: 28, scope: !22306)
!22347 = !DILocation(line: 158, column: 26, scope: !22306)
!22348 = distinct !{!22348, !22331, !22349}
!22349 = !DILocation(line: 158, column: 34, scope: !22306)
!22350 = !DILocation(line: 159, column: 9, scope: !22306)
!22351 = !DILocation(line: 161, column: 11, scope: !22352)
!22352 = distinct !DILexicalBlock(scope: !22301, file: !2717, line: 161, column: 11)
!22353 = !DILocation(line: 161, column: 22, scope: !22352)
!22354 = !DILocation(line: 161, column: 19, scope: !22352)
!22355 = !DILocation(line: 161, column: 11, scope: !22301)
!22356 = !DILocation(line: 163, column: 24, scope: !22357)
!22357 = distinct !DILexicalBlock(scope: !22352, file: !2717, line: 162, column: 9)
!22358 = !DILocation(line: 163, column: 27, scope: !22357)
!22359 = !DILocation(line: 163, column: 35, scope: !22357)
!22360 = !DILocation(line: 163, column: 11, scope: !22357)
!22361 = !DILocation(line: 163, column: 14, scope: !22357)
!22362 = !DILocation(line: 163, column: 22, scope: !22357)
!22363 = !DILocation(line: 164, column: 18, scope: !22357)
!22364 = !DILocation(line: 164, column: 11, scope: !22357)
!22365 = !DILocalVariable(name: "excess_choices", scope: !22366, file: !2717, line: 178, type: !2724)
!22366 = distinct !DILexicalBlock(scope: !22352, file: !2717, line: 167, column: 9)
!22367 = !DILocation(line: 178, column: 19, scope: !22366)
!22368 = !DILocation(line: 178, column: 36, scope: !22366)
!22369 = !DILocation(line: 178, column: 46, scope: !22366)
!22370 = !DILocation(line: 178, column: 44, scope: !22366)
!22371 = !DILocalVariable(name: "unusable_choices", scope: !22366, file: !2717, line: 179, type: !2724)
!22372 = !DILocation(line: 179, column: 19, scope: !22366)
!22373 = !DILocation(line: 179, column: 38, scope: !22366)
!22374 = !DILocation(line: 179, column: 55, scope: !22366)
!22375 = !DILocation(line: 179, column: 53, scope: !22366)
!22376 = !DILocalVariable(name: "last_usable_choice", scope: !22366, file: !2717, line: 180, type: !2724)
!22377 = !DILocation(line: 180, column: 19, scope: !22366)
!22378 = !DILocation(line: 180, column: 40, scope: !22366)
!22379 = !DILocation(line: 180, column: 50, scope: !22366)
!22380 = !DILocation(line: 180, column: 48, scope: !22366)
!22381 = !DILocalVariable(name: "reduced_randnum", scope: !22366, file: !2717, line: 181, type: !2724)
!22382 = !DILocation(line: 181, column: 19, scope: !22366)
!22383 = !DILocation(line: 181, column: 37, scope: !22366)
!22384 = !DILocation(line: 181, column: 47, scope: !22366)
!22385 = !DILocation(line: 181, column: 45, scope: !22366)
!22386 = !DILocation(line: 183, column: 15, scope: !22387)
!22387 = distinct !DILexicalBlock(scope: !22366, file: !2717, line: 183, column: 15)
!22388 = !DILocation(line: 183, column: 26, scope: !22387)
!22389 = !DILocation(line: 183, column: 23, scope: !22387)
!22390 = !DILocation(line: 183, column: 15, scope: !22366)
!22391 = !DILocation(line: 185, column: 28, scope: !22392)
!22392 = distinct !DILexicalBlock(scope: !22387, file: !2717, line: 184, column: 13)
!22393 = !DILocation(line: 185, column: 38, scope: !22392)
!22394 = !DILocation(line: 185, column: 36, scope: !22392)
!22395 = !DILocation(line: 185, column: 15, scope: !22392)
!22396 = !DILocation(line: 185, column: 18, scope: !22392)
!22397 = !DILocation(line: 185, column: 26, scope: !22392)
!22398 = !DILocation(line: 186, column: 28, scope: !22392)
!22399 = !DILocation(line: 186, column: 45, scope: !22392)
!22400 = !DILocation(line: 186, column: 43, scope: !22392)
!22401 = !DILocation(line: 186, column: 15, scope: !22392)
!22402 = !DILocation(line: 186, column: 18, scope: !22392)
!22403 = !DILocation(line: 186, column: 26, scope: !22392)
!22404 = !DILocation(line: 187, column: 22, scope: !22392)
!22405 = !DILocation(line: 187, column: 15, scope: !22392)
!22406 = !DILocation(line: 192, column: 21, scope: !22366)
!22407 = !DILocation(line: 192, column: 19, scope: !22366)
!22408 = !DILocation(line: 193, column: 21, scope: !22366)
!22409 = !DILocation(line: 193, column: 38, scope: !22366)
!22410 = !DILocation(line: 193, column: 19, scope: !22366)
!22411 = distinct !{!22411, !22298, !22412}
!22412 = !DILocation(line: 195, column: 5, scope: !22277)
!22413 = !DILocation(line: 196, column: 1, scope: !22277)
!22414 = distinct !DISubprogram(name: "shift_left", scope: !2717, file: !2717, line: 106, type: !2739, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2710, retainedNodes: !140)
!22415 = !DILocalVariable(name: "x", arg: 1, scope: !22414, file: !2717, line: 106, type: !2724)
!22416 = !DILocation(line: 106, column: 43, scope: !22414)
!22417 = !DILocation(line: 108, column: 27, scope: !22414)
!22418 = !DILocation(line: 108, column: 29, scope: !22414)
!22419 = !DILocation(line: 108, column: 3, scope: !22414)
!22420 = distinct !DISubprogram(name: "randint_free", scope: !2717, file: !2717, line: 201, type: !2735, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2710, retainedNodes: !140)
!22421 = !DILocalVariable(name: "s", arg: 1, scope: !22420, file: !2717, line: 201, type: !2715)
!22422 = !DILocation(line: 201, column: 38, scope: !22420)
!22423 = !DILocation(line: 203, column: 19, scope: !22420)
!22424 = !DILocation(line: 203, column: 3, scope: !22420)
!22425 = !DILocation(line: 204, column: 9, scope: !22420)
!22426 = !DILocation(line: 204, column: 3, scope: !22420)
!22427 = !DILocation(line: 205, column: 1, scope: !22420)
!22428 = distinct !DISubprogram(name: "randint_all_free", scope: !2717, file: !2717, line: 211, type: !2737, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2710, retainedNodes: !140)
!22429 = !DILocalVariable(name: "s", arg: 1, scope: !22428, file: !2717, line: 211, type: !2715)
!22430 = !DILocation(line: 211, column: 42, scope: !22428)
!22431 = !DILocalVariable(name: "r", scope: !22428, file: !2717, line: 213, type: !5)
!22432 = !DILocation(line: 213, column: 7, scope: !22428)
!22433 = !DILocation(line: 213, column: 26, scope: !22428)
!22434 = !DILocation(line: 213, column: 29, scope: !22428)
!22435 = !DILocation(line: 213, column: 11, scope: !22428)
!22436 = !DILocalVariable(name: "e", scope: !22428, file: !2717, line: 214, type: !5)
!22437 = !DILocation(line: 214, column: 7, scope: !22428)
!22438 = !DILocation(line: 214, column: 11, scope: !22428)
!22439 = !DILocation(line: 215, column: 17, scope: !22428)
!22440 = !DILocation(line: 215, column: 3, scope: !22428)
!22441 = !DILocation(line: 216, column: 11, scope: !22428)
!22442 = !DILocation(line: 216, column: 3, scope: !22428)
!22443 = !DILocation(line: 216, column: 9, scope: !22428)
!22444 = !DILocation(line: 217, column: 10, scope: !22428)
!22445 = !DILocation(line: 217, column: 3, scope: !22428)
!22446 = distinct !DISubprogram(name: "randread_new", scope: !2748, file: !2748, line: 204, type: !2744, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22447 = !DILocalVariable(name: "name", arg: 1, scope: !22446, file: !2748, line: 204, type: !112)
!22448 = !DILocation(line: 204, column: 27, scope: !22446)
!22449 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !22446, file: !2748, line: 204, type: !52)
!22450 = !DILocation(line: 204, column: 40, scope: !22446)
!22451 = !DILocation(line: 206, column: 7, scope: !22452)
!22452 = distinct !DILexicalBlock(scope: !22446, file: !2748, line: 206, column: 7)
!22453 = !DILocation(line: 206, column: 19, scope: !22452)
!22454 = !DILocation(line: 206, column: 7, scope: !22446)
!22455 = !DILocation(line: 207, column: 12, scope: !22452)
!22456 = !DILocation(line: 207, column: 5, scope: !22452)
!22457 = !DILocalVariable(name: "source", scope: !22458, file: !2748, line: 210, type: !2751)
!22458 = distinct !DILexicalBlock(scope: !22452, file: !2748, line: 209, column: 5)
!22459 = !DILocation(line: 210, column: 13, scope: !22458)
!22460 = !DILocalVariable(name: "s", scope: !22458, file: !2748, line: 211, type: !2746)
!22461 = !DILocation(line: 211, column: 31, scope: !22458)
!22462 = !DILocation(line: 213, column: 11, scope: !22463)
!22463 = distinct !DILexicalBlock(scope: !22458, file: !2748, line: 213, column: 11)
!22464 = !DILocation(line: 213, column: 11, scope: !22458)
!22465 = !DILocation(line: 214, column: 38, scope: !22466)
!22466 = distinct !DILexicalBlock(scope: !22463, file: !2748, line: 214, column: 13)
!22467 = !DILocation(line: 214, column: 25, scope: !22466)
!22468 = !DILocation(line: 214, column: 23, scope: !22466)
!22469 = !DILocation(line: 214, column: 13, scope: !22463)
!22470 = !DILocation(line: 215, column: 11, scope: !22466)
!22471 = !DILocation(line: 214, column: 49, scope: !22466)
!22472 = !DILocation(line: 217, column: 23, scope: !22458)
!22473 = !DILocation(line: 217, column: 31, scope: !22458)
!22474 = !DILocation(line: 217, column: 11, scope: !22458)
!22475 = !DILocation(line: 217, column: 9, scope: !22458)
!22476 = !DILocation(line: 219, column: 11, scope: !22477)
!22477 = distinct !DILexicalBlock(scope: !22458, file: !2748, line: 219, column: 11)
!22478 = !DILocation(line: 219, column: 11, scope: !22458)
!22479 = !DILocation(line: 220, column: 18, scope: !22477)
!22480 = !DILocation(line: 220, column: 26, scope: !22477)
!22481 = !DILocation(line: 220, column: 29, scope: !22477)
!22482 = !DILocation(line: 220, column: 33, scope: !22477)
!22483 = !DILocation(line: 220, column: 44, scope: !22477)
!22484 = !DILocation(line: 220, column: 9, scope: !22477)
!22485 = !DILocation(line: 223, column: 11, scope: !22486)
!22486 = distinct !DILexicalBlock(scope: !22477, file: !2748, line: 222, column: 9)
!22487 = !DILocation(line: 223, column: 14, scope: !22486)
!22488 = !DILocation(line: 223, column: 18, scope: !22486)
!22489 = !DILocation(line: 223, column: 24, scope: !22486)
!22490 = !DILocation(line: 223, column: 33, scope: !22486)
!22491 = !DILocation(line: 224, column: 22, scope: !22486)
!22492 = !DILocation(line: 224, column: 25, scope: !22486)
!22493 = !DILocation(line: 224, column: 29, scope: !22486)
!22494 = !DILocation(line: 224, column: 35, scope: !22486)
!22495 = !DILocation(line: 224, column: 41, scope: !22486)
!22496 = !DILocation(line: 225, column: 22, scope: !22486)
!22497 = !DILocation(line: 224, column: 11, scope: !22486)
!22498 = !DILocation(line: 226, column: 24, scope: !22486)
!22499 = !DILocation(line: 226, column: 27, scope: !22486)
!22500 = !DILocation(line: 226, column: 31, scope: !22486)
!22501 = !DILocation(line: 226, column: 37, scope: !22486)
!22502 = !DILocation(line: 226, column: 11, scope: !22486)
!22503 = !DILocation(line: 229, column: 14, scope: !22458)
!22504 = !DILocation(line: 229, column: 7, scope: !22458)
!22505 = !DILocation(line: 231, column: 1, scope: !22446)
!22506 = distinct !DISubprogram(name: "simple_new", scope: !2748, file: !2748, line: 137, type: !2834, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22507 = !DILocalVariable(name: "source", arg: 1, scope: !22506, file: !2748, line: 137, type: !2751)
!22508 = !DILocation(line: 137, column: 19, scope: !22506)
!22509 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !22506, file: !2748, line: 137, type: !428)
!22510 = !DILocation(line: 137, column: 39, scope: !22506)
!22511 = !DILocalVariable(name: "s", scope: !22506, file: !2748, line: 139, type: !2746)
!22512 = !DILocation(line: 139, column: 27, scope: !22506)
!22513 = !DILocation(line: 139, column: 31, scope: !22506)
!22514 = !DILocation(line: 140, column: 15, scope: !22506)
!22515 = !DILocation(line: 140, column: 3, scope: !22506)
!22516 = !DILocation(line: 140, column: 6, scope: !22506)
!22517 = !DILocation(line: 140, column: 13, scope: !22506)
!22518 = !{!22519, !2994, i64 0}
!22519 = !{!"randread_source", !2994, i64 0, !2994, i64 8, !2994, i64 16, !2982, i64 24}
!22520 = !DILocation(line: 141, column: 3, scope: !22506)
!22521 = !DILocation(line: 141, column: 6, scope: !22506)
!22522 = !DILocation(line: 141, column: 14, scope: !22506)
!22523 = !{!22519, !2994, i64 8}
!22524 = !DILocation(line: 142, column: 20, scope: !22506)
!22525 = !DILocation(line: 142, column: 3, scope: !22506)
!22526 = !DILocation(line: 142, column: 6, scope: !22506)
!22527 = !DILocation(line: 142, column: 18, scope: !22506)
!22528 = !{!22519, !2994, i64 16}
!22529 = !DILocation(line: 143, column: 10, scope: !22506)
!22530 = !DILocation(line: 143, column: 3, scope: !22506)
!22531 = distinct !DISubprogram(name: "get_nonce", scope: !2748, file: !2748, line: 151, type: !2836, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1184, line: 30, size: 128, elements: !22533)
!22533 = !{!22534, !22535}
!22534 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !22532, file: !1184, line: 32, baseType: !338, size: 64)
!22535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !22532, file: !1184, line: 33, baseType: !1188, size: 64, offset: 64)
!22536 = !DILocalVariable(name: "buffer", arg: 1, scope: !22531, file: !2748, line: 151, type: !47)
!22537 = !DILocation(line: 151, column: 18, scope: !22531)
!22538 = !DILocalVariable(name: "bufsize", arg: 2, scope: !22531, file: !2748, line: 151, type: !52)
!22539 = !DILocation(line: 151, column: 33, scope: !22531)
!22540 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !22531, file: !2748, line: 151, type: !52)
!22541 = !DILocation(line: 151, column: 49, scope: !22531)
!22542 = !DILocalVariable(name: "buf", scope: !22531, file: !2748, line: 153, type: !7)
!22543 = !DILocation(line: 153, column: 9, scope: !22531)
!22544 = !DILocation(line: 153, column: 15, scope: !22531)
!22545 = !DILocalVariable(name: "seeded", scope: !22531, file: !2748, line: 154, type: !579)
!22546 = !DILocation(line: 154, column: 11, scope: !22531)
!22547 = !DILocalVariable(name: "fd", scope: !22531, file: !2748, line: 157, type: !5)
!22548 = !DILocation(line: 157, column: 7, scope: !22531)
!22549 = !DILocation(line: 157, column: 12, scope: !22531)
!22550 = !DILocation(line: 158, column: 12, scope: !22551)
!22551 = distinct !DILexicalBlock(scope: !22531, file: !2748, line: 158, column: 7)
!22552 = !DILocation(line: 158, column: 9, scope: !22551)
!22553 = !DILocation(line: 158, column: 7, scope: !22531)
!22554 = !DILocation(line: 160, column: 22, scope: !22555)
!22555 = distinct !DILexicalBlock(scope: !22551, file: !2748, line: 159, column: 5)
!22556 = !DILocation(line: 160, column: 26, scope: !22555)
!22557 = !DILocation(line: 160, column: 31, scope: !22555)
!22558 = !DILocation(line: 160, column: 16, scope: !22555)
!22559 = !DILocation(line: 160, column: 14, scope: !22555)
!22560 = !DILocation(line: 161, column: 11, scope: !22561)
!22561 = distinct !DILexicalBlock(scope: !22555, file: !2748, line: 161, column: 11)
!22562 = !DILocation(line: 161, column: 18, scope: !22561)
!22563 = !DILocation(line: 161, column: 11, scope: !22555)
!22564 = !DILocation(line: 162, column: 16, scope: !22561)
!22565 = !DILocation(line: 162, column: 9, scope: !22561)
!22566 = !DILocation(line: 163, column: 14, scope: !22555)
!22567 = !DILocation(line: 163, column: 7, scope: !22555)
!22568 = !DILocation(line: 164, column: 5, scope: !22555)
!22569 = !DILocation(line: 177, column: 3, scope: !22570)
!22570 = distinct !DILexicalBlock(scope: !22531, file: !2748, line: 177, column: 3)
!22571 = !DILocation(line: 177, column: 3, scope: !22531)
!22572 = !DILocalVariable(name: "v", scope: !22573, file: !2748, line: 177, type: !22532)
!22573 = distinct !DILexicalBlock(scope: !22570, file: !2748, line: 177, column: 3)
!22574 = !DILocation(line: 177, column: 3, scope: !22573)
!22575 = !DILocalVariable(name: "nbytes", scope: !22573, file: !2748, line: 177, type: !52)
!22576 = !DILocation(line: 178, column: 3, scope: !22577)
!22577 = distinct !DILexicalBlock(scope: !22531, file: !2748, line: 178, column: 3)
!22578 = !DILocation(line: 178, column: 3, scope: !22531)
!22579 = !DILocalVariable(name: "v", scope: !22580, file: !2748, line: 178, type: !2838)
!22580 = distinct !DILexicalBlock(scope: !22577, file: !2748, line: 178, column: 3)
!22581 = !DILocation(line: 178, column: 3, scope: !22580)
!22582 = !DILocalVariable(name: "nbytes", scope: !22580, file: !2748, line: 178, type: !52)
!22583 = !DILocation(line: 179, column: 3, scope: !22584)
!22584 = distinct !DILexicalBlock(scope: !22531, file: !2748, line: 179, column: 3)
!22585 = !DILocation(line: 179, column: 3, scope: !22531)
!22586 = !DILocalVariable(name: "v", scope: !22587, file: !2748, line: 179, type: !2838)
!22587 = distinct !DILexicalBlock(scope: !22584, file: !2748, line: 179, column: 3)
!22588 = !DILocation(line: 179, column: 3, scope: !22587)
!22589 = !DILocalVariable(name: "nbytes", scope: !22587, file: !2748, line: 179, type: !52)
!22590 = !DILocation(line: 180, column: 3, scope: !22591)
!22591 = distinct !DILexicalBlock(scope: !22531, file: !2748, line: 180, column: 3)
!22592 = !DILocation(line: 180, column: 3, scope: !22531)
!22593 = !DILocalVariable(name: "v", scope: !22594, file: !2748, line: 180, type: !477)
!22594 = distinct !DILexicalBlock(scope: !22591, file: !2748, line: 180, column: 3)
!22595 = !DILocation(line: 180, column: 3, scope: !22594)
!22596 = !DILocalVariable(name: "nbytes", scope: !22594, file: !2748, line: 180, type: !52)
!22597 = !DILocation(line: 181, column: 3, scope: !22598)
!22598 = distinct !DILexicalBlock(scope: !22531, file: !2748, line: 181, column: 3)
!22599 = !DILocation(line: 181, column: 3, scope: !22531)
!22600 = !DILocalVariable(name: "v", scope: !22601, file: !2748, line: 181, type: !477)
!22601 = distinct !DILexicalBlock(scope: !22598, file: !2748, line: 181, column: 3)
!22602 = !DILocation(line: 181, column: 3, scope: !22601)
!22603 = !DILocalVariable(name: "nbytes", scope: !22601, file: !2748, line: 181, type: !52)
!22604 = !DILocation(line: 189, column: 1, scope: !22531)
!22605 = distinct !DISubprogram(name: "randread_error", scope: !2748, file: !2748, line: 124, type: !2793, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22606 = !DILocalVariable(name: "file_name", arg: 1, scope: !22605, file: !2748, line: 124, type: !428)
!22607 = !DILocation(line: 124, column: 29, scope: !22605)
!22608 = !DILocation(line: 126, column: 7, scope: !22609)
!22609 = distinct !DILexicalBlock(scope: !22605, file: !2748, line: 126, column: 7)
!22610 = !DILocation(line: 126, column: 7, scope: !22605)
!22611 = !DILocation(line: 127, column: 12, scope: !22609)
!22612 = !DILocation(line: 127, column: 26, scope: !22609)
!22613 = !DILocation(line: 128, column: 12, scope: !22609)
!22614 = !DILocation(line: 128, column: 18, scope: !22609)
!22615 = !DILocation(line: 128, column: 25, scope: !22609)
!22616 = !DILocation(line: 128, column: 48, scope: !22609)
!22617 = !DILocation(line: 129, column: 19, scope: !22609)
!22618 = !DILocation(line: 129, column: 12, scope: !22609)
!22619 = !DILocation(line: 127, column: 5, scope: !22609)
!22620 = !DILocation(line: 130, column: 3, scope: !22605)
!22621 = distinct !DISubprogram(name: "randread_set_handler", scope: !2748, file: !2748, line: 242, type: !2826, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22622 = !DILocalVariable(name: "s", arg: 1, scope: !22621, file: !2748, line: 242, type: !2746)
!22623 = !DILocation(line: 242, column: 47, scope: !22621)
!22624 = !DILocalVariable(name: "handler", arg: 2, scope: !22621, file: !2748, line: 242, type: !2792)
!22625 = !DILocation(line: 242, column: 57, scope: !22621)
!22626 = !DILocation(line: 244, column: 16, scope: !22621)
!22627 = !DILocation(line: 244, column: 3, scope: !22621)
!22628 = !DILocation(line: 244, column: 6, scope: !22621)
!22629 = !DILocation(line: 244, column: 14, scope: !22621)
!22630 = !DILocation(line: 245, column: 1, scope: !22621)
!22631 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !2748, file: !2748, line: 248, type: !2828, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22632 = !DILocalVariable(name: "s", arg: 1, scope: !22631, file: !2748, line: 248, type: !2746)
!22633 = !DILocation(line: 248, column: 51, scope: !22631)
!22634 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !22631, file: !2748, line: 248, type: !428)
!22635 = !DILocation(line: 248, column: 66, scope: !22631)
!22636 = !DILocation(line: 250, column: 20, scope: !22631)
!22637 = !DILocation(line: 250, column: 3, scope: !22631)
!22638 = !DILocation(line: 250, column: 6, scope: !22631)
!22639 = !DILocation(line: 250, column: 18, scope: !22631)
!22640 = !DILocation(line: 251, column: 1, scope: !22631)
!22641 = distinct !DISubprogram(name: "randread", scope: !2748, file: !2748, line: 326, type: !2830, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22642 = !DILocalVariable(name: "s", arg: 1, scope: !22641, file: !2748, line: 326, type: !2746)
!22643 = !DILocation(line: 326, column: 35, scope: !22641)
!22644 = !DILocalVariable(name: "buf", arg: 2, scope: !22641, file: !2748, line: 326, type: !47)
!22645 = !DILocation(line: 326, column: 44, scope: !22641)
!22646 = !DILocalVariable(name: "size", arg: 3, scope: !22641, file: !2748, line: 326, type: !52)
!22647 = !DILocation(line: 326, column: 56, scope: !22641)
!22648 = !DILocation(line: 328, column: 7, scope: !22649)
!22649 = distinct !DILexicalBlock(scope: !22641, file: !2748, line: 328, column: 7)
!22650 = !DILocation(line: 328, column: 10, scope: !22649)
!22651 = !DILocation(line: 328, column: 7, scope: !22641)
!22652 = !DILocation(line: 329, column: 17, scope: !22649)
!22653 = !DILocation(line: 329, column: 20, scope: !22649)
!22654 = !DILocation(line: 329, column: 25, scope: !22649)
!22655 = !DILocation(line: 329, column: 5, scope: !22649)
!22656 = !DILocation(line: 331, column: 17, scope: !22649)
!22657 = !DILocation(line: 331, column: 20, scope: !22649)
!22658 = !DILocation(line: 331, column: 24, scope: !22649)
!22659 = !DILocation(line: 331, column: 31, scope: !22649)
!22660 = !DILocation(line: 331, column: 36, scope: !22649)
!22661 = !DILocation(line: 331, column: 5, scope: !22649)
!22662 = !DILocation(line: 332, column: 1, scope: !22641)
!22663 = distinct !DISubprogram(name: "readsource", scope: !2748, file: !2748, line: 258, type: !2840, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22664 = !DILocalVariable(name: "s", arg: 1, scope: !22663, file: !2748, line: 258, type: !2746)
!22665 = !DILocation(line: 258, column: 37, scope: !22663)
!22666 = !DILocalVariable(name: "p", arg: 2, scope: !22663, file: !2748, line: 258, type: !2842)
!22667 = !DILocation(line: 258, column: 55, scope: !22663)
!22668 = !DILocalVariable(name: "size", arg: 3, scope: !22663, file: !2748, line: 258, type: !52)
!22669 = !DILocation(line: 258, column: 65, scope: !22663)
!22670 = !DILocation(line: 260, column: 3, scope: !22663)
!22671 = !DILocalVariable(name: "inbytes", scope: !22672, file: !2748, line: 262, type: !52)
!22672 = distinct !DILexicalBlock(scope: !22663, file: !2748, line: 261, column: 5)
!22673 = !DILocation(line: 262, column: 14, scope: !22672)
!22674 = !DILocation(line: 262, column: 24, scope: !22672)
!22675 = !DILocalVariable(name: "fread_errno", scope: !22672, file: !2748, line: 263, type: !5)
!22676 = !DILocation(line: 263, column: 11, scope: !22672)
!22677 = !DILocation(line: 263, column: 25, scope: !22672)
!22678 = !DILocation(line: 264, column: 12, scope: !22672)
!22679 = !DILocation(line: 264, column: 9, scope: !22672)
!22680 = !DILocation(line: 265, column: 15, scope: !22672)
!22681 = !DILocation(line: 265, column: 12, scope: !22672)
!22682 = !DILocation(line: 266, column: 11, scope: !22683)
!22683 = distinct !DILexicalBlock(scope: !22672, file: !2748, line: 266, column: 11)
!22684 = !DILocation(line: 266, column: 16, scope: !22683)
!22685 = !DILocation(line: 266, column: 11, scope: !22672)
!22686 = !DILocation(line: 267, column: 9, scope: !22683)
!22687 = !DILocation(line: 268, column: 16, scope: !22672)
!22688 = !DILocation(line: 268, column: 37, scope: !22672)
!22689 = !DILocation(line: 268, column: 7, scope: !22672)
!22690 = !DILocation(line: 268, column: 13, scope: !22672)
!22691 = !DILocation(line: 269, column: 7, scope: !22672)
!22692 = !DILocation(line: 269, column: 10, scope: !22672)
!22693 = !DILocation(line: 269, column: 19, scope: !22672)
!22694 = !DILocation(line: 269, column: 22, scope: !22672)
!22695 = distinct !{!22695, !22670, !22696}
!22696 = !DILocation(line: 270, column: 5, scope: !22663)
!22697 = !DILocation(line: 271, column: 1, scope: !22663)
!22698 = distinct !DISubprogram(name: "readisaac", scope: !2748, file: !2748, line: 278, type: !2843, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22699 = !DILocalVariable(name: "isaac", arg: 1, scope: !22698, file: !2748, line: 278, type: !2845)
!22700 = !DILocation(line: 278, column: 26, scope: !22698)
!22701 = !DILocalVariable(name: "p", arg: 2, scope: !22698, file: !2748, line: 278, type: !47)
!22702 = !DILocation(line: 278, column: 39, scope: !22698)
!22703 = !DILocalVariable(name: "size", arg: 3, scope: !22698, file: !2748, line: 278, type: !52)
!22704 = !DILocation(line: 278, column: 49, scope: !22698)
!22705 = !DILocalVariable(name: "inbytes", scope: !22698, file: !2748, line: 280, type: !52)
!22706 = !DILocation(line: 280, column: 10, scope: !22698)
!22707 = !DILocation(line: 280, column: 20, scope: !22698)
!22708 = !DILocation(line: 280, column: 27, scope: !22698)
!22709 = !{!22710, !3178, i64 0}
!22710 = !{!"isaac", !3178, i64 0, !22711, i64 8, !2982, i64 2080}
!22711 = !{!"isaac_state", !2982, i64 0, !3178, i64 2048, !3178, i64 2056, !3178, i64 2064}
!22712 = !DILocation(line: 282, column: 3, scope: !22698)
!22713 = !DILocalVariable(name: "char_p", scope: !22714, file: !2748, line: 284, type: !7)
!22714 = distinct !DILexicalBlock(scope: !22698, file: !2748, line: 283, column: 5)
!22715 = !DILocation(line: 284, column: 13, scope: !22714)
!22716 = !DILocation(line: 284, column: 22, scope: !22714)
!22717 = !DILocation(line: 286, column: 11, scope: !22718)
!22718 = distinct !DILexicalBlock(scope: !22714, file: !2748, line: 286, column: 11)
!22719 = !DILocation(line: 286, column: 19, scope: !22718)
!22720 = !DILocation(line: 286, column: 16, scope: !22718)
!22721 = !DILocation(line: 286, column: 11, scope: !22714)
!22722 = !DILocation(line: 288, column: 19, scope: !22723)
!22723 = distinct !DILexicalBlock(scope: !22718, file: !2748, line: 287, column: 9)
!22724 = !DILocation(line: 288, column: 22, scope: !22723)
!22725 = !DILocation(line: 288, column: 29, scope: !22723)
!22726 = !DILocation(line: 288, column: 34, scope: !22723)
!22727 = !DILocation(line: 288, column: 36, scope: !22723)
!22728 = !DILocation(line: 288, column: 52, scope: !22723)
!22729 = !DILocation(line: 288, column: 50, scope: !22723)
!22730 = !DILocation(line: 288, column: 61, scope: !22723)
!22731 = !DILocation(line: 288, column: 11, scope: !22723)
!22732 = !DILocation(line: 289, column: 29, scope: !22723)
!22733 = !DILocation(line: 289, column: 39, scope: !22723)
!22734 = !DILocation(line: 289, column: 37, scope: !22723)
!22735 = !DILocation(line: 289, column: 11, scope: !22723)
!22736 = !DILocation(line: 289, column: 18, scope: !22723)
!22737 = !DILocation(line: 289, column: 27, scope: !22723)
!22738 = !DILocation(line: 290, column: 11, scope: !22723)
!22739 = !DILocation(line: 293, column: 15, scope: !22714)
!22740 = !DILocation(line: 293, column: 18, scope: !22714)
!22741 = !DILocation(line: 293, column: 25, scope: !22714)
!22742 = !DILocation(line: 293, column: 30, scope: !22714)
!22743 = !DILocation(line: 293, column: 32, scope: !22714)
!22744 = !DILocation(line: 293, column: 48, scope: !22714)
!22745 = !DILocation(line: 293, column: 46, scope: !22714)
!22746 = !DILocation(line: 293, column: 57, scope: !22714)
!22747 = !DILocation(line: 293, column: 7, scope: !22714)
!22748 = !DILocation(line: 294, column: 11, scope: !22714)
!22749 = !DILocation(line: 294, column: 20, scope: !22714)
!22750 = !DILocation(line: 294, column: 18, scope: !22714)
!22751 = !DILocation(line: 294, column: 9, scope: !22714)
!22752 = !DILocation(line: 295, column: 15, scope: !22714)
!22753 = !DILocation(line: 295, column: 12, scope: !22714)
!22754 = !DILocation(line: 299, column: 11, scope: !22755)
!22755 = distinct !DILexicalBlock(scope: !22714, file: !2748, line: 299, column: 11)
!22756 = !DILocation(line: 299, column: 11, scope: !22714)
!22757 = !DILocalVariable(name: "wp", scope: !22758, file: !2748, line: 301, type: !2846)
!22758 = distinct !DILexicalBlock(scope: !22755, file: !2748, line: 300, column: 9)
!22759 = !DILocation(line: 301, column: 23, scope: !22758)
!22760 = !DILocation(line: 301, column: 28, scope: !22758)
!22761 = !DILocation(line: 302, column: 11, scope: !22758)
!22762 = !DILocation(line: 302, column: 33, scope: !22758)
!22763 = !DILocation(line: 302, column: 30, scope: !22758)
!22764 = !DILocation(line: 304, column: 30, scope: !22765)
!22765 = distinct !DILexicalBlock(scope: !22758, file: !2748, line: 303, column: 13)
!22766 = !DILocation(line: 304, column: 37, scope: !22765)
!22767 = !DILocation(line: 304, column: 44, scope: !22765)
!22768 = !DILocation(line: 304, column: 15, scope: !22765)
!22769 = !DILocation(line: 305, column: 18, scope: !22765)
!22770 = !DILocation(line: 306, column: 20, scope: !22765)
!22771 = !DILocation(line: 307, column: 19, scope: !22772)
!22772 = distinct !DILexicalBlock(scope: !22765, file: !2748, line: 307, column: 19)
!22773 = !DILocation(line: 307, column: 24, scope: !22772)
!22774 = !DILocation(line: 307, column: 19, scope: !22765)
!22775 = !DILocation(line: 309, column: 19, scope: !22776)
!22776 = distinct !DILexicalBlock(scope: !22772, file: !2748, line: 308, column: 17)
!22777 = !DILocation(line: 309, column: 26, scope: !22776)
!22778 = !DILocation(line: 309, column: 35, scope: !22776)
!22779 = !DILocation(line: 310, column: 19, scope: !22776)
!22780 = distinct !{!22780, !22761, !22781}
!22781 = !DILocation(line: 312, column: 13, scope: !22758)
!22782 = !DILocation(line: 313, column: 15, scope: !22758)
!22783 = !DILocation(line: 313, column: 13, scope: !22758)
!22784 = !DILocation(line: 314, column: 9, scope: !22758)
!22785 = !DILocation(line: 316, column: 22, scope: !22714)
!22786 = !DILocation(line: 316, column: 29, scope: !22714)
!22787 = !DILocation(line: 316, column: 36, scope: !22714)
!22788 = !DILocation(line: 316, column: 43, scope: !22714)
!22789 = !DILocation(line: 316, column: 48, scope: !22714)
!22790 = !DILocation(line: 316, column: 7, scope: !22714)
!22791 = !DILocation(line: 317, column: 15, scope: !22714)
!22792 = distinct !{!22792, !22712, !22793}
!22793 = !DILocation(line: 318, column: 5, scope: !22698)
!22794 = !DILocation(line: 319, column: 1, scope: !22698)
!22795 = distinct !DISubprogram(name: "randread_free", scope: !2748, file: !2748, line: 341, type: !2832, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2741, retainedNodes: !140)
!22796 = !DILocalVariable(name: "s", arg: 1, scope: !22795, file: !2748, line: 341, type: !2746)
!22797 = !DILocation(line: 341, column: 40, scope: !22795)
!22798 = !DILocalVariable(name: "source", scope: !22795, file: !2748, line: 343, type: !2751)
!22799 = !DILocation(line: 343, column: 9, scope: !22795)
!22800 = !DILocation(line: 343, column: 18, scope: !22795)
!22801 = !DILocation(line: 343, column: 21, scope: !22795)
!22802 = !DILocation(line: 344, column: 19, scope: !22795)
!22803 = !DILocation(line: 344, column: 3, scope: !22795)
!22804 = !DILocation(line: 345, column: 9, scope: !22795)
!22805 = !DILocation(line: 345, column: 3, scope: !22795)
!22806 = !DILocation(line: 346, column: 11, scope: !22795)
!22807 = !DILocation(line: 346, column: 28, scope: !22795)
!22808 = !DILocation(line: 346, column: 20, scope: !22795)
!22809 = !DILocation(line: 346, column: 3, scope: !22795)
!22810 = distinct !DISubprogram(name: "isaac_refill", scope: !22811, file: !22811, line: 90, type: !2850, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2847, retainedNodes: !140)
!22811 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!22812 = !DILocalVariable(name: "s", arg: 1, scope: !22810, file: !22811, line: 90, type: !2852)
!22813 = !DILocation(line: 90, column: 35, scope: !22810)
!22814 = !DILocalVariable(name: "result", arg: 2, scope: !22810, file: !22811, line: 90, type: !2846)
!22815 = !DILocation(line: 90, column: 49, scope: !22810)
!22816 = !DILocalVariable(name: "a", scope: !22810, file: !22811, line: 93, type: !2813)
!22817 = !DILocation(line: 93, column: 14, scope: !22810)
!22818 = !DILocation(line: 93, column: 18, scope: !22810)
!22819 = !DILocation(line: 93, column: 21, scope: !22810)
!22820 = !{!22711, !3178, i64 2048}
!22821 = !DILocalVariable(name: "b", scope: !22810, file: !22811, line: 94, type: !2813)
!22822 = !DILocation(line: 94, column: 14, scope: !22810)
!22823 = !DILocation(line: 94, column: 18, scope: !22810)
!22824 = !DILocation(line: 94, column: 21, scope: !22810)
!22825 = !{!22711, !3178, i64 2056}
!22826 = !DILocation(line: 94, column: 28, scope: !22810)
!22827 = !DILocation(line: 94, column: 31, scope: !22810)
!22828 = !DILocation(line: 94, column: 26, scope: !22810)
!22829 = !{!22711, !3178, i64 2064}
!22830 = !DILocation(line: 94, column: 23, scope: !22810)
!22831 = !DILocalVariable(name: "m", scope: !22810, file: !22811, line: 97, type: !2846)
!22832 = !DILocation(line: 97, column: 15, scope: !22810)
!22833 = !DILocation(line: 97, column: 19, scope: !22810)
!22834 = !DILocation(line: 97, column: 22, scope: !22810)
!22835 = !DILocalVariable(name: "r", scope: !22810, file: !22811, line: 98, type: !2846)
!22836 = !DILocation(line: 98, column: 15, scope: !22810)
!22837 = !DILocation(line: 98, column: 19, scope: !22810)
!22838 = !DILocation(line: 116, column: 3, scope: !22810)
!22839 = !DILocalVariable(name: "x", scope: !22840, file: !22811, line: 118, type: !2813)
!22840 = distinct !DILexicalBlock(scope: !22841, file: !22811, line: 118, column: 7)
!22841 = distinct !DILexicalBlock(scope: !22810, file: !22811, line: 117, column: 5)
!22842 = !DILocation(line: 118, column: 7, scope: !22840)
!22843 = !DILocalVariable(name: "y", scope: !22840, file: !22811, line: 118, type: !2813)
!22844 = !DILocalVariable(name: "x", scope: !22845, file: !22811, line: 119, type: !2813)
!22845 = distinct !DILexicalBlock(scope: !22841, file: !22811, line: 119, column: 7)
!22846 = !DILocation(line: 119, column: 7, scope: !22845)
!22847 = !DILocalVariable(name: "y", scope: !22845, file: !22811, line: 119, type: !2813)
!22848 = !DILocalVariable(name: "x", scope: !22849, file: !22811, line: 120, type: !2813)
!22849 = distinct !DILexicalBlock(scope: !22841, file: !22811, line: 120, column: 7)
!22850 = !DILocation(line: 120, column: 7, scope: !22849)
!22851 = !DILocalVariable(name: "y", scope: !22849, file: !22811, line: 120, type: !2813)
!22852 = !DILocalVariable(name: "x", scope: !22853, file: !22811, line: 121, type: !2813)
!22853 = distinct !DILexicalBlock(scope: !22841, file: !22811, line: 121, column: 7)
!22854 = !DILocation(line: 121, column: 7, scope: !22853)
!22855 = !DILocalVariable(name: "y", scope: !22853, file: !22811, line: 121, type: !2813)
!22856 = !DILocation(line: 122, column: 9, scope: !22841)
!22857 = !DILocation(line: 123, column: 5, scope: !22841)
!22858 = !DILocation(line: 124, column: 13, scope: !22810)
!22859 = !DILocation(line: 124, column: 21, scope: !22810)
!22860 = !DILocation(line: 124, column: 24, scope: !22810)
!22861 = !DILocation(line: 124, column: 26, scope: !22810)
!22862 = !DILocation(line: 124, column: 19, scope: !22810)
!22863 = distinct !{!22863, !22838, !22864}
!22864 = !DILocation(line: 124, column: 32, scope: !22810)
!22865 = !DILocation(line: 126, column: 3, scope: !22810)
!22866 = !DILocalVariable(name: "x", scope: !22867, file: !22811, line: 128, type: !2813)
!22867 = distinct !DILexicalBlock(scope: !22868, file: !22811, line: 128, column: 7)
!22868 = distinct !DILexicalBlock(scope: !22810, file: !22811, line: 127, column: 5)
!22869 = !DILocation(line: 128, column: 7, scope: !22867)
!22870 = !DILocalVariable(name: "y", scope: !22867, file: !22811, line: 128, type: !2813)
!22871 = !DILocalVariable(name: "x", scope: !22872, file: !22811, line: 129, type: !2813)
!22872 = distinct !DILexicalBlock(scope: !22868, file: !22811, line: 129, column: 7)
!22873 = !DILocation(line: 129, column: 7, scope: !22872)
!22874 = !DILocalVariable(name: "y", scope: !22872, file: !22811, line: 129, type: !2813)
!22875 = !DILocalVariable(name: "x", scope: !22876, file: !22811, line: 130, type: !2813)
!22876 = distinct !DILexicalBlock(scope: !22868, file: !22811, line: 130, column: 7)
!22877 = !DILocation(line: 130, column: 7, scope: !22876)
!22878 = !DILocalVariable(name: "y", scope: !22876, file: !22811, line: 130, type: !2813)
!22879 = !DILocalVariable(name: "x", scope: !22880, file: !22811, line: 131, type: !2813)
!22880 = distinct !DILexicalBlock(scope: !22868, file: !22811, line: 131, column: 7)
!22881 = !DILocation(line: 131, column: 7, scope: !22880)
!22882 = !DILocalVariable(name: "y", scope: !22880, file: !22811, line: 131, type: !2813)
!22883 = !DILocation(line: 132, column: 9, scope: !22868)
!22884 = !DILocation(line: 133, column: 5, scope: !22868)
!22885 = !DILocation(line: 134, column: 13, scope: !22810)
!22886 = !DILocation(line: 134, column: 21, scope: !22810)
!22887 = !DILocation(line: 134, column: 24, scope: !22810)
!22888 = !DILocation(line: 134, column: 26, scope: !22810)
!22889 = !DILocation(line: 134, column: 19, scope: !22810)
!22890 = distinct !{!22890, !22865, !22891}
!22891 = !DILocation(line: 134, column: 39, scope: !22810)
!22892 = !DILocation(line: 136, column: 10, scope: !22810)
!22893 = !DILocation(line: 136, column: 3, scope: !22810)
!22894 = !DILocation(line: 136, column: 6, scope: !22810)
!22895 = !DILocation(line: 136, column: 8, scope: !22810)
!22896 = !DILocation(line: 137, column: 10, scope: !22810)
!22897 = !DILocation(line: 137, column: 3, scope: !22810)
!22898 = !DILocation(line: 137, column: 6, scope: !22810)
!22899 = !DILocation(line: 137, column: 8, scope: !22810)
!22900 = !DILocation(line: 138, column: 1, scope: !22810)
!22901 = distinct !DISubprogram(name: "ind", scope: !22811, file: !22811, line: 68, type: !2861, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2847, retainedNodes: !140)
!22902 = !DILocalVariable(name: "m", arg: 1, scope: !22901, file: !22811, line: 68, type: !2863)
!22903 = !DILocation(line: 68, column: 24, scope: !22901)
!22904 = !DILocalVariable(name: "x", arg: 2, scope: !22901, file: !22811, line: 68, type: !2813)
!22905 = !DILocation(line: 68, column: 38, scope: !22901)
!22906 = !DILocalVariable(name: "void_m", scope: !22907, file: !22811, line: 75, type: !428)
!22907 = distinct !DILexicalBlock(scope: !22908, file: !22811, line: 71, column: 5)
!22908 = distinct !DILexicalBlock(scope: !22901, file: !22811, line: 70, column: 7)
!22909 = !DILocation(line: 75, column: 19, scope: !22907)
!22910 = !DILocation(line: 75, column: 28, scope: !22907)
!22911 = !DILocalVariable(name: "base_p", scope: !22907, file: !22811, line: 76, type: !112)
!22912 = !DILocation(line: 76, column: 19, scope: !22907)
!22913 = !DILocation(line: 76, column: 28, scope: !22907)
!22914 = !DILocalVariable(name: "word_p", scope: !22907, file: !22811, line: 77, type: !428)
!22915 = !DILocation(line: 77, column: 19, scope: !22907)
!22916 = !DILocation(line: 77, column: 28, scope: !22907)
!22917 = !DILocation(line: 77, column: 38, scope: !22907)
!22918 = !DILocation(line: 77, column: 40, scope: !22907)
!22919 = !DILocation(line: 77, column: 35, scope: !22907)
!22920 = !DILocalVariable(name: "p", scope: !22907, file: !22811, line: 78, type: !2863)
!22921 = !DILocation(line: 78, column: 25, scope: !22907)
!22922 = !DILocation(line: 78, column: 29, scope: !22907)
!22923 = !DILocation(line: 79, column: 15, scope: !22907)
!22924 = !DILocation(line: 79, column: 14, scope: !22907)
!22925 = !DILocation(line: 79, column: 7, scope: !22907)
!22926 = distinct !DISubprogram(name: "just", scope: !22811, file: !22811, line: 60, type: !2865, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2847, retainedNodes: !140)
!22927 = !DILocalVariable(name: "a", arg: 1, scope: !22926, file: !22811, line: 60, type: !2813)
!22928 = !DILocation(line: 60, column: 18, scope: !22926)
!22929 = !DILocalVariable(name: "desired_bits", scope: !22926, file: !22811, line: 62, type: !2813)
!22930 = !DILocation(line: 62, column: 14, scope: !22926)
!22931 = !DILocation(line: 63, column: 10, scope: !22926)
!22932 = !DILocation(line: 63, column: 14, scope: !22926)
!22933 = !DILocation(line: 63, column: 12, scope: !22926)
!22934 = !DILocation(line: 63, column: 3, scope: !22926)
!22935 = distinct !DISubprogram(name: "isaac_seed", scope: !22811, file: !22811, line: 248, type: !2859, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2847, retainedNodes: !140)
!22936 = !DILocalVariable(name: "s", arg: 1, scope: !22935, file: !22811, line: 248, type: !2852)
!22937 = !DILocation(line: 248, column: 33, scope: !22935)
!22938 = !DILocalVariable(name: "a", scope: !22935, file: !22811, line: 250, type: !2813)
!22939 = !DILocation(line: 250, column: 14, scope: !22935)
!22940 = !DILocalVariable(name: "b", scope: !22935, file: !22811, line: 251, type: !2813)
!22941 = !DILocation(line: 251, column: 14, scope: !22935)
!22942 = !DILocalVariable(name: "c", scope: !22935, file: !22811, line: 252, type: !2813)
!22943 = !DILocation(line: 252, column: 14, scope: !22935)
!22944 = !DILocalVariable(name: "d", scope: !22935, file: !22811, line: 253, type: !2813)
!22945 = !DILocation(line: 253, column: 14, scope: !22935)
!22946 = !DILocalVariable(name: "e", scope: !22935, file: !22811, line: 254, type: !2813)
!22947 = !DILocation(line: 254, column: 14, scope: !22935)
!22948 = !DILocalVariable(name: "f", scope: !22935, file: !22811, line: 255, type: !2813)
!22949 = !DILocation(line: 255, column: 14, scope: !22935)
!22950 = !DILocalVariable(name: "g", scope: !22935, file: !22811, line: 256, type: !2813)
!22951 = !DILocation(line: 256, column: 14, scope: !22935)
!22952 = !DILocalVariable(name: "h", scope: !22935, file: !22811, line: 257, type: !2813)
!22953 = !DILocation(line: 257, column: 14, scope: !22935)
!22954 = !DILocalVariable(name: "i", scope: !22955, file: !22811, line: 269, type: !5)
!22955 = distinct !DILexicalBlock(scope: !22935, file: !22811, line: 269, column: 3)
!22956 = !DILocation(line: 269, column: 3, scope: !22955)
!22957 = !DILocation(line: 269, column: 3, scope: !22958)
!22958 = distinct !DILexicalBlock(scope: !22955, file: !22811, line: 269, column: 3)
!22959 = !DILocation(line: 269, column: 3, scope: !22960)
!22960 = distinct !DILexicalBlock(scope: !22958, file: !22811, line: 269, column: 3)
!22961 = !DILocation(line: 269, column: 3, scope: !22962)
!22962 = distinct !DILexicalBlock(scope: !22960, file: !22811, line: 269, column: 3)
!22963 = !DILocation(line: 269, column: 3, scope: !22964)
!22964 = distinct !DILexicalBlock(scope: !22962, file: !22811, line: 269, column: 3)
!22965 = distinct !{!22965, !22957, !22957}
!22966 = !DILocalVariable(name: "i", scope: !22967, file: !22811, line: 270, type: !5)
!22967 = distinct !DILexicalBlock(scope: !22935, file: !22811, line: 270, column: 3)
!22968 = !DILocation(line: 270, column: 3, scope: !22967)
!22969 = !DILocation(line: 270, column: 3, scope: !22970)
!22970 = distinct !DILexicalBlock(scope: !22967, file: !22811, line: 270, column: 3)
!22971 = !DILocation(line: 270, column: 3, scope: !22972)
!22972 = distinct !DILexicalBlock(scope: !22970, file: !22811, line: 270, column: 3)
!22973 = !DILocation(line: 270, column: 3, scope: !22974)
!22974 = distinct !DILexicalBlock(scope: !22972, file: !22811, line: 270, column: 3)
!22975 = !DILocation(line: 270, column: 3, scope: !22976)
!22976 = distinct !DILexicalBlock(scope: !22974, file: !22811, line: 270, column: 3)
!22977 = distinct !{!22977, !22969, !22969}
!22978 = !DILocation(line: 272, column: 17, scope: !22935)
!22979 = !DILocation(line: 272, column: 20, scope: !22935)
!22980 = !DILocation(line: 272, column: 22, scope: !22935)
!22981 = !DILocation(line: 272, column: 10, scope: !22935)
!22982 = !DILocation(line: 272, column: 13, scope: !22935)
!22983 = !DILocation(line: 272, column: 15, scope: !22935)
!22984 = !DILocation(line: 272, column: 3, scope: !22935)
!22985 = !DILocation(line: 272, column: 6, scope: !22935)
!22986 = !DILocation(line: 272, column: 8, scope: !22935)
!22987 = !DILocation(line: 273, column: 1, scope: !22935)
!22988 = distinct !DISubprogram(name: "dup_safer", scope: !22989, file: !22989, line: 31, type: !1828, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2867, retainedNodes: !140)
!22989 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!22990 = !DILocalVariable(name: "fd", arg: 1, scope: !22988, file: !22989, line: 31, type: !5)
!22991 = !DILocation(line: 31, column: 16, scope: !22988)
!22992 = !DILocation(line: 33, column: 17, scope: !22988)
!22993 = !DILocation(line: 33, column: 10, scope: !22988)
!22994 = !DILocation(line: 33, column: 3, scope: !22988)
!22995 = distinct !DISubprogram(name: "explicit_bzero", scope: !22996, file: !22996, line: 39, type: !2872, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2869, retainedNodes: !140)
!22996 = !DIFile(filename: "lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!22997 = !DILocalVariable(name: "s", arg: 1, scope: !22995, file: !22996, line: 39, type: !47)
!22998 = !DILocation(line: 39, column: 23, scope: !22995)
!22999 = !DILocalVariable(name: "len", arg: 2, scope: !22995, file: !22996, line: 39, type: !52)
!23000 = !DILocation(line: 39, column: 33, scope: !22995)
!23001 = !DILocation(line: 44, column: 11, scope: !22995)
!23002 = !DILocation(line: 44, column: 20, scope: !22995)
!23003 = !DILocation(line: 44, column: 3, scope: !22995)
!23004 = !DILocation(line: 50, column: 1, scope: !22995)
!23005 = distinct !DISubprogram(name: "rpl_fclose", scope: !23006, file: !23006, line: 58, type: !2877, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2874, retainedNodes: !140)
!23006 = !DIFile(filename: "lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!23007 = !DILocalVariable(name: "fp", arg: 1, scope: !23005, file: !23006, line: 58, type: !2879)
!23008 = !DILocation(line: 58, column: 19, scope: !23005)
!23009 = !DILocalVariable(name: "saved_errno", scope: !23005, file: !23006, line: 60, type: !5)
!23010 = !DILocation(line: 60, column: 7, scope: !23005)
!23011 = !DILocalVariable(name: "fd", scope: !23005, file: !23006, line: 61, type: !5)
!23012 = !DILocation(line: 61, column: 7, scope: !23005)
!23013 = !DILocalVariable(name: "result", scope: !23005, file: !23006, line: 62, type: !5)
!23014 = !DILocation(line: 62, column: 7, scope: !23005)
!23015 = !DILocation(line: 65, column: 16, scope: !23005)
!23016 = !DILocation(line: 65, column: 8, scope: !23005)
!23017 = !DILocation(line: 65, column: 6, scope: !23005)
!23018 = !DILocation(line: 66, column: 7, scope: !23019)
!23019 = distinct !DILexicalBlock(scope: !23005, file: !23006, line: 66, column: 7)
!23020 = !DILocation(line: 66, column: 10, scope: !23019)
!23021 = !DILocation(line: 66, column: 7, scope: !23005)
!23022 = !DILocation(line: 67, column: 28, scope: !23019)
!23023 = !DILocation(line: 67, column: 12, scope: !23019)
!23024 = !DILocation(line: 67, column: 5, scope: !23019)
!23025 = !DILocation(line: 72, column: 9, scope: !23026)
!23026 = distinct !DILexicalBlock(scope: !23005, file: !23006, line: 72, column: 7)
!23027 = !DILocation(line: 72, column: 23, scope: !23026)
!23028 = !DILocation(line: 72, column: 41, scope: !23026)
!23029 = !DILocation(line: 72, column: 33, scope: !23026)
!23030 = !DILocation(line: 72, column: 26, scope: !23026)
!23031 = !DILocation(line: 72, column: 59, scope: !23026)
!23032 = !DILocation(line: 73, column: 7, scope: !23026)
!23033 = !DILocation(line: 73, column: 18, scope: !23026)
!23034 = !DILocation(line: 73, column: 10, scope: !23026)
!23035 = !DILocation(line: 72, column: 7, scope: !23005)
!23036 = !DILocation(line: 74, column: 19, scope: !23026)
!23037 = !DILocation(line: 74, column: 17, scope: !23026)
!23038 = !DILocation(line: 74, column: 5, scope: !23026)
!23039 = !DILocation(line: 100, column: 28, scope: !23005)
!23040 = !DILocation(line: 100, column: 12, scope: !23005)
!23041 = !DILocation(line: 100, column: 10, scope: !23005)
!23042 = !DILocation(line: 105, column: 7, scope: !23043)
!23043 = distinct !DILexicalBlock(scope: !23005, file: !23006, line: 105, column: 7)
!23044 = !DILocation(line: 105, column: 19, scope: !23043)
!23045 = !DILocation(line: 105, column: 7, scope: !23005)
!23046 = !DILocation(line: 107, column: 15, scope: !23047)
!23047 = distinct !DILexicalBlock(scope: !23043, file: !23006, line: 106, column: 5)
!23048 = !DILocation(line: 107, column: 7, scope: !23047)
!23049 = !DILocation(line: 107, column: 13, scope: !23047)
!23050 = !DILocation(line: 108, column: 14, scope: !23047)
!23051 = !DILocation(line: 109, column: 5, scope: !23047)
!23052 = !DILocation(line: 111, column: 10, scope: !23005)
!23053 = !DILocation(line: 111, column: 3, scope: !23005)
!23054 = !DILocation(line: 112, column: 1, scope: !23005)
!23055 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1301, file: !1301, line: 202, type: !23056, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1302, retainedNodes: !140)
!23056 = !DISubroutineType(types: !23057)
!23057 = !{!5, !5, !5, null}
!23058 = !DILocalVariable(name: "fd", arg: 1, scope: !23055, file: !1301, line: 202, type: !5)
!23059 = !DILocation(line: 202, column: 12, scope: !23055)
!23060 = !DILocalVariable(name: "action", arg: 2, scope: !23055, file: !1301, line: 202, type: !5)
!23061 = !DILocation(line: 202, column: 20, scope: !23055)
!23062 = !DILocalVariable(name: "arg", scope: !23055, file: !1301, line: 208, type: !1305)
!23063 = !DILocation(line: 208, column: 11, scope: !23055)
!23064 = !DILocalVariable(name: "result", scope: !23055, file: !1301, line: 209, type: !5)
!23065 = !DILocation(line: 209, column: 7, scope: !23055)
!23066 = !DILocation(line: 210, column: 3, scope: !23055)
!23067 = !DILocation(line: 211, column: 11, scope: !23055)
!23068 = !DILocation(line: 211, column: 3, scope: !23055)
!23069 = !DILocalVariable(name: "target", scope: !23070, file: !1301, line: 215, type: !5)
!23070 = distinct !DILexicalBlock(scope: !23071, file: !1301, line: 214, column: 7)
!23071 = distinct !DILexicalBlock(scope: !23055, file: !1301, line: 212, column: 5)
!23072 = !DILocation(line: 215, column: 13, scope: !23070)
!23073 = !DILocation(line: 215, column: 22, scope: !23070)
!23074 = !DILocation(line: 216, column: 35, scope: !23070)
!23075 = !DILocation(line: 216, column: 39, scope: !23070)
!23076 = !DILocation(line: 216, column: 18, scope: !23070)
!23077 = !DILocation(line: 216, column: 16, scope: !23070)
!23078 = !DILocation(line: 217, column: 9, scope: !23070)
!23079 = !DILocalVariable(name: "target", scope: !23080, file: !1301, line: 222, type: !5)
!23080 = distinct !DILexicalBlock(scope: !23071, file: !1301, line: 221, column: 7)
!23081 = !DILocation(line: 222, column: 13, scope: !23080)
!23082 = !DILocation(line: 222, column: 22, scope: !23080)
!23083 = !DILocation(line: 223, column: 43, scope: !23080)
!23084 = !DILocation(line: 223, column: 47, scope: !23080)
!23085 = !DILocation(line: 223, column: 18, scope: !23080)
!23086 = !DILocation(line: 223, column: 16, scope: !23080)
!23087 = !DILocation(line: 224, column: 9, scope: !23080)
!23088 = !DILocation(line: 259, column: 17, scope: !23089)
!23089 = distinct !DILexicalBlock(scope: !23071, file: !1301, line: 257, column: 7)
!23090 = !DILocation(line: 259, column: 9, scope: !23089)
!23091 = !DILocation(line: 328, column: 29, scope: !23092)
!23092 = distinct !DILexicalBlock(scope: !23089, file: !1301, line: 260, column: 11)
!23093 = !DILocation(line: 328, column: 33, scope: !23092)
!23094 = !DILocation(line: 328, column: 22, scope: !23092)
!23095 = !DILocation(line: 328, column: 20, scope: !23092)
!23096 = !DILocation(line: 329, column: 13, scope: !23092)
!23097 = !DILocalVariable(name: "x", scope: !23098, file: !1301, line: 423, type: !5)
!23098 = distinct !DILexicalBlock(scope: !23092, file: !1301, line: 422, column: 13)
!23099 = !DILocation(line: 423, column: 19, scope: !23098)
!23100 = !DILocation(line: 423, column: 23, scope: !23098)
!23101 = !DILocation(line: 424, column: 31, scope: !23098)
!23102 = !DILocation(line: 424, column: 35, scope: !23098)
!23103 = !DILocation(line: 424, column: 43, scope: !23098)
!23104 = !DILocation(line: 424, column: 24, scope: !23098)
!23105 = !DILocation(line: 424, column: 22, scope: !23098)
!23106 = !DILocation(line: 426, column: 13, scope: !23092)
!23107 = !DILocalVariable(name: "p", scope: !23108, file: !1301, line: 431, type: !47)
!23108 = distinct !DILexicalBlock(scope: !23092, file: !1301, line: 430, column: 13)
!23109 = !DILocation(line: 431, column: 21, scope: !23108)
!23110 = !DILocation(line: 431, column: 25, scope: !23108)
!23111 = !DILocation(line: 432, column: 31, scope: !23108)
!23112 = !DILocation(line: 432, column: 35, scope: !23108)
!23113 = !DILocation(line: 432, column: 43, scope: !23108)
!23114 = !DILocation(line: 432, column: 24, scope: !23108)
!23115 = !DILocation(line: 432, column: 22, scope: !23108)
!23116 = !DILocation(line: 434, column: 13, scope: !23092)
!23117 = !DILocation(line: 439, column: 9, scope: !23089)
!23118 = !DILocation(line: 442, column: 3, scope: !23055)
!23119 = !DILocation(line: 443, column: 10, scope: !23055)
!23120 = !DILocation(line: 443, column: 3, scope: !23055)
!23121 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1301, file: !1301, line: 447, type: !420, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1302, retainedNodes: !140)
!23122 = !DILocalVariable(name: "fd", arg: 1, scope: !23121, file: !1301, line: 447, type: !5)
!23123 = !DILocation(line: 447, column: 22, scope: !23121)
!23124 = !DILocalVariable(name: "target", arg: 2, scope: !23121, file: !1301, line: 447, type: !5)
!23125 = !DILocation(line: 447, column: 30, scope: !23121)
!23126 = !DILocalVariable(name: "result", scope: !23121, file: !1301, line: 449, type: !5)
!23127 = !DILocation(line: 449, column: 7, scope: !23121)
!23128 = !DILocation(line: 482, column: 19, scope: !23121)
!23129 = !DILocation(line: 482, column: 32, scope: !23121)
!23130 = !DILocation(line: 482, column: 12, scope: !23121)
!23131 = !DILocation(line: 482, column: 10, scope: !23121)
!23132 = !DILocation(line: 484, column: 10, scope: !23121)
!23133 = !DILocation(line: 484, column: 3, scope: !23121)
!23134 = !DILocalVariable(name: "fd", arg: 1, scope: !1300, file: !1301, line: 488, type: !5)
!23135 = !DILocation(line: 488, column: 30, scope: !1300)
!23136 = !DILocalVariable(name: "target", arg: 2, scope: !1300, file: !1301, line: 488, type: !5)
!23137 = !DILocation(line: 488, column: 38, scope: !1300)
!23138 = !DILocalVariable(name: "result", scope: !1300, file: !1301, line: 490, type: !5)
!23139 = !DILocation(line: 490, column: 7, scope: !1300)
!23140 = !DILocation(line: 508, column: 12, scope: !23141)
!23141 = distinct !DILexicalBlock(scope: !1300, file: !1301, line: 508, column: 7)
!23142 = !DILocation(line: 508, column: 9, scope: !23141)
!23143 = !DILocation(line: 508, column: 7, scope: !1300)
!23144 = !DILocation(line: 510, column: 23, scope: !23145)
!23145 = distinct !DILexicalBlock(scope: !23141, file: !1301, line: 509, column: 5)
!23146 = !DILocation(line: 510, column: 44, scope: !23145)
!23147 = !DILocation(line: 510, column: 16, scope: !23145)
!23148 = !DILocation(line: 510, column: 14, scope: !23145)
!23149 = !DILocation(line: 511, column: 16, scope: !23150)
!23150 = distinct !DILexicalBlock(scope: !23145, file: !1301, line: 511, column: 11)
!23151 = !DILocation(line: 511, column: 13, scope: !23150)
!23152 = !DILocation(line: 511, column: 23, scope: !23150)
!23153 = !DILocation(line: 511, column: 26, scope: !23150)
!23154 = !DILocation(line: 511, column: 32, scope: !23150)
!23155 = !DILocation(line: 511, column: 11, scope: !23145)
!23156 = !DILocation(line: 513, column: 30, scope: !23157)
!23157 = distinct !DILexicalBlock(scope: !23150, file: !1301, line: 512, column: 9)
!23158 = !DILocation(line: 518, column: 9, scope: !23157)
!23159 = !DILocation(line: 521, column: 37, scope: !23160)
!23160 = distinct !DILexicalBlock(scope: !23150, file: !1301, line: 520, column: 9)
!23161 = !DILocation(line: 521, column: 41, scope: !23160)
!23162 = !DILocation(line: 521, column: 20, scope: !23160)
!23163 = !DILocation(line: 521, column: 18, scope: !23160)
!23164 = !DILocation(line: 522, column: 15, scope: !23165)
!23165 = distinct !DILexicalBlock(scope: !23160, file: !1301, line: 522, column: 15)
!23166 = !DILocation(line: 522, column: 22, scope: !23165)
!23167 = !DILocation(line: 522, column: 15, scope: !23160)
!23168 = !DILocation(line: 523, column: 32, scope: !23165)
!23169 = !DILocation(line: 523, column: 13, scope: !23165)
!23170 = !DILocation(line: 525, column: 5, scope: !23145)
!23171 = !DILocation(line: 528, column: 31, scope: !23141)
!23172 = !DILocation(line: 528, column: 35, scope: !23141)
!23173 = !DILocation(line: 528, column: 14, scope: !23141)
!23174 = !DILocation(line: 528, column: 12, scope: !23141)
!23175 = !DILocation(line: 529, column: 12, scope: !23176)
!23176 = distinct !DILexicalBlock(scope: !1300, file: !1301, line: 529, column: 7)
!23177 = !DILocation(line: 529, column: 9, scope: !23176)
!23178 = !DILocation(line: 529, column: 19, scope: !23176)
!23179 = !DILocation(line: 529, column: 22, scope: !23176)
!23180 = !DILocation(line: 529, column: 41, scope: !23176)
!23181 = !DILocation(line: 529, column: 7, scope: !1300)
!23182 = !DILocalVariable(name: "flags", scope: !23183, file: !1301, line: 531, type: !5)
!23183 = distinct !DILexicalBlock(scope: !23176, file: !1301, line: 530, column: 5)
!23184 = !DILocation(line: 531, column: 11, scope: !23183)
!23185 = !DILocation(line: 531, column: 26, scope: !23183)
!23186 = !DILocation(line: 531, column: 19, scope: !23183)
!23187 = !DILocation(line: 532, column: 11, scope: !23188)
!23188 = distinct !DILexicalBlock(scope: !23183, file: !1301, line: 532, column: 11)
!23189 = !DILocation(line: 532, column: 17, scope: !23188)
!23190 = !DILocation(line: 532, column: 21, scope: !23188)
!23191 = !DILocation(line: 532, column: 31, scope: !23188)
!23192 = !DILocation(line: 532, column: 48, scope: !23188)
!23193 = !DILocation(line: 532, column: 54, scope: !23188)
!23194 = !DILocation(line: 532, column: 24, scope: !23188)
!23195 = !DILocation(line: 532, column: 68, scope: !23188)
!23196 = !DILocation(line: 532, column: 11, scope: !23183)
!23197 = !DILocalVariable(name: "saved_errno", scope: !23198, file: !1301, line: 534, type: !5)
!23198 = distinct !DILexicalBlock(scope: !23188, file: !1301, line: 533, column: 9)
!23199 = !DILocation(line: 534, column: 15, scope: !23198)
!23200 = !DILocation(line: 534, column: 29, scope: !23198)
!23201 = !DILocation(line: 535, column: 18, scope: !23198)
!23202 = !DILocation(line: 535, column: 11, scope: !23198)
!23203 = !DILocation(line: 536, column: 19, scope: !23198)
!23204 = !DILocation(line: 536, column: 11, scope: !23198)
!23205 = !DILocation(line: 536, column: 17, scope: !23198)
!23206 = !DILocation(line: 537, column: 18, scope: !23198)
!23207 = !DILocation(line: 538, column: 9, scope: !23198)
!23208 = !DILocation(line: 539, column: 5, scope: !23183)
!23209 = !DILocation(line: 541, column: 10, scope: !1300)
!23210 = !DILocation(line: 541, column: 3, scope: !1300)
!23211 = distinct !DISubprogram(name: "rpl_nl_langinfo", scope: !23212, file: !23212, line: 99, type: !2922, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2919, retainedNodes: !140)
!23212 = !DIFile(filename: "lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!23213 = !DILocalVariable(name: "item", arg: 1, scope: !23211, file: !23212, line: 99, type: !2924)
!23214 = !DILocation(line: 99, column: 26, scope: !23211)
!23215 = !DILocation(line: 101, column: 11, scope: !23211)
!23216 = !DILocation(line: 101, column: 3, scope: !23211)
!23217 = !DILocation(line: 126, column: 14, scope: !23218)
!23218 = distinct !DILexicalBlock(scope: !23211, file: !23212, line: 102, column: 5)
!23219 = !DILocation(line: 126, column: 19, scope: !23218)
!23220 = !DILocation(line: 126, column: 30, scope: !23218)
!23221 = !DILocation(line: 126, column: 12, scope: !23218)
!23222 = !DILocation(line: 127, column: 7, scope: !23218)
!23223 = !DILocation(line: 162, column: 7, scope: !23218)
!23224 = !DILocation(line: 164, column: 23, scope: !23211)
!23225 = !DILocation(line: 164, column: 10, scope: !23211)
!23226 = !DILocation(line: 164, column: 3, scope: !23211)
!23227 = distinct !DISubprogram(name: "c_isalnum", scope: !23228, file: !23228, line: 169, type: !304, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23228 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mohamad/clone/coreutils")
!23229 = !DILocalVariable(name: "c", arg: 1, scope: !23227, file: !23228, line: 169, type: !5)
!23230 = !DILocation(line: 169, column: 16, scope: !23227)
!23231 = !DILocation(line: 171, column: 11, scope: !23227)
!23232 = !DILocation(line: 171, column: 3, scope: !23227)
!23233 = !DILocation(line: 176, column: 7, scope: !23234)
!23234 = distinct !DILexicalBlock(scope: !23227, file: !23228, line: 172, column: 5)
!23235 = !DILocation(line: 178, column: 7, scope: !23234)
!23236 = !DILocation(line: 180, column: 1, scope: !23227)
!23237 = distinct !DISubprogram(name: "c_isalpha", scope: !23228, file: !23228, line: 183, type: !304, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23238 = !DILocalVariable(name: "c", arg: 1, scope: !23237, file: !23228, line: 183, type: !5)
!23239 = !DILocation(line: 183, column: 16, scope: !23237)
!23240 = !DILocation(line: 185, column: 11, scope: !23237)
!23241 = !DILocation(line: 185, column: 3, scope: !23237)
!23242 = !DILocation(line: 189, column: 7, scope: !23243)
!23243 = distinct !DILexicalBlock(scope: !23237, file: !23228, line: 186, column: 5)
!23244 = !DILocation(line: 191, column: 7, scope: !23243)
!23245 = !DILocation(line: 193, column: 1, scope: !23237)
!23246 = distinct !DISubprogram(name: "c_isascii", scope: !23228, file: !23228, line: 198, type: !304, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23247 = !DILocalVariable(name: "c", arg: 1, scope: !23246, file: !23228, line: 198, type: !5)
!23248 = !DILocation(line: 198, column: 16, scope: !23246)
!23249 = !DILocation(line: 200, column: 11, scope: !23246)
!23250 = !DILocation(line: 200, column: 3, scope: !23246)
!23251 = !DILocation(line: 208, column: 7, scope: !23252)
!23252 = distinct !DILexicalBlock(scope: !23246, file: !23228, line: 201, column: 5)
!23253 = !DILocation(line: 210, column: 7, scope: !23252)
!23254 = !DILocation(line: 212, column: 1, scope: !23246)
!23255 = distinct !DISubprogram(name: "c_isblank", scope: !23228, file: !23228, line: 215, type: !304, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23256 = !DILocalVariable(name: "c", arg: 1, scope: !23255, file: !23228, line: 215, type: !5)
!23257 = !DILocation(line: 215, column: 16, scope: !23255)
!23258 = !DILocation(line: 217, column: 10, scope: !23255)
!23259 = !DILocation(line: 217, column: 12, scope: !23255)
!23260 = !DILocation(line: 217, column: 19, scope: !23255)
!23261 = !DILocation(line: 217, column: 22, scope: !23255)
!23262 = !DILocation(line: 217, column: 24, scope: !23255)
!23263 = !DILocation(line: 217, column: 3, scope: !23255)
!23264 = distinct !DISubprogram(name: "c_iscntrl", scope: !23228, file: !23228, line: 221, type: !304, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23265 = !DILocalVariable(name: "c", arg: 1, scope: !23264, file: !23228, line: 221, type: !5)
!23266 = !DILocation(line: 221, column: 16, scope: !23264)
!23267 = !DILocation(line: 223, column: 11, scope: !23264)
!23268 = !DILocation(line: 223, column: 3, scope: !23264)
!23269 = !DILocation(line: 226, column: 7, scope: !23270)
!23270 = distinct !DILexicalBlock(scope: !23264, file: !23228, line: 224, column: 5)
!23271 = !DILocation(line: 228, column: 7, scope: !23270)
!23272 = !DILocation(line: 230, column: 1, scope: !23264)
!23273 = distinct !DISubprogram(name: "c_isdigit", scope: !23228, file: !23228, line: 233, type: !304, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23274 = !DILocalVariable(name: "c", arg: 1, scope: !23273, file: !23228, line: 233, type: !5)
!23275 = !DILocation(line: 233, column: 16, scope: !23273)
!23276 = !DILocation(line: 235, column: 11, scope: !23273)
!23277 = !DILocation(line: 235, column: 3, scope: !23273)
!23278 = !DILocation(line: 238, column: 7, scope: !23279)
!23279 = distinct !DILexicalBlock(scope: !23273, file: !23228, line: 236, column: 5)
!23280 = !DILocation(line: 240, column: 7, scope: !23279)
!23281 = !DILocation(line: 242, column: 1, scope: !23273)
!23282 = distinct !DISubprogram(name: "c_isgraph", scope: !23228, file: !23228, line: 245, type: !304, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23283 = !DILocalVariable(name: "c", arg: 1, scope: !23282, file: !23228, line: 245, type: !5)
!23284 = !DILocation(line: 245, column: 16, scope: !23282)
!23285 = !DILocation(line: 247, column: 11, scope: !23282)
!23286 = !DILocation(line: 247, column: 3, scope: !23282)
!23287 = !DILocation(line: 253, column: 7, scope: !23288)
!23288 = distinct !DILexicalBlock(scope: !23282, file: !23228, line: 248, column: 5)
!23289 = !DILocation(line: 255, column: 7, scope: !23288)
!23290 = !DILocation(line: 257, column: 1, scope: !23282)
!23291 = distinct !DISubprogram(name: "c_islower", scope: !23228, file: !23228, line: 260, type: !304, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23292 = !DILocalVariable(name: "c", arg: 1, scope: !23291, file: !23228, line: 260, type: !5)
!23293 = !DILocation(line: 260, column: 16, scope: !23291)
!23294 = !DILocation(line: 262, column: 11, scope: !23291)
!23295 = !DILocation(line: 262, column: 3, scope: !23291)
!23296 = !DILocation(line: 265, column: 7, scope: !23297)
!23297 = distinct !DILexicalBlock(scope: !23291, file: !23228, line: 263, column: 5)
!23298 = !DILocation(line: 267, column: 7, scope: !23297)
!23299 = !DILocation(line: 269, column: 1, scope: !23291)
!23300 = distinct !DISubprogram(name: "c_isprint", scope: !23228, file: !23228, line: 272, type: !304, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23301 = !DILocalVariable(name: "c", arg: 1, scope: !23300, file: !23228, line: 272, type: !5)
!23302 = !DILocation(line: 272, column: 16, scope: !23300)
!23303 = !DILocation(line: 274, column: 11, scope: !23300)
!23304 = !DILocation(line: 274, column: 3, scope: !23300)
!23305 = !DILocation(line: 281, column: 7, scope: !23306)
!23306 = distinct !DILexicalBlock(scope: !23300, file: !23228, line: 275, column: 5)
!23307 = !DILocation(line: 283, column: 7, scope: !23306)
!23308 = !DILocation(line: 285, column: 1, scope: !23300)
!23309 = distinct !DISubprogram(name: "c_ispunct", scope: !23228, file: !23228, line: 288, type: !304, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23310 = !DILocalVariable(name: "c", arg: 1, scope: !23309, file: !23228, line: 288, type: !5)
!23311 = !DILocation(line: 288, column: 16, scope: !23309)
!23312 = !DILocation(line: 290, column: 11, scope: !23309)
!23313 = !DILocation(line: 290, column: 3, scope: !23309)
!23314 = !DILocation(line: 293, column: 7, scope: !23315)
!23315 = distinct !DILexicalBlock(scope: !23309, file: !23228, line: 291, column: 5)
!23316 = !DILocation(line: 295, column: 7, scope: !23315)
!23317 = !DILocation(line: 297, column: 1, scope: !23309)
!23318 = distinct !DISubprogram(name: "c_isspace", scope: !23228, file: !23228, line: 300, type: !304, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23319 = !DILocalVariable(name: "c", arg: 1, scope: !23318, file: !23228, line: 300, type: !5)
!23320 = !DILocation(line: 300, column: 16, scope: !23318)
!23321 = !DILocation(line: 302, column: 11, scope: !23318)
!23322 = !DILocation(line: 302, column: 3, scope: !23318)
!23323 = !DILocation(line: 305, column: 7, scope: !23324)
!23324 = distinct !DILexicalBlock(scope: !23318, file: !23228, line: 303, column: 5)
!23325 = !DILocation(line: 307, column: 7, scope: !23324)
!23326 = !DILocation(line: 309, column: 1, scope: !23318)
!23327 = distinct !DISubprogram(name: "c_isupper", scope: !23228, file: !23228, line: 312, type: !304, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23328 = !DILocalVariable(name: "c", arg: 1, scope: !23327, file: !23228, line: 312, type: !5)
!23329 = !DILocation(line: 312, column: 16, scope: !23327)
!23330 = !DILocation(line: 314, column: 11, scope: !23327)
!23331 = !DILocation(line: 314, column: 3, scope: !23327)
!23332 = !DILocation(line: 317, column: 7, scope: !23333)
!23333 = distinct !DILexicalBlock(scope: !23327, file: !23228, line: 315, column: 5)
!23334 = !DILocation(line: 319, column: 7, scope: !23333)
!23335 = !DILocation(line: 321, column: 1, scope: !23327)
!23336 = distinct !DISubprogram(name: "c_isxdigit", scope: !23228, file: !23228, line: 324, type: !304, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23337 = !DILocalVariable(name: "c", arg: 1, scope: !23336, file: !23228, line: 324, type: !5)
!23338 = !DILocation(line: 324, column: 17, scope: !23336)
!23339 = !DILocation(line: 326, column: 11, scope: !23336)
!23340 = !DILocation(line: 326, column: 3, scope: !23336)
!23341 = !DILocation(line: 330, column: 7, scope: !23342)
!23342 = distinct !DILexicalBlock(scope: !23336, file: !23228, line: 327, column: 5)
!23343 = !DILocation(line: 332, column: 7, scope: !23342)
!23344 = !DILocation(line: 334, column: 1, scope: !23336)
!23345 = distinct !DISubprogram(name: "c_tolower", scope: !23228, file: !23228, line: 337, type: !1828, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23346 = !DILocalVariable(name: "c", arg: 1, scope: !23345, file: !23228, line: 337, type: !5)
!23347 = !DILocation(line: 337, column: 16, scope: !23345)
!23348 = !DILocation(line: 339, column: 11, scope: !23345)
!23349 = !DILocation(line: 339, column: 3, scope: !23345)
!23350 = !DILocation(line: 342, column: 14, scope: !23351)
!23351 = distinct !DILexicalBlock(scope: !23345, file: !23228, line: 340, column: 5)
!23352 = !DILocation(line: 342, column: 16, scope: !23351)
!23353 = !DILocation(line: 342, column: 22, scope: !23351)
!23354 = !DILocation(line: 342, column: 7, scope: !23351)
!23355 = !DILocation(line: 344, column: 14, scope: !23351)
!23356 = !DILocation(line: 344, column: 7, scope: !23351)
!23357 = !DILocation(line: 346, column: 1, scope: !23345)
!23358 = distinct !DISubprogram(name: "c_toupper", scope: !23228, file: !23228, line: 349, type: !1828, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2926, retainedNodes: !140)
!23359 = !DILocalVariable(name: "c", arg: 1, scope: !23358, file: !23228, line: 349, type: !5)
!23360 = !DILocation(line: 349, column: 16, scope: !23358)
!23361 = !DILocation(line: 351, column: 11, scope: !23358)
!23362 = !DILocation(line: 351, column: 3, scope: !23358)
!23363 = !DILocation(line: 354, column: 14, scope: !23364)
!23364 = distinct !DILexicalBlock(scope: !23358, file: !23228, line: 352, column: 5)
!23365 = !DILocation(line: 354, column: 16, scope: !23364)
!23366 = !DILocation(line: 354, column: 22, scope: !23364)
!23367 = !DILocation(line: 354, column: 7, scope: !23364)
!23368 = !DILocation(line: 356, column: 14, scope: !23364)
!23369 = !DILocation(line: 356, column: 7, scope: !23364)
!23370 = !DILocation(line: 358, column: 1, scope: !23358)
!23371 = distinct !DISubprogram(name: "fopen_safer", scope: !23372, file: !23372, line: 31, type: !2932, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2929, retainedNodes: !140)
!23372 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!23373 = !DILocalVariable(name: "file", arg: 1, scope: !23371, file: !23372, line: 31, type: !112)
!23374 = !DILocation(line: 31, column: 26, scope: !23371)
!23375 = !DILocalVariable(name: "mode", arg: 2, scope: !23371, file: !23372, line: 31, type: !112)
!23376 = !DILocation(line: 31, column: 44, scope: !23371)
!23377 = !DILocalVariable(name: "fp", scope: !23371, file: !23372, line: 33, type: !2934)
!23378 = !DILocation(line: 33, column: 9, scope: !23371)
!23379 = !DILocation(line: 33, column: 21, scope: !23371)
!23380 = !DILocation(line: 33, column: 27, scope: !23371)
!23381 = !DILocation(line: 33, column: 14, scope: !23371)
!23382 = !DILocation(line: 35, column: 7, scope: !23383)
!23383 = distinct !DILexicalBlock(scope: !23371, file: !23372, line: 35, column: 7)
!23384 = !DILocation(line: 35, column: 7, scope: !23371)
!23385 = !DILocalVariable(name: "fd", scope: !23386, file: !23372, line: 37, type: !5)
!23386 = distinct !DILexicalBlock(scope: !23383, file: !23372, line: 36, column: 5)
!23387 = !DILocation(line: 37, column: 11, scope: !23386)
!23388 = !DILocation(line: 37, column: 24, scope: !23386)
!23389 = !DILocation(line: 37, column: 16, scope: !23386)
!23390 = !DILocation(line: 39, column: 16, scope: !23391)
!23391 = distinct !DILexicalBlock(scope: !23386, file: !23372, line: 39, column: 11)
!23392 = !DILocation(line: 39, column: 13, scope: !23391)
!23393 = !DILocation(line: 39, column: 19, scope: !23391)
!23394 = !DILocation(line: 39, column: 22, scope: !23391)
!23395 = !DILocation(line: 39, column: 25, scope: !23391)
!23396 = !DILocation(line: 39, column: 11, scope: !23386)
!23397 = !DILocalVariable(name: "f", scope: !23398, file: !23372, line: 41, type: !5)
!23398 = distinct !DILexicalBlock(scope: !23391, file: !23372, line: 40, column: 9)
!23399 = !DILocation(line: 41, column: 15, scope: !23398)
!23400 = !DILocation(line: 41, column: 30, scope: !23398)
!23401 = !DILocation(line: 41, column: 19, scope: !23398)
!23402 = !DILocation(line: 43, column: 15, scope: !23403)
!23403 = distinct !DILexicalBlock(scope: !23398, file: !23372, line: 43, column: 15)
!23404 = !DILocation(line: 43, column: 17, scope: !23403)
!23405 = !DILocation(line: 43, column: 15, scope: !23398)
!23406 = !DILocalVariable(name: "e", scope: !23407, file: !23372, line: 45, type: !5)
!23407 = distinct !DILexicalBlock(scope: !23403, file: !23372, line: 44, column: 13)
!23408 = !DILocation(line: 45, column: 19, scope: !23407)
!23409 = !DILocation(line: 45, column: 23, scope: !23407)
!23410 = !DILocation(line: 46, column: 23, scope: !23407)
!23411 = !DILocation(line: 46, column: 15, scope: !23407)
!23412 = !DILocation(line: 47, column: 23, scope: !23407)
!23413 = !DILocation(line: 47, column: 15, scope: !23407)
!23414 = !DILocation(line: 47, column: 21, scope: !23407)
!23415 = !DILocation(line: 48, column: 15, scope: !23407)
!23416 = !DILocation(line: 51, column: 23, scope: !23417)
!23417 = distinct !DILexicalBlock(scope: !23398, file: !23372, line: 51, column: 15)
!23418 = !DILocation(line: 51, column: 15, scope: !23417)
!23419 = !DILocation(line: 51, column: 27, scope: !23417)
!23420 = !DILocation(line: 52, column: 15, scope: !23417)
!23421 = !DILocation(line: 52, column: 34, scope: !23417)
!23422 = !DILocation(line: 52, column: 37, scope: !23417)
!23423 = !DILocation(line: 52, column: 26, scope: !23417)
!23424 = !DILocation(line: 52, column: 24, scope: !23417)
!23425 = !DILocation(line: 51, column: 15, scope: !23398)
!23426 = !DILocalVariable(name: "e", scope: !23427, file: !23372, line: 54, type: !5)
!23427 = distinct !DILexicalBlock(scope: !23417, file: !23372, line: 53, column: 13)
!23428 = !DILocation(line: 54, column: 19, scope: !23427)
!23429 = !DILocation(line: 54, column: 23, scope: !23427)
!23430 = !DILocation(line: 55, column: 22, scope: !23427)
!23431 = !DILocation(line: 55, column: 15, scope: !23427)
!23432 = !DILocation(line: 56, column: 23, scope: !23427)
!23433 = !DILocation(line: 56, column: 15, scope: !23427)
!23434 = !DILocation(line: 56, column: 21, scope: !23427)
!23435 = !DILocation(line: 57, column: 15, scope: !23427)
!23436 = !DILocation(line: 59, column: 9, scope: !23398)
!23437 = !DILocation(line: 60, column: 5, scope: !23386)
!23438 = !DILocation(line: 62, column: 10, scope: !23371)
!23439 = !DILocation(line: 62, column: 3, scope: !23371)
!23440 = !DILocation(line: 63, column: 1, scope: !23371)
