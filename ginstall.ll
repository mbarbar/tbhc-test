; ModuleID = 'ginstall.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.mode_change = type { i8, i8, i32, i32, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.savewd = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.12 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.87 }
%union.anon.87 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [165 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A  or:  %s [OPTION]... -d DIRECTORY...\0A\00", align 1
@.str.2 = private unnamed_addr constant [465 x i8] c"\0AThis install program copies files (often just compiled) into destination\0Alocations you choose.  If you want to download and install a ready-to-use\0Apackage on a GNU/Linux system, you should instead be using a package manager\0Alike yum(1) or apt-get(1).\0A\0AIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\0Athe existing DIRECTORY, while setting permission modes and owner/group.\0AIn the 4th form, create all components of the given DIRECTORY(ies).\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [465 x i8] c"      --backup[=CONTROL]  make a backup of each existing destination file\0A  -b                  like --backup but does not accept an argument\0A  -c                  (ignored)\0A  -C, --compare       compare each pair of source and destination files, and\0A                        in some cases, do not modify the destination at all\0A  -d, --directory     treat all arguments as directory names; create all\0A                        components of the specified directories\0A\00", align 1
@.str.4 = private unnamed_addr constant [401 x i8] c"  -D                  create all leading components of DEST except the last,\0A                        or all components of --target-directory,\0A                        then copy SOURCE to DEST\0A  -g, --group=GROUP   set group ownership, instead of process' current group\0A  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\0A  -o, --owner=OWNER   set ownership (super-user only)\0A\00", align 1
@.str.5 = private unnamed_addr constant [504 x i8] c"  -p, --preserve-timestamps   apply access/modification times of SOURCE files\0A                        to corresponding destination files\0A  -s, --strip         strip symbol tables\0A      --strip-program=PROGRAM  program used to strip binaries\0A  -S, --suffix=SUFFIX  override the usual backup suffix\0A  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory  treat DEST as a normal file\0A  -v, --verbose       print the name of each directory as it is created\0A\00", align 1
@.str.6 = private unnamed_addr constant [347 x i8] c"      --preserve-context  preserve SELinux security context\0A  -Z                      set SELinux security context of destination\0A                            file and each created directory to default type\0A      --context[=CTX]     like -Z, or if CTX is specified then set the\0A                            SELinux or SMACK security context to CTX\0A\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"install\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.46 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.49 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.51 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.36 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.35 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@selinux_enabled = internal global i32 0, align 4, !dbg !60, !ctir !5
@.str.12 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@owner_name = internal global i8* null, align 8, !dbg !315, !ctir !7
@group_name = internal global i8* null, align 8, !dbg !317, !ctir !7
@strip_files = internal global i8 0, align 1, !dbg !321, !ctir !139
@dir_arg = internal global i8 0, align 1, !dbg !323, !ctir !139
@.str.13 = private unnamed_addr constant [21 x i8] c"bcCsDdg:m:o:pt:TvS:Z\00", align 1
@long_options = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i32 2, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i32 1, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i32 1, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !325, !ctir !182
@optarg = external dso_local global i8*, align 8, !ctir !7
@copy_only_if_needed = internal global i8 0, align 1, !dbg !319, !ctir !139
@strip_program = internal global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), align 8, !dbg !327, !ctir !177
@.str.14 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.15 = private unnamed_addr constant [73 x i8] c"WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled\00", align 1
@use_default_selinux_context = internal global i8 1, align 1, !dbg !329, !ctir !139
@.str.16 = private unnamed_addr constant [67 x i8] c"warning: ignoring --context; it requires an SELinux-enabled kernel\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"the strip option may not be used when installing a directory\00", align 1
@.str.20 = private unnamed_addr constant [57 x i8] c"target directory not allowed when installing a directory\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.24 = private unnamed_addr constant [42 x i8] c"cannot set target context and preserve it\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@optind = external dso_local global i32, align 4, !ctir !5
@.str.26 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"invalid mode %s\00", align 1
@mode = internal global i32 493, align 4, !dbg !331, !ctir !136
@dir_mode_bits = internal global i32 4095, align 4, !dbg !333, !ctir !136
@dir_mode = internal global i32 493, align 4, !dbg !335, !ctir !136
@.str.31 = private unnamed_addr constant [72 x i8] c"WARNING: ignoring --strip-program option as -s option was not specified\00", align 1
@.str.32 = private unnamed_addr constant [72 x i8] c"options --compare (-C) and --preserve-timestamps are mutually exclusive\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"options --compare (-C) and --strip are mutually exclusive\00", align 1
@.str.34 = private unnamed_addr constant [86 x i8] c"the --compare (-C) option is ignored when you specify a mode with non-permission bits\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.73 = private unnamed_addr constant [46 x i8] c"failed to set default creation context for %s\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"creating directory %s\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"cannot unlink %s\00", align 1
@owner_id = internal global i32 0, align 4, !dbg !337, !ctir !124
@group_id = internal global i32 0, align 4, !dbg !339, !ctir !126
@.str.83 = private unnamed_addr constant [30 x i8] c"cannot change ownership of %s\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@setdefaultfilecon.first_call = internal global i8 1, align 1, !dbg !349
@.str.85 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"<<none>>\00", align 1
@.str.87 = private unnamed_addr constant [44 x i8] c"warning: %s: failed to change context to %s\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"cannot set timestamps for %s\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"fork system call failed\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"cannot run %s\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"waiting for strip\00", align 1
@.str.81 = private unnamed_addr constant [36 x i8] c"strip process terminated abnormally\00", align 1
@have_same_content.a_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !341
@have_same_content.b_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !347
@.str.72 = private unnamed_addr constant [33 x i8] c"failed to restore context for %s\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"invalid user %s\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"invalid group %s\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"strip\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"owner\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"preserve-timestamps\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"preserve-context\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"strip-program\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.89 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.90 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.93 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.95 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.100 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.101 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !352, !ctir !177
@top_level_dst_name = internal global i8* null, align 8, !dbg !582, !ctir !177
@.str.12.102 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.103 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.104 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.105 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.106 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.107 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.108 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.109 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.110 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.111 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.112 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.113 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.114 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.115 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.116 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.117 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.118 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.119 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.120 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.121 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.122 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.123 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.124 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.125 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.126 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.127 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.128 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.129 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.130 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.131 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.132 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.133 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.134 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.135 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.136 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.137 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.138 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.139 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.140 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.141 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !579
@.str.76.142 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75.143 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.144 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.145 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.146 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63.147 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64.148 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65.149 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66.150 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67.151 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72.152 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73.153 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74.154 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69.155 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71.156 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68.157 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70.158 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !584
@write_zeros.nz = internal global i64 131072, align 8, !dbg !587
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !589
@.str.59.159 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.160 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.161 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.162 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.163 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.164 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.165 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.166 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.167 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.168 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.169 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.170 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.171 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.172 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !594, !ctir !172
@.str.187 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.188 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.189 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !620, !ctir !635
@Version = dso_local global i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.196, i32 0, i32 0), align 8, !dbg !653, !ctir !177
@.str.196 = private unnamed_addr constant [21 x i8] c"8.31.48-f2dfea-dirty\00", align 1
@.str.199 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.200 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.203 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !659, !ctir !177
@.str.210 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.211 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.212 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.213 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.216, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.217, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.218, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.219, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.220, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.221, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.222, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.223, i32 0, i32 0), i8* null], align 16, !dbg !696, !ctir !710
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !716, !ctir !706
@.str.2.216 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.217 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.218 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.219 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.220 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.221 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.222 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.223 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.226 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.227 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !719, !ctir !177
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !724
@.str.232 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.233 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.234 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.235 = internal global i8* null, align 8, !dbg !765, !ctir !177
@ignore_EPIPE = internal global i8 0, align 1, !dbg !811, !ctir !139
@.str.238 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.239 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.240 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !814, !ctir !762
@.str.269 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.270 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.271 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.272 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !821, !ctir !848
@.str.295 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.1.296 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2.297 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@.str.3.298 = private unnamed_addr constant [42 x i8] c"cannot change owner and permissions of %s\00", align 1
@.str.4.299 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !962, !ctir !177
@.str.310 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.311 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.312 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !7
@program_invocation_name = external dso_local global i8*, align 8, !ctir !7
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.318, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.319, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.320, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.321, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.322, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.323, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.325, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.326, i32 0, i32 0), i8* null], align 16, !dbg !1007, !ctir !1027
@.str.317 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.318 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.319 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.320 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.321 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.322 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.323 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.324 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.325 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.326 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1132, !ctir !1030
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1134, !ctir !1037
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1136, !ctir !1037
@.str.10.327 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.328 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.329 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.330 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.331 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.332 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.333 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.334 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.335 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1140, !ctir !1065
@nslots = internal global i32 1, align 4, !dbg !1142, !ctir !5
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1138, !ctir !627
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1144, !ctir !1066
@.str.356 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !1146, !ctir !1173
@.str.365 = private unnamed_addr constant [19 x i8] c"wd->val.child == 0\00", align 1
@.str.1.366 = private unnamed_addr constant [13 x i8] c"lib/savewd.c\00", align 1
@__PRETTY_FUNCTION__.savewd_chdir = private unnamed_addr constant [60 x i8] c"int savewd_chdir(struct savewd *, const char *, int, int *)\00", align 1
@.str.2.367 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.368 = private unnamed_addr constant [2 x i8] c".\00", align 1
@__PRETTY_FUNCTION__.savewd_save = private unnamed_addr constant [35 x i8] c"_Bool savewd_save(struct savewd *)\00", align 1
@.str.3.371 = private unnamed_addr constant [28 x i8] c"(*__errno_location ()) == 4\00", align 1
@__PRETTY_FUNCTION__.savewd_restore = private unnamed_addr constant [41 x i8] c"int savewd_restore(struct savewd *, int)\00", align 1
@.str.4.374 = private unnamed_addr constant [18 x i8] c"wd->val.child < 0\00", align 1
@__PRETTY_FUNCTION__.savewd_finish = private unnamed_addr constant [36 x i8] c"void savewd_finish(struct savewd *)\00", align 1
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1189, !ctir !1200
@.str.2.397 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.398 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.399 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1213
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1258
@utimensat_works_really = internal global i32 0, align 4, !dbg !1260, !ctir !5
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1310, !ctir !5
@.str.410 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.411 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.412 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.413 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.414 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.415 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.416 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.417 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.418 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.419 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.420 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.421 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.422 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.423 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.424 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.425 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.428 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.429 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.430 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.431 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.432 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.433 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.434 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1313, !ctir !1318
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1323
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1333
@.str.1.457 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.458 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.461 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.462 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1335, !ctir !712
@.str.481 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.482 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.483 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.484 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.485 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.500 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.501 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.506 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.507 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.520 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.521 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.522 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.523 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1391

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2654 !ctir !122 {
entry:
  %status.addr = alloca i32, align 4, !ctir !5
  store i32 %status, i32* %status.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2659, metadata !DIExpression()), !dbg !2660
  %0 = load i32, i32* %status.addr, align 4, !dbg !2661, !tbaa !2655
  %cmp = icmp ne i32 %0, 0, !dbg !2663
  br i1 %cmp, label %if.then, label %if.else, !dbg !2664

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2665

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2666, !tbaa !2668
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #9, !dbg !2666
  %2 = load i8*, i8** @program_name, align 8, !dbg !2666, !tbaa !2668
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2666
  br label %do.end, !dbg !2666

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2666

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !2670
  %3 = load i8*, i8** @program_name, align 8, !dbg !2672, !tbaa !2668
  %4 = load i8*, i8** @program_name, align 8, !dbg !2673, !tbaa !2668
  %5 = load i8*, i8** @program_name, align 8, !dbg !2674, !tbaa !2668
  %6 = load i8*, i8** @program_name, align 8, !dbg !2675, !tbaa !2668
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5, i8* %6), !dbg !2676
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !2677
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2677, !tbaa !2668
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %7), !dbg !2677
  call void @emit_mandatory_arg_note(), !dbg !2678
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !2679
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2679, !tbaa !2668
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %8), !dbg !2679
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.4, i64 0, i64 0)) #9, !dbg !2680
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2680, !tbaa !2668
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %9), !dbg !2680
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([504 x i8], [504 x i8]* @.str.5, i64 0, i64 0)) #9, !dbg !2681
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2681, !tbaa !2668
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %10), !dbg !2681
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([347 x i8], [347 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !2682
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2682, !tbaa !2668
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %11), !dbg !2682
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #9, !dbg !2683
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2683, !tbaa !2668
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %12), !dbg !2683
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #9, !dbg !2684
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2684, !tbaa !2668
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %13), !dbg !2684
  call void @emit_backup_suffix_note(), !dbg !2685
  call void @emit_ancillary_info(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !2686
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %14 = load i32, i32* %status.addr, align 4, !dbg !2687, !tbaa !2655
  call void @exit(i32 %14) #13, !dbg !2688
  unreachable, !dbg !2688
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !2689 !ctir !197 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !2690
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2690, !tbaa !2668
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2690
  ret void, !dbg !2691
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !2692 !ctir !197 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.36, i64 0, i64 0)) #9, !dbg !2693
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2693, !tbaa !2668
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2693
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.37, i64 0, i64 0)) #9, !dbg !2694
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2694, !tbaa !2668
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !2694
  ret void, !dbg !2695
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !205 !ctir !199 {
entry:
  %program.addr = alloca i8*, align 8, !ctir !177
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !201
  %node = alloca i8*, align 8, !ctir !177
  %map_prog = alloca %struct.infomap*, align 8, !ctir !212
  %lc_messages = alloca i8*, align 8, !ctir !177
  store i8* %program, i8** %program.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !2696, metadata !DIExpression()), !dbg !2697
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !2698, metadata !DIExpression()), !dbg !2699
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !2699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !2699
  call void @llvm.dbg.declare(metadata i8** %node, metadata !2700, metadata !DIExpression()), !dbg !2701
  %1 = load i8*, i8** %program.addr, align 8, !dbg !2702, !tbaa !2668
  store i8* %1, i8** %node, align 8, !dbg !2701, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !2703, metadata !DIExpression()), !dbg !2704
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !2705
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !2704, !tbaa !2668
  br label %while.cond, !dbg !2706

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2707, !tbaa !2668
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !2708, !ctir !202
  %3 = load i8*, i8** %program1, align 8, !dbg !2708, !tbaa !2709, !ctir !177
  %tobool = icmp ne i8* %3, null, !dbg !2707
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2711

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !2712, !tbaa !2668
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2712, !tbaa !2668
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !2712, !ctir !202
  %6 = load i8*, i8** %program2, align 8, !dbg !2712, !tbaa !2709, !ctir !177
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !2712
  %cmp = icmp eq i32 %call, 0, !dbg !2712
  %lnot = xor i1 %cmp, true, !dbg !2713
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2714
  br i1 %7, label %while.body, label %while.end, !dbg !2706

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2715, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !2715
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !2715, !tbaa !2668
  br label %while.cond, !dbg !2706, !llvm.loop !2716

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2717, !tbaa !2668
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !2719, !ctir !202
  %10 = load i8*, i8** %node3, align 8, !dbg !2719, !tbaa !2720, !ctir !177
  %tobool4 = icmp ne i8* %10, null, !dbg !2717
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2721

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2722, !tbaa !2668
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !2723, !ctir !202
  %12 = load i8*, i8** %node5, align 8, !dbg !2723, !tbaa !2720, !ctir !177
  store i8* %12, i8** %node, align 8, !dbg !2724, !tbaa !2668
  br label %if.end, !dbg !2725

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !2726
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0)), !dbg !2727
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !2728, metadata !DIExpression()), !dbg !2729
  %call8 = call i8* @setlocale(i32 5, i8* null) #9, !dbg !2730
  store i8* %call8, i8** %lc_messages, align 8, !dbg !2729, !tbaa !2668
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !2731, !tbaa !2668
  %tobool9 = icmp ne i8* %13, null, !dbg !2731
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !2733

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !2734, !tbaa !2668
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64 3) #14, !dbg !2734
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2734
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !2735

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !2736
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2736, !tbaa !2668
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !2736
  br label %if.end15, !dbg !2738

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0)) #9, !dbg !2739
  %16 = load i8*, i8** %program.addr, align 8, !dbg !2740, !tbaa !2668
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0), i8* %16), !dbg !2741
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0)) #9, !dbg !2742
  %17 = load i8*, i8** %node, align 8, !dbg !2743, !tbaa !2668
  %18 = load i8*, i8** %node, align 8, !dbg !2744, !tbaa !2668
  %19 = load i8*, i8** %program.addr, align 8, !dbg !2745, !tbaa !2668
  %cmp19 = icmp eq i8* %18, %19, !dbg !2746
  %20 = zext i1 %cmp19 to i64, !dbg !2744
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !2744
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !2747
  ret void, !dbg !2748
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !2749 !ctir !179 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %argc.addr = alloca i32, align 4, !ctir !5
  %argv.addr = alloca i8**, align 8, !ctir !181
  %optc = alloca i32, align 4, !ctir !5
  %exit_status = alloca i32, align 4, !ctir !5
  %specified_mode = alloca i8*, align 8, !ctir !177
  %make_backups = alloca i8, align 1, !ctir !139
  %backup_suffix = alloca i8*, align 8, !ctir !177
  %version_control_string = alloca i8*, align 8, !ctir !7
  %mkdir_and_install = alloca i8, align 1, !ctir !139
  %x = alloca %struct.cp_options, align 8, !ctir !129
  %target_directory = alloca i8*, align 8, !ctir !177
  %no_target_directory = alloca i8, align 1, !ctir !139
  %n_files = alloca i32, align 4, !ctir !5
  %file = alloca i8**, align 8, !ctir !181
  %strip_program_specified = alloca i8, align 1, !ctir !139
  %scontext = alloca i8*, align 8, !ctir !177
  %st = alloca %struct.stat, align 8, !ctir !276
  %stat_success = alloca i8, align 1, !ctir !139
  %change = alloca %struct.mode_change*, align 8, !ctir !194
  %i = alloca i32, align 4, !ctir !5
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2750, metadata !DIExpression()), !dbg !2751
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2752, metadata !DIExpression()), !dbg !2753
  call void @llvm.dbg.declare(metadata i32* %optc, metadata !2754, metadata !DIExpression()), !dbg !2755
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !2756, metadata !DIExpression()), !dbg !2757
  store i32 0, i32* %exit_status, align 4, !dbg !2757, !tbaa !2655
  call void @llvm.dbg.declare(metadata i8** %specified_mode, metadata !2758, metadata !DIExpression()), !dbg !2759
  store i8* null, i8** %specified_mode, align 8, !dbg !2759, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !2760, metadata !DIExpression()), !dbg !2761
  store i8 0, i8* %make_backups, align 1, !dbg !2761, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !2764, metadata !DIExpression()), !dbg !2765
  store i8* null, i8** %backup_suffix, align 8, !dbg !2765, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !2766, metadata !DIExpression()), !dbg !2767
  store i8* null, i8** %version_control_string, align 8, !dbg !2767, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install, metadata !2768, metadata !DIExpression()), !dbg !2769
  store i8 0, i8* %mkdir_and_install, align 1, !dbg !2769, !tbaa !2762
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !2770, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !2772, metadata !DIExpression()), !dbg !2773
  store i8* null, i8** %target_directory, align 8, !dbg !2773, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !2774, metadata !DIExpression()), !dbg !2775
  store i8 0, i8* %no_target_directory, align 1, !dbg !2775, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2776, metadata !DIExpression()), !dbg !2777
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !2778, metadata !DIExpression()), !dbg !2779
  call void @llvm.dbg.declare(metadata i8* %strip_program_specified, metadata !2780, metadata !DIExpression()), !dbg !2781
  store i8 0, i8* %strip_program_specified, align 1, !dbg !2781, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !2782, metadata !DIExpression()), !dbg !2783
  store i8* null, i8** %scontext, align 8, !dbg !2783, !tbaa !2668
  store i32 0, i32* @selinux_enabled, align 4, !dbg !2784, !tbaa !2655
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2785, !tbaa !2668
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2785, !ctir !181
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2785, !tbaa !2668
  call void @set_program_name(i8* %1), !dbg !2786
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !2787
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !2788
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #9, !dbg !2789
  %call3 = call i32 @atexit(void ()* @close_stdin) #9, !dbg !2790
  call void @cp_option_init(%struct.cp_options* %x), !dbg !2791
  store i8* null, i8** @owner_name, align 8, !dbg !2792, !tbaa !2668
  store i8* null, i8** @group_name, align 8, !dbg !2793, !tbaa !2668
  store i8 0, i8* @strip_files, align 1, !dbg !2794, !tbaa !2762
  store i8 0, i8* @dir_arg, align 1, !dbg !2795, !tbaa !2762
  %call4 = call i32 @umask(i32 0) #9, !dbg !2796
  br label %while.cond, !dbg !2797

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2798, !tbaa !2655
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2799, !tbaa !2668
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #9, !dbg !2800
  store i32 %call5, i32* %optc, align 4, !dbg !2801, !tbaa !2655
  %cmp = icmp ne i32 %call5, -1, !dbg !2802
  br i1 %cmp, label %while.body, label %while.end, !dbg !2797

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %optc, align 4, !dbg !2803, !tbaa !2655
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 99, label %sw.bb6
    i32 67, label %sw.bb7
    i32 115, label %sw.bb8
    i32 129, label %sw.bb10
    i32 100, label %sw.bb12
    i32 68, label %sw.bb13
    i32 118, label %sw.bb14
    i32 103, label %sw.bb15
    i32 109, label %sw.bb16
    i32 111, label %sw.bb17
    i32 112, label %sw.bb18
    i32 83, label %sw.bb19
    i32 116, label %sw.bb20
    i32 84, label %sw.bb25
    i32 128, label %sw.bb26
    i32 90, label %sw.bb31
    i32 -130, label %sw.bb43
    i32 -131, label %sw.bb44
  ], !dbg !2805

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2806, !tbaa !2762
  %5 = load i8*, i8** @optarg, align 8, !dbg !2808, !tbaa !2668
  %tobool = icmp ne i8* %5, null, !dbg !2808
  br i1 %tobool, label %if.then, label %if.end, !dbg !2810

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !2811, !tbaa !2668
  store i8* %6, i8** %version_control_string, align 8, !dbg !2812, !tbaa !2668
  br label %if.end, !dbg !2813

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2814

sw.bb6:                                           ; preds = %while.body
  br label %sw.epilog, !dbg !2815

sw.bb7:                                           ; preds = %while.body
  store i8 1, i8* @copy_only_if_needed, align 1, !dbg !2816, !tbaa !2762
  br label %sw.epilog, !dbg !2817

sw.bb8:                                           ; preds = %while.body
  store i8 1, i8* @strip_files, align 1, !dbg !2818, !tbaa !2762
  %call9 = call void (i32)* @signal(i32 17, void (i32)* null) #9, !dbg !2819
  br label %sw.epilog, !dbg !2820

sw.bb10:                                          ; preds = %while.body
  %7 = load i8*, i8** @optarg, align 8, !dbg !2821, !tbaa !2668
  %call11 = call noalias i8* @xstrdup(i8* %7), !dbg !2822
  store i8* %call11, i8** @strip_program, align 8, !dbg !2823, !tbaa !2668
  store i8 1, i8* %strip_program_specified, align 1, !dbg !2824, !tbaa !2762
  br label %sw.epilog, !dbg !2825

sw.bb12:                                          ; preds = %while.body
  store i8 1, i8* @dir_arg, align 1, !dbg !2826, !tbaa !2762
  br label %sw.epilog, !dbg !2827

sw.bb13:                                          ; preds = %while.body
  store i8 1, i8* %mkdir_and_install, align 1, !dbg !2828, !tbaa !2762
  br label %sw.epilog, !dbg !2829

sw.bb14:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !2830, !ctir !129
  store i8 1, i8* %verbose, align 2, !dbg !2831, !tbaa !2832, !ctir !139
  br label %sw.epilog, !dbg !2834

sw.bb15:                                          ; preds = %while.body
  %8 = load i8*, i8** @optarg, align 8, !dbg !2835, !tbaa !2668
  store i8* %8, i8** @group_name, align 8, !dbg !2836, !tbaa !2668
  br label %sw.epilog, !dbg !2837

sw.bb16:                                          ; preds = %while.body
  %9 = load i8*, i8** @optarg, align 8, !dbg !2838, !tbaa !2668
  store i8* %9, i8** %specified_mode, align 8, !dbg !2839, !tbaa !2668
  br label %sw.epilog, !dbg !2840

sw.bb17:                                          ; preds = %while.body
  %10 = load i8*, i8** @optarg, align 8, !dbg !2841, !tbaa !2668
  store i8* %10, i8** @owner_name, align 8, !dbg !2842, !tbaa !2668
  br label %sw.epilog, !dbg !2843

sw.bb18:                                          ; preds = %while.body
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !2844, !ctir !129
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !2845, !tbaa !2846, !ctir !139
  br label %sw.epilog, !dbg !2847

sw.bb19:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2848, !tbaa !2762
  %11 = load i8*, i8** @optarg, align 8, !dbg !2849, !tbaa !2668
  store i8* %11, i8** %backup_suffix, align 8, !dbg !2850, !tbaa !2668
  br label %sw.epilog, !dbg !2851

sw.bb20:                                          ; preds = %while.body
  %12 = load i8*, i8** %target_directory, align 8, !dbg !2852, !tbaa !2668
  %tobool21 = icmp ne i8* %12, null, !dbg !2852
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2854

if.then22:                                        ; preds = %sw.bb20
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !2855
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call23), !dbg !2855
  unreachable, !dbg !2855

if.end24:                                         ; preds = %sw.bb20
  %13 = load i8*, i8** @optarg, align 8, !dbg !2856, !tbaa !2668
  store i8* %13, i8** %target_directory, align 8, !dbg !2857, !tbaa !2668
  br label %sw.epilog, !dbg !2858

sw.bb25:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !2859, !tbaa !2762
  br label %sw.epilog, !dbg !2860

sw.bb26:                                          ; preds = %while.body
  %14 = load i32, i32* @selinux_enabled, align 4, !dbg !2861, !tbaa !2655
  %tobool27 = icmp ne i32 %14, 0, !dbg !2861
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !2863

if.then28:                                        ; preds = %sw.bb26
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !2864
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call29), !dbg !2866
  br label %sw.epilog, !dbg !2867

if.end30:                                         ; preds = %sw.bb26
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2868, !ctir !129
  store i8 1, i8* %preserve_security_context, align 1, !dbg !2869, !tbaa !2870, !ctir !139
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2871, !tbaa !2762
  br label %sw.epilog, !dbg !2872

sw.bb31:                                          ; preds = %while.body
  %15 = load i32, i32* @selinux_enabled, align 4, !dbg !2873, !tbaa !2655
  %tobool32 = icmp ne i32 %15, 0, !dbg !2873
  br i1 %tobool32, label %if.then33, label %if.else37, !dbg !2875

if.then33:                                        ; preds = %sw.bb31
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2876, !tbaa !2762
  %16 = load i8*, i8** @optarg, align 8, !dbg !2878, !tbaa !2668
  %tobool34 = icmp ne i8* %16, null, !dbg !2878
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !2880

if.then35:                                        ; preds = %if.then33
  %17 = load i8*, i8** @optarg, align 8, !dbg !2881, !tbaa !2668
  store i8* %17, i8** %scontext, align 8, !dbg !2882, !tbaa !2668
  br label %if.end36, !dbg !2883

if.else:                                          ; preds = %if.then33
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2884, !ctir !129
  store i8 1, i8* %set_security_context, align 1, !dbg !2885, !tbaa !2886, !ctir !139
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then35
  br label %if.end42, !dbg !2887

if.else37:                                        ; preds = %sw.bb31
  %18 = load i8*, i8** @optarg, align 8, !dbg !2888, !tbaa !2668
  %tobool38 = icmp ne i8* %18, null, !dbg !2888
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !2890

if.then39:                                        ; preds = %if.else37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2891
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call40), !dbg !2893
  br label %if.end41, !dbg !2894

if.end41:                                         ; preds = %if.then39, %if.else37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end36
  br label %sw.epilog, !dbg !2895

sw.bb43:                                          ; preds = %while.body
  call void @usage(i32 0) #15, !dbg !2896
  unreachable, !dbg !2896

sw.bb44:                                          ; preds = %while.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2897, !tbaa !2668
  %20 = load i8*, i8** @Version, align 8, !dbg !2897, !tbaa !2668
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* null), !dbg !2897
  call void @exit(i32 0) #13, !dbg !2897
  unreachable, !dbg !2897

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #15, !dbg !2898
  unreachable, !dbg !2898

sw.epilog:                                        ; preds = %if.end42, %if.end30, %if.then28, %sw.bb25, %if.end24, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !2797, !llvm.loop !2899

while.end:                                        ; preds = %while.cond
  %21 = load i8, i8* @dir_arg, align 1, !dbg !2901, !tbaa !2762
  %tobool45 = trunc i8 %21 to i1, !dbg !2901
  br i1 %tobool45, label %land.lhs.true, label %if.end49, !dbg !2903

land.lhs.true:                                    ; preds = %while.end
  %22 = load i8, i8* @strip_files, align 1, !dbg !2904, !tbaa !2762
  %tobool46 = trunc i8 %22 to i1, !dbg !2904
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !2905

if.then47:                                        ; preds = %land.lhs.true
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0)) #9, !dbg !2906
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call48), !dbg !2906
  unreachable, !dbg !2906

if.end49:                                         ; preds = %land.lhs.true, %while.end
  %23 = load i8, i8* @dir_arg, align 1, !dbg !2907, !tbaa !2762
  %tobool50 = trunc i8 %23 to i1, !dbg !2907
  br i1 %tobool50, label %land.lhs.true51, label %if.end55, !dbg !2909

land.lhs.true51:                                  ; preds = %if.end49
  %24 = load i8*, i8** %target_directory, align 8, !dbg !2910, !tbaa !2668
  %tobool52 = icmp ne i8* %24, null, !dbg !2910
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !2911

if.then53:                                        ; preds = %land.lhs.true51
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !2912
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call54), !dbg !2912
  unreachable, !dbg !2912

if.end55:                                         ; preds = %land.lhs.true51, %if.end49
  %25 = load i8*, i8** %target_directory, align 8, !dbg !2913, !tbaa !2668
  %tobool56 = icmp ne i8* %25, null, !dbg !2913
  br i1 %tobool56, label %if.then57, label %if.end76, !dbg !2915

if.then57:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2916, metadata !DIExpression()), !dbg !2918
  call void @llvm.dbg.declare(metadata i8* %stat_success, metadata !2919, metadata !DIExpression()), !dbg !2920
  %26 = load i8*, i8** %target_directory, align 8, !dbg !2921, !tbaa !2668
  %call58 = call i32 @stat(i8* %26, %struct.stat* %st) #9, !dbg !2922
  %cmp59 = icmp eq i32 %call58, 0, !dbg !2923
  %27 = zext i1 %cmp59 to i64, !dbg !2922
  %cond = select i1 %cmp59, i32 1, i32 0, !dbg !2922
  %tobool60 = icmp ne i32 %cond, 0, !dbg !2922
  %frombool = zext i1 %tobool60 to i8, !dbg !2920
  store i8 %frombool, i8* %stat_success, align 1, !dbg !2920, !tbaa !2762
  %28 = load i8, i8* %mkdir_and_install, align 1, !dbg !2924, !tbaa !2762
  %tobool61 = trunc i8 %28 to i1, !dbg !2924
  br i1 %tobool61, label %if.end68, label %land.lhs.true62, !dbg !2926

land.lhs.true62:                                  ; preds = %if.then57
  %29 = load i8, i8* %stat_success, align 1, !dbg !2927, !tbaa !2762
  %tobool63 = trunc i8 %29 to i1, !dbg !2927
  br i1 %tobool63, label %if.end68, label %if.then64, !dbg !2928

if.then64:                                        ; preds = %land.lhs.true62
  %call65 = call i32* @__errno_location() #16, !dbg !2929
  %30 = load i32, i32* %call65, align 4, !dbg !2929, !tbaa !2655, !ctir !5
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !2929
  %31 = load i8*, i8** %target_directory, align 8, !dbg !2929, !tbaa !2668
  %call67 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !2929
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %30, i8* %call66, i8* %call67), !dbg !2929
  unreachable, !dbg !2929

if.end68:                                         ; preds = %land.lhs.true62, %if.then57
  %32 = load i8, i8* %stat_success, align 1, !dbg !2930, !tbaa !2762
  %tobool69 = trunc i8 %32 to i1, !dbg !2930
  br i1 %tobool69, label %land.lhs.true70, label %if.end75, !dbg !2932

land.lhs.true70:                                  ; preds = %if.end68
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2933, !ctir !276
  %33 = load i32, i32* %st_mode, align 8, !dbg !2933, !tbaa !2934, !ctir !137
  %and = and i32 %33, 61440, !dbg !2933
  %cmp71 = icmp eq i32 %and, 16384, !dbg !2933
  br i1 %cmp71, label %if.end75, label %if.then72, !dbg !2938

if.then72:                                        ; preds = %land.lhs.true70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2939
  %34 = load i8*, i8** %target_directory, align 8, !dbg !2939, !tbaa !2668
  %call74 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !2939
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call73, i8* %call74), !dbg !2939
  unreachable, !dbg !2939

if.end75:                                         ; preds = %land.lhs.true70, %if.end68
  br label %if.end76, !dbg !2940

if.end76:                                         ; preds = %if.end75, %if.end55
  %35 = load i8, i8* %make_backups, align 1, !dbg !2941, !tbaa !2762
  %tobool77 = trunc i8 %35 to i1, !dbg !2941
  br i1 %tobool77, label %cond.true, label %cond.false, !dbg !2941

cond.true:                                        ; preds = %if.end76
  %call78 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !2942
  %36 = load i8*, i8** %version_control_string, align 8, !dbg !2943, !tbaa !2668
  %call79 = call i32 @xget_version(i8* %call78, i8* %36), !dbg !2944
  br label %cond.end, !dbg !2941

cond.false:                                       ; preds = %if.end76
  br label %cond.end, !dbg !2941

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond80 = phi i32 [ %call79, %cond.true ], [ 0, %cond.false ], !dbg !2941
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !2945, !ctir !129
  store i32 %cond80, i32* %backup_type, align 8, !dbg !2946, !tbaa !2947, !ctir !65
  %37 = load i8*, i8** %backup_suffix, align 8, !dbg !2948, !tbaa !2668
  call void @set_simple_backup_suffix(i8* %37), !dbg !2949
  %preserve_security_context81 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2950, !ctir !129
  %38 = load i8, i8* %preserve_security_context81, align 1, !dbg !2950, !tbaa !2870
  %tobool82 = trunc i8 %38 to i1, !dbg !2950, !ctir !139
  br i1 %tobool82, label %land.lhs.true83, label %if.end89, !dbg !2952

land.lhs.true83:                                  ; preds = %cond.end
  %set_security_context84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2953, !ctir !129
  %39 = load i8, i8* %set_security_context84, align 1, !dbg !2953, !tbaa !2886
  %tobool85 = trunc i8 %39 to i1, !dbg !2953, !ctir !139
  br i1 %tobool85, label %if.then87, label %lor.lhs.false, !dbg !2954

lor.lhs.false:                                    ; preds = %land.lhs.true83
  %40 = load i8*, i8** %scontext, align 8, !dbg !2955, !tbaa !2668
  %tobool86 = icmp ne i8* %40, null, !dbg !2955
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !2956

if.then87:                                        ; preds = %lor.lhs.false, %land.lhs.true83
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !2957
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call88), !dbg !2957
  unreachable, !dbg !2957

if.end89:                                         ; preds = %lor.lhs.false, %cond.end
  %41 = load i8*, i8** %scontext, align 8, !dbg !2958, !tbaa !2668
  %tobool90 = icmp ne i8* %41, null, !dbg !2958
  br i1 %tobool90, label %land.lhs.true91, label %if.end99, !dbg !2960

land.lhs.true91:                                  ; preds = %if.end89
  %42 = load i8*, i8** %scontext, align 8, !dbg !2961, !tbaa !2668
  %call92 = call i8* @se_const(i8* %42), !dbg !2962
  %call93 = call i32 @setfscreatecon(i8* %call92), !dbg !2963
  %cmp94 = icmp slt i32 %call93, 0, !dbg !2964
  br i1 %cmp94, label %if.then95, label %if.end99, !dbg !2965

if.then95:                                        ; preds = %land.lhs.true91
  %call96 = call i32* @__errno_location() #16, !dbg !2966
  %43 = load i32, i32* %call96, align 4, !dbg !2966, !tbaa !2655, !ctir !5
  %call97 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !2966
  %44 = load i8*, i8** %scontext, align 8, !dbg !2966, !tbaa !2668
  %call98 = call i8* @quote(i8* %44), !dbg !2966
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %43, i8* %call97, i8* %call98), !dbg !2966
  unreachable, !dbg !2966

if.end99:                                         ; preds = %land.lhs.true91, %if.end89
  %45 = load i32, i32* %argc.addr, align 4, !dbg !2967, !tbaa !2655
  %46 = load i32, i32* @optind, align 4, !dbg !2968, !tbaa !2655
  %sub = sub nsw i32 %45, %46, !dbg !2969
  store i32 %sub, i32* %n_files, align 4, !dbg !2970, !tbaa !2655
  %47 = load i8**, i8*** %argv.addr, align 8, !dbg !2971, !tbaa !2668
  %48 = load i32, i32* @optind, align 4, !dbg !2972, !tbaa !2655
  %idx.ext = sext i32 %48 to i64, !dbg !2973
  %add.ptr = getelementptr inbounds i8*, i8** %47, i64 %idx.ext, !dbg !2973
  store i8** %add.ptr, i8*** %file, align 8, !dbg !2974, !tbaa !2668
  %49 = load i32, i32* %n_files, align 4, !dbg !2975, !tbaa !2655
  %50 = load i8, i8* @dir_arg, align 1, !dbg !2977, !tbaa !2762
  %tobool100 = trunc i8 %50 to i1, !dbg !2977
  br i1 %tobool100, label %lor.end, label %lor.rhs, !dbg !2978

lor.rhs:                                          ; preds = %if.end99
  %51 = load i8*, i8** %target_directory, align 8, !dbg !2979, !tbaa !2668
  %tobool101 = icmp ne i8* %51, null, !dbg !2978
  br label %lor.end, !dbg !2978

lor.end:                                          ; preds = %lor.rhs, %if.end99
  %52 = phi i1 [ true, %if.end99 ], [ %tobool101, %lor.rhs ]
  %lnot = xor i1 %52, true, !dbg !2980
  %lnot.ext = zext i1 %lnot to i32, !dbg !2980
  %cmp102 = icmp sle i32 %49, %lnot.ext, !dbg !2981
  br i1 %cmp102, label %if.then103, label %if.end112, !dbg !2982

if.then103:                                       ; preds = %lor.end
  %53 = load i32, i32* %n_files, align 4, !dbg !2983, !tbaa !2655
  %cmp104 = icmp sle i32 %53, 0, !dbg !2986
  br i1 %cmp104, label %if.then105, label %if.else107, !dbg !2987

if.then105:                                       ; preds = %if.then103
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !2988
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call106), !dbg !2989
  br label %if.end111, !dbg !2989

if.else107:                                       ; preds = %if.then103
  %call108 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !2990
  %54 = load i8**, i8*** %file, align 8, !dbg !2991, !tbaa !2668
  %arrayidx109 = getelementptr inbounds i8*, i8** %54, i64 0, !dbg !2991, !ctir !181
  %55 = load i8*, i8** %arrayidx109, align 8, !dbg !2991, !tbaa !2668
  %call110 = call i8* @quotearg_style(i32 4, i8* %55), !dbg !2991
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call108, i8* %call110), !dbg !2992
  br label %if.end111

if.end111:                                        ; preds = %if.else107, %if.then105
  call void @usage(i32 1) #15, !dbg !2993
  unreachable, !dbg !2993

if.end112:                                        ; preds = %lor.end
  %56 = load i8, i8* %no_target_directory, align 1, !dbg !2994, !tbaa !2762
  %tobool113 = trunc i8 %56 to i1, !dbg !2994
  br i1 %tobool113, label %if.then114, label %if.else125, !dbg !2996

if.then114:                                       ; preds = %if.end112
  %57 = load i8*, i8** %target_directory, align 8, !dbg !2997, !tbaa !2668
  %tobool115 = icmp ne i8* %57, null, !dbg !2997
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !3000

if.then116:                                       ; preds = %if.then114
  %call117 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !3001
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call117), !dbg !3001
  unreachable, !dbg !3001

if.end118:                                        ; preds = %if.then114
  %58 = load i32, i32* %n_files, align 4, !dbg !3002, !tbaa !2655
  %cmp119 = icmp slt i32 2, %58, !dbg !3004
  br i1 %cmp119, label %if.then120, label %if.end124, !dbg !3005

if.then120:                                       ; preds = %if.end118
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !3006
  %59 = load i8**, i8*** %file, align 8, !dbg !3008, !tbaa !2668
  %arrayidx122 = getelementptr inbounds i8*, i8** %59, i64 2, !dbg !3008, !ctir !181
  %60 = load i8*, i8** %arrayidx122, align 8, !dbg !3008, !tbaa !2668
  %call123 = call i8* @quotearg_style(i32 4, i8* %60), !dbg !3008
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call121, i8* %call123), !dbg !3009
  call void @usage(i32 1) #15, !dbg !3010
  unreachable, !dbg !3010

if.end124:                                        ; preds = %if.end118
  br label %if.end149, !dbg !3011

if.else125:                                       ; preds = %if.end112
  %61 = load i8, i8* @dir_arg, align 1, !dbg !3012, !tbaa !2762
  %tobool126 = trunc i8 %61 to i1, !dbg !3012
  br i1 %tobool126, label %if.end148, label %lor.lhs.false127, !dbg !3014

lor.lhs.false127:                                 ; preds = %if.else125
  %62 = load i8*, i8** %target_directory, align 8, !dbg !3015, !tbaa !2668
  %tobool128 = icmp ne i8* %62, null, !dbg !3015
  br i1 %tobool128, label %if.end148, label %if.then129, !dbg !3016

if.then129:                                       ; preds = %lor.lhs.false127
  %63 = load i32, i32* %n_files, align 4, !dbg !3017, !tbaa !2655
  %cmp130 = icmp sle i32 2, %63, !dbg !3020
  br i1 %cmp130, label %land.lhs.true131, label %if.else138, !dbg !3021

land.lhs.true131:                                 ; preds = %if.then129
  %64 = load i8**, i8*** %file, align 8, !dbg !3022, !tbaa !2668
  %65 = load i32, i32* %n_files, align 4, !dbg !3023, !tbaa !2655
  %sub132 = sub nsw i32 %65, 1, !dbg !3024
  %idxprom = sext i32 %sub132 to i64, !dbg !3022
  %arrayidx133 = getelementptr inbounds i8*, i8** %64, i64 %idxprom, !dbg !3022, !ctir !181
  %66 = load i8*, i8** %arrayidx133, align 8, !dbg !3022, !tbaa !2668
  %call134 = call zeroext i1 @target_directory_operand(i8* %66), !dbg !3025
  br i1 %call134, label %if.then135, label %if.else138, !dbg !3026

if.then135:                                       ; preds = %land.lhs.true131
  %67 = load i8**, i8*** %file, align 8, !dbg !3027, !tbaa !2668
  %68 = load i32, i32* %n_files, align 4, !dbg !3028, !tbaa !2655
  %dec = add nsw i32 %68, -1, !dbg !3028
  store i32 %dec, i32* %n_files, align 4, !dbg !3028, !tbaa !2655
  %idxprom136 = sext i32 %dec to i64, !dbg !3027
  %arrayidx137 = getelementptr inbounds i8*, i8** %67, i64 %idxprom136, !dbg !3027, !ctir !181
  %69 = load i8*, i8** %arrayidx137, align 8, !dbg !3027, !tbaa !2668
  store i8* %69, i8** %target_directory, align 8, !dbg !3029, !tbaa !2668
  br label %if.end147, !dbg !3030

if.else138:                                       ; preds = %land.lhs.true131, %if.then129
  %70 = load i32, i32* %n_files, align 4, !dbg !3031, !tbaa !2655
  %cmp139 = icmp slt i32 2, %70, !dbg !3033
  br i1 %cmp139, label %if.then140, label %if.end146, !dbg !3034

if.then140:                                       ; preds = %if.else138
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !3035
  %71 = load i8**, i8*** %file, align 8, !dbg !3035, !tbaa !2668
  %72 = load i32, i32* %n_files, align 4, !dbg !3035, !tbaa !2655
  %sub142 = sub nsw i32 %72, 1, !dbg !3035
  %idxprom143 = sext i32 %sub142 to i64, !dbg !3035
  %arrayidx144 = getelementptr inbounds i8*, i8** %71, i64 %idxprom143, !dbg !3035, !ctir !181
  %73 = load i8*, i8** %arrayidx144, align 8, !dbg !3035, !tbaa !2668
  %call145 = call i8* @quotearg_style(i32 4, i8* %73), !dbg !3035
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call141, i8* %call145), !dbg !3035
  unreachable, !dbg !3035

if.end146:                                        ; preds = %if.else138
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then135
  br label %if.end148, !dbg !3036

if.end148:                                        ; preds = %if.end147, %lor.lhs.false127, %if.else125
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end124
  %74 = load i8*, i8** %specified_mode, align 8, !dbg !3037, !tbaa !2668
  %tobool150 = icmp ne i8* %74, null, !dbg !3037
  br i1 %tobool150, label %if.then151, label %if.end160, !dbg !3039

if.then151:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !3040, metadata !DIExpression()), !dbg !3042
  %75 = load i8*, i8** %specified_mode, align 8, !dbg !3043, !tbaa !2668
  %call152 = call %struct.mode_change* @mode_compile(i8* %75), !dbg !3044
  store %struct.mode_change* %call152, %struct.mode_change** %change, align 8, !dbg !3042, !tbaa !2668
  %76 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3045, !tbaa !2668
  %tobool153 = icmp ne %struct.mode_change* %76, null, !dbg !3045
  br i1 %tobool153, label %if.end157, label %if.then154, !dbg !3047

if.then154:                                       ; preds = %if.then151
  %call155 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #9, !dbg !3048
  %77 = load i8*, i8** %specified_mode, align 8, !dbg !3048, !tbaa !2668
  %call156 = call i8* @quote(i8* %77), !dbg !3048
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call155, i8* %call156), !dbg !3048
  unreachable, !dbg !3048

if.end157:                                        ; preds = %if.then151
  %78 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3049, !tbaa !2668
  %call158 = call i32 @mode_adjust(i32 0, i1 zeroext false, i32 0, %struct.mode_change* %78, i32* null), !dbg !3050
  store i32 %call158, i32* @mode, align 4, !dbg !3051, !tbaa !2655
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3052, !tbaa !2668
  %call159 = call i32 @mode_adjust(i32 0, i1 zeroext true, i32 0, %struct.mode_change* %79, i32* @dir_mode_bits), !dbg !3053
  store i32 %call159, i32* @dir_mode, align 4, !dbg !3054, !tbaa !2655
  %80 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3055, !tbaa !2668
  %81 = bitcast %struct.mode_change* %80 to i8*, !dbg !3055
  call void @free(i8* %81) #9, !dbg !3056
  br label %if.end160, !dbg !3057

if.end160:                                        ; preds = %if.end157, %if.end149
  %82 = load i8, i8* %strip_program_specified, align 1, !dbg !3058, !tbaa !2762
  %tobool161 = trunc i8 %82 to i1, !dbg !3058
  br i1 %tobool161, label %land.lhs.true162, label %if.end166, !dbg !3060

land.lhs.true162:                                 ; preds = %if.end160
  %83 = load i8, i8* @strip_files, align 1, !dbg !3061, !tbaa !2762
  %tobool163 = trunc i8 %83 to i1, !dbg !3061
  br i1 %tobool163, label %if.end166, label %if.then164, !dbg !3062

if.then164:                                       ; preds = %land.lhs.true162
  %call165 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.31, i64 0, i64 0)) #9, !dbg !3063
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call165), !dbg !3064
  br label %if.end166, !dbg !3064

if.end166:                                        ; preds = %if.then164, %land.lhs.true162, %if.end160
  %84 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3065, !tbaa !2762
  %tobool167 = trunc i8 %84 to i1, !dbg !3065
  br i1 %tobool167, label %land.lhs.true168, label %if.end173, !dbg !3067

land.lhs.true168:                                 ; preds = %if.end166
  %preserve_timestamps169 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !3068, !ctir !129
  %85 = load i8, i8* %preserve_timestamps169, align 1, !dbg !3068, !tbaa !2846
  %tobool170 = trunc i8 %85 to i1, !dbg !3068, !ctir !139
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !3069

if.then171:                                       ; preds = %land.lhs.true168
  %call172 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.32, i64 0, i64 0)) #9, !dbg !3070
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call172), !dbg !3072
  call void @usage(i32 1) #15, !dbg !3073
  unreachable, !dbg !3073

if.end173:                                        ; preds = %land.lhs.true168, %if.end166
  %86 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3074, !tbaa !2762
  %tobool174 = trunc i8 %86 to i1, !dbg !3074
  br i1 %tobool174, label %land.lhs.true175, label %if.end179, !dbg !3076

land.lhs.true175:                                 ; preds = %if.end173
  %87 = load i8, i8* @strip_files, align 1, !dbg !3077, !tbaa !2762
  %tobool176 = trunc i8 %87 to i1, !dbg !3077
  br i1 %tobool176, label %if.then177, label %if.end179, !dbg !3078

if.then177:                                       ; preds = %land.lhs.true175
  %call178 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !3079
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call178), !dbg !3081
  call void @usage(i32 1) #15, !dbg !3082
  unreachable, !dbg !3082

if.end179:                                        ; preds = %land.lhs.true175, %if.end173
  %88 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3083, !tbaa !2762
  %tobool180 = trunc i8 %88 to i1, !dbg !3083
  br i1 %tobool180, label %land.lhs.true181, label %if.end185, !dbg !3085

land.lhs.true181:                                 ; preds = %if.end179
  %89 = load i32, i32* @mode, align 4, !dbg !3086, !tbaa !2655
  %call182 = call zeroext i1 @extra_mode(i32 %89), !dbg !3087
  br i1 %call182, label %if.then183, label %if.end185, !dbg !3088

if.then183:                                       ; preds = %land.lhs.true181
  %call184 = call i8* @gettext(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !3089
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call184), !dbg !3090
  br label %if.end185, !dbg !3090

if.end185:                                        ; preds = %if.then183, %land.lhs.true181, %if.end179
  call void @get_ids(), !dbg !3091
  %90 = load i8, i8* @dir_arg, align 1, !dbg !3092, !tbaa !2762
  %tobool186 = trunc i8 %90 to i1, !dbg !3092
  br i1 %tobool186, label %if.then187, label %if.else189, !dbg !3094

if.then187:                                       ; preds = %if.end185
  %91 = load i32, i32* %n_files, align 4, !dbg !3095, !tbaa !2655
  %92 = load i8**, i8*** %file, align 8, !dbg !3096, !tbaa !2668
  %93 = bitcast %struct.cp_options* %x to i8*, !dbg !3097
  %call188 = call i32 @savewd_process_files(i32 %91, i8** %92, i32 (i8*, %struct.savewd*, i8*)* @process_dir, i8* %93), !dbg !3098
  store i32 %call188, i32* %exit_status, align 4, !dbg !3099, !tbaa !2655
  br label %if.end213, !dbg !3100

if.else189:                                       ; preds = %if.end185
  call void @hash_init(), !dbg !3101
  %94 = load i8*, i8** %target_directory, align 8, !dbg !3103, !tbaa !2668
  %tobool190 = icmp ne i8* %94, null, !dbg !3103
  br i1 %tobool190, label %if.else203, label %if.then191, !dbg !3105

if.then191:                                       ; preds = %if.else189
  %95 = load i8, i8* %mkdir_and_install, align 1, !dbg !3106, !tbaa !2762
  %tobool192 = trunc i8 %95 to i1, !dbg !3106
  br i1 %tobool192, label %cond.true193, label %cond.false197, !dbg !3109

cond.true193:                                     ; preds = %if.then191
  %96 = load i8**, i8*** %file, align 8, !dbg !3110, !tbaa !2668
  %arrayidx194 = getelementptr inbounds i8*, i8** %96, i64 0, !dbg !3110, !ctir !181
  %97 = load i8*, i8** %arrayidx194, align 8, !dbg !3110, !tbaa !2668
  %98 = load i8**, i8*** %file, align 8, !dbg !3111, !tbaa !2668
  %arrayidx195 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !3111, !ctir !181
  %99 = load i8*, i8** %arrayidx195, align 8, !dbg !3111, !tbaa !2668
  %call196 = call zeroext i1 @install_file_in_file_parents(i8* %97, i8* %99, %struct.cp_options* %x), !dbg !3112
  br i1 %call196, label %if.end202, label %if.then201, !dbg !3106

cond.false197:                                    ; preds = %if.then191
  %100 = load i8**, i8*** %file, align 8, !dbg !3113, !tbaa !2668
  %arrayidx198 = getelementptr inbounds i8*, i8** %100, i64 0, !dbg !3113, !ctir !181
  %101 = load i8*, i8** %arrayidx198, align 8, !dbg !3113, !tbaa !2668
  %102 = load i8**, i8*** %file, align 8, !dbg !3114, !tbaa !2668
  %arrayidx199 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !3114, !ctir !181
  %103 = load i8*, i8** %arrayidx199, align 8, !dbg !3114, !tbaa !2668
  %call200 = call zeroext i1 @install_file_in_file(i8* %101, i8* %103, %struct.cp_options* %x), !dbg !3115
  br i1 %call200, label %if.end202, label %if.then201, !dbg !3109

if.then201:                                       ; preds = %cond.false197, %cond.true193
  store i32 1, i32* %exit_status, align 4, !dbg !3116, !tbaa !2655
  br label %if.end202, !dbg !3117

if.end202:                                        ; preds = %if.then201, %cond.false197, %cond.true193
  br label %if.end212, !dbg !3118

if.else203:                                       ; preds = %if.else189
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3119, metadata !DIExpression()), !dbg !3121
  call void @dest_info_init(%struct.cp_options* %x), !dbg !3122
  store i32 0, i32* %i, align 4, !dbg !3123, !tbaa !2655
  br label %for.cond, !dbg !3125

for.cond:                                         ; preds = %for.inc, %if.else203
  %104 = load i32, i32* %i, align 4, !dbg !3126, !tbaa !2655
  %105 = load i32, i32* %n_files, align 4, !dbg !3128, !tbaa !2655
  %cmp204 = icmp slt i32 %104, %105, !dbg !3129
  br i1 %cmp204, label %for.body, label %for.end, !dbg !3130

for.body:                                         ; preds = %for.cond
  %106 = load i8**, i8*** %file, align 8, !dbg !3131, !tbaa !2668
  %107 = load i32, i32* %i, align 4, !dbg !3133, !tbaa !2655
  %idxprom205 = sext i32 %107 to i64, !dbg !3131
  %arrayidx206 = getelementptr inbounds i8*, i8** %106, i64 %idxprom205, !dbg !3131, !ctir !181
  %108 = load i8*, i8** %arrayidx206, align 8, !dbg !3131, !tbaa !2668
  %109 = load i8*, i8** %target_directory, align 8, !dbg !3134, !tbaa !2668
  %110 = load i32, i32* %i, align 4, !dbg !3135, !tbaa !2655
  %cmp207 = icmp eq i32 %110, 0, !dbg !3136
  br i1 %cmp207, label %land.rhs, label %land.end, !dbg !3137

land.rhs:                                         ; preds = %for.body
  %111 = load i8, i8* %mkdir_and_install, align 1, !dbg !3138, !tbaa !2762
  %tobool208 = trunc i8 %111 to i1, !dbg !3138
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %112 = phi i1 [ false, %for.body ], [ %tobool208, %land.rhs ], !dbg !3139
  %call209 = call zeroext i1 @install_file_in_dir(i8* %108, i8* %109, %struct.cp_options* %x, i1 zeroext %112), !dbg !3140
  br i1 %call209, label %if.end211, label %if.then210, !dbg !3141

if.then210:                                       ; preds = %land.end
  store i32 1, i32* %exit_status, align 4, !dbg !3142, !tbaa !2655
  br label %if.end211, !dbg !3143

if.end211:                                        ; preds = %if.then210, %land.end
  br label %for.inc, !dbg !3144

for.inc:                                          ; preds = %if.end211
  %113 = load i32, i32* %i, align 4, !dbg !3145, !tbaa !2655
  %inc = add nsw i32 %113, 1, !dbg !3145
  store i32 %inc, i32* %i, align 4, !dbg !3145, !tbaa !2655
  br label %for.cond, !dbg !3146, !llvm.loop !3147

for.end:                                          ; preds = %for.cond
  br label %if.end212

if.end212:                                        ; preds = %for.end, %if.end202
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then187
  %114 = load i32, i32* %exit_status, align 4, !dbg !3149, !tbaa !2655
  ret i32 %114, !dbg !3150
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !3151 !ctir !213 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !128
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3152, metadata !DIExpression()), !dbg !3153
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3154, !tbaa !2668
  call void @cp_options_default(%struct.cp_options* %0), !dbg !3155
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3156, !tbaa !2668
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !3157, !ctir !129
  store i8 1, i8* %copy_as_regular, align 4, !dbg !3158, !tbaa !3159, !ctir !139
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3160, !tbaa !2668
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !3161, !ctir !129
  store i32 0, i32* %reflink_mode, align 8, !dbg !3162, !tbaa !3163, !ctir !92
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3164, !tbaa !2668
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !3165, !ctir !129
  store i32 4, i32* %dereference, align 4, !dbg !3166, !tbaa !3167, !ctir !73
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3168, !tbaa !2668
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !3169, !ctir !129
  store i8 1, i8* %unlink_dest_before_opening, align 1, !dbg !3170, !tbaa !3171, !ctir !139
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3172, !tbaa !2668
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !3173, !ctir !129
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !3174, !tbaa !3175, !ctir !139
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3176, !tbaa !2668
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !3177, !ctir !129
  store i8 0, i8* %hard_link, align 1, !dbg !3178, !tbaa !3179, !ctir !139
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3180, !tbaa !2668
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !3181, !ctir !129
  store i32 4, i32* %interactive, align 8, !dbg !3182, !tbaa !3183, !ctir !80
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3184, !tbaa !2668
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !3185, !ctir !129
  store i8 0, i8* %move_mode, align 8, !dbg !3186, !tbaa !3187, !ctir !139
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3188, !tbaa !2668
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !3189, !ctir !129
  store i8 1, i8* %install_mode, align 1, !dbg !3190, !tbaa !3191, !ctir !139
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3192, !tbaa !2668
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !3193, !ctir !129
  store i8 0, i8* %one_file_system, align 4, !dbg !3194, !tbaa !3195, !ctir !139
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3196, !tbaa !2668
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !3197, !ctir !129
  store i8 0, i8* %preserve_ownership, align 1, !dbg !3198, !tbaa !3199, !ctir !139
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3200, !tbaa !2668
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !3201, !ctir !129
  store i8 0, i8* %preserve_links, align 2, !dbg !3202, !tbaa !3203, !ctir !139
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3204, !tbaa !2668
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !3205, !ctir !129
  store i8 0, i8* %preserve_mode, align 2, !dbg !3206, !tbaa !3207, !ctir !139
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3208, !tbaa !2668
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !3209, !ctir !129
  store i8 0, i8* %preserve_timestamps, align 1, !dbg !3210, !tbaa !2846, !ctir !139
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3211, !tbaa !2668
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !3212, !ctir !129
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !3213, !tbaa !3214, !ctir !139
  %16 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3215, !tbaa !2668
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 26, !dbg !3216, !ctir !129
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !3217, !tbaa !3218, !ctir !139
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3219, !tbaa !2668
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 20, !dbg !3220, !ctir !129
  store i8 1, i8* %data_copy_required, align 1, !dbg !3221, !tbaa !3222, !ctir !139
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3223, !tbaa !2668
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 21, !dbg !3224, !ctir !129
  store i8 0, i8* %require_preserve, align 4, !dbg !3225, !tbaa !3226, !ctir !139
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3227, !tbaa !2668
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 25, !dbg !3228, !ctir !129
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !3229, !tbaa !3230, !ctir !139
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3231, !tbaa !2668
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 27, !dbg !3232, !ctir !129
  store i8 0, i8* %recursive, align 2, !dbg !3233, !tbaa !3234, !ctir !139
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3235, !tbaa !2668
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !3236, !ctir !129
  store i32 2, i32* %sparse_mode, align 4, !dbg !3237, !tbaa !3238, !ctir !86
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3239, !tbaa !2668
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 29, !dbg !3240, !ctir !129
  store i8 0, i8* %symbolic_link, align 4, !dbg !3241, !tbaa !3242, !ctir !139
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3243, !tbaa !2668
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 0, !dbg !3244, !ctir !129
  store i32 0, i32* %backup_type, align 8, !dbg !3245, !tbaa !2947, !ctir !65
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3246, !tbaa !2668
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 28, !dbg !3247, !ctir !129
  store i8 1, i8* %set_mode, align 1, !dbg !3248, !tbaa !3249, !ctir !139
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3250, !tbaa !2668
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 4, !dbg !3251, !ctir !129
  store i32 384, i32* %mode, align 8, !dbg !3252, !tbaa !3253, !ctir !136
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3254, !tbaa !2668
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 32, !dbg !3255, !ctir !129
  store i8 0, i8* %stdin_tty, align 1, !dbg !3256, !tbaa !3257, !ctir !139
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3258, !tbaa !2668
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 33, !dbg !3259, !ctir !129
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !3260, !tbaa !3261, !ctir !139
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3262, !tbaa !2668
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 30, !dbg !3263, !ctir !129
  store i8 0, i8* %update, align 1, !dbg !3264, !tbaa !3265, !ctir !139
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3266, !tbaa !2668
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 23, !dbg !3267, !ctir !129
  store i8 0, i8* %require_preserve_context, align 2, !dbg !3268, !tbaa !3269, !ctir !139
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3270, !tbaa !2668
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 22, !dbg !3271, !ctir !129
  store i8 0, i8* %preserve_security_context, align 1, !dbg !3272, !tbaa !2870, !ctir !139
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3273, !tbaa !2668
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 18, !dbg !3274, !ctir !129
  store i8 0, i8* %set_security_context, align 1, !dbg !3275, !tbaa !2886, !ctir !139
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3276, !tbaa !2668
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 24, !dbg !3277, !ctir !129
  store i8 0, i8* %preserve_xattr, align 1, !dbg !3278, !tbaa !3279, !ctir !139
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3280, !tbaa !2668
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !3281, !ctir !129
  store i8 0, i8* %verbose, align 2, !dbg !3282, !tbaa !2832, !ctir !139
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3283, !tbaa !2668
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !3284, !ctir !129
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !3285, !tbaa !3286, !ctir !172
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3287, !tbaa !2668
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !3288, !ctir !129
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !3289, !tbaa !3290, !ctir !172
  ret void, !dbg !3291
}

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @se_const(i8* %sctx) #4 !dbg !3292 !ctir !215 {
entry:
  %sctx.addr = alloca i8*, align 8, !ctir !177
  store i8* %sctx, i8** %sctx.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %sctx.addr, metadata !3293, metadata !DIExpression()), !dbg !3294
  %0 = load i8*, i8** %sctx.addr, align 8, !dbg !3295, !tbaa !2668
  ret i8* %0, !dbg !3296
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !3297 !ctir !217 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %b = alloca i8*, align 8, !ctir !177
  %blen = alloca i64, align 8, !ctir !52
  %looks_like_a_dir = alloca i8, align 1, !ctir !139
  %st = alloca %struct.stat, align 8, !ctir !276
  %err = alloca i32, align 4, !ctir !5
  %is_a_dir = alloca i8, align 1, !ctir !139
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3298, metadata !DIExpression()), !dbg !3299
  call void @llvm.dbg.declare(metadata i8** %b, metadata !3300, metadata !DIExpression()), !dbg !3301
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3302, !tbaa !2668
  %call = call i8* @last_component(i8* %0) #14, !dbg !3303
  store i8* %call, i8** %b, align 8, !dbg !3301, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %blen, metadata !3304, metadata !DIExpression()), !dbg !3305
  %1 = load i8*, i8** %b, align 8, !dbg !3306, !tbaa !2668
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !3307
  store i64 %call1, i64* %blen, align 8, !dbg !3305, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %looks_like_a_dir, metadata !3309, metadata !DIExpression()), !dbg !3310
  %2 = load i64, i64* %blen, align 8, !dbg !3311, !tbaa !3308
  %cmp = icmp eq i64 %2, 0, !dbg !3312
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3313

lor.rhs:                                          ; preds = %entry
  %3 = load i8*, i8** %b, align 8, !dbg !3314, !tbaa !2668
  %4 = load i64, i64* %blen, align 8, !dbg !3314, !tbaa !3308
  %sub = sub i64 %4, 1, !dbg !3314
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %sub, !dbg !3314, !ctir !177
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3314, !tbaa !3315
  %conv = sext i8 %5 to i32, !dbg !3314
  %cmp2 = icmp eq i32 %conv, 47, !dbg !3314
  br label %lor.end, !dbg !3313

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %frombool = zext i1 %6 to i8, !dbg !3310
  store i8 %frombool, i8* %looks_like_a_dir, align 1, !dbg !3310, !tbaa !2762
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3316, metadata !DIExpression()), !dbg !3317
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3318, metadata !DIExpression()), !dbg !3319
  %7 = load i8*, i8** %file.addr, align 8, !dbg !3320, !tbaa !2668
  %call4 = call i32 @stat(i8* %7, %struct.stat* %st) #9, !dbg !3321
  %cmp5 = icmp eq i32 %call4, 0, !dbg !3322
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !3321

cond.true:                                        ; preds = %lor.end
  br label %cond.end, !dbg !3321

cond.false:                                       ; preds = %lor.end
  %call7 = call i32* @__errno_location() #16, !dbg !3323
  %8 = load i32, i32* %call7, align 4, !dbg !3323, !tbaa !2655, !ctir !5
  br label %cond.end, !dbg !3321

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %8, %cond.false ], !dbg !3321
  store i32 %cond, i32* %err, align 4, !dbg !3319, !tbaa !2655
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !3324, metadata !DIExpression()), !dbg !3325
  %9 = load i32, i32* %err, align 4, !dbg !3326, !tbaa !2655
  %tobool = icmp ne i32 %9, 0, !dbg !3326
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3327

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3328, !ctir !276
  %10 = load i32, i32* %st_mode, align 8, !dbg !3328, !tbaa !2934, !ctir !137
  %and = and i32 %10, 61440, !dbg !3328
  %cmp8 = icmp eq i32 %and, 16384, !dbg !3328
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %11 = phi i1 [ false, %cond.end ], [ %cmp8, %land.rhs ], !dbg !3329
  %frombool10 = zext i1 %11 to i8, !dbg !3325
  store i8 %frombool10, i8* %is_a_dir, align 1, !dbg !3325, !tbaa !2762
  %12 = load i32, i32* %err, align 4, !dbg !3330, !tbaa !2655
  %tobool11 = icmp ne i32 %12, 0, !dbg !3330
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !3332

land.lhs.true:                                    ; preds = %land.end
  %13 = load i32, i32* %err, align 4, !dbg !3333, !tbaa !2655
  %cmp12 = icmp ne i32 %13, 2, !dbg !3334
  br i1 %cmp12, label %if.then, label %if.end, !dbg !3335

if.then:                                          ; preds = %land.lhs.true
  %14 = load i32, i32* %err, align 4, !dbg !3336, !tbaa !2655
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !3336
  %15 = load i8*, i8** %file.addr, align 8, !dbg !3336, !tbaa !2668
  %call15 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !3336
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %14, i8* %call14, i8* %call15), !dbg !3336
  unreachable, !dbg !3336

if.end:                                           ; preds = %land.lhs.true, %land.end
  %16 = load i8, i8* %is_a_dir, align 1, !dbg !3337, !tbaa !2762
  %tobool16 = trunc i8 %16 to i1, !dbg !3337
  %conv17 = zext i1 %tobool16 to i32, !dbg !3337
  %17 = load i8, i8* %looks_like_a_dir, align 1, !dbg !3339, !tbaa !2762
  %tobool18 = trunc i8 %17 to i1, !dbg !3339
  %conv19 = zext i1 %tobool18 to i32, !dbg !3339
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !3340
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !3341

if.then22:                                        ; preds = %if.end
  %18 = load i32, i32* %err, align 4, !dbg !3342, !tbaa !2655
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !3342
  %19 = load i8*, i8** %file.addr, align 8, !dbg !3342, !tbaa !2668
  %call24 = call i8* @quotearg_style(i32 4, i8* %19), !dbg !3342
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %18, i8* %call23, i8* %call24), !dbg !3342
  unreachable, !dbg !3342

if.end25:                                         ; preds = %if.end
  %20 = load i8, i8* %is_a_dir, align 1, !dbg !3343, !tbaa !2762
  %tobool26 = trunc i8 %20 to i1, !dbg !3343
  ret i1 %tobool26, !dbg !3344
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extra_mode(i32 %input) #4 !dbg !3345 !ctir !219 {
entry:
  %input.addr = alloca i32, align 4, !ctir !136
  %mask = alloca i32, align 4, !ctir !136
  store i32 %input, i32* %input.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %input.addr, metadata !3346, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !3348, metadata !DIExpression()), !dbg !3349
  store i32 61951, i32* %mask, align 4, !dbg !3349, !tbaa !2655
  %0 = load i32, i32* %input.addr, align 4, !dbg !3350, !tbaa !2655
  %1 = load i32, i32* %mask, align 4, !dbg !3351, !tbaa !2655
  %neg = xor i32 %1, -1, !dbg !3352
  %and = and i32 %0, %neg, !dbg !3353
  %tobool = icmp ne i32 %and, 0, !dbg !3354
  %lnot = xor i1 %tobool, true, !dbg !3354
  %lnot1 = xor i1 %lnot, true, !dbg !3355
  ret i1 %lnot1, !dbg !3356
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_ids() #4 !dbg !3357 !ctir !197 {
entry:
  %pw = alloca %struct.passwd*, align 8, !ctir !221
  %gr = alloca %struct.group*, align 8, !ctir !232
  %tmp = alloca i64, align 8, !ctir !54
  %tmp17 = alloca i64, align 8, !ctir !54
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !3358, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.declare(metadata %struct.group** %gr, metadata !3360, metadata !DIExpression()), !dbg !3361
  %0 = load i8*, i8** @owner_name, align 8, !dbg !3362, !tbaa !2668
  %tobool = icmp ne i8* %0, null, !dbg !3362
  br i1 %tobool, label %if.then, label %if.else9, !dbg !3364

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @owner_name, align 8, !dbg !3365, !tbaa !2668
  %call = call %struct.passwd* @getpwnam(i8* %1), !dbg !3367
  store %struct.passwd* %call, %struct.passwd** %pw, align 8, !dbg !3368, !tbaa !2668
  %2 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3369, !tbaa !2668
  %cmp = icmp eq %struct.passwd* %2, null, !dbg !3371
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3372

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !3373, metadata !DIExpression()), !dbg !3375
  %3 = load i8*, i8** @owner_name, align 8, !dbg !3376, !tbaa !2668
  %call2 = call i32 @xstrtoul(i8* %3, i8** null, i32 0, i64* %tmp, i8* null), !dbg !3378
  %cmp3 = icmp ne i32 %call2, 0, !dbg !3379
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !3380

lor.lhs.false:                                    ; preds = %if.then1
  %4 = load i64, i64* %tmp, align 8, !dbg !3381, !tbaa !3308
  %cmp4 = icmp ult i64 4294967295, %4, !dbg !3382
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3383

if.then5:                                         ; preds = %lor.lhs.false, %if.then1
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)) #9, !dbg !3384
  %5 = load i8*, i8** @owner_name, align 8, !dbg !3384, !tbaa !2668
  %call7 = call i8* @quote(i8* %5), !dbg !3384
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call6, i8* %call7), !dbg !3384
  unreachable, !dbg !3384

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, i64* %tmp, align 8, !dbg !3385, !tbaa !3308
  %conv = trunc i64 %6 to i32, !dbg !3385
  store i32 %conv, i32* @owner_id, align 4, !dbg !3386, !tbaa !2655
  br label %if.end8, !dbg !3387

if.else:                                          ; preds = %if.then
  %7 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3388, !tbaa !2668
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %7, i32 0, i32 2, !dbg !3389, !ctir !222
  %8 = load i32, i32* %pw_uid, align 8, !dbg !3389, !tbaa !3390, !ctir !125
  store i32 %8, i32* @owner_id, align 4, !dbg !3392, !tbaa !2655
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  call void @endpwent(), !dbg !3393
  br label %if.end10, !dbg !3394

if.else9:                                         ; preds = %entry
  store i32 -1, i32* @owner_id, align 4, !dbg !3395, !tbaa !2655
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  %9 = load i8*, i8** @group_name, align 8, !dbg !3396, !tbaa !2668
  %tobool11 = icmp ne i8* %9, null, !dbg !3396
  br i1 %tobool11, label %if.then12, label %if.else31, !dbg !3398

if.then12:                                        ; preds = %if.end10
  %10 = load i8*, i8** @group_name, align 8, !dbg !3399, !tbaa !2668
  %call13 = call %struct.group* @getgrnam(i8* %10), !dbg !3401
  store %struct.group* %call13, %struct.group** %gr, align 8, !dbg !3402, !tbaa !2668
  %11 = load %struct.group*, %struct.group** %gr, align 8, !dbg !3403, !tbaa !2668
  %cmp14 = icmp eq %struct.group* %11, null, !dbg !3405
  br i1 %cmp14, label %if.then16, label %if.else29, !dbg !3406

if.then16:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i64* %tmp17, metadata !3407, metadata !DIExpression()), !dbg !3409
  %12 = load i8*, i8** @group_name, align 8, !dbg !3410, !tbaa !2668
  %call18 = call i32 @xstrtoul(i8* %12, i8** null, i32 0, i64* %tmp17, i8* null), !dbg !3412
  %cmp19 = icmp ne i32 %call18, 0, !dbg !3413
  br i1 %cmp19, label %if.then24, label %lor.lhs.false21, !dbg !3414

lor.lhs.false21:                                  ; preds = %if.then16
  %13 = load i64, i64* %tmp17, align 8, !dbg !3415, !tbaa !3308
  %cmp22 = icmp ult i64 4294967295, %13, !dbg !3416
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !3417

if.then24:                                        ; preds = %lor.lhs.false21, %if.then16
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0)) #9, !dbg !3418
  %14 = load i8*, i8** @group_name, align 8, !dbg !3418, !tbaa !2668
  %call26 = call i8* @quote(i8* %14), !dbg !3418
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !3418
  unreachable, !dbg !3418

if.end27:                                         ; preds = %lor.lhs.false21
  %15 = load i64, i64* %tmp17, align 8, !dbg !3419, !tbaa !3308
  %conv28 = trunc i64 %15 to i32, !dbg !3419
  store i32 %conv28, i32* @group_id, align 4, !dbg !3420, !tbaa !2655
  br label %if.end30, !dbg !3421

if.else29:                                        ; preds = %if.then12
  %16 = load %struct.group*, %struct.group** %gr, align 8, !dbg !3422, !tbaa !2668
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %16, i32 0, i32 2, !dbg !3423, !ctir !233
  %17 = load i32, i32* %gr_gid, align 8, !dbg !3423, !tbaa !3424, !ctir !127
  store i32 %17, i32* @group_id, align 4, !dbg !3426, !tbaa !2655
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.end27
  call void @endgrent(), !dbg !3427
  br label %if.end32, !dbg !3428

if.else31:                                        ; preds = %if.end10
  store i32 -1, i32* @group_id, align 4, !dbg !3429, !tbaa !2655
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.end30
  ret void, !dbg !3430
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @process_dir(i8* %dir, %struct.savewd* %wd, i8* %options) #4 !dbg !3431 !ctir !240 {
entry:
  %dir.addr = alloca i8*, align 8, !ctir !7
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !242
  %options.addr = alloca i8*, align 8, !ctir !47
  %x = alloca %struct.cp_options*, align 8, !ctir !243
  %ret = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3432, metadata !DIExpression()), !dbg !3433
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !3434, metadata !DIExpression()), !dbg !3435
  store i8* %options, i8** %options.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3436, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3438, metadata !DIExpression()), !dbg !3439
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3440, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3440
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3439, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3441, metadata !DIExpression()), !dbg !3442
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !3443, !tbaa !2668
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !3444, !tbaa !2668
  %4 = load i8*, i8** %options.addr, align 8, !dbg !3445, !tbaa !2668
  %5 = load i32, i32* @dir_mode, align 4, !dbg !3446, !tbaa !2655
  %6 = load i32, i32* @dir_mode_bits, align 4, !dbg !3447, !tbaa !2655
  %7 = load i32, i32* @owner_id, align 4, !dbg !3448, !tbaa !2655
  %8 = load i32, i32* @group_id, align 4, !dbg !3449, !tbaa !2655
  %call = call zeroext i1 @make_dir_parents(i8* %2, %struct.savewd* %3, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %4, i32 %5, void (i8*, i8*)* @announce_mkdir, i32 %6, i32 %7, i32 %8, i1 zeroext false), !dbg !3450
  %9 = zext i1 %call to i64, !dbg !3450
  %cond = select i1 %call, i32 0, i32 1, !dbg !3450
  store i32 %cond, i32* %ret, align 4, !dbg !3442, !tbaa !2655
  %10 = load i32, i32* %ret, align 4, !dbg !3451, !tbaa !2655
  %cmp = icmp eq i32 %10, 0, !dbg !3453
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !3454

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3455, !tbaa !2668
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !3456, !ctir !244
  %12 = load i8, i8* %set_security_context, align 1, !dbg !3456, !tbaa !2886
  %tobool = trunc i8 %12 to i1, !dbg !3456, !ctir !139
  br i1 %tobool, label %if.then, label %if.end10, !dbg !3457

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %dir.addr, align 8, !dbg !3458, !tbaa !2668
  %call1 = call i8* @last_component(i8* %13) #14, !dbg !3461
  %call2 = call zeroext i1 @restorecon(i8* %call1, i1 zeroext false, i1 zeroext false), !dbg !3462
  br i1 %call2, label %if.end, label %land.lhs.true3, !dbg !3463

land.lhs.true3:                                   ; preds = %if.then
  %call4 = call i32* @__errno_location() #16, !dbg !3464
  %14 = load i32, i32* %call4, align 4, !dbg !3464, !tbaa !2655, !ctir !5
  %call5 = call zeroext i1 @ignorable_ctx_err(i32 %14), !dbg !3465
  br i1 %call5, label %if.end, label %if.then6, !dbg !3466

if.then6:                                         ; preds = %land.lhs.true3
  %call7 = call i32* @__errno_location() #16, !dbg !3467
  %15 = load i32, i32* %call7, align 4, !dbg !3467, !tbaa !2655, !ctir !5
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0)) #9, !dbg !3468
  %16 = load i8*, i8** %dir.addr, align 8, !dbg !3469, !tbaa !2668
  %call9 = call i8* @quotearg_style(i32 4, i8* %16), !dbg !3469
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call8, i8* %call9), !dbg !3470
  br label %if.end, !dbg !3470

if.end:                                           ; preds = %if.then6, %land.lhs.true3, %if.then
  br label %if.end10, !dbg !3471

if.end10:                                         ; preds = %if.end, %land.lhs.true, %entry
  %17 = load i32, i32* %ret, align 4, !dbg !3472, !tbaa !2655
  ret i32 %17, !dbg !3473
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file_parents(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3474 !ctir !255 {
entry:
  %from.addr = alloca i8*, align 8, !ctir !177
  %to.addr = alloca i8*, align 8, !ctir !7
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !243
  store i8* %from, i8** %from.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3475, metadata !DIExpression()), !dbg !3476
  store i8* %to, i8** %to.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3477, metadata !DIExpression()), !dbg !3478
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3479, metadata !DIExpression()), !dbg !3480
  %0 = load i8*, i8** %from.addr, align 8, !dbg !3481, !tbaa !2668
  %1 = load i8*, i8** %to.addr, align 8, !dbg !3482, !tbaa !2668
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3483, !tbaa !2668
  %call = call zeroext i1 @mkancesdirs_safe_wd(i8* %0, i8* %1, %struct.cp_options* %2, i1 zeroext false), !dbg !3484
  br i1 %call, label %land.rhs, label %land.end, !dbg !3485

land.rhs:                                         ; preds = %entry
  %3 = load i8*, i8** %from.addr, align 8, !dbg !3486, !tbaa !2668
  %4 = load i8*, i8** %to.addr, align 8, !dbg !3487, !tbaa !2668
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3488, !tbaa !2668
  %call1 = call zeroext i1 @install_file_in_file(i8* %3, i8* %4, %struct.cp_options* %5), !dbg !3489
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %call1, %land.rhs ], !dbg !3490
  ret i1 %6, !dbg !3491
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3492 !ctir !259 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %from.addr = alloca i8*, align 8, !ctir !177
  %to.addr = alloca i8*, align 8, !ctir !177
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !243
  %from_sb = alloca %struct.stat, align 8, !ctir !276
  store i8* %from, i8** %from.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3493, metadata !DIExpression()), !dbg !3494
  store i8* %to, i8** %to.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3495, metadata !DIExpression()), !dbg !3496
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3497, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.declare(metadata %struct.stat* %from_sb, metadata !3499, metadata !DIExpression()), !dbg !3500
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3501, !tbaa !2668
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 16, !dbg !3503, !ctir !244
  %1 = load i8, i8* %preserve_timestamps, align 1, !dbg !3503, !tbaa !2846
  %tobool = trunc i8 %1 to i1, !dbg !3503, !ctir !139
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3504

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %from.addr, align 8, !dbg !3505, !tbaa !2668
  %call = call i32 @stat(i8* %2, %struct.stat* %from_sb) #9, !dbg !3506
  %cmp = icmp ne i32 %call, 0, !dbg !3507
  br i1 %cmp, label %if.then, label %if.end, !dbg !3508

if.then:                                          ; preds = %land.lhs.true
  %call1 = call i32* @__errno_location() #16, !dbg !3509
  %3 = load i32, i32* %call1, align 4, !dbg !3509, !tbaa !2655, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0)) #9, !dbg !3511
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3512, !tbaa !2668
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !3512
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !3513
  store i1 false, i1* %retval, align 1, !dbg !3514
  br label %return, !dbg !3514

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %from.addr, align 8, !dbg !3515, !tbaa !2668
  %6 = load i8*, i8** %to.addr, align 8, !dbg !3517, !tbaa !2668
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3518, !tbaa !2668
  %call4 = call zeroext i1 @copy_file(i8* %5, i8* %6, %struct.cp_options* %7), !dbg !3519
  br i1 %call4, label %if.end6, label %if.then5, !dbg !3520

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !3521
  br label %return, !dbg !3521

if.end6:                                          ; preds = %if.end
  %8 = load i8, i8* @strip_files, align 1, !dbg !3522, !tbaa !2762
  %tobool7 = trunc i8 %8 to i1, !dbg !3522
  br i1 %tobool7, label %if.then8, label %if.end19, !dbg !3524

if.then8:                                         ; preds = %if.end6
  %9 = load i8*, i8** %to.addr, align 8, !dbg !3525, !tbaa !2668
  %call9 = call zeroext i1 @strip(i8* %9), !dbg !3527
  br i1 %call9, label %if.end18, label %if.then10, !dbg !3528

if.then10:                                        ; preds = %if.then8
  %10 = load i8*, i8** %to.addr, align 8, !dbg !3529, !tbaa !2668
  %call11 = call i32 @unlink(i8* %10) #9, !dbg !3532
  %cmp12 = icmp ne i32 %call11, 0, !dbg !3533
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !3534

if.then13:                                        ; preds = %if.then10
  %call14 = call i32* @__errno_location() #16, !dbg !3535
  %11 = load i32, i32* %call14, align 4, !dbg !3535, !tbaa !2655, !ctir !5
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0)) #9, !dbg !3535
  %12 = load i8*, i8** %to.addr, align 8, !dbg !3535, !tbaa !2668
  %call16 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !3535
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call15, i8* %call16), !dbg !3535
  unreachable, !dbg !3535

if.end17:                                         ; preds = %if.then10
  store i1 false, i1* %retval, align 1, !dbg !3536
  br label %return, !dbg !3536

if.end18:                                         ; preds = %if.then8
  br label %if.end19, !dbg !3537

if.end19:                                         ; preds = %if.end18, %if.end6
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3538, !tbaa !2668
  %preserve_timestamps20 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 16, !dbg !3540, !ctir !244
  %14 = load i8, i8* %preserve_timestamps20, align 1, !dbg !3540, !tbaa !2846
  %tobool21 = trunc i8 %14 to i1, !dbg !3540, !ctir !139
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !3541

land.lhs.true22:                                  ; preds = %if.end19
  %15 = load i8, i8* @strip_files, align 1, !dbg !3542, !tbaa !2762
  %tobool23 = trunc i8 %15 to i1, !dbg !3542
  br i1 %tobool23, label %land.lhs.true25, label %lor.lhs.false, !dbg !3543

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %from_sb, i32 0, i32 3, !dbg !3544, !ctir !276
  %16 = load i32, i32* %st_mode, align 8, !dbg !3544, !tbaa !2934, !ctir !137
  %and = and i32 %16, 61440, !dbg !3544
  %cmp24 = icmp eq i32 %and, 32768, !dbg !3544
  br i1 %cmp24, label %if.end28, label %land.lhs.true25, !dbg !3545

land.lhs.true25:                                  ; preds = %lor.lhs.false, %land.lhs.true22
  %17 = load i8*, i8** %to.addr, align 8, !dbg !3546, !tbaa !2668
  %call26 = call zeroext i1 @change_timestamps(%struct.stat* %from_sb, i8* %17), !dbg !3547
  br i1 %call26, label %if.end28, label %if.then27, !dbg !3548

if.then27:                                        ; preds = %land.lhs.true25
  store i1 false, i1* %retval, align 1, !dbg !3549
  br label %return, !dbg !3549

if.end28:                                         ; preds = %land.lhs.true25, %lor.lhs.false, %if.end19
  %18 = load i8*, i8** %to.addr, align 8, !dbg !3550, !tbaa !2668
  %call29 = call zeroext i1 @change_attributes(i8* %18), !dbg !3551
  store i1 %call29, i1* %retval, align 1, !dbg !3552
  br label %return, !dbg !3552

return:                                           ; preds = %if.end28, %if.then27, %if.end17, %if.then5, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3553
  ret i1 %19, !dbg !3553
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_dir(i8* %from, i8* %to_dir, %struct.cp_options* %x, i1 zeroext %mkdir_and_install) #4 !dbg !3554 !ctir !312 {
entry:
  %from.addr = alloca i8*, align 8, !ctir !177
  %to_dir.addr = alloca i8*, align 8, !ctir !177
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !243
  %mkdir_and_install.addr = alloca i8, align 1, !ctir !139
  %from_base = alloca i8*, align 8, !ctir !177
  %to = alloca i8*, align 8, !ctir !7
  %ret = alloca i8, align 1, !ctir !139
  store i8* %from, i8** %from.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3555, metadata !DIExpression()), !dbg !3556
  store i8* %to_dir, i8** %to_dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %to_dir.addr, metadata !3557, metadata !DIExpression()), !dbg !3558
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3559, metadata !DIExpression()), !dbg !3560
  %frombool = zext i1 %mkdir_and_install to i8
  store i8 %frombool, i8* %mkdir_and_install.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install.addr, metadata !3561, metadata !DIExpression()), !dbg !3562
  call void @llvm.dbg.declare(metadata i8** %from_base, metadata !3563, metadata !DIExpression()), !dbg !3564
  %0 = load i8*, i8** %from.addr, align 8, !dbg !3565, !tbaa !2668
  %call = call i8* @last_component(i8* %0) #14, !dbg !3566
  store i8* %call, i8** %from_base, align 8, !dbg !3564, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %to, metadata !3567, metadata !DIExpression()), !dbg !3568
  %1 = load i8*, i8** %to_dir.addr, align 8, !dbg !3569, !tbaa !2668
  %2 = load i8*, i8** %from_base, align 8, !dbg !3570, !tbaa !2668
  %call1 = call i8* @file_name_concat(i8* %1, i8* %2, i8** null), !dbg !3571
  store i8* %call1, i8** %to, align 8, !dbg !3568, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !3572, metadata !DIExpression()), !dbg !3573
  store i8 1, i8* %ret, align 1, !dbg !3573, !tbaa !2762
  %3 = load i8, i8* %mkdir_and_install.addr, align 1, !dbg !3574, !tbaa !2762
  %tobool = trunc i8 %3 to i1, !dbg !3574
  br i1 %tobool, label %if.then, label %if.end, !dbg !3576

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3577, !tbaa !2668
  %5 = load i8*, i8** %to, align 8, !dbg !3578, !tbaa !2668
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3579, !tbaa !2668
  %call2 = call zeroext i1 @mkancesdirs_safe_wd(i8* %4, i8* %5, %struct.cp_options* %6, i1 zeroext true), !dbg !3580
  %frombool3 = zext i1 %call2 to i8, !dbg !3581
  store i8 %frombool3, i8* %ret, align 1, !dbg !3581, !tbaa !2762
  br label %if.end, !dbg !3582

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8, i8* %ret, align 1, !dbg !3583, !tbaa !2762
  %tobool4 = trunc i8 %7 to i1, !dbg !3583
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !3584

land.rhs:                                         ; preds = %if.end
  %8 = load i8*, i8** %from.addr, align 8, !dbg !3585, !tbaa !2668
  %9 = load i8*, i8** %to, align 8, !dbg !3586, !tbaa !2668
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3587, !tbaa !2668
  %call5 = call zeroext i1 @install_file_in_file(i8* %8, i8* %9, %struct.cp_options* %10), !dbg !3588
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %call5, %land.rhs ], !dbg !3589
  %frombool6 = zext i1 %11 to i8, !dbg !3590
  store i8 %frombool6, i8* %ret, align 1, !dbg !3590, !tbaa !2762
  %12 = load i8*, i8** %to, align 8, !dbg !3591, !tbaa !2668
  call void @free(i8* %12) #9, !dbg !3592
  %13 = load i8, i8* %ret, align 1, !dbg !3593, !tbaa !2762
  %tobool7 = trunc i8 %13 to i1, !dbg !3593
  ret i1 %tobool7, !dbg !3594
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mkancesdirs_safe_wd(i8* %from, i8* %to, %struct.cp_options* %x, i1 zeroext %save_always) #4 !dbg !3595 !ctir !257 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %from.addr = alloca i8*, align 8, !ctir !177
  %to.addr = alloca i8*, align 8, !ctir !7
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !128
  %save_always.addr = alloca i8, align 1, !ctir !139
  %save_working_directory = alloca i8, align 1, !ctir !139
  %status = alloca i32, align 4, !ctir !5
  %wd = alloca %struct.savewd, align 4, !ctir !99
  %restore_result = alloca i32, align 4, !ctir !5
  %restore_errno = alloca i32, align 4, !ctir !5
  store i8* %from, i8** %from.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3596, metadata !DIExpression()), !dbg !3597
  store i8* %to, i8** %to.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3598, metadata !DIExpression()), !dbg !3599
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3600, metadata !DIExpression()), !dbg !3601
  %frombool = zext i1 %save_always to i8
  store i8 %frombool, i8* %save_always.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %save_always.addr, metadata !3602, metadata !DIExpression()), !dbg !3603
  call void @llvm.dbg.declare(metadata i8* %save_working_directory, metadata !3604, metadata !DIExpression()), !dbg !3605
  %0 = load i8, i8* %save_always.addr, align 1, !dbg !3606, !tbaa !2762
  %tobool = trunc i8 %0 to i1, !dbg !3606
  br i1 %tobool, label %lor.end7, label %lor.rhs, !dbg !3607

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !3608, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3608, !ctir !177
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3608, !tbaa !3315
  %conv = sext i8 %2 to i32, !dbg !3608
  %cmp = icmp eq i32 %conv, 47, !dbg !3608
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3609

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i8*, i8** %to.addr, align 8, !dbg !3610, !tbaa !2668
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3610, !ctir !7
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3610, !tbaa !3315
  %conv3 = sext i8 %4 to i32, !dbg !3610
  %cmp4 = icmp eq i32 %conv3, 47, !dbg !3610
  br i1 %cmp4, label %lor.end, label %lor.rhs6, !dbg !3610

lor.rhs6:                                         ; preds = %land.rhs
  br label %lor.end, !dbg !3610

lor.end:                                          ; preds = %lor.rhs6, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ false, %lor.rhs6 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %5, %lor.end ], !dbg !3611
  %lnot = xor i1 %6, true, !dbg !3612
  br label %lor.end7, !dbg !3607

lor.end7:                                         ; preds = %land.end, %entry
  %7 = phi i1 [ true, %entry ], [ %lnot, %land.end ]
  %frombool8 = zext i1 %7 to i8, !dbg !3605
  store i8 %frombool8, i8* %save_working_directory, align 1, !dbg !3605, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3613, metadata !DIExpression()), !dbg !3614
  store i32 0, i32* %status, align 4, !dbg !3614, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !3615, metadata !DIExpression()), !dbg !3616
  call void @savewd_init(%struct.savewd* %wd), !dbg !3617
  %8 = load i8, i8* %save_working_directory, align 1, !dbg !3618, !tbaa !2762
  %tobool9 = trunc i8 %8 to i1, !dbg !3618
  br i1 %tobool9, label %if.end, label %if.then, !dbg !3620

if.then:                                          ; preds = %lor.end7
  call void @savewd_finish(%struct.savewd* %wd), !dbg !3621
  br label %if.end, !dbg !3621

if.end:                                           ; preds = %if.then, %lor.end7
  %9 = load i8*, i8** %to.addr, align 8, !dbg !3622, !tbaa !2668
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3624, !tbaa !2668
  %11 = bitcast %struct.cp_options* %10 to i8*, !dbg !3624
  %call = call i64 @mkancesdirs(i8* %9, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %11), !dbg !3625
  %cmp10 = icmp eq i64 %call, -1, !dbg !3626
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !3627

if.then12:                                        ; preds = %if.end
  %call13 = call i32* @__errno_location() #16, !dbg !3628
  %12 = load i32, i32* %call13, align 4, !dbg !3628, !tbaa !2655, !ctir !5
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !3630
  %13 = load i8*, i8** %to.addr, align 8, !dbg !3631, !tbaa !2668
  %call15 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !3631
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call14, i8* %call15), !dbg !3632
  store i32 1, i32* %status, align 4, !dbg !3633, !tbaa !2655
  br label %if.end16, !dbg !3634

if.end16:                                         ; preds = %if.then12, %if.end
  %14 = load i8, i8* %save_working_directory, align 1, !dbg !3635, !tbaa !2762
  %tobool17 = trunc i8 %14 to i1, !dbg !3635
  br i1 %tobool17, label %if.then18, label %if.end33, !dbg !3637

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %restore_result, metadata !3638, metadata !DIExpression()), !dbg !3640
  %15 = load i32, i32* %status, align 4, !dbg !3641, !tbaa !2655
  %call19 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %15), !dbg !3642
  store i32 %call19, i32* %restore_result, align 4, !dbg !3640, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %restore_errno, metadata !3643, metadata !DIExpression()), !dbg !3644
  %call20 = call i32* @__errno_location() #16, !dbg !3645
  %16 = load i32, i32* %call20, align 4, !dbg !3645, !tbaa !2655, !ctir !5
  store i32 %16, i32* %restore_errno, align 4, !dbg !3644, !tbaa !2655
  call void @savewd_finish(%struct.savewd* %wd), !dbg !3646
  %17 = load i32, i32* %restore_result, align 4, !dbg !3647, !tbaa !2655
  %cmp21 = icmp slt i32 0, %17, !dbg !3649
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !3650

if.then23:                                        ; preds = %if.then18
  store i1 false, i1* %retval, align 1, !dbg !3651
  br label %return, !dbg !3651

if.end24:                                         ; preds = %if.then18
  %18 = load i32, i32* %restore_result, align 4, !dbg !3652, !tbaa !2655
  %cmp25 = icmp slt i32 %18, 0, !dbg !3654
  br i1 %cmp25, label %land.lhs.true, label %if.end32, !dbg !3655

land.lhs.true:                                    ; preds = %if.end24
  %19 = load i32, i32* %status, align 4, !dbg !3656, !tbaa !2655
  %cmp27 = icmp eq i32 %19, 0, !dbg !3657
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !3658

if.then29:                                        ; preds = %land.lhs.true
  %20 = load i32, i32* %restore_errno, align 4, !dbg !3659, !tbaa !2655
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !3661
  %21 = load i8*, i8** %to.addr, align 8, !dbg !3662, !tbaa !2668
  %call31 = call i8* @quotearg_style(i32 4, i8* %21), !dbg !3662
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %20, i8* %call30, i8* %call31), !dbg !3663
  store i1 false, i1* %retval, align 1, !dbg !3664
  br label %return, !dbg !3664

if.end32:                                         ; preds = %land.lhs.true, %if.end24
  br label %if.end33, !dbg !3665

if.end33:                                         ; preds = %if.end32, %if.end16
  %22 = load i32, i32* %status, align 4, !dbg !3666, !tbaa !2655
  %cmp34 = icmp eq i32 %22, 0, !dbg !3667
  store i1 %cmp34, i1* %retval, align 1, !dbg !3668
  br label %return, !dbg !3668

return:                                           ; preds = %if.end33, %if.then29, %if.then23
  %23 = load i1, i1* %retval, align 1, !dbg !3669
  ret i1 %23, !dbg !3669
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ancestor(i8* %dir, i8* %component, i8* %options) #4 !dbg !3670 !ctir !245 {
entry:
  %dir.addr = alloca i8*, align 8, !ctir !177
  %component.addr = alloca i8*, align 8, !ctir !177
  %options.addr = alloca i8*, align 8, !ctir !47
  %x = alloca %struct.cp_options*, align 8, !ctir !243
  %r = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3671, metadata !DIExpression()), !dbg !3672
  store i8* %component, i8** %component.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %component.addr, metadata !3673, metadata !DIExpression()), !dbg !3674
  store i8* %options, i8** %options.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3675, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3677, metadata !DIExpression()), !dbg !3678
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3679, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3679
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3678, !tbaa !2668
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3680, !tbaa !2668
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 18, !dbg !3682, !ctir !244
  %3 = load i8, i8* %set_security_context, align 1, !dbg !3682, !tbaa !2886
  %tobool = trunc i8 %3 to i1, !dbg !3682, !ctir !139
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3683

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %component.addr, align 8, !dbg !3684, !tbaa !2668
  %call = call i32 @defaultcon(i8* %4, i32 16384), !dbg !3685
  %cmp = icmp slt i32 %call, 0, !dbg !3686
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !3687

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !3688
  %5 = load i32, i32* %call2, align 4, !dbg !3688, !tbaa !2655, !ctir !5
  %call3 = call zeroext i1 @ignorable_ctx_err(i32 %5), !dbg !3689
  br i1 %call3, label %if.end, label %if.then, !dbg !3690

if.then:                                          ; preds = %land.lhs.true1
  %call4 = call i32* @__errno_location() #16, !dbg !3691
  %6 = load i32, i32* %call4, align 4, !dbg !3691, !tbaa !2655, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.73, i64 0, i64 0)) #9, !dbg !3692
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !3693, !tbaa !2668
  %call6 = call i8* @quotearg_style(i32 4, i8* %7), !dbg !3693
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call5, i8* %call6), !dbg !3694
  br label %if.end, !dbg !3694

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3695, metadata !DIExpression()), !dbg !3696
  %8 = load i8*, i8** %component.addr, align 8, !dbg !3697, !tbaa !2668
  %call7 = call i32 @mkdir(i8* %8, i32 493) #9, !dbg !3698
  store i32 %call7, i32* %r, align 4, !dbg !3696, !tbaa !2655
  %9 = load i32, i32* %r, align 4, !dbg !3699, !tbaa !2655
  %cmp8 = icmp eq i32 %9, 0, !dbg !3701
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3702

if.then9:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir.addr, align 8, !dbg !3703, !tbaa !2668
  %11 = load i8*, i8** %options.addr, align 8, !dbg !3704, !tbaa !2668
  call void @announce_mkdir(i8* %10, i8* %11), !dbg !3705
  br label %if.end10, !dbg !3705

if.end10:                                         ; preds = %if.then9, %if.end
  %12 = load i32, i32* %r, align 4, !dbg !3706, !tbaa !2655
  ret i32 %12, !dbg !3707
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !3708 !ctir !247 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !177
  %mode.addr = alloca i32, align 4, !ctir !136
  store i8* %path, i8** %path.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3710, metadata !DIExpression()), !dbg !3711
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3712, metadata !DIExpression()), !dbg !3713
  %call = call i32* @__errno_location() #16, !dbg !3714
  store i32 95, i32* %call, align 4, !dbg !3715, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !3716
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !3717 !ctir !253 {
entry:
  %err.addr = alloca i32, align 4, !ctir !5
  store i32 %err, i32* %err.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3718, metadata !DIExpression()), !dbg !3719
  %0 = load i32, i32* %err.addr, align 4, !dbg !3720, !tbaa !2655
  %cmp = icmp eq i32 %0, 95, !dbg !3721
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3722

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3723, !tbaa !2655
  %cmp1 = icmp eq i32 %1, 61, !dbg !3724
  br label %lor.end, !dbg !3722

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3725
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @announce_mkdir(i8* %dir, i8* %options) #4 !dbg !3726 !ctir !249 {
entry:
  %dir.addr = alloca i8*, align 8, !ctir !177
  %options.addr = alloca i8*, align 8, !ctir !47
  %x = alloca %struct.cp_options*, align 8, !ctir !243
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3727, metadata !DIExpression()), !dbg !3728
  store i8* %options, i8** %options.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3729, metadata !DIExpression()), !dbg !3730
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3731, metadata !DIExpression()), !dbg !3732
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3733, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3733
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3732, !tbaa !2668
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3734, !tbaa !2668
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 31, !dbg !3736, !ctir !244
  %3 = load i8, i8* %verbose, align 2, !dbg !3736, !tbaa !2832
  %tobool = trunc i8 %3 to i1, !dbg !3736, !ctir !139
  br i1 %tobool, label %if.then, label %if.end, !dbg !3737

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3738, !tbaa !2668
  %call = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)) #9, !dbg !3739
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !3740, !tbaa !2668
  %call1 = call i8* @quotearg_style(i32 4, i8* %5), !dbg !3740
  call void (%struct._IO_FILE*, i8*, ...) @prog_fprintf(%struct._IO_FILE* %4, i8* %call, i8* %call1), !dbg !3741
  br label %if.end, !dbg !3741

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3742
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3743 !ctir !259 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %from.addr = alloca i8*, align 8, !ctir !177
  %to.addr = alloca i8*, align 8, !ctir !177
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !243
  %copy_into_self = alloca i8, align 1, !ctir !139
  store i8* %from, i8** %from.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3744, metadata !DIExpression()), !dbg !3745
  store i8* %to, i8** %to.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3746, metadata !DIExpression()), !dbg !3747
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3748, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !3750, metadata !DIExpression()), !dbg !3751
  %0 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3752, !tbaa !2762
  %tobool = trunc i8 %0 to i1, !dbg !3752
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3754

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !3755, !tbaa !2668
  %2 = load i8*, i8** %to.addr, align 8, !dbg !3756, !tbaa !2668
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3757, !tbaa !2668
  %call = call zeroext i1 @need_copy(i8* %1, i8* %2, %struct.cp_options* %3), !dbg !3758
  br i1 %call, label %if.end, label %if.then, !dbg !3759

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !3760
  br label %return, !dbg !3760

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3761, !tbaa !2668
  %5 = load i8*, i8** %to.addr, align 8, !dbg !3762, !tbaa !2668
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3763, !tbaa !2668
  %call1 = call zeroext i1 @copy(i8* %4, i8* %5, i1 zeroext false, %struct.cp_options* %6, i8* %copy_into_self, i8* null), !dbg !3764
  store i1 %call1, i1* %retval, align 1, !dbg !3765
  br label %return, !dbg !3765

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !3766
  ret i1 %7, !dbg !3766
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @strip(i8* %name) #4 !dbg !264 !ctir !217 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %status = alloca i32, align 4, !ctir !5
  %ok = alloca i8, align 1, !ctir !139
  %pid = alloca i32, align 4, !ctir !108
  %.compoundliteral = alloca %union.anon, align 4, !ctir !263
  %.compoundliteral12 = alloca %union.anon, align 4, !ctir !268
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3767, metadata !DIExpression()), !dbg !3768
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3769, metadata !DIExpression()), !dbg !3770
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3771, metadata !DIExpression()), !dbg !3772
  store i8 0, i8* %ok, align 1, !dbg !3772, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !3773, metadata !DIExpression()), !dbg !3774
  %call = call i32 @fork() #9, !dbg !3775
  store i32 %call, i32* %pid, align 4, !dbg !3774, !tbaa !2655
  %0 = load i32, i32* %pid, align 4, !dbg !3776, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb3
  ], !dbg !3777

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !3778
  %1 = load i32, i32* %call1, align 4, !dbg !3778, !tbaa !2655, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !3780
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1, i8* %call2), !dbg !3781
  br label %sw.epilog, !dbg !3782

sw.bb3:                                           ; preds = %entry
  %2 = load i8*, i8** @strip_program, align 8, !dbg !3783, !tbaa !2668
  %3 = load i8*, i8** @strip_program, align 8, !dbg !3784, !tbaa !2668
  %4 = load i8*, i8** %name.addr, align 8, !dbg !3785, !tbaa !2668
  %call4 = call i32 (i8*, i8*, ...) @execlp(i8* %2, i8* %3, i8* %4, i8* null) #9, !dbg !3786
  %call5 = call i32* @__errno_location() #16, !dbg !3787
  %5 = load i32, i32* %call5, align 4, !dbg !3787, !tbaa !2655, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !3787
  %6 = load i8*, i8** @strip_program, align 8, !dbg !3787, !tbaa !2668
  %call7 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3787
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %5, i8* %call6, i8* %call7), !dbg !3787
  unreachable, !dbg !3787

sw.default:                                       ; preds = %entry
  %7 = load i32, i32* %pid, align 4, !dbg !3788, !tbaa !2655
  %call8 = call i32 @waitpid(i32 %7, i32* %status, i32 0), !dbg !3790
  %cmp = icmp slt i32 %call8, 0, !dbg !3791
  br i1 %cmp, label %if.then, label %if.else, !dbg !3792

if.then:                                          ; preds = %sw.default
  %call9 = call i32* @__errno_location() #16, !dbg !3793
  %8 = load i32, i32* %call9, align 4, !dbg !3793, !tbaa !2655, !ctir !5
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0)) #9, !dbg !3794
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call10), !dbg !3795
  br label %if.end19, !dbg !3795

if.else:                                          ; preds = %sw.default
  %__in = bitcast %union.anon* %.compoundliteral to i32*, !dbg !3796
  %9 = load i32, i32* %status, align 4, !dbg !3796, !tbaa !2655
  store i32 %9, i32* %__in, align 4, !dbg !3796, !tbaa !3315
  %__i = bitcast %union.anon* %.compoundliteral to i32*, !dbg !3796
  %10 = load i32, i32* %__i, align 4, !dbg !3796, !tbaa !3315, !ctir !263
  %and = and i32 %10, 127, !dbg !3796
  %cmp11 = icmp eq i32 %and, 0, !dbg !3796
  br i1 %cmp11, label %lor.lhs.false, label %if.then16, !dbg !3798

lor.lhs.false:                                    ; preds = %if.else
  %__in13 = bitcast %union.anon* %.compoundliteral12 to i32*, !dbg !3799
  %11 = load i32, i32* %status, align 4, !dbg !3799, !tbaa !2655
  store i32 %11, i32* %__in13, align 4, !dbg !3799, !tbaa !3315
  %__i14 = bitcast %union.anon* %.compoundliteral12 to i32*, !dbg !3799
  %12 = load i32, i32* %__i14, align 4, !dbg !3799, !tbaa !3315, !ctir !268
  %and15 = and i32 %12, 65280, !dbg !3799
  %shr = ashr i32 %and15, 8, !dbg !3799
  %tobool = icmp ne i32 %shr, 0, !dbg !3799
  br i1 %tobool, label %if.then16, label %if.else18, !dbg !3800

if.then16:                                        ; preds = %lor.lhs.false, %if.else
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !3801
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call17), !dbg !3802
  br label %if.end, !dbg !3802

if.else18:                                        ; preds = %lor.lhs.false
  store i8 1, i8* %ok, align 1, !dbg !3803, !tbaa !2762
  br label %if.end

if.end:                                           ; preds = %if.else18, %if.then16
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !3804

sw.epilog:                                        ; preds = %if.end19, %sw.bb
  %13 = load i8, i8* %ok, align 1, !dbg !3805, !tbaa !2762
  %tobool20 = trunc i8 %13 to i1, !dbg !3805
  ret i1 %tobool20, !dbg !3806
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_timestamps(%struct.stat* %src_sb, i8* %dest) #4 !dbg !3807 !ctir !272 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !274
  %dest.addr = alloca i8*, align 8, !ctir !177
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !309
  %tmp = alloca %struct.timespec, align 8, !ctir !296
  %tmp2 = alloca %struct.timespec, align 8, !ctir !296
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !3808, metadata !DIExpression()), !dbg !3809
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3810, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !3812, metadata !DIExpression()), !dbg !3813
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3814, !ctir !309
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3815, !tbaa !2668
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %0) #14, !dbg !3816
  %1 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !3816
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !3816
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !3816
  store i64 %3, i64* %2, align 8, !dbg !3816
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !3816
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !3816
  store i64 %5, i64* %4, align 8, !dbg !3816
  %6 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !3816
  %7 = bitcast %struct.timespec* %tmp to i8*, !dbg !3816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !3816, !tbaa.struct !3817
  %arrayidx1 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !3818, !ctir !309
  %8 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3819, !tbaa !2668
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %8) #14, !dbg !3820
  %9 = bitcast %struct.timespec* %tmp2 to { i64, i64 }*, !dbg !3820
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3820
  %11 = extractvalue { i64, i64 } %call3, 0, !dbg !3820
  store i64 %11, i64* %10, align 8, !dbg !3820
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3820
  %13 = extractvalue { i64, i64 } %call3, 1, !dbg !3820
  store i64 %13, i64* %12, align 8, !dbg !3820
  %14 = bitcast %struct.timespec* %arrayidx1 to i8*, !dbg !3820
  %15 = bitcast %struct.timespec* %tmp2 to i8*, !dbg !3820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 8 %15, i64 16, i1 false), !dbg !3820, !tbaa.struct !3817
  %16 = load i8*, i8** %dest.addr, align 8, !dbg !3821, !tbaa !2668
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3823
  %call4 = call i32 @utimens(i8* %16, %struct.timespec* %arraydecay), !dbg !3824
  %tobool = icmp ne i32 %call4, 0, !dbg !3824
  br i1 %tobool, label %if.then, label %if.end, !dbg !3825

if.then:                                          ; preds = %entry
  %call5 = call i32* @__errno_location() #16, !dbg !3826
  %17 = load i32, i32* %call5, align 4, !dbg !3826, !tbaa !2655, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0)) #9, !dbg !3828
  %18 = load i8*, i8** %dest.addr, align 8, !dbg !3829, !tbaa !2668
  %call7 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !3829
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* %call6, i8* %call7), !dbg !3830
  store i1 false, i1* %retval, align 1, !dbg !3831
  br label %return, !dbg !3831

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3832
  br label %return, !dbg !3832

return:                                           ; preds = %if.end, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3833
  ret i1 %19, !dbg !3833
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_attributes(i8* %name) #4 !dbg !3834 !ctir !217 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %ok = alloca i8, align 1, !ctir !139
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3835, metadata !DIExpression()), !dbg !3836
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3837, metadata !DIExpression()), !dbg !3838
  store i8 0, i8* %ok, align 1, !dbg !3838, !tbaa !2762
  %0 = load i32, i32* @owner_id, align 4, !dbg !3839, !tbaa !2655
  %cmp = icmp eq i32 %0, -1, !dbg !3841
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true2, !dbg !3842

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @group_id, align 4, !dbg !3843, !tbaa !2655
  %cmp1 = icmp eq i32 %1, -1, !dbg !3844
  br i1 %cmp1, label %if.else, label %land.lhs.true2, !dbg !3845

land.lhs.true2:                                   ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3846, !tbaa !2668
  %3 = load i32, i32* @owner_id, align 4, !dbg !3847, !tbaa !2655
  %4 = load i32, i32* @group_id, align 4, !dbg !3848, !tbaa !2655
  %call = call i32 @lchown(i8* %2, i32 %3, i32 %4) #9, !dbg !3849
  %cmp3 = icmp ne i32 %call, 0, !dbg !3850
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3851

if.then:                                          ; preds = %land.lhs.true2
  %call4 = call i32* @__errno_location() #16, !dbg !3852
  %5 = load i32, i32* %call4, align 4, !dbg !3852, !tbaa !2655, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !3853
  %6 = load i8*, i8** %name.addr, align 8, !dbg !3854, !tbaa !2668
  %call6 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3854
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call5, i8* %call6), !dbg !3855
  br label %if.end14, !dbg !3855

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %7 = load i8*, i8** %name.addr, align 8, !dbg !3856, !tbaa !2668
  %8 = load i32, i32* @mode, align 4, !dbg !3858, !tbaa !2655
  %call7 = call i32 @chmod(i8* %7, i32 %8) #9, !dbg !3859
  %cmp8 = icmp ne i32 %call7, 0, !dbg !3860
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !3861

if.then9:                                         ; preds = %if.else
  %call10 = call i32* @__errno_location() #16, !dbg !3862
  %9 = load i32, i32* %call10, align 4, !dbg !3862, !tbaa !2655, !ctir !5
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i64 0, i64 0)) #9, !dbg !3863
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3864, !tbaa !2668
  %call12 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3864
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call11, i8* %call12), !dbg !3865
  br label %if.end, !dbg !3865

if.else13:                                        ; preds = %if.else
  store i8 1, i8* %ok, align 1, !dbg !3866, !tbaa !2762
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %11 = load i8, i8* @use_default_selinux_context, align 1, !dbg !3867, !tbaa !2762
  %tobool = trunc i8 %11 to i1, !dbg !3867
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !3869

if.then15:                                        ; preds = %if.end14
  %12 = load i8*, i8** %name.addr, align 8, !dbg !3870, !tbaa !2668
  call void @setdefaultfilecon(i8* %12), !dbg !3871
  br label %if.end16, !dbg !3871

if.end16:                                         ; preds = %if.then15, %if.end14
  %13 = load i8, i8* %ok, align 1, !dbg !3872, !tbaa !2762
  %tobool17 = trunc i8 %13 to i1, !dbg !3872
  ret i1 %tobool17, !dbg !3873
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setdefaultfilecon(i8* %file) #4 !dbg !351 !ctir !199 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %st = alloca %struct.stat, align 8, !ctir !276
  %scontext = alloca i8*, align 8, !ctir !7
  %p0 = alloca i8*, align 8, !ctir !177
  %p = alloca i8*, align 8, !ctir !177
  %prefix = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3874, metadata !DIExpression()), !dbg !3875
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3876, metadata !DIExpression()), !dbg !3877
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !3878, metadata !DIExpression()), !dbg !3879
  store i8* null, i8** %scontext, align 8, !dbg !3879, !tbaa !2668
  %0 = load i32, i32* @selinux_enabled, align 4, !dbg !3880, !tbaa !2655
  %cmp = icmp ne i32 %0, 1, !dbg !3882
  br i1 %cmp, label %if.then, label %if.end, !dbg !3883

if.then:                                          ; preds = %entry
  br label %return, !dbg !3884

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3886, !tbaa !2668
  %call = call i32 @lstat(i8* %1, %struct.stat* %st) #9, !dbg !3888
  %cmp1 = icmp ne i32 %call, 0, !dbg !3889
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3890

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !3891

if.end3:                                          ; preds = %if.end
  %2 = load i8, i8* @setdefaultfilecon.first_call, align 1, !dbg !3892, !tbaa !2762
  %tobool = trunc i8 %2 to i1, !dbg !3892
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !3894

land.lhs.true:                                    ; preds = %if.end3
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3895, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3895, !ctir !177
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3895, !tbaa !3315
  %conv = sext i8 %4 to i32, !dbg !3895
  %cmp4 = icmp eq i32 %conv, 47, !dbg !3895
  br i1 %cmp4, label %if.then6, label %if.end29, !dbg !3896

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3897, metadata !DIExpression()), !dbg !3899
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3900, metadata !DIExpression()), !dbg !3901
  %5 = load i8*, i8** %file.addr, align 8, !dbg !3902, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3903
  store i8* %add.ptr, i8** %p, align 8, !dbg !3901, !tbaa !2668
  br label %while.cond, !dbg !3904

while.cond:                                       ; preds = %while.body, %if.then6
  %6 = load i8*, i8** %p, align 8, !dbg !3905, !tbaa !2668
  %7 = load i8, i8* %6, align 1, !dbg !3905, !tbaa !3315, !ctir !178
  %conv7 = sext i8 %7 to i32, !dbg !3905
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3905
  br i1 %cmp8, label %while.body, label %while.end, !dbg !3904

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %p, align 8, !dbg !3906, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3906
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3906, !tbaa !2668
  br label %while.cond, !dbg !3904, !llvm.loop !3907

while.end:                                        ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !3909, !tbaa !2668
  %add.ptr10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !3910
  store i8* %add.ptr10, i8** %p0, align 8, !dbg !3911, !tbaa !2668
  %10 = load i8*, i8** %p, align 8, !dbg !3912, !tbaa !2668
  %11 = load i8, i8* %10, align 1, !dbg !3914, !tbaa !3315, !ctir !178
  %tobool11 = icmp ne i8 %11, 0, !dbg !3914
  br i1 %tobool11, label %if.then12, label %if.end28, !dbg !3915

if.then12:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !3916, metadata !DIExpression()), !dbg !3918
  br label %do.body, !dbg !3919

do.body:                                          ; preds = %land.end, %if.then12
  %12 = load i8*, i8** %p, align 8, !dbg !3920, !tbaa !2668
  %incdec.ptr13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !3920
  store i8* %incdec.ptr13, i8** %p, align 8, !dbg !3920, !tbaa !2668
  br label %do.cond, !dbg !3922

do.cond:                                          ; preds = %do.body
  %13 = load i8*, i8** %p, align 8, !dbg !3923, !tbaa !2668
  %14 = load i8, i8* %13, align 1, !dbg !3924, !tbaa !3315, !ctir !178
  %conv14 = sext i8 %14 to i32, !dbg !3924
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !3924
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !3925

land.rhs:                                         ; preds = %do.cond
  %15 = load i8*, i8** %p, align 8, !dbg !3926, !tbaa !2668
  %16 = load i8, i8* %15, align 1, !dbg !3926, !tbaa !3315, !ctir !178
  %conv16 = sext i8 %16 to i32, !dbg !3926
  %cmp17 = icmp eq i32 %conv16, 47, !dbg !3926
  %lnot = xor i1 %cmp17, true, !dbg !3927
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %17 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !3928
  br i1 %17, label %do.body, label %do.end, !dbg !3922, !llvm.loop !3929

do.end:                                           ; preds = %land.end
  %18 = load i8*, i8** %p, align 8, !dbg !3931, !tbaa !2668
  %19 = load i8*, i8** %p0, align 8, !dbg !3932, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !3933
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3933
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3933
  %add = add nsw i64 %sub.ptr.sub, 2, !dbg !3934
  %call19 = call noalias i8* @malloc(i64 %add) #9, !dbg !3935
  store i8* %call19, i8** %prefix, align 8, !dbg !3936, !tbaa !2668
  %20 = load i8*, i8** %prefix, align 8, !dbg !3937, !tbaa !2668
  %tobool20 = icmp ne i8* %20, null, !dbg !3937
  br i1 %tobool20, label %if.then21, label %if.end27, !dbg !3939

if.then21:                                        ; preds = %do.end
  %21 = load i8*, i8** %prefix, align 8, !dbg !3940, !tbaa !2668
  %22 = load i8*, i8** %p0, align 8, !dbg !3942, !tbaa !2668
  %23 = load i8*, i8** %p, align 8, !dbg !3943, !tbaa !2668
  %24 = load i8*, i8** %p0, align 8, !dbg !3944, !tbaa !2668
  %sub.ptr.lhs.cast22 = ptrtoint i8* %23 to i64, !dbg !3945
  %sub.ptr.rhs.cast23 = ptrtoint i8* %24 to i64, !dbg !3945
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !3945
  %call25 = call i8* @stpncpy(i8* %21, i8* %22, i64 %sub.ptr.sub24) #9, !dbg !3946
  %call26 = call i8* @stpcpy(i8* %call25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !3947
  %25 = load i8*, i8** %prefix, align 8, !dbg !3948, !tbaa !2668
  call void @free(i8* %25) #9, !dbg !3949
  br label %if.end27, !dbg !3950

if.end27:                                         ; preds = %if.then21, %do.end
  br label %if.end28, !dbg !3951

if.end28:                                         ; preds = %if.end27, %while.end
  br label %if.end29, !dbg !3952

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end3
  store i8 0, i8* @setdefaultfilecon.first_call, align 1, !dbg !3953, !tbaa !2762
  %26 = load i8*, i8** %file.addr, align 8, !dbg !3954, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3956, !ctir !276
  %27 = load i32, i32* %st_mode, align 8, !dbg !3956, !tbaa !2934, !ctir !137
  %call30 = call i32 @matchpathcon(i8* %26, i32 %27, i8** %scontext), !dbg !3957
  %cmp31 = icmp ne i32 %call30, 0, !dbg !3958
  br i1 %cmp31, label %if.then36, label %lor.lhs.false, !dbg !3959

lor.lhs.false:                                    ; preds = %if.end29
  %28 = load i8*, i8** %scontext, align 8, !dbg !3960, !tbaa !2668
  %call33 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #14, !dbg !3960
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3960
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !3961

if.then36:                                        ; preds = %lor.lhs.false, %if.end29
  %29 = load i8*, i8** %scontext, align 8, !dbg !3962, !tbaa !2668
  %cmp37 = icmp ne i8* %29, null, !dbg !3965
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3966

if.then39:                                        ; preds = %if.then36
  %30 = load i8*, i8** %scontext, align 8, !dbg !3967, !tbaa !2668
  call void @freecon(i8* %30), !dbg !3968
  br label %if.end40, !dbg !3968

if.end40:                                         ; preds = %if.then39, %if.then36
  br label %return, !dbg !3969

if.end41:                                         ; preds = %lor.lhs.false
  %31 = load i8*, i8** %file.addr, align 8, !dbg !3970, !tbaa !2668
  %32 = load i8*, i8** %scontext, align 8, !dbg !3972, !tbaa !2668
  %call42 = call i32 @lsetfilecon(i8* %31, i8* %32), !dbg !3973
  %cmp43 = icmp slt i32 %call42, 0, !dbg !3974
  br i1 %cmp43, label %land.lhs.true45, label %if.end54, !dbg !3975

land.lhs.true45:                                  ; preds = %if.end41
  %call46 = call i32* @__errno_location() #16, !dbg !3976
  %33 = load i32, i32* %call46, align 4, !dbg !3976, !tbaa !2655, !ctir !5
  %cmp47 = icmp ne i32 %33, 95, !dbg !3977
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !3978

if.then49:                                        ; preds = %land.lhs.true45
  %call50 = call i32* @__errno_location() #16, !dbg !3979
  %34 = load i32, i32* %call50, align 4, !dbg !3979, !tbaa !2655, !ctir !5
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.87, i64 0, i64 0)) #9, !dbg !3980
  %35 = load i8*, i8** %file.addr, align 8, !dbg !3981, !tbaa !2668
  %call52 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %35), !dbg !3981
  %36 = load i8*, i8** %scontext, align 8, !dbg !3982, !tbaa !2668
  %call53 = call i8* @quote_n(i32 1, i8* %36), !dbg !3983
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %34, i8* %call51, i8* %call52, i8* %call53), !dbg !3984
  br label %if.end54, !dbg !3984

if.end54:                                         ; preds = %if.then49, %land.lhs.true45, %if.end41
  %37 = load i8*, i8** %scontext, align 8, !dbg !3985, !tbaa !2668
  call void @freecon(i8* %37), !dbg !3986
  br label %return, !dbg !3987

return:                                           ; preds = %if.end54, %if.end40, %if.then2, %if.then
  ret void, !dbg !3988
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: nounwind
declare dso_local i32 @execlp(i8*, i8*, ...) #2

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @need_copy(i8* %src_name, i8* %dest_name, %struct.cp_options* %x) #4 !dbg !3989 !ctir !259 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dest_name.addr = alloca i8*, align 8, !ctir !177
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !243
  %src_sb = alloca %struct.stat, align 8, !ctir !276
  %dest_sb = alloca %struct.stat, align 8, !ctir !276
  %src_fd = alloca i32, align 4, !ctir !5
  %dest_fd = alloca i32, align 4, !ctir !5
  %content_match = alloca i8, align 1, !ctir !139
  %ruid = alloca i32, align 4, !ctir !124
  %rgid = alloca i32, align 4, !ctir !126
  %file_scontext = alloca i8*, align 8, !ctir !7
  %to_scontext = alloca i8*, align 8, !ctir !7
  %scontext_match = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3990, metadata !DIExpression()), !dbg !3991
  store i8* %dest_name, i8** %dest_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dest_name.addr, metadata !3992, metadata !DIExpression()), !dbg !3993
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3994, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !3996, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_sb, metadata !3998, metadata !DIExpression()), !dbg !3999
  call void @llvm.dbg.declare(metadata i32* %src_fd, metadata !4000, metadata !DIExpression()), !dbg !4001
  call void @llvm.dbg.declare(metadata i32* %dest_fd, metadata !4002, metadata !DIExpression()), !dbg !4003
  call void @llvm.dbg.declare(metadata i8* %content_match, metadata !4004, metadata !DIExpression()), !dbg !4005
  %0 = load i32, i32* @mode, align 4, !dbg !4006, !tbaa !2655
  %call = call zeroext i1 @extra_mode(i32 %0), !dbg !4008
  br i1 %call, label %if.then, label %if.end, !dbg !4009

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !4010
  br label %return, !dbg !4010

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !4011, !tbaa !2668
  %call1 = call i32 @lstat(i8* %1, %struct.stat* %src_sb) #9, !dbg !4013
  %cmp = icmp ne i32 %call1, 0, !dbg !4014
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !4015

if.then2:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !4016
  br label %return, !dbg !4016

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %dest_name.addr, align 8, !dbg !4017, !tbaa !2668
  %call4 = call i32 @lstat(i8* %2, %struct.stat* %dest_sb) #9, !dbg !4019
  %cmp5 = icmp ne i32 %call4, 0, !dbg !4020
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4021

if.then6:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !4022
  br label %return, !dbg !4022

if.end7:                                          ; preds = %if.end3
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4023, !ctir !276
  %3 = load i32, i32* %st_mode, align 8, !dbg !4023, !tbaa !2934, !ctir !137
  %and = and i32 %3, 61440, !dbg !4023
  %cmp8 = icmp eq i32 %and, 32768, !dbg !4023
  br i1 %cmp8, label %lor.lhs.false, label %if.then18, !dbg !4025

lor.lhs.false:                                    ; preds = %if.end7
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4026, !ctir !276
  %4 = load i32, i32* %st_mode9, align 8, !dbg !4026, !tbaa !2934, !ctir !137
  %and10 = and i32 %4, 61440, !dbg !4026
  %cmp11 = icmp eq i32 %and10, 32768, !dbg !4026
  br i1 %cmp11, label %lor.lhs.false12, label %if.then18, !dbg !4027

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %st_mode13 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4028, !ctir !276
  %5 = load i32, i32* %st_mode13, align 8, !dbg !4028, !tbaa !2934, !ctir !137
  %call14 = call zeroext i1 @extra_mode(i32 %5), !dbg !4029
  br i1 %call14, label %if.then18, label %lor.lhs.false15, !dbg !4030

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4031, !ctir !276
  %6 = load i32, i32* %st_mode16, align 8, !dbg !4031, !tbaa !2934, !ctir !137
  %call17 = call zeroext i1 @extra_mode(i32 %6), !dbg !4032
  br i1 %call17, label %if.then18, label %if.end19, !dbg !4033

if.then18:                                        ; preds = %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false, %if.end7
  store i1 true, i1* %retval, align 1, !dbg !4034
  br label %return, !dbg !4034

if.end19:                                         ; preds = %lor.lhs.false15
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !4035, !ctir !276
  %7 = load i64, i64* %st_size, align 8, !dbg !4035, !tbaa !4037, !ctir !30
  %st_size20 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 8, !dbg !4038, !ctir !276
  %8 = load i64, i64* %st_size20, align 8, !dbg !4038, !tbaa !4037, !ctir !30
  %cmp21 = icmp ne i64 %7, %8, !dbg !4039
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !4040

lor.lhs.false22:                                  ; preds = %if.end19
  %st_mode23 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4041, !ctir !276
  %9 = load i32, i32* %st_mode23, align 8, !dbg !4041, !tbaa !2934, !ctir !137
  %and24 = and i32 %9, 4095, !dbg !4042
  %10 = load i32, i32* @mode, align 4, !dbg !4043, !tbaa !2655
  %cmp25 = icmp ne i32 %and24, %10, !dbg !4044
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !4045

if.then26:                                        ; preds = %lor.lhs.false22, %if.end19
  store i1 true, i1* %retval, align 1, !dbg !4046
  br label %return, !dbg !4046

if.end27:                                         ; preds = %lor.lhs.false22
  %11 = load i32, i32* @owner_id, align 4, !dbg !4047, !tbaa !2655
  %cmp28 = icmp eq i32 %11, -1, !dbg !4049
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !4050

if.then29:                                        ; preds = %if.end27
  %call30 = call i32* @__errno_location() #16, !dbg !4051
  store i32 0, i32* %call30, align 4, !dbg !4053, !tbaa !2655, !ctir !5
  call void @llvm.dbg.declare(metadata i32* %ruid, metadata !4054, metadata !DIExpression()), !dbg !4055
  %call31 = call i32 @getuid() #9, !dbg !4056
  store i32 %call31, i32* %ruid, align 4, !dbg !4055, !tbaa !2655
  %12 = load i32, i32* %ruid, align 4, !dbg !4057, !tbaa !2655
  %cmp32 = icmp eq i32 %12, -1, !dbg !4059
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false34, !dbg !4060

land.lhs.true:                                    ; preds = %if.then29
  %call33 = call i32* @__errno_location() #16, !dbg !4061
  %13 = load i32, i32* %call33, align 4, !dbg !4061, !tbaa !2655, !ctir !5
  %tobool = icmp ne i32 %13, 0, !dbg !4061
  br i1 %tobool, label %if.then36, label %lor.lhs.false34, !dbg !4062

lor.lhs.false34:                                  ; preds = %land.lhs.true, %if.then29
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !4063, !ctir !276
  %14 = load i32, i32* %st_uid, align 4, !dbg !4063, !tbaa !4064, !ctir !125
  %15 = load i32, i32* %ruid, align 4, !dbg !4065, !tbaa !2655
  %cmp35 = icmp ne i32 %14, %15, !dbg !4066
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !4067

if.then36:                                        ; preds = %lor.lhs.false34, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !4068
  br label %return, !dbg !4068

if.end37:                                         ; preds = %lor.lhs.false34
  br label %if.end42, !dbg !4069

if.else:                                          ; preds = %if.end27
  %st_uid38 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !4070, !ctir !276
  %16 = load i32, i32* %st_uid38, align 4, !dbg !4070, !tbaa !4064, !ctir !125
  %17 = load i32, i32* @owner_id, align 4, !dbg !4072, !tbaa !2655
  %cmp39 = icmp ne i32 %16, %17, !dbg !4073
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !4074

if.then40:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !4075
  br label %return, !dbg !4075

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end37
  %18 = load i32, i32* @group_id, align 4, !dbg !4076, !tbaa !2655
  %cmp43 = icmp eq i32 %18, -1, !dbg !4078
  br i1 %cmp43, label %if.then44, label %if.else55, !dbg !4079

if.then44:                                        ; preds = %if.end42
  %call45 = call i32* @__errno_location() #16, !dbg !4080
  store i32 0, i32* %call45, align 4, !dbg !4082, !tbaa !2655, !ctir !5
  call void @llvm.dbg.declare(metadata i32* %rgid, metadata !4083, metadata !DIExpression()), !dbg !4084
  %call46 = call i32 @getgid() #9, !dbg !4085
  store i32 %call46, i32* %rgid, align 4, !dbg !4084, !tbaa !2655
  %19 = load i32, i32* %rgid, align 4, !dbg !4086, !tbaa !2655
  %cmp47 = icmp eq i32 %19, -1, !dbg !4088
  br i1 %cmp47, label %land.lhs.true48, label %lor.lhs.false51, !dbg !4089

land.lhs.true48:                                  ; preds = %if.then44
  %call49 = call i32* @__errno_location() #16, !dbg !4090
  %20 = load i32, i32* %call49, align 4, !dbg !4090, !tbaa !2655, !ctir !5
  %tobool50 = icmp ne i32 %20, 0, !dbg !4090
  br i1 %tobool50, label %if.then53, label %lor.lhs.false51, !dbg !4091

lor.lhs.false51:                                  ; preds = %land.lhs.true48, %if.then44
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !4092, !ctir !276
  %21 = load i32, i32* %st_gid, align 8, !dbg !4092, !tbaa !4093, !ctir !127
  %22 = load i32, i32* %rgid, align 4, !dbg !4094, !tbaa !2655
  %cmp52 = icmp ne i32 %21, %22, !dbg !4095
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !4096

if.then53:                                        ; preds = %lor.lhs.false51, %land.lhs.true48
  store i1 true, i1* %retval, align 1, !dbg !4097
  br label %return, !dbg !4097

if.end54:                                         ; preds = %lor.lhs.false51
  br label %if.end60, !dbg !4098

if.else55:                                        ; preds = %if.end42
  %st_gid56 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !4099, !ctir !276
  %23 = load i32, i32* %st_gid56, align 8, !dbg !4099, !tbaa !4093, !ctir !127
  %24 = load i32, i32* @group_id, align 4, !dbg !4101, !tbaa !2655
  %cmp57 = icmp ne i32 %23, %24, !dbg !4102
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !4103

if.then58:                                        ; preds = %if.else55
  store i1 true, i1* %retval, align 1, !dbg !4104
  br label %return, !dbg !4104

if.end59:                                         ; preds = %if.else55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end54
  %25 = load i32, i32* @selinux_enabled, align 4, !dbg !4105, !tbaa !2655
  %tobool61 = icmp ne i32 %25, 0, !dbg !4105
  br i1 %tobool61, label %land.lhs.true62, label %if.end78, !dbg !4107

land.lhs.true62:                                  ; preds = %if.end60
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4108, !tbaa !2668
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 22, !dbg !4109, !ctir !244
  %27 = load i8, i8* %preserve_security_context, align 1, !dbg !4109, !tbaa !2870
  %tobool63 = trunc i8 %27 to i1, !dbg !4109, !ctir !139
  br i1 %tobool63, label %if.then64, label %if.end78, !dbg !4110

if.then64:                                        ; preds = %land.lhs.true62
  call void @llvm.dbg.declare(metadata i8** %file_scontext, metadata !4111, metadata !DIExpression()), !dbg !4113
  store i8* null, i8** %file_scontext, align 8, !dbg !4113, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %to_scontext, metadata !4114, metadata !DIExpression()), !dbg !4115
  store i8* null, i8** %to_scontext, align 8, !dbg !4115, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %scontext_match, metadata !4116, metadata !DIExpression()), !dbg !4117
  %28 = load i8*, i8** %src_name.addr, align 8, !dbg !4118, !tbaa !2668
  %call65 = call i32 @getfilecon(i8* %28, i8** %file_scontext), !dbg !4120
  %cmp66 = icmp eq i32 %call65, -1, !dbg !4121
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !4122

if.then67:                                        ; preds = %if.then64
  store i1 true, i1* %retval, align 1, !dbg !4123
  br label %return, !dbg !4123

if.end68:                                         ; preds = %if.then64
  %29 = load i8*, i8** %dest_name.addr, align 8, !dbg !4124, !tbaa !2668
  %call69 = call i32 @getfilecon(i8* %29, i8** %to_scontext), !dbg !4126
  %cmp70 = icmp eq i32 %call69, -1, !dbg !4127
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !4128

if.then71:                                        ; preds = %if.end68
  %30 = load i8*, i8** %file_scontext, align 8, !dbg !4129, !tbaa !2668
  call void @freecon(i8* %30), !dbg !4131
  store i1 true, i1* %retval, align 1, !dbg !4132
  br label %return, !dbg !4132

if.end72:                                         ; preds = %if.end68
  %31 = load i8*, i8** %file_scontext, align 8, !dbg !4133, !tbaa !2668
  %32 = load i8*, i8** %to_scontext, align 8, !dbg !4133, !tbaa !2668
  %call73 = call i32 @strcmp(i8* %31, i8* %32) #14, !dbg !4133
  %cmp74 = icmp eq i32 %call73, 0, !dbg !4133
  %frombool = zext i1 %cmp74 to i8, !dbg !4134
  store i8 %frombool, i8* %scontext_match, align 1, !dbg !4134, !tbaa !2762
  %33 = load i8*, i8** %file_scontext, align 8, !dbg !4135, !tbaa !2668
  call void @freecon(i8* %33), !dbg !4136
  %34 = load i8*, i8** %to_scontext, align 8, !dbg !4137, !tbaa !2668
  call void @freecon(i8* %34), !dbg !4138
  %35 = load i8, i8* %scontext_match, align 1, !dbg !4139, !tbaa !2762
  %tobool75 = trunc i8 %35 to i1, !dbg !4139
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !4141

if.then76:                                        ; preds = %if.end72
  store i1 true, i1* %retval, align 1, !dbg !4142
  br label %return, !dbg !4142

if.end77:                                         ; preds = %if.end72
  br label %if.end78, !dbg !4143

if.end78:                                         ; preds = %if.end77, %land.lhs.true62, %if.end60
  %36 = load i8*, i8** %src_name.addr, align 8, !dbg !4144, !tbaa !2668
  %call79 = call i32 (i8*, i32, ...) @open(i8* %36, i32 0), !dbg !4145
  store i32 %call79, i32* %src_fd, align 4, !dbg !4146, !tbaa !2655
  %37 = load i32, i32* %src_fd, align 4, !dbg !4147, !tbaa !2655
  %cmp80 = icmp slt i32 %37, 0, !dbg !4149
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !4150

if.then81:                                        ; preds = %if.end78
  store i1 true, i1* %retval, align 1, !dbg !4151
  br label %return, !dbg !4151

if.end82:                                         ; preds = %if.end78
  %38 = load i8*, i8** %dest_name.addr, align 8, !dbg !4152, !tbaa !2668
  %call83 = call i32 (i8*, i32, ...) @open(i8* %38, i32 0), !dbg !4153
  store i32 %call83, i32* %dest_fd, align 4, !dbg !4154, !tbaa !2655
  %39 = load i32, i32* %dest_fd, align 4, !dbg !4155, !tbaa !2655
  %cmp84 = icmp slt i32 %39, 0, !dbg !4157
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !4158

if.then85:                                        ; preds = %if.end82
  %40 = load i32, i32* %src_fd, align 4, !dbg !4159, !tbaa !2655
  %call86 = call i32 @close(i32 %40), !dbg !4161
  store i1 true, i1* %retval, align 1, !dbg !4162
  br label %return, !dbg !4162

if.end87:                                         ; preds = %if.end82
  %41 = load i32, i32* %src_fd, align 4, !dbg !4163, !tbaa !2655
  %42 = load i32, i32* %dest_fd, align 4, !dbg !4164, !tbaa !2655
  %call88 = call zeroext i1 @have_same_content(i32 %41, i32 %42), !dbg !4165
  %frombool89 = zext i1 %call88 to i8, !dbg !4166
  store i8 %frombool89, i8* %content_match, align 1, !dbg !4166, !tbaa !2762
  %43 = load i32, i32* %src_fd, align 4, !dbg !4167, !tbaa !2655
  %call90 = call i32 @close(i32 %43), !dbg !4168
  %44 = load i32, i32* %dest_fd, align 4, !dbg !4169, !tbaa !2655
  %call91 = call i32 @close(i32 %44), !dbg !4170
  %45 = load i8, i8* %content_match, align 1, !dbg !4171, !tbaa !2762
  %tobool92 = trunc i8 %45 to i1, !dbg !4171
  %lnot = xor i1 %tobool92, true, !dbg !4172
  store i1 %lnot, i1* %retval, align 1, !dbg !4173
  br label %return, !dbg !4173

return:                                           ; preds = %if.end87, %if.then85, %if.then81, %if.then76, %if.then71, %if.then67, %if.then58, %if.then53, %if.then40, %if.then36, %if.then26, %if.then18, %if.then6, %if.then2, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !4174
  ret i1 %46, !dbg !4174
}

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

declare dso_local i32 @open(i8*, i32, ...) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @have_same_content(i32 %a_fd, i32 %b_fd) #4 !dbg !343 !ctir !261 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %a_fd.addr = alloca i32, align 4, !ctir !5
  %b_fd.addr = alloca i32, align 4, !ctir !5
  %size = alloca i64, align 8, !ctir !52
  store i32 %a_fd, i32* %a_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %a_fd.addr, metadata !4175, metadata !DIExpression()), !dbg !4176
  store i32 %b_fd, i32* %b_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %b_fd.addr, metadata !4177, metadata !DIExpression()), !dbg !4178
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4179, metadata !DIExpression()), !dbg !4180
  br label %while.cond, !dbg !4181

while.cond:                                       ; preds = %if.end6, %entry
  %0 = load i32, i32* %a_fd.addr, align 4, !dbg !4182, !tbaa !2655
  %call = call i64 @full_read(i32 %0, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i64 4096), !dbg !4183
  store i64 %call, i64* %size, align 8, !dbg !4184, !tbaa !3308
  %cmp = icmp ult i64 0, %call, !dbg !4185
  br i1 %cmp, label %while.body, label %while.end, !dbg !4181

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %size, align 8, !dbg !4186, !tbaa !3308
  %2 = load i32, i32* %b_fd.addr, align 4, !dbg !4189, !tbaa !2655
  %call1 = call i64 @full_read(i32 %2, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 4096), !dbg !4190
  %cmp2 = icmp ne i64 %1, %call1, !dbg !4191
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4192

if.then:                                          ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !4193
  br label %return, !dbg !4193

if.end:                                           ; preds = %while.body
  %3 = load i64, i64* %size, align 8, !dbg !4194, !tbaa !3308
  %call3 = call i32 @memcmp(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 %3) #14, !dbg !4196
  %cmp4 = icmp ne i32 %call3, 0, !dbg !4197
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4198

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !4199
  br label %return, !dbg !4199

if.end6:                                          ; preds = %if.end
  br label %while.cond, !dbg !4181, !llvm.loop !4200

while.end:                                        ; preds = %while.cond
  %4 = load i64, i64* %size, align 8, !dbg !4202, !tbaa !3308
  %cmp7 = icmp eq i64 %4, 0, !dbg !4203
  store i1 %cmp7, i1* %retval, align 1, !dbg !4204
  br label %return, !dbg !4204

return:                                           ; preds = %while.end, %if.then5, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !4205
  ret i1 %5, !dbg !4205
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4206 !ctir !251 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !177
  %recurse.addr = alloca i8, align 1, !ctir !139
  %preserve.addr = alloca i8, align 1, !ctir !139
  store i8* %path, i8** %path.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4207, metadata !DIExpression()), !dbg !4208
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4209, metadata !DIExpression()), !dbg !4210
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4211, metadata !DIExpression()), !dbg !4212
  %call = call i32* @__errno_location() #16, !dbg !4213
  store i32 95, i32* %call, align 4, !dbg !4214, !tbaa !2655, !ctir !5
  ret i1 false, !dbg !4215
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

declare dso_local void @endgrent() #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prog_fprintf(%struct._IO_FILE* %fp, i8* %fmt, ...) #4 !dbg !4216 !ctir !1412 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !1414
  %fmt.addr = alloca i8*, align 8, !ctir !177
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1454
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !4219, metadata !DIExpression()), !dbg !4220
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !4221, metadata !DIExpression()), !dbg !4222
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !4223, metadata !DIExpression()), !dbg !4224
  %0 = load i8*, i8** @program_name, align 8, !dbg !4225, !tbaa !2668
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4225, !tbaa !2668
  %call = call i32 @fputs_unlocked(i8* %0, %struct._IO_FILE* %1), !dbg !4225
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4226, !tbaa !2668
  %call1 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i64 0, i64 0), %struct._IO_FILE* %2), !dbg !4226
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4227
  %arraydecay2 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !4227
  call void @llvm.va_start(i8* %arraydecay2), !dbg !4227
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4228, !tbaa !2668
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !4229, !tbaa !2668
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4230
  %call4 = call i32 @vfprintf(%struct._IO_FILE* %3, i8* %4, %struct.__va_list_tag* %arraydecay3), !dbg !4231
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4232
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !4232
  call void @llvm.va_end(i8* %arraydecay56), !dbg !4232
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4233, !tbaa !2668
  %call7 = call i32 @fputc_unlocked(i32 10, %struct._IO_FILE* %5), !dbg !4233
  ret void, !dbg !4234
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !4235 !ctir !360 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %mode.addr = alloca i32, align 4, !ctir !136
  %new_dst.addr = alloca i8, align 1, !ctir !139
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %all_errors = alloca i8, align 1, !ctir !139
  %some_errors = alloca i8, align 1, !ctir !139
  %con = alloca i8*, align 8, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4236, metadata !DIExpression()), !dbg !4237
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4238, metadata !DIExpression()), !dbg !4239
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4240, metadata !DIExpression()), !dbg !4241
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4242, metadata !DIExpression()), !dbg !4243
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4244, metadata !DIExpression()), !dbg !4245
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4246, !tbaa !2668
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !4248, !ctir !363
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !4248, !tbaa !2870
  %tobool = trunc i8 %1 to i1, !dbg !4248, !ctir !139
  br i1 %tobool, label %if.then, label %if.else40, !dbg !4249

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4250, metadata !DIExpression()), !dbg !4252
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4253, !tbaa !2668
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !4254, !ctir !363
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !4254, !tbaa !3222
  %tobool1 = trunc i8 %3 to i1, !dbg !4254, !ctir !139
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !4255

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4256, !tbaa !2668
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !4257, !ctir !363
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !4257, !tbaa !3269
  %tobool2 = trunc i8 %5 to i1, !dbg !4257, !ctir !139
  br label %lor.end, !dbg !4255

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !4252
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4252, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4258, metadata !DIExpression()), !dbg !4259
  %7 = load i8, i8* %all_errors, align 1, !dbg !4260, !tbaa !2762
  %tobool4 = trunc i8 %7 to i1, !dbg !4260
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4261

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4262, !tbaa !2668
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !4263, !ctir !363
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4263, !tbaa !3218
  %tobool5 = trunc i8 %9 to i1, !dbg !4263, !ctir !139
  %lnot = xor i1 %tobool5, true, !dbg !4264
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4265
  %frombool6 = zext i1 %10 to i8, !dbg !4259
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4259, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8** %con, metadata !4266, metadata !DIExpression()), !dbg !4267
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !4268, !tbaa !2668
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !4270
  %cmp = icmp sle i32 0, %call, !dbg !4271
  br i1 %cmp, label %if.then7, label %if.else, !dbg !4272

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !4273, !tbaa !2668
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !4276
  %cmp9 = icmp slt i32 %call8, 0, !dbg !4277
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !4278

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !4279, !tbaa !2762
  %tobool11 = trunc i8 %13 to i1, !dbg !4279
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !4282

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !4283, !tbaa !2762
  %tobool12 = trunc i8 %14 to i1, !dbg !4283
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !4284

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #16, !dbg !4285
  %15 = load i32, i32* %call13, align 4, !dbg !4285, !tbaa !2655, !ctir !5
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !4286
  br i1 %call14, label %if.end, label %if.then15, !dbg !4287

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #16, !dbg !4288
  %16 = load i32, i32* %call16, align 4, !dbg !4288, !tbaa !2655, !ctir !5
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.89, i64 0, i64 0)) #9, !dbg !4289
  %17 = load i8*, i8** %con, align 8, !dbg !4290, !tbaa !2668
  %call18 = call i8* @quote(i8* %17), !dbg !4291
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !4292
  br label %if.end, !dbg !4292

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4293, !tbaa !2668
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !4295, !ctir !363
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !4295, !tbaa !3269
  %tobool20 = trunc i8 %19 to i1, !dbg !4295, !ctir !139
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !4296

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !4297, !tbaa !2668
  call void @freecon(i8* %20), !dbg !4299
  store i1 false, i1* %retval, align 1, !dbg !4300
  br label %return, !dbg !4300

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !4301

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !4302, !tbaa !2668
  call void @freecon(i8* %21), !dbg !4303
  br label %if.end39, !dbg !4304

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !4305, !tbaa !2762
  %tobool24 = trunc i8 %22 to i1, !dbg !4305
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !4308

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !4309, !tbaa !2762
  %tobool26 = trunc i8 %23 to i1, !dbg !4309
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !4310

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #16, !dbg !4311
  %24 = load i32, i32* %call28, align 4, !dbg !4311, !tbaa !2655, !ctir !5
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !4312
  br i1 %call29, label %if.end34, label %if.then30, !dbg !4313

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #16, !dbg !4314
  %25 = load i32, i32* %call31, align 4, !dbg !4314, !tbaa !2655, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.90, i64 0, i64 0)) #9, !dbg !4316
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !4317, !tbaa !2668
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !4317
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !4318
  br label %if.end34, !dbg !4319

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4320, !tbaa !2668
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !4322, !ctir !363
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !4322, !tbaa !3269
  %tobool36 = trunc i8 %28 to i1, !dbg !4322, !ctir !139
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4323

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !4324
  br label %return, !dbg !4324

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !4325

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4326, !tbaa !2668
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !4328, !ctir !363
  %30 = load i8, i8* %set_security_context, align 1, !dbg !4328, !tbaa !2886
  %tobool41 = trunc i8 %30 to i1, !dbg !4328, !ctir !139
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !4329

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !4330, !tbaa !2762
  %tobool43 = trunc i8 %31 to i1, !dbg !4330
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !4333

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !4334, !tbaa !2668
  %33 = load i32, i32* %mode.addr, align 4, !dbg !4335, !tbaa !2655
  %call45 = call i32 @defaultcon.91(i8* %32, i32 %33), !dbg !4336
  %cmp46 = icmp slt i32 %call45, 0, !dbg !4337
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !4338

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #16, !dbg !4339
  %34 = load i32, i32* %call48, align 4, !dbg !4339, !tbaa !2655, !ctir !5
  %call49 = call zeroext i1 @ignorable_ctx_err.92(i32 %34), !dbg !4340
  br i1 %call49, label %if.end54, label %if.then50, !dbg !4341

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #16, !dbg !4342
  %35 = load i32, i32* %call51, align 4, !dbg !4342, !tbaa !2655, !ctir !5
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i64 0, i64 0)) #9, !dbg !4344
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !4345, !tbaa !2668
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !4345
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !4346
  br label %if.end54, !dbg !4347

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !4348

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !4349
  br label %return, !dbg !4349

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !4350
  ret i1 %37, !dbg !4350
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !4351 !ctir !253 {
entry:
  %err.addr = alloca i32, align 4, !ctir !5
  store i32 %err, i32* %err.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4352, metadata !DIExpression()), !dbg !4353
  %0 = load i32, i32* %err.addr, align 4, !dbg !4354, !tbaa !2655
  %cmp = icmp eq i32 %0, 95, !dbg !4355
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4356

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4357, !tbaa !2655
  %cmp1 = icmp eq i32 %1, 61, !dbg !4358
  br label %lor.end, !dbg !4356

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4359
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon.91(i8* %path, i32 %mode) #4 !dbg !4360 !ctir !247 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !177
  %mode.addr = alloca i32, align 4, !ctir !136
  store i8* %path, i8** %path.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4361, metadata !DIExpression()), !dbg !4362
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4363, metadata !DIExpression()), !dbg !4364
  %call = call i32* @__errno_location() #16, !dbg !4365
  store i32 95, i32* %call, align 4, !dbg !4366, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !4367
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err.92(i32 %err) #4 !dbg !4368 !ctir !253 {
entry:
  %err.addr = alloca i32, align 4, !ctir !5
  store i32 %err, i32* %err.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4369, metadata !DIExpression()), !dbg !4370
  %0 = load i32, i32* %err.addr, align 4, !dbg !4371, !tbaa !2655
  %cmp = icmp eq i32 %0, 95, !dbg !4372
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4373

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4374, !tbaa !2655
  %cmp1 = icmp eq i32 %1, 61, !dbg !4375
  br label %lor.end, !dbg !4373

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4376
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !4377 !ctir !405 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %process_local.addr = alloca i8, align 1, !ctir !139
  %recurse.addr = alloca i8, align 1, !ctir !139
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %all_errors = alloca i8, align 1, !ctir !139
  %some_errors = alloca i8, align 1, !ctir !139
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4378, metadata !DIExpression()), !dbg !4379
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !4380, metadata !DIExpression()), !dbg !4381
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4382, metadata !DIExpression()), !dbg !4383
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4384, metadata !DIExpression()), !dbg !4385
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4386, metadata !DIExpression()), !dbg !4387
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4388, !tbaa !2668
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !4389, !ctir !363
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !4389, !tbaa !3222
  %tobool = trunc i8 %1 to i1, !dbg !4389, !ctir !139
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4390

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4391, !tbaa !2668
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !4392, !ctir !363
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !4392, !tbaa !3269
  %tobool2 = trunc i8 %3 to i1, !dbg !4392, !ctir !139
  br label %lor.end, !dbg !4390

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !4387
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4387, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4393, metadata !DIExpression()), !dbg !4394
  %5 = load i8, i8* %all_errors, align 1, !dbg !4395, !tbaa !2762
  %tobool4 = trunc i8 %5 to i1, !dbg !4395
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4396

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4397, !tbaa !2668
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !4398, !ctir !363
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4398, !tbaa !3218
  %tobool5 = trunc i8 %7 to i1, !dbg !4398, !ctir !139
  %lnot = xor i1 %tobool5, true, !dbg !4399
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4400
  %frombool6 = zext i1 %8 to i8, !dbg !4394
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4394, !tbaa !2762
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !4401, !tbaa !2668
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !4403, !tbaa !2762
  %tobool7 = trunc i8 %10 to i1, !dbg !4403
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !4404, !tbaa !2762
  %tobool8 = trunc i8 %11 to i1, !dbg !4404
  %call = call zeroext i1 @restorecon.94(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !4405
  br i1 %call, label %if.end17, label %if.then, !dbg !4406

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !4407, !tbaa !2762
  %tobool9 = trunc i8 %12 to i1, !dbg !4407
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !4410

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !4411, !tbaa !2762
  %tobool10 = trunc i8 %13 to i1, !dbg !4411
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !4412

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #16, !dbg !4413
  %14 = load i32, i32* %call11, align 4, !dbg !4413, !tbaa !2655, !ctir !5
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !4414
  br i1 %call12, label %if.end, label %if.then13, !dbg !4415

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !4416
  %15 = load i32, i32* %call14, align 4, !dbg !4416, !tbaa !2655, !ctir !5
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.95, i64 0, i64 0)) #9, !dbg !4417
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !4418, !tbaa !2668
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !4418
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !4419
  br label %if.end, !dbg !4419

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !4420
  br label %return, !dbg !4420

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !4421
  br label %return, !dbg !4421

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !4422
  ret i1 %17, !dbg !4422
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon.94(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4423 !ctir !251 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !177
  %recurse.addr = alloca i8, align 1, !ctir !139
  %preserve.addr = alloca i8, align 1, !ctir !139
  store i8* %path, i8** %path.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4424, metadata !DIExpression()), !dbg !4425
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4426, metadata !DIExpression()), !dbg !4427
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4428, metadata !DIExpression()), !dbg !4429
  %call = call i32* @__errno_location() #16, !dbg !4430
  store i32 95, i32* %call, align 4, !dbg !4431, !tbaa !2655, !ctir !5
  ret i1 false, !dbg !4432
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !4433 !ctir !407 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !409
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4434, metadata !DIExpression()), !dbg !4435
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4436
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4437, !tbaa !2668
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !4438, !ctir !364
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !4439, !tbaa !3286, !ctir !172
  ret void, !dbg !4440
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4441 !ctir !407 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !409
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4442, metadata !DIExpression()), !dbg !4443
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4444
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4445, !tbaa !2668
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4446, !ctir !364
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4447, !tbaa !3290, !ctir !172
  ret void, !dbg !4448
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4449 !ctir !410 {
entry:
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %nonexistent_dst.addr = alloca i8, align 1, !ctir !139
  %options.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %copy_into_self.addr = alloca i8*, align 8, !ctir !412
  %rename_succeeded.addr = alloca i8*, align 8, !ctir !412
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4450, metadata !DIExpression()), !dbg !4451
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4452, metadata !DIExpression()), !dbg !4453
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4454, metadata !DIExpression()), !dbg !4455
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4456, metadata !DIExpression()), !dbg !4457
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4458, metadata !DIExpression()), !dbg !4459
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4460, metadata !DIExpression()), !dbg !4461
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4462, !tbaa !2668
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4462
  br i1 %call, label %cond.true, label %cond.false, !dbg !4462

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4462

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 3013, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4462
  unreachable, !dbg !4462

1:                                                ; No predecessors!
  br label %cond.end, !dbg !4462

cond.end:                                         ; preds = %1, %cond.true
  %2 = load i8*, i8** %src_name.addr, align 8, !dbg !4463, !tbaa !2668
  store i8* %2, i8** @top_level_src_name, align 8, !dbg !4464, !tbaa !2668
  %3 = load i8*, i8** %dst_name.addr, align 8, !dbg !4465, !tbaa !2668
  store i8* %3, i8** @top_level_dst_name, align 8, !dbg !4466, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4467, metadata !DIExpression()), !dbg !4468
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4468, !tbaa !2762
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !4469, !tbaa !2668
  %5 = load i8*, i8** %dst_name.addr, align 8, !dbg !4470, !tbaa !2668
  %6 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4471, !tbaa !2762
  %tobool = trunc i8 %6 to i1, !dbg !4471
  %7 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4472, !tbaa !2668
  %8 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4473, !tbaa !2668
  %9 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4474, !tbaa !2668
  %call1 = call zeroext i1 @copy_internal(i8* %4, i8* %5, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %7, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %8, i8* %9), !dbg !4475
  ret i1 %call1, !dbg !4476
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #10 !dbg !4477 !ctir !413 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8, !ctir !362
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4478, metadata !DIExpression()), !dbg !4479
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4480, !tbaa !2668
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4480
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !4480

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !4480

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.167, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2988, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4480
  unreachable, !dbg !4480

1:                                                ; No predecessors!
  br label %cond.end, !dbg !4480

cond.end:                                         ; preds = %1, %cond.true
  %2 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4481, !tbaa !2668
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 0, !dbg !4481, !ctir !363
  %3 = load i32, i32* %backup_type, align 8, !dbg !4481, !tbaa !2947, !ctir !65
  %cmp1 = icmp ule i32 %3, 3, !dbg !4481
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !4481

cond.true2:                                       ; preds = %cond.end
  br label %cond.end4, !dbg !4481

cond.false3:                                      ; preds = %cond.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.168, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2989, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4481
  unreachable, !dbg !4481

4:                                                ; No predecessors!
  br label %cond.end4, !dbg !4481

cond.end4:                                        ; preds = %4, %cond.true2
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4482, !tbaa !2668
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4482, !ctir !363
  %6 = load i32, i32* %sparse_mode, align 4, !dbg !4482, !tbaa !3238, !ctir !86
  %cmp5 = icmp eq i32 %6, 1, !dbg !4482
  br i1 %cmp5, label %cond.true11, label %lor.lhs.false, !dbg !4482

lor.lhs.false:                                    ; preds = %cond.end4
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4482, !tbaa !2668
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4482, !ctir !363
  %8 = load i32, i32* %sparse_mode6, align 4, !dbg !4482, !tbaa !3238, !ctir !86
  %cmp7 = icmp eq i32 %8, 2, !dbg !4482
  br i1 %cmp7, label %cond.true11, label %lor.lhs.false8, !dbg !4482

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4482, !tbaa !2668
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 3, !dbg !4482, !ctir !363
  %10 = load i32, i32* %sparse_mode9, align 4, !dbg !4482, !tbaa !3238, !ctir !86
  %cmp10 = icmp eq i32 %10, 3, !dbg !4482
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !4482

cond.true11:                                      ; preds = %lor.lhs.false8, %lor.lhs.false, %cond.end4
  br label %cond.end13, !dbg !4482

cond.false12:                                     ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.169, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2990, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4482
  unreachable, !dbg !4482

11:                                               ; No predecessors!
  br label %cond.end13, !dbg !4482

cond.end13:                                       ; preds = %11, %cond.true11
  %12 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4483, !tbaa !2668
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 36, !dbg !4483, !ctir !363
  %13 = load i32, i32* %reflink_mode, align 8, !dbg !4483, !tbaa !3163, !ctir !92
  %cmp14 = icmp eq i32 %13, 0, !dbg !4483
  br i1 %cmp14, label %cond.true21, label %lor.lhs.false15, !dbg !4483

lor.lhs.false15:                                  ; preds = %cond.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4483, !tbaa !2668
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 36, !dbg !4483, !ctir !363
  %15 = load i32, i32* %reflink_mode16, align 8, !dbg !4483, !tbaa !3163, !ctir !92
  %cmp17 = icmp eq i32 %15, 1, !dbg !4483
  br i1 %cmp17, label %cond.true21, label %lor.lhs.false18, !dbg !4483

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %16 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4483, !tbaa !2668
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 36, !dbg !4483, !ctir !363
  %17 = load i32, i32* %reflink_mode19, align 8, !dbg !4483, !tbaa !3163, !ctir !92
  %cmp20 = icmp eq i32 %17, 2, !dbg !4483
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !4483

cond.true21:                                      ; preds = %lor.lhs.false18, %lor.lhs.false15, %cond.end13
  br label %cond.end23, !dbg !4483

cond.false22:                                     ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.170, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2991, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4483
  unreachable, !dbg !4483

18:                                               ; No predecessors!
  br label %cond.end23, !dbg !4483

cond.end23:                                       ; preds = %18, %cond.true21
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4484, !tbaa !2668
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 8, !dbg !4484, !ctir !363
  %20 = load i8, i8* %hard_link, align 1, !dbg !4484, !tbaa !3179
  %tobool = trunc i8 %20 to i1, !dbg !4484, !ctir !139
  br i1 %tobool, label %land.lhs.true, label %cond.true25, !dbg !4484

land.lhs.true:                                    ; preds = %cond.end23
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4484, !tbaa !2668
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 29, !dbg !4484, !ctir !363
  %22 = load i8, i8* %symbolic_link, align 4, !dbg !4484, !tbaa !3242
  %tobool24 = trunc i8 %22 to i1, !dbg !4484, !ctir !139
  br i1 %tobool24, label %cond.false26, label %cond.true25, !dbg !4484

cond.true25:                                      ; preds = %land.lhs.true, %cond.end23
  br label %cond.end27, !dbg !4484

cond.false26:                                     ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.171, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2992, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4484
  unreachable, !dbg !4484

23:                                               ; No predecessors!
  br label %cond.end27, !dbg !4484

cond.end27:                                       ; preds = %23, %cond.true25
  %24 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4485, !tbaa !2668
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 36, !dbg !4485, !ctir !363
  %25 = load i32, i32* %reflink_mode28, align 8, !dbg !4485, !tbaa !3163, !ctir !92
  %cmp29 = icmp eq i32 %25, 2, !dbg !4485
  br i1 %cmp29, label %land.lhs.true30, label %cond.true33, !dbg !4485

land.lhs.true30:                                  ; preds = %cond.end27
  %26 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4485, !tbaa !2668
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 3, !dbg !4485, !ctir !363
  %27 = load i32, i32* %sparse_mode31, align 4, !dbg !4485, !tbaa !3238, !ctir !86
  %cmp32 = icmp ne i32 %27, 2, !dbg !4485
  br i1 %cmp32, label %cond.false34, label %cond.true33, !dbg !4485

cond.true33:                                      ; preds = %land.lhs.true30, %cond.end27
  br label %cond.end35, !dbg !4485

cond.false34:                                     ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.172, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4485
  unreachable, !dbg !4485

28:                                               ; No predecessors!
  br label %cond.end35, !dbg !4485

cond.end35:                                       ; preds = %28, %cond.true33
  ret i1 true, !dbg !4486
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4487 !ctir !417 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %new_dst.addr = alloca i8, align 1, !ctir !139
  %parent.addr = alloca %struct.stat*, align 8, !ctir !419
  %ancestors.addr = alloca %struct.dir_list*, align 8, !ctir !442
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %command_line_arg.addr = alloca i8, align 1, !ctir !139
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8, !ctir !412
  %copy_into_self.addr = alloca i8*, align 8, !ctir !412
  %rename_succeeded.addr = alloca i8*, align 8, !ctir !412
  %src_sb = alloca %struct.stat, align 8, !ctir !421
  %dst_sb = alloca %struct.stat, align 8, !ctir !421
  %src_mode = alloca i32, align 4, !ctir !136
  %dst_mode = alloca i32, align 4, !ctir !136
  %dst_mode_bits = alloca i32, align 4, !ctir !136
  %omitted_permissions = alloca i32, align 4, !ctir !136
  %restore_dst_mode = alloca i8, align 1, !ctir !139
  %earlier_file = alloca i8*, align 8, !ctir !7
  %dst_backup = alloca i8*, align 8, !ctir !7
  %delayed_ok = alloca i8, align 1, !ctir !139
  %copied_as_regular = alloca i8, align 1, !ctir !139
  %dest_is_symlink = alloca i8, align 1, !ctir !139
  %have_dst_lstat = alloca i8, align 1, !ctir !139
  %rename_errno = alloca i32, align 4, !ctir !5
  %name = alloca i8*, align 8, !ctir !177
  %fstatat_flags = alloca i32, align 4, !ctir !5
  %dereference65 = alloca i8, align 1, !ctir !139
  %use_lstat = alloca i8, align 1, !ctir !139
  %fstatat_flags98 = alloca i32, align 4, !ctir !5
  %return_now = alloca i8, align 1, !ctir !139
  %options = alloca i32, align 4, !ctir !5
  %srcbase = alloca i8*, align 8, !ctir !177
  %fmt = alloca i8*, align 8, !ctir !177
  %tmp_backup = alloca i8*, align 8, !ctir !7
  %__old = alloca i8*, align 8, !ctir !177
  %__len = alloca i64, align 8, !ctir !52
  %__new = alloca i8*, align 8, !ctir !7
  %tmp = alloca i8*, align 8, !ctir !7
  %lstat_ok = alloca i8, align 1, !ctir !139
  %tmp_buf = alloca %struct.stat, align 8, !ctir !421
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !450
  %dir = alloca %struct.dir_list*, align 8, !ctir !442
  %dot_sb = alloca %struct.stat, align 8, !ctir !421
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !421
  %dst_parent = alloca i8*, align 8, !ctir !7
  %in_current_dir = alloca i8, align 1, !ctir !139
  %err = alloca i32, align 4, !ctir !5
  %replace = alloca i8, align 1, !ctir !139
  %src_link_val = alloca i8*, align 8, !ctir !7
  %symlink_err = alloca i32, align 4, !ctir !5
  %dest_link_val = alloca i8*, align 8, !ctir !7
  %sb = alloca %struct.stat, align 8, !ctir !421
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !451
  %tmp952 = alloca %struct.timespec, align 8, !ctir !435
  %tmp955 = alloca %struct.timespec, align 8, !ctir !435
  %default_permissions = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4488, metadata !DIExpression()), !dbg !4489
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4490, metadata !DIExpression()), !dbg !4491
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4492, metadata !DIExpression()), !dbg !4493
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4494, metadata !DIExpression()), !dbg !4495
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4496, metadata !DIExpression()), !dbg !4497
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4504, metadata !DIExpression()), !dbg !4505
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4510, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4512, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4516, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4518, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4520, metadata !DIExpression()), !dbg !4521
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4521, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4522, metadata !DIExpression()), !dbg !4523
  store i8* null, i8** %earlier_file, align 8, !dbg !4523, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4524, metadata !DIExpression()), !dbg !4525
  store i8* null, i8** %dst_backup, align 8, !dbg !4525, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4526, metadata !DIExpression()), !dbg !4527
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4528, metadata !DIExpression()), !dbg !4529
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4529, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4530, metadata !DIExpression()), !dbg !4531
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4531, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4532, metadata !DIExpression()), !dbg !4533
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4533, !tbaa !2762
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4534, !tbaa !2668
  store i8 0, i8* %0, align 1, !dbg !4535, !tbaa !2762, !ctir !139
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4536, metadata !DIExpression()), !dbg !4537
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4538, !tbaa !2668
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4539, !ctir !363
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4539, !tbaa !4540, !ctir !5
  store i32 %2, i32* %rename_errno, align 4, !dbg !4537, !tbaa !2655
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4541, !tbaa !2668
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4543, !ctir !363
  %4 = load i8, i8* %move_mode, align 8, !dbg !4543, !tbaa !3187
  %tobool = trunc i8 %4 to i1, !dbg !4543, !ctir !139
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4544

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4545, !tbaa !2655
  %cmp = icmp slt i32 %5, 0, !dbg !4548
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4549

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4550, !tbaa !2668
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4551, !tbaa !2668
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4552
  %tobool4 = icmp ne i32 %call, 0, !dbg !4552
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4552

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #16, !dbg !4553
  %8 = load i32, i32* %call5, align 4, !dbg !4553, !tbaa !2655, !ctir !5
  br label %cond.end, !dbg !4552

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4552

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4552
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4554, !tbaa !2655
  br label %if.end, !dbg !4555

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4556, !tbaa !2655
  %cmp6 = icmp eq i32 %9, 0, !dbg !4557
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4558
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4558, !tbaa !2762
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4559, !tbaa !2668
  %tobool8 = icmp ne i8* %10, null, !dbg !4559
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4561

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4562, !tbaa !2762
  %tobool10 = trunc i8 %11 to i1, !dbg !4562
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4563, !tbaa !2668
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4564
  store i8 %frombool11, i8* %12, align 1, !dbg !4564, !tbaa !2762, !ctir !139
  br label %if.end12, !dbg !4565

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4566

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4567, !tbaa !2655
  %cmp14 = icmp eq i32 %13, 0, !dbg !4569
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4570

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4571, !tbaa !2668
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4572, !ctir !363
  %15 = load i8, i8* %last_file, align 1, !dbg !4572, !tbaa !4573
  %tobool16 = trunc i8 %15 to i1, !dbg !4572, !ctir !139
  br i1 %tobool16, label %if.end47, label %if.then20, !dbg !4567

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4574, !tbaa !2655
  %cmp18 = icmp ne i32 %16, 17, !dbg !4575
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4576

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4577, !tbaa !2668
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4578, !ctir !363
  %18 = load i32, i32* %interactive, align 8, !dbg !4578, !tbaa !3183, !ctir !80
  %cmp19 = icmp ne i32 %18, 2, !dbg !4579
  br i1 %cmp19, label %if.then20, label %if.end47, !dbg !4570

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4580, metadata !DIExpression()), !dbg !4582
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4583, !tbaa !2655
  %cmp21 = icmp eq i32 %19, 0, !dbg !4584
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4583

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4585, !tbaa !2668
  br label %cond.end24, !dbg !4583

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4586, !tbaa !2668
  br label %cond.end24, !dbg !4583

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4583
  store i8* %cond25, i8** %name, align 8, !dbg !4582, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !4587, metadata !DIExpression()), !dbg !4588
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4589, !tbaa !2668
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4590, !ctir !363
  %23 = load i32, i32* %dereference, align 4, !dbg !4590, !tbaa !3167, !ctir !73
  %cmp26 = icmp eq i32 %23, 2, !dbg !4591
  %24 = zext i1 %cmp26 to i64, !dbg !4589
  %cond27 = select i1 %cmp26, i32 256, i32 0, !dbg !4589
  store i32 %cond27, i32* %fstatat_flags, align 4, !dbg !4588, !tbaa !2655
  %25 = load i8*, i8** %name, align 8, !dbg !4592, !tbaa !2668
  %26 = load i32, i32* %fstatat_flags, align 4, !dbg !4594, !tbaa !2655
  %call28 = call i32 @follow_fstatat(i32 -100, i8* %25, %struct.stat* %src_sb, i32 %26), !dbg !4595
  %cmp29 = icmp ne i32 %call28, 0, !dbg !4596
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !4597

if.then30:                                        ; preds = %cond.end24
  %call31 = call i32* @__errno_location() #16, !dbg !4598
  %27 = load i32, i32* %call31, align 4, !dbg !4598, !tbaa !2655, !ctir !5
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4600
  %28 = load i8*, i8** %name, align 8, !dbg !4601, !tbaa !2668
  %call33 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !4601
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call32, i8* %call33), !dbg !4602
  store i1 false, i1* %retval, align 1, !dbg !4603
  br label %return, !dbg !4603

if.end34:                                         ; preds = %cond.end24
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4604, !ctir !421
  %29 = load i32, i32* %st_mode, align 8, !dbg !4604, !tbaa !2934, !ctir !137
  store i32 %29, i32* %src_mode, align 4, !dbg !4605, !tbaa !2655
  %30 = load i32, i32* %src_mode, align 4, !dbg !4606, !tbaa !2655
  %and = and i32 %30, 61440, !dbg !4606
  %cmp35 = icmp eq i32 %and, 16384, !dbg !4606
  br i1 %cmp35, label %land.lhs.true, label %if.end46, !dbg !4608

land.lhs.true:                                    ; preds = %if.end34
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4609, !tbaa !2668
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 27, !dbg !4610, !ctir !363
  %32 = load i8, i8* %recursive, align 2, !dbg !4610, !tbaa !3234
  %tobool36 = trunc i8 %32 to i1, !dbg !4610, !ctir !139
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !4611

if.then37:                                        ; preds = %land.lhs.true
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4612, !tbaa !2668
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 10, !dbg !4614, !ctir !363
  %34 = load i8, i8* %install_mode, align 1, !dbg !4614, !tbaa !3191
  %tobool38 = trunc i8 %34 to i1, !dbg !4614, !ctir !139
  br i1 %tobool38, label %cond.false41, label %cond.true39, !dbg !4615

cond.true39:                                      ; preds = %if.then37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.103, i64 0, i64 0)) #9, !dbg !4616
  br label %cond.end43, !dbg !4615

cond.false41:                                     ; preds = %if.then37
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.104, i64 0, i64 0)) #9, !dbg !4617
  br label %cond.end43, !dbg !4615

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i8* [ %call40, %cond.true39 ], [ %call42, %cond.false41 ], !dbg !4615
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !4618, !tbaa !2668
  %call45 = call i8* @quotearg_style(i32 4, i8* %35), !dbg !4618
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond44, i8* %call45), !dbg !4619
  store i1 false, i1* %retval, align 1, !dbg !4620
  br label %return, !dbg !4620

if.end46:                                         ; preds = %land.lhs.true, %if.end34
  br label %if.end47, !dbg !4621

if.end47:                                         ; preds = %if.end46, %lor.lhs.false, %cond.true15
  %36 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4622, !tbaa !2762
  %tobool48 = trunc i8 %36 to i1, !dbg !4622
  br i1 %tobool48, label %land.lhs.true49, label %if.end64, !dbg !4624

land.lhs.true49:                                  ; preds = %if.end47
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4625, !tbaa !2668
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 38, !dbg !4626, !ctir !363
  %38 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !4626, !tbaa !3290, !ctir !172
  %tobool50 = icmp ne %struct.hash_table* %38, null, !dbg !4625
  br i1 %tobool50, label %if.then51, label %if.end64, !dbg !4627

if.then51:                                        ; preds = %land.lhs.true49
  %39 = load i32, i32* %src_mode, align 4, !dbg !4628, !tbaa !2655
  %and52 = and i32 %39, 61440, !dbg !4628
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !4628
  br i1 %cmp53, label %if.end62, label %land.lhs.true54, !dbg !4631

land.lhs.true54:                                  ; preds = %if.then51
  %40 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4632, !tbaa !2668
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %40, i32 0, i32 0, !dbg !4633, !ctir !363
  %41 = load i32, i32* %backup_type, align 8, !dbg !4633, !tbaa !2947, !ctir !65
  %cmp55 = icmp eq i32 %41, 0, !dbg !4634
  br i1 %cmp55, label %land.lhs.true56, label %if.end62, !dbg !4635

land.lhs.true56:                                  ; preds = %land.lhs.true54
  %42 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4636, !tbaa !2668
  %src_info57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 38, !dbg !4637, !ctir !363
  %43 = load %struct.hash_table*, %struct.hash_table** %src_info57, align 8, !dbg !4637, !tbaa !3290, !ctir !172
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !4638, !tbaa !2668
  %call58 = call zeroext i1 @seen_file(%struct.hash_table* %43, i8* %44, %struct.stat* %src_sb), !dbg !4639
  br i1 %call58, label %if.then59, label %if.end62, !dbg !4640

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.105, i64 0, i64 0)) #9, !dbg !4641
  %45 = load i8*, i8** %src_name.addr, align 8, !dbg !4643, !tbaa !2668
  %call61 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !4643
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call60, i8* %call61), !dbg !4644
  store i1 true, i1* %retval, align 1, !dbg !4645
  br label %return, !dbg !4645

if.end62:                                         ; preds = %land.lhs.true56, %land.lhs.true54, %if.then51
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4646, !tbaa !2668
  %src_info63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 38, !dbg !4647, !ctir !363
  %47 = load %struct.hash_table*, %struct.hash_table** %src_info63, align 8, !dbg !4647, !tbaa !3290, !ctir !172
  %48 = load i8*, i8** %src_name.addr, align 8, !dbg !4648, !tbaa !2668
  call void @record_file(%struct.hash_table* %47, i8* %48, %struct.stat* %src_sb), !dbg !4649
  br label %if.end64, !dbg !4650

if.end64:                                         ; preds = %if.end62, %land.lhs.true49, %if.end47
  call void @llvm.dbg.declare(metadata i8* %dereference65, metadata !4651, metadata !DIExpression()), !dbg !4652
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4653, !tbaa !2668
  %50 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4654, !tbaa !2762
  %tobool66 = trunc i8 %50 to i1, !dbg !4654
  %call67 = call zeroext i1 @should_dereference(%struct.cp_options* %49, i1 zeroext %tobool66) #14, !dbg !4655
  %frombool68 = zext i1 %call67 to i8, !dbg !4652
  store i8 %frombool68, i8* %dereference65, align 1, !dbg !4652, !tbaa !2762
  %51 = load i8, i8* %new_dst.addr, align 1, !dbg !4656, !tbaa !2762
  %tobool69 = trunc i8 %51 to i1, !dbg !4656
  br i1 %tobool69, label %if.end345, label %if.then70, !dbg !4658

if.then70:                                        ; preds = %if.end64
  %52 = load i32, i32* %rename_errno, align 4, !dbg !4659, !tbaa !2655
  %cmp71 = icmp eq i32 %52, 17, !dbg !4662
  br i1 %cmp71, label %land.lhs.true72, label %if.then75, !dbg !4663

land.lhs.true72:                                  ; preds = %if.then70
  %53 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4664, !tbaa !2668
  %interactive73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %53, i32 0, i32 2, !dbg !4665, !ctir !363
  %54 = load i32, i32* %interactive73, align 8, !dbg !4665, !tbaa !3183, !ctir !80
  %cmp74 = icmp eq i32 %54, 2, !dbg !4666
  br i1 %cmp74, label %if.end122, label %if.then75, !dbg !4667

if.then75:                                        ; preds = %land.lhs.true72, %if.then70
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !4668, metadata !DIExpression()), !dbg !4670
  %55 = load i32, i32* %src_mode, align 4, !dbg !4671, !tbaa !2655
  %and76 = and i32 %55, 61440, !dbg !4671
  %cmp77 = icmp eq i32 %and76, 32768, !dbg !4671
  br i1 %cmp77, label %lor.lhs.false86, label %land.lhs.true78, !dbg !4672

land.lhs.true78:                                  ; preds = %if.then75
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4673, !tbaa !2668
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 5, !dbg !4674, !ctir !363
  %57 = load i8, i8* %copy_as_regular, align 4, !dbg !4674, !tbaa !3159
  %tobool79 = trunc i8 %57 to i1, !dbg !4674, !ctir !139
  br i1 %tobool79, label %lor.lhs.false80, label %lor.end, !dbg !4675

lor.lhs.false80:                                  ; preds = %land.lhs.true78
  %58 = load i32, i32* %src_mode, align 4, !dbg !4676, !tbaa !2655
  %and81 = and i32 %58, 61440, !dbg !4676
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !4676
  br i1 %cmp82, label %lor.end, label %lor.lhs.false83, !dbg !4677

lor.lhs.false83:                                  ; preds = %lor.lhs.false80
  %59 = load i32, i32* %src_mode, align 4, !dbg !4678, !tbaa !2655
  %and84 = and i32 %59, 61440, !dbg !4678
  %cmp85 = icmp eq i32 %and84, 40960, !dbg !4678
  br i1 %cmp85, label %lor.end, label %lor.lhs.false86, !dbg !4679

lor.lhs.false86:                                  ; preds = %lor.lhs.false83, %if.then75
  %60 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4680, !tbaa !2668
  %move_mode87 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %60, i32 0, i32 9, !dbg !4681, !ctir !363
  %61 = load i8, i8* %move_mode87, align 8, !dbg !4681, !tbaa !3187
  %tobool88 = trunc i8 %61 to i1, !dbg !4681, !ctir !139
  br i1 %tobool88, label %lor.end, label %lor.lhs.false89, !dbg !4682

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %62 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4683, !tbaa !2668
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %62, i32 0, i32 29, !dbg !4684, !ctir !363
  %63 = load i8, i8* %symbolic_link, align 4, !dbg !4684, !tbaa !3242
  %tobool90 = trunc i8 %63 to i1, !dbg !4684, !ctir !139
  br i1 %tobool90, label %lor.end, label %lor.lhs.false91, !dbg !4685

lor.lhs.false91:                                  ; preds = %lor.lhs.false89
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4686, !tbaa !2668
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 8, !dbg !4687, !ctir !363
  %65 = load i8, i8* %hard_link, align 1, !dbg !4687, !tbaa !3179
  %tobool92 = trunc i8 %65 to i1, !dbg !4687, !ctir !139
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !4688

lor.lhs.false93:                                  ; preds = %lor.lhs.false91
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4689, !tbaa !2668
  %backup_type94 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 0, !dbg !4690, !ctir !363
  %67 = load i32, i32* %backup_type94, align 8, !dbg !4690, !tbaa !2947, !ctir !65
  %cmp95 = icmp ne i32 %67, 0, !dbg !4691
  br i1 %cmp95, label %lor.end, label %lor.rhs, !dbg !4692

lor.rhs:                                          ; preds = %lor.lhs.false93
  %68 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4693, !tbaa !2668
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 6, !dbg !4694, !ctir !363
  %69 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !4694, !tbaa !3171
  %tobool96 = trunc i8 %69 to i1, !dbg !4694, !ctir !139
  br label %lor.end, !dbg !4692

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false93, %lor.lhs.false91, %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %lor.lhs.false80, %land.lhs.true78
  %70 = phi i1 [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false91 ], [ true, %lor.lhs.false89 ], [ true, %lor.lhs.false86 ], [ true, %lor.lhs.false83 ], [ true, %lor.lhs.false80 ], [ true, %land.lhs.true78 ], [ %tobool96, %lor.rhs ]
  %frombool97 = zext i1 %70 to i8, !dbg !4670
  store i8 %frombool97, i8* %use_lstat, align 1, !dbg !4670, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags98, metadata !4695, metadata !DIExpression()), !dbg !4696
  %71 = load i8, i8* %use_lstat, align 1, !dbg !4697, !tbaa !2762
  %tobool99 = trunc i8 %71 to i1, !dbg !4697
  %72 = zext i1 %tobool99 to i64, !dbg !4697
  %cond100 = select i1 %tobool99, i32 256, i32 0, !dbg !4697
  store i32 %cond100, i32* %fstatat_flags98, align 4, !dbg !4696, !tbaa !2655
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !4698, !tbaa !2668
  %74 = load i32, i32* %fstatat_flags98, align 4, !dbg !4700, !tbaa !2655
  %call101 = call i32 @follow_fstatat(i32 -100, i8* %73, %struct.stat* %dst_sb, i32 %74), !dbg !4701
  %cmp102 = icmp eq i32 %call101, 0, !dbg !4702
  br i1 %cmp102, label %if.then103, label %if.else, !dbg !4703

if.then103:                                       ; preds = %lor.end
  %75 = load i8, i8* %use_lstat, align 1, !dbg !4704, !tbaa !2762
  %tobool104 = trunc i8 %75 to i1, !dbg !4704
  %frombool105 = zext i1 %tobool104 to i8, !dbg !4706
  store i8 %frombool105, i8* %have_dst_lstat, align 1, !dbg !4706, !tbaa !2762
  store i32 17, i32* %rename_errno, align 4, !dbg !4707, !tbaa !2655
  br label %if.end121, !dbg !4708

if.else:                                          ; preds = %lor.end
  %call106 = call i32* @__errno_location() #16, !dbg !4709
  %76 = load i32, i32* %call106, align 4, !dbg !4709, !tbaa !2655, !ctir !5
  %cmp107 = icmp eq i32 %76, 40, !dbg !4712
  br i1 %cmp107, label %land.lhs.true108, label %if.else111, !dbg !4713

land.lhs.true108:                                 ; preds = %if.else
  %77 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4714, !tbaa !2668
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %77, i32 0, i32 7, !dbg !4715, !ctir !363
  %78 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !4715, !tbaa !3175
  %tobool109 = trunc i8 %78 to i1, !dbg !4715, !ctir !139
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !4716

if.then110:                                       ; preds = %land.lhs.true108
  br label %if.end120, !dbg !4716

if.else111:                                       ; preds = %land.lhs.true108, %if.else
  %call112 = call i32* @__errno_location() #16, !dbg !4717
  %79 = load i32, i32* %call112, align 4, !dbg !4717, !tbaa !2655, !ctir !5
  %cmp113 = icmp ne i32 %79, 2, !dbg !4719
  br i1 %cmp113, label %if.then114, label %if.else118, !dbg !4720

if.then114:                                       ; preds = %if.else111
  %call115 = call i32* @__errno_location() #16, !dbg !4721
  %80 = load i32, i32* %call115, align 4, !dbg !4721, !tbaa !2655, !ctir !5
  %call116 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4723
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !4724, !tbaa !2668
  %call117 = call i8* @quotearg_style(i32 4, i8* %81), !dbg !4724
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* %call116, i8* %call117), !dbg !4725
  store i1 false, i1* %retval, align 1, !dbg !4726
  br label %return, !dbg !4726

if.else118:                                       ; preds = %if.else111
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4727, !tbaa !2762
  br label %if.end119

if.end119:                                        ; preds = %if.else118
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then103
  br label %if.end122, !dbg !4728

if.end122:                                        ; preds = %if.end121, %land.lhs.true72
  %82 = load i32, i32* %rename_errno, align 4, !dbg !4729, !tbaa !2655
  %cmp123 = icmp eq i32 %82, 17, !dbg !4731
  br i1 %cmp123, label %if.then124, label %if.end344, !dbg !4732

if.then124:                                       ; preds = %if.end122
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !4733, metadata !DIExpression()), !dbg !4735
  store i8 0, i8* %return_now, align 1, !dbg !4735, !tbaa !2762
  %83 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4736, !tbaa !2668
  %interactive125 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %83, i32 0, i32 2, !dbg !4738, !ctir !363
  %84 = load i32, i32* %interactive125, align 8, !dbg !4738, !tbaa !3183, !ctir !80
  %cmp126 = icmp ne i32 %84, 2, !dbg !4739
  br i1 %cmp126, label %land.lhs.true127, label %if.end133, !dbg !4740

land.lhs.true127:                                 ; preds = %if.then124
  %85 = load i8*, i8** %src_name.addr, align 8, !dbg !4741, !tbaa !2668
  %86 = load i8*, i8** %dst_name.addr, align 8, !dbg !4742, !tbaa !2668
  %87 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4743, !tbaa !2668
  %call128 = call zeroext i1 @same_file_ok(i8* %85, %struct.stat* %src_sb, i8* %86, %struct.stat* %dst_sb, %struct.cp_options* %87, i8* %return_now), !dbg !4744
  br i1 %call128, label %if.end133, label %if.then129, !dbg !4745

if.then129:                                       ; preds = %land.lhs.true127
  %call130 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.106, i64 0, i64 0)) #9, !dbg !4746
  %88 = load i8*, i8** %src_name.addr, align 8, !dbg !4748, !tbaa !2668
  %call131 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %88), !dbg !4748
  %89 = load i8*, i8** %dst_name.addr, align 8, !dbg !4749, !tbaa !2668
  %call132 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %89), !dbg !4749
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call130, i8* %call131, i8* %call132), !dbg !4750
  store i1 false, i1* %retval, align 1, !dbg !4751
  br label %return, !dbg !4751

if.end133:                                        ; preds = %land.lhs.true127, %if.then124
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4752, !tbaa !2668
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 30, !dbg !4754, !ctir !363
  %91 = load i8, i8* %update, align 1, !dbg !4754, !tbaa !3265
  %tobool134 = trunc i8 %91 to i1, !dbg !4754, !ctir !139
  br i1 %tobool134, label %land.lhs.true135, label %if.end164, !dbg !4755

land.lhs.true135:                                 ; preds = %if.end133
  %92 = load i32, i32* %src_mode, align 4, !dbg !4756, !tbaa !2655
  %and136 = and i32 %92, 61440, !dbg !4756
  %cmp137 = icmp eq i32 %and136, 16384, !dbg !4756
  br i1 %cmp137, label %if.end164, label %if.then138, !dbg !4757

if.then138:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.declare(metadata i32* %options, metadata !4758, metadata !DIExpression()), !dbg !4760
  %93 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4761, !tbaa !2668
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %93, i32 0, i32 16, !dbg !4762, !ctir !363
  %94 = load i8, i8* %preserve_timestamps, align 1, !dbg !4762, !tbaa !2846
  %tobool139 = trunc i8 %94 to i1, !dbg !4762, !ctir !139
  br i1 %tobool139, label %land.rhs, label %land.end145, !dbg !4763

land.rhs:                                         ; preds = %if.then138
  %95 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4764, !tbaa !2668
  %move_mode140 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %95, i32 0, i32 9, !dbg !4765, !ctir !363
  %96 = load i8, i8* %move_mode140, align 8, !dbg !4765, !tbaa !3187
  %tobool141 = trunc i8 %96 to i1, !dbg !4765, !ctir !139
  br i1 %tobool141, label %land.rhs142, label %land.end, !dbg !4766

land.rhs142:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4767, !ctir !421
  %97 = load i64, i64* %st_dev, align 8, !dbg !4767, !tbaa !4768, !ctir !280
  %st_dev143 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4769, !ctir !421
  %98 = load i64, i64* %st_dev143, align 8, !dbg !4769, !tbaa !4768, !ctir !280
  %cmp144 = icmp eq i64 %97, %98, !dbg !4770
  br label %land.end

land.end:                                         ; preds = %land.rhs142, %land.rhs
  %99 = phi i1 [ false, %land.rhs ], [ %cmp144, %land.rhs142 ], !dbg !4771
  %lnot = xor i1 %99, true, !dbg !4772
  br label %land.end145

land.end145:                                      ; preds = %land.end, %if.then138
  %100 = phi i1 [ false, %if.then138 ], [ %lnot, %land.end ], !dbg !4771
  %101 = zext i1 %100 to i64, !dbg !4773
  %cond146 = select i1 %100, i32 1, i32 0, !dbg !4773
  store i32 %cond146, i32* %options, align 4, !dbg !4760, !tbaa !2655
  %102 = load i8*, i8** %dst_name.addr, align 8, !dbg !4774, !tbaa !2668
  %103 = load i32, i32* %options, align 4, !dbg !4776, !tbaa !2655
  %call147 = call i32 @utimecmp(i8* %102, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %103), !dbg !4777
  %cmp148 = icmp sle i32 0, %call147, !dbg !4778
  br i1 %cmp148, label %if.then149, label %if.end163, !dbg !4779

if.then149:                                       ; preds = %land.end145
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4780, !tbaa !2668
  %tobool150 = icmp ne i8* %104, null, !dbg !4780
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !4783

if.then151:                                       ; preds = %if.then149
  %105 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4784, !tbaa !2668
  store i8 1, i8* %105, align 1, !dbg !4785, !tbaa !2762, !ctir !139
  br label %if.end152, !dbg !4786

if.end152:                                        ; preds = %if.then151, %if.then149
  %106 = load i8*, i8** %dst_name.addr, align 8, !dbg !4787, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4788, !ctir !421
  %107 = load i64, i64* %st_ino, align 8, !dbg !4788, !tbaa !4789, !ctir !282
  %st_dev153 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4790, !ctir !421
  %108 = load i64, i64* %st_dev153, align 8, !dbg !4790, !tbaa !4768, !ctir !280
  %call154 = call i8* @remember_copied(i8* %106, i64 %107, i64 %108), !dbg !4791
  store i8* %call154, i8** %earlier_file, align 8, !dbg !4792, !tbaa !2668
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !4793, !tbaa !2668
  %tobool155 = icmp ne i8* %109, null, !dbg !4793
  br i1 %tobool155, label %if.then156, label %if.end162, !dbg !4795

if.then156:                                       ; preds = %if.end152
  %110 = load i8*, i8** %earlier_file, align 8, !dbg !4796, !tbaa !2668
  %111 = load i8*, i8** %dst_name.addr, align 8, !dbg !4799, !tbaa !2668
  %112 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4800, !tbaa !2668
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %112, i32 0, i32 31, !dbg !4801, !ctir !363
  %113 = load i8, i8* %verbose, align 2, !dbg !4801, !tbaa !2832
  %tobool157 = trunc i8 %113 to i1, !dbg !4801, !ctir !139
  %114 = load i8, i8* %dereference65, align 1, !dbg !4802, !tbaa !2762
  %tobool158 = trunc i8 %114 to i1, !dbg !4802
  %call159 = call zeroext i1 @create_hard_link(i8* %110, i8* %111, i1 zeroext true, i1 zeroext %tobool157, i1 zeroext %tobool158), !dbg !4803
  br i1 %call159, label %if.end161, label %if.then160, !dbg !4804

if.then160:                                       ; preds = %if.then156
  br label %un_backup, !dbg !4805

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !4807

if.end162:                                        ; preds = %if.end161, %if.end152
  store i1 true, i1* %retval, align 1, !dbg !4808
  br label %return, !dbg !4808

if.end163:                                        ; preds = %land.end145
  br label %if.end164, !dbg !4809

if.end164:                                        ; preds = %if.end163, %land.lhs.true135, %if.end133
  %115 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4810, !tbaa !2668
  %move_mode165 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %115, i32 0, i32 9, !dbg !4812, !ctir !363
  %116 = load i8, i8* %move_mode165, align 8, !dbg !4812, !tbaa !3187
  %tobool166 = trunc i8 %116 to i1, !dbg !4812, !ctir !139
  br i1 %tobool166, label %if.then167, label %if.else174, !dbg !4813

if.then167:                                       ; preds = %if.end164
  %117 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4814, !tbaa !2668
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !4817, !tbaa !2668
  %call168 = call zeroext i1 @abandon_move(%struct.cp_options* %117, i8* %118, %struct.stat* %dst_sb), !dbg !4818
  br i1 %call168, label %if.then169, label %if.end173, !dbg !4819

if.then169:                                       ; preds = %if.then167
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4820, !tbaa !2668
  %tobool170 = icmp ne i8* %119, null, !dbg !4820
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !4823

if.then171:                                       ; preds = %if.then169
  %120 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4824, !tbaa !2668
  store i8 1, i8* %120, align 1, !dbg !4825, !tbaa !2762, !ctir !139
  br label %if.end172, !dbg !4826

if.end172:                                        ; preds = %if.then171, %if.then169
  store i1 true, i1* %retval, align 1, !dbg !4827
  br label %return, !dbg !4827

if.end173:                                        ; preds = %if.then167
  br label %if.end187, !dbg !4828

if.else174:                                       ; preds = %if.end164
  %121 = load i32, i32* %src_mode, align 4, !dbg !4829, !tbaa !2655
  %and175 = and i32 %121, 61440, !dbg !4829
  %cmp176 = icmp eq i32 %and175, 16384, !dbg !4829
  br i1 %cmp176, label %if.end186, label %land.lhs.true177, !dbg !4832

land.lhs.true177:                                 ; preds = %if.else174
  %122 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4833, !tbaa !2668
  %interactive178 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %122, i32 0, i32 2, !dbg !4834, !ctir !363
  %123 = load i32, i32* %interactive178, align 8, !dbg !4834, !tbaa !3183, !ctir !80
  %cmp179 = icmp eq i32 %123, 2, !dbg !4835
  br i1 %cmp179, label %if.then185, label %lor.lhs.false180, !dbg !4836

lor.lhs.false180:                                 ; preds = %land.lhs.true177
  %124 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4837, !tbaa !2668
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %124, i32 0, i32 2, !dbg !4838, !ctir !363
  %125 = load i32, i32* %interactive181, align 8, !dbg !4838, !tbaa !3183, !ctir !80
  %cmp182 = icmp eq i32 %125, 3, !dbg !4839
  br i1 %cmp182, label %land.lhs.true183, label %if.end186, !dbg !4840

land.lhs.true183:                                 ; preds = %lor.lhs.false180
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4841, !tbaa !2668
  %127 = load i8*, i8** %dst_name.addr, align 8, !dbg !4842, !tbaa !2668
  %call184 = call zeroext i1 @overwrite_ok(%struct.cp_options* %126, i8* %127, %struct.stat* %dst_sb), !dbg !4843
  br i1 %call184, label %if.end186, label %if.then185, !dbg !4844

if.then185:                                       ; preds = %land.lhs.true183, %land.lhs.true177
  store i1 true, i1* %retval, align 1, !dbg !4845
  br label %return, !dbg !4845

if.end186:                                        ; preds = %land.lhs.true183, %lor.lhs.false180, %if.else174
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end173
  %128 = load i8, i8* %return_now, align 1, !dbg !4846, !tbaa !2762
  %tobool188 = trunc i8 %128 to i1, !dbg !4846
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !4848

if.then189:                                       ; preds = %if.end187
  store i1 true, i1* %retval, align 1, !dbg !4849
  br label %return, !dbg !4849

if.end190:                                        ; preds = %if.end187
  %st_mode191 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4850, !ctir !421
  %129 = load i32, i32* %st_mode191, align 8, !dbg !4850, !tbaa !2934, !ctir !137
  %and192 = and i32 %129, 61440, !dbg !4850
  %cmp193 = icmp eq i32 %and192, 16384, !dbg !4850
  br i1 %cmp193, label %if.end221, label %if.then194, !dbg !4852

if.then194:                                       ; preds = %if.end190
  %130 = load i32, i32* %src_mode, align 4, !dbg !4853, !tbaa !2655
  %and195 = and i32 %130, 61440, !dbg !4853
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !4853
  br i1 %cmp196, label %if.then197, label %if.end209, !dbg !4856

if.then197:                                       ; preds = %if.then194
  %131 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4857, !tbaa !2668
  %move_mode198 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %131, i32 0, i32 9, !dbg !4860, !ctir !363
  %132 = load i8, i8* %move_mode198, align 8, !dbg !4860, !tbaa !3187
  %tobool199 = trunc i8 %132 to i1, !dbg !4860, !ctir !139
  br i1 %tobool199, label %land.lhs.true200, label %if.else204, !dbg !4861

land.lhs.true200:                                 ; preds = %if.then197
  %133 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4862, !tbaa !2668
  %backup_type201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %133, i32 0, i32 0, !dbg !4863, !ctir !363
  %134 = load i32, i32* %backup_type201, align 8, !dbg !4863, !tbaa !2947, !ctir !65
  %cmp202 = icmp ne i32 %134, 0, !dbg !4864
  br i1 %cmp202, label %if.then203, label %if.else204, !dbg !4865

if.then203:                                       ; preds = %land.lhs.true200
  br label %if.end208, !dbg !4866

if.else204:                                       ; preds = %land.lhs.true200, %if.then197
  %call205 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.107, i64 0, i64 0)) #9, !dbg !4868
  %135 = load i8*, i8** %dst_name.addr, align 8, !dbg !4870, !tbaa !2668
  %call206 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %135), !dbg !4870
  %136 = load i8*, i8** %src_name.addr, align 8, !dbg !4871, !tbaa !2668
  %call207 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %136), !dbg !4871
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call205, i8* %call206, i8* %call207), !dbg !4872
  store i1 false, i1* %retval, align 1, !dbg !4873
  br label %return, !dbg !4873

if.end208:                                        ; preds = %if.then203
  br label %if.end209, !dbg !4874

if.end209:                                        ; preds = %if.end208, %if.then194
  %137 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4875, !tbaa !2762
  %tobool210 = trunc i8 %137 to i1, !dbg !4875
  br i1 %tobool210, label %land.lhs.true211, label %if.end220, !dbg !4877

land.lhs.true211:                                 ; preds = %if.end209
  %138 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4878, !tbaa !2668
  %backup_type212 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %138, i32 0, i32 0, !dbg !4879, !ctir !363
  %139 = load i32, i32* %backup_type212, align 8, !dbg !4879, !tbaa !2947, !ctir !65
  %cmp213 = icmp ne i32 %139, 3, !dbg !4880
  br i1 %cmp213, label %land.lhs.true214, label %if.end220, !dbg !4881

land.lhs.true214:                                 ; preds = %land.lhs.true211
  %140 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4882, !tbaa !2668
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %140, i32 0, i32 37, !dbg !4883, !ctir !363
  %141 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !4883, !tbaa !3286, !ctir !172
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !4884, !tbaa !2668
  %call215 = call zeroext i1 @seen_file(%struct.hash_table* %141, i8* %142, %struct.stat* %dst_sb), !dbg !4885
  br i1 %call215, label %if.then216, label %if.end220, !dbg !4886

if.then216:                                       ; preds = %land.lhs.true214
  %call217 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.108, i64 0, i64 0)) #9, !dbg !4887
  %143 = load i8*, i8** %dst_name.addr, align 8, !dbg !4889, !tbaa !2668
  %call218 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %143), !dbg !4889
  %144 = load i8*, i8** %src_name.addr, align 8, !dbg !4890, !tbaa !2668
  %call219 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %144), !dbg !4890
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call217, i8* %call218, i8* %call219), !dbg !4891
  store i1 false, i1* %retval, align 1, !dbg !4892
  br label %return, !dbg !4892

if.end220:                                        ; preds = %land.lhs.true214, %land.lhs.true211, %if.end209
  br label %if.end221, !dbg !4893

if.end221:                                        ; preds = %if.end220, %if.end190
  %145 = load i32, i32* %src_mode, align 4, !dbg !4894, !tbaa !2655
  %and222 = and i32 %145, 61440, !dbg !4894
  %cmp223 = icmp eq i32 %and222, 16384, !dbg !4894
  br i1 %cmp223, label %if.end240, label %if.then224, !dbg !4896

if.then224:                                       ; preds = %if.end221
  %st_mode225 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4897, !ctir !421
  %146 = load i32, i32* %st_mode225, align 8, !dbg !4897, !tbaa !2934, !ctir !137
  %and226 = and i32 %146, 61440, !dbg !4897
  %cmp227 = icmp eq i32 %and226, 16384, !dbg !4897
  br i1 %cmp227, label %if.then228, label %if.end239, !dbg !4900

if.then228:                                       ; preds = %if.then224
  %147 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4901, !tbaa !2668
  %move_mode229 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %147, i32 0, i32 9, !dbg !4904, !ctir !363
  %148 = load i8, i8* %move_mode229, align 8, !dbg !4904, !tbaa !3187
  %tobool230 = trunc i8 %148 to i1, !dbg !4904, !ctir !139
  br i1 %tobool230, label %land.lhs.true231, label %if.else235, !dbg !4905

land.lhs.true231:                                 ; preds = %if.then228
  %149 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4906, !tbaa !2668
  %backup_type232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %149, i32 0, i32 0, !dbg !4907, !ctir !363
  %150 = load i32, i32* %backup_type232, align 8, !dbg !4907, !tbaa !2947, !ctir !65
  %cmp233 = icmp ne i32 %150, 0, !dbg !4908
  br i1 %cmp233, label %if.then234, label %if.else235, !dbg !4909

if.then234:                                       ; preds = %land.lhs.true231
  br label %if.end238, !dbg !4910

if.else235:                                       ; preds = %land.lhs.true231, %if.then228
  %call236 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.109, i64 0, i64 0)) #9, !dbg !4912
  %151 = load i8*, i8** %dst_name.addr, align 8, !dbg !4914, !tbaa !2668
  %call237 = call i8* @quotearg_style(i32 4, i8* %151), !dbg !4914
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call236, i8* %call237), !dbg !4915
  store i1 false, i1* %retval, align 1, !dbg !4916
  br label %return, !dbg !4916

if.end238:                                        ; preds = %if.then234
  br label %if.end239, !dbg !4917

if.end239:                                        ; preds = %if.end238, %if.then224
  br label %if.end240, !dbg !4918

if.end240:                                        ; preds = %if.end239, %if.end221
  %152 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4919, !tbaa !2668
  %move_mode241 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %152, i32 0, i32 9, !dbg !4921, !ctir !363
  %153 = load i8, i8* %move_mode241, align 8, !dbg !4921, !tbaa !3187
  %tobool242 = trunc i8 %153 to i1, !dbg !4921, !ctir !139
  br i1 %tobool242, label %if.then243, label %if.end259, !dbg !4922

if.then243:                                       ; preds = %if.end240
  %st_mode244 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4923, !ctir !421
  %154 = load i32, i32* %st_mode244, align 8, !dbg !4923, !tbaa !2934, !ctir !137
  %and245 = and i32 %154, 61440, !dbg !4923
  %cmp246 = icmp eq i32 %and245, 16384, !dbg !4923
  br i1 %cmp246, label %land.lhs.true247, label %if.end258, !dbg !4926

land.lhs.true247:                                 ; preds = %if.then243
  %st_mode248 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4927, !ctir !421
  %155 = load i32, i32* %st_mode248, align 8, !dbg !4927, !tbaa !2934, !ctir !137
  %and249 = and i32 %155, 61440, !dbg !4927
  %cmp250 = icmp eq i32 %and249, 16384, !dbg !4927
  br i1 %cmp250, label %if.end258, label %land.lhs.true251, !dbg !4928

land.lhs.true251:                                 ; preds = %land.lhs.true247
  %156 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4929, !tbaa !2668
  %backup_type252 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %156, i32 0, i32 0, !dbg !4930, !ctir !363
  %157 = load i32, i32* %backup_type252, align 8, !dbg !4930, !tbaa !2947, !ctir !65
  %cmp253 = icmp eq i32 %157, 0, !dbg !4931
  br i1 %cmp253, label %if.then254, label %if.end258, !dbg !4932

if.then254:                                       ; preds = %land.lhs.true251
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.110, i64 0, i64 0)) #9, !dbg !4933
  %158 = load i8*, i8** %src_name.addr, align 8, !dbg !4935, !tbaa !2668
  %call256 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !4935
  %159 = load i8*, i8** %dst_name.addr, align 8, !dbg !4936, !tbaa !2668
  %call257 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %159), !dbg !4936
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255, i8* %call256, i8* %call257), !dbg !4937
  store i1 false, i1* %retval, align 1, !dbg !4938
  br label %return, !dbg !4938

if.end258:                                        ; preds = %land.lhs.true251, %land.lhs.true247, %if.then243
  br label %if.end259, !dbg !4939

if.end259:                                        ; preds = %if.end258, %if.end240
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !4940, metadata !DIExpression()), !dbg !4941
  %160 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4942, !tbaa !2668
  %backup_type260 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %160, i32 0, i32 0, !dbg !4944, !ctir !363
  %161 = load i32, i32* %backup_type260, align 8, !dbg !4944, !tbaa !2947, !ctir !65
  %cmp261 = icmp ne i32 %161, 0, !dbg !4945
  br i1 %cmp261, label %land.lhs.true262, label %if.else303, !dbg !4946

land.lhs.true262:                                 ; preds = %if.end259
  %162 = load i8*, i8** %src_name.addr, align 8, !dbg !4947, !tbaa !2668
  %call263 = call i8* @last_component(i8* %162) #14, !dbg !4948
  store i8* %call263, i8** %srcbase, align 8, !dbg !4949, !tbaa !2668
  %call264 = call zeroext i1 @dot_or_dotdot(i8* %call263), !dbg !4950
  br i1 %call264, label %if.else303, label %land.lhs.true265, !dbg !4951

land.lhs.true265:                                 ; preds = %land.lhs.true262
  %163 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4952, !tbaa !2668
  %move_mode266 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %163, i32 0, i32 9, !dbg !4953, !ctir !363
  %164 = load i8, i8* %move_mode266, align 8, !dbg !4953, !tbaa !3187
  %tobool267 = trunc i8 %164 to i1, !dbg !4953, !ctir !139
  br i1 %tobool267, label %if.then272, label %lor.lhs.false268, !dbg !4954

lor.lhs.false268:                                 ; preds = %land.lhs.true265
  %st_mode269 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4955, !ctir !421
  %165 = load i32, i32* %st_mode269, align 8, !dbg !4955, !tbaa !2934, !ctir !137
  %and270 = and i32 %165, 61440, !dbg !4955
  %cmp271 = icmp eq i32 %and270, 16384, !dbg !4955
  br i1 %cmp271, label %if.else303, label %if.then272, !dbg !4956

if.then272:                                       ; preds = %lor.lhs.false268, %land.lhs.true265
  %166 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4957, !tbaa !2668
  %backup_type273 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %166, i32 0, i32 0, !dbg !4960, !ctir !363
  %167 = load i32, i32* %backup_type273, align 8, !dbg !4960, !tbaa !2947, !ctir !65
  %cmp274 = icmp ne i32 %167, 3, !dbg !4961
  br i1 %cmp274, label %land.lhs.true275, label %if.end288, !dbg !4962

land.lhs.true275:                                 ; preds = %if.then272
  %168 = load i8*, i8** %srcbase, align 8, !dbg !4963, !tbaa !2668
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !4964, !tbaa !2668
  %call276 = call zeroext i1 @source_is_dst_backup(i8* %168, %struct.stat* %src_sb, i8* %169), !dbg !4965
  br i1 %call276, label %if.then277, label %if.end288, !dbg !4966

if.then277:                                       ; preds = %land.lhs.true275
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4967, metadata !DIExpression()), !dbg !4969
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4970, !tbaa !2668
  %move_mode278 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 9, !dbg !4971, !ctir !363
  %171 = load i8, i8* %move_mode278, align 8, !dbg !4971, !tbaa !3187
  %tobool279 = trunc i8 %171 to i1, !dbg !4971, !ctir !139
  br i1 %tobool279, label %cond.true280, label %cond.false282, !dbg !4970

cond.true280:                                     ; preds = %if.then277
  %call281 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.111, i64 0, i64 0)) #9, !dbg !4972
  br label %cond.end284, !dbg !4970

cond.false282:                                    ; preds = %if.then277
  %call283 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.112, i64 0, i64 0)) #9, !dbg !4973
  br label %cond.end284, !dbg !4970

cond.end284:                                      ; preds = %cond.false282, %cond.true280
  %cond285 = phi i8* [ %call281, %cond.true280 ], [ %call283, %cond.false282 ], !dbg !4970
  store i8* %cond285, i8** %fmt, align 8, !dbg !4974, !tbaa !2668
  %172 = load i8*, i8** %fmt, align 8, !dbg !4975, !tbaa !2668
  %173 = load i8*, i8** %dst_name.addr, align 8, !dbg !4976, !tbaa !2668
  %call286 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %173), !dbg !4976
  %174 = load i8*, i8** %src_name.addr, align 8, !dbg !4977, !tbaa !2668
  %call287 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %174), !dbg !4977
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %172, i8* %call286, i8* %call287), !dbg !4978
  store i1 false, i1* %retval, align 1, !dbg !4979
  br label %return, !dbg !4979

if.end288:                                        ; preds = %land.lhs.true275, %if.then272
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !4980, metadata !DIExpression()), !dbg !4981
  %175 = load i8*, i8** %dst_name.addr, align 8, !dbg !4982, !tbaa !2668
  %176 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4983, !tbaa !2668
  %backup_type289 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %176, i32 0, i32 0, !dbg !4984, !ctir !363
  %177 = load i32, i32* %backup_type289, align 8, !dbg !4984, !tbaa !2947, !ctir !65
  %call290 = call i8* @backup_file_rename(i32 -100, i8* %175, i32 %177), !dbg !4985
  store i8* %call290, i8** %tmp_backup, align 8, !dbg !4981, !tbaa !2668
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !4986, !tbaa !2668
  %tobool291 = icmp ne i8* %178, null, !dbg !4986
  br i1 %tobool291, label %if.then292, label %if.else294, !dbg !4988

if.then292:                                       ; preds = %if.end288
  br label %do.body, !dbg !4989

do.body:                                          ; preds = %if.then292
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !4991, metadata !DIExpression()), !dbg !4994
  %179 = load i8*, i8** %tmp_backup, align 8, !dbg !4994, !tbaa !2668
  store i8* %179, i8** %__old, align 8, !dbg !4994, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4995, metadata !DIExpression()), !dbg !4994
  %180 = load i8*, i8** %__old, align 8, !dbg !4994, !tbaa !2668
  %call293 = call i64 @strlen(i8* %180) #14, !dbg !4994
  %add = add i64 %call293, 1, !dbg !4994
  store i64 %add, i64* %__len, align 8, !dbg !4994, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !4996, metadata !DIExpression()), !dbg !4994
  %181 = load i64, i64* %__len, align 8, !dbg !4994, !tbaa !3308
  %182 = alloca i8, i64 %181, align 16, !dbg !4994
  store i8* %182, i8** %__new, align 8, !dbg !4994, !tbaa !2668
  %183 = load i8*, i8** %__new, align 8, !dbg !4994, !tbaa !2668
  %184 = load i8*, i8** %__old, align 8, !dbg !4994, !tbaa !2668
  %185 = load i64, i64* %__len, align 8, !dbg !4994, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 %185, i1 false), !dbg !4994
  store i8* %183, i8** %tmp, align 8, !dbg !4994, !tbaa !2668
  %186 = load i8*, i8** %tmp, align 8, !dbg !4994, !tbaa !2668
  store i8* %186, i8** %dst_backup, align 8, !dbg !4997, !tbaa !2668
  br label %do.end, !dbg !4997

do.end:                                           ; preds = %do.body
  %187 = load i8*, i8** %tmp_backup, align 8, !dbg !4998, !tbaa !2668
  call void @free(i8* %187) #9, !dbg !4999
  br label %if.end302, !dbg !5000

if.else294:                                       ; preds = %if.end288
  %call295 = call i32* @__errno_location() #16, !dbg !5001
  %188 = load i32, i32* %call295, align 4, !dbg !5001, !tbaa !2655, !ctir !5
  %cmp296 = icmp ne i32 %188, 2, !dbg !5003
  br i1 %cmp296, label %if.then297, label %if.end301, !dbg !5004

if.then297:                                       ; preds = %if.else294
  %call298 = call i32* @__errno_location() #16, !dbg !5005
  %189 = load i32, i32* %call298, align 4, !dbg !5005, !tbaa !2655, !ctir !5
  %call299 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.113, i64 0, i64 0)) #9, !dbg !5007
  %190 = load i8*, i8** %dst_name.addr, align 8, !dbg !5008, !tbaa !2668
  %call300 = call i8* @quotearg_style(i32 4, i8* %190), !dbg !5008
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* %call299, i8* %call300), !dbg !5009
  store i1 false, i1* %retval, align 1, !dbg !5010
  br label %return, !dbg !5010

if.end301:                                        ; preds = %if.else294
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5011, !tbaa !2762
  br label %if.end343, !dbg !5012

if.else303:                                       ; preds = %lor.lhs.false268, %land.lhs.true262, %if.end259
  %st_mode304 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5013, !ctir !421
  %191 = load i32, i32* %st_mode304, align 8, !dbg !5013, !tbaa !2934, !ctir !137
  %and305 = and i32 %191, 61440, !dbg !5013
  %cmp306 = icmp eq i32 %and305, 16384, !dbg !5013
  br i1 %cmp306, label %if.end342, label %land.lhs.true307, !dbg !5015

land.lhs.true307:                                 ; preds = %if.else303
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5016, !tbaa !2668
  %move_mode308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 9, !dbg !5017, !ctir !363
  %193 = load i8, i8* %move_mode308, align 8, !dbg !5017, !tbaa !3187
  %tobool309 = trunc i8 %193 to i1, !dbg !5017, !ctir !139
  br i1 %tobool309, label %if.end342, label %land.lhs.true310, !dbg !5018

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5019, !tbaa !2668
  %unlink_dest_before_opening311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 6, !dbg !5020, !ctir !363
  %195 = load i8, i8* %unlink_dest_before_opening311, align 1, !dbg !5020, !tbaa !3171
  %tobool312 = trunc i8 %195 to i1, !dbg !5020, !ctir !139
  br i1 %tobool312, label %if.then324, label %lor.lhs.false313, !dbg !5021

lor.lhs.false313:                                 ; preds = %land.lhs.true310
  %196 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5022, !tbaa !2668
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %196, i32 0, i32 19, !dbg !5023, !ctir !363
  %197 = load i8, i8* %preserve_links, align 2, !dbg !5023, !tbaa !3203
  %tobool314 = trunc i8 %197 to i1, !dbg !5023, !ctir !139
  br i1 %tobool314, label %land.lhs.true315, label %lor.lhs.false317, !dbg !5024

land.lhs.true315:                                 ; preds = %lor.lhs.false313
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !5025, !ctir !421
  %198 = load i64, i64* %st_nlink, align 8, !dbg !5025, !tbaa !5026, !ctir !284
  %cmp316 = icmp ult i64 1, %198, !dbg !5027
  br i1 %cmp316, label %if.then324, label %lor.lhs.false317, !dbg !5028

lor.lhs.false317:                                 ; preds = %land.lhs.true315, %lor.lhs.false313
  %199 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5029, !tbaa !2668
  %dereference318 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %199, i32 0, i32 1, !dbg !5030, !ctir !363
  %200 = load i32, i32* %dereference318, align 4, !dbg !5030, !tbaa !3167, !ctir !73
  %cmp319 = icmp eq i32 %200, 2, !dbg !5031
  br i1 %cmp319, label %land.lhs.true320, label %if.end342, !dbg !5032

land.lhs.true320:                                 ; preds = %lor.lhs.false317
  %st_mode321 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5033, !ctir !421
  %201 = load i32, i32* %st_mode321, align 8, !dbg !5033, !tbaa !2934, !ctir !137
  %and322 = and i32 %201, 61440, !dbg !5033
  %cmp323 = icmp eq i32 %and322, 32768, !dbg !5033
  br i1 %cmp323, label %if.end342, label %if.then324, !dbg !5034

if.then324:                                       ; preds = %land.lhs.true320, %land.lhs.true315, %land.lhs.true310
  %202 = load i8*, i8** %dst_name.addr, align 8, !dbg !5035, !tbaa !2668
  %call325 = call i32 @unlink(i8* %202) #9, !dbg !5038
  %cmp326 = icmp ne i32 %call325, 0, !dbg !5039
  br i1 %cmp326, label %land.lhs.true327, label %if.end334, !dbg !5040

land.lhs.true327:                                 ; preds = %if.then324
  %call328 = call i32* @__errno_location() #16, !dbg !5041
  %203 = load i32, i32* %call328, align 4, !dbg !5041, !tbaa !2655, !ctir !5
  %cmp329 = icmp ne i32 %203, 2, !dbg !5042
  br i1 %cmp329, label %if.then330, label %if.end334, !dbg !5043

if.then330:                                       ; preds = %land.lhs.true327
  %call331 = call i32* @__errno_location() #16, !dbg !5044
  %204 = load i32, i32* %call331, align 4, !dbg !5044, !tbaa !2655, !ctir !5
  %call332 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !5046
  %205 = load i8*, i8** %dst_name.addr, align 8, !dbg !5047, !tbaa !2668
  %call333 = call i8* @quotearg_style(i32 4, i8* %205), !dbg !5047
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %204, i8* %call332, i8* %call333), !dbg !5048
  store i1 false, i1* %retval, align 1, !dbg !5049
  br label %return, !dbg !5049

if.end334:                                        ; preds = %land.lhs.true327, %if.then324
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5050, !tbaa !2762
  %206 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5051, !tbaa !2668
  %verbose335 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %206, i32 0, i32 31, !dbg !5053, !ctir !363
  %207 = load i8, i8* %verbose335, align 2, !dbg !5053, !tbaa !2832
  %tobool336 = trunc i8 %207 to i1, !dbg !5053, !ctir !139
  br i1 %tobool336, label %if.then337, label %if.end341, !dbg !5054

if.then337:                                       ; preds = %if.end334
  %call338 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !5055
  %208 = load i8*, i8** %dst_name.addr, align 8, !dbg !5056, !tbaa !2668
  %call339 = call i8* @quotearg_style(i32 4, i8* %208), !dbg !5056
  %call340 = call i32 (i8*, ...) @printf(i8* %call338, i8* %call339), !dbg !5057
  br label %if.end341, !dbg !5057

if.end341:                                        ; preds = %if.then337, %if.end334
  br label %if.end342, !dbg !5058

if.end342:                                        ; preds = %if.end341, %land.lhs.true320, %lor.lhs.false317, %land.lhs.true307, %if.else303
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end302
  br label %if.end344, !dbg !5059

if.end344:                                        ; preds = %if.end343, %if.end122
  br label %if.end345, !dbg !5060

if.end345:                                        ; preds = %if.end344, %if.end64
  %209 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5061, !tbaa !2762
  %tobool346 = trunc i8 %209 to i1, !dbg !5061
  br i1 %tobool346, label %land.lhs.true347, label %if.end379, !dbg !5063

land.lhs.true347:                                 ; preds = %if.end345
  %210 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5064, !tbaa !2668
  %dest_info348 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %210, i32 0, i32 37, !dbg !5065, !ctir !363
  %211 = load %struct.hash_table*, %struct.hash_table** %dest_info348, align 8, !dbg !5065, !tbaa !3286, !ctir !172
  %tobool349 = icmp ne %struct.hash_table* %211, null, !dbg !5064
  br i1 %tobool349, label %land.lhs.true350, label %if.end379, !dbg !5066

land.lhs.true350:                                 ; preds = %land.lhs.true347
  %212 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5067, !tbaa !2668
  %move_mode351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %212, i32 0, i32 9, !dbg !5068, !ctir !363
  %213 = load i8, i8* %move_mode351, align 8, !dbg !5068, !tbaa !3187
  %tobool352 = trunc i8 %213 to i1, !dbg !5068, !ctir !139
  br i1 %tobool352, label %if.end379, label %land.lhs.true353, !dbg !5069

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %214 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5070, !tbaa !2668
  %backup_type354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %214, i32 0, i32 0, !dbg !5071, !ctir !363
  %215 = load i32, i32* %backup_type354, align 8, !dbg !5071, !tbaa !2947, !ctir !65
  %cmp355 = icmp eq i32 %215, 0, !dbg !5072
  br i1 %cmp355, label %if.then356, label %if.end379, !dbg !5073

if.then356:                                       ; preds = %land.lhs.true353
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !5074, metadata !DIExpression()), !dbg !5076
  store i8 1, i8* %lstat_ok, align 1, !dbg !5076, !tbaa !2762
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !5077, metadata !DIExpression()), !dbg !5078
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !5079, metadata !DIExpression()), !dbg !5080
  %216 = load i8, i8* %have_dst_lstat, align 1, !dbg !5081, !tbaa !2762
  %tobool357 = trunc i8 %216 to i1, !dbg !5081
  br i1 %tobool357, label %if.then358, label %if.else359, !dbg !5083

if.then358:                                       ; preds = %if.then356
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !5084, !tbaa !2668
  br label %if.end365, !dbg !5085

if.else359:                                       ; preds = %if.then356
  %217 = load i8*, i8** %dst_name.addr, align 8, !dbg !5086, !tbaa !2668
  %call360 = call i32 @lstat(i8* %217, %struct.stat* %tmp_buf) #9, !dbg !5089
  %cmp361 = icmp eq i32 %call360, 0, !dbg !5090
  br i1 %cmp361, label %if.then362, label %if.else363, !dbg !5091

if.then362:                                       ; preds = %if.else359
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !5092, !tbaa !2668
  br label %if.end364, !dbg !5093

if.else363:                                       ; preds = %if.else359
  store i8 0, i8* %lstat_ok, align 1, !dbg !5094, !tbaa !2762
  br label %if.end364

if.end364:                                        ; preds = %if.else363, %if.then362
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.then358
  %218 = load i8, i8* %lstat_ok, align 1, !dbg !5095, !tbaa !2762
  %tobool366 = trunc i8 %218 to i1, !dbg !5095
  br i1 %tobool366, label %land.lhs.true367, label %if.end378, !dbg !5097

land.lhs.true367:                                 ; preds = %if.end365
  %219 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5098, !tbaa !2668
  %st_mode368 = getelementptr inbounds %struct.stat, %struct.stat* %219, i32 0, i32 3, !dbg !5098, !ctir !421
  %220 = load i32, i32* %st_mode368, align 8, !dbg !5098, !tbaa !2934, !ctir !137
  %and369 = and i32 %220, 61440, !dbg !5098
  %cmp370 = icmp eq i32 %and369, 40960, !dbg !5098
  br i1 %cmp370, label %land.lhs.true371, label %if.end378, !dbg !5099

land.lhs.true371:                                 ; preds = %land.lhs.true367
  %221 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5100, !tbaa !2668
  %dest_info372 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %221, i32 0, i32 37, !dbg !5101, !ctir !363
  %222 = load %struct.hash_table*, %struct.hash_table** %dest_info372, align 8, !dbg !5101, !tbaa !3286, !ctir !172
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !5102, !tbaa !2668
  %224 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5103, !tbaa !2668
  %call373 = call zeroext i1 @seen_file(%struct.hash_table* %222, i8* %223, %struct.stat* %224), !dbg !5104
  br i1 %call373, label %if.then374, label %if.end378, !dbg !5105

if.then374:                                       ; preds = %land.lhs.true371
  %call375 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.116, i64 0, i64 0)) #9, !dbg !5106
  %225 = load i8*, i8** %src_name.addr, align 8, !dbg !5108, !tbaa !2668
  %call376 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %225), !dbg !5108
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !5109, !tbaa !2668
  %call377 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %226), !dbg !5109
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call375, i8* %call376, i8* %call377), !dbg !5110
  store i1 false, i1* %retval, align 1, !dbg !5111
  br label %return, !dbg !5111

if.end378:                                        ; preds = %land.lhs.true371, %land.lhs.true367, %if.end365
  br label %if.end379, !dbg !5112

if.end379:                                        ; preds = %if.end378, %land.lhs.true353, %land.lhs.true350, %land.lhs.true347, %if.end345
  %227 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5113, !tbaa !2668
  %verbose380 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %227, i32 0, i32 31, !dbg !5115, !ctir !363
  %228 = load i8, i8* %verbose380, align 2, !dbg !5115, !tbaa !2832
  %tobool381 = trunc i8 %228 to i1, !dbg !5115, !ctir !139
  br i1 %tobool381, label %land.lhs.true382, label %if.end389, !dbg !5116

land.lhs.true382:                                 ; preds = %if.end379
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5117, !tbaa !2668
  %move_mode383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 9, !dbg !5118, !ctir !363
  %230 = load i8, i8* %move_mode383, align 8, !dbg !5118, !tbaa !3187
  %tobool384 = trunc i8 %230 to i1, !dbg !5118, !ctir !139
  br i1 %tobool384, label %if.end389, label %land.lhs.true385, !dbg !5119

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %231 = load i32, i32* %src_mode, align 4, !dbg !5120, !tbaa !2655
  %and386 = and i32 %231, 61440, !dbg !5120
  %cmp387 = icmp eq i32 %and386, 16384, !dbg !5120
  br i1 %cmp387, label %if.end389, label %if.then388, !dbg !5121

if.then388:                                       ; preds = %land.lhs.true385
  %232 = load i8*, i8** %src_name.addr, align 8, !dbg !5122, !tbaa !2668
  %233 = load i8*, i8** %dst_name.addr, align 8, !dbg !5123, !tbaa !2668
  %234 = load i8*, i8** %dst_backup, align 8, !dbg !5124, !tbaa !2668
  call void @emit_verbose(i8* %232, i8* %233, i8* %234), !dbg !5125
  br label %if.end389, !dbg !5125

if.end389:                                        ; preds = %if.then388, %land.lhs.true385, %land.lhs.true382, %if.end379
  %235 = load i32, i32* %rename_errno, align 4, !dbg !5126, !tbaa !2655
  %cmp390 = icmp eq i32 %235, 0, !dbg !5128
  br i1 %cmp390, label %if.then391, label %if.else392, !dbg !5129

if.then391:                                       ; preds = %if.end389
  store i8* null, i8** %earlier_file, align 8, !dbg !5130, !tbaa !2668
  br label %if.end443, !dbg !5131

if.else392:                                       ; preds = %if.end389
  %236 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5132, !tbaa !2668
  %recursive393 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %236, i32 0, i32 27, !dbg !5134, !ctir !363
  %237 = load i8, i8* %recursive393, align 2, !dbg !5134, !tbaa !3234
  %tobool394 = trunc i8 %237 to i1, !dbg !5134, !ctir !139
  br i1 %tobool394, label %land.lhs.true395, label %if.else409, !dbg !5135

land.lhs.true395:                                 ; preds = %if.else392
  %238 = load i32, i32* %src_mode, align 4, !dbg !5136, !tbaa !2655
  %and396 = and i32 %238, 61440, !dbg !5136
  %cmp397 = icmp eq i32 %and396, 16384, !dbg !5136
  br i1 %cmp397, label %if.then398, label %if.else409, !dbg !5137

if.then398:                                       ; preds = %land.lhs.true395
  %239 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5138, !tbaa !2762
  %tobool399 = trunc i8 %239 to i1, !dbg !5138
  br i1 %tobool399, label %if.then400, label %if.else404, !dbg !5141

if.then400:                                       ; preds = %if.then398
  %240 = load i8*, i8** %dst_name.addr, align 8, !dbg !5142, !tbaa !2668
  %st_ino401 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5143, !ctir !421
  %241 = load i64, i64* %st_ino401, align 8, !dbg !5143, !tbaa !4789, !ctir !282
  %st_dev402 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5144, !ctir !421
  %242 = load i64, i64* %st_dev402, align 8, !dbg !5144, !tbaa !4768, !ctir !280
  %call403 = call i8* @remember_copied(i8* %240, i64 %241, i64 %242), !dbg !5145
  store i8* %call403, i8** %earlier_file, align 8, !dbg !5146, !tbaa !2668
  br label %if.end408, !dbg !5147

if.else404:                                       ; preds = %if.then398
  %st_ino405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5148, !ctir !421
  %243 = load i64, i64* %st_ino405, align 8, !dbg !5148, !tbaa !4789, !ctir !282
  %st_dev406 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5149, !ctir !421
  %244 = load i64, i64* %st_dev406, align 8, !dbg !5149, !tbaa !4768, !ctir !280
  %call407 = call i8* @src_to_dest_lookup(i64 %243, i64 %244), !dbg !5150
  store i8* %call407, i8** %earlier_file, align 8, !dbg !5151, !tbaa !2668
  br label %if.end408

if.end408:                                        ; preds = %if.else404, %if.then400
  br label %if.end442, !dbg !5152

if.else409:                                       ; preds = %land.lhs.true395, %if.else392
  %245 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5153, !tbaa !2668
  %move_mode410 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %245, i32 0, i32 9, !dbg !5155, !ctir !363
  %246 = load i8, i8* %move_mode410, align 8, !dbg !5155, !tbaa !3187
  %tobool411 = trunc i8 %246 to i1, !dbg !5155, !ctir !139
  br i1 %tobool411, label %land.lhs.true412, label %if.else419, !dbg !5156

land.lhs.true412:                                 ; preds = %if.else409
  %st_nlink413 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5157, !ctir !421
  %247 = load i64, i64* %st_nlink413, align 8, !dbg !5157, !tbaa !5026, !ctir !284
  %cmp414 = icmp eq i64 %247, 1, !dbg !5158
  br i1 %cmp414, label %if.then415, label %if.else419, !dbg !5159

if.then415:                                       ; preds = %land.lhs.true412
  %st_ino416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5160, !ctir !421
  %248 = load i64, i64* %st_ino416, align 8, !dbg !5160, !tbaa !4789, !ctir !282
  %st_dev417 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5162, !ctir !421
  %249 = load i64, i64* %st_dev417, align 8, !dbg !5162, !tbaa !4768, !ctir !280
  %call418 = call i8* @src_to_dest_lookup(i64 %248, i64 %249), !dbg !5163
  store i8* %call418, i8** %earlier_file, align 8, !dbg !5164, !tbaa !2668
  br label %if.end441, !dbg !5165

if.else419:                                       ; preds = %land.lhs.true412, %if.else409
  %250 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5166, !tbaa !2668
  %preserve_links420 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %250, i32 0, i32 19, !dbg !5168, !ctir !363
  %251 = load i8, i8* %preserve_links420, align 2, !dbg !5168, !tbaa !3203
  %tobool421 = trunc i8 %251 to i1, !dbg !5168, !ctir !139
  br i1 %tobool421, label %land.lhs.true422, label %if.end440, !dbg !5169

land.lhs.true422:                                 ; preds = %if.else419
  %252 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5170, !tbaa !2668
  %hard_link423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %252, i32 0, i32 8, !dbg !5171, !ctir !363
  %253 = load i8, i8* %hard_link423, align 1, !dbg !5171, !tbaa !3179
  %tobool424 = trunc i8 %253 to i1, !dbg !5171, !ctir !139
  br i1 %tobool424, label %if.end440, label %land.lhs.true425, !dbg !5172

land.lhs.true425:                                 ; preds = %land.lhs.true422
  %st_nlink426 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5173, !ctir !421
  %254 = load i64, i64* %st_nlink426, align 8, !dbg !5173, !tbaa !5026, !ctir !284
  %cmp427 = icmp ult i64 1, %254, !dbg !5174
  br i1 %cmp427, label %if.then436, label %lor.lhs.false428, !dbg !5175

lor.lhs.false428:                                 ; preds = %land.lhs.true425
  %255 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5176, !tbaa !2762
  %tobool429 = trunc i8 %255 to i1, !dbg !5176
  br i1 %tobool429, label %land.lhs.true430, label %lor.lhs.false433, !dbg !5177

land.lhs.true430:                                 ; preds = %lor.lhs.false428
  %256 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5178, !tbaa !2668
  %dereference431 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %256, i32 0, i32 1, !dbg !5179, !ctir !363
  %257 = load i32, i32* %dereference431, align 4, !dbg !5179, !tbaa !3167, !ctir !73
  %cmp432 = icmp eq i32 %257, 3, !dbg !5180
  br i1 %cmp432, label %if.then436, label %lor.lhs.false433, !dbg !5181

lor.lhs.false433:                                 ; preds = %land.lhs.true430, %lor.lhs.false428
  %258 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5182, !tbaa !2668
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %258, i32 0, i32 1, !dbg !5183, !ctir !363
  %259 = load i32, i32* %dereference434, align 4, !dbg !5183, !tbaa !3167, !ctir !73
  %cmp435 = icmp eq i32 %259, 4, !dbg !5184
  br i1 %cmp435, label %if.then436, label %if.end440, !dbg !5185

if.then436:                                       ; preds = %lor.lhs.false433, %land.lhs.true430, %land.lhs.true425
  %260 = load i8*, i8** %dst_name.addr, align 8, !dbg !5186, !tbaa !2668
  %st_ino437 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5188, !ctir !421
  %261 = load i64, i64* %st_ino437, align 8, !dbg !5188, !tbaa !4789, !ctir !282
  %st_dev438 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5189, !ctir !421
  %262 = load i64, i64* %st_dev438, align 8, !dbg !5189, !tbaa !4768, !ctir !280
  %call439 = call i8* @remember_copied(i8* %260, i64 %261, i64 %262), !dbg !5190
  store i8* %call439, i8** %earlier_file, align 8, !dbg !5191, !tbaa !2668
  br label %if.end440, !dbg !5192

if.end440:                                        ; preds = %if.then436, %lor.lhs.false433, %land.lhs.true422, %if.else419
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then415
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end408
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.then391
  %263 = load i8*, i8** %earlier_file, align 8, !dbg !5193, !tbaa !2668
  %tobool444 = icmp ne i8* %263, null, !dbg !5193
  br i1 %tobool444, label %if.then445, label %if.end489, !dbg !5195

if.then445:                                       ; preds = %if.end443
  %264 = load i32, i32* %src_mode, align 4, !dbg !5196, !tbaa !2655
  %and446 = and i32 %264, 61440, !dbg !5196
  %cmp447 = icmp eq i32 %and446, 16384, !dbg !5196
  br i1 %cmp447, label %if.then448, label %if.else481, !dbg !5199

if.then448:                                       ; preds = %if.then445
  %265 = load i8*, i8** %src_name.addr, align 8, !dbg !5200, !tbaa !2668
  %266 = load i8*, i8** %earlier_file, align 8, !dbg !5203, !tbaa !2668
  %call449 = call zeroext i1 @same_name(i8* %265, i8* %266), !dbg !5204
  br i1 %call449, label %if.then450, label %if.else454, !dbg !5205

if.then450:                                       ; preds = %if.then448
  %call451 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.117, i64 0, i64 0)) #9, !dbg !5206
  %267 = load i8*, i8** @top_level_src_name, align 8, !dbg !5208, !tbaa !2668
  %call452 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %267), !dbg !5208
  %268 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5209, !tbaa !2668
  %call453 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %268), !dbg !5209
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call451, i8* %call452, i8* %call453), !dbg !5210
  %269 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5211, !tbaa !2668
  store i8 1, i8* %269, align 1, !dbg !5212, !tbaa !2762, !ctir !139
  br label %un_backup, !dbg !5213

if.else454:                                       ; preds = %if.then448
  %270 = load i8*, i8** %dst_name.addr, align 8, !dbg !5214, !tbaa !2668
  %271 = load i8*, i8** %earlier_file, align 8, !dbg !5216, !tbaa !2668
  %call455 = call zeroext i1 @same_name(i8* %270, i8* %271), !dbg !5217
  br i1 %call455, label %if.then456, label %if.else465, !dbg !5218

if.then456:                                       ; preds = %if.else454
  %call457 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.118, i64 0, i64 0)) #9, !dbg !5219
  %272 = load i8*, i8** @top_level_src_name, align 8, !dbg !5221, !tbaa !2668
  %call458 = call i8* @quotearg_style(i32 4, i8* %272), !dbg !5221
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call457, i8* %call458), !dbg !5222
  %273 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5223, !tbaa !2668
  %move_mode459 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %273, i32 0, i32 9, !dbg !5225, !ctir !363
  %274 = load i8, i8* %move_mode459, align 8, !dbg !5225, !tbaa !3187
  %tobool460 = trunc i8 %274 to i1, !dbg !5225, !ctir !139
  br i1 %tobool460, label %land.lhs.true461, label %if.end464, !dbg !5226

land.lhs.true461:                                 ; preds = %if.then456
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5227, !tbaa !2668
  %tobool462 = icmp ne i8* %275, null, !dbg !5227
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !5228

if.then463:                                       ; preds = %land.lhs.true461
  %276 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5229, !tbaa !2668
  store i8 1, i8* %276, align 1, !dbg !5230, !tbaa !2762, !ctir !139
  br label %if.end464, !dbg !5231

if.end464:                                        ; preds = %if.then463, %land.lhs.true461, %if.then456
  store i1 true, i1* %retval, align 1, !dbg !5232
  br label %return, !dbg !5232

if.else465:                                       ; preds = %if.else454
  %277 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5233, !tbaa !2668
  %dereference466 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %277, i32 0, i32 1, !dbg !5235, !ctir !363
  %278 = load i32, i32* %dereference466, align 4, !dbg !5235, !tbaa !3167, !ctir !73
  %cmp467 = icmp eq i32 %278, 4, !dbg !5236
  br i1 %cmp467, label %if.then473, label %lor.lhs.false468, !dbg !5237

lor.lhs.false468:                                 ; preds = %if.else465
  %279 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5238, !tbaa !2762
  %tobool469 = trunc i8 %279 to i1, !dbg !5238
  br i1 %tobool469, label %land.lhs.true470, label %if.else474, !dbg !5239

land.lhs.true470:                                 ; preds = %lor.lhs.false468
  %280 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5240, !tbaa !2668
  %dereference471 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %280, i32 0, i32 1, !dbg !5241, !ctir !363
  %281 = load i32, i32* %dereference471, align 4, !dbg !5241, !tbaa !3167, !ctir !73
  %cmp472 = icmp eq i32 %281, 3, !dbg !5242
  br i1 %cmp472, label %if.then473, label %if.else474, !dbg !5243

if.then473:                                       ; preds = %land.lhs.true470, %if.else465
  br label %if.end478, !dbg !5244

if.else474:                                       ; preds = %land.lhs.true470, %lor.lhs.false468
  %call475 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.119, i64 0, i64 0)) #9, !dbg !5246
  %282 = load i8*, i8** %dst_name.addr, align 8, !dbg !5248, !tbaa !2668
  %call476 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %282), !dbg !5248
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !5249, !tbaa !2668
  %call477 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %283), !dbg !5249
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call475, i8* %call476, i8* %call477), !dbg !5250
  br label %un_backup, !dbg !5251

if.end478:                                        ; preds = %if.then473
  br label %if.end479

if.end479:                                        ; preds = %if.end478
  br label %if.end480

if.end480:                                        ; preds = %if.end479
  br label %if.end488, !dbg !5252

if.else481:                                       ; preds = %if.then445
  %284 = load i8*, i8** %earlier_file, align 8, !dbg !5253, !tbaa !2668
  %285 = load i8*, i8** %dst_name.addr, align 8, !dbg !5256, !tbaa !2668
  %286 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5257, !tbaa !2668
  %verbose482 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %286, i32 0, i32 31, !dbg !5258, !ctir !363
  %287 = load i8, i8* %verbose482, align 2, !dbg !5258, !tbaa !2832
  %tobool483 = trunc i8 %287 to i1, !dbg !5258, !ctir !139
  %288 = load i8, i8* %dereference65, align 1, !dbg !5259, !tbaa !2762
  %tobool484 = trunc i8 %288 to i1, !dbg !5259
  %call485 = call zeroext i1 @create_hard_link(i8* %284, i8* %285, i1 zeroext true, i1 zeroext %tobool483, i1 zeroext %tobool484), !dbg !5260
  br i1 %call485, label %if.end487, label %if.then486, !dbg !5261

if.then486:                                       ; preds = %if.else481
  br label %un_backup, !dbg !5262

if.end487:                                        ; preds = %if.else481
  store i1 true, i1* %retval, align 1, !dbg !5263
  br label %return, !dbg !5263

if.end488:                                        ; preds = %if.end480
  br label %if.end489, !dbg !5264

if.end489:                                        ; preds = %if.end488, %if.end443
  %289 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5265, !tbaa !2668
  %move_mode490 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %289, i32 0, i32 9, !dbg !5267, !ctir !363
  %290 = load i8, i8* %move_mode490, align 8, !dbg !5267, !tbaa !3187
  %tobool491 = trunc i8 %290 to i1, !dbg !5267, !ctir !139
  br i1 %tobool491, label %if.then492, label %if.end569, !dbg !5268

if.then492:                                       ; preds = %if.end489
  %291 = load i32, i32* %rename_errno, align 4, !dbg !5269, !tbaa !2655
  %cmp493 = icmp eq i32 %291, 17, !dbg !5272
  br i1 %cmp493, label %if.then494, label %if.end502, !dbg !5273

if.then494:                                       ; preds = %if.then492
  %292 = load i8*, i8** %src_name.addr, align 8, !dbg !5274, !tbaa !2668
  %293 = load i8*, i8** %dst_name.addr, align 8, !dbg !5275, !tbaa !2668
  %call495 = call i32 @rename(i8* %292, i8* %293) #9, !dbg !5276
  %cmp496 = icmp eq i32 %call495, 0, !dbg !5277
  br i1 %cmp496, label %cond.true497, label %cond.false498, !dbg !5276

cond.true497:                                     ; preds = %if.then494
  br label %cond.end500, !dbg !5276

cond.false498:                                    ; preds = %if.then494
  %call499 = call i32* @__errno_location() #16, !dbg !5278
  %294 = load i32, i32* %call499, align 4, !dbg !5278, !tbaa !2655, !ctir !5
  br label %cond.end500, !dbg !5276

cond.end500:                                      ; preds = %cond.false498, %cond.true497
  %cond501 = phi i32 [ 0, %cond.true497 ], [ %294, %cond.false498 ], !dbg !5276
  store i32 %cond501, i32* %rename_errno, align 4, !dbg !5279, !tbaa !2655
  br label %if.end502, !dbg !5280

if.end502:                                        ; preds = %cond.end500, %if.then492
  %295 = load i32, i32* %rename_errno, align 4, !dbg !5281, !tbaa !2655
  %cmp503 = icmp eq i32 %295, 0, !dbg !5283
  br i1 %cmp503, label %if.then504, label %if.end525, !dbg !5284

if.then504:                                       ; preds = %if.end502
  %296 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5285, !tbaa !2668
  %verbose505 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %296, i32 0, i32 31, !dbg !5288, !ctir !363
  %297 = load i8, i8* %verbose505, align 2, !dbg !5288, !tbaa !2832
  %tobool506 = trunc i8 %297 to i1, !dbg !5288, !ctir !139
  br i1 %tobool506, label %if.then507, label %if.end510, !dbg !5289

if.then507:                                       ; preds = %if.then504
  %call508 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.120, i64 0, i64 0)) #9, !dbg !5290
  %call509 = call i32 (i8*, ...) @printf(i8* %call508), !dbg !5292
  %298 = load i8*, i8** %src_name.addr, align 8, !dbg !5293, !tbaa !2668
  %299 = load i8*, i8** %dst_name.addr, align 8, !dbg !5294, !tbaa !2668
  %300 = load i8*, i8** %dst_backup, align 8, !dbg !5295, !tbaa !2668
  call void @emit_verbose(i8* %298, i8* %299, i8* %300), !dbg !5296
  br label %if.end510, !dbg !5297

if.end510:                                        ; preds = %if.then507, %if.then504
  %301 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5298, !tbaa !2668
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %301, i32 0, i32 18, !dbg !5300, !ctir !363
  %302 = load i8, i8* %set_security_context, align 1, !dbg !5300, !tbaa !2886
  %tobool511 = trunc i8 %302 to i1, !dbg !5300, !ctir !139
  br i1 %tobool511, label %if.then512, label %if.end514, !dbg !5301

if.then512:                                       ; preds = %if.end510
  %303 = load i8*, i8** %dst_name.addr, align 8, !dbg !5302, !tbaa !2668
  %304 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5304, !tbaa !2668
  %call513 = call zeroext i1 @set_file_security_ctx(i8* %303, i1 zeroext false, i1 zeroext true, %struct.cp_options* %304), !dbg !5305
  br label %if.end514, !dbg !5306

if.end514:                                        ; preds = %if.then512, %if.end510
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5307, !tbaa !2668
  %tobool515 = icmp ne i8* %305, null, !dbg !5307
  br i1 %tobool515, label %if.then516, label %if.end517, !dbg !5309

if.then516:                                       ; preds = %if.end514
  %306 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5310, !tbaa !2668
  store i8 1, i8* %306, align 1, !dbg !5311, !tbaa !2762, !ctir !139
  br label %if.end517, !dbg !5312

if.end517:                                        ; preds = %if.then516, %if.end514
  %307 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5313, !tbaa !2762
  %tobool518 = trunc i8 %307 to i1, !dbg !5313
  br i1 %tobool518, label %land.lhs.true519, label %if.end524, !dbg !5315

land.lhs.true519:                                 ; preds = %if.end517
  %308 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5316, !tbaa !2668
  %last_file520 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %308, i32 0, i32 34, !dbg !5317, !ctir !363
  %309 = load i8, i8* %last_file520, align 1, !dbg !5317, !tbaa !4573
  %tobool521 = trunc i8 %309 to i1, !dbg !5317, !ctir !139
  br i1 %tobool521, label %if.end524, label %if.then522, !dbg !5318

if.then522:                                       ; preds = %land.lhs.true519
  %310 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5319, !tbaa !2668
  %dest_info523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %310, i32 0, i32 37, !dbg !5321, !ctir !363
  %311 = load %struct.hash_table*, %struct.hash_table** %dest_info523, align 8, !dbg !5321, !tbaa !3286, !ctir !172
  %312 = load i8*, i8** %dst_name.addr, align 8, !dbg !5322, !tbaa !2668
  call void @record_file(%struct.hash_table* %311, i8* %312, %struct.stat* %src_sb), !dbg !5323
  br label %if.end524, !dbg !5324

if.end524:                                        ; preds = %if.then522, %land.lhs.true519, %if.end517
  store i1 true, i1* %retval, align 1, !dbg !5325
  br label %return, !dbg !5325

if.end525:                                        ; preds = %if.end502
  %313 = load i32, i32* %rename_errno, align 4, !dbg !5326, !tbaa !2655
  %cmp526 = icmp eq i32 %313, 22, !dbg !5328
  br i1 %cmp526, label %if.then527, label %if.end531, !dbg !5329

if.then527:                                       ; preds = %if.end525
  %call528 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.121, i64 0, i64 0)) #9, !dbg !5330
  %314 = load i8*, i8** @top_level_src_name, align 8, !dbg !5332, !tbaa !2668
  %call529 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %314), !dbg !5332
  %315 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5333, !tbaa !2668
  %call530 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %315), !dbg !5333
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call528, i8* %call529, i8* %call530), !dbg !5334
  %316 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5335, !tbaa !2668
  store i8 1, i8* %316, align 1, !dbg !5336, !tbaa !2762, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !5337
  br label %return, !dbg !5337

if.end531:                                        ; preds = %if.end525
  %317 = load i32, i32* %rename_errno, align 4, !dbg !5338, !tbaa !2655
  %cmp532 = icmp ne i32 %317, 18, !dbg !5340
  br i1 %cmp532, label %if.then533, label %if.end539, !dbg !5341

if.then533:                                       ; preds = %if.end531
  %318 = load i32, i32* %rename_errno, align 4, !dbg !5342, !tbaa !2655
  %call534 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.122, i64 0, i64 0)) #9, !dbg !5344
  %319 = load i8*, i8** %src_name.addr, align 8, !dbg !5345, !tbaa !2668
  %call535 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %319), !dbg !5345
  %320 = load i8*, i8** %dst_name.addr, align 8, !dbg !5346, !tbaa !2668
  %call536 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %320), !dbg !5346
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %318, i8* %call534, i8* %call535, i8* %call536), !dbg !5347
  %st_ino537 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5348, !ctir !421
  %321 = load i64, i64* %st_ino537, align 8, !dbg !5348, !tbaa !4789, !ctir !282
  %st_dev538 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5349, !ctir !421
  %322 = load i64, i64* %st_dev538, align 8, !dbg !5349, !tbaa !4768, !ctir !280
  call void @forget_created(i64 %321, i64 %322), !dbg !5350
  store i1 false, i1* %retval, align 1, !dbg !5351
  br label %return, !dbg !5351

if.end539:                                        ; preds = %if.end531
  %323 = load i32, i32* %src_mode, align 4, !dbg !5352, !tbaa !2655
  %and540 = and i32 %323, 61440, !dbg !5352
  %cmp541 = icmp eq i32 %and540, 16384, !dbg !5352
  br i1 %cmp541, label %cond.true542, label %cond.false544, !dbg !5352

cond.true542:                                     ; preds = %if.end539
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !5354, !tbaa !2668
  %call543 = call i32 @rmdir(i8* %324) #9, !dbg !5355
  br label %cond.end546, !dbg !5352

cond.false544:                                    ; preds = %if.end539
  %325 = load i8*, i8** %dst_name.addr, align 8, !dbg !5356, !tbaa !2668
  %call545 = call i32 @unlink(i8* %325) #9, !dbg !5357
  br label %cond.end546, !dbg !5352

cond.end546:                                      ; preds = %cond.false544, %cond.true542
  %cond547 = phi i32 [ %call543, %cond.true542 ], [ %call545, %cond.false544 ], !dbg !5352
  %cmp548 = icmp ne i32 %cond547, 0, !dbg !5358
  br i1 %cmp548, label %land.lhs.true549, label %if.end559, !dbg !5359

land.lhs.true549:                                 ; preds = %cond.end546
  %call550 = call i32* @__errno_location() #16, !dbg !5360
  %326 = load i32, i32* %call550, align 4, !dbg !5360, !tbaa !2655, !ctir !5
  %cmp551 = icmp ne i32 %326, 2, !dbg !5361
  br i1 %cmp551, label %if.then552, label %if.end559, !dbg !5362

if.then552:                                       ; preds = %land.lhs.true549
  %call553 = call i32* @__errno_location() #16, !dbg !5363
  %327 = load i32, i32* %call553, align 4, !dbg !5363, !tbaa !2655, !ctir !5
  %call554 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.123, i64 0, i64 0)) #9, !dbg !5365
  %328 = load i8*, i8** %src_name.addr, align 8, !dbg !5366, !tbaa !2668
  %call555 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %328), !dbg !5366
  %329 = load i8*, i8** %dst_name.addr, align 8, !dbg !5367, !tbaa !2668
  %call556 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %329), !dbg !5367
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %call554, i8* %call555, i8* %call556), !dbg !5368
  %st_ino557 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5369, !ctir !421
  %330 = load i64, i64* %st_ino557, align 8, !dbg !5369, !tbaa !4789, !ctir !282
  %st_dev558 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5370, !ctir !421
  %331 = load i64, i64* %st_dev558, align 8, !dbg !5370, !tbaa !4768, !ctir !280
  call void @forget_created(i64 %330, i64 %331), !dbg !5371
  store i1 false, i1* %retval, align 1, !dbg !5372
  br label %return, !dbg !5372

if.end559:                                        ; preds = %land.lhs.true549, %cond.end546
  %332 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5373, !tbaa !2668
  %verbose560 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %332, i32 0, i32 31, !dbg !5375, !ctir !363
  %333 = load i8, i8* %verbose560, align 2, !dbg !5375, !tbaa !2832
  %tobool561 = trunc i8 %333 to i1, !dbg !5375, !ctir !139
  br i1 %tobool561, label %land.lhs.true562, label %if.end568, !dbg !5376

land.lhs.true562:                                 ; preds = %if.end559
  %334 = load i32, i32* %src_mode, align 4, !dbg !5377, !tbaa !2655
  %and563 = and i32 %334, 61440, !dbg !5377
  %cmp564 = icmp eq i32 %and563, 16384, !dbg !5377
  br i1 %cmp564, label %if.end568, label %if.then565, !dbg !5378

if.then565:                                       ; preds = %land.lhs.true562
  %call566 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.124, i64 0, i64 0)) #9, !dbg !5379
  %call567 = call i32 (i8*, ...) @printf(i8* %call566), !dbg !5381
  %335 = load i8*, i8** %src_name.addr, align 8, !dbg !5382, !tbaa !2668
  %336 = load i8*, i8** %dst_name.addr, align 8, !dbg !5383, !tbaa !2668
  %337 = load i8*, i8** %dst_backup, align 8, !dbg !5384, !tbaa !2668
  call void @emit_verbose(i8* %335, i8* %336, i8* %337), !dbg !5385
  br label %if.end568, !dbg !5386

if.end568:                                        ; preds = %if.then565, %land.lhs.true562, %if.end559
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5387, !tbaa !2762
  br label %if.end569, !dbg !5388

if.end569:                                        ; preds = %if.end568, %if.end489
  %338 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5389, !tbaa !2668
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %338, i32 0, i32 28, !dbg !5390, !ctir !363
  %339 = load i8, i8* %set_mode, align 1, !dbg !5390, !tbaa !3249
  %tobool570 = trunc i8 %339 to i1, !dbg !5390, !ctir !139
  br i1 %tobool570, label %cond.true571, label %cond.false572, !dbg !5389

cond.true571:                                     ; preds = %if.end569
  %340 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5391, !tbaa !2668
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %340, i32 0, i32 4, !dbg !5392, !ctir !363
  %341 = load i32, i32* %mode, align 8, !dbg !5392, !tbaa !3253, !ctir !136
  br label %cond.end573, !dbg !5389

cond.false572:                                    ; preds = %if.end569
  %342 = load i32, i32* %src_mode, align 4, !dbg !5393, !tbaa !2655
  br label %cond.end573, !dbg !5389

cond.end573:                                      ; preds = %cond.false572, %cond.true571
  %cond574 = phi i32 [ %341, %cond.true571 ], [ %342, %cond.false572 ], !dbg !5389
  %and575 = and i32 %cond574, 4095, !dbg !5394
  store i32 %and575, i32* %dst_mode_bits, align 4, !dbg !5395, !tbaa !2655
  %343 = load i32, i32* %dst_mode_bits, align 4, !dbg !5396, !tbaa !2655
  %344 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5397, !tbaa !2668
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %344, i32 0, i32 14, !dbg !5398, !ctir !363
  %345 = load i8, i8* %preserve_ownership, align 1, !dbg !5398, !tbaa !3199
  %tobool576 = trunc i8 %345 to i1, !dbg !5398, !ctir !139
  br i1 %tobool576, label %cond.true577, label %cond.false578, !dbg !5397

cond.true577:                                     ; preds = %cond.end573
  br label %cond.end582, !dbg !5397

cond.false578:                                    ; preds = %cond.end573
  %346 = load i32, i32* %src_mode, align 4, !dbg !5399, !tbaa !2655
  %and579 = and i32 %346, 61440, !dbg !5399
  %cmp580 = icmp eq i32 %and579, 16384, !dbg !5399
  %347 = zext i1 %cmp580 to i64, !dbg !5399
  %cond581 = select i1 %cmp580, i32 18, i32 0, !dbg !5399
  br label %cond.end582, !dbg !5397

cond.end582:                                      ; preds = %cond.false578, %cond.true577
  %cond583 = phi i32 [ 63, %cond.true577 ], [ %cond581, %cond.false578 ], !dbg !5397
  %and584 = and i32 %343, %cond583, !dbg !5400
  store i32 %and584, i32* %omitted_permissions, align 4, !dbg !5401, !tbaa !2655
  store i8 1, i8* %delayed_ok, align 1, !dbg !5402, !tbaa !2762
  %348 = load i8*, i8** %src_name.addr, align 8, !dbg !5403, !tbaa !2668
  %349 = load i8*, i8** %dst_name.addr, align 8, !dbg !5405, !tbaa !2668
  %350 = load i32, i32* %src_mode, align 4, !dbg !5406, !tbaa !2655
  %351 = load i8, i8* %new_dst.addr, align 1, !dbg !5407, !tbaa !2762
  %tobool585 = trunc i8 %351 to i1, !dbg !5407
  %352 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5408, !tbaa !2668
  %call586 = call zeroext i1 @set_process_security_ctx(i8* %348, i8* %349, i32 %350, i1 zeroext %tobool585, %struct.cp_options* %352), !dbg !5409
  br i1 %call586, label %if.end588, label %if.then587, !dbg !5410

if.then587:                                       ; preds = %cond.end582
  store i1 false, i1* %retval, align 1, !dbg !5411
  br label %return, !dbg !5411

if.end588:                                        ; preds = %cond.end582
  %353 = load i32, i32* %src_mode, align 4, !dbg !5412, !tbaa !2655
  %and589 = and i32 %353, 61440, !dbg !5412
  %cmp590 = icmp eq i32 %and589, 16384, !dbg !5412
  br i1 %cmp590, label %if.then591, label %if.else682, !dbg !5414

if.then591:                                       ; preds = %if.end588
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !5415, metadata !DIExpression()), !dbg !5417
  %354 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5418, !tbaa !2668
  %call592 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %354) #14, !dbg !5420
  br i1 %call592, label %if.then593, label %if.end596, !dbg !5421

if.then593:                                       ; preds = %if.then591
  %call594 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.125, i64 0, i64 0)) #9, !dbg !5422
  %355 = load i8*, i8** %src_name.addr, align 8, !dbg !5424, !tbaa !2668
  %call595 = call i8* @quotearg_style(i32 4, i8* %355), !dbg !5424
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call594, i8* %call595), !dbg !5425
  br label %un_backup, !dbg !5426

if.end596:                                        ; preds = %if.then591
  %356 = alloca i8, i64 24, align 16, !dbg !5427
  %357 = bitcast i8* %356 to %struct.dir_list*, !dbg !5427
  store %struct.dir_list* %357, %struct.dir_list** %dir, align 8, !dbg !5428, !tbaa !2668
  %358 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5429, !tbaa !2668
  %359 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5430, !tbaa !2668
  %parent597 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %359, i32 0, i32 0, !dbg !5431, !ctir !443
  store %struct.dir_list* %358, %struct.dir_list** %parent597, align 8, !dbg !5432, !tbaa !5433, !ctir !442
  %st_ino598 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5435, !ctir !421
  %360 = load i64, i64* %st_ino598, align 8, !dbg !5435, !tbaa !4789, !ctir !282
  %361 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5436, !tbaa !2668
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %361, i32 0, i32 1, !dbg !5437, !ctir !443
  store i64 %360, i64* %ino, align 8, !dbg !5438, !tbaa !5439, !ctir !447
  %st_dev599 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5440, !ctir !421
  %362 = load i64, i64* %st_dev599, align 8, !dbg !5440, !tbaa !4768, !ctir !280
  %363 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5441, !tbaa !2668
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %363, i32 0, i32 2, !dbg !5442, !ctir !443
  store i64 %362, i64* %dev, align 8, !dbg !5443, !tbaa !5444, !ctir !449
  %364 = load i8, i8* %new_dst.addr, align 1, !dbg !5445, !tbaa !2762
  %tobool600 = trunc i8 %364 to i1, !dbg !5445
  br i1 %tobool600, label %if.then605, label %lor.lhs.false601, !dbg !5447

lor.lhs.false601:                                 ; preds = %if.end596
  %st_mode602 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5448, !ctir !421
  %365 = load i32, i32* %st_mode602, align 8, !dbg !5448, !tbaa !2934, !ctir !137
  %and603 = and i32 %365, 61440, !dbg !5448
  %cmp604 = icmp eq i32 %and603, 16384, !dbg !5448
  br i1 %cmp604, label %if.else653, label %if.then605, !dbg !5449

if.then605:                                       ; preds = %lor.lhs.false601, %if.end596
  %366 = load i8*, i8** %dst_name.addr, align 8, !dbg !5450, !tbaa !2668
  %367 = load i32, i32* %dst_mode_bits, align 4, !dbg !5453, !tbaa !2655
  %368 = load i32, i32* %omitted_permissions, align 4, !dbg !5454, !tbaa !2655
  %neg = xor i32 %368, -1, !dbg !5455
  %and606 = and i32 %367, %neg, !dbg !5456
  %call607 = call i32 @mkdir(i8* %366, i32 %and606) #9, !dbg !5457
  %cmp608 = icmp ne i32 %call607, 0, !dbg !5458
  br i1 %cmp608, label %if.then609, label %if.end613, !dbg !5459

if.then609:                                       ; preds = %if.then605
  %call610 = call i32* @__errno_location() #16, !dbg !5460
  %369 = load i32, i32* %call610, align 4, !dbg !5460, !tbaa !2655, !ctir !5
  %call611 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.126, i64 0, i64 0)) #9, !dbg !5462
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5463, !tbaa !2668
  %call612 = call i8* @quotearg_style(i32 4, i8* %370), !dbg !5463
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %369, i8* %call611, i8* %call612), !dbg !5464
  br label %un_backup, !dbg !5465

if.end613:                                        ; preds = %if.then605
  %371 = load i8*, i8** %dst_name.addr, align 8, !dbg !5466, !tbaa !2668
  %call614 = call i32 @lstat(i8* %371, %struct.stat* %dst_sb) #9, !dbg !5468
  %cmp615 = icmp ne i32 %call614, 0, !dbg !5469
  br i1 %cmp615, label %if.then616, label %if.else620, !dbg !5470

if.then616:                                       ; preds = %if.end613
  %call617 = call i32* @__errno_location() #16, !dbg !5471
  %372 = load i32, i32* %call617, align 4, !dbg !5471, !tbaa !2655, !ctir !5
  %call618 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !5473
  %373 = load i8*, i8** %dst_name.addr, align 8, !dbg !5474, !tbaa !2668
  %call619 = call i8* @quotearg_style(i32 4, i8* %373), !dbg !5474
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %372, i8* %call618, i8* %call619), !dbg !5475
  br label %un_backup, !dbg !5476

if.else620:                                       ; preds = %if.end613
  %st_mode621 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5477, !ctir !421
  %374 = load i32, i32* %st_mode621, align 8, !dbg !5477, !tbaa !2934, !ctir !137
  %and622 = and i32 %374, 448, !dbg !5479
  %cmp623 = icmp ne i32 %and622, 448, !dbg !5480
  br i1 %cmp623, label %if.then624, label %if.end633, !dbg !5481

if.then624:                                       ; preds = %if.else620
  %st_mode625 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5482, !ctir !421
  %375 = load i32, i32* %st_mode625, align 8, !dbg !5482, !tbaa !2934, !ctir !137
  store i32 %375, i32* %dst_mode, align 4, !dbg !5484, !tbaa !2655
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5485, !tbaa !2762
  %376 = load i8*, i8** %dst_name.addr, align 8, !dbg !5486, !tbaa !2668
  %377 = load i32, i32* %dst_mode, align 4, !dbg !5488, !tbaa !2655
  %or = or i32 %377, 448, !dbg !5489
  %call626 = call i32 @chmod(i8* %376, i32 %or) #9, !dbg !5490
  %cmp627 = icmp ne i32 %call626, 0, !dbg !5491
  br i1 %cmp627, label %if.then628, label %if.end632, !dbg !5492

if.then628:                                       ; preds = %if.then624
  %call629 = call i32* @__errno_location() #16, !dbg !5493
  %378 = load i32, i32* %call629, align 4, !dbg !5493, !tbaa !2655, !ctir !5
  %call630 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.127, i64 0, i64 0)) #9, !dbg !5495
  %379 = load i8*, i8** %dst_name.addr, align 8, !dbg !5496, !tbaa !2668
  %call631 = call i8* @quotearg_style(i32 4, i8* %379), !dbg !5496
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %378, i8* %call630, i8* %call631), !dbg !5497
  br label %un_backup, !dbg !5498

if.end632:                                        ; preds = %if.then624
  br label %if.end633, !dbg !5499

if.end633:                                        ; preds = %if.end632, %if.else620
  br label %if.end634

if.end634:                                        ; preds = %if.end633
  %380 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5500, !tbaa !2668
  %381 = load i8, i8* %380, align 1, !dbg !5502, !tbaa !2762
  %tobool635 = trunc i8 %381 to i1, !dbg !5502, !ctir !139
  br i1 %tobool635, label %if.end640, label %if.then636, !dbg !5503

if.then636:                                       ; preds = %if.end634
  %382 = load i8*, i8** %dst_name.addr, align 8, !dbg !5504, !tbaa !2668
  %st_ino637 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5506, !ctir !421
  %383 = load i64, i64* %st_ino637, align 8, !dbg !5506, !tbaa !4789, !ctir !282
  %st_dev638 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5507, !ctir !421
  %384 = load i64, i64* %st_dev638, align 8, !dbg !5507, !tbaa !4768, !ctir !280
  %call639 = call i8* @remember_copied(i8* %382, i64 %383, i64 %384), !dbg !5508
  %385 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5509, !tbaa !2668
  store i8 1, i8* %385, align 1, !dbg !5510, !tbaa !2762, !ctir !139
  br label %if.end640, !dbg !5511

if.end640:                                        ; preds = %if.then636, %if.end634
  %386 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5512, !tbaa !2668
  %verbose641 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %386, i32 0, i32 31, !dbg !5514, !ctir !363
  %387 = load i8, i8* %verbose641, align 2, !dbg !5514, !tbaa !2832
  %tobool642 = trunc i8 %387 to i1, !dbg !5514, !ctir !139
  br i1 %tobool642, label %if.then643, label %if.end652, !dbg !5515

if.then643:                                       ; preds = %if.end640
  %388 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5516, !tbaa !2668
  %move_mode644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %388, i32 0, i32 9, !dbg !5519, !ctir !363
  %389 = load i8, i8* %move_mode644, align 8, !dbg !5519, !tbaa !3187
  %tobool645 = trunc i8 %389 to i1, !dbg !5519, !ctir !139
  br i1 %tobool645, label %if.then646, label %if.else650, !dbg !5520

if.then646:                                       ; preds = %if.then643
  %call647 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.128, i64 0, i64 0)) #9, !dbg !5521
  %390 = load i8*, i8** %dst_name.addr, align 8, !dbg !5522, !tbaa !2668
  %call648 = call i8* @quotearg_style(i32 4, i8* %390), !dbg !5522
  %call649 = call i32 (i8*, ...) @printf(i8* %call647, i8* %call648), !dbg !5523
  br label %if.end651, !dbg !5523

if.else650:                                       ; preds = %if.then643
  %391 = load i8*, i8** %src_name.addr, align 8, !dbg !5524, !tbaa !2668
  %392 = load i8*, i8** %dst_name.addr, align 8, !dbg !5525, !tbaa !2668
  call void @emit_verbose(i8* %391, i8* %392, i8* null), !dbg !5526
  br label %if.end651

if.end651:                                        ; preds = %if.else650, %if.then646
  br label %if.end652, !dbg !5527

if.end652:                                        ; preds = %if.end651, %if.end640
  br label %if.end668, !dbg !5528

if.else653:                                       ; preds = %lor.lhs.false601
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5529, !tbaa !2655
  %393 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5531, !tbaa !2668
  %set_security_context654 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %393, i32 0, i32 18, !dbg !5533, !ctir !363
  %394 = load i8, i8* %set_security_context654, align 1, !dbg !5533, !tbaa !2886
  %tobool655 = trunc i8 %394 to i1, !dbg !5533, !ctir !139
  br i1 %tobool655, label %if.then658, label %lor.lhs.false656, !dbg !5534

lor.lhs.false656:                                 ; preds = %if.else653
  %395 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5535, !tbaa !2668
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %395, i32 0, i32 22, !dbg !5536, !ctir !363
  %396 = load i8, i8* %preserve_security_context, align 1, !dbg !5536, !tbaa !2870
  %tobool657 = trunc i8 %396 to i1, !dbg !5536, !ctir !139
  br i1 %tobool657, label %if.then658, label %if.end667, !dbg !5537

if.then658:                                       ; preds = %lor.lhs.false656, %if.else653
  %397 = load i8*, i8** %dst_name.addr, align 8, !dbg !5538, !tbaa !2668
  %398 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5540, !tbaa !2668
  %preserve_security_context659 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %398, i32 0, i32 22, !dbg !5541, !ctir !363
  %399 = load i8, i8* %preserve_security_context659, align 1, !dbg !5541, !tbaa !2870
  %tobool660 = trunc i8 %399 to i1, !dbg !5541, !ctir !139
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5542, !tbaa !2668
  %call661 = call zeroext i1 @set_file_security_ctx(i8* %397, i1 zeroext %tobool660, i1 zeroext false, %struct.cp_options* %400), !dbg !5543
  br i1 %call661, label %if.end666, label %if.then662, !dbg !5544

if.then662:                                       ; preds = %if.then658
  %401 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5545, !tbaa !2668
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %401, i32 0, i32 23, !dbg !5548, !ctir !363
  %402 = load i8, i8* %require_preserve_context, align 2, !dbg !5548, !tbaa !3269
  %tobool663 = trunc i8 %402 to i1, !dbg !5548, !ctir !139
  br i1 %tobool663, label %if.then664, label %if.end665, !dbg !5549

if.then664:                                       ; preds = %if.then662
  br label %un_backup, !dbg !5550

if.end665:                                        ; preds = %if.then662
  br label %if.end666, !dbg !5551

if.end666:                                        ; preds = %if.end665, %if.then658
  br label %if.end667, !dbg !5552

if.end667:                                        ; preds = %if.end666, %lor.lhs.false656
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.end652
  %403 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5553, !tbaa !2668
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %403, i32 0, i32 13, !dbg !5555, !ctir !363
  %404 = load i8, i8* %one_file_system, align 4, !dbg !5555, !tbaa !3195
  %tobool669 = trunc i8 %404 to i1, !dbg !5555, !ctir !139
  br i1 %tobool669, label %land.lhs.true670, label %if.else677, !dbg !5556

land.lhs.true670:                                 ; preds = %if.end668
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5557, !tbaa !2668
  %tobool671 = icmp ne %struct.stat* %405, null, !dbg !5557
  br i1 %tobool671, label %land.lhs.true672, label %if.else677, !dbg !5558

land.lhs.true672:                                 ; preds = %land.lhs.true670
  %406 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5559, !tbaa !2668
  %st_dev673 = getelementptr inbounds %struct.stat, %struct.stat* %406, i32 0, i32 0, !dbg !5560, !ctir !420
  %407 = load i64, i64* %st_dev673, align 8, !dbg !5560, !tbaa !4768, !ctir !280
  %st_dev674 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5561, !ctir !421
  %408 = load i64, i64* %st_dev674, align 8, !dbg !5561, !tbaa !4768, !ctir !280
  %cmp675 = icmp ne i64 %407, %408, !dbg !5562
  br i1 %cmp675, label %if.then676, label %if.else677, !dbg !5563

if.then676:                                       ; preds = %land.lhs.true672
  br label %if.end681, !dbg !5564

if.else677:                                       ; preds = %land.lhs.true672, %land.lhs.true670, %if.end668
  %409 = load i8*, i8** %src_name.addr, align 8, !dbg !5566, !tbaa !2668
  %410 = load i8*, i8** %dst_name.addr, align 8, !dbg !5568, !tbaa !2668
  %411 = load i8, i8* %new_dst.addr, align 1, !dbg !5569, !tbaa !2762
  %tobool678 = trunc i8 %411 to i1, !dbg !5569
  %412 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5570, !tbaa !2668
  %413 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5571, !tbaa !2668
  %414 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5572, !tbaa !2668
  %415 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5573, !tbaa !2668
  %call679 = call zeroext i1 @copy_dir(i8* %409, i8* %410, i1 zeroext %tobool678, %struct.stat* %src_sb, %struct.dir_list* %412, %struct.cp_options* %413, i8* %414, i8* %415), !dbg !5574
  %frombool680 = zext i1 %call679 to i8, !dbg !5575
  store i8 %frombool680, i8* %delayed_ok, align 1, !dbg !5575, !tbaa !2762
  br label %if.end681

if.end681:                                        ; preds = %if.else677, %if.then676
  br label %if.end894, !dbg !5576

if.else682:                                       ; preds = %if.end588
  %416 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5577, !tbaa !2668
  %symbolic_link683 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %416, i32 0, i32 29, !dbg !5579, !ctir !363
  %417 = load i8, i8* %symbolic_link683, align 4, !dbg !5579, !tbaa !3242
  %tobool684 = trunc i8 %417 to i1, !dbg !5579, !ctir !139
  br i1 %tobool684, label %if.then685, label %if.else730, !dbg !5580

if.then685:                                       ; preds = %if.else682
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5581, !tbaa !2762
  %418 = load i8*, i8** %src_name.addr, align 8, !dbg !5583, !tbaa !2668
  %419 = load i8, i8* %418, align 1, !dbg !5585, !tbaa !3315, !ctir !178
  %conv = sext i8 %419 to i32, !dbg !5585
  %cmp686 = icmp ne i32 %conv, 47, !dbg !5586
  br i1 %cmp686, label %if.then688, label %if.end719, !dbg !5587

if.then688:                                       ; preds = %if.then685
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5588, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5591, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5593, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5595, metadata !DIExpression()), !dbg !5596
  %420 = load i8*, i8** %dst_name.addr, align 8, !dbg !5597, !tbaa !2668
  %call689 = call i8* @dir_name(i8* %420), !dbg !5598
  store i8* %call689, i8** %dst_parent, align 8, !dbg !5599, !tbaa !2668
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !5600, !tbaa !2668
  %call690 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), i8* %421) #14, !dbg !5600
  %cmp691 = icmp eq i32 %call690, 0, !dbg !5600
  br i1 %cmp691, label %lor.end712, label %lor.lhs.false693, !dbg !5601

lor.lhs.false693:                                 ; preds = %if.then688
  %call694 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), %struct.stat* %dot_sb) #9, !dbg !5602
  %cmp695 = icmp ne i32 %call694, 0, !dbg !5603
  br i1 %cmp695, label %lor.end712, label %lor.lhs.false697, !dbg !5604

lor.lhs.false697:                                 ; preds = %lor.lhs.false693
  %422 = load i8*, i8** %dst_parent, align 8, !dbg !5605, !tbaa !2668
  %call698 = call i32 @stat(i8* %422, %struct.stat* %dst_parent_sb) #9, !dbg !5606
  %cmp699 = icmp ne i32 %call698, 0, !dbg !5607
  br i1 %cmp699, label %lor.end712, label %lor.rhs701, !dbg !5608

lor.rhs701:                                       ; preds = %lor.lhs.false697
  %st_ino702 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !5609, !ctir !421
  %423 = load i64, i64* %st_ino702, align 8, !dbg !5609, !tbaa !4789, !ctir !282
  %st_ino703 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !5609, !ctir !421
  %424 = load i64, i64* %st_ino703, align 8, !dbg !5609, !tbaa !4789, !ctir !282
  %cmp704 = icmp eq i64 %423, %424, !dbg !5609
  br i1 %cmp704, label %land.rhs706, label %land.end711, !dbg !5609

land.rhs706:                                      ; preds = %lor.rhs701
  %st_dev707 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !5609, !ctir !421
  %425 = load i64, i64* %st_dev707, align 8, !dbg !5609, !tbaa !4768, !ctir !280
  %st_dev708 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !5609, !ctir !421
  %426 = load i64, i64* %st_dev708, align 8, !dbg !5609, !tbaa !4768, !ctir !280
  %cmp709 = icmp eq i64 %425, %426, !dbg !5609
  br label %land.end711

land.end711:                                      ; preds = %land.rhs706, %lor.rhs701
  %427 = phi i1 [ false, %lor.rhs701 ], [ %cmp709, %land.rhs706 ], !dbg !5610
  br label %lor.end712, !dbg !5608

lor.end712:                                       ; preds = %land.end711, %lor.lhs.false697, %lor.lhs.false693, %if.then688
  %428 = phi i1 [ true, %lor.lhs.false697 ], [ true, %lor.lhs.false693 ], [ true, %if.then688 ], [ %427, %land.end711 ]
  %frombool713 = zext i1 %428 to i8, !dbg !5611
  store i8 %frombool713, i8* %in_current_dir, align 1, !dbg !5611, !tbaa !2762
  %429 = load i8*, i8** %dst_parent, align 8, !dbg !5612, !tbaa !2668
  call void @free(i8* %429) #9, !dbg !5613
  %430 = load i8, i8* %in_current_dir, align 1, !dbg !5614, !tbaa !2762
  %tobool714 = trunc i8 %430 to i1, !dbg !5614
  br i1 %tobool714, label %if.end718, label %if.then715, !dbg !5616

if.then715:                                       ; preds = %lor.end712
  %call716 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.130, i64 0, i64 0)) #9, !dbg !5617
  %431 = load i8*, i8** %dst_name.addr, align 8, !dbg !5619, !tbaa !2668
  %call717 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %431), !dbg !5619
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call716, i8* %call717), !dbg !5620
  br label %un_backup, !dbg !5621

if.end718:                                        ; preds = %lor.end712
  br label %if.end719, !dbg !5622

if.end719:                                        ; preds = %if.end718, %if.then685
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5623, metadata !DIExpression()), !dbg !5624
  %432 = load i8*, i8** %src_name.addr, align 8, !dbg !5625, !tbaa !2668
  %433 = load i8*, i8** %dst_name.addr, align 8, !dbg !5626, !tbaa !2668
  %434 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5627, !tbaa !2668
  %unlink_dest_after_failed_open720 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %434, i32 0, i32 7, !dbg !5628, !ctir !363
  %435 = load i8, i8* %unlink_dest_after_failed_open720, align 2, !dbg !5628, !tbaa !3175
  %tobool721 = trunc i8 %435 to i1, !dbg !5628, !ctir !139
  %call722 = call i32 @force_symlinkat(i8* %432, i32 -100, i8* %433, i1 zeroext %tobool721, i32 -1), !dbg !5629
  store i32 %call722, i32* %err, align 4, !dbg !5624, !tbaa !2655
  %436 = load i32, i32* %err, align 4, !dbg !5630, !tbaa !2655
  %cmp723 = icmp slt i32 0, %436, !dbg !5632
  br i1 %cmp723, label %if.then725, label %if.end729, !dbg !5633

if.then725:                                       ; preds = %if.end719
  %437 = load i32, i32* %err, align 4, !dbg !5634, !tbaa !2655
  %call726 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.131, i64 0, i64 0)) #9, !dbg !5636
  %438 = load i8*, i8** %dst_name.addr, align 8, !dbg !5637, !tbaa !2668
  %call727 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %438), !dbg !5637
  %439 = load i8*, i8** %src_name.addr, align 8, !dbg !5638, !tbaa !2668
  %call728 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %439), !dbg !5638
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %437, i8* %call726, i8* %call727, i8* %call728), !dbg !5639
  br label %un_backup, !dbg !5640

if.end729:                                        ; preds = %if.end719
  br label %if.end893, !dbg !5641

if.else730:                                       ; preds = %if.else682
  %440 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5642, !tbaa !2668
  %hard_link731 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %440, i32 0, i32 8, !dbg !5644, !ctir !363
  %441 = load i8, i8* %hard_link731, align 1, !dbg !5644, !tbaa !3179
  %tobool732 = trunc i8 %441 to i1, !dbg !5644, !ctir !139
  br i1 %tobool732, label %if.then734, label %if.else749, !dbg !5645

if.then734:                                       ; preds = %if.else730
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !5646, metadata !DIExpression()), !dbg !5648
  %442 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5649, !tbaa !2668
  %unlink_dest_after_failed_open735 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %442, i32 0, i32 7, !dbg !5650, !ctir !363
  %443 = load i8, i8* %unlink_dest_after_failed_open735, align 2, !dbg !5650, !tbaa !3175
  %tobool736 = trunc i8 %443 to i1, !dbg !5650, !ctir !139
  br i1 %tobool736, label %lor.end742, label %lor.rhs738, !dbg !5651

lor.rhs738:                                       ; preds = %if.then734
  %444 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5652, !tbaa !2668
  %interactive739 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %444, i32 0, i32 2, !dbg !5653, !ctir !363
  %445 = load i32, i32* %interactive739, align 8, !dbg !5653, !tbaa !3183, !ctir !80
  %cmp740 = icmp eq i32 %445, 3, !dbg !5654
  br label %lor.end742, !dbg !5651

lor.end742:                                       ; preds = %lor.rhs738, %if.then734
  %446 = phi i1 [ true, %if.then734 ], [ %cmp740, %lor.rhs738 ]
  %frombool743 = zext i1 %446 to i8, !dbg !5648
  store i8 %frombool743, i8* %replace, align 1, !dbg !5648, !tbaa !2762
  %447 = load i8*, i8** %src_name.addr, align 8, !dbg !5655, !tbaa !2668
  %448 = load i8*, i8** %dst_name.addr, align 8, !dbg !5657, !tbaa !2668
  %449 = load i8, i8* %replace, align 1, !dbg !5658, !tbaa !2762
  %tobool744 = trunc i8 %449 to i1, !dbg !5658
  %450 = load i8, i8* %dereference65, align 1, !dbg !5659, !tbaa !2762
  %tobool745 = trunc i8 %450 to i1, !dbg !5659
  %call746 = call zeroext i1 @create_hard_link(i8* %447, i8* %448, i1 zeroext %tobool744, i1 zeroext false, i1 zeroext %tobool745), !dbg !5660
  br i1 %call746, label %if.end748, label %if.then747, !dbg !5661

if.then747:                                       ; preds = %lor.end742
  br label %un_backup, !dbg !5662

if.end748:                                        ; preds = %lor.end742
  br label %if.end892, !dbg !5663

if.else749:                                       ; preds = %if.else730
  %451 = load i32, i32* %src_mode, align 4, !dbg !5664, !tbaa !2655
  %and750 = and i32 %451, 61440, !dbg !5664
  %cmp751 = icmp eq i32 %and750, 32768, !dbg !5664
  br i1 %cmp751, label %if.then761, label %lor.lhs.false753, !dbg !5666

lor.lhs.false753:                                 ; preds = %if.else749
  %452 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5667, !tbaa !2668
  %copy_as_regular754 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %452, i32 0, i32 5, !dbg !5668, !ctir !363
  %453 = load i8, i8* %copy_as_regular754, align 4, !dbg !5668, !tbaa !3159
  %tobool755 = trunc i8 %453 to i1, !dbg !5668, !ctir !139
  br i1 %tobool755, label %land.lhs.true757, label %if.else766, !dbg !5669

land.lhs.true757:                                 ; preds = %lor.lhs.false753
  %454 = load i32, i32* %src_mode, align 4, !dbg !5670, !tbaa !2655
  %and758 = and i32 %454, 61440, !dbg !5670
  %cmp759 = icmp eq i32 %and758, 40960, !dbg !5670
  br i1 %cmp759, label %if.else766, label %if.then761, !dbg !5671

if.then761:                                       ; preds = %land.lhs.true757, %if.else749
  store i8 1, i8* %copied_as_regular, align 1, !dbg !5672, !tbaa !2762
  %455 = load i8*, i8** %src_name.addr, align 8, !dbg !5674, !tbaa !2668
  %456 = load i8*, i8** %dst_name.addr, align 8, !dbg !5676, !tbaa !2668
  %457 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5677, !tbaa !2668
  %458 = load i32, i32* %dst_mode_bits, align 4, !dbg !5678, !tbaa !2655
  %and762 = and i32 %458, 511, !dbg !5679
  %459 = load i32, i32* %omitted_permissions, align 4, !dbg !5680, !tbaa !2655
  %call763 = call zeroext i1 @copy_reg(i8* %455, i8* %456, %struct.cp_options* %457, i32 %and762, i32 %459, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !5681
  br i1 %call763, label %if.end765, label %if.then764, !dbg !5682

if.then764:                                       ; preds = %if.then761
  br label %un_backup, !dbg !5683

if.end765:                                        ; preds = %if.then761
  br label %if.end891, !dbg !5684

if.else766:                                       ; preds = %land.lhs.true757, %lor.lhs.false753
  %460 = load i32, i32* %src_mode, align 4, !dbg !5685, !tbaa !2655
  %and767 = and i32 %460, 61440, !dbg !5685
  %cmp768 = icmp eq i32 %and767, 4096, !dbg !5685
  br i1 %cmp768, label %if.then770, label %if.else789, !dbg !5687

if.then770:                                       ; preds = %if.else766
  %461 = load i8*, i8** %dst_name.addr, align 8, !dbg !5688, !tbaa !2668
  %462 = load i32, i32* %src_mode, align 4, !dbg !5691, !tbaa !2655
  %463 = load i32, i32* %omitted_permissions, align 4, !dbg !5692, !tbaa !2655
  %neg771 = xor i32 %463, -1, !dbg !5693
  %and772 = and i32 %462, %neg771, !dbg !5694
  %call773 = call i32 @mknod(i8* %461, i32 %and772, i64 0) #9, !dbg !5695
  %cmp774 = icmp ne i32 %call773, 0, !dbg !5696
  br i1 %cmp774, label %if.then776, label %if.end788, !dbg !5697

if.then776:                                       ; preds = %if.then770
  %464 = load i8*, i8** %dst_name.addr, align 8, !dbg !5698, !tbaa !2668
  %465 = load i32, i32* %src_mode, align 4, !dbg !5700, !tbaa !2655
  %and777 = and i32 %465, -4097, !dbg !5701
  %466 = load i32, i32* %omitted_permissions, align 4, !dbg !5702, !tbaa !2655
  %neg778 = xor i32 %466, -1, !dbg !5703
  %and779 = and i32 %and777, %neg778, !dbg !5704
  %call780 = call i32 @mkfifo(i8* %464, i32 %and779) #9, !dbg !5705
  %cmp781 = icmp ne i32 %call780, 0, !dbg !5706
  br i1 %cmp781, label %if.then783, label %if.end787, !dbg !5707

if.then783:                                       ; preds = %if.then776
  %call784 = call i32* @__errno_location() #16, !dbg !5708
  %467 = load i32, i32* %call784, align 4, !dbg !5708, !tbaa !2655, !ctir !5
  %call785 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.132, i64 0, i64 0)) #9, !dbg !5710
  %468 = load i8*, i8** %dst_name.addr, align 8, !dbg !5711, !tbaa !2668
  %call786 = call i8* @quotearg_style(i32 4, i8* %468), !dbg !5711
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %467, i8* %call785, i8* %call786), !dbg !5712
  br label %un_backup, !dbg !5713

if.end787:                                        ; preds = %if.then776
  br label %if.end788, !dbg !5714

if.end788:                                        ; preds = %if.end787, %if.then770
  br label %if.end890, !dbg !5715

if.else789:                                       ; preds = %if.else766
  %469 = load i32, i32* %src_mode, align 4, !dbg !5716, !tbaa !2655
  %and790 = and i32 %469, 61440, !dbg !5716
  %cmp791 = icmp eq i32 %and790, 24576, !dbg !5716
  br i1 %cmp791, label %if.then801, label %lor.lhs.false793, !dbg !5718

lor.lhs.false793:                                 ; preds = %if.else789
  %470 = load i32, i32* %src_mode, align 4, !dbg !5719, !tbaa !2655
  %and794 = and i32 %470, 61440, !dbg !5719
  %cmp795 = icmp eq i32 %and794, 8192, !dbg !5719
  br i1 %cmp795, label %if.then801, label %lor.lhs.false797, !dbg !5720

lor.lhs.false797:                                 ; preds = %lor.lhs.false793
  %471 = load i32, i32* %src_mode, align 4, !dbg !5721, !tbaa !2655
  %and798 = and i32 %471, 61440, !dbg !5721
  %cmp799 = icmp eq i32 %and798, 49152, !dbg !5721
  br i1 %cmp799, label %if.then801, label %if.else812, !dbg !5722

if.then801:                                       ; preds = %lor.lhs.false797, %lor.lhs.false793, %if.else789
  %472 = load i8*, i8** %dst_name.addr, align 8, !dbg !5723, !tbaa !2668
  %473 = load i32, i32* %src_mode, align 4, !dbg !5726, !tbaa !2655
  %474 = load i32, i32* %omitted_permissions, align 4, !dbg !5727, !tbaa !2655
  %neg802 = xor i32 %474, -1, !dbg !5728
  %and803 = and i32 %473, %neg802, !dbg !5729
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !5730, !ctir !421
  %475 = load i64, i64* %st_rdev, align 8, !dbg !5730, !tbaa !5731, !ctir !280
  %call804 = call i32 @mknod(i8* %472, i32 %and803, i64 %475) #9, !dbg !5732
  %cmp805 = icmp ne i32 %call804, 0, !dbg !5733
  br i1 %cmp805, label %if.then807, label %if.end811, !dbg !5734

if.then807:                                       ; preds = %if.then801
  %call808 = call i32* @__errno_location() #16, !dbg !5735
  %476 = load i32, i32* %call808, align 4, !dbg !5735, !tbaa !2655, !ctir !5
  %call809 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.133, i64 0, i64 0)) #9, !dbg !5737
  %477 = load i8*, i8** %dst_name.addr, align 8, !dbg !5738, !tbaa !2668
  %call810 = call i8* @quotearg_style(i32 4, i8* %477), !dbg !5738
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %476, i8* %call809, i8* %call810), !dbg !5739
  br label %un_backup, !dbg !5740

if.end811:                                        ; preds = %if.then801
  br label %if.end889, !dbg !5741

if.else812:                                       ; preds = %lor.lhs.false797
  %478 = load i32, i32* %src_mode, align 4, !dbg !5742, !tbaa !2655
  %and813 = and i32 %478, 61440, !dbg !5742
  %cmp814 = icmp eq i32 %and813, 40960, !dbg !5742
  br i1 %cmp814, label %if.then816, label %if.else885, !dbg !5744

if.then816:                                       ; preds = %if.else812
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !5745, metadata !DIExpression()), !dbg !5747
  %479 = load i8*, i8** %src_name.addr, align 8, !dbg !5748, !tbaa !2668
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !5749, !ctir !421
  %480 = load i64, i64* %st_size, align 8, !dbg !5749, !tbaa !4037, !ctir !30
  %call817 = call i8* @areadlink_with_size(i8* %479, i64 %480), !dbg !5750
  store i8* %call817, i8** %src_link_val, align 8, !dbg !5747, !tbaa !2668
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5751, !tbaa !2762
  %481 = load i8*, i8** %src_link_val, align 8, !dbg !5752, !tbaa !2668
  %cmp818 = icmp eq i8* %481, null, !dbg !5754
  br i1 %cmp818, label %if.then820, label %if.end824, !dbg !5755

if.then820:                                       ; preds = %if.then816
  %call821 = call i32* @__errno_location() #16, !dbg !5756
  %482 = load i32, i32* %call821, align 4, !dbg !5756, !tbaa !2655, !ctir !5
  %call822 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.134, i64 0, i64 0)) #9, !dbg !5758
  %483 = load i8*, i8** %src_name.addr, align 8, !dbg !5759, !tbaa !2668
  %call823 = call i8* @quotearg_style(i32 4, i8* %483), !dbg !5759
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %482, i8* %call822, i8* %call823), !dbg !5760
  br label %un_backup, !dbg !5761

if.end824:                                        ; preds = %if.then816
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !5762, metadata !DIExpression()), !dbg !5763
  %484 = load i8*, i8** %src_link_val, align 8, !dbg !5764, !tbaa !2668
  %485 = load i8*, i8** %dst_name.addr, align 8, !dbg !5765, !tbaa !2668
  %486 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5766, !tbaa !2668
  %unlink_dest_after_failed_open825 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %486, i32 0, i32 7, !dbg !5767, !ctir !363
  %487 = load i8, i8* %unlink_dest_after_failed_open825, align 2, !dbg !5767, !tbaa !3175
  %tobool826 = trunc i8 %487 to i1, !dbg !5767, !ctir !139
  %call827 = call i32 @force_symlinkat(i8* %484, i32 -100, i8* %485, i1 zeroext %tobool826, i32 -1), !dbg !5768
  store i32 %call827, i32* %symlink_err, align 4, !dbg !5763, !tbaa !2655
  %488 = load i32, i32* %symlink_err, align 4, !dbg !5769, !tbaa !2655
  %cmp828 = icmp slt i32 0, %488, !dbg !5771
  br i1 %cmp828, label %land.lhs.true830, label %if.end857, !dbg !5772

land.lhs.true830:                                 ; preds = %if.end824
  %489 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5773, !tbaa !2668
  %update831 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %489, i32 0, i32 30, !dbg !5774, !ctir !363
  %490 = load i8, i8* %update831, align 1, !dbg !5774, !tbaa !3265
  %tobool832 = trunc i8 %490 to i1, !dbg !5774, !ctir !139
  br i1 %tobool832, label %land.lhs.true834, label %if.end857, !dbg !5775

land.lhs.true834:                                 ; preds = %land.lhs.true830
  %491 = load i8, i8* %new_dst.addr, align 1, !dbg !5776, !tbaa !2762
  %tobool835 = trunc i8 %491 to i1, !dbg !5776
  br i1 %tobool835, label %if.end857, label %land.lhs.true836, !dbg !5777

land.lhs.true836:                                 ; preds = %land.lhs.true834
  %st_mode837 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5778, !ctir !421
  %492 = load i32, i32* %st_mode837, align 8, !dbg !5778, !tbaa !2934, !ctir !137
  %and838 = and i32 %492, 61440, !dbg !5778
  %cmp839 = icmp eq i32 %and838, 40960, !dbg !5778
  br i1 %cmp839, label %land.lhs.true841, label %if.end857, !dbg !5779

land.lhs.true841:                                 ; preds = %land.lhs.true836
  %st_size842 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5780, !ctir !421
  %493 = load i64, i64* %st_size842, align 8, !dbg !5780, !tbaa !4037, !ctir !30
  %494 = load i8*, i8** %src_link_val, align 8, !dbg !5781, !tbaa !2668
  %call843 = call i64 @strlen(i8* %494) #14, !dbg !5782
  %cmp844 = icmp eq i64 %493, %call843, !dbg !5783
  br i1 %cmp844, label %if.then846, label %if.end857, !dbg !5784

if.then846:                                       ; preds = %land.lhs.true841
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !5785, metadata !DIExpression()), !dbg !5787
  %495 = load i8*, i8** %dst_name.addr, align 8, !dbg !5788, !tbaa !2668
  %st_size847 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5789, !ctir !421
  %496 = load i64, i64* %st_size847, align 8, !dbg !5789, !tbaa !4037, !ctir !30
  %call848 = call i8* @areadlink_with_size(i8* %495, i64 %496), !dbg !5790
  store i8* %call848, i8** %dest_link_val, align 8, !dbg !5787, !tbaa !2668
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !5791, !tbaa !2668
  %tobool849 = icmp ne i8* %497, null, !dbg !5791
  br i1 %tobool849, label %if.then850, label %if.end856, !dbg !5793

if.then850:                                       ; preds = %if.then846
  %498 = load i8*, i8** %dest_link_val, align 8, !dbg !5794, !tbaa !2668
  %499 = load i8*, i8** %src_link_val, align 8, !dbg !5794, !tbaa !2668
  %call851 = call i32 @strcmp(i8* %498, i8* %499) #14, !dbg !5794
  %cmp852 = icmp eq i32 %call851, 0, !dbg !5794
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !5797

if.then854:                                       ; preds = %if.then850
  store i32 0, i32* %symlink_err, align 4, !dbg !5798, !tbaa !2655
  br label %if.end855, !dbg !5799

if.end855:                                        ; preds = %if.then854, %if.then850
  %500 = load i8*, i8** %dest_link_val, align 8, !dbg !5800, !tbaa !2668
  call void @free(i8* %500) #9, !dbg !5801
  br label %if.end856, !dbg !5802

if.end856:                                        ; preds = %if.end855, %if.then846
  br label %if.end857, !dbg !5803

if.end857:                                        ; preds = %if.end856, %land.lhs.true841, %land.lhs.true836, %land.lhs.true834, %land.lhs.true830, %if.end824
  %501 = load i8*, i8** %src_link_val, align 8, !dbg !5804, !tbaa !2668
  call void @free(i8* %501) #9, !dbg !5805
  %502 = load i32, i32* %symlink_err, align 4, !dbg !5806, !tbaa !2655
  %cmp858 = icmp slt i32 0, %502, !dbg !5808
  br i1 %cmp858, label %if.then860, label %if.end863, !dbg !5809

if.then860:                                       ; preds = %if.end857
  %503 = load i32, i32* %symlink_err, align 4, !dbg !5810, !tbaa !2655
  %call861 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.135, i64 0, i64 0)) #9, !dbg !5812
  %504 = load i8*, i8** %dst_name.addr, align 8, !dbg !5813, !tbaa !2668
  %call862 = call i8* @quotearg_style(i32 4, i8* %504), !dbg !5813
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %503, i8* %call861, i8* %call862), !dbg !5814
  br label %un_backup, !dbg !5815

if.end863:                                        ; preds = %if.end857
  %505 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5816, !tbaa !2668
  %preserve_security_context864 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %505, i32 0, i32 22, !dbg !5818, !ctir !363
  %506 = load i8, i8* %preserve_security_context864, align 1, !dbg !5818, !tbaa !2870
  %tobool865 = trunc i8 %506 to i1, !dbg !5818, !ctir !139
  br i1 %tobool865, label %if.then866, label %if.end867, !dbg !5819

if.then866:                                       ; preds = %if.end863
  call void @restore_default_fscreatecon_or_die(), !dbg !5820
  br label %if.end867, !dbg !5820

if.end867:                                        ; preds = %if.then866, %if.end863
  %507 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5821, !tbaa !2668
  %preserve_ownership868 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %507, i32 0, i32 14, !dbg !5823, !ctir !363
  %508 = load i8, i8* %preserve_ownership868, align 1, !dbg !5823, !tbaa !3199
  %tobool869 = trunc i8 %508 to i1, !dbg !5823, !ctir !139
  br i1 %tobool869, label %if.then870, label %if.end884, !dbg !5824

if.then870:                                       ; preds = %if.end867
  %509 = load i8*, i8** %dst_name.addr, align 8, !dbg !5825, !tbaa !2668
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5828, !ctir !421
  %510 = load i32, i32* %st_uid, align 4, !dbg !5828, !tbaa !4064, !ctir !125
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5829, !ctir !421
  %511 = load i32, i32* %st_gid, align 8, !dbg !5829, !tbaa !4093, !ctir !127
  %call871 = call i32 @lchown(i8* %509, i32 %510, i32 %511) #9, !dbg !5830
  %cmp872 = icmp ne i32 %call871, 0, !dbg !5831
  br i1 %cmp872, label %land.lhs.true874, label %if.else882, !dbg !5832

land.lhs.true874:                                 ; preds = %if.then870
  %512 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5833, !tbaa !2668
  %call875 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %512) #14, !dbg !5834
  br i1 %call875, label %if.else882, label %if.then876, !dbg !5835

if.then876:                                       ; preds = %land.lhs.true874
  %call877 = call i32* @__errno_location() #16, !dbg !5836
  %513 = load i32, i32* %call877, align 4, !dbg !5836, !tbaa !2655, !ctir !5
  %call878 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !5838
  %514 = load i8*, i8** %dst_name.addr, align 8, !dbg !5839, !tbaa !2668
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %513, i8* %call878, i8* %514), !dbg !5840
  %515 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5841, !tbaa !2668
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %515, i32 0, i32 21, !dbg !5843, !ctir !363
  %516 = load i8, i8* %require_preserve, align 4, !dbg !5843, !tbaa !3226
  %tobool879 = trunc i8 %516 to i1, !dbg !5843, !ctir !139
  br i1 %tobool879, label %if.then880, label %if.end881, !dbg !5844

if.then880:                                       ; preds = %if.then876
  br label %un_backup, !dbg !5845

if.end881:                                        ; preds = %if.then876
  br label %if.end883, !dbg !5846

if.else882:                                       ; preds = %land.lhs.true874, %if.then870
  br label %if.end883

if.end883:                                        ; preds = %if.else882, %if.end881
  br label %if.end884, !dbg !5847

if.end884:                                        ; preds = %if.end883, %if.end867
  br label %if.end888, !dbg !5848

if.else885:                                       ; preds = %if.else812
  %call886 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.137, i64 0, i64 0)) #9, !dbg !5849
  %517 = load i8*, i8** %src_name.addr, align 8, !dbg !5851, !tbaa !2668
  %call887 = call i8* @quotearg_style(i32 4, i8* %517), !dbg !5851
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call886, i8* %call887), !dbg !5852
  br label %un_backup, !dbg !5853

if.end888:                                        ; preds = %if.end884
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.end811
  br label %if.end890

if.end890:                                        ; preds = %if.end889, %if.end788
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %if.end765
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end748
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end729
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end681
  %518 = load i8, i8* %new_dst.addr, align 1, !dbg !5854, !tbaa !2762
  %tobool895 = trunc i8 %518 to i1, !dbg !5854
  br i1 %tobool895, label %if.end921, label %land.lhs.true896, !dbg !5856

land.lhs.true896:                                 ; preds = %if.end894
  %519 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5857, !tbaa !2668
  %copy_as_regular897 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %519, i32 0, i32 5, !dbg !5858, !ctir !363
  %520 = load i8, i8* %copy_as_regular897, align 4, !dbg !5858, !tbaa !3159
  %tobool898 = trunc i8 %520 to i1, !dbg !5858, !ctir !139
  br i1 %tobool898, label %if.end921, label %land.lhs.true899, !dbg !5859

land.lhs.true899:                                 ; preds = %land.lhs.true896
  %521 = load i32, i32* %src_mode, align 4, !dbg !5860, !tbaa !2655
  %and900 = and i32 %521, 61440, !dbg !5860
  %cmp901 = icmp eq i32 %and900, 16384, !dbg !5860
  br i1 %cmp901, label %if.end921, label %land.lhs.true903, !dbg !5861

land.lhs.true903:                                 ; preds = %land.lhs.true899
  %522 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5862, !tbaa !2668
  %set_security_context904 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %522, i32 0, i32 18, !dbg !5863, !ctir !363
  %523 = load i8, i8* %set_security_context904, align 1, !dbg !5863, !tbaa !2886
  %tobool905 = trunc i8 %523 to i1, !dbg !5863, !ctir !139
  br i1 %tobool905, label %if.then911, label %lor.lhs.false907, !dbg !5864

lor.lhs.false907:                                 ; preds = %land.lhs.true903
  %524 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5865, !tbaa !2668
  %preserve_security_context908 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %524, i32 0, i32 22, !dbg !5866, !ctir !363
  %525 = load i8, i8* %preserve_security_context908, align 1, !dbg !5866, !tbaa !2870
  %tobool909 = trunc i8 %525 to i1, !dbg !5866, !ctir !139
  br i1 %tobool909, label %if.then911, label %if.end921, !dbg !5867

if.then911:                                       ; preds = %lor.lhs.false907, %land.lhs.true903
  %526 = load i8*, i8** %dst_name.addr, align 8, !dbg !5868, !tbaa !2668
  %527 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5871, !tbaa !2668
  %preserve_security_context912 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %527, i32 0, i32 22, !dbg !5872, !ctir !363
  %528 = load i8, i8* %preserve_security_context912, align 1, !dbg !5872, !tbaa !2870
  %tobool913 = trunc i8 %528 to i1, !dbg !5872, !ctir !139
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5873, !tbaa !2668
  %call914 = call zeroext i1 @set_file_security_ctx(i8* %526, i1 zeroext %tobool913, i1 zeroext false, %struct.cp_options* %529), !dbg !5874
  br i1 %call914, label %if.end920, label %if.then915, !dbg !5875

if.then915:                                       ; preds = %if.then911
  %530 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5876, !tbaa !2668
  %require_preserve_context916 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %530, i32 0, i32 23, !dbg !5879, !ctir !363
  %531 = load i8, i8* %require_preserve_context916, align 2, !dbg !5879, !tbaa !3269
  %tobool917 = trunc i8 %531 to i1, !dbg !5879, !ctir !139
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !5880

if.then918:                                       ; preds = %if.then915
  br label %un_backup, !dbg !5881

if.end919:                                        ; preds = %if.then915
  br label %if.end920, !dbg !5882

if.end920:                                        ; preds = %if.end919, %if.then911
  br label %if.end921, !dbg !5883

if.end921:                                        ; preds = %if.end920, %lor.lhs.false907, %land.lhs.true899, %land.lhs.true896, %if.end894
  %532 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5884, !tbaa !2762
  %tobool922 = trunc i8 %532 to i1, !dbg !5884
  br i1 %tobool922, label %land.lhs.true924, label %if.end934, !dbg !5886

land.lhs.true924:                                 ; preds = %if.end921
  %533 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5887, !tbaa !2668
  %dest_info925 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %533, i32 0, i32 37, !dbg !5888, !ctir !363
  %534 = load %struct.hash_table*, %struct.hash_table** %dest_info925, align 8, !dbg !5888, !tbaa !3286, !ctir !172
  %tobool926 = icmp ne %struct.hash_table* %534, null, !dbg !5887
  br i1 %tobool926, label %if.then927, label %if.end934, !dbg !5889

if.then927:                                       ; preds = %land.lhs.true924
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !5890, metadata !DIExpression()), !dbg !5892
  %535 = load i8*, i8** %dst_name.addr, align 8, !dbg !5893, !tbaa !2668
  %call928 = call i32 @lstat(i8* %535, %struct.stat* %sb) #9, !dbg !5895
  %cmp929 = icmp eq i32 %call928, 0, !dbg !5896
  br i1 %cmp929, label %if.then931, label %if.end933, !dbg !5897

if.then931:                                       ; preds = %if.then927
  %536 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5898, !tbaa !2668
  %dest_info932 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %536, i32 0, i32 37, !dbg !5899, !ctir !363
  %537 = load %struct.hash_table*, %struct.hash_table** %dest_info932, align 8, !dbg !5899, !tbaa !3286, !ctir !172
  %538 = load i8*, i8** %dst_name.addr, align 8, !dbg !5900, !tbaa !2668
  call void @record_file(%struct.hash_table* %537, i8* %538, %struct.stat* %sb), !dbg !5901
  br label %if.end933, !dbg !5901

if.end933:                                        ; preds = %if.then931, %if.then927
  br label %if.end934, !dbg !5902

if.end934:                                        ; preds = %if.end933, %land.lhs.true924, %if.end921
  %539 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5903, !tbaa !2668
  %hard_link935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %539, i32 0, i32 8, !dbg !5905, !ctir !363
  %540 = load i8, i8* %hard_link935, align 1, !dbg !5905, !tbaa !3179
  %tobool936 = trunc i8 %540 to i1, !dbg !5905, !ctir !139
  br i1 %tobool936, label %land.lhs.true938, label %if.end944, !dbg !5906

land.lhs.true938:                                 ; preds = %if.end934
  %541 = load i32, i32* %src_mode, align 4, !dbg !5907, !tbaa !2655
  %and939 = and i32 %541, 61440, !dbg !5907
  %cmp940 = icmp eq i32 %and939, 16384, !dbg !5907
  br i1 %cmp940, label %if.end944, label %if.then942, !dbg !5908

if.then942:                                       ; preds = %land.lhs.true938
  %542 = load i8, i8* %delayed_ok, align 1, !dbg !5909, !tbaa !2762
  %tobool943 = trunc i8 %542 to i1, !dbg !5909
  store i1 %tobool943, i1* %retval, align 1, !dbg !5910
  br label %return, !dbg !5910

if.end944:                                        ; preds = %land.lhs.true938, %if.end934
  %543 = load i8, i8* %copied_as_regular, align 1, !dbg !5911, !tbaa !2762
  %tobool945 = trunc i8 %543 to i1, !dbg !5911
  br i1 %tobool945, label %if.then946, label %if.end948, !dbg !5913

if.then946:                                       ; preds = %if.end944
  %544 = load i8, i8* %delayed_ok, align 1, !dbg !5914, !tbaa !2762
  %tobool947 = trunc i8 %544 to i1, !dbg !5914
  store i1 %tobool947, i1* %retval, align 1, !dbg !5915
  br label %return, !dbg !5915

if.end948:                                        ; preds = %if.end944
  %545 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5916, !tbaa !2668
  %preserve_timestamps949 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %545, i32 0, i32 16, !dbg !5918, !ctir !363
  %546 = load i8, i8* %preserve_timestamps949, align 1, !dbg !5918, !tbaa !2846
  %tobool950 = trunc i8 %546 to i1, !dbg !5918, !ctir !139
  br i1 %tobool950, label %if.then951, label %if.end977, !dbg !5919

if.then951:                                       ; preds = %if.end948
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !5920, metadata !DIExpression()), !dbg !5922
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5923, !ctir !451
  %call953 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !5924
  %547 = bitcast %struct.timespec* %tmp952 to { i64, i64 }*, !dbg !5924
  %548 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 0, !dbg !5924
  %549 = extractvalue { i64, i64 } %call953, 0, !dbg !5924
  store i64 %549, i64* %548, align 8, !dbg !5924
  %550 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 1, !dbg !5924
  %551 = extractvalue { i64, i64 } %call953, 1, !dbg !5924
  store i64 %551, i64* %550, align 8, !dbg !5924
  %552 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !5924
  %553 = bitcast %struct.timespec* %tmp952 to i8*, !dbg !5924
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %552, i8* align 8 %553, i64 16, i1 false), !dbg !5924, !tbaa.struct !3817
  %arrayidx954 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !5925, !ctir !451
  %call956 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !5926
  %554 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !5926
  %555 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 0, !dbg !5926
  %556 = extractvalue { i64, i64 } %call956, 0, !dbg !5926
  store i64 %556, i64* %555, align 8, !dbg !5926
  %557 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 1, !dbg !5926
  %558 = extractvalue { i64, i64 } %call956, 1, !dbg !5926
  store i64 %558, i64* %557, align 8, !dbg !5926
  %559 = bitcast %struct.timespec* %arrayidx954 to i8*, !dbg !5926
  %560 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !5926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %559, i8* align 8 %560, i64 16, i1 false), !dbg !5926, !tbaa.struct !3817
  %561 = load i8, i8* %dest_is_symlink, align 1, !dbg !5927, !tbaa !2762
  %tobool957 = trunc i8 %561 to i1, !dbg !5927
  br i1 %tobool957, label %cond.true959, label %cond.false961, !dbg !5927

cond.true959:                                     ; preds = %if.then951
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !5929, !tbaa !2668
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5930
  %call960 = call i32 @utimens_symlink(i8* %562, %struct.timespec* %arraydecay), !dbg !5931
  br label %cond.end964, !dbg !5927

cond.false961:                                    ; preds = %if.then951
  %563 = load i8*, i8** %dst_name.addr, align 8, !dbg !5932, !tbaa !2668
  %arraydecay962 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5933
  %call963 = call i32 @utimens(i8* %563, %struct.timespec* %arraydecay962), !dbg !5934
  br label %cond.end964, !dbg !5927

cond.end964:                                      ; preds = %cond.false961, %cond.true959
  %cond965 = phi i32 [ %call960, %cond.true959 ], [ %call963, %cond.false961 ], !dbg !5927
  %cmp966 = icmp ne i32 %cond965, 0, !dbg !5935
  br i1 %cmp966, label %if.then968, label %if.end976, !dbg !5936

if.then968:                                       ; preds = %cond.end964
  %call969 = call i32* @__errno_location() #16, !dbg !5937
  %564 = load i32, i32* %call969, align 4, !dbg !5937, !tbaa !2655, !ctir !5
  %call970 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !5939
  %565 = load i8*, i8** %dst_name.addr, align 8, !dbg !5940, !tbaa !2668
  %call971 = call i8* @quotearg_style(i32 4, i8* %565), !dbg !5940
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %564, i8* %call970, i8* %call971), !dbg !5941
  %566 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5942, !tbaa !2668
  %require_preserve972 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %566, i32 0, i32 21, !dbg !5944, !ctir !363
  %567 = load i8, i8* %require_preserve972, align 4, !dbg !5944, !tbaa !3226
  %tobool973 = trunc i8 %567 to i1, !dbg !5944, !ctir !139
  br i1 %tobool973, label %if.then974, label %if.end975, !dbg !5945

if.then974:                                       ; preds = %if.then968
  store i1 false, i1* %retval, align 1, !dbg !5946
  br label %return, !dbg !5946

if.end975:                                        ; preds = %if.then968
  br label %if.end976, !dbg !5947

if.end976:                                        ; preds = %if.end975, %cond.end964
  br label %if.end977, !dbg !5948

if.end977:                                        ; preds = %if.end976, %if.end948
  %568 = load i8, i8* %dest_is_symlink, align 1, !dbg !5949, !tbaa !2762
  %tobool978 = trunc i8 %568 to i1, !dbg !5949
  br i1 %tobool978, label %if.end1001, label %land.lhs.true979, !dbg !5951

land.lhs.true979:                                 ; preds = %if.end977
  %569 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5952, !tbaa !2668
  %preserve_ownership980 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %569, i32 0, i32 14, !dbg !5953, !ctir !363
  %570 = load i8, i8* %preserve_ownership980, align 1, !dbg !5953, !tbaa !3199
  %tobool981 = trunc i8 %570 to i1, !dbg !5953, !ctir !139
  br i1 %tobool981, label %land.lhs.true983, label %if.end1001, !dbg !5954

land.lhs.true983:                                 ; preds = %land.lhs.true979
  %571 = load i8, i8* %new_dst.addr, align 1, !dbg !5955, !tbaa !2762
  %tobool984 = trunc i8 %571 to i1, !dbg !5955
  br i1 %tobool984, label %if.then996, label %lor.lhs.false986, !dbg !5956

lor.lhs.false986:                                 ; preds = %land.lhs.true983
  %st_uid987 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5957, !ctir !421
  %572 = load i32, i32* %st_uid987, align 4, !dbg !5957, !tbaa !4064, !ctir !125
  %st_uid988 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !5957, !ctir !421
  %573 = load i32, i32* %st_uid988, align 4, !dbg !5957, !tbaa !4064, !ctir !125
  %cmp989 = icmp eq i32 %572, %573, !dbg !5957
  br i1 %cmp989, label %land.lhs.true991, label %if.then996, !dbg !5957

land.lhs.true991:                                 ; preds = %lor.lhs.false986
  %st_gid992 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5957, !ctir !421
  %574 = load i32, i32* %st_gid992, align 8, !dbg !5957, !tbaa !4093, !ctir !127
  %st_gid993 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !5957, !ctir !421
  %575 = load i32, i32* %st_gid993, align 8, !dbg !5957, !tbaa !4093, !ctir !127
  %cmp994 = icmp eq i32 %574, %575, !dbg !5957
  br i1 %cmp994, label %if.end1001, label %if.then996, !dbg !5958

if.then996:                                       ; preds = %land.lhs.true991, %lor.lhs.false986, %land.lhs.true983
  %576 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5959, !tbaa !2668
  %577 = load i8*, i8** %dst_name.addr, align 8, !dbg !5961, !tbaa !2668
  %578 = load i8, i8* %new_dst.addr, align 1, !dbg !5962, !tbaa !2762
  %tobool997 = trunc i8 %578 to i1, !dbg !5962
  %call998 = call i32 @set_owner(%struct.cp_options* %576, i8* %577, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool997, %struct.stat* %dst_sb), !dbg !5963
  switch i32 %call998, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb999
  ], !dbg !5964

sw.bb:                                            ; preds = %if.then996
  store i1 false, i1* %retval, align 1, !dbg !5965
  br label %return, !dbg !5965

sw.bb999:                                         ; preds = %if.then996
  %579 = load i32, i32* %src_mode, align 4, !dbg !5967, !tbaa !2655
  %and1000 = and i32 %579, -3585, !dbg !5967
  store i32 %and1000, i32* %src_mode, align 4, !dbg !5967, !tbaa !2655
  br label %sw.epilog, !dbg !5968

sw.epilog:                                        ; preds = %if.then996, %sw.bb999
  br label %if.end1001, !dbg !5969

if.end1001:                                       ; preds = %sw.epilog, %land.lhs.true991, %land.lhs.true979, %if.end977
  %580 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5970, !tbaa !2668
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %580, i32 0, i32 24, !dbg !5972, !ctir !363
  %581 = load i8, i8* %preserve_xattr, align 1, !dbg !5972, !tbaa !3279
  %tobool1002 = trunc i8 %581 to i1, !dbg !5972, !ctir !139
  br i1 %tobool1002, label %land.lhs.true1004, label %if.end1010, !dbg !5973

land.lhs.true1004:                                ; preds = %if.end1001
  %582 = load i8*, i8** %src_name.addr, align 8, !dbg !5974, !tbaa !2668
  %583 = load i8*, i8** %dst_name.addr, align 8, !dbg !5975, !tbaa !2668
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5976, !tbaa !2668
  %call1005 = call zeroext i1 @copy_attr(i8* %582, i32 -1, i8* %583, i32 -1, %struct.cp_options* %584), !dbg !5977
  br i1 %call1005, label %if.end1010, label %land.lhs.true1006, !dbg !5978

land.lhs.true1006:                                ; preds = %land.lhs.true1004
  %585 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5979, !tbaa !2668
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %585, i32 0, i32 25, !dbg !5980, !ctir !363
  %586 = load i8, i8* %require_preserve_xattr, align 8, !dbg !5980, !tbaa !3230
  %tobool1007 = trunc i8 %586 to i1, !dbg !5980, !ctir !139
  br i1 %tobool1007, label %if.then1009, label %if.end1010, !dbg !5981

if.then1009:                                      ; preds = %land.lhs.true1006
  store i1 false, i1* %retval, align 1, !dbg !5982
  br label %return, !dbg !5982

if.end1010:                                       ; preds = %land.lhs.true1006, %land.lhs.true1004, %if.end1001
  %587 = load i8, i8* %dest_is_symlink, align 1, !dbg !5983, !tbaa !2762
  %tobool1011 = trunc i8 %587 to i1, !dbg !5983
  br i1 %tobool1011, label %if.then1012, label %if.end1014, !dbg !5985

if.then1012:                                      ; preds = %if.end1010
  %588 = load i8, i8* %delayed_ok, align 1, !dbg !5986, !tbaa !2762
  %tobool1013 = trunc i8 %588 to i1, !dbg !5986
  store i1 %tobool1013, i1* %retval, align 1, !dbg !5987
  br label %return, !dbg !5987

if.end1014:                                       ; preds = %if.end1010
  %589 = load i8*, i8** %dst_name.addr, align 8, !dbg !5988, !tbaa !2668
  call void @set_author(i8* %589, i32 -1, %struct.stat* %src_sb), !dbg !5989
  %590 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5990, !tbaa !2668
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %590, i32 0, i32 15, !dbg !5992, !ctir !363
  %591 = load i8, i8* %preserve_mode, align 2, !dbg !5992, !tbaa !3207
  %tobool1015 = trunc i8 %591 to i1, !dbg !5992, !ctir !139
  br i1 %tobool1015, label %if.then1021, label %lor.lhs.false1017, !dbg !5993

lor.lhs.false1017:                                ; preds = %if.end1014
  %592 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5994, !tbaa !2668
  %move_mode1018 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %592, i32 0, i32 9, !dbg !5995, !ctir !363
  %593 = load i8, i8* %move_mode1018, align 8, !dbg !5995, !tbaa !3187
  %tobool1019 = trunc i8 %593 to i1, !dbg !5995, !ctir !139
  br i1 %tobool1019, label %if.then1021, label %if.else1031, !dbg !5996

if.then1021:                                      ; preds = %lor.lhs.false1017, %if.end1014
  %594 = load i8*, i8** %src_name.addr, align 8, !dbg !5997, !tbaa !2668
  %595 = load i8*, i8** %dst_name.addr, align 8, !dbg !6000, !tbaa !2668
  %596 = load i32, i32* %src_mode, align 4, !dbg !6001, !tbaa !2655
  %call1022 = call i32 @copy_acl(i8* %594, i32 -1, i8* %595, i32 -1, i32 %596), !dbg !6002
  %cmp1023 = icmp ne i32 %call1022, 0, !dbg !6003
  br i1 %cmp1023, label %land.lhs.true1025, label %if.end1030, !dbg !6004

land.lhs.true1025:                                ; preds = %if.then1021
  %597 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6005, !tbaa !2668
  %require_preserve1026 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %597, i32 0, i32 21, !dbg !6006, !ctir !363
  %598 = load i8, i8* %require_preserve1026, align 4, !dbg !6006, !tbaa !3226
  %tobool1027 = trunc i8 %598 to i1, !dbg !6006, !ctir !139
  br i1 %tobool1027, label %if.then1029, label %if.end1030, !dbg !6007

if.then1029:                                      ; preds = %land.lhs.true1025
  store i1 false, i1* %retval, align 1, !dbg !6008
  br label %return, !dbg !6008

if.end1030:                                       ; preds = %land.lhs.true1025, %if.then1021
  br label %if.end1112, !dbg !6009

if.else1031:                                      ; preds = %lor.lhs.false1017
  %599 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6010, !tbaa !2668
  %set_mode1032 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %599, i32 0, i32 28, !dbg !6012, !ctir !363
  %600 = load i8, i8* %set_mode1032, align 1, !dbg !6012, !tbaa !3249
  %tobool1033 = trunc i8 %600 to i1, !dbg !6012, !ctir !139
  br i1 %tobool1033, label %if.then1034, label %if.else1041, !dbg !6013

if.then1034:                                      ; preds = %if.else1031
  %601 = load i8*, i8** %dst_name.addr, align 8, !dbg !6014, !tbaa !2668
  %602 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6017, !tbaa !2668
  %mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %602, i32 0, i32 4, !dbg !6018, !ctir !363
  %603 = load i32, i32* %mode1035, align 8, !dbg !6018, !tbaa !3253, !ctir !136
  %call1036 = call i32 @set_acl(i8* %601, i32 -1, i32 %603), !dbg !6019
  %cmp1037 = icmp ne i32 %call1036, 0, !dbg !6020
  br i1 %cmp1037, label %if.then1039, label %if.end1040, !dbg !6021

if.then1039:                                      ; preds = %if.then1034
  store i1 false, i1* %retval, align 1, !dbg !6022
  br label %return, !dbg !6022

if.end1040:                                       ; preds = %if.then1034
  br label %if.end1111, !dbg !6023

if.else1041:                                      ; preds = %if.else1031
  %604 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6024, !tbaa !2668
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %604, i32 0, i32 17, !dbg !6026, !ctir !363
  %605 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6026, !tbaa !3214
  %tobool1042 = trunc i8 %605 to i1, !dbg !6026, !ctir !139
  br i1 %tobool1042, label %land.lhs.true1044, label %if.else1065, !dbg !6027

land.lhs.true1044:                                ; preds = %if.else1041
  %606 = load i8, i8* %new_dst.addr, align 1, !dbg !6028, !tbaa !2762
  %tobool1045 = trunc i8 %606 to i1, !dbg !6028
  br i1 %tobool1045, label %if.then1047, label %if.else1065, !dbg !6029

if.then1047:                                      ; preds = %land.lhs.true1044
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !6030, metadata !DIExpression()), !dbg !6032
  %607 = load i32, i32* %src_mode, align 4, !dbg !6033, !tbaa !2655
  %and1048 = and i32 %607, 61440, !dbg !6033
  %cmp1049 = icmp eq i32 %and1048, 16384, !dbg !6033
  br i1 %cmp1049, label %lor.end1055, label %lor.rhs1051, !dbg !6034

lor.rhs1051:                                      ; preds = %if.then1047
  %608 = load i32, i32* %src_mode, align 4, !dbg !6035, !tbaa !2655
  %and1052 = and i32 %608, 61440, !dbg !6035
  %cmp1053 = icmp eq i32 %and1052, 49152, !dbg !6035
  br label %lor.end1055, !dbg !6034

lor.end1055:                                      ; preds = %lor.rhs1051, %if.then1047
  %609 = phi i1 [ true, %if.then1047 ], [ %cmp1053, %lor.rhs1051 ]
  %610 = zext i1 %609 to i64, !dbg !6033
  %cond1056 = select i1 %609, i32 511, i32 438, !dbg !6033
  store i32 %cond1056, i32* %default_permissions, align 4, !dbg !6032, !tbaa !2655
  %611 = load i8*, i8** %dst_name.addr, align 8, !dbg !6036, !tbaa !2668
  %612 = load i32, i32* %default_permissions, align 4, !dbg !6038, !tbaa !2655
  %call1057 = call i32 @cached_umask(), !dbg !6039
  %neg1058 = xor i32 %call1057, -1, !dbg !6040
  %and1059 = and i32 %612, %neg1058, !dbg !6041
  %call1060 = call i32 @set_acl(i8* %611, i32 -1, i32 %and1059), !dbg !6042
  %cmp1061 = icmp ne i32 %call1060, 0, !dbg !6043
  br i1 %cmp1061, label %if.then1063, label %if.end1064, !dbg !6044

if.then1063:                                      ; preds = %lor.end1055
  store i1 false, i1* %retval, align 1, !dbg !6045
  br label %return, !dbg !6045

if.end1064:                                       ; preds = %lor.end1055
  br label %if.end1110, !dbg !6046

if.else1065:                                      ; preds = %land.lhs.true1044, %if.else1041
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !6047, !tbaa !2655
  %tobool1066 = icmp ne i32 %613, 0, !dbg !6047
  br i1 %tobool1066, label %if.then1067, label %if.end1093, !dbg !6050

if.then1067:                                      ; preds = %if.else1065
  %call1068 = call i32 @cached_umask(), !dbg !6051
  %neg1069 = xor i32 %call1068, -1, !dbg !6053
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !6054, !tbaa !2655
  %and1070 = and i32 %614, %neg1069, !dbg !6054
  store i32 %and1070, i32* %omitted_permissions, align 4, !dbg !6054, !tbaa !2655
  %615 = load i32, i32* %omitted_permissions, align 4, !dbg !6055, !tbaa !2655
  %tobool1071 = icmp ne i32 %615, 0, !dbg !6055
  br i1 %tobool1071, label %land.lhs.true1072, label %if.end1092, !dbg !6057

land.lhs.true1072:                                ; preds = %if.then1067
  %616 = load i8, i8* %restore_dst_mode, align 1, !dbg !6058, !tbaa !2762
  %tobool1073 = trunc i8 %616 to i1, !dbg !6058
  br i1 %tobool1073, label %if.end1092, label %if.then1074, !dbg !6059

if.then1074:                                      ; preds = %land.lhs.true1072
  %617 = load i8, i8* %new_dst.addr, align 1, !dbg !6060, !tbaa !2762
  %tobool1075 = trunc i8 %617 to i1, !dbg !6060
  br i1 %tobool1075, label %land.lhs.true1077, label %if.end1085, !dbg !6063

land.lhs.true1077:                                ; preds = %if.then1074
  %618 = load i8*, i8** %dst_name.addr, align 8, !dbg !6064, !tbaa !2668
  %call1078 = call i32 @lstat(i8* %618, %struct.stat* %dst_sb) #9, !dbg !6065
  %cmp1079 = icmp ne i32 %call1078, 0, !dbg !6066
  br i1 %cmp1079, label %if.then1081, label %if.end1085, !dbg !6067

if.then1081:                                      ; preds = %land.lhs.true1077
  %call1082 = call i32* @__errno_location() #16, !dbg !6068
  %619 = load i32, i32* %call1082, align 4, !dbg !6068, !tbaa !2655, !ctir !5
  %call1083 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !6070
  %620 = load i8*, i8** %dst_name.addr, align 8, !dbg !6071, !tbaa !2668
  %call1084 = call i8* @quotearg_style(i32 4, i8* %620), !dbg !6071
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %619, i8* %call1083, i8* %call1084), !dbg !6072
  store i1 false, i1* %retval, align 1, !dbg !6073
  br label %return, !dbg !6073

if.end1085:                                       ; preds = %land.lhs.true1077, %if.then1074
  %st_mode1086 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6074, !ctir !421
  %621 = load i32, i32* %st_mode1086, align 8, !dbg !6074, !tbaa !2934, !ctir !137
  store i32 %621, i32* %dst_mode, align 4, !dbg !6075, !tbaa !2655
  %622 = load i32, i32* %omitted_permissions, align 4, !dbg !6076, !tbaa !2655
  %623 = load i32, i32* %dst_mode, align 4, !dbg !6078, !tbaa !2655
  %neg1087 = xor i32 %623, -1, !dbg !6079
  %and1088 = and i32 %622, %neg1087, !dbg !6080
  %tobool1089 = icmp ne i32 %and1088, 0, !dbg !6080
  br i1 %tobool1089, label %if.then1090, label %if.end1091, !dbg !6081

if.then1090:                                      ; preds = %if.end1085
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !6082, !tbaa !2762
  br label %if.end1091, !dbg !6083

if.end1091:                                       ; preds = %if.then1090, %if.end1085
  br label %if.end1092, !dbg !6084

if.end1092:                                       ; preds = %if.end1091, %land.lhs.true1072, %if.then1067
  br label %if.end1093, !dbg !6085

if.end1093:                                       ; preds = %if.end1092, %if.else1065
  %624 = load i8, i8* %restore_dst_mode, align 1, !dbg !6086, !tbaa !2762
  %tobool1094 = trunc i8 %624 to i1, !dbg !6086
  br i1 %tobool1094, label %if.then1095, label %if.end1109, !dbg !6088

if.then1095:                                      ; preds = %if.end1093
  %625 = load i8*, i8** %dst_name.addr, align 8, !dbg !6089, !tbaa !2668
  %626 = load i32, i32* %dst_mode, align 4, !dbg !6092, !tbaa !2655
  %627 = load i32, i32* %omitted_permissions, align 4, !dbg !6093, !tbaa !2655
  %or1096 = or i32 %626, %627, !dbg !6094
  %call1097 = call i32 @chmod(i8* %625, i32 %or1096) #9, !dbg !6095
  %cmp1098 = icmp ne i32 %call1097, 0, !dbg !6096
  br i1 %cmp1098, label %if.then1100, label %if.end1108, !dbg !6097

if.then1100:                                      ; preds = %if.then1095
  %call1101 = call i32* @__errno_location() #16, !dbg !6098
  %628 = load i32, i32* %call1101, align 4, !dbg !6098, !tbaa !2655, !ctir !5
  %call1102 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !6100
  %629 = load i8*, i8** %dst_name.addr, align 8, !dbg !6101, !tbaa !2668
  %call1103 = call i8* @quotearg_style(i32 4, i8* %629), !dbg !6101
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %628, i8* %call1102, i8* %call1103), !dbg !6102
  %630 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6103, !tbaa !2668
  %require_preserve1104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %630, i32 0, i32 21, !dbg !6105, !ctir !363
  %631 = load i8, i8* %require_preserve1104, align 4, !dbg !6105, !tbaa !3226
  %tobool1105 = trunc i8 %631 to i1, !dbg !6105, !ctir !139
  br i1 %tobool1105, label %if.then1106, label %if.end1107, !dbg !6106

if.then1106:                                      ; preds = %if.then1100
  store i1 false, i1* %retval, align 1, !dbg !6107
  br label %return, !dbg !6107

if.end1107:                                       ; preds = %if.then1100
  br label %if.end1108, !dbg !6108

if.end1108:                                       ; preds = %if.end1107, %if.then1095
  br label %if.end1109, !dbg !6109

if.end1109:                                       ; preds = %if.end1108, %if.end1093
  br label %if.end1110

if.end1110:                                       ; preds = %if.end1109, %if.end1064
  br label %if.end1111

if.end1111:                                       ; preds = %if.end1110, %if.end1040
  br label %if.end1112

if.end1112:                                       ; preds = %if.end1111, %if.end1030
  %632 = load i8, i8* %delayed_ok, align 1, !dbg !6110, !tbaa !2762
  %tobool1113 = trunc i8 %632 to i1, !dbg !6110
  store i1 %tobool1113, i1* %retval, align 1, !dbg !6111
  br label %return, !dbg !6111

un_backup:                                        ; preds = %if.then918, %if.else885, %if.then880, %if.then860, %if.then820, %if.then807, %if.then783, %if.then764, %if.then747, %if.then725, %if.then715, %if.then664, %if.then628, %if.then616, %if.then609, %if.then593, %if.then486, %if.else474, %if.then450, %if.then160
  call void @llvm.dbg.label(metadata !6112), !dbg !6113
  %633 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6114, !tbaa !2668
  %preserve_security_context1114 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %633, i32 0, i32 22, !dbg !6116, !ctir !363
  %634 = load i8, i8* %preserve_security_context1114, align 1, !dbg !6116, !tbaa !2870
  %tobool1115 = trunc i8 %634 to i1, !dbg !6116, !ctir !139
  br i1 %tobool1115, label %if.then1116, label %if.end1117, !dbg !6117

if.then1116:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !6118
  br label %if.end1117, !dbg !6118

if.end1117:                                       ; preds = %if.then1116, %un_backup
  %635 = load i8*, i8** %earlier_file, align 8, !dbg !6119, !tbaa !2668
  %cmp1118 = icmp eq i8* %635, null, !dbg !6121
  br i1 %cmp1118, label %if.then1120, label %if.end1123, !dbg !6122

if.then1120:                                      ; preds = %if.end1117
  %st_ino1121 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !6123, !ctir !421
  %636 = load i64, i64* %st_ino1121, align 8, !dbg !6123, !tbaa !4789, !ctir !282
  %st_dev1122 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !6124, !ctir !421
  %637 = load i64, i64* %st_dev1122, align 8, !dbg !6124, !tbaa !4768, !ctir !280
  call void @forget_created(i64 %636, i64 %637), !dbg !6125
  br label %if.end1123, !dbg !6125

if.end1123:                                       ; preds = %if.then1120, %if.end1117
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !6126, !tbaa !2668
  %tobool1124 = icmp ne i8* %638, null, !dbg !6126
  br i1 %tobool1124, label %if.then1125, label %if.end1143, !dbg !6128

if.then1125:                                      ; preds = %if.end1123
  %639 = load i8*, i8** %dst_backup, align 8, !dbg !6129, !tbaa !2668
  %640 = load i8*, i8** %dst_name.addr, align 8, !dbg !6132, !tbaa !2668
  %call1126 = call i32 @rename(i8* %639, i8* %640) #9, !dbg !6133
  %cmp1127 = icmp ne i32 %call1126, 0, !dbg !6134
  br i1 %cmp1127, label %if.then1129, label %if.else1133, !dbg !6135

if.then1129:                                      ; preds = %if.then1125
  %call1130 = call i32* @__errno_location() #16, !dbg !6136
  %641 = load i32, i32* %call1130, align 4, !dbg !6136, !tbaa !2655, !ctir !5
  %call1131 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.140, i64 0, i64 0)) #9, !dbg !6137
  %642 = load i8*, i8** %dst_name.addr, align 8, !dbg !6138, !tbaa !2668
  %call1132 = call i8* @quotearg_style(i32 4, i8* %642), !dbg !6138
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %641, i8* %call1131, i8* %call1132), !dbg !6139
  br label %if.end1142, !dbg !6139

if.else1133:                                      ; preds = %if.then1125
  %643 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6140, !tbaa !2668
  %verbose1134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %643, i32 0, i32 31, !dbg !6143, !ctir !363
  %644 = load i8, i8* %verbose1134, align 2, !dbg !6143, !tbaa !2832
  %tobool1135 = trunc i8 %644 to i1, !dbg !6143, !ctir !139
  br i1 %tobool1135, label %if.then1136, label %if.end1141, !dbg !6144

if.then1136:                                      ; preds = %if.else1133
  %call1137 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.141, i64 0, i64 0)) #9, !dbg !6145
  %645 = load i8*, i8** %dst_backup, align 8, !dbg !6146, !tbaa !2668
  %call1138 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %645), !dbg !6146
  %646 = load i8*, i8** %dst_name.addr, align 8, !dbg !6147, !tbaa !2668
  %call1139 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %646), !dbg !6147
  %call1140 = call i32 (i8*, ...) @printf(i8* %call1137, i8* %call1138, i8* %call1139), !dbg !6148
  br label %if.end1141, !dbg !6148

if.end1141:                                       ; preds = %if.then1136, %if.else1133
  br label %if.end1142

if.end1142:                                       ; preds = %if.end1141, %if.then1129
  br label %if.end1143, !dbg !6149

if.end1143:                                       ; preds = %if.end1142, %if.end1123
  store i1 false, i1* %retval, align 1, !dbg !6150
  br label %return, !dbg !6150

return:                                           ; preds = %if.end1143, %if.end1112, %if.then1106, %if.then1081, %if.then1063, %if.then1039, %if.then1029, %if.then1012, %if.then1009, %sw.bb, %if.then974, %if.then946, %if.then942, %if.then587, %if.then552, %if.then533, %if.then527, %if.end524, %if.end487, %if.end464, %if.then374, %if.then330, %if.then297, %cond.end284, %if.then254, %if.else235, %if.then216, %if.else204, %if.then189, %if.then185, %if.end172, %if.end162, %if.then129, %if.then114, %if.then59, %cond.end43, %if.then30
  %647 = load i1, i1* %retval, align 1, !dbg !6151
  ret i1 %647, !dbg !6151
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @follow_fstatat(i32 %dirfd, i8* %filename, %struct.stat* %st, i32 %flags) #4 !dbg !6152 !ctir !452 {
entry:
  %dirfd.addr = alloca i32, align 4, !ctir !5
  %filename.addr = alloca i8*, align 8, !ctir !177
  %st.addr = alloca %struct.stat*, align 8, !ctir !450
  %flags.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store i32 %dirfd, i32* %dirfd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dirfd.addr, metadata !6153, metadata !DIExpression()), !dbg !6154
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !6157, metadata !DIExpression()), !dbg !6158
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6161, metadata !DIExpression()), !dbg !6162
  %0 = load i32, i32* %dirfd.addr, align 4, !dbg !6163, !tbaa !2655
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !6164, !tbaa !2668
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !6165, !tbaa !2668
  %3 = load i32, i32* %flags.addr, align 4, !dbg !6166, !tbaa !2655
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 %3) #9, !dbg !6167
  store i32 %call, i32* %result, align 4, !dbg !6162, !tbaa !2655
  %4 = load i32, i32* %result, align 4, !dbg !6168, !tbaa !2655
  ret i32 %4, !dbg !6169
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #10 !dbg !6170 !ctir !454 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %command_line_arg.addr = alloca i8, align 1, !ctir !139
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6175, !tbaa !2668
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !6176, !ctir !363
  %1 = load i32, i32* %dereference, align 4, !dbg !6176, !tbaa !3167, !ctir !73
  %cmp = icmp eq i32 %1, 4, !dbg !6177
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6178

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6179, !tbaa !2668
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !6180, !ctir !363
  %3 = load i32, i32* %dereference1, align 4, !dbg !6180, !tbaa !3167, !ctir !73
  %cmp2 = icmp eq i32 %3, 3, !dbg !6181
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6182

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6183, !tbaa !2762
  %tobool = trunc i8 %4 to i1, !dbg !6183
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !6184
  br label %lor.end, !dbg !6178

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !6185
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !6186 !ctir !456 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %return_now.addr = alloca i8*, align 8, !ctir !412
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !419
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !419
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !421
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !421
  %same_link = alloca i8, align 1, !ctir !139
  %same = alloca i8, align 1, !ctir !139
  %sn = alloca i8, align 1, !ctir !139
  %abs_src = alloca i8*, align 8, !ctir !7
  %result = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6187, metadata !DIExpression()), !dbg !6188
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6191, metadata !DIExpression()), !dbg !6192
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6193, metadata !DIExpression()), !dbg !6194
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6195, metadata !DIExpression()), !dbg !6196
  store i8* %return_now, i8** %return_now.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !6199, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i8* %same, metadata !6209, metadata !DIExpression()), !dbg !6210
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6211, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !6211, !ctir !420
  %1 = load i64, i64* %st_ino, align 8, !dbg !6211, !tbaa !4789, !ctir !282
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6211, !tbaa !2668
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !6211, !ctir !420
  %3 = load i64, i64* %st_ino1, align 8, !dbg !6211, !tbaa !4789, !ctir !282
  %cmp = icmp eq i64 %1, %3, !dbg !6211
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6211

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6211, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !6211, !ctir !420
  %5 = load i64, i64* %st_dev, align 8, !dbg !6211, !tbaa !4768, !ctir !280
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6211, !tbaa !2668
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !6211, !ctir !420
  %7 = load i64, i64* %st_dev2, align 8, !dbg !6211, !tbaa !4768, !ctir !280
  %cmp3 = icmp eq i64 %5, %7, !dbg !6211
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !6212
  %frombool = zext i1 %8 to i8, !dbg !6210
  store i8 %frombool, i8* %same, align 1, !dbg !6210, !tbaa !2762
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !6213, !tbaa !2668
  store i8 0, i8* %9, align 1, !dbg !6214, !tbaa !2762, !ctir !139
  %10 = load i8, i8* %same, align 1, !dbg !6215, !tbaa !2762
  %tobool = trunc i8 %10 to i1, !dbg !6215
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6217

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6218, !tbaa !2668
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !6219, !ctir !363
  %12 = load i8, i8* %hard_link, align 1, !dbg !6219, !tbaa !3179
  %tobool4 = trunc i8 %12 to i1, !dbg !6219, !ctir !139
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6220

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !6221, !tbaa !2668
  store i8 1, i8* %13, align 1, !dbg !6223, !tbaa !2762, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !6224
  br label %return, !dbg !6224

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6225, !tbaa !2668
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !6227, !ctir !363
  %15 = load i32, i32* %dereference, align 4, !dbg !6227, !tbaa !3167, !ctir !73
  %cmp5 = icmp eq i32 %15, 2, !dbg !6228
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6229

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !6230, !tbaa !2762
  %tobool7 = trunc i8 %16 to i1, !dbg !6230
  %frombool8 = zext i1 %tobool7 to i8, !dbg !6232
  store i8 %frombool8, i8* %same_link, align 1, !dbg !6232, !tbaa !2762
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6233, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6233, !ctir !420
  %18 = load i32, i32* %st_mode, align 8, !dbg !6233, !tbaa !2934, !ctir !137
  %and = and i32 %18, 61440, !dbg !6233
  %cmp9 = icmp eq i32 %and, 40960, !dbg !6233
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !6235

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6236, !tbaa !2668
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !6236, !ctir !420
  %20 = load i32, i32* %st_mode11, align 8, !dbg !6236, !tbaa !2934, !ctir !137
  %and12 = and i32 %20, 61440, !dbg !6236
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !6236
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !6237

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !6238, metadata !DIExpression()), !dbg !6240
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !6241, !tbaa !2668
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !6242, !tbaa !2668
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !6243
  %frombool15 = zext i1 %call to i8, !dbg !6240
  store i8 %frombool15, i8* %sn, align 1, !dbg !6240, !tbaa !2762
  %23 = load i8, i8* %sn, align 1, !dbg !6244, !tbaa !2762
  %tobool16 = trunc i8 %23 to i1, !dbg !6244
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !6246

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6247, !tbaa !2668
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !6250, !ctir !363
  %25 = load i32, i32* %backup_type, align 8, !dbg !6250, !tbaa !2947, !ctir !65
  %cmp18 = icmp ne i32 %25, 0, !dbg !6251
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6252

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !6253
  br label %return, !dbg !6253

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !6254, !tbaa !2762
  %tobool21 = trunc i8 %26 to i1, !dbg !6254
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6256

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !6257, !tbaa !2668
  store i8 1, i8* %27, align 1, !dbg !6259, !tbaa !2762, !ctir !139
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6260, !tbaa !2668
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !6261, !ctir !363
  %29 = load i8, i8* %move_mode, align 8, !dbg !6261, !tbaa !3187
  %tobool23 = trunc i8 %29 to i1, !dbg !6261, !ctir !139
  %lnot = xor i1 %tobool23, true, !dbg !6262
  store i1 %lnot, i1* %retval, align 1, !dbg !6263
  br label %return, !dbg !6263

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !6264

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !6265, !tbaa !2762
  %tobool26 = trunc i8 %30 to i1, !dbg !6265
  %lnot27 = xor i1 %tobool26, true, !dbg !6266
  store i1 %lnot27, i1* %retval, align 1, !dbg !6267
  br label %return, !dbg !6267

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6268, !tbaa !2668
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !6269, !tbaa !2668
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6270, !tbaa !2668
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !6271, !tbaa !2668
  br label %if.end58, !dbg !6272

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !6273, !tbaa !2762
  %tobool29 = trunc i8 %33 to i1, !dbg !6273
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6276

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !6277
  br label %return, !dbg !6277

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6278, !tbaa !2668
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #9, !dbg !6280
  %cmp33 = icmp ne i32 %call32, 0, !dbg !6281
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !6282

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !6283, !tbaa !2668
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #9, !dbg !6284
  %cmp35 = icmp ne i32 %call34, 0, !dbg !6285
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6286

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !6287
  br label %return, !dbg !6287

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !6288, !tbaa !2668
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !6289, !tbaa !2668
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6290, !tbaa !2668
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !6290, !ctir !420
  %37 = load i64, i64* %st_ino38, align 8, !dbg !6290, !tbaa !4789, !ctir !282
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6290, !tbaa !2668
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !6290, !ctir !420
  %39 = load i64, i64* %st_ino39, align 8, !dbg !6290, !tbaa !4789, !ctir !282
  %cmp40 = icmp eq i64 %37, %39, !dbg !6290
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !6290

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6290, !tbaa !2668
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !6290, !ctir !420
  %41 = load i64, i64* %st_dev42, align 8, !dbg !6290, !tbaa !4768, !ctir !280
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6290, !tbaa !2668
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !6290, !ctir !420
  %43 = load i64, i64* %st_dev43, align 8, !dbg !6290, !tbaa !4768, !ctir !280
  %cmp44 = icmp eq i64 %41, %43, !dbg !6290
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !6291
  %frombool46 = zext i1 %44 to i8, !dbg !6292
  store i8 %frombool46, i8* %same_link, align 1, !dbg !6292, !tbaa !2762
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6293, !tbaa !2668
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !6293, !ctir !420
  %46 = load i32, i32* %st_mode47, align 8, !dbg !6293, !tbaa !2934, !ctir !137
  %and48 = and i32 %46, 61440, !dbg !6293
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !6293
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !6295

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6296, !tbaa !2668
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !6296, !ctir !420
  %48 = load i32, i32* %st_mode51, align 8, !dbg !6296, !tbaa !2934, !ctir !137
  %and52 = and i32 %48, 61440, !dbg !6296
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !6296
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !6297

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6298, !tbaa !2668
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !6299, !ctir !363
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6299, !tbaa !3171
  %tobool55 = trunc i8 %50 to i1, !dbg !6299, !ctir !139
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !6300

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !6301
  br label %return, !dbg !6301

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6302, !tbaa !2668
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !6304, !ctir !363
  %52 = load i32, i32* %backup_type59, align 8, !dbg !6304, !tbaa !2947, !ctir !65
  %cmp60 = icmp ne i32 %52, 0, !dbg !6305
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !6306

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !6307, !tbaa !2762
  %tobool62 = trunc i8 %53 to i1, !dbg !6307
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !6310

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6311, !tbaa !2668
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !6314, !ctir !363
  %55 = load i8, i8* %move_mode64, align 8, !dbg !6314, !tbaa !3187
  %tobool65 = trunc i8 %55 to i1, !dbg !6314, !ctir !139
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !6315

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6316, !tbaa !2668
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !6317, !ctir !363
  %57 = load i32, i32* %dereference67, align 4, !dbg !6317, !tbaa !3167, !ctir !73
  %cmp68 = icmp ne i32 %57, 2, !dbg !6318
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !6319

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6320, !tbaa !2668
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !6320, !ctir !420
  %59 = load i32, i32* %st_mode70, align 8, !dbg !6320, !tbaa !2934, !ctir !137
  %and71 = and i32 %59, 61440, !dbg !6320
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !6320
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !6321

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6322, !tbaa !2668
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !6322, !ctir !420
  %61 = load i32, i32* %st_mode74, align 8, !dbg !6322, !tbaa !2934, !ctir !137
  %and75 = and i32 %61, 61440, !dbg !6322
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !6322
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !6323

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !6324
  br label %return, !dbg !6324

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !6325
  br label %return, !dbg !6325

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !6326, !tbaa !2668
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !6327, !tbaa !2668
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !6328
  %lnot81 = xor i1 %call80, true, !dbg !6329
  store i1 %lnot81, i1* %retval, align 1, !dbg !6330
  br label %return, !dbg !6330

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6331, !tbaa !2668
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !6333, !ctir !363
  %65 = load i8, i8* %move_mode83, align 8, !dbg !6333, !tbaa !3187
  %tobool84 = trunc i8 %65 to i1, !dbg !6333, !ctir !139
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !6334

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6335, !tbaa !2668
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !6336, !ctir !363
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !6336, !tbaa !3171
  %tobool87 = trunc i8 %67 to i1, !dbg !6336, !ctir !139
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !6337

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6338, !tbaa !2668
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !6338, !ctir !420
  %69 = load i32, i32* %st_mode89, align 8, !dbg !6338, !tbaa !2934, !ctir !137
  %and90 = and i32 %69, 61440, !dbg !6338
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !6338
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !6341

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !6342
  br label %return, !dbg !6342

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !6343, !tbaa !2762
  %tobool94 = trunc i8 %70 to i1, !dbg !6343
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !6345

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6346, !tbaa !2668
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !6347, !ctir !420
  %72 = load i64, i64* %st_nlink, align 8, !dbg !6347, !tbaa !5026, !ctir !284
  %cmp96 = icmp ult i64 1, %72, !dbg !6348
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !6349

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !6350, !tbaa !2668
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !6351, !tbaa !2668
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !6352
  br i1 %call98, label %if.end103, label %if.then99, !dbg !6353

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6354, !tbaa !2668
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !6355, !ctir !363
  %76 = load i8, i8* %move_mode100, align 8, !dbg !6355, !tbaa !3187
  %tobool101 = trunc i8 %76 to i1, !dbg !6355, !ctir !139
  %lnot102 = xor i1 %tobool101, true, !dbg !6356
  store i1 %lnot102, i1* %retval, align 1, !dbg !6357
  br label %return, !dbg !6357

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !6358

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6359, !tbaa !2668
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !6359, !ctir !420
  %78 = load i32, i32* %st_mode105, align 8, !dbg !6359, !tbaa !2934, !ctir !137
  %and106 = and i32 %78, 61440, !dbg !6359
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !6359
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !6361

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6362, !tbaa !2668
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !6362, !ctir !420
  %80 = load i32, i32* %st_mode109, align 8, !dbg !6362, !tbaa !2934, !ctir !137
  %and110 = and i32 %80, 61440, !dbg !6362
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !6362
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !6363

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6364, !tbaa !2668
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !6364, !ctir !420
  %82 = load i64, i64* %st_ino113, align 8, !dbg !6364, !tbaa !4789, !ctir !282
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6364, !tbaa !2668
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !6364, !ctir !420
  %84 = load i64, i64* %st_ino114, align 8, !dbg !6364, !tbaa !4789, !ctir !282
  %cmp115 = icmp eq i64 %82, %84, !dbg !6364
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !6364

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6364, !tbaa !2668
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !6364, !ctir !420
  %86 = load i64, i64* %st_dev117, align 8, !dbg !6364, !tbaa !4768, !ctir !280
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6364, !tbaa !2668
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !6364, !ctir !420
  %88 = load i64, i64* %st_dev118, align 8, !dbg !6364, !tbaa !4768, !ctir !280
  %cmp119 = icmp eq i64 %86, %88, !dbg !6364
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !6367

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !6368
  br label %return, !dbg !6368

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6369, !tbaa !2668
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !6371, !ctir !363
  %90 = load i8, i8* %hard_link122, align 1, !dbg !6371, !tbaa !3179
  %tobool123 = trunc i8 %90 to i1, !dbg !6371, !ctir !139
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6372

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !6373, !tbaa !2668
  store i8 1, i8* %91, align 1, !dbg !6375, !tbaa !2762, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !6376
  br label %return, !dbg !6376

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !6377

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6378, !tbaa !2668
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !6380, !ctir !363
  %93 = load i8, i8* %move_mode127, align 8, !dbg !6380, !tbaa !3187
  %tobool128 = trunc i8 %93 to i1, !dbg !6380, !ctir !139
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !6381

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6382, !tbaa !2668
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !6382, !ctir !420
  %95 = load i32, i32* %st_mode130, align 8, !dbg !6382, !tbaa !2934, !ctir !137
  %and131 = and i32 %95, 61440, !dbg !6382
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !6382
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !6383

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6384, !tbaa !2668
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !6385, !ctir !420
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !6385, !tbaa !5026, !ctir !284
  %cmp135 = icmp ult i64 1, %97, !dbg !6386
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !6387

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !6388, metadata !DIExpression()), !dbg !6390
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !6391, !tbaa !2668
  %call137 = call i8* @canonicalize_file_name(i8* %98) #9, !dbg !6392
  store i8* %call137, i8** %abs_src, align 8, !dbg !6390, !tbaa !2668
  %99 = load i8*, i8** %abs_src, align 8, !dbg !6393, !tbaa !2668
  %tobool138 = icmp ne i8* %99, null, !dbg !6393
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !6395

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6396, metadata !DIExpression()), !dbg !6398
  %100 = load i8*, i8** %abs_src, align 8, !dbg !6399, !tbaa !2668
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !6400, !tbaa !2668
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !6401
  %lnot141 = xor i1 %call140, true, !dbg !6402
  %frombool142 = zext i1 %lnot141 to i8, !dbg !6398
  store i8 %frombool142, i8* %result, align 1, !dbg !6398, !tbaa !2762
  %102 = load i8*, i8** %abs_src, align 8, !dbg !6403, !tbaa !2668
  call void @free(i8* %102) #9, !dbg !6404
  %103 = load i8, i8* %result, align 1, !dbg !6405, !tbaa !2762
  %tobool143 = trunc i8 %103 to i1, !dbg !6405
  store i1 %tobool143, i1* %retval, align 1, !dbg !6406
  br label %return, !dbg !6406

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !6407

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6408, !tbaa !2668
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !6410, !ctir !363
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !6410, !tbaa !3242
  %tobool146 = trunc i8 %105 to i1, !dbg !6410, !ctir !139
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !6411

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6412, !tbaa !2668
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !6412, !ctir !420
  %107 = load i32, i32* %st_mode148, align 8, !dbg !6412, !tbaa !2934, !ctir !137
  %and149 = and i32 %107, 61440, !dbg !6412
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !6412
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !6413

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !6414
  br label %return, !dbg !6414

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6415, !tbaa !2668
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !6417, !ctir !363
  %109 = load i32, i32* %dereference153, align 4, !dbg !6417, !tbaa !3167, !ctir !73
  %cmp154 = icmp eq i32 %109, 2, !dbg !6418
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !6419

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6420, !tbaa !2668
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !6420, !ctir !420
  %111 = load i32, i32* %st_mode156, align 8, !dbg !6420, !tbaa !2934, !ctir !137
  %and157 = and i32 %111, 61440, !dbg !6420
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !6420
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !6423

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6424, !tbaa !2668
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !6425
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !6425
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !6425, !tbaa.struct !6426
  br label %if.end165, !dbg !6427

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !6428, !tbaa !2668
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #9, !dbg !6430
  %cmp162 = icmp ne i32 %call161, 0, !dbg !6431
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !6432

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !6433
  br label %return, !dbg !6433

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6434, !tbaa !2668
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !6434, !ctir !420
  %117 = load i32, i32* %st_mode166, align 8, !dbg !6434, !tbaa !2934, !ctir !137
  %and167 = and i32 %117, 61440, !dbg !6434
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !6434
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !6436

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6437, !tbaa !2668
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !6438
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !6438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !6438, !tbaa.struct !6426
  br label %if.end175, !dbg !6439

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !6440, !tbaa !2668
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #9, !dbg !6442
  %cmp172 = icmp ne i32 %call171, 0, !dbg !6443
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !6444

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6445
  br label %return, !dbg !6445

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6446, !ctir !421
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6446, !tbaa !4789, !ctir !282
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6446, !ctir !421
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6446, !tbaa !4789, !ctir !282
  %cmp178 = icmp eq i64 %122, %123, !dbg !6446
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6446

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6446, !ctir !421
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6446, !tbaa !4768, !ctir !280
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6446, !ctir !421
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6446, !tbaa !4768, !ctir !280
  %cmp182 = icmp eq i64 %124, %125, !dbg !6446
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6448

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6449
  br label %return, !dbg !6449

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6450, !tbaa !2668
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6452, !ctir !363
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6452, !tbaa !3179
  %tobool186 = trunc i8 %127 to i1, !dbg !6452, !ctir !139
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6453

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6454, !tbaa !2668
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6454, !ctir !420
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6454, !tbaa !2934, !ctir !137
  %and189 = and i32 %129, 61440, !dbg !6454
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6454
  %lnot191 = xor i1 %cmp190, true, !dbg !6456
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6457, !tbaa !2668
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6458
  store i8 %frombool192, i8* %130, align 1, !dbg !6458, !tbaa !2762, !ctir !139
  store i1 true, i1* %retval, align 1, !dbg !6459
  br label %return, !dbg !6459

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6460

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6461
  br label %return, !dbg !6461

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6462
  ret i1 %131, !dbg !6462
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6463 !ctir !458 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %replace.addr = alloca i8, align 1, !ctir !139
  %verbose.addr = alloca i8, align 1, !ctir !139
  %dereference.addr = alloca i8, align 1, !ctir !139
  %err = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6474, metadata !DIExpression()), !dbg !6475
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6476, !tbaa !2668
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6477, !tbaa !2668
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6478, !tbaa !2762
  %tobool = trunc i8 %2 to i1, !dbg !6478
  %3 = zext i1 %tobool to i64, !dbg !6478
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6478
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6479, !tbaa !2762
  %tobool3 = trunc i8 %4 to i1, !dbg !6479
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6480
  store i32 %call, i32* %err, align 4, !dbg !6475, !tbaa !2655
  %5 = load i32, i32* %err, align 4, !dbg !6481, !tbaa !2655
  %cmp = icmp slt i32 0, %5, !dbg !6483
  br i1 %cmp, label %if.then, label %if.end, !dbg !6484

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6485, !tbaa !2655
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.166, i64 0, i64 0)) #9, !dbg !6487
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6488, !tbaa !2668
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6488
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6489, !tbaa !2668
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6489
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6490
  store i1 false, i1* %retval, align 1, !dbg !6491
  br label %return, !dbg !6491

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6492, !tbaa !2655
  %cmp7 = icmp slt i32 %9, 0, !dbg !6494
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6495

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6496, !tbaa !2762
  %tobool8 = trunc i8 %10 to i1, !dbg !6496
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6497

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6498
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6499, !tbaa !2668
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6499
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6500
  br label %if.end13, !dbg !6500

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6501
  br label %return, !dbg !6501

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6502
  ret i1 %12, !dbg !6502
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6503 !ctir !460 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6504, metadata !DIExpression()), !dbg !6505
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6510, !tbaa !2668
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6510, !ctir !363
  %1 = load i8, i8* %move_mode, align 8, !dbg !6510, !tbaa !3187
  %tobool = trunc i8 %1 to i1, !dbg !6510, !ctir !139
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6510

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !6510

cond.false:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.165, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 1782, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6510
  unreachable, !dbg !6510

2:                                                ; No predecessors!
  br label %cond.end, !dbg !6510

cond.end:                                         ; preds = %2, %cond.true
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6511, !tbaa !2668
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 2, !dbg !6512, !ctir !363
  %4 = load i32, i32* %interactive, align 8, !dbg !6512, !tbaa !3183, !ctir !80
  %cmp = icmp eq i32 %4, 2, !dbg !6513
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6514

lor.rhs:                                          ; preds = %cond.end
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6515, !tbaa !2668
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 2, !dbg !6516, !ctir !363
  %6 = load i32, i32* %interactive1, align 8, !dbg !6516, !tbaa !3183, !ctir !80
  %cmp2 = icmp eq i32 %6, 3, !dbg !6517
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6518

lor.lhs.false:                                    ; preds = %lor.rhs
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6519, !tbaa !2668
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !6520, !ctir !363
  %8 = load i32, i32* %interactive3, align 8, !dbg !6520, !tbaa !3183, !ctir !80
  %cmp4 = icmp eq i32 %8, 4, !dbg !6521
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6522

land.lhs.true:                                    ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6523, !tbaa !2668
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 32, !dbg !6524, !ctir !363
  %10 = load i8, i8* %stdin_tty, align 1, !dbg !6524, !tbaa !3257
  %tobool5 = trunc i8 %10 to i1, !dbg !6524, !ctir !139
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6525

land.lhs.true6:                                   ; preds = %land.lhs.true
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6526, !tbaa !2668
  %12 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6527, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %12, i32 0, i32 3, !dbg !6528, !ctir !420
  %13 = load i32, i32* %st_mode, align 8, !dbg !6528, !tbaa !2934, !ctir !137
  %call = call zeroext i1 @writable_destination(i8* %11, i32 %13), !dbg !6529
  br i1 %call, label %land.end, label %land.rhs, !dbg !6530

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6531, !tbaa !2668
  %15 = load i8*, i8** %dst_name.addr, align 8, !dbg !6532, !tbaa !2668
  %16 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6533, !tbaa !2668
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %14, i8* %15, %struct.stat* %16), !dbg !6534
  %lnot = xor i1 %call7, true, !dbg !6535
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %17 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6536
  br label %lor.end, !dbg !6514

lor.end:                                          ; preds = %land.end, %cond.end
  %18 = phi i1 [ true, %cond.end ], [ %17, %land.end ]
  ret i1 %18, !dbg !6537
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6538 !ctir !460 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %perms = alloca [12 x i8], align 1, !ctir !464
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6539, metadata !DIExpression()), !dbg !6540
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6541, metadata !DIExpression()), !dbg !6542
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6543, metadata !DIExpression()), !dbg !6544
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6545, !tbaa !2668
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6547, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6548, !ctir !420
  %2 = load i32, i32* %st_mode, align 8, !dbg !6548, !tbaa !2934, !ctir !137
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6549
  br i1 %call, label %if.else, label %if.then, !dbg !6550

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6551, metadata !DIExpression()), !dbg !6553
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6554, !tbaa !2668
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6555, !ctir !420
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6555, !tbaa !2934, !ctir !137
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6556
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6557
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6558, !ctir !464
  store i8 0, i8* %arrayidx, align 1, !dbg !6559, !tbaa !3315
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6560, !tbaa !2668
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6561, !tbaa !2668
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6562, !ctir !363
  %7 = load i8, i8* %move_mode, align 8, !dbg !6562, !tbaa !3187
  %tobool = trunc i8 %7 to i1, !dbg !6562, !ctir !139
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6563

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6564, !tbaa !2668
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6565, !ctir !363
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6565, !tbaa !3171
  %tobool2 = trunc i8 %9 to i1, !dbg !6565, !ctir !139
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6566

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6567, !tbaa !2668
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6568, !ctir !363
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6568, !tbaa !3175
  %tobool4 = trunc i8 %11 to i1, !dbg !6568, !ctir !139
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6569

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.162, i64 0, i64 0)) #9, !dbg !6570
  br label %cond.end, !dbg !6569

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.163, i64 0, i64 0)) #9, !dbg !6571
  br label %cond.end, !dbg !6569

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6569
  %12 = load i8*, i8** @program_name, align 8, !dbg !6572, !tbaa !2668
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6573, !tbaa !2668
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6573
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6574, !tbaa !2668
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6575, !ctir !420
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6575, !tbaa !2934, !ctir !137
  %and = and i32 %15, 4095, !dbg !6576
  %conv = zext i32 %and to i64, !dbg !6577
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6578, !ctir !464
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6579
  br label %if.end, !dbg !6580

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6581, !tbaa !2668
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.164, i64 0, i64 0)) #9, !dbg !6583
  %17 = load i8*, i8** @program_name, align 8, !dbg !6584, !tbaa !2668
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6585, !tbaa !2668
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6585
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6586
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6587
  ret i1 %call14, !dbg !6588
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !6589 !ctir !217 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %file_name.addr = alloca i8*, align 8, !ctir !177
  %sep = alloca i8, align 1, !ctir !8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !6592, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6592, !ctir !177
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6592, !tbaa !3315
  %conv = sext i8 %1 to i32, !dbg !6592
  %cmp = icmp eq i32 %conv, 46, !dbg !6594
  br i1 %cmp, label %if.then, label %if.else, !dbg !6595

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !6596, metadata !DIExpression()), !dbg !6598
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !6599, !tbaa !2668
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !6600, !tbaa !2668
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6600, !ctir !177
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6600, !tbaa !3315
  %conv3 = sext i8 %4 to i32, !dbg !6600
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !6601
  %conv5 = zext i1 %cmp4 to i32, !dbg !6601
  %add = add nsw i32 %conv5, 1, !dbg !6602
  %idxprom = sext i32 %add to i64, !dbg !6599
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !6599, !ctir !177
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !6599, !tbaa !3315
  store i8 %5, i8* %sep, align 1, !dbg !6598, !tbaa !3315
  %6 = load i8, i8* %sep, align 1, !dbg !6603, !tbaa !3315
  %tobool = icmp ne i8 %6, 0, !dbg !6603
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6604

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !6605, !tbaa !3315
  %conv7 = sext i8 %7 to i32, !dbg !6605
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !6605
  br label %lor.end, !dbg !6604

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !6606
  br label %return, !dbg !6606

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6607
  br label %return, !dbg !6607

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !6608
  ret i1 %9, !dbg !6608
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !6609 !ctir !505 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %srcbase.addr = alloca i8*, align 8, !ctir !177
  %src_st.addr = alloca %struct.stat*, align 8, !ctir !419
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %srcbaselen = alloca i64, align 8, !ctir !52
  %dstbase = alloca i8*, align 8, !ctir !177
  %dstbaselen = alloca i64, align 8, !ctir !52
  %suffixlen = alloca i64, align 8, !ctir !52
  %dstlen = alloca i64, align 8, !ctir !52
  %dst_back = alloca i8*, align 8, !ctir !7
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !421
  %dst_back_status = alloca i32, align 4, !ctir !5
  store i8* %srcbase, i8** %srcbase.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !6610, metadata !DIExpression()), !dbg !6611
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !6612, metadata !DIExpression()), !dbg !6613
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6614, metadata !DIExpression()), !dbg !6615
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !6616, metadata !DIExpression()), !dbg !6617
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !6618, !tbaa !2668
  %call = call i64 @strlen(i8* %0) #14, !dbg !6619
  store i64 %call, i64* %srcbaselen, align 8, !dbg !6617, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !6620, metadata !DIExpression()), !dbg !6621
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6622, !tbaa !2668
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !6623
  store i8* %call1, i8** %dstbase, align 8, !dbg !6621, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !6624, metadata !DIExpression()), !dbg !6625
  %2 = load i8*, i8** %dstbase, align 8, !dbg !6626, !tbaa !2668
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !6627
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !6625, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !6628, metadata !DIExpression()), !dbg !6629
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6630, !tbaa !2668
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !6631
  store i64 %call3, i64* %suffixlen, align 8, !dbg !6629, !tbaa !3308
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !6632, !tbaa !3308
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !6634, !tbaa !3308
  %6 = load i64, i64* %suffixlen, align 8, !dbg !6635, !tbaa !3308
  %add = add i64 %5, %6, !dbg !6636
  %cmp = icmp eq i64 %4, %add, !dbg !6637
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !6638

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !6639, !tbaa !2668
  %8 = load i8*, i8** %dstbase, align 8, !dbg !6640, !tbaa !2668
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !6641, !tbaa !3308
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !6642
  %cmp5 = icmp eq i32 %call4, 0, !dbg !6643
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !6644

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !6645, !tbaa !2668
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !6645, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !6645
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6645, !tbaa !2668
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !6645
  %cmp8 = icmp eq i32 %call7, 0, !dbg !6645
  br i1 %cmp8, label %if.end, label %if.then, !dbg !6646

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !6647
  br label %return, !dbg !6647

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !6648, metadata !DIExpression()), !dbg !6649
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6650, !tbaa !2668
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !6651
  store i64 %call9, i64* %dstlen, align 8, !dbg !6649, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !6652, metadata !DIExpression()), !dbg !6653
  %14 = load i64, i64* %dstlen, align 8, !dbg !6654, !tbaa !3308
  %15 = load i64, i64* %suffixlen, align 8, !dbg !6655, !tbaa !3308
  %add10 = add i64 %14, %15, !dbg !6656
  %add11 = add i64 %add10, 1, !dbg !6657
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !6658
  store i8* %call12, i8** %dst_back, align 8, !dbg !6653, !tbaa !2668
  %16 = load i8*, i8** %dst_back, align 8, !dbg !6659, !tbaa !2668
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !6660, !tbaa !2668
  %18 = load i64, i64* %dstlen, align 8, !dbg !6661, !tbaa !3308
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #9, !dbg !6662
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6663, !tbaa !2668
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #9, !dbg !6664
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !6665, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !6667, metadata !DIExpression()), !dbg !6668
  %20 = load i8*, i8** %dst_back, align 8, !dbg !6669, !tbaa !2668
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #9, !dbg !6670
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !6668, !tbaa !2655
  %21 = load i8*, i8** %dst_back, align 8, !dbg !6671, !tbaa !2668
  call void @free(i8* %21) #9, !dbg !6672
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !6673, !tbaa !2655
  %cmp16 = icmp eq i32 %22, 0, !dbg !6674
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !6675

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6676, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !6676, !ctir !420
  %24 = load i64, i64* %st_ino, align 8, !dbg !6676, !tbaa !4789, !ctir !282
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !6676, !ctir !421
  %25 = load i64, i64* %st_ino17, align 8, !dbg !6676, !tbaa !4789, !ctir !282
  %cmp18 = icmp eq i64 %24, %25, !dbg !6676
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !6676

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6676, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !6676, !ctir !420
  %27 = load i64, i64* %st_dev, align 8, !dbg !6676, !tbaa !4768, !ctir !280
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !6676, !ctir !421
  %28 = load i64, i64* %st_dev20, align 8, !dbg !6676, !tbaa !4768, !ctir !280
  %cmp21 = icmp eq i64 %27, %28, !dbg !6676
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !6677
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !6677
  store i1 %30, i1* %retval, align 1, !dbg !6678
  br label %return, !dbg !6678

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !6679
  ret i1 %31, !dbg !6679
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !6680 !ctir !507 {
entry:
  %src.addr = alloca i8*, align 8, !ctir !177
  %dst.addr = alloca i8*, align 8, !ctir !177
  %backup_dst_name.addr = alloca i8*, align 8, !ctir !177
  store i8* %src, i8** %src.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6683, metadata !DIExpression()), !dbg !6684
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !6685, metadata !DIExpression()), !dbg !6686
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6687, !tbaa !2668
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !6687
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6688, !tbaa !2668
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !6688
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.160, i64 0, i64 0), i8* %call, i8* %call1), !dbg !6689
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6690, !tbaa !2668
  %tobool = icmp ne i8* %2, null, !dbg !6690
  br i1 %tobool, label %if.then, label %if.end, !dbg !6692

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.161, i64 0, i64 0)) #9, !dbg !6693
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6694, !tbaa !2668
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !6694
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !6695
  br label %if.end, !dbg !6695

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6696
  ret void, !dbg !6697
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #10 !dbg !6698 !ctir !509 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %ancestors.addr = alloca %struct.dir_list*, align 8, !ctir !511
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !6699, metadata !DIExpression()), !dbg !6700
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6701, metadata !DIExpression()), !dbg !6702
  br label %while.cond, !dbg !6703

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6704, !tbaa !2668
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !6705
  br i1 %cmp, label %while.body, label %while.end, !dbg !6703

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6706, !tbaa !2668
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !6709, !ctir !512
  %2 = load i64, i64* %ino, align 8, !dbg !6709, !tbaa !5439, !ctir !447
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6710, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !6711, !ctir !420
  %4 = load i64, i64* %st_ino, align 8, !dbg !6711, !tbaa !4789, !ctir !282
  %cmp1 = icmp eq i64 %2, %4, !dbg !6712
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6713

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6714, !tbaa !2668
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !6715, !ctir !512
  %6 = load i64, i64* %dev, align 8, !dbg !6715, !tbaa !5444, !ctir !449
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6716, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !6717, !ctir !420
  %8 = load i64, i64* %st_dev, align 8, !dbg !6717, !tbaa !4768, !ctir !280
  %cmp2 = icmp eq i64 %6, %8, !dbg !6718
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6719

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6720
  br label %return, !dbg !6720

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6721, !tbaa !2668
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !6722, !ctir !512
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !6722, !tbaa !5433, !ctir !442
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !6723, !tbaa !2668
  br label %while.cond, !dbg !6703, !llvm.loop !6724

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !6726
  br label %return, !dbg !6726

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !6727
  ret i1 %11, !dbg !6727
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !6728 !ctir !513 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_name_in.addr = alloca i8*, align 8, !ctir !177
  %dst_name_in.addr = alloca i8*, align 8, !ctir !177
  %new_dst.addr = alloca i8, align 1, !ctir !139
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %ancestors.addr = alloca %struct.dir_list*, align 8, !ctir !442
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8, !ctir !412
  %copy_into_self.addr = alloca i8*, align 8, !ctir !412
  %name_space = alloca i8*, align 8, !ctir !7
  %namep = alloca i8*, align 8, !ctir !7
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !364
  %ok = alloca i8, align 1, !ctir !139
  %new_first_dir_created = alloca i8, align 1, !ctir !139
  %local_copy_into_self = alloca i8, align 1, !ctir !139
  %src_name = alloca i8*, align 8, !ctir !7
  %dst_name = alloca i8*, align 8, !ctir !7
  %first_dir_created = alloca i8, align 1, !ctir !139
  store i8* %src_name_in, i8** %src_name_in.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !6729, metadata !DIExpression()), !dbg !6730
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !6731, metadata !DIExpression()), !dbg !6732
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6733, metadata !DIExpression()), !dbg !6734
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6735, metadata !DIExpression()), !dbg !6736
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6737, metadata !DIExpression()), !dbg !6738
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !6741, metadata !DIExpression()), !dbg !6742
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !6743, metadata !DIExpression()), !dbg !6744
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !6745, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !6747, metadata !DIExpression()), !dbg !6748
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !6749, metadata !DIExpression()), !dbg !6750
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6751, !tbaa !2668
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !6752
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !6752
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !6752, !tbaa.struct !6753
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6754, metadata !DIExpression()), !dbg !6755
  store i8 1, i8* %ok, align 1, !dbg !6755, !tbaa !2762
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6756, !tbaa !2668
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !6757
  store i8* %call, i8** %name_space, align 8, !dbg !6758, !tbaa !2668
  %4 = load i8*, i8** %name_space, align 8, !dbg !6759, !tbaa !2668
  %cmp = icmp eq i8* %4, null, !dbg !6761
  br i1 %cmp, label %if.then, label %if.end, !dbg !6762

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6763
  %5 = load i32, i32* %call1, align 4, !dbg !6763, !tbaa !2655, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.159, i64 0, i64 0)) #9, !dbg !6765
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6766, !tbaa !2668
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6766
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !6767
  store i1 false, i1* %retval, align 1, !dbg !6768
  br label %return, !dbg !6768

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6769, !tbaa !2668
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !6771, !ctir !363
  %8 = load i32, i32* %dereference, align 4, !dbg !6771, !tbaa !3167, !ctir !73
  %cmp4 = icmp eq i32 %8, 3, !dbg !6772
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6773

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !6774, !ctir !364
  store i32 2, i32* %dereference6, align 4, !dbg !6775, !tbaa !3167, !ctir !73
  br label %if.end7, !dbg !6776

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !6777, metadata !DIExpression()), !dbg !6778
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !6778, !tbaa !2762
  %9 = load i8*, i8** %name_space, align 8, !dbg !6779, !tbaa !2668
  store i8* %9, i8** %namep, align 8, !dbg !6780, !tbaa !2668
  br label %while.cond, !dbg !6781

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !6782, !tbaa !2668
  %11 = load i8, i8* %10, align 1, !dbg !6783, !tbaa !3315, !ctir !8
  %conv = sext i8 %11 to i32, !dbg !6783
  %cmp8 = icmp ne i32 %conv, 0, !dbg !6784
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6781

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !6785, metadata !DIExpression()), !dbg !6787
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !6788, metadata !DIExpression()), !dbg !6789
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6790, !tbaa !2668
  %13 = load i8*, i8** %namep, align 8, !dbg !6791, !tbaa !2668
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !6792
  store i8* %call10, i8** %src_name, align 8, !dbg !6789, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !6793, metadata !DIExpression()), !dbg !6794
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !6795, !tbaa !2668
  %15 = load i8*, i8** %namep, align 8, !dbg !6796, !tbaa !2668
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !6797
  store i8* %call11, i8** %dst_name, align 8, !dbg !6794, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !6798, metadata !DIExpression()), !dbg !6799
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6800, !tbaa !2668
  %17 = load i8, i8* %16, align 1, !dbg !6801, !tbaa !2762
  %tobool = trunc i8 %17 to i1, !dbg !6801, !ctir !139
  %frombool12 = zext i1 %tobool to i8, !dbg !6799
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !6799, !tbaa !2762
  %18 = load i8*, i8** %src_name, align 8, !dbg !6802, !tbaa !2668
  %19 = load i8*, i8** %dst_name, align 8, !dbg !6803, !tbaa !2668
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !6804, !tbaa !2762
  %tobool13 = trunc i8 %20 to i1, !dbg !6804
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6805, !tbaa !2668
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6806, !tbaa !2668
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !6807
  %conv15 = zext i1 %call14 to i32, !dbg !6807
  %23 = load i8, i8* %ok, align 1, !dbg !6808, !tbaa !2762
  %tobool16 = trunc i8 %23 to i1, !dbg !6808
  %conv17 = zext i1 %tobool16 to i32, !dbg !6808
  %and = and i32 %conv17, %conv15, !dbg !6808
  %tobool18 = icmp ne i32 %and, 0, !dbg !6808
  %frombool19 = zext i1 %tobool18 to i8, !dbg !6808
  store i8 %frombool19, i8* %ok, align 1, !dbg !6808, !tbaa !2762
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !6809, !tbaa !2762
  %tobool20 = trunc i8 %24 to i1, !dbg !6809
  %conv21 = zext i1 %tobool20 to i32, !dbg !6809
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !6810, !tbaa !2668
  %26 = load i8, i8* %25, align 1, !dbg !6811, !tbaa !2762
  %tobool22 = trunc i8 %26 to i1, !dbg !6811, !ctir !139
  %conv23 = zext i1 %tobool22 to i32, !dbg !6811
  %or = or i32 %conv23, %conv21, !dbg !6811
  %tobool24 = icmp ne i32 %or, 0, !dbg !6811
  %frombool25 = zext i1 %tobool24 to i8, !dbg !6811
  store i8 %frombool25, i8* %25, align 1, !dbg !6811, !tbaa !2762, !ctir !139
  %27 = load i8*, i8** %dst_name, align 8, !dbg !6812, !tbaa !2668
  call void @free(i8* %27) #9, !dbg !6813
  %28 = load i8*, i8** %src_name, align 8, !dbg !6814, !tbaa !2668
  call void @free(i8* %28) #9, !dbg !6815
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !6816, !tbaa !2762
  %tobool26 = trunc i8 %29 to i1, !dbg !6816
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6818

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !6819

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !6820, !tbaa !2762
  %tobool29 = trunc i8 %30 to i1, !dbg !6820
  %conv30 = zext i1 %tobool29 to i32, !dbg !6820
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !6821, !tbaa !2762
  %tobool31 = trunc i8 %31 to i1, !dbg !6821
  %conv32 = zext i1 %tobool31 to i32, !dbg !6821
  %or33 = or i32 %conv32, %conv30, !dbg !6821
  %tobool34 = icmp ne i32 %or33, 0, !dbg !6821
  %frombool35 = zext i1 %tobool34 to i8, !dbg !6821
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !6821, !tbaa !2762
  %32 = load i8*, i8** %namep, align 8, !dbg !6822, !tbaa !2668
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !6823
  %add = add i64 %call36, 1, !dbg !6824
  %33 = load i8*, i8** %namep, align 8, !dbg !6825, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !6825
  store i8* %add.ptr, i8** %namep, align 8, !dbg !6825, !tbaa !2668
  br label %while.cond, !dbg !6781, !llvm.loop !6826

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !6828, !tbaa !2668
  call void @free(i8* %34) #9, !dbg !6829
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !6830, !tbaa !2762
  %tobool37 = trunc i8 %35 to i1, !dbg !6830
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6831, !tbaa !2668
  %frombool38 = zext i1 %tobool37 to i8, !dbg !6832
  store i8 %frombool38, i8* %36, align 1, !dbg !6832, !tbaa !2762, !ctir !139
  %37 = load i8, i8* %ok, align 1, !dbg !6833, !tbaa !2762
  %tobool39 = trunc i8 %37 to i1, !dbg !6833
  store i1 %tobool39, i1* %retval, align 1, !dbg !6834
  br label %return, !dbg !6834

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !6835
  ret i1 %38, !dbg !6835
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !6836 !ctir !515 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %dst_mode.addr = alloca i32, align 4, !ctir !136
  %omitted_permissions.addr = alloca i32, align 4, !ctir !136
  %new_dst.addr = alloca i8*, align 8, !ctir !412
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %buf = alloca i8*, align 8, !ctir !7
  %buf_alloc = alloca i8*, align 8, !ctir !7
  %name_alloc = alloca i8*, align 8, !ctir !7
  %dest_desc = alloca i32, align 4, !ctir !5
  %dest_errno = alloca i32, align 4, !ctir !5
  %source_desc = alloca i32, align 4, !ctir !5
  %src_mode = alloca i32, align 4, !ctir !136
  %sb = alloca %struct.stat, align 8, !ctir !421
  %src_open_sb = alloca %struct.stat, align 8, !ctir !421
  %return_val = alloca i8, align 1, !ctir !139
  %data_copy_required = alloca i8, align 1, !ctir !139
  %open_flags = alloca i32, align 4, !ctir !5
  %open_flags72 = alloca i32, align 4, !ctir !5
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !421
  %clone_ok = alloca i8, align 1, !ctir !139
  %buf_alignment = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %hole_size = alloca i64, align 8, !ctir !52
  %make_holes = alloca i8, align 1, !ctir !139
  %sparse_src = alloca i8, align 1, !ctir !139
  %blcm_max = alloca i64, align 8, !ctir !52
  %blcm = alloca i64, align 8, !ctir !52
  %normal_copy_required = alloca i8, align 1, !ctir !139
  %n_read = alloca i64, align 8, !ctir !358
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !139
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !451
  %tmp = alloca %struct.timespec, align 8, !ctir !435
  %tmp271 = alloca %struct.timespec, align 8, !ctir !435
  %access_changed = alloca i8, align 1, !ctir !139
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6837, metadata !DIExpression()), !dbg !6838
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6839, metadata !DIExpression()), !dbg !6840
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6841, metadata !DIExpression()), !dbg !6842
  store i32 %dst_mode, i32* %dst_mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !6845, metadata !DIExpression()), !dbg !6846
  store i8* %new_dst, i8** %new_dst.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6851, metadata !DIExpression()), !dbg !6852
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !6853, metadata !DIExpression()), !dbg !6854
  store i8* null, i8** %buf_alloc, align 8, !dbg !6854, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !6855, metadata !DIExpression()), !dbg !6856
  store i8* null, i8** %name_alloc, align 8, !dbg !6856, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !6859, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !6861, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !6863, metadata !DIExpression()), !dbg !6864
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6865, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !6866, !ctir !420
  %1 = load i32, i32* %st_mode, align 8, !dbg !6866, !tbaa !2934, !ctir !137
  store i32 %1, i32* %src_mode, align 4, !dbg !6864, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6867, metadata !DIExpression()), !dbg !6868
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !6869, metadata !DIExpression()), !dbg !6870
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !6871, metadata !DIExpression()), !dbg !6872
  store i8 1, i8* %return_val, align 1, !dbg !6872, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !6873, metadata !DIExpression()), !dbg !6874
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6875, !tbaa !2668
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !6876, !ctir !363
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !6876, !tbaa !3222
  %tobool = trunc i8 %3 to i1, !dbg !6876, !ctir !139
  %frombool = zext i1 %tobool to i8, !dbg !6874
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !6874, !tbaa !2762
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !6877, !tbaa !2668
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6878, !tbaa !2668
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !6879, !ctir !363
  %6 = load i32, i32* %dereference, align 4, !dbg !6879, !tbaa !3167, !ctir !73
  %cmp = icmp eq i32 %6, 2, !dbg !6880
  %7 = zext i1 %cmp to i64, !dbg !6878
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !6878
  %or = or i32 0, %cond, !dbg !6881
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !6882
  store i32 %call, i32* %source_desc, align 4, !dbg !6883, !tbaa !2655
  %8 = load i32, i32* %source_desc, align 4, !dbg !6884, !tbaa !2655
  %cmp2 = icmp slt i32 %8, 0, !dbg !6886
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6887

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #16, !dbg !6888
  %9 = load i32, i32* %call3, align 4, !dbg !6888, !tbaa !2655, !ctir !5
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.144, i64 0, i64 0)) #9, !dbg !6890
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !6891, !tbaa !2668
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !6891
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !6892
  store i1 false, i1* %retval, align 1, !dbg !6893
  br label %return, !dbg !6893

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !6894, !tbaa !2655
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #9, !dbg !6896
  %cmp7 = icmp ne i32 %call6, 0, !dbg !6897
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6898

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #16, !dbg !6899
  %12 = load i32, i32* %call9, align 4, !dbg !6899, !tbaa !2655, !ctir !5
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.145, i64 0, i64 0)) #9, !dbg !6901
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !6902, !tbaa !2668
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6902
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !6903
  store i8 0, i8* %return_val, align 1, !dbg !6904, !tbaa !2762
  br label %close_src_desc, !dbg !6905

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6906, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !6906, !ctir !420
  %15 = load i64, i64* %st_ino, align 8, !dbg !6906, !tbaa !4789, !ctir !282
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !6906, !ctir !421
  %16 = load i64, i64* %st_ino13, align 8, !dbg !6906, !tbaa !4789, !ctir !282
  %cmp14 = icmp eq i64 %15, %16, !dbg !6906
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !6906

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6906, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !6906, !ctir !420
  %18 = load i64, i64* %st_dev, align 8, !dbg !6906, !tbaa !4768, !ctir !280
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !6906, !ctir !421
  %19 = load i64, i64* %st_dev15, align 8, !dbg !6906, !tbaa !4768, !ctir !280
  %cmp16 = icmp eq i64 %18, %19, !dbg !6906
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !6908

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.146, i64 0, i64 0)) #9, !dbg !6909
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !6911, !tbaa !2668
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !6911
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !6912
  store i8 0, i8* %return_val, align 1, !dbg !6913, !tbaa !2762
  br label %close_src_desc, !dbg !6914

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !6915, !tbaa !2668
  %22 = load i8, i8* %21, align 1, !dbg !6917, !tbaa !2762
  %tobool21 = trunc i8 %22 to i1, !dbg !6917, !ctir !139
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !6918

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !6919, metadata !DIExpression()), !dbg !6921
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6922, !tbaa !2668
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !6923, !ctir !363
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !6923, !tbaa !3222
  %tobool24 = trunc i8 %24 to i1, !dbg !6923, !ctir !139
  %25 = zext i1 %tobool24 to i64, !dbg !6922
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !6922
  %or26 = or i32 1, %cond25, !dbg !6924
  store i32 %or26, i32* %open_flags, align 4, !dbg !6921, !tbaa !2655
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !6925, !tbaa !2668
  %27 = load i32, i32* %open_flags, align 4, !dbg !6926, !tbaa !2655
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !6927
  store i32 %call27, i32* %dest_desc, align 4, !dbg !6928, !tbaa !2655
  %call28 = call i32* @__errno_location() #16, !dbg !6929
  %28 = load i32, i32* %call28, align 4, !dbg !6929, !tbaa !2655, !ctir !5
  store i32 %28, i32* %dest_errno, align 4, !dbg !6930, !tbaa !2655
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6931, !tbaa !2668
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !6933, !ctir !363
  %30 = load i8, i8* %set_security_context, align 1, !dbg !6933, !tbaa !2886
  %tobool29 = trunc i8 %30 to i1, !dbg !6933, !ctir !139
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !6934

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6935, !tbaa !2668
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !6936, !ctir !363
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !6936, !tbaa !2870
  %tobool30 = trunc i8 %32 to i1, !dbg !6936, !ctir !139
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !6937

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !6938, !tbaa !2655
  %cmp32 = icmp sle i32 0, %33, !dbg !6939
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !6940

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6941, !tbaa !2668
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6944, !tbaa !2668
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !6945, !ctir !363
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !6945, !tbaa !2870
  %tobool35 = trunc i8 %36 to i1, !dbg !6945, !ctir !139
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6946, !tbaa !2668
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !6947
  br i1 %call36, label %if.end41, label %if.then37, !dbg !6948

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6949, !tbaa !2668
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !6952, !ctir !363
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !6952, !tbaa !3269
  %tobool38 = trunc i8 %39 to i1, !dbg !6952, !ctir !139
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6953

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !6954, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !6956

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !6957

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !6958

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !6959, !tbaa !2655
  %cmp43 = icmp slt i32 %40, 0, !dbg !6961
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !6962

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6963, !tbaa !2668
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !6964, !ctir !363
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6964, !tbaa !3175
  %tobool45 = trunc i8 %42 to i1, !dbg !6964, !ctir !139
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !6965

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !6966, !tbaa !2668
  %call47 = call i32 @unlink(i8* %43) #9, !dbg !6969
  %cmp48 = icmp ne i32 %call47, 0, !dbg !6970
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !6971

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #16, !dbg !6972
  %44 = load i32, i32* %call50, align 4, !dbg !6972, !tbaa !2655, !ctir !5
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !6974
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !6975, !tbaa !2668
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !6975
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !6976
  store i8 0, i8* %return_val, align 1, !dbg !6977, !tbaa !2762
  br label %close_src_desc, !dbg !6978

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6979, !tbaa !2668
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !6981, !ctir !363
  %47 = load i8, i8* %verbose, align 2, !dbg !6981, !tbaa !2832
  %tobool54 = trunc i8 %47 to i1, !dbg !6981, !ctir !139
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6982

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6983
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !6984, !tbaa !2668
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !6984
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !6985
  br label %if.end59, !dbg !6985

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !6986, !tbaa !2668
  store i8 1, i8* %49, align 1, !dbg !6987, !tbaa !2762, !ctir !139
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6988, !tbaa !2668
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !6990, !ctir !363
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !6990, !tbaa !2886
  %tobool61 = trunc i8 %51 to i1, !dbg !6990, !ctir !139
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !6991

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !6992, !tbaa !2668
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !6995, !tbaa !2668
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !6996, !tbaa !2655
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !6997, !tbaa !2668
  %56 = load i8, i8* %55, align 1, !dbg !6998, !tbaa !2762
  %tobool63 = trunc i8 %56 to i1, !dbg !6998, !ctir !139
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6999, !tbaa !2668
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !7000
  br i1 %call64, label %if.end66, label %if.then65, !dbg !7001

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !7002, !tbaa !2762
  br label %close_src_desc, !dbg !7004

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !7005

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !7006

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !7007

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !7008, !tbaa !2668
  %59 = load i8, i8* %58, align 1, !dbg !7010, !tbaa !2762
  %tobool70 = trunc i8 %59 to i1, !dbg !7010, !ctir !139
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !7011

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !7012

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !7013), !dbg !7015
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !7016, metadata !DIExpression()), !dbg !7017
  store i32 65, i32* %open_flags72, align 4, !dbg !7017, !tbaa !2655
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7018, !tbaa !2668
  %61 = load i32, i32* %open_flags72, align 4, !dbg !7019, !tbaa !2655
  %or73 = or i32 %61, 128, !dbg !7020
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !7021, !tbaa !2655
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7022, !tbaa !2655
  %neg = xor i32 %63, -1, !dbg !7023
  %and = and i32 %62, %neg, !dbg !7024
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !7025
  store i32 %call74, i32* %dest_desc, align 4, !dbg !7026, !tbaa !2655
  %call75 = call i32* @__errno_location() #16, !dbg !7027
  %64 = load i32, i32* %call75, align 4, !dbg !7027, !tbaa !2655, !ctir !5
  store i32 %64, i32* %dest_errno, align 4, !dbg !7028, !tbaa !2655
  %65 = load i32, i32* %dest_desc, align 4, !dbg !7029, !tbaa !2655
  %cmp76 = icmp slt i32 %65, 0, !dbg !7031
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !7032

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !7033, !tbaa !2655
  %cmp78 = icmp eq i32 %66, 17, !dbg !7034
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !7035

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7036, !tbaa !2668
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !7037, !ctir !363
  %68 = load i8, i8* %move_mode, align 8, !dbg !7037, !tbaa !3187
  %tobool80 = trunc i8 %68 to i1, !dbg !7037, !ctir !139
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !7038

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !7039, metadata !DIExpression()), !dbg !7041
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !7042, !tbaa !2668
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #9, !dbg !7044
  %cmp83 = icmp eq i32 %call82, 0, !dbg !7045
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !7046

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !7047, !ctir !421
  %70 = load i32, i32* %st_mode85, align 8, !dbg !7047, !tbaa !2934, !ctir !137
  %and86 = and i32 %70, 61440, !dbg !7047
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !7047
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !7048

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7049, !tbaa !2668
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !7052, !ctir !363
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !7052, !tbaa !3261
  %tobool89 = trunc i8 %72 to i1, !dbg !7052, !ctir !139
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !7053

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !7054, !tbaa !2668
  %74 = load i32, i32* %open_flags72, align 4, !dbg !7056, !tbaa !2655
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !7057, !tbaa !2655
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7058, !tbaa !2655
  %neg91 = xor i32 %76, -1, !dbg !7059
  %and92 = and i32 %75, %neg91, !dbg !7060
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !7061
  store i32 %call93, i32* %dest_desc, align 4, !dbg !7062, !tbaa !2655
  %call94 = call i32* @__errno_location() #16, !dbg !7063
  %77 = load i32, i32* %call94, align 4, !dbg !7063, !tbaa !2655, !ctir !5
  store i32 %77, i32* %dest_errno, align 4, !dbg !7064, !tbaa !2655
  br label %if.end97, !dbg !7065

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63.147, i64 0, i64 0)) #9, !dbg !7066
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !7068, !tbaa !2668
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !7068
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !7069
  store i8 0, i8* %return_val, align 1, !dbg !7070, !tbaa !2762
  br label %close_src_desc, !dbg !7071

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !7072

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !7073

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !7074, !tbaa !2655
  %cmp100 = icmp slt i32 %79, 0, !dbg !7076
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !7077

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !7078, !tbaa !2655
  %cmp102 = icmp eq i32 %80, 21, !dbg !7079
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !7080

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !7081, !tbaa !2668
  %82 = load i8, i8* %81, align 1, !dbg !7082, !tbaa !3315, !ctir !178
  %conv = sext i8 %82 to i32, !dbg !7082
  %tobool104 = icmp ne i32 %conv, 0, !dbg !7082
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !7083

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !7084, !tbaa !2668
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !7085, !tbaa !2668
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !7086
  %sub = sub i64 %call106, 1, !dbg !7087
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !7084, !ctir !177
  %85 = load i8, i8* %arrayidx, align 1, !dbg !7084, !tbaa !3315
  %conv107 = sext i8 %85 to i32, !dbg !7084
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !7088
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7089

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !7090, !tbaa !2655
  br label %if.end111, !dbg !7091

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !7092

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !7093, !tbaa !2655
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !7095, !tbaa !2655
  %cmp114 = icmp slt i32 %86, 0, !dbg !7097
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !7098

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !7099, !tbaa !2655
  %cmp117 = icmp eq i32 %87, 2, !dbg !7102
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !7103

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !7104, !tbaa !2668
  %89 = load i8, i8* %88, align 1, !dbg !7105, !tbaa !2762
  %tobool120 = trunc i8 %89 to i1, !dbg !7105, !ctir !139
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !7106

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7107, !tbaa !2668
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !7108, !ctir !363
  %91 = load i8, i8* %move_mode122, align 8, !dbg !7108, !tbaa !3187
  %tobool123 = trunc i8 %91 to i1, !dbg !7108, !ctir !139
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !7109

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !7110, !tbaa !2668
  store i8 1, i8* %92, align 1, !dbg !7112, !tbaa !2762, !ctir !139
  br label %open_with_O_CREAT, !dbg !7113

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !7114, !tbaa !2655
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.148, i64 0, i64 0)) #9, !dbg !7115
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7116, !tbaa !2668
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7116
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !7117
  store i8 0, i8* %return_val, align 1, !dbg !7118, !tbaa !2762
  br label %close_src_desc, !dbg !7119

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !7120, !tbaa !2655
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #9, !dbg !7122
  %cmp130 = icmp ne i32 %call129, 0, !dbg !7123
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !7124

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #16, !dbg !7125
  %96 = load i32, i32* %call133, align 4, !dbg !7125, !tbaa !2655, !ctir !5
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.145, i64 0, i64 0)) #9, !dbg !7127
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !7128, !tbaa !2668
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !7128
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !7129
  store i8 0, i8* %return_val, align 1, !dbg !7130, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !7131

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !7132, !tbaa !2762
  %tobool137 = trunc i8 %98 to i1, !dbg !7132
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !7134

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7135, !tbaa !2668
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !7136, !ctir !363
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !7136, !tbaa !3163, !ctir !92
  %tobool140 = icmp ne i32 %100, 0, !dbg !7135
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !7137

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !7138, metadata !DIExpression()), !dbg !7140
  %101 = load i32, i32* %dest_desc, align 4, !dbg !7141, !tbaa !2655
  %102 = load i32, i32* %source_desc, align 4, !dbg !7142, !tbaa !2655
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !7143
  %cmp143 = icmp eq i32 %call142, 0, !dbg !7144
  %frombool145 = zext i1 %cmp143 to i8, !dbg !7140
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !7140, !tbaa !2762
  %103 = load i8, i8* %clone_ok, align 1, !dbg !7145, !tbaa !2762
  %tobool146 = trunc i8 %103 to i1, !dbg !7145
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !7147

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7148, !tbaa !2668
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !7149, !ctir !363
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !7149, !tbaa !3163, !ctir !92
  %cmp150 = icmp eq i32 %105, 2, !dbg !7150
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !7151

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !7152, !tbaa !2762
  %tobool153 = trunc i8 %106 to i1, !dbg !7152
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !7155

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #16, !dbg !7156
  %107 = load i32, i32* %call155, align 4, !dbg !7156, !tbaa !2655, !ctir !5
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65.149, i64 0, i64 0)) #9, !dbg !7158
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !7159, !tbaa !2668
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !7159
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !7160, !tbaa !2668
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !7160
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !7161
  store i8 0, i8* %return_val, align 1, !dbg !7162, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !7163

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !7164, !tbaa !2762
  br label %if.end160, !dbg !7165

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !7166

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !7167, !tbaa !2762
  %tobool162 = trunc i8 %110 to i1, !dbg !7167
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !7169

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !7170, metadata !DIExpression()), !dbg !7172
  %call164 = call i32 @getpagesize() #16, !dbg !7173
  %conv165 = sext i32 %call164 to i64, !dbg !7173
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !7172, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !7174, metadata !DIExpression()), !dbg !7175
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !7176
  store i64 %call166, i64* %buf_size, align 8, !dbg !7175, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !7177, metadata !DIExpression()), !dbg !7178
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7179, !ctir !421
  %111 = load i64, i64* %st_blksize, align 8, !dbg !7179, !tbaa !7180, !ctir !292
  %cmp167 = icmp slt i64 0, %111, !dbg !7179
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !7179

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7179, !ctir !421
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !7179, !tbaa !7180, !ctir !292
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !7179
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !7179

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7179, !ctir !421
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !7179, !tbaa !7180, !ctir !292
  br label %cond.end, !dbg !7179

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !7179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !7179
  store i64 %cond174, i64* %hole_size, align 8, !dbg !7178, !tbaa !3308
  %114 = load i32, i32* %source_desc, align 4, !dbg !7181, !tbaa !2655
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !7182
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !7183, metadata !DIExpression()), !dbg !7184
  store i8 0, i8* %make_holes, align 1, !dbg !7184, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !7185, metadata !DIExpression()), !dbg !7186
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !7187
  %frombool176 = zext i1 %call175 to i8, !dbg !7186
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !7186, !tbaa !2762
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7188, !ctir !421
  %115 = load i32, i32* %st_mode177, align 8, !dbg !7188, !tbaa !2934, !ctir !137
  %and178 = and i32 %115, 61440, !dbg !7188
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !7188
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !7190

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7191, !tbaa !2668
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !7194, !ctir !363
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !7194, !tbaa !3238, !ctir !86
  %cmp182 = icmp eq i32 %117, 3, !dbg !7195
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !7196

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !7197, !tbaa !2762
  br label %if.end185, !dbg !7198

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7199, !tbaa !2668
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !7201, !ctir !363
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !7201, !tbaa !3238, !ctir !86
  %cmp187 = icmp eq i32 %119, 2, !dbg !7202
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !7203

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !7204, !tbaa !2762
  %tobool190 = trunc i8 %120 to i1, !dbg !7204
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !7205

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !7206, !tbaa !2762
  br label %if.end193, !dbg !7207

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !7208

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !7209, !tbaa !2762
  %tobool195 = trunc i8 %121 to i1, !dbg !7209
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !7211

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !7212, metadata !DIExpression()), !dbg !7214
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !7215, !tbaa !3308
  %sub197 = sub i64 9223372036854775807, %122, !dbg !7216
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !7214, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !7217, metadata !DIExpression()), !dbg !7218
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !7219
  %123 = load i64, i64* %buf_size, align 8, !dbg !7220, !tbaa !3308
  %124 = load i64, i64* %blcm_max, align 8, !dbg !7221, !tbaa !3308
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #16, !dbg !7222
  store i64 %call199, i64* %blcm, align 8, !dbg !7218, !tbaa !3308
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !7223, !ctir !421
  %125 = load i32, i32* %st_mode200, align 8, !dbg !7223, !tbaa !2934, !ctir !137
  %and201 = and i32 %125, 61440, !dbg !7223
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !7223
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !7225

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7226, !ctir !421
  %126 = load i64, i64* %st_size, align 8, !dbg !7226, !tbaa !4037, !ctir !30
  %127 = load i64, i64* %buf_size, align 8, !dbg !7227, !tbaa !3308
  %cmp205 = icmp ult i64 %126, %127, !dbg !7228
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !7229

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7230, !ctir !421
  %128 = load i64, i64* %st_size208, align 8, !dbg !7230, !tbaa !4037, !ctir !30
  %add = add nsw i64 %128, 1, !dbg !7231
  store i64 %add, i64* %buf_size, align 8, !dbg !7232, !tbaa !3308
  br label %if.end209, !dbg !7233

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !7234, !tbaa !3308
  %sub210 = sub i64 %129, 1, !dbg !7235
  %130 = load i64, i64* %buf_size, align 8, !dbg !7236, !tbaa !3308
  %add211 = add i64 %130, %sub210, !dbg !7236
  store i64 %add211, i64* %buf_size, align 8, !dbg !7236, !tbaa !3308
  %131 = load i64, i64* %buf_size, align 8, !dbg !7237, !tbaa !3308
  %132 = load i64, i64* %blcm, align 8, !dbg !7238, !tbaa !3308
  %rem = urem i64 %131, %132, !dbg !7239
  %133 = load i64, i64* %buf_size, align 8, !dbg !7240, !tbaa !3308
  %sub212 = sub i64 %133, %rem, !dbg !7240
  store i64 %sub212, i64* %buf_size, align 8, !dbg !7240, !tbaa !3308
  %134 = load i64, i64* %buf_size, align 8, !dbg !7241, !tbaa !3308
  %cmp213 = icmp eq i64 %134, 0, !dbg !7243
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !7244

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !7245, !tbaa !3308
  %136 = load i64, i64* %buf_size, align 8, !dbg !7246, !tbaa !3308
  %cmp216 = icmp ult i64 %135, %136, !dbg !7247
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !7248

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !7249, !tbaa !3308
  store i64 %137, i64* %buf_size, align 8, !dbg !7250, !tbaa !3308
  br label %if.end219, !dbg !7251

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !7252

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !7253, !tbaa !3308
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !7254, !tbaa !3308
  %add221 = add i64 %138, %139, !dbg !7255
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !7256
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !7257, !tbaa !2668
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !7258, !tbaa !2668
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !7259, !tbaa !3308
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !7260
  store i8* %call223, i8** %buf, align 8, !dbg !7261, !tbaa !2668
  %142 = load i8, i8* %sparse_src, align 1, !dbg !7262, !tbaa !2762
  %tobool224 = trunc i8 %142 to i1, !dbg !7262
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !7264

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !7265, metadata !DIExpression()), !dbg !7267
  %143 = load i32, i32* %source_desc, align 4, !dbg !7268, !tbaa !2655
  %144 = load i32, i32* %dest_desc, align 4, !dbg !7270, !tbaa !2655
  %145 = load i8*, i8** %buf, align 8, !dbg !7271, !tbaa !2668
  %146 = load i64, i64* %buf_size, align 8, !dbg !7272, !tbaa !3308
  %147 = load i64, i64* %hole_size, align 8, !dbg !7273, !tbaa !3308
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7274, !ctir !421
  %148 = load i64, i64* %st_size226, align 8, !dbg !7274, !tbaa !4037, !ctir !30
  %149 = load i8, i8* %make_holes, align 1, !dbg !7275, !tbaa !2762
  %tobool227 = trunc i8 %149 to i1, !dbg !7275
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !7275

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7276, !tbaa !2668
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !7277, !ctir !363
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !7277, !tbaa !3238, !ctir !86
  br label %cond.end232, !dbg !7275

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !7275

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !7275
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !7278, !tbaa !2668
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !7279, !tbaa !2668
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !7280
  br i1 %call234, label %if.then235, label %if.end236, !dbg !7281

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !7282

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !7283, !tbaa !2762
  %tobool237 = trunc i8 %154 to i1, !dbg !7283
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !7285

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !7286, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !7288

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !7289

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7290, metadata !DIExpression()), !dbg !7291
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7292, metadata !DIExpression()), !dbg !7293
  %155 = load i32, i32* %source_desc, align 4, !dbg !7294, !tbaa !2655
  %156 = load i32, i32* %dest_desc, align 4, !dbg !7296, !tbaa !2655
  %157 = load i8*, i8** %buf, align 8, !dbg !7297, !tbaa !2668
  %158 = load i64, i64* %buf_size, align 8, !dbg !7298, !tbaa !3308
  %159 = load i8, i8* %make_holes, align 1, !dbg !7299, !tbaa !2762
  %tobool241 = trunc i8 %159 to i1, !dbg !7299
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !7299

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !7300, !tbaa !3308
  br label %cond.end245, !dbg !7299

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !7299

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !7299
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7301, !tbaa !2668
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !7302, !ctir !363
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !7302, !tbaa !3238, !ctir !86
  %cmp248 = icmp eq i32 %162, 3, !dbg !7303
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !7304, !tbaa !2668
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !7305, !tbaa !2668
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !7306
  br i1 %call250, label %if.else252, label %if.then251, !dbg !7307

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !7308, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !7310

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7311, !tbaa !2762
  %tobool253 = trunc i8 %165 to i1, !dbg !7311
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !7313

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !7314, !tbaa !2655
  %167 = load i64, i64* %n_read, align 8, !dbg !7315, !tbaa !3308
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #9, !dbg !7316
  %cmp257 = icmp slt i32 %call256, 0, !dbg !7317
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !7318

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #16, !dbg !7319
  %168 = load i32, i32* %call260, align 4, !dbg !7319, !tbaa !2655, !ctir !5
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.150, i64 0, i64 0)) #9, !dbg !7321
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !7322, !tbaa !2668
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !7322
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !7323
  store i8 0, i8* %return_val, align 1, !dbg !7324, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !7325

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !7326

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !7167

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !7327), !dbg !7328
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7329, !tbaa !2668
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !7331, !ctir !363
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !7331, !tbaa !2846
  %tobool266 = trunc i8 %171 to i1, !dbg !7331, !ctir !139
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !7332

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !7333, metadata !DIExpression()), !dbg !7335
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7336, !ctir !451
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7337, !tbaa !2668
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !7338
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !7338
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !7338
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !7338
  store i64 %175, i64* %174, align 8, !dbg !7338
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !7338
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !7338
  store i64 %177, i64* %176, align 8, !dbg !7338
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !7338
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !7338
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !7338, !tbaa.struct !3817
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !7339, !ctir !451
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7340, !tbaa !2668
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !7341
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !7341
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !7341
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !7341
  store i64 %183, i64* %182, align 8, !dbg !7341
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !7341
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !7341
  store i64 %185, i64* %184, align 8, !dbg !7341
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !7341
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !7341
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !7341, !tbaa.struct !3817
  %188 = load i32, i32* %dest_desc, align 4, !dbg !7342, !tbaa !2655
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !7344, !tbaa !2668
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7345
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !7346
  %cmp274 = icmp ne i32 %call273, 0, !dbg !7347
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !7348

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #16, !dbg !7349
  %190 = load i32, i32* %call277, align 4, !dbg !7349, !tbaa !2655, !ctir !5
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !7351
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !7352, !tbaa !2668
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !7352
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !7353
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7354, !tbaa !2668
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !7356, !ctir !363
  %193 = load i8, i8* %require_preserve, align 4, !dbg !7356, !tbaa !3226
  %tobool280 = trunc i8 %193 to i1, !dbg !7356, !ctir !139
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !7357

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !7358, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !7360

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !7361

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !7362

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7363, !tbaa !2668
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !7365, !ctir !363
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !7365, !tbaa !3199
  %tobool285 = trunc i8 %195 to i1, !dbg !7365, !ctir !139
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !7366

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7367, !tbaa !2668
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !7367, !ctir !420
  %197 = load i32, i32* %st_uid, align 4, !dbg !7367, !tbaa !4064, !ctir !125
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !7367, !ctir !421
  %198 = load i32, i32* %st_uid288, align 4, !dbg !7367, !tbaa !4064, !ctir !125
  %cmp289 = icmp eq i32 %197, %198, !dbg !7367
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !7367

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7367, !tbaa !2668
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !7367, !ctir !420
  %200 = load i32, i32* %st_gid, align 8, !dbg !7367, !tbaa !4093, !ctir !127
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !7367, !ctir !421
  %201 = load i32, i32* %st_gid292, align 8, !dbg !7367, !tbaa !4093, !ctir !127
  %cmp293 = icmp eq i32 %200, %201, !dbg !7367
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !7368

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7369, !tbaa !2668
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !7371, !tbaa !2668
  %204 = load i32, i32* %dest_desc, align 4, !dbg !7372, !tbaa !2655
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7373, !tbaa !2668
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !7374, !tbaa !2668
  %207 = load i8, i8* %206, align 1, !dbg !7375, !tbaa !2762
  %tobool296 = trunc i8 %207 to i1, !dbg !7375, !ctir !139
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !7376
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !7377

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !7378, !tbaa !2762
  br label %close_src_and_dst_desc, !dbg !7380

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !7381, !tbaa !2655
  %and299 = and i32 %208, -3585, !dbg !7381
  store i32 %and299, i32* %src_mode, align 4, !dbg !7381, !tbaa !2655
  br label %sw.epilog, !dbg !7382

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !7383

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7384, !tbaa !2668
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !7386, !ctir !363
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !7386, !tbaa !3279
  %tobool301 = trunc i8 %210 to i1, !dbg !7386, !ctir !139
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !7387

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !7388, metadata !DIExpression()), !dbg !7390
  store i8 0, i8* %access_changed, align 1, !dbg !7390, !tbaa !2762
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7391, !ctir !421
  %211 = load i32, i32* %st_mode303, align 8, !dbg !7391, !tbaa !2934, !ctir !137
  %and304 = and i32 %211, 128, !dbg !7393
  %tobool305 = icmp ne i32 %and304, 0, !dbg !7393
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !7394

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #9, !dbg !7395
  %cmp308 = icmp ne i32 %call307, 0, !dbg !7396
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !7397

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !7398, !tbaa !2655
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !7400, !tbaa !2668
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !7401
  %cmp312 = icmp eq i32 %call311, 0, !dbg !7402
  %frombool314 = zext i1 %cmp312 to i8, !dbg !7403
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !7403, !tbaa !2762
  br label %if.end315, !dbg !7404

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !7405, !tbaa !2668
  %215 = load i32, i32* %source_desc, align 4, !dbg !7407, !tbaa !2655
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !7408, !tbaa !2668
  %217 = load i32, i32* %dest_desc, align 4, !dbg !7409, !tbaa !2655
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7410, !tbaa !2668
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !7411
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !7412

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7413, !tbaa !2668
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !7414, !ctir !363
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7414, !tbaa !3230
  %tobool318 = trunc i8 %220 to i1, !dbg !7414, !ctir !139
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !7415

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !7416, !tbaa !2762
  br label %if.end321, !dbg !7417

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !7418, !tbaa !2762
  %tobool322 = trunc i8 %221 to i1, !dbg !7418
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !7420

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !7421, !tbaa !2655
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !7422, !tbaa !2668
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !7423, !tbaa !2655
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7424, !tbaa !2655
  %neg324 = xor i32 %225, -1, !dbg !7425
  %and325 = and i32 %224, %neg324, !dbg !7426
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !7427
  br label %if.end327, !dbg !7427

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7428

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7429, !tbaa !2668
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7430, !tbaa !2655
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7431, !tbaa !2668
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7432
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7433, !tbaa !2668
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7435, !ctir !363
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7435, !tbaa !3207
  %tobool329 = trunc i8 %230 to i1, !dbg !7435, !ctir !139
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7436

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7437, !tbaa !2668
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7438, !ctir !363
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7438, !tbaa !3187
  %tobool333 = trunc i8 %232 to i1, !dbg !7438, !ctir !139
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7439

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7440, !tbaa !2668
  %234 = load i32, i32* %source_desc, align 4, !dbg !7443, !tbaa !2655
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7444, !tbaa !2668
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7445, !tbaa !2655
  %237 = load i32, i32* %src_mode, align 4, !dbg !7446, !tbaa !2655
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7447
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7448
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7449

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7450, !tbaa !2668
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7451, !ctir !363
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7451, !tbaa !3226
  %tobool341 = trunc i8 %239 to i1, !dbg !7451, !ctir !139
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7452

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7453, !tbaa !2762
  br label %if.end344, !dbg !7454

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7455

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7456, !tbaa !2668
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7458, !ctir !363
  %241 = load i8, i8* %set_mode, align 1, !dbg !7458, !tbaa !3249
  %tobool346 = trunc i8 %241 to i1, !dbg !7458, !ctir !139
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7459

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7460, !tbaa !2668
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7463, !tbaa !2655
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7464, !tbaa !2668
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7465, !ctir !363
  %245 = load i32, i32* %mode, align 8, !dbg !7465, !tbaa !3253, !ctir !136
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7466
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7467
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7468

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7469, !tbaa !2762
  br label %if.end352, !dbg !7470

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7471

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7472, !tbaa !2668
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7474, !ctir !363
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7474, !tbaa !3214
  %tobool354 = trunc i8 %247 to i1, !dbg !7474, !ctir !139
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7475

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7476, !tbaa !2668
  %249 = load i8, i8* %248, align 1, !dbg !7477, !tbaa !2762
  %tobool357 = trunc i8 %249 to i1, !dbg !7477, !ctir !139
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7478

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7479, !tbaa !2668
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7482, !tbaa !2655
  %call360 = call i32 @cached_umask(), !dbg !7483
  %neg361 = xor i32 %call360, -1, !dbg !7484
  %and362 = and i32 438, %neg361, !dbg !7485
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7486
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7487
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7488

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7489, !tbaa !2762
  br label %if.end367, !dbg !7490

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7491

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7492, !tbaa !2655
  %tobool369 = icmp ne i32 %252, 0, !dbg !7492
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7494

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7495
  %neg372 = xor i32 %call371, -1, !dbg !7497
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7498, !tbaa !2655
  %and373 = and i32 %253, %neg372, !dbg !7498
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7498, !tbaa !2655
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7499, !tbaa !2655
  %tobool374 = icmp ne i32 %254, 0, !dbg !7499
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7501

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7502, !tbaa !2655
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7503, !tbaa !2668
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7504, !tbaa !2655
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7505
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7506
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7507

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #16, !dbg !7508
  %258 = load i32, i32* %call380, align 4, !dbg !7508, !tbaa !2655, !ctir !5
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !7510
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7511, !tbaa !2668
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7511
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7512
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7513, !tbaa !2668
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7515, !ctir !363
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7515, !tbaa !3226
  %tobool384 = trunc i8 %261 to i1, !dbg !7515, !ctir !139
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7516

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7517, !tbaa !2762
  br label %if.end386, !dbg !7518

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7519

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7520

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7438

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7521), !dbg !7522
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7523, !tbaa !2655
  %call392 = call i32 @close(i32 %262), !dbg !7525
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7526
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7527

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #16, !dbg !7528
  %263 = load i32, i32* %call396, align 4, !dbg !7528, !tbaa !2655, !ctir !5
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.151, i64 0, i64 0)) #9, !dbg !7530
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7531, !tbaa !2668
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7531
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7532
  store i8 0, i8* %return_val, align 1, !dbg !7533, !tbaa !2762
  br label %if.end399, !dbg !7534

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7535

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7536), !dbg !7537
  %265 = load i32, i32* %source_desc, align 4, !dbg !7538, !tbaa !2655
  %call400 = call i32 @close(i32 %265), !dbg !7540
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7541
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7542

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #16, !dbg !7543
  %266 = load i32, i32* %call404, align 4, !dbg !7543, !tbaa !2655, !ctir !5
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.151, i64 0, i64 0)) #9, !dbg !7545
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7546, !tbaa !2668
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7546
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7547
  store i8 0, i8* %return_val, align 1, !dbg !7548, !tbaa !2762
  br label %if.end407, !dbg !7549

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7550, !tbaa !2668
  call void @free(i8* %268) #9, !dbg !7551
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7552, !tbaa !2668
  call void @free(i8* %269) #9, !dbg !7553
  %270 = load i8, i8* %return_val, align 1, !dbg !7554, !tbaa !2762
  %tobool408 = trunc i8 %270 to i1, !dbg !7554
  store i1 %tobool408, i1* %retval, align 1, !dbg !7555
  br label %return, !dbg !7555

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7556
  ret i1 %271, !dbg !7556
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7557 !ctir !197 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7558
  %cmp = icmp ne i32 %call, 0, !dbg !7560
  br i1 %cmp, label %if.then, label %if.end, !dbg !7561

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7562
  %0 = load i32, i32* %call1, align 4, !dbg !7562, !tbaa !2655, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75.143, i64 0, i64 0)) #9, !dbg !7562
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7562
  unreachable, !dbg !7562

if.end:                                           ; preds = %entry
  ret void, !dbg !7563
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #10 !dbg !7564 !ctir !413 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7565, metadata !DIExpression()), !dbg !7566
  %call = call i32* @__errno_location() #16, !dbg !7567
  %0 = load i32, i32* %call, align 4, !dbg !7567, !tbaa !2655, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !7568
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7569

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7570
  %1 = load i32, i32* %call1, align 4, !dbg !7570, !tbaa !2655, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !7571
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7572

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7573, !tbaa !2668
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7574, !ctir !363
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7574, !tbaa !7575
  %tobool = trunc i8 %3 to i1, !dbg !7574, !ctir !139
  %lnot = xor i1 %tobool, true, !dbg !7576
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7577
  ret i1 %4, !dbg !7578
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7579 !ctir !568 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !570
  %err = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7582, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7584, metadata !DIExpression()), !dbg !7585
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7586, !tbaa !2668
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7587, !tbaa !2668
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7588
  store i32 %call, i32* %err, align 4, !dbg !7585, !tbaa !2655
  %2 = load i32, i32* %err, align 4, !dbg !7589, !tbaa !2655
  %tobool = icmp ne i32 %2, 0, !dbg !7589
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7591

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7592
  %3 = load i32, i32* %call1, align 4, !dbg !7592, !tbaa !2655, !ctir !5
  %cmp = icmp eq i32 %3, 38, !dbg !7593
  br i1 %cmp, label %if.then, label %if.end, !dbg !7594

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !7595, !tbaa !2655
  br label %if.end, !dbg !7596

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !7597, !tbaa !2655
  ret i32 %4, !dbg !7598
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !7599 !ctir !572 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %new_dst.addr = alloca i8, align 1, !ctir !139
  %dst_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  %uid = alloca i32, align 4, !ctir !124
  %gid = alloca i32, align 4, !ctir !126
  %old_mode = alloca i32, align 4, !ctir !136
  %new_mode = alloca i32, align 4, !ctir !136
  %restrictive_temp_mode = alloca i32, align 4, !ctir !136
  %saved_errno = alloca i32, align 4, !ctir !5
  %__x = alloca i32, align 4, !ctir !5
  %saved_errno60 = alloca i32, align 4, !ctir !5
  %__x62 = alloca i32, align 4, !ctir !5
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7600, metadata !DIExpression()), !dbg !7601
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7604, metadata !DIExpression()), !dbg !7605
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7606, metadata !DIExpression()), !dbg !7607
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7608, metadata !DIExpression()), !dbg !7609
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !7610, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7612, metadata !DIExpression()), !dbg !7613
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7614, !tbaa !2668
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !7615, !ctir !420
  %1 = load i32, i32* %st_uid, align 4, !dbg !7615, !tbaa !4064, !ctir !125
  store i32 %1, i32* %uid, align 4, !dbg !7613, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !7616, metadata !DIExpression()), !dbg !7617
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7618, !tbaa !2668
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !7619, !ctir !420
  %3 = load i32, i32* %st_gid, align 8, !dbg !7619, !tbaa !4093, !ctir !127
  store i32 %3, i32* %gid, align 4, !dbg !7617, !tbaa !2655
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !7620, !tbaa !2762
  %tobool = trunc i8 %4 to i1, !dbg !7620
  br i1 %tobool, label %if.end26, label %land.lhs.true, !dbg !7622

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7623, !tbaa !2668
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !7624, !ctir !363
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !7624, !tbaa !3207
  %tobool1 = trunc i8 %6 to i1, !dbg !7624, !ctir !139
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7625

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7626, !tbaa !2668
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !7627, !ctir !363
  %8 = load i8, i8* %move_mode, align 8, !dbg !7627, !tbaa !3187
  %tobool2 = trunc i8 %8 to i1, !dbg !7627, !ctir !139
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !7628

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7629, !tbaa !2668
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !7630, !ctir !363
  %10 = load i8, i8* %set_mode, align 1, !dbg !7630, !tbaa !3249
  %tobool4 = trunc i8 %10 to i1, !dbg !7630, !ctir !139
  br i1 %tobool4, label %if.then, label %if.end26, !dbg !7631

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !7632, metadata !DIExpression()), !dbg !7634
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !7635, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !7636, !ctir !420
  %12 = load i32, i32* %st_mode, align 8, !dbg !7636, !tbaa !2934, !ctir !137
  store i32 %12, i32* %old_mode, align 4, !dbg !7634, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !7637, metadata !DIExpression()), !dbg !7638
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7639, !tbaa !2668
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !7640, !ctir !363
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !7640, !tbaa !3207
  %tobool6 = trunc i8 %14 to i1, !dbg !7640, !ctir !139
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !7641

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7642, !tbaa !2668
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !7643, !ctir !363
  %16 = load i8, i8* %move_mode8, align 8, !dbg !7643, !tbaa !3187
  %tobool9 = trunc i8 %16 to i1, !dbg !7643, !ctir !139
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !7639

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7644, !tbaa !2668
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !7645, !ctir !420
  %18 = load i32, i32* %st_mode10, align 8, !dbg !7645, !tbaa !2934, !ctir !137
  br label %cond.end, !dbg !7639

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7646, !tbaa !2668
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !7647, !ctir !363
  %20 = load i32, i32* %mode, align 8, !dbg !7647, !tbaa !3253, !ctir !136
  br label %cond.end, !dbg !7639

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !7639
  store i32 %cond, i32* %new_mode, align 4, !dbg !7638, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !7648, metadata !DIExpression()), !dbg !7649
  %21 = load i32, i32* %old_mode, align 4, !dbg !7650, !tbaa !2655
  %22 = load i32, i32* %new_mode, align 4, !dbg !7651, !tbaa !2655
  %and = and i32 %21, %22, !dbg !7652
  %and11 = and i32 %and, 448, !dbg !7653
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !7649, !tbaa !2655
  %23 = load i32, i32* %old_mode, align 4, !dbg !7654, !tbaa !2655
  %and12 = and i32 %23, 4095, !dbg !7656
  %24 = load i32, i32* %new_mode, align 4, !dbg !7657, !tbaa !2655
  %neg = xor i32 %24, -1, !dbg !7658
  %or = or i32 %neg, 2048, !dbg !7659
  %or13 = or i32 %or, 1024, !dbg !7660
  %or14 = or i32 %or13, 512, !dbg !7661
  %and15 = and i32 %and12, %or14, !dbg !7662
  %tobool16 = icmp ne i32 %and15, 0, !dbg !7662
  br i1 %tobool16, label %land.lhs.true17, label %if.end25, !dbg !7663

land.lhs.true17:                                  ; preds = %cond.end
  %25 = load i8*, i8** %dst_name.addr, align 8, !dbg !7664, !tbaa !2668
  %26 = load i32, i32* %dest_desc.addr, align 4, !dbg !7665, !tbaa !2655
  %27 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !7666, !tbaa !2655
  %call = call i32 @qset_acl(i8* %25, i32 %26, i32 %27), !dbg !7667
  %cmp = icmp ne i32 %call, 0, !dbg !7668
  br i1 %cmp, label %if.then18, label %if.end25, !dbg !7669

if.then18:                                        ; preds = %land.lhs.true17
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7670, !tbaa !2668
  %call19 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %28), !dbg !7673
  br i1 %call19, label %if.end, label %if.then20, !dbg !7674

if.then20:                                        ; preds = %if.then18
  %call21 = call i32* @__errno_location() #16, !dbg !7675
  %29 = load i32, i32* %call21, align 4, !dbg !7675, !tbaa !2655, !ctir !5
  %call22 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76.142, i64 0, i64 0)) #9, !dbg !7676
  %30 = load i8*, i8** %dst_name.addr, align 8, !dbg !7677, !tbaa !2668
  %call23 = call i8* @quotearg_style(i32 4, i8* %30), !dbg !7677
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %29, i8* %call22, i8* %call23), !dbg !7678
  br label %if.end, !dbg !7678

if.end:                                           ; preds = %if.then20, %if.then18
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7679, !tbaa !2668
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 21, !dbg !7680, !ctir !363
  %32 = load i8, i8* %require_preserve, align 4, !dbg !7680, !tbaa !3226
  %tobool24 = trunc i8 %32 to i1, !dbg !7680, !ctir !139
  %conv = zext i1 %tobool24 to i32, !dbg !7679
  %sub = sub nsw i32 0, %conv, !dbg !7681
  store i32 %sub, i32* %retval, align 4, !dbg !7682
  br label %return, !dbg !7682

if.end25:                                         ; preds = %land.lhs.true17, %cond.end
  br label %if.end26, !dbg !7683

if.end26:                                         ; preds = %if.end25, %lor.lhs.false3, %entry
  %33 = load i32, i32* %dest_desc.addr, align 4, !dbg !7684, !tbaa !2655
  %cmp27 = icmp ne i32 %33, -1, !dbg !7686
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !7687

if.then29:                                        ; preds = %if.end26
  %34 = load i32, i32* %dest_desc.addr, align 4, !dbg !7688, !tbaa !2655
  %35 = load i32, i32* %uid, align 4, !dbg !7691, !tbaa !2655
  %36 = load i32, i32* %gid, align 4, !dbg !7692, !tbaa !2655
  %call30 = call i32 @fchown(i32 %34, i32 %35, i32 %36) #9, !dbg !7693
  %cmp31 = icmp eq i32 %call30, 0, !dbg !7694
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7695

if.then33:                                        ; preds = %if.then29
  store i32 1, i32* %retval, align 4, !dbg !7696
  br label %return, !dbg !7696

if.end34:                                         ; preds = %if.then29
  %call35 = call i32* @__errno_location() #16, !dbg !7697
  %37 = load i32, i32* %call35, align 4, !dbg !7697, !tbaa !2655, !ctir !5
  %cmp36 = icmp eq i32 %37, 1, !dbg !7699
  br i1 %cmp36, label %if.then42, label %lor.lhs.false38, !dbg !7700

lor.lhs.false38:                                  ; preds = %if.end34
  %call39 = call i32* @__errno_location() #16, !dbg !7701
  %38 = load i32, i32* %call39, align 4, !dbg !7701, !tbaa !2655, !ctir !5
  %cmp40 = icmp eq i32 %38, 22, !dbg !7702
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !7703

if.then42:                                        ; preds = %lor.lhs.false38, %if.end34
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !7704, metadata !DIExpression()), !dbg !7706
  %call43 = call i32* @__errno_location() #16, !dbg !7707
  %39 = load i32, i32* %call43, align 4, !dbg !7707, !tbaa !2655, !ctir !5
  store i32 %39, i32* %saved_errno, align 4, !dbg !7706, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7708, metadata !DIExpression()), !dbg !7710
  %40 = load i32, i32* %dest_desc.addr, align 4, !dbg !7710, !tbaa !2655
  %41 = load i32, i32* %gid, align 4, !dbg !7710, !tbaa !2655
  %call44 = call i32 @fchown(i32 %40, i32 -1, i32 %41) #9, !dbg !7710
  store i32 %call44, i32* %__x, align 4, !dbg !7710, !tbaa !2655
  %42 = load i32, i32* %__x, align 4, !dbg !7710, !tbaa !2655
  %43 = load i32, i32* %saved_errno, align 4, !dbg !7711, !tbaa !2655
  %call45 = call i32* @__errno_location() #16, !dbg !7712
  store i32 %43, i32* %call45, align 4, !dbg !7713, !tbaa !2655, !ctir !5
  br label %if.end46, !dbg !7714

if.end46:                                         ; preds = %if.then42, %lor.lhs.false38
  br label %if.end66, !dbg !7715

if.else:                                          ; preds = %if.end26
  %44 = load i8*, i8** %dst_name.addr, align 8, !dbg !7716, !tbaa !2668
  %45 = load i32, i32* %uid, align 4, !dbg !7719, !tbaa !2655
  %46 = load i32, i32* %gid, align 4, !dbg !7720, !tbaa !2655
  %call47 = call i32 @lchown(i8* %44, i32 %45, i32 %46) #9, !dbg !7721
  %cmp48 = icmp eq i32 %call47, 0, !dbg !7722
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !7723

if.then50:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7724
  br label %return, !dbg !7724

if.end51:                                         ; preds = %if.else
  %call52 = call i32* @__errno_location() #16, !dbg !7725
  %47 = load i32, i32* %call52, align 4, !dbg !7725, !tbaa !2655, !ctir !5
  %cmp53 = icmp eq i32 %47, 1, !dbg !7727
  br i1 %cmp53, label %if.then59, label %lor.lhs.false55, !dbg !7728

lor.lhs.false55:                                  ; preds = %if.end51
  %call56 = call i32* @__errno_location() #16, !dbg !7729
  %48 = load i32, i32* %call56, align 4, !dbg !7729, !tbaa !2655, !ctir !5
  %cmp57 = icmp eq i32 %48, 22, !dbg !7730
  br i1 %cmp57, label %if.then59, label %if.end65, !dbg !7731

if.then59:                                        ; preds = %lor.lhs.false55, %if.end51
  call void @llvm.dbg.declare(metadata i32* %saved_errno60, metadata !7732, metadata !DIExpression()), !dbg !7734
  %call61 = call i32* @__errno_location() #16, !dbg !7735
  %49 = load i32, i32* %call61, align 4, !dbg !7735, !tbaa !2655, !ctir !5
  store i32 %49, i32* %saved_errno60, align 4, !dbg !7734, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %__x62, metadata !7736, metadata !DIExpression()), !dbg !7738
  %50 = load i8*, i8** %dst_name.addr, align 8, !dbg !7738, !tbaa !2668
  %51 = load i32, i32* %gid, align 4, !dbg !7738, !tbaa !2655
  %call63 = call i32 @lchown(i8* %50, i32 -1, i32 %51) #9, !dbg !7738
  store i32 %call63, i32* %__x62, align 4, !dbg !7738, !tbaa !2655
  %52 = load i32, i32* %__x62, align 4, !dbg !7738, !tbaa !2655
  %53 = load i32, i32* %saved_errno60, align 4, !dbg !7739, !tbaa !2655
  %call64 = call i32* @__errno_location() #16, !dbg !7740
  store i32 %53, i32* %call64, align 4, !dbg !7741, !tbaa !2655, !ctir !5
  br label %if.end65, !dbg !7742

if.end65:                                         ; preds = %if.then59, %lor.lhs.false55
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end46
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7743, !tbaa !2668
  %call67 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %54) #14, !dbg !7745
  br i1 %call67, label %if.end76, label %if.then68, !dbg !7746

if.then68:                                        ; preds = %if.end66
  %call69 = call i32* @__errno_location() #16, !dbg !7747
  %55 = load i32, i32* %call69, align 4, !dbg !7747, !tbaa !2655, !ctir !5
  %call70 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !7749
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !7750, !tbaa !2668
  %call71 = call i8* @quotearg_style(i32 4, i8* %56), !dbg !7750
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %55, i8* %call70, i8* %call71), !dbg !7751
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7752, !tbaa !2668
  %require_preserve72 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %57, i32 0, i32 21, !dbg !7754, !ctir !363
  %58 = load i8, i8* %require_preserve72, align 4, !dbg !7754, !tbaa !3226
  %tobool73 = trunc i8 %58 to i1, !dbg !7754, !ctir !139
  br i1 %tobool73, label %if.then74, label %if.end75, !dbg !7755

if.then74:                                        ; preds = %if.then68
  store i32 -1, i32* %retval, align 4, !dbg !7756
  br label %return, !dbg !7756

if.end75:                                         ; preds = %if.then68
  br label %if.end76, !dbg !7757

if.end76:                                         ; preds = %if.end75, %if.end66
  store i32 0, i32* %retval, align 4, !dbg !7758
  br label %return, !dbg !7758

return:                                           ; preds = %if.end76, %if.then74, %if.then50, %if.then33, %if.end
  %59 = load i32, i32* %retval, align 4, !dbg !7759
  ret i32 %59, !dbg !7759
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !7760 !ctir !574 {
entry:
  %src_path.addr = alloca i8*, align 8, !ctir !177
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %dst_path.addr = alloca i8*, align 8, !ctir !177
  %dst_fd.addr = alloca i32, align 4, !ctir !5
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  store i8* %src_path, i8** %src_path.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7763, metadata !DIExpression()), !dbg !7764
  store i8* %dst_path, i8** %dst_path.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !7765, metadata !DIExpression()), !dbg !7766
  store i32 %dst_fd, i32* %dst_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !7767, metadata !DIExpression()), !dbg !7768
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7769, metadata !DIExpression()), !dbg !7770
  ret i1 true, !dbg !7771
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !7772 !ctir !576 {
entry:
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %src_sb.addr = alloca %struct.stat*, align 8, !ctir !419
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7773, metadata !DIExpression()), !dbg !7774
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7777, metadata !DIExpression()), !dbg !7778
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !7779, !tbaa !2668
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !7780, !tbaa !2655
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7781, !tbaa !2668
  ret void, !dbg !7782
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !581 !ctir !415 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !7783, !tbaa !2655
  %cmp = icmp eq i32 %0, -1, !dbg !7785
  br i1 %cmp, label %if.then, label %if.end, !dbg !7786

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #9, !dbg !7787
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !7789, !tbaa !2655
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !7790, !tbaa !2655
  %call1 = call i32 @umask(i32 %1) #9, !dbg !7791
  br label %if.end, !dbg !7792

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !7793, !tbaa !2655
  ret i32 %2, !dbg !7794
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !7795 !ctir !413 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !362
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7796, metadata !DIExpression()), !dbg !7797
  %call = call i32* @__errno_location() #16, !dbg !7798
  %0 = load i32, i32* %call, align 4, !dbg !7798, !tbaa !2655, !ctir !5
  %cmp = icmp eq i32 %0, 1, !dbg !7799
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7800

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7801
  %1 = load i32, i32* %call1, align 4, !dbg !7801, !tbaa !2655, !ctir !5
  %cmp2 = icmp eq i32 %1, 22, !dbg !7802
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7803

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7804, !tbaa !2668
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7805, !ctir !363
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !7805, !tbaa !7806
  %tobool = trunc i8 %3 to i1, !dbg !7805, !ctir !139
  %lnot = xor i1 %tobool, true, !dbg !7807
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7808
  ret i1 %4, !dbg !7809
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !7810 !ctir !517 {
entry:
  %dest_fd.addr = alloca i32, align 4, !ctir !5
  %src_fd.addr = alloca i32, align 4, !ctir !5
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7811, metadata !DIExpression()), !dbg !7812
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7813, metadata !DIExpression()), !dbg !7814
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !7815, !tbaa !2655
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !7816, !tbaa !2655
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #9, !dbg !7817
  ret i32 %call, !dbg !7818
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !7819 !ctir !519 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7821, metadata !DIExpression()), !dbg !7822
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7823, !ctir !421
  %0 = load i64, i64* %st_blksize, align 8, !dbg !7823, !tbaa !7180, !ctir !292
  %cmp = icmp slt i64 0, %0, !dbg !7823
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7823

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7823, !ctir !421
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !7823, !tbaa !7180, !ctir !292
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !7823
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7823

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7823, !ctir !421
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !7823, !tbaa !7180, !ctir !292
  br label %cond.end, !dbg !7823

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !7823
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !7823
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !7823

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !7823

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7823, !ctir !421
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !7823, !tbaa !7180, !ctir !292
  %cmp8 = icmp slt i64 0, %3, !dbg !7823
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !7823

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7823, !ctir !421
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !7823, !tbaa !7180, !ctir !292
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !7823
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !7823

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7823, !ctir !421
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !7823, !tbaa !7180, !ctir !292
  br label %cond.end15, !dbg !7823

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !7823

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !7823
  br label %cond.end17, !dbg !7823

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !7823
  ret i64 %cond18, !dbg !7824
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !7825 !ctir !521 {
entry:
  %sb.addr = alloca %struct.stat*, align 8, !ctir !419
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7828, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7828, !ctir !420
  %1 = load i32, i32* %st_mode, align 8, !dbg !7828, !tbaa !2934, !ctir !137
  %and = and i32 %1, 61440, !dbg !7828
  %cmp = icmp eq i32 %and, 32768, !dbg !7828
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7829

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7830, !tbaa !2668
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !7830, !ctir !420
  %3 = load i64, i64* %st_blocks, align 8, !dbg !7830, !tbaa !7831, !ctir !294
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7832, !tbaa !2668
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !7833, !ctir !420
  %5 = load i64, i64* %st_size, align 8, !dbg !7833, !tbaa !4037, !ctir !30
  %div = sdiv i64 %5, 512, !dbg !7834
  %cmp1 = icmp slt i64 %3, %div, !dbg !7835
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7836
  ret i1 %6, !dbg !7837
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !7838 !ctir !523 {
entry:
  %ptr.addr = alloca i8*, align 8, !ctir !525
  %alignment.addr = alloca i64, align 8, !ctir !52
  %p0 = alloca i8*, align 8, !ctir !177
  %p1 = alloca i8*, align 8, !ctir !177
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7839, metadata !DIExpression()), !dbg !7840
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7843, metadata !DIExpression()), !dbg !7844
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7845, !tbaa !2668
  store i8* %0, i8** %p0, align 8, !dbg !7844, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !7846, metadata !DIExpression()), !dbg !7847
  %1 = load i8*, i8** %p0, align 8, !dbg !7848, !tbaa !2668
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !7849, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !7850
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !7851
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !7847, !tbaa !2668
  %3 = load i8*, i8** %p1, align 8, !dbg !7852, !tbaa !2668
  %4 = load i8*, i8** %p1, align 8, !dbg !7853, !tbaa !2668
  %5 = ptrtoint i8* %4 to i64, !dbg !7854
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !7855, !tbaa !3308
  %rem = urem i64 %5, %6, !dbg !7856
  %idx.neg = sub i64 0, %rem, !dbg !7857
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !7857
  ret i8* %add.ptr2, !dbg !7858
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !7859 !ctir !527 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %dest_fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !7
  %buf_size.addr = alloca i64, align 8, !ctir !52
  %hole_size.addr = alloca i64, align 8, !ctir !52
  %src_total_size.addr = alloca i64, align 8, !ctir !358
  %sparse_mode.addr = alloca i32, align 4, !ctir !86
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %require_normal_copy.addr = alloca i8*, align 8, !ctir !412
  %scan = alloca %struct.extent_scan, align 8, !ctir !539
  %last_ext_start = alloca i64, align 8, !ctir !358
  %last_ext_len = alloca i64, align 8, !ctir !358
  %dest_pos = alloca i64, align 8, !ctir !358
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !139
  %ok = alloca i8, align 1, !ctir !139
  %empty_extent = alloca i8, align 1, !ctir !139
  %i = alloca i32, align 4, !ctir !67
  %ext_start = alloca i64, align 8, !ctir !358
  %ext_len = alloca i64, align 8, !ctir !358
  %ext_hole_size = alloca i64, align 8, !ctir !358
  %nzeros = alloca i64, align 8, !ctir !358
  %n_read = alloca i64, align 8, !ctir !358
  %read_hole = alloca i8, align 1, !ctir !139
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7860, metadata !DIExpression()), !dbg !7861
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7862, metadata !DIExpression()), !dbg !7863
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7864, metadata !DIExpression()), !dbg !7865
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7866, metadata !DIExpression()), !dbg !7867
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  store i64 %src_total_size, i64* %src_total_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !7870, metadata !DIExpression()), !dbg !7871
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !7872, metadata !DIExpression()), !dbg !7873
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7874, metadata !DIExpression()), !dbg !7875
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !7880, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !7882, metadata !DIExpression()), !dbg !7883
  store i64 0, i64* %last_ext_start, align 8, !dbg !7883, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !7884, metadata !DIExpression()), !dbg !7885
  store i64 0, i64* %last_ext_len, align 8, !dbg !7885, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !7886, metadata !DIExpression()), !dbg !7887
  store i64 0, i64* %dest_pos, align 8, !dbg !7887, !tbaa !3308
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !7888, !tbaa !2655
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !7889
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7890, !tbaa !2668
  store i8 0, i8* %1, align 1, !dbg !7891, !tbaa !2762, !ctir !139
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7892, metadata !DIExpression()), !dbg !7893
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7893, !tbaa !2762
  br label %do.body, !dbg !7894

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7895, metadata !DIExpression()), !dbg !7897
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !7898
  %frombool = zext i1 %call to i8, !dbg !7897
  store i8 %frombool, i8* %ok, align 1, !dbg !7897, !tbaa !2762
  %2 = load i8, i8* %ok, align 1, !dbg !7899, !tbaa !2762
  %tobool = trunc i8 %2 to i1, !dbg !7899
  br i1 %tobool, label %if.end9, label %if.then, !dbg !7901

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7902, !ctir !539
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !7902, !tbaa !7905
  %tobool1 = trunc i8 %3 to i1, !dbg !7902, !ctir !139
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !7907

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !7908

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !7909, !ctir !539
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !7909, !tbaa !7911
  %tobool3 = trunc i8 %4 to i1, !dbg !7909, !ctir !139
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7912

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7913, !tbaa !2668
  store i8 1, i8* %5, align 1, !dbg !7915, !tbaa !2762, !ctir !139
  store i1 false, i1* %retval, align 1, !dbg !7916
  br label %return, !dbg !7916

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #16, !dbg !7917
  %6 = load i32, i32* %call6, align 4, !dbg !7917, !tbaa !2655, !ctir !5
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68.157, i64 0, i64 0)) #9, !dbg !7918
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !7919, !tbaa !2668
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !7919
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !7920
  store i1 false, i1* %retval, align 1, !dbg !7921
  br label %return, !dbg !7921

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !7922, metadata !DIExpression()), !dbg !7923
  store i8 0, i8* %empty_extent, align 1, !dbg !7923, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7924, metadata !DIExpression()), !dbg !7926
  store i32 0, i32* %i, align 4, !dbg !7926, !tbaa !2655
  br label %for.cond, !dbg !7927

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !7928, !tbaa !2655
  %conv = zext i32 %8 to i64, !dbg !7928
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7930, !ctir !539
  %9 = load i64, i64* %ei_count, align 8, !dbg !7930, !tbaa !7931, !ctir !52
  %cmp = icmp ult i64 %conv, %9, !dbg !7932
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !7933

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !7934, !tbaa !2762
  %tobool11 = trunc i8 %10 to i1, !dbg !7934
  br label %lor.end, !dbg !7933

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !7935

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !7936, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !7941, metadata !DIExpression()), !dbg !7942
  %12 = load i32, i32* %i, align 4, !dbg !7943, !tbaa !2655
  %conv13 = zext i32 %12 to i64, !dbg !7943
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !7945, !ctir !539
  %13 = load i64, i64* %ei_count14, align 8, !dbg !7945, !tbaa !7931, !ctir !52
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !7946
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !7947

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7948, !ctir !539
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !7948, !tbaa !7950, !ctir !529
  %15 = load i32, i32* %i, align 4, !dbg !7951, !tbaa !2655
  %idxprom = zext i32 %15 to i64, !dbg !7952
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !7952, !ctir !529
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !7953, !ctir !530
  %16 = load i64, i64* %ext_logical, align 8, !dbg !7953, !tbaa !7954, !ctir !358
  store i64 %16, i64* %ext_start, align 8, !dbg !7956, !tbaa !3308
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7957, !ctir !539
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !7957, !tbaa !7950, !ctir !529
  %18 = load i32, i32* %i, align 4, !dbg !7958, !tbaa !2655
  %idxprom19 = zext i32 %18 to i64, !dbg !7959
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !7959, !ctir !529
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !7960, !ctir !530
  %19 = load i64, i64* %ext_length, align 8, !dbg !7960, !tbaa !7961, !ctir !358
  store i64 %19, i64* %ext_len, align 8, !dbg !7962, !tbaa !3308
  br label %if.end25, !dbg !7963

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !7964, !tbaa !2655
  %dec = add i32 %20, -1, !dbg !7964
  store i32 %dec, i32* %i, align 4, !dbg !7964, !tbaa !2655
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !7966, !tbaa !3308
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !7967, !ctir !539
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !7967, !tbaa !7950, !ctir !529
  %23 = load i32, i32* %i, align 4, !dbg !7968, !tbaa !2655
  %idxprom22 = zext i32 %23 to i64, !dbg !7969
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !7969, !ctir !529
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !7970, !ctir !530
  %24 = load i64, i64* %ext_length24, align 8, !dbg !7970, !tbaa !7961, !ctir !358
  %add = add nsw i64 %21, %24, !dbg !7971
  store i64 %add, i64* %ext_start, align 8, !dbg !7972, !tbaa !3308
  store i64 0, i64* %ext_len, align 8, !dbg !7973, !tbaa !3308
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !7974, !tbaa !3308
  %26 = load i64, i64* %ext_start, align 8, !dbg !7976, !tbaa !3308
  %27 = load i64, i64* %ext_len, align 8, !dbg !7977, !tbaa !3308
  %add26 = add nsw i64 %26, %27, !dbg !7978
  %cmp27 = icmp slt i64 %25, %add26, !dbg !7979
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !7980

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !7981, !tbaa !3308
  %29 = load i64, i64* %ext_start, align 8, !dbg !7984, !tbaa !3308
  %cmp30 = icmp slt i64 %28, %29, !dbg !7985
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !7986

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !7987, !tbaa !3308
  store i64 %30, i64* %ext_start, align 8, !dbg !7988, !tbaa !3308
  br label %if.end33, !dbg !7989

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !7990, !tbaa !3308
  %32 = load i64, i64* %ext_start, align 8, !dbg !7991, !tbaa !3308
  %sub = sub nsw i64 %31, %32, !dbg !7992
  store i64 %sub, i64* %ext_len, align 8, !dbg !7993, !tbaa !3308
  br label %if.end34, !dbg !7994

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !7995, !tbaa !3308
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !7996, !tbaa !3308
  %sub35 = sub nsw i64 %33, %34, !dbg !7997
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !7998, !tbaa !3308
  %sub36 = sub nsw i64 %sub35, %35, !dbg !7999
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !8000, !tbaa !3308
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !8001, !tbaa !2762
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !8002, !tbaa !3308
  %tobool37 = icmp ne i64 %36, 0, !dbg !8002
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !8004

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !8005, !tbaa !2655
  %38 = load i64, i64* %ext_start, align 8, !dbg !8008, !tbaa !3308
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #9, !dbg !8009
  %cmp40 = icmp slt i64 %call39, 0, !dbg !8010
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !8011

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #16, !dbg !8012
  %39 = load i32, i32* %call43, align 4, !dbg !8012, !tbaa !2655, !ctir !5
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.155, i64 0, i64 0)) #9, !dbg !8014
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !8015, !tbaa !2668
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !8015
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !8016
  br label %fail, !dbg !8016

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !8017), !dbg !8018
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8019
  store i1 false, i1* %retval, align 1, !dbg !8020
  br label %return, !dbg !8020

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !8021, !tbaa !2762
  %tobool47 = trunc i8 %41 to i1, !dbg !8021
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !8023

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8024, !tbaa !3315
  %cmp49 = icmp eq i32 %42, 3, !dbg !8025
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !8026

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !8027, !tbaa !2762
  %tobool51 = trunc i8 %43 to i1, !dbg !8027
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !8028

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8029, !tbaa !3315
  %cmp53 = icmp ne i32 %44, 1, !dbg !8030
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !8031

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !8032, !tbaa !2655
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !8035, !tbaa !2668
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8036, !tbaa !3315
  %cmp56 = icmp eq i32 %47, 3, !dbg !8037
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !8038, !tbaa !3308
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !8039
  br i1 %call58, label %if.end60, label %if.then59, !dbg !8040

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !8041

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8042, !tbaa !2762
  br label %if.end81, !dbg !8043

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !8044, metadata !DIExpression()), !dbg !8046
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !8047, !tbaa !3308
  store i64 %49, i64* %nzeros, align 8, !dbg !8046, !tbaa !3308
  %50 = load i8, i8* %empty_extent, align 1, !dbg !8048, !tbaa !2762
  %tobool62 = trunc i8 %50 to i1, !dbg !8048
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !8050

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !8051, !tbaa !3308
  %52 = load i64, i64* %dest_pos, align 8, !dbg !8051, !tbaa !3308
  %sub64 = sub nsw i64 %51, %52, !dbg !8051
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !8051, !tbaa !3308
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !8051
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !8051

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !8051, !tbaa !3308
  %55 = load i64, i64* %dest_pos, align 8, !dbg !8051, !tbaa !3308
  %sub67 = sub nsw i64 %54, %55, !dbg !8051
  br label %cond.end, !dbg !8051

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !8051, !tbaa !3308
  br label %cond.end, !dbg !8051

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !8051
  store i64 %cond, i64* %nzeros, align 8, !dbg !8052, !tbaa !3308
  br label %if.end68, !dbg !8053

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !8054, !tbaa !2655
  %58 = load i64, i64* %nzeros, align 8, !dbg !8056, !tbaa !3308
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !8057
  br i1 %call69, label %if.end74, label %if.then70, !dbg !8058

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #16, !dbg !8059
  %59 = load i32, i32* %call71, align 4, !dbg !8059, !tbaa !2655, !ctir !5
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70.158, i64 0, i64 0)) #9, !dbg !8061
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !8062, !tbaa !2668
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !8062
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !8063
  br label %fail, !dbg !8064

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !8065, !tbaa !3308
  %62 = load i64, i64* %ext_start, align 8, !dbg !8065, !tbaa !3308
  %cmp75 = icmp slt i64 %61, %62, !dbg !8065
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !8065

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !8065, !tbaa !3308
  br label %cond.end79, !dbg !8065

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !8065, !tbaa !3308
  br label %cond.end79, !dbg !8065

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !8065
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !8066, !tbaa !3308
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !8067

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !8068, !tbaa !3308
  store i64 %65, i64* %last_ext_start, align 8, !dbg !8069, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8070, metadata !DIExpression()), !dbg !8073
  store i8 0, i8* %empty_extent, align 1, !dbg !8074, !tbaa !2762
  %66 = load i64, i64* %ext_len, align 8, !dbg !8075, !tbaa !3308
  store i64 %66, i64* %last_ext_len, align 8, !dbg !8076, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !8077, metadata !DIExpression()), !dbg !8078
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !8079, !tbaa !2655
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !8081, !tbaa !2655
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !8082, !tbaa !2668
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !8083, !tbaa !3308
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8084, !tbaa !3315
  %cmp83 = icmp eq i32 %71, 3, !dbg !8085
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !8084

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !8086, !tbaa !3308
  br label %cond.end87, !dbg !8084

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !8084

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !8084
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !8087, !tbaa !2668
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !8088, !tbaa !2668
  %75 = load i64, i64* %ext_len, align 8, !dbg !8089, !tbaa !3308
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !8090
  br i1 %call89, label %if.end91, label %if.then90, !dbg !8091

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !8092

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !8093, !tbaa !3308
  %77 = load i64, i64* %n_read, align 8, !dbg !8094, !tbaa !3308
  %add92 = add nsw i64 %76, %77, !dbg !8095
  store i64 %add92, i64* %dest_pos, align 8, !dbg !8096, !tbaa !3308
  %78 = load i64, i64* %n_read, align 8, !dbg !8097, !tbaa !3308
  %tobool93 = icmp ne i64 %78, 0, !dbg !8097
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !8099

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !8100, !tbaa !2762
  %tobool95 = trunc i8 %79 to i1, !dbg !8100
  %frombool96 = zext i1 %tobool95 to i8, !dbg !8101
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !8101, !tbaa !2762
  br label %if.end97, !dbg !8102

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !8103, !tbaa !3308
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !8105, !tbaa !3308
  %cmp98 = icmp eq i64 %80, %81, !dbg !8106
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !8107

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8108, !ctir !539
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !8110, !tbaa !7905, !ctir !139
  br label %for.end, !dbg !8111

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !8112

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !8113, !tbaa !2655
  %inc = add i32 %82, 1, !dbg !8113
  store i32 %inc, i32* %i, align 4, !dbg !8113, !tbaa !2655
  br label %for.cond, !dbg !8114, !llvm.loop !8115

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8117
  br label %do.cond, !dbg !8118

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8119, !ctir !539
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !8119, !tbaa !7905
  %tobool104 = trunc i8 %83 to i1, !dbg !8119, !ctir !139
  %lnot = xor i1 %tobool104, true, !dbg !8120
  br i1 %lnot, label %do.body, label %do.end, !dbg !8118, !llvm.loop !8121

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !8123, !tbaa !3308
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !8125, !tbaa !3308
  %cmp105 = icmp slt i64 %84, %85, !dbg !8126
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !8127

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !8128, !tbaa !2762
  %tobool108 = trunc i8 %86 to i1, !dbg !8128
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !8129

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8130, !tbaa !3315
  %cmp111 = icmp ne i32 %87, 1, !dbg !8131
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !8132

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !8133, !tbaa !2655
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !8134, !tbaa !3308
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #9, !dbg !8135
  %tobool115 = icmp ne i32 %call114, 0, !dbg !8135
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !8130

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !8136, !tbaa !2655
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !8137, !tbaa !3308
  %92 = load i64, i64* %dest_pos, align 8, !dbg !8138, !tbaa !3308
  %sub117 = sub nsw i64 %91, %92, !dbg !8139
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !8140
  br i1 %call118, label %if.end123, label %if.then119, !dbg !8132

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #16, !dbg !8141
  %93 = load i32, i32* %call120, align 4, !dbg !8141, !tbaa !2655, !ctir !5
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.150, i64 0, i64 0)) #9, !dbg !8143
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !8144, !tbaa !2668
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !8144
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !8145
  store i1 false, i1* %retval, align 1, !dbg !8146
  br label %return, !dbg !8146

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8147, !tbaa !3315
  %cmp124 = icmp eq i32 %95, 3, !dbg !8149
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !8150

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !8151, !tbaa !3308
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !8152, !tbaa !3308
  %cmp127 = icmp slt i64 %96, %97, !dbg !8153
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !8154

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !8155, !tbaa !2655
  %99 = load i64, i64* %dest_pos, align 8, !dbg !8156, !tbaa !3308
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !8157, !tbaa !3308
  %101 = load i64, i64* %dest_pos, align 8, !dbg !8158, !tbaa !3308
  %sub130 = sub nsw i64 %100, %101, !dbg !8159
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !8160
  %cmp132 = icmp slt i32 %call131, 0, !dbg !8161
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !8162

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #16, !dbg !8163
  %102 = load i32, i32* %call135, align 4, !dbg !8163, !tbaa !2655, !ctir !5
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.156, i64 0, i64 0)) #9, !dbg !8165
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !8166, !tbaa !2668
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !8166
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !8167
  store i1 false, i1* %retval, align 1, !dbg !8168
  br label %return, !dbg !8168

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !8169
  br label %return, !dbg !8169

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !8170
  ret i1 %104, !dbg !8170
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !8171 !ctir !554 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %dest_fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !7
  %buf_size.addr = alloca i64, align 8, !ctir !52
  %hole_size.addr = alloca i64, align 8, !ctir !52
  %punch_holes.addr = alloca i8, align 1, !ctir !139
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %max_n_read.addr = alloca i64, align 8, !ctir !556
  %total_n_read.addr = alloca i64*, align 8, !ctir !558
  %last_write_made_hole.addr = alloca i8*, align 8, !ctir !412
  %make_hole = alloca i8, align 1, !ctir !139
  %psize = alloca i64, align 8, !ctir !358
  %n_read = alloca i64, align 8, !ctir !559
  %csize = alloca i64, align 8, !ctir !52
  %cbuf = alloca i8*, align 8, !ctir !7
  %pbuf = alloca i8*, align 8, !ctir !7
  %prev_hole = alloca i8, align 1, !ctir !139
  %transition = alloca i8, align 1, !ctir !139
  %last_chunk = alloca i8, align 1, !ctir !139
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8172, metadata !DIExpression()), !dbg !8173
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8174, metadata !DIExpression()), !dbg !8175
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8176, metadata !DIExpression()), !dbg !8177
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8182, metadata !DIExpression()), !dbg !8183
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8184, metadata !DIExpression()), !dbg !8185
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8186, metadata !DIExpression()), !dbg !8187
  store i64 %max_n_read, i64* %max_n_read.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !8188, metadata !DIExpression()), !dbg !8189
  store i64* %total_n_read, i64** %total_n_read.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !8192, metadata !DIExpression()), !dbg !8193
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8194, !tbaa !2668
  store i8 0, i8* %0, align 1, !dbg !8195, !tbaa !2762, !ctir !139
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8196, !tbaa !2668
  store i64 0, i64* %1, align 8, !dbg !8197, !tbaa !3308, !ctir !358
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !8198, metadata !DIExpression()), !dbg !8199
  store i8 0, i8* %make_hole, align 1, !dbg !8199, !tbaa !2762
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !8200, metadata !DIExpression()), !dbg !8201
  store i64 0, i64* %psize, align 8, !dbg !8201, !tbaa !3308
  br label %while.cond, !dbg !8202

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !8203, !tbaa !3308
  %tobool = icmp ne i64 %2, 0, !dbg !8202
  br i1 %tobool, label %while.body, label %while.end94, !dbg !8202

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8204, metadata !DIExpression()), !dbg !8206
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !8207, !tbaa !2655
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8208, !tbaa !2668
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !8209, !tbaa !3308
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !8209, !tbaa !3308
  %cmp = icmp ult i64 %5, %6, !dbg !8209
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8209

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !8209, !tbaa !3308
  br label %cond.end, !dbg !8209

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !8209, !tbaa !3308
  br label %cond.end, !dbg !8209

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !8209
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !8210
  store i64 %call, i64* %n_read, align 8, !dbg !8206, !tbaa !3308
  %9 = load i64, i64* %n_read, align 8, !dbg !8211, !tbaa !3308
  %cmp1 = icmp slt i64 %9, 0, !dbg !8213
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !8214

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #16, !dbg !8215
  %10 = load i32, i32* %call2, align 4, !dbg !8215, !tbaa !2655, !ctir !5
  %cmp3 = icmp eq i32 %10, 4, !dbg !8218
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8219

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !8220, !llvm.loop !8221

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !8223
  %11 = load i32, i32* %call5, align 4, !dbg !8223, !tbaa !2655, !ctir !5
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.152, i64 0, i64 0)) #9, !dbg !8224
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !8225, !tbaa !2668
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !8225
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !8226
  store i1 false, i1* %retval, align 1, !dbg !8227
  br label %return, !dbg !8227

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !8228, !tbaa !3308
  %cmp9 = icmp eq i64 %13, 0, !dbg !8230
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8231

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !8232

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !8233, !tbaa !3308
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !8234, !tbaa !3308
  %sub = sub i64 %15, %14, !dbg !8234
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !8234, !tbaa !3308
  %16 = load i64, i64* %n_read, align 8, !dbg !8235, !tbaa !3308
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8236, !tbaa !2668
  %18 = load i64, i64* %17, align 8, !dbg !8237, !tbaa !3308, !ctir !358
  %add = add nsw i64 %18, %16, !dbg !8237
  store i64 %add, i64* %17, align 8, !dbg !8237, !tbaa !3308, !ctir !358
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !8238, metadata !DIExpression()), !dbg !8239
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !8240, !tbaa !3308
  %tobool12 = icmp ne i64 %19, 0, !dbg !8240
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !8240

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !8241, !tbaa !3308
  br label %cond.end15, !dbg !8240

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !8242, !tbaa !3308
  br label %cond.end15, !dbg !8240

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !8240
  store i64 %cond16, i64* %csize, align 8, !dbg !8239, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !8243, metadata !DIExpression()), !dbg !8244
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8245, !tbaa !2668
  store i8* %22, i8** %cbuf, align 8, !dbg !8244, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !8246, metadata !DIExpression()), !dbg !8247
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !8248, !tbaa !2668
  store i8* %23, i8** %pbuf, align 8, !dbg !8247, !tbaa !2668
  br label %while.cond17, !dbg !8249

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !8250, !tbaa !3308
  %tobool18 = icmp ne i64 %24, 0, !dbg !8249
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !8249

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !8251, metadata !DIExpression()), !dbg !8253
  %25 = load i8, i8* %make_hole, align 1, !dbg !8254, !tbaa !2762
  %tobool20 = trunc i8 %25 to i1, !dbg !8254
  %frombool21 = zext i1 %tobool20 to i8, !dbg !8253
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !8253, !tbaa !2762
  %26 = load i64, i64* %csize, align 8, !dbg !8255, !tbaa !3308
  %27 = load i64, i64* %n_read, align 8, !dbg !8255, !tbaa !3308
  %cmp22 = icmp ult i64 %26, %27, !dbg !8255
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !8255

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !8255, !tbaa !3308
  br label %cond.end25, !dbg !8255

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !8255, !tbaa !3308
  br label %cond.end25, !dbg !8255

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !8255
  store i64 %cond26, i64* %csize, align 8, !dbg !8256, !tbaa !3308
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !8257, !tbaa !3308
  %tobool27 = icmp ne i64 %30, 0, !dbg !8257
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !8259

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !8260, !tbaa !3308
  %tobool28 = icmp ne i64 %31, 0, !dbg !8260
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !8261

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !8262, !tbaa !2668
  %33 = load i64, i64* %csize, align 8, !dbg !8263, !tbaa !3308
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !8264
  %frombool31 = zext i1 %call30 to i8, !dbg !8265
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !8265, !tbaa !2762
  br label %if.end32, !dbg !8266

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !8267, metadata !DIExpression()), !dbg !8268
  %34 = load i8, i8* %make_hole, align 1, !dbg !8269, !tbaa !2762
  %tobool33 = trunc i8 %34 to i1, !dbg !8269
  %conv = zext i1 %tobool33 to i32, !dbg !8269
  %35 = load i8, i8* %prev_hole, align 1, !dbg !8270, !tbaa !2762
  %tobool34 = trunc i8 %35 to i1, !dbg !8270
  %conv35 = zext i1 %tobool34 to i32, !dbg !8270
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !8271
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !8272

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !8273, !tbaa !3308
  %tobool38 = icmp ne i64 %36, 0, !dbg !8272
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !8274
  %frombool39 = zext i1 %37 to i8, !dbg !8268
  store i8 %frombool39, i8* %transition, align 1, !dbg !8268, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !8275, metadata !DIExpression()), !dbg !8276
  %38 = load i64, i64* %n_read, align 8, !dbg !8277, !tbaa !3308
  %39 = load i64, i64* %csize, align 8, !dbg !8278, !tbaa !3308
  %cmp40 = icmp eq i64 %38, %39, !dbg !8279
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !8280

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !8281, !tbaa !2762
  %tobool43 = trunc i8 %40 to i1, !dbg !8281
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !8282

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !8283, !tbaa !3308
  %tobool44 = icmp ne i64 %41, 0, !dbg !8284
  %lnot = xor i1 %tobool44, true, !dbg !8284
  br label %lor.end, !dbg !8282

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !8276
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !8276, !tbaa !2762
  %43 = load i8, i8* %transition, align 1, !dbg !8285, !tbaa !2762
  %tobool46 = trunc i8 %43 to i1, !dbg !8285
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !8287

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !8288, !tbaa !2762
  %tobool48 = trunc i8 %44 to i1, !dbg !8288
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !8289

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !8290, !tbaa !2762
  %tobool51 = trunc i8 %45 to i1, !dbg !8290
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !8293

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !8294, !tbaa !3308
  %47 = load i64, i64* %psize, align 8, !dbg !8295, !tbaa !3308
  %add53 = add i64 %47, %46, !dbg !8295
  store i64 %add53, i64* %psize, align 8, !dbg !8295, !tbaa !3308
  br label %if.end54, !dbg !8296

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !8297, !tbaa !2762
  %tobool55 = trunc i8 %48 to i1, !dbg !8297
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !8299

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !8300, !tbaa !2655
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8303, !tbaa !2668
  %51 = load i64, i64* %psize, align 8, !dbg !8304, !tbaa !3308
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !8305
  %52 = load i64, i64* %psize, align 8, !dbg !8306, !tbaa !3308
  %cmp58 = icmp ne i64 %call57, %52, !dbg !8307
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !8308

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #16, !dbg !8309
  %53 = load i32, i32* %call61, align 4, !dbg !8309, !tbaa !2655, !ctir !5
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73.153, i64 0, i64 0)) #9, !dbg !8311
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8312, !tbaa !2668
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8312
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !8313
  store i1 false, i1* %retval, align 1, !dbg !8314
  br label %return, !dbg !8314

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !8315

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !8316, !tbaa !2655
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8319, !tbaa !2668
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !8320, !tbaa !2762
  %tobool65 = trunc i8 %57 to i1, !dbg !8320
  %58 = load i64, i64* %psize, align 8, !dbg !8321, !tbaa !3308
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !8322
  br i1 %call66, label %if.end68, label %if.then67, !dbg !8323

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !8324
  br label %return, !dbg !8324

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !8325, !tbaa !2668
  store i8* %59, i8** %pbuf, align 8, !dbg !8326, !tbaa !2668
  %60 = load i64, i64* %csize, align 8, !dbg !8327, !tbaa !3308
  store i64 %60, i64* %psize, align 8, !dbg !8328, !tbaa !3308
  %61 = load i8, i8* %last_chunk, align 1, !dbg !8329, !tbaa !2762
  %tobool70 = trunc i8 %61 to i1, !dbg !8329
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !8331

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !8332, !tbaa !3308
  %tobool72 = icmp ne i64 %62, 0, !dbg !8332
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8335

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !8336, !tbaa !3308
  br label %if.end74, !dbg !8337

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !8338, !tbaa !2762
  %tobool75 = trunc i8 %63 to i1, !dbg !8338
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8340

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !8341, !tbaa !3308
  br label %if.end78, !dbg !8342

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !8343, !tbaa !3308
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !8344

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !8345

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !8346, !tbaa !3308
  %65 = load i64, i64* %csize, align 8, !dbg !8349, !tbaa !3308
  %sub81 = sub i64 9223372036854775807, %65, !dbg !8350
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !8351
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8352

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !8353, !tbaa !3308
  %67 = load i64, i64* %psize, align 8, !dbg !8354, !tbaa !3308
  %add85 = add i64 %67, %66, !dbg !8354
  store i64 %add85, i64* %psize, align 8, !dbg !8354, !tbaa !3308
  br label %if.end89, !dbg !8355

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74.154, i64 0, i64 0)) #9, !dbg !8356
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !8358, !tbaa !2668
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !8358
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !8359
  store i1 false, i1* %retval, align 1, !dbg !8360
  br label %return, !dbg !8360

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !8361, !tbaa !3308
  %70 = load i64, i64* %n_read, align 8, !dbg !8362, !tbaa !3308
  %sub91 = sub i64 %70, %69, !dbg !8362
  store i64 %sub91, i64* %n_read, align 8, !dbg !8362, !tbaa !3308
  %71 = load i64, i64* %csize, align 8, !dbg !8363, !tbaa !3308
  %72 = load i8*, i8** %cbuf, align 8, !dbg !8364, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !8364
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !8364, !tbaa !2668
  br label %while.cond17, !dbg !8249, !llvm.loop !8365

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !8367, !tbaa !2762
  %tobool92 = trunc i8 %73 to i1, !dbg !8367
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8368, !tbaa !2668
  %frombool93 = zext i1 %tobool92 to i8, !dbg !8369
  store i8 %frombool93, i8* %74, align 1, !dbg !8369, !tbaa !2762, !ctir !139
  br label %while.cond, !dbg !8202, !llvm.loop !8221

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !8370, !tbaa !2762
  %tobool95 = trunc i8 %75 to i1, !dbg !8370
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !8372

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !8373, !tbaa !2655
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !8374, !tbaa !2668
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !8375, !tbaa !2762
  %tobool98 = trunc i8 %78 to i1, !dbg !8375
  %79 = load i64, i64* %psize, align 8, !dbg !8376, !tbaa !3308
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !8377
  br i1 %call99, label %if.else101, label %if.then100, !dbg !8378

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !8379
  br label %return, !dbg !8379

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !8380
  br label %return, !dbg !8380

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !8381
  ret i1 %80, !dbg !8381
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !8382 !ctir !566 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %desc.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !177
  %mode.addr = alloca i32, align 4, !ctir !136
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8383, metadata !DIExpression()), !dbg !8384
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8385, metadata !DIExpression()), !dbg !8386
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  %0 = load i32, i32* %desc.addr, align 4, !dbg !8389, !tbaa !2655
  %cmp = icmp sle i32 0, %0, !dbg !8391
  br i1 %cmp, label %if.then, label %if.end, !dbg !8392

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8393, !tbaa !2655
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8394, !tbaa !2655
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !8395
  store i32 %call, i32* %retval, align 4, !dbg !8396
  br label %return, !dbg !8396

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8397, !tbaa !2668
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8398, !tbaa !2655
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !8399
  store i32 %call1, i32* %retval, align 4, !dbg !8400
  br label %return, !dbg !8400

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8401
  ret i32 %5, !dbg !8401
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #10 !dbg !8402 !ctir !561 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %buf.addr = alloca i8*, align 8, !ctir !525
  %length.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !563
  %word = alloca i8, align 1, !ctir !565
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8403, metadata !DIExpression()), !dbg !8404
  store i64 %length, i64* %length.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8405, metadata !DIExpression()), !dbg !8406
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8407, metadata !DIExpression()), !dbg !8408
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8409, !tbaa !2668
  store i8* %0, i8** %p, align 8, !dbg !8408, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8410, metadata !DIExpression()), !dbg !8411
  %1 = load i64, i64* %length.addr, align 8, !dbg !8412, !tbaa !3308
  %tobool = icmp ne i64 %1, 0, !dbg !8412
  br i1 %tobool, label %if.end, label %if.then, !dbg !8414

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8415
  br label %return, !dbg !8415

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8416

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8417, !tbaa !3308
  %and = and i64 %2, 0, !dbg !8417
  %tobool1 = icmp ne i64 %and, 0, !dbg !8416
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8416

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8418, !tbaa !2668
  %4 = load i8, i8* %3, align 1, !dbg !8421, !tbaa !3315, !ctir !564
  %tobool2 = icmp ne i8 %4, 0, !dbg !8421
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8422

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8423
  br label %return, !dbg !8423

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8424, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8424
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8424, !tbaa !2668
  %6 = load i64, i64* %length.addr, align 8, !dbg !8425, !tbaa !3308
  %dec = add i64 %6, -1, !dbg !8425
  store i64 %dec, i64* %length.addr, align 8, !dbg !8425, !tbaa !3308
  %7 = load i64, i64* %length.addr, align 8, !dbg !8426, !tbaa !3308
  %tobool5 = icmp ne i64 %7, 0, !dbg !8426
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8428

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8429
  br label %return, !dbg !8429

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8416, !llvm.loop !8430

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8432

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8433, !tbaa !2668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8437
  %9 = load i8, i8* %word, align 1, !dbg !8438, !tbaa !3315
  %tobool8 = icmp ne i8 %9, 0, !dbg !8438
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8440

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8441
  br label %return, !dbg !8441

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8442, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8442
  store i8* %add.ptr, i8** %p, align 8, !dbg !8442, !tbaa !2668
  %11 = load i64, i64* %length.addr, align 8, !dbg !8443, !tbaa !3308
  %sub = sub i64 %11, 1, !dbg !8443
  store i64 %sub, i64* %length.addr, align 8, !dbg !8443, !tbaa !3308
  %12 = load i64, i64* %length.addr, align 8, !dbg !8444, !tbaa !3308
  %tobool11 = icmp ne i64 %12, 0, !dbg !8444
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8446

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8447
  br label %return, !dbg !8447

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8448, !tbaa !3308
  %and14 = and i64 %13, 15, !dbg !8448
  %cmp = icmp eq i64 %and14, 0, !dbg !8450
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8451

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8452

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8453, !llvm.loop !8454

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8457, !tbaa !2668
  %15 = load i8*, i8** %p, align 8, !dbg !8458, !tbaa !2668
  %16 = load i64, i64* %length.addr, align 8, !dbg !8459, !tbaa !3308
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8460
  %cmp17 = icmp eq i32 %call, 0, !dbg !8461
  store i1 %cmp17, i1* %retval, align 1, !dbg !8462
  br label %return, !dbg !8462

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8463
  ret i1 %17, !dbg !8463
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8464 !ctir !548 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %fd.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !177
  %punch_holes.addr = alloca i8, align 1, !ctir !139
  %size.addr = alloca i64, align 8, !ctir !358
  %file_end = alloca i64, align 8, !ctir !358
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8467, metadata !DIExpression()), !dbg !8468
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8469, metadata !DIExpression()), !dbg !8470
  store i64 %size, i64* %size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8471, metadata !DIExpression()), !dbg !8472
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8473, metadata !DIExpression()), !dbg !8474
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8475, !tbaa !2655
  %1 = load i64, i64* %size.addr, align 8, !dbg !8476, !tbaa !3308
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #9, !dbg !8477
  store i64 %call, i64* %file_end, align 8, !dbg !8474, !tbaa !3308
  %2 = load i64, i64* %file_end, align 8, !dbg !8478, !tbaa !3308
  %cmp = icmp slt i64 %2, 0, !dbg !8480
  br i1 %cmp, label %if.then, label %if.end, !dbg !8481

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8482
  %3 = load i32, i32* %call1, align 4, !dbg !8482, !tbaa !2655, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.155, i64 0, i64 0)) #9, !dbg !8484
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8485, !tbaa !2668
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !8485
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !8486
  store i1 false, i1* %retval, align 1, !dbg !8487
  br label %return, !dbg !8487

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !8488, !tbaa !2762
  %tobool = trunc i8 %5 to i1, !dbg !8488
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8490

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !8491, !tbaa !2655
  %7 = load i64, i64* %file_end, align 8, !dbg !8492, !tbaa !3308
  %8 = load i64, i64* %size.addr, align 8, !dbg !8493, !tbaa !3308
  %sub = sub nsw i64 %7, %8, !dbg !8494
  %9 = load i64, i64* %size.addr, align 8, !dbg !8495, !tbaa !3308
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !8496
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8497
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8498

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #16, !dbg !8499
  %10 = load i32, i32* %call7, align 4, !dbg !8499, !tbaa !2655, !ctir !5
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.156, i64 0, i64 0)) #9, !dbg !8501
  %11 = load i8*, i8** %name.addr, align 8, !dbg !8502, !tbaa !2668
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !8502
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !8503
  store i1 false, i1* %retval, align 1, !dbg !8504
  br label %return, !dbg !8504

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !8505
  br label %return, !dbg !8505

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !8506
  ret i1 %12, !dbg !8506
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !8507 !ctir !552 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %offset.addr = alloca i64, align 8, !ctir !358
  %length.addr = alloca i64, align 8, !ctir !358
  %ret = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8508, metadata !DIExpression()), !dbg !8509
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8510, metadata !DIExpression()), !dbg !8511
  store i64 %length, i64* %length.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8512, metadata !DIExpression()), !dbg !8513
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8514, metadata !DIExpression()), !dbg !8515
  store i32 0, i32* %ret, align 4, !dbg !8515, !tbaa !2655
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8516, !tbaa !2655
  %1 = load i64, i64* %offset.addr, align 8, !dbg !8517, !tbaa !3308
  %2 = load i64, i64* %length.addr, align 8, !dbg !8518, !tbaa !3308
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !8519
  store i32 %call, i32* %ret, align 4, !dbg !8520, !tbaa !2655
  %3 = load i32, i32* %ret, align 4, !dbg !8521, !tbaa !2655
  %cmp = icmp slt i32 %3, 0, !dbg !8523
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8524

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8525
  %4 = load i32, i32* %call1, align 4, !dbg !8525, !tbaa !2655, !ctir !5
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !8526
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !8527

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #16, !dbg !8528
  %5 = load i32, i32* %call3, align 4, !dbg !8528, !tbaa !2655, !ctir !5
  %cmp4 = icmp eq i32 %5, 38, !dbg !8529
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8530

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !8531, !tbaa !2655
  br label %if.end, !dbg !8532

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8533, !tbaa !2655
  ret i32 %6, !dbg !8534
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !8535 !ctir !253 {
entry:
  %err.addr = alloca i32, align 4, !ctir !5
  store i32 %err, i32* %err.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8536, metadata !DIExpression()), !dbg !8537
  %0 = load i32, i32* %err.addr, align 4, !dbg !8538, !tbaa !2655
  %cmp = icmp eq i32 %0, 95, !dbg !8539
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8540

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8540

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8541
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !8542 !ctir !536 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8, !ctir !538
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8543, metadata !DIExpression()), !dbg !8544
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8545, !tbaa !2668
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8546, !ctir !539
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8546, !tbaa !7950, !ctir !529
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !8545
  call void @free(i8* %2) #9, !dbg !8547
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8548, !tbaa !2668
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8549, !ctir !539
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !8550, !tbaa !7950, !ctir !529
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8551, !tbaa !2668
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !8552, !ctir !539
  store i64 0, i64* %ei_count, align 8, !dbg !8553, !tbaa !7931, !ctir !52
  ret void, !dbg !8554
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !586 !ctir !550 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %fd.addr = alloca i32, align 4, !ctir !5
  %n_bytes.addr = alloca i64, align 8, !ctir !358
  %n = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8555, metadata !DIExpression()), !dbg !8556
  store i64 %n_bytes, i64* %n_bytes.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !8557, metadata !DIExpression()), !dbg !8558
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8559, !tbaa !2668
  %cmp = icmp eq i8* %0, null, !dbg !8561
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8562

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !8563, !tbaa !3308
  %call = call noalias i8* @calloc(i64 %1, i64 1) #9, !dbg !8565
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !8566, !tbaa !2668
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8567, !tbaa !2668
  %cmp1 = icmp eq i8* %2, null, !dbg !8569
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8570

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !8571, !tbaa !2668
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !8573, !tbaa !3308
  br label %if.end, !dbg !8574

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8575

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !8576

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !8577, !tbaa !3308
  %tobool = icmp ne i64 %3, 0, !dbg !8576
  br i1 %tobool, label %while.body, label %while.end, !dbg !8576

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8578, metadata !DIExpression()), !dbg !8580
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !8581, !tbaa !3308
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !8581, !tbaa !3308
  %cmp4 = icmp ult i64 %4, %5, !dbg !8581
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8581

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !8581, !tbaa !3308
  br label %cond.end, !dbg !8581

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !8581, !tbaa !3308
  br label %cond.end, !dbg !8581

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8581
  store i64 %cond, i64* %n, align 8, !dbg !8580, !tbaa !3308
  %8 = load i32, i32* %fd.addr, align 4, !dbg !8582, !tbaa !2655
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8584, !tbaa !2668
  %10 = load i64, i64* %n, align 8, !dbg !8585, !tbaa !3308
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !8586
  %11 = load i64, i64* %n, align 8, !dbg !8587, !tbaa !3308
  %cmp6 = icmp ne i64 %call5, %11, !dbg !8588
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8589

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !8590
  br label %return, !dbg !8590

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !8591, !tbaa !3308
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !8592, !tbaa !3308
  %sub = sub i64 %13, %12, !dbg !8592
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !8592, !tbaa !3308
  br label %while.cond, !dbg !8576, !llvm.loop !8593

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !8595
  br label %return, !dbg !8595

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !8596
  ret i1 %14, !dbg !8596
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !8597 !ctir !462 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %mode.addr = alloca i32, align 4, !ctir !136
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8600, metadata !DIExpression()), !dbg !8601
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8602, !tbaa !2655
  %and = and i32 %0, 61440, !dbg !8602
  %cmp = icmp eq i32 %and, 40960, !dbg !8602
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8603

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !8604
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !8605

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !8606, !tbaa !2668
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #9, !dbg !8607
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8608
  br label %lor.end, !dbg !8605

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !8609
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !8610 !ctir !407 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8, !ctir !409
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8611, metadata !DIExpression()), !dbg !8612
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8613, !tbaa !2668
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !8614
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !8614
  %call = call i32 @geteuid() #9, !dbg !8615
  %cmp = icmp eq i32 %call, 0, !dbg !8616
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8617, !tbaa !2668
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8618, !ctir !364
  %frombool = zext i1 %cmp to i8, !dbg !8619
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !8619, !tbaa !7806, !ctir !139
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8620, !tbaa !2668
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !8621, !ctir !364
  %frombool1 = zext i1 %cmp to i8, !dbg !8622
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !8622, !tbaa !7575, !ctir !139
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8623, !tbaa !2668
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !8624, !ctir !364
  store i32 -1, i32* %rename_errno, align 4, !dbg !8625, !tbaa !4540, !ctir !5
  ret void, !dbg !8626
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !8627 !ctir !599 {
entry:
  %ino.addr = alloca i64, align 8, !ctir !447
  %dev.addr = alloca i64, align 8, !ctir !449
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !602
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !601
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8628, metadata !DIExpression()), !dbg !8629
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8630, metadata !DIExpression()), !dbg !8631
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !8632, metadata !DIExpression()), !dbg !8633
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8634, metadata !DIExpression()), !dbg !8635
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8636, !tbaa !3308
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !8637, !ctir !602
  store i64 %0, i64* %st_ino, align 8, !dbg !8638, !tbaa !8639, !ctir !447
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8641, !tbaa !3308
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !8642, !ctir !602
  store i64 %1, i64* %st_dev, align 8, !dbg !8643, !tbaa !8644, !ctir !449
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !8645, !ctir !602
  store i8* null, i8** %name, align 8, !dbg !8646, !tbaa !8647, !ctir !7
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8648, !tbaa !2668
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !8649
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !8650
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8650
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !8651, !tbaa !2668
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8652, !tbaa !2668
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8652
  br i1 %tobool, label %if.then, label %if.end, !dbg !8654

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8655, !tbaa !2668
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !8655
  call void @src_to_dest_free(i8* %7), !dbg !8656
  br label %if.end, !dbg !8656

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8657
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !8658 !ctir !613 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !601
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8659, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8661, metadata !DIExpression()), !dbg !8662
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8663, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8663
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8662, !tbaa !2668
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8664, !tbaa !2668
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8665, !ctir !602
  %3 = load i8*, i8** %name, align 8, !dbg !8665, !tbaa !8647, !ctir !7
  call void @free(i8* %3) #9, !dbg !8666
  %4 = load i8*, i8** %x.addr, align 8, !dbg !8667, !tbaa !2668
  call void @free(i8* %4) #9, !dbg !8668
  ret void, !dbg !8669
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !8670 !ctir !607 {
entry:
  %ino.addr = alloca i64, align 8, !ctir !447
  %dev.addr = alloca i64, align 8, !ctir !449
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !602
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !609
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !8675, metadata !DIExpression()), !dbg !8676
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !8677, metadata !DIExpression()), !dbg !8678
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8679, !tbaa !3308
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !8680, !ctir !602
  store i64 %0, i64* %st_ino, align 8, !dbg !8681, !tbaa !8639, !ctir !447
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8682, !tbaa !3308
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !8683, !ctir !602
  store i64 %1, i64* %st_dev, align 8, !dbg !8684, !tbaa !8644, !ctir !449
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8685, !tbaa !2668
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !8686
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !8687
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8687
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !8688, !tbaa !2668
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8689, !tbaa !2668
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8689
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8689

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8690, !tbaa !2668
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !8691, !ctir !610
  %7 = load i8*, i8** %name, align 8, !dbg !8691, !tbaa !8647, !ctir !7
  br label %cond.end, !dbg !8689

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8689

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !8689
  ret i8* %cond, !dbg !8692
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !8693 !ctir !611 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %name.addr = alloca i8*, align 8, !ctir !177
  %ino.addr = alloca i64, align 8, !ctir !447
  %dev.addr = alloca i64, align 8, !ctir !449
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !601
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !601
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8694, metadata !DIExpression()), !dbg !8695
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8696, metadata !DIExpression()), !dbg !8697
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8698, metadata !DIExpression()), !dbg !8699
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8700, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !8702, metadata !DIExpression()), !dbg !8703
  %call = call noalias i8* @xmalloc(i64 24), !dbg !8704
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8704
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !8705, !tbaa !2668
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8706, !tbaa !2668
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !8707
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8708, !tbaa !2668
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8709, !ctir !602
  store i8* %call1, i8** %name2, align 8, !dbg !8710, !tbaa !8647, !ctir !7
  %3 = load i64, i64* %ino.addr, align 8, !dbg !8711, !tbaa !3308
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8712, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8713, !ctir !602
  store i64 %3, i64* %st_ino, align 8, !dbg !8714, !tbaa !8639, !ctir !447
  %5 = load i64, i64* %dev.addr, align 8, !dbg !8715, !tbaa !3308
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8716, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !8717, !ctir !602
  store i64 %5, i64* %st_dev, align 8, !dbg !8718, !tbaa !8644, !ctir !449
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8719, !tbaa !2668
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8720, !tbaa !2668
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !8720
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !8721
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !8721
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8722, !tbaa !2668
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8723, !tbaa !2668
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !8725
  br i1 %cmp, label %if.then, label %if.end, !dbg !8726

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8727
  unreachable, !dbg !8727

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8729, !tbaa !2668
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8731, !tbaa !2668
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !8732
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8733

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8734, !tbaa !2668
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !8734
  call void @src_to_dest_free(i8* %15), !dbg !8736
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8737, !tbaa !2668
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !8738, !ctir !602
  %17 = load i8*, i8** %name6, align 8, !dbg !8738, !tbaa !8647, !ctir !7
  store i8* %17, i8** %retval, align 8, !dbg !8739
  br label %return, !dbg !8739

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !8740
  br label %return, !dbg !8740

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !8741
  ret i8* %18, !dbg !8741
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !8742 !ctir !197 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !8743
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !8744, !tbaa !2668
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8745, !tbaa !2668
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !8747
  br i1 %cmp, label %if.then, label %if.end, !dbg !8748

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8749
  unreachable, !dbg !8749

if.end:                                           ; preds = %entry
  ret void, !dbg !8750
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !8751 !ctir !615 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !609
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8752, metadata !DIExpression()), !dbg !8753
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !8754, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !8756, metadata !DIExpression()), !dbg !8757
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8758, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8758
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !8757, !tbaa !2668
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !8759, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !8760, !ctir !610
  %3 = load i64, i64* %st_ino, align 8, !dbg !8760, !tbaa !8639, !ctir !447
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !8761, !tbaa !3308
  %rem = urem i64 %3, %4, !dbg !8762
  ret i64 %rem, !dbg !8763
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !8764 !ctir !617 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %y.addr = alloca i8*, align 8, !ctir !525
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !609
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !609
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8765, metadata !DIExpression()), !dbg !8766
  store i8* %y, i8** %y.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8769, metadata !DIExpression()), !dbg !8770
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8771, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8771
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8770, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !8772, metadata !DIExpression()), !dbg !8773
  %2 = load i8*, i8** %y.addr, align 8, !dbg !8774, !tbaa !2668
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !8774
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !8773, !tbaa !2668
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8775, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8775, !ctir !610
  %5 = load i64, i64* %st_ino, align 8, !dbg !8775, !tbaa !8639, !ctir !447
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8775, !tbaa !2668
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !8775, !ctir !610
  %7 = load i64, i64* %st_ino1, align 8, !dbg !8775, !tbaa !8639, !ctir !447
  %cmp = icmp eq i64 %5, %7, !dbg !8775
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8775

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8775, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !8775, !ctir !610
  %9 = load i64, i64* %st_dev, align 8, !dbg !8775, !tbaa !8644, !ctir !449
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8775, !tbaa !2668
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !8775, !ctir !610
  %11 = load i64, i64* %st_dev2, align 8, !dbg !8775, !tbaa !8644, !ctir !449
  %cmp3 = icmp eq i64 %9, %11, !dbg !8775
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8776
  %13 = zext i1 %12 to i64, !dbg !8775
  %cond = select i1 %12, i32 1, i32 0, !dbg !8775
  %tobool = icmp ne i32 %cond, 0, !dbg !8775
  ret i1 %tobool, !dbg !8777
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !8778 !ctir !197 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8779, !tbaa !2668
  call void @hash_free(%struct.hash_table* %0), !dbg !8780
  ret void, !dbg !8781
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !8782 !ctir !1468 {
entry:
  %src_fd.addr = alloca i32, align 4, !ctir !5
  %scan.addr = alloca %struct.extent_scan*, align 8, !ctir !1470
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8783, metadata !DIExpression()), !dbg !8784
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8785, metadata !DIExpression()), !dbg !8786
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8787, !tbaa !2655
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8788, !tbaa !2668
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !8789, !ctir !1471
  store i32 %0, i32* %fd, align 8, !dbg !8790, !tbaa !8791, !ctir !5
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8792, !tbaa !2668
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !8793, !ctir !1471
  store i64 0, i64* %ei_count, align 8, !dbg !8794, !tbaa !7931, !ctir !52
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8795, !tbaa !2668
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8796, !ctir !1471
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !8797, !tbaa !7950, !ctir !1480
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8798, !tbaa !2668
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8799, !ctir !1471
  store i64 0, i64* %scan_start, align 8, !dbg !8800, !tbaa !8801, !ctir !1467
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8802, !tbaa !2668
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !8803, !ctir !1471
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !8804, !tbaa !7911, !ctir !139
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8805, !tbaa !2668
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !8806, !ctir !1471
  store i8 0, i8* %hit_final_extent, align 1, !dbg !8807, !tbaa !7905, !ctir !139
  %call = call zeroext i1 @extent_need_sync(), !dbg !8808
  %7 = zext i1 %call to i64, !dbg !8808
  %cond = select i1 %call, i32 1, i32 0, !dbg !8808
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8809, !tbaa !2668
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !8810, !ctir !1471
  store i32 %cond, i32* %fm_flags, align 8, !dbg !8811, !tbaa !8812, !ctir !67
  ret void, !dbg !8813
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !8814 !ctir !1327 {
entry:
  ret i1 true, !dbg !8815
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !8816 !ctir !1486 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %scan.addr = alloca %struct.extent_scan*, align 8, !ctir !1470
  %si = alloca i32, align 4, !ctir !67
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1480
  %fiemap_buf = alloca %union.anon.12, align 8, !ctir !8817
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1488
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1514
  %prev_idx = alloca i64, align 8, !ctir !52
  %i = alloca i32, align 4, !ctir !67
  %new_logical = alloca i64, align 8, !ctir !1493
  %length_adjust = alloca i64, align 8, !ctir !1493
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8821, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.declare(metadata i32* %si, metadata !8823, metadata !DIExpression()), !dbg !8824
  store i32 0, i32* %si, align 4, !dbg !8824, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !8825, metadata !DIExpression()), !dbg !8826
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8827, !tbaa !2668
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8828, !ctir !1471
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8828, !tbaa !7950, !ctir !1480
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !8826, !tbaa !2668
  br label %while.body, !dbg !8829

while.body:                                       ; preds = %entry, %if.end162
  call void @llvm.dbg.declare(metadata %union.anon.12* %fiemap_buf, metadata !8830, metadata !DIExpression()), !dbg !8832
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !8833, metadata !DIExpression()), !dbg !8834
  %f = bitcast %union.anon.12* %fiemap_buf to %struct.fiemap*, !dbg !8835
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !8834, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !8836, metadata !DIExpression()), !dbg !8837
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8838, !tbaa !2668
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !8839, !ctir !1489
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !8838, !ctir !1501
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8837, !tbaa !2668
  %3 = bitcast %union.anon.12* %fiemap_buf to i8*, !dbg !8840
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !8840
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8841, !tbaa !2668
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8842, !ctir !1471
  %5 = load i64, i64* %scan_start, align 8, !dbg !8842, !tbaa !8801, !ctir !1467
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8843, !tbaa !2668
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !8844, !ctir !1489
  store i64 %5, i64* %fm_start, align 8, !dbg !8845, !tbaa !3308, !ctir !1493
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8846, !tbaa !2668
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !8847, !ctir !1471
  %8 = load i32, i32* %fm_flags, align 8, !dbg !8847, !tbaa !8812, !ctir !67
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8848, !tbaa !2668
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !8849, !ctir !1489
  store i32 %8, i32* %fm_flags2, align 8, !dbg !8850, !tbaa !2655, !ctir !1496
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8851, !tbaa !2668
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !8852, !ctir !1489
  store i32 72, i32* %fm_extent_count, align 8, !dbg !8853, !tbaa !2655, !ctir !1496
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8854, !tbaa !2668
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !8855, !ctir !1471
  %12 = load i64, i64* %scan_start3, align 8, !dbg !8855, !tbaa !8801, !ctir !1467
  %sub = sub i64 -1, %12, !dbg !8856
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8857, !tbaa !2668
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !8858, !ctir !1489
  store i64 %sub, i64* %fm_length, align 8, !dbg !8859, !tbaa !3308, !ctir !1493
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8860, !tbaa !2668
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !8862, !ctir !1471
  %15 = load i32, i32* %fd, align 8, !dbg !8862, !tbaa !8791, !ctir !5
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8863, !tbaa !2668
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #9, !dbg !8864
  %cmp = icmp slt i32 %call, 0, !dbg !8865
  br i1 %cmp, label %if.then, label %if.end7, !dbg !8866

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8867, !tbaa !2668
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !8870, !ctir !1471
  %18 = load i64, i64* %scan_start4, align 8, !dbg !8870, !tbaa !8801, !ctir !1467
  %cmp5 = icmp eq i64 %18, 0, !dbg !8871
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8872

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8873, !tbaa !2668
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !8874, !ctir !1471
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !8875, !tbaa !7911, !ctir !139
  br label %if.end, !dbg !8873

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !8876
  br label %return, !dbg !8876

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8877, !tbaa !2668
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !8879, !ctir !1489
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !8879, !tbaa !2655, !ctir !1496
  %cmp8 = icmp eq i32 %21, 0, !dbg !8880
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8881

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8882, !tbaa !2668
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !8884, !ctir !1471
  store i8 1, i8* %hit_final_extent, align 1, !dbg !8885, !tbaa !7905, !ctir !139
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8886, !tbaa !2668
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !8887, !ctir !1471
  %24 = load i64, i64* %scan_start10, align 8, !dbg !8887, !tbaa !8801, !ctir !1467
  %cmp11 = icmp ne i64 %24, 0, !dbg !8888
  store i1 %cmp11, i1* %retval, align 1, !dbg !8889
  br label %return, !dbg !8889

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8890, !tbaa !2668
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !8890, !ctir !1471
  %26 = load i64, i64* %ei_count, align 8, !dbg !8890, !tbaa !7931, !ctir !52
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8890, !tbaa !2668
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !8890, !ctir !1489
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !8890, !tbaa !2655, !ctir !1496
  %conv = zext i32 %28 to i64, !dbg !8890
  %sub14 = sub i64 -1, %conv, !dbg !8890
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !8890
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !8890

cond.true:                                        ; preds = %if.end12
  br label %cond.end, !dbg !8890

cond.false:                                       ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.187, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.188, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8890
  unreachable, !dbg !8890

29:                                               ; No predecessors!
  br label %cond.end, !dbg !8890

cond.end:                                         ; preds = %29, %cond.true
  %30 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8891, !tbaa !2668
  %fm_mapped_extents17 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %30, i32 0, i32 3, !dbg !8892, !ctir !1489
  %31 = load i32, i32* %fm_mapped_extents17, align 4, !dbg !8892, !tbaa !2655, !ctir !1496
  %conv18 = zext i32 %31 to i64, !dbg !8891
  %32 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8893, !tbaa !2668
  %ei_count19 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %32, i32 0, i32 3, !dbg !8894, !ctir !1471
  %33 = load i64, i64* %ei_count19, align 8, !dbg !8895, !tbaa !7931, !ctir !52
  %add = add i64 %33, %conv18, !dbg !8895
  store i64 %add, i64* %ei_count19, align 8, !dbg !8895, !tbaa !7931, !ctir !52
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !8896, metadata !DIExpression()), !dbg !8898
  %34 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8899, !tbaa !2668
  %35 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8900, !tbaa !2668
  %ext_info20 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %35, i32 0, i32 6, !dbg !8901, !ctir !1471
  %36 = load %struct.extent_info*, %struct.extent_info** %ext_info20, align 8, !dbg !8901, !tbaa !7950, !ctir !1480
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %34 to i64, !dbg !8902
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %36 to i64, !dbg !8902
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8902
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !8902
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !8898, !tbaa !3308
  %37 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8903, !tbaa !2668
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %37, i32 0, i32 6, !dbg !8904, !ctir !1471
  %38 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8904, !tbaa !7950, !ctir !1480
  %39 = bitcast %struct.extent_info* %38 to i8*, !dbg !8903
  %40 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8905, !tbaa !2668
  %ei_count22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %40, i32 0, i32 3, !dbg !8906, !ctir !1471
  %41 = load i64, i64* %ei_count22, align 8, !dbg !8906, !tbaa !7931, !ctir !52
  %call23 = call i8* @xnrealloc(i8* %39, i64 %41, i64 24), !dbg !8907
  %42 = bitcast i8* %call23 to %struct.extent_info*, !dbg !8907
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8908, !tbaa !2668
  %ext_info24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !8909, !ctir !1471
  store %struct.extent_info* %42, %struct.extent_info** %ext_info24, align 8, !dbg !8910, !tbaa !7950, !ctir !1480
  %44 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8911, !tbaa !2668
  %ext_info25 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %44, i32 0, i32 6, !dbg !8912, !ctir !1471
  %45 = load %struct.extent_info*, %struct.extent_info** %ext_info25, align 8, !dbg !8912, !tbaa !7950, !ctir !1480
  %46 = load i64, i64* %prev_idx, align 8, !dbg !8913, !tbaa !3308
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %45, i64 %46, !dbg !8914
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !8915, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8916, metadata !DIExpression()), !dbg !8917
  store i32 0, i32* %i, align 4, !dbg !8917, !tbaa !2655
  store i32 0, i32* %i, align 4, !dbg !8918, !tbaa !2655
  br label %for.cond, !dbg !8920

for.cond:                                         ; preds = %for.inc, %cond.end
  %47 = load i32, i32* %i, align 4, !dbg !8921, !tbaa !2655
  %48 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8923, !tbaa !2668
  %fm_mapped_extents26 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %48, i32 0, i32 3, !dbg !8924, !ctir !1489
  %49 = load i32, i32* %fm_mapped_extents26, align 4, !dbg !8924, !tbaa !2655, !ctir !1496
  %cmp27 = icmp ult i32 %47, %49, !dbg !8925
  br i1 %cmp27, label %for.body, label %for.end, !dbg !8926

for.body:                                         ; preds = %for.cond
  %50 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8927, !tbaa !2668
  %51 = load i32, i32* %i, align 4, !dbg !8927, !tbaa !2655
  %idxprom = zext i32 %51 to i64, !dbg !8927
  %arrayidx29 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %50, i64 %idxprom, !dbg !8927, !ctir !1514
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx29, i32 0, i32 0, !dbg !8927, !ctir !1502
  %52 = load i64, i64* %fe_logical, align 8, !dbg !8927, !tbaa !8929, !ctir !1493
  %53 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8927, !tbaa !2668
  %54 = load i32, i32* %i, align 4, !dbg !8927, !tbaa !2655
  %idxprom30 = zext i32 %54 to i64, !dbg !8927
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %53, i64 %idxprom30, !dbg !8927, !ctir !1514
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 2, !dbg !8927, !ctir !1502
  %55 = load i64, i64* %fe_length, align 8, !dbg !8927, !tbaa !8931, !ctir !1493
  %sub32 = sub i64 9223372036854775807, %55, !dbg !8927
  %cmp33 = icmp ule i64 %52, %sub32, !dbg !8927
  br i1 %cmp33, label %cond.true35, label %cond.false36, !dbg !8927

cond.true35:                                      ; preds = %for.body
  br label %cond.end37, !dbg !8927

cond.false36:                                     ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.189, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.188, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8927
  unreachable, !dbg !8927

56:                                               ; No predecessors!
  br label %cond.end37, !dbg !8927

cond.end37:                                       ; preds = %56, %cond.true35
  %57 = load i32, i32* %si, align 4, !dbg !8932, !tbaa !2655
  %tobool = icmp ne i32 %57, 0, !dbg !8932
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8934

land.lhs.true:                                    ; preds = %cond.end37
  %58 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8935, !tbaa !2668
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %58, i32 0, i32 2, !dbg !8936, !ctir !1481
  %59 = load i32, i32* %ext_flags, align 8, !dbg !8936, !tbaa !8937, !ctir !67
  %60 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8938, !tbaa !2668
  %61 = load i32, i32* %i, align 4, !dbg !8939, !tbaa !2655
  %idxprom38 = zext i32 %61 to i64, !dbg !8938
  %arrayidx39 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %60, i64 %idxprom38, !dbg !8938, !ctir !1514
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx39, i32 0, i32 4, !dbg !8940, !ctir !1502
  %62 = load i32, i32* %fe_flags, align 8, !dbg !8940, !tbaa !8941, !ctir !1496
  %and = and i32 %62, -2, !dbg !8942
  %cmp40 = icmp eq i32 %59, %and, !dbg !8943
  br i1 %cmp40, label %land.lhs.true42, label %if.else, !dbg !8944

land.lhs.true42:                                  ; preds = %land.lhs.true
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8945, !tbaa !2668
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 0, !dbg !8946, !ctir !1481
  %64 = load i64, i64* %ext_logical, align 8, !dbg !8946, !tbaa !7954, !ctir !1467
  %65 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8947, !tbaa !2668
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %65, i32 0, i32 1, !dbg !8948, !ctir !1481
  %66 = load i64, i64* %ext_length, align 8, !dbg !8948, !tbaa !7961, !ctir !1467
  %add43 = add nsw i64 %64, %66, !dbg !8949
  %67 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8950, !tbaa !2668
  %68 = load i32, i32* %i, align 4, !dbg !8951, !tbaa !2655
  %idxprom44 = zext i32 %68 to i64, !dbg !8950
  %arrayidx45 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %67, i64 %idxprom44, !dbg !8950, !ctir !1514
  %fe_logical46 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx45, i32 0, i32 0, !dbg !8952, !ctir !1502
  %69 = load i64, i64* %fe_logical46, align 8, !dbg !8952, !tbaa !8929, !ctir !1493
  %cmp47 = icmp eq i64 %add43, %69, !dbg !8953
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !8954

if.then49:                                        ; preds = %land.lhs.true42
  %70 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8955, !tbaa !2668
  %71 = load i32, i32* %i, align 4, !dbg !8957, !tbaa !2655
  %idxprom50 = zext i32 %71 to i64, !dbg !8955
  %arrayidx51 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %70, i64 %idxprom50, !dbg !8955, !ctir !1514
  %fe_length52 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx51, i32 0, i32 2, !dbg !8958, !ctir !1502
  %72 = load i64, i64* %fe_length52, align 8, !dbg !8958, !tbaa !8931, !ctir !1493
  %73 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8959, !tbaa !2668
  %ext_length53 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %73, i32 0, i32 1, !dbg !8960, !ctir !1481
  %74 = load i64, i64* %ext_length53, align 8, !dbg !8961, !tbaa !7961, !ctir !1467
  %add54 = add i64 %74, %72, !dbg !8961
  store i64 %add54, i64* %ext_length53, align 8, !dbg !8961, !tbaa !7961, !ctir !1467
  %75 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8962, !tbaa !2668
  %76 = load i32, i32* %i, align 4, !dbg !8963, !tbaa !2655
  %idxprom55 = zext i32 %76 to i64, !dbg !8962
  %arrayidx56 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %75, i64 %idxprom55, !dbg !8962, !ctir !1514
  %fe_flags57 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx56, i32 0, i32 4, !dbg !8964, !ctir !1502
  %77 = load i32, i32* %fe_flags57, align 8, !dbg !8964, !tbaa !8941, !ctir !1496
  %78 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8965, !tbaa !2668
  %ext_flags58 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %78, i32 0, i32 2, !dbg !8966, !ctir !1481
  store i32 %77, i32* %ext_flags58, align 8, !dbg !8967, !tbaa !8937, !ctir !67
  br label %if.end128, !dbg !8968

if.else:                                          ; preds = %land.lhs.true42, %land.lhs.true, %cond.end37
  %79 = load i32, i32* %si, align 4, !dbg !8969, !tbaa !2655
  %cmp59 = icmp eq i32 %79, 0, !dbg !8971
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false, !dbg !8972

land.lhs.true61:                                  ; preds = %if.else
  %80 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8973, !tbaa !2668
  %scan_start62 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %80, i32 0, i32 1, !dbg !8974, !ctir !1471
  %81 = load i64, i64* %scan_start62, align 8, !dbg !8974, !tbaa !8801, !ctir !1467
  %82 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8975, !tbaa !2668
  %83 = load i32, i32* %i, align 4, !dbg !8976, !tbaa !2655
  %idxprom63 = zext i32 %83 to i64, !dbg !8975
  %arrayidx64 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %82, i64 %idxprom63, !dbg !8975, !ctir !1514
  %fe_logical65 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx64, i32 0, i32 0, !dbg !8977, !ctir !1502
  %84 = load i64, i64* %fe_logical65, align 8, !dbg !8977, !tbaa !8929, !ctir !1493
  %cmp66 = icmp ugt i64 %81, %84, !dbg !8978
  br i1 %cmp66, label %if.then78, label %lor.lhs.false, !dbg !8979

lor.lhs.false:                                    ; preds = %land.lhs.true61, %if.else
  %85 = load i32, i32* %si, align 4, !dbg !8980, !tbaa !2655
  %tobool68 = icmp ne i32 %85, 0, !dbg !8980
  br i1 %tobool68, label %land.lhs.true69, label %if.else112, !dbg !8981

land.lhs.true69:                                  ; preds = %lor.lhs.false
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8982, !tbaa !2668
  %ext_logical70 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 0, !dbg !8983, !ctir !1481
  %87 = load i64, i64* %ext_logical70, align 8, !dbg !8983, !tbaa !7954, !ctir !1467
  %88 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !8984, !tbaa !2668
  %ext_length71 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %88, i32 0, i32 1, !dbg !8985, !ctir !1481
  %89 = load i64, i64* %ext_length71, align 8, !dbg !8985, !tbaa !7961, !ctir !1467
  %add72 = add nsw i64 %87, %89, !dbg !8986
  %90 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8987, !tbaa !2668
  %91 = load i32, i32* %i, align 4, !dbg !8988, !tbaa !2655
  %idxprom73 = zext i32 %91 to i64, !dbg !8987
  %arrayidx74 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %90, i64 %idxprom73, !dbg !8987, !ctir !1514
  %fe_logical75 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx74, i32 0, i32 0, !dbg !8989, !ctir !1502
  %92 = load i64, i64* %fe_logical75, align 8, !dbg !8989, !tbaa !8929, !ctir !1493
  %cmp76 = icmp ugt i64 %add72, %92, !dbg !8990
  br i1 %cmp76, label %if.then78, label %if.else112, !dbg !8991

if.then78:                                        ; preds = %land.lhs.true69, %land.lhs.true61
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !8992, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !8995, metadata !DIExpression()), !dbg !8996
  %93 = load i32, i32* %si, align 4, !dbg !8997, !tbaa !2655
  %cmp79 = icmp eq i32 %93, 0, !dbg !8999
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !9000

if.then81:                                        ; preds = %if.then78
  %94 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9001, !tbaa !2668
  %scan_start82 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %94, i32 0, i32 1, !dbg !9002, !ctir !1471
  %95 = load i64, i64* %scan_start82, align 8, !dbg !9002, !tbaa !8801, !ctir !1467
  store i64 %95, i64* %new_logical, align 8, !dbg !9003, !tbaa !3308
  br label %if.end87, !dbg !9004

if.else83:                                        ; preds = %if.then78
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9005, !tbaa !2668
  %ext_logical84 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 0, !dbg !9007, !ctir !1481
  %97 = load i64, i64* %ext_logical84, align 8, !dbg !9007, !tbaa !7954, !ctir !1467
  %98 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9008, !tbaa !2668
  %ext_length85 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %98, i32 0, i32 1, !dbg !9009, !ctir !1481
  %99 = load i64, i64* %ext_length85, align 8, !dbg !9009, !tbaa !7961, !ctir !1467
  %add86 = add nsw i64 %97, %99, !dbg !9010
  store i64 %add86, i64* %new_logical, align 8, !dbg !9011, !tbaa !3308
  br label %if.end87

if.end87:                                         ; preds = %if.else83, %if.then81
  %100 = load i64, i64* %new_logical, align 8, !dbg !9012, !tbaa !3308
  %101 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9013, !tbaa !2668
  %102 = load i32, i32* %i, align 4, !dbg !9014, !tbaa !2655
  %idxprom88 = zext i32 %102 to i64, !dbg !9013
  %arrayidx89 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %101, i64 %idxprom88, !dbg !9013, !ctir !1514
  %fe_logical90 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx89, i32 0, i32 0, !dbg !9015, !ctir !1502
  %103 = load i64, i64* %fe_logical90, align 8, !dbg !9015, !tbaa !8929, !ctir !1493
  %sub91 = sub i64 %100, %103, !dbg !9016
  store i64 %sub91, i64* %length_adjust, align 8, !dbg !9017, !tbaa !3308
  %104 = load i64, i64* %length_adjust, align 8, !dbg !9018, !tbaa !3308
  %105 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9020, !tbaa !2668
  %106 = load i32, i32* %i, align 4, !dbg !9021, !tbaa !2655
  %idxprom92 = zext i32 %106 to i64, !dbg !9020
  %arrayidx93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %105, i64 %idxprom92, !dbg !9020, !ctir !1514
  %fe_length94 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx93, i32 0, i32 2, !dbg !9022, !ctir !1502
  %107 = load i64, i64* %fe_length94, align 8, !dbg !9022, !tbaa !8931, !ctir !1493
  %cmp95 = icmp ult i64 %104, %107, !dbg !9023
  br i1 %cmp95, label %if.then97, label %if.end104, !dbg !9024

if.then97:                                        ; preds = %if.end87
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9025, !tbaa !2668
  %scan_start98 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 1, !dbg !9028, !ctir !1471
  %109 = load i64, i64* %scan_start98, align 8, !dbg !9028, !tbaa !8801, !ctir !1467
  %cmp99 = icmp eq i64 %109, 0, !dbg !9029
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !9030

if.then101:                                       ; preds = %if.then97
  %110 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9031, !tbaa !2668
  %initial_scan_failed102 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %110, i32 0, i32 4, !dbg !9032, !ctir !1471
  store i8 1, i8* %initial_scan_failed102, align 8, !dbg !9033, !tbaa !7911, !ctir !139
  br label %if.end103, !dbg !9031

if.end103:                                        ; preds = %if.then101, %if.then97
  store i1 false, i1* %retval, align 1, !dbg !9034
  br label %return, !dbg !9034

if.end104:                                        ; preds = %if.end87
  %111 = load i64, i64* %new_logical, align 8, !dbg !9035, !tbaa !3308
  %112 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9036, !tbaa !2668
  %113 = load i32, i32* %i, align 4, !dbg !9037, !tbaa !2655
  %idxprom105 = zext i32 %113 to i64, !dbg !9036
  %arrayidx106 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %112, i64 %idxprom105, !dbg !9036, !ctir !1514
  %fe_logical107 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx106, i32 0, i32 0, !dbg !9038, !ctir !1502
  store i64 %111, i64* %fe_logical107, align 8, !dbg !9039, !tbaa !8929, !ctir !1493
  %114 = load i64, i64* %length_adjust, align 8, !dbg !9040, !tbaa !3308
  %115 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9041, !tbaa !2668
  %116 = load i32, i32* %i, align 4, !dbg !9042, !tbaa !2655
  %idxprom108 = zext i32 %116 to i64, !dbg !9041
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %115, i64 %idxprom108, !dbg !9041, !ctir !1514
  %fe_length110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 2, !dbg !9043, !ctir !1502
  %117 = load i64, i64* %fe_length110, align 8, !dbg !9044, !tbaa !8931, !ctir !1493
  %sub111 = sub i64 %117, %114, !dbg !9044
  store i64 %sub111, i64* %fe_length110, align 8, !dbg !9044, !tbaa !8931, !ctir !1493
  %118 = load i32, i32* %i, align 4, !dbg !9045, !tbaa !2655
  %dec = add i32 %118, -1, !dbg !9045
  store i32 %dec, i32* %i, align 4, !dbg !9045, !tbaa !2655
  br label %for.inc, !dbg !9046

if.else112:                                       ; preds = %land.lhs.true69, %lor.lhs.false
  %119 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9047, !tbaa !2668
  %ext_info113 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %119, i32 0, i32 6, !dbg !9049, !ctir !1471
  %120 = load %struct.extent_info*, %struct.extent_info** %ext_info113, align 8, !dbg !9049, !tbaa !7950, !ctir !1480
  %121 = load i32, i32* %si, align 4, !dbg !9050, !tbaa !2655
  %idx.ext = zext i32 %121 to i64, !dbg !9051
  %add.ptr114 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %120, i64 %idx.ext, !dbg !9051
  store %struct.extent_info* %add.ptr114, %struct.extent_info** %last_ei, align 8, !dbg !9052, !tbaa !2668
  %122 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9053, !tbaa !2668
  %123 = load i32, i32* %i, align 4, !dbg !9054, !tbaa !2655
  %idxprom115 = zext i32 %123 to i64, !dbg !9053
  %arrayidx116 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %122, i64 %idxprom115, !dbg !9053, !ctir !1514
  %fe_logical117 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx116, i32 0, i32 0, !dbg !9055, !ctir !1502
  %124 = load i64, i64* %fe_logical117, align 8, !dbg !9055, !tbaa !8929, !ctir !1493
  %125 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9056, !tbaa !2668
  %ext_logical118 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %125, i32 0, i32 0, !dbg !9057, !ctir !1481
  store i64 %124, i64* %ext_logical118, align 8, !dbg !9058, !tbaa !7954, !ctir !1467
  %126 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9059, !tbaa !2668
  %127 = load i32, i32* %i, align 4, !dbg !9060, !tbaa !2655
  %idxprom119 = zext i32 %127 to i64, !dbg !9059
  %arrayidx120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %126, i64 %idxprom119, !dbg !9059, !ctir !1514
  %fe_length121 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx120, i32 0, i32 2, !dbg !9061, !ctir !1502
  %128 = load i64, i64* %fe_length121, align 8, !dbg !9061, !tbaa !8931, !ctir !1493
  %129 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9062, !tbaa !2668
  %ext_length122 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %129, i32 0, i32 1, !dbg !9063, !ctir !1481
  store i64 %128, i64* %ext_length122, align 8, !dbg !9064, !tbaa !7961, !ctir !1467
  %130 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9065, !tbaa !2668
  %131 = load i32, i32* %i, align 4, !dbg !9066, !tbaa !2655
  %idxprom123 = zext i32 %131 to i64, !dbg !9065
  %arrayidx124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %130, i64 %idxprom123, !dbg !9065, !ctir !1514
  %fe_flags125 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx124, i32 0, i32 4, !dbg !9067, !ctir !1502
  %132 = load i32, i32* %fe_flags125, align 8, !dbg !9067, !tbaa !8941, !ctir !1496
  %133 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9068, !tbaa !2668
  %ext_flags126 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %133, i32 0, i32 2, !dbg !9069, !ctir !1481
  store i32 %132, i32* %ext_flags126, align 8, !dbg !9070, !tbaa !8937, !ctir !67
  %134 = load i32, i32* %si, align 4, !dbg !9071, !tbaa !2655
  %inc = add i32 %134, 1, !dbg !9071
  store i32 %inc, i32* %si, align 4, !dbg !9071, !tbaa !2655
  br label %if.end127

if.end127:                                        ; preds = %if.else112
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then49
  br label %for.inc, !dbg !9072

for.inc:                                          ; preds = %if.end128, %if.end104
  %135 = load i32, i32* %i, align 4, !dbg !9073, !tbaa !2655
  %inc129 = add i32 %135, 1, !dbg !9073
  store i32 %inc129, i32* %i, align 4, !dbg !9073, !tbaa !2655
  br label %for.cond, !dbg !9074, !llvm.loop !9075

for.end:                                          ; preds = %for.cond
  %136 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9077, !tbaa !2668
  %ext_flags130 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %136, i32 0, i32 2, !dbg !9079, !ctir !1481
  %137 = load i32, i32* %ext_flags130, align 8, !dbg !9079, !tbaa !8937, !ctir !67
  %and131 = and i32 %137, 1, !dbg !9080
  %tobool132 = icmp ne i32 %and131, 0, !dbg !9080
  br i1 %tobool132, label %if.then133, label %if.end135, !dbg !9081

if.then133:                                       ; preds = %for.end
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9082, !tbaa !2668
  %hit_final_extent134 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !9083, !ctir !1471
  store i8 1, i8* %hit_final_extent134, align 1, !dbg !9084, !tbaa !7905, !ctir !139
  br label %if.end135, !dbg !9082

if.end135:                                        ; preds = %if.then133, %for.end
  %139 = load i32, i32* %si, align 4, !dbg !9085, !tbaa !2655
  %cmp136 = icmp ugt i32 %139, 72, !dbg !9087
  br i1 %cmp136, label %land.lhs.true138, label %if.end147, !dbg !9088

land.lhs.true138:                                 ; preds = %if.end135
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9089, !tbaa !2668
  %hit_final_extent139 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 5, !dbg !9090, !ctir !1471
  %141 = load i8, i8* %hit_final_extent139, align 1, !dbg !9090, !tbaa !7905
  %tobool140 = trunc i8 %141 to i1, !dbg !9090, !ctir !139
  br i1 %tobool140, label %if.end147, label %if.then141, !dbg !9091

if.then141:                                       ; preds = %land.lhs.true138
  %142 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9092, !tbaa !2668
  %ext_info142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %142, i32 0, i32 6, !dbg !9093, !ctir !1471
  %143 = load %struct.extent_info*, %struct.extent_info** %ext_info142, align 8, !dbg !9093, !tbaa !7950, !ctir !1480
  %144 = load i32, i32* %si, align 4, !dbg !9094, !tbaa !2655
  %dec143 = add i32 %144, -1, !dbg !9094
  store i32 %dec143, i32* %si, align 4, !dbg !9094, !tbaa !2655
  %idx.ext144 = zext i32 %dec143 to i64, !dbg !9095
  %add.ptr145 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %143, i64 %idx.ext144, !dbg !9095
  %add.ptr146 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr145, i64 -1, !dbg !9096
  store %struct.extent_info* %add.ptr146, %struct.extent_info** %last_ei, align 8, !dbg !9097, !tbaa !2668
  br label %if.end147, !dbg !9098

if.end147:                                        ; preds = %if.then141, %land.lhs.true138, %if.end135
  %145 = load i32, i32* %si, align 4, !dbg !9099, !tbaa !2655
  %conv148 = zext i32 %145 to i64, !dbg !9099
  %146 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9100, !tbaa !2668
  %ei_count149 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %146, i32 0, i32 3, !dbg !9101, !ctir !1471
  store i64 %conv148, i64* %ei_count149, align 8, !dbg !9102, !tbaa !7931, !ctir !52
  %147 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9103, !tbaa !2668
  %hit_final_extent150 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %147, i32 0, i32 5, !dbg !9105, !ctir !1471
  %148 = load i8, i8* %hit_final_extent150, align 1, !dbg !9105, !tbaa !7905
  %tobool151 = trunc i8 %148 to i1, !dbg !9105, !ctir !139
  br i1 %tobool151, label %if.then152, label %if.else153, !dbg !9106

if.then152:                                       ; preds = %if.end147
  br label %while.end, !dbg !9107

if.else153:                                       ; preds = %if.end147
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9108, !tbaa !2668
  %ext_logical154 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 0, !dbg !9109, !ctir !1481
  %150 = load i64, i64* %ext_logical154, align 8, !dbg !9109, !tbaa !7954, !ctir !1467
  %151 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9110, !tbaa !2668
  %ext_length155 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %151, i32 0, i32 1, !dbg !9111, !ctir !1481
  %152 = load i64, i64* %ext_length155, align 8, !dbg !9111, !tbaa !7961, !ctir !1467
  %add156 = add nsw i64 %150, %152, !dbg !9112
  %153 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9113, !tbaa !2668
  %scan_start157 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %153, i32 0, i32 1, !dbg !9114, !ctir !1471
  store i64 %add156, i64* %scan_start157, align 8, !dbg !9115, !tbaa !8801, !ctir !1467
  br label %if.end158

if.end158:                                        ; preds = %if.else153
  %154 = load i32, i32* %si, align 4, !dbg !9116, !tbaa !2655
  %cmp159 = icmp uge i32 %154, 72, !dbg !9118
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !9119

if.then161:                                       ; preds = %if.end158
  br label %while.end, !dbg !9120

if.end162:                                        ; preds = %if.end158
  br label %while.body, !dbg !8829, !llvm.loop !9121

while.end:                                        ; preds = %if.then161, %if.then152
  store i1 true, i1* %retval, align 1, !dbg !9123
  br label %return, !dbg !9123

return:                                           ; preds = %while.end, %if.end103, %if.then9, %if.end
  %155 = load i1, i1* %retval, align 1, !dbg !9124
  ret i1 %155, !dbg !9124
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !9125 !ctir !625 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %srcdir.addr = alloca i32, align 4, !ctir !5
  %srcname.addr = alloca i8*, align 8, !ctir !177
  %dstdir.addr = alloca i32, align 4, !ctir !5
  %dstname.addr = alloca i8*, align 8, !ctir !177
  %flags.addr = alloca i32, align 4, !ctir !5
  %force.addr = alloca i8, align 1, !ctir !139
  %linkat_errno.addr = alloca i32, align 4, !ctir !5
  %buf = alloca [256 x i8], align 16, !ctir !627
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.link_arg, align 8, !ctir !641
  %err = alloca i32, align 4, !ctir !5
  store i32 %srcdir, i32* %srcdir.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9128, metadata !DIExpression()), !dbg !9129
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9130, metadata !DIExpression()), !dbg !9131
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9140, !tbaa !2655
  %cmp = icmp slt i32 %0, 0, !dbg !9142
  br i1 %cmp, label %if.then, label %if.end, !dbg !9143

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !9144, !tbaa !2655
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !9145, !tbaa !2668
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !9146, !tbaa !2655
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !9147, !tbaa !2668
  %5 = load i32, i32* %flags.addr, align 4, !dbg !9148, !tbaa !2655
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #9, !dbg !9149
  %cmp1 = icmp eq i32 %call, 0, !dbg !9150
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9149

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9149

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !9151
  %6 = load i32, i32* %call2, align 4, !dbg !9151, !tbaa !2655, !ctir !5
  br label %cond.end, !dbg !9149

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !9149
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !9152, !tbaa !2655
  br label %if.end, !dbg !9153

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !9154, !tbaa !2762
  %tobool = trunc i8 %7 to i1, !dbg !9154
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9156

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9157, !tbaa !2655
  %cmp3 = icmp ne i32 %8, 17, !dbg !9158
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9159

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9160, !tbaa !2655
  store i32 %9, i32* %retval, align 4, !dbg !9161
  br label %return, !dbg !9161

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9162, metadata !DIExpression()), !dbg !9163
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9164, metadata !DIExpression()), !dbg !9165
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !9166, !tbaa !2668
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9167
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !9168
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9165, !tbaa !2668
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9169, !tbaa !2668
  %tobool7 = icmp ne i8* %11, null, !dbg !9169
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9171

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !9172
  %12 = load i32, i32* %call9, align 4, !dbg !9172, !tbaa !2655, !ctir !5
  store i32 %12, i32* %retval, align 4, !dbg !9173
  br label %return, !dbg !9173

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !9174, metadata !DIExpression()), !dbg !9175
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !9176
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !9177, !tbaa !2655
  store i32 %13, i32* %srcdir11, align 8, !dbg !9176, !tbaa !9178
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !9176
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !9180, !tbaa !2668
  store i8* %14, i8** %srcname12, align 8, !dbg !9176, !tbaa !9181
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !9176
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !9182, !tbaa !2655
  store i32 %15, i32* %dstdir13, align 8, !dbg !9176, !tbaa !9183
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !9176
  %16 = load i32, i32* %flags.addr, align 4, !dbg !9184, !tbaa !2655
  store i32 %16, i32* %flags14, align 4, !dbg !9176, !tbaa !9185
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9186, metadata !DIExpression()), !dbg !9187
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9188, !tbaa !2668
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !9190
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !9191
  %cmp16 = icmp ne i32 %call15, 0, !dbg !9192
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9193

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #16, !dbg !9194
  %19 = load i32, i32* %call18, align 4, !dbg !9194, !tbaa !2655, !ctir !5
  store i32 %19, i32* %err, align 4, !dbg !9195, !tbaa !2655
  br label %if.end27, !dbg !9196

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !9197, !tbaa !2655
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !9199, !tbaa !2668
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !9200, !tbaa !2655
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !9201, !tbaa !2668
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #9, !dbg !9202
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9203
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !9202

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !9202

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #16, !dbg !9204
  %24 = load i32, i32* %call23, align 4, !dbg !9204, !tbaa !2655, !ctir !5
  br label %cond.end24, !dbg !9202

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !9202
  store i32 %cond25, i32* %err, align 4, !dbg !9205, !tbaa !2655
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !9206, !tbaa !2655
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !9207, !tbaa !2668
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #9, !dbg !9208
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !9209, !tbaa !2668
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9211
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !9212
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9213

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !9214, !tbaa !2668
  call void @free(i8* %28) #9, !dbg !9215
  br label %if.end31, !dbg !9215

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !9216, !tbaa !2655
  store i32 %29, i32* %retval, align 4, !dbg !9217
  br label %return, !dbg !9217

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !9218
  ret i32 %30, !dbg !9218
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !9219 !ctir !632 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dstname.addr = alloca i8*, align 8, !ctir !177
  %buf.addr = alloca i8*, align 8, !ctir !7
  %dstdirlen = alloca i64, align 8, !ctir !634
  %dsttmpsize = alloca i64, align 8, !ctir !52
  %dsttmp = alloca i8*, align 8, !ctir !7
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9220, metadata !DIExpression()), !dbg !9221
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9222, metadata !DIExpression()), !dbg !9223
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !9224, metadata !DIExpression()), !dbg !9225
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !9226, !tbaa !2668
  %call = call i8* @last_component(i8* %0) #14, !dbg !9227
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !9228, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9229
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9229
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9229
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !9225, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !9230, metadata !DIExpression()), !dbg !9231
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !9232, !tbaa !3308
  %add = add i64 %2, 9, !dbg !9233
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !9231, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9234, metadata !DIExpression()), !dbg !9235
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !9236, !tbaa !3308
  %cmp = icmp ule i64 %3, 256, !dbg !9238
  br i1 %cmp, label %if.then, label %if.else, !dbg !9239

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !9240, !tbaa !2668
  store i8* %4, i8** %dsttmp, align 8, !dbg !9241, !tbaa !2668
  br label %if.end3, !dbg !9242

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !9243, !tbaa !3308
  %call1 = call noalias i8* @malloc(i64 %5) #9, !dbg !9245
  store i8* %call1, i8** %dsttmp, align 8, !dbg !9246, !tbaa !2668
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !9247, !tbaa !2668
  %tobool = icmp ne i8* %6, null, !dbg !9247
  br i1 %tobool, label %if.end, label %if.then2, !dbg !9249

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !9250, !tbaa !2668
  store i8* %7, i8** %retval, align 8, !dbg !9251
  br label %return, !dbg !9251

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !9252, !tbaa !2668
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !9253, !tbaa !2668
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !9254, !tbaa !3308
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #9, !dbg !9255
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #9, !dbg !9256
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9257, !tbaa !2668
  store i8* %11, i8** %retval, align 8, !dbg !9258
  br label %return, !dbg !9258

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !9259
  ret i8* %12, !dbg !9259
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !9260 !ctir !638 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !7
  %arg.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.link_arg*, align 8, !ctir !640
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !9265, metadata !DIExpression()), !dbg !9266
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9267, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !9267
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !9266, !tbaa !2668
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9268, !tbaa !2668
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !9269, !ctir !641
  %3 = load i32, i32* %srcdir, align 8, !dbg !9269, !tbaa !9178, !ctir !5
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9270, !tbaa !2668
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !9271, !ctir !641
  %5 = load i8*, i8** %srcname, align 8, !dbg !9271, !tbaa !9181, !ctir !177
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9272, !tbaa !2668
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !9273, !ctir !641
  %7 = load i32, i32* %dstdir, align 8, !dbg !9273, !tbaa !9183, !ctir !5
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !9274, !tbaa !2668
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9275, !tbaa !2668
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !9276, !ctir !641
  %10 = load i32, i32* %flags, align 4, !dbg !9276, !tbaa !9185, !ctir !5
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #9, !dbg !9277
  ret i32 %call, !dbg !9278
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !9279 !ctir !630 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %srcname.addr = alloca i8*, align 8, !ctir !177
  %dstdir.addr = alloca i32, align 4, !ctir !5
  %dstname.addr = alloca i8*, align 8, !ctir !177
  %force.addr = alloca i8, align 1, !ctir !139
  %symlinkat_errno.addr = alloca i32, align 4, !ctir !5
  %buf = alloca [256 x i8], align 16, !ctir !627
  %dsttmp = alloca i8*, align 8, !ctir !7
  %arg = alloca %struct.symlink_arg, align 8, !ctir !648
  %err = alloca i32, align 4, !ctir !5
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9280, metadata !DIExpression()), !dbg !9281
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9282, metadata !DIExpression()), !dbg !9283
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9284, metadata !DIExpression()), !dbg !9285
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !9288, metadata !DIExpression()), !dbg !9289
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9290, !tbaa !2655
  %cmp = icmp slt i32 %0, 0, !dbg !9292
  br i1 %cmp, label %if.then, label %if.end, !dbg !9293

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !9294, !tbaa !2668
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !9295, !tbaa !2655
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !9296, !tbaa !2668
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #9, !dbg !9297
  %cmp1 = icmp eq i32 %call, 0, !dbg !9298
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9297

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9297

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !9299
  %4 = load i32, i32* %call2, align 4, !dbg !9299, !tbaa !2655, !ctir !5
  br label %cond.end, !dbg !9297

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !9297
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !9300, !tbaa !2655
  br label %if.end, !dbg !9301

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !9302, !tbaa !2762
  %tobool = trunc i8 %5 to i1, !dbg !9302
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9304

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9305, !tbaa !2655
  %cmp3 = icmp ne i32 %6, 17, !dbg !9306
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9307

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9308, !tbaa !2655
  store i32 %7, i32* %retval, align 4, !dbg !9309
  br label %return, !dbg !9309

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9310, metadata !DIExpression()), !dbg !9311
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9312, metadata !DIExpression()), !dbg !9313
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !9314, !tbaa !2668
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9315
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !9316
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9313, !tbaa !2668
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !9317, !tbaa !2668
  %tobool7 = icmp ne i8* %9, null, !dbg !9317
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9319

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !9320
  %10 = load i32, i32* %call9, align 4, !dbg !9320, !tbaa !2655, !ctir !5
  store i32 %10, i32* %retval, align 4, !dbg !9321
  br label %return, !dbg !9321

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !9322, metadata !DIExpression()), !dbg !9323
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !9324
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !9325, !tbaa !2668
  store i8* %11, i8** %srcname11, align 8, !dbg !9324, !tbaa !9326
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !9324
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !9328, !tbaa !2655
  store i32 %12, i32* %dstdir12, align 8, !dbg !9324, !tbaa !9329
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9330, metadata !DIExpression()), !dbg !9331
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !9332, !tbaa !2668
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !9334
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !9335
  %cmp14 = icmp ne i32 %call13, 0, !dbg !9336
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9337

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #16, !dbg !9338
  %15 = load i32, i32* %call16, align 4, !dbg !9338, !tbaa !2655, !ctir !5
  store i32 %15, i32* %err, align 4, !dbg !9339, !tbaa !2655
  br label %if.end24, !dbg !9340

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !9341, !tbaa !2655
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9343, !tbaa !2668
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !9344, !tbaa !2655
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !9345, !tbaa !2668
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #9, !dbg !9346
  %cmp18 = icmp ne i32 %call17, 0, !dbg !9347
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !9348

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #16, !dbg !9349
  %20 = load i32, i32* %call20, align 4, !dbg !9349, !tbaa !2655, !ctir !5
  store i32 %20, i32* %err, align 4, !dbg !9351, !tbaa !2655
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !9352, !tbaa !2655
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !9353, !tbaa !2668
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #9, !dbg !9354
  br label %if.end23, !dbg !9355

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !9356, !tbaa !2655
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !9358, !tbaa !2668
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9360
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !9361
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9362

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !9363, !tbaa !2668
  call void @free(i8* %24) #9, !dbg !9364
  br label %if.end28, !dbg !9364

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !9365, !tbaa !2655
  store i32 %25, i32* %retval, align 4, !dbg !9366
  br label %return, !dbg !9366

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !9367
  ret i32 %26, !dbg !9367
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !9368 !ctir !638 {
entry:
  %dest.addr = alloca i8*, align 8, !ctir !7
  %arg.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.symlink_arg*, align 8, !ctir !647
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9369, metadata !DIExpression()), !dbg !9370
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9371, metadata !DIExpression()), !dbg !9372
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !9373, metadata !DIExpression()), !dbg !9374
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9375, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !9375
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !9374, !tbaa !2668
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9376, !tbaa !2668
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !9377, !ctir !648
  %3 = load i8*, i8** %srcname, align 8, !dbg !9377, !tbaa !9326, !ctir !177
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9378, !tbaa !2668
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9379, !ctir !648
  %5 = load i32, i32* %dstdir, align 8, !dbg !9379, !tbaa !9329, !ctir !5
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9380, !tbaa !2668
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #9, !dbg !9381
  ret i32 %call, !dbg !9382
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9383 !ctir !1520 {
entry:
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %source_desc.addr = alloca i32, align 4, !ctir !5
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !136
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9385, metadata !DIExpression()), !dbg !9386
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9387, metadata !DIExpression()), !dbg !9388
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9393, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9395, metadata !DIExpression()), !dbg !9396
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9397, !tbaa !2668
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9398, !tbaa !2655
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9399, !tbaa !2668
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9400, !tbaa !2655
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9401, !tbaa !2655
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9402
  store i32 %call, i32* %ret, align 4, !dbg !9396, !tbaa !2655
  %5 = load i32, i32* %ret, align 4, !dbg !9403, !tbaa !2655
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9404

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !9405
  %6 = load i32, i32* %call1, align 4, !dbg !9405, !tbaa !2655, !ctir !5
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9407, !tbaa !2668
  %call2 = call i8* @quote(i8* %7), !dbg !9408
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.199, i64 0, i64 0), i8* %call2), !dbg !9409
  br label %sw.epilog, !dbg !9410

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !9411
  %8 = load i32, i32* %call4, align 4, !dbg !9411, !tbaa !2655, !ctir !5
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.200, i64 0, i64 0)) #9, !dbg !9412
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9413, !tbaa !2668
  %call6 = call i8* @quote(i8* %9), !dbg !9414
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9415
  br label %sw.epilog, !dbg !9416

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9417

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9418, !tbaa !2655
  ret i32 %10, !dbg !9419
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9420 !ctir !1525 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !136
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9422, metadata !DIExpression()), !dbg !9423
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9424, metadata !DIExpression()), !dbg !9425
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9426, metadata !DIExpression()), !dbg !9427
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9428, metadata !DIExpression()), !dbg !9429
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9430, !tbaa !2668
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9431, !tbaa !2655
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9432, !tbaa !2655
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9433
  store i32 %call, i32* %ret, align 4, !dbg !9429, !tbaa !2655
  %3 = load i32, i32* %ret, align 4, !dbg !9434, !tbaa !2655
  %cmp = icmp ne i32 %3, 0, !dbg !9436
  br i1 %cmp, label %if.then, label %if.end, !dbg !9437

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !9438
  %4 = load i32, i32* %call1, align 4, !dbg !9438, !tbaa !2655, !ctir !5
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.203, i64 0, i64 0)) #9, !dbg !9439
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9440, !tbaa !2668
  %call3 = call i8* @quote(i8* %5), !dbg !9441
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9442
  br label %if.end, !dbg !9442

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9443, !tbaa !2655
  ret i32 %6, !dbg !9444
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9445 !ctir !1074 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %file.addr = alloca i8*, align 8, !ctir !177
  %size.addr = alloca i64, align 8, !ctir !52
  %symlink_max = alloca i64, align 8, !ctir !52
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !52
  %initial_limit = alloca i64, align 8, !ctir !52
  %buf_size = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !674
  %link_length = alloca i64, align 8, !ctir !52
  %stackbuf = alloca [128 x i8], align 16, !ctir !1530
  %buf = alloca i8*, align 8, !ctir !7
  %buffer = alloca i8*, align 8, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !5
  %shrinked_buffer = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9447, metadata !DIExpression()), !dbg !9448
  store i64 %size, i64* %size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9449, metadata !DIExpression()), !dbg !9450
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9451, metadata !DIExpression()), !dbg !9452
  store i64 1024, i64* %symlink_max, align 8, !dbg !9452, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9453, metadata !DIExpression()), !dbg !9454
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9454, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9455, metadata !DIExpression()), !dbg !9456
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9457, !tbaa !3308
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9458, !tbaa !3308
  %cmp = icmp ult i64 %0, %1, !dbg !9459
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9457

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9460, !tbaa !3308
  %add = add i64 %2, 1, !dbg !9461
  br label %cond.end, !dbg !9457

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9462, !tbaa !3308
  br label %cond.end, !dbg !9457

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9457
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9456, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9463, metadata !DIExpression()), !dbg !9464
  %4 = load i64, i64* %size.addr, align 8, !dbg !9465, !tbaa !3308
  %cmp1 = icmp eq i64 %4, 0, !dbg !9466
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !9465

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9465

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !9467, !tbaa !3308
  %6 = load i64, i64* %initial_limit, align 8, !dbg !9468, !tbaa !3308
  %cmp4 = icmp ult i64 %5, %6, !dbg !9469
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !9467

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !9470, !tbaa !3308
  %add6 = add i64 %7, 1, !dbg !9471
  br label %cond.end8, !dbg !9467

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !9472, !tbaa !3308
  br label %cond.end8, !dbg !9467

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !9467
  br label %cond.end10, !dbg !9465

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !9465
  store i64 %cond11, i64* %buf_size, align 8, !dbg !9464, !tbaa !3308
  br label %while.body, !dbg !9473

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9474, metadata !DIExpression()), !dbg !9476
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9477, metadata !DIExpression()), !dbg !9478
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !9479, metadata !DIExpression()), !dbg !9480
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9481, metadata !DIExpression()), !dbg !9482
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !9483
  store i8* %arraydecay, i8** %buf, align 8, !dbg !9482, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9484, metadata !DIExpression()), !dbg !9485
  store i8* null, i8** %buffer, align 8, !dbg !9485, !tbaa !2668
  %9 = load i64, i64* %size.addr, align 8, !dbg !9486, !tbaa !3308
  %cmp12 = icmp eq i64 %9, 0, !dbg !9488
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !9489

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !9490, !tbaa !3308
  %cmp13 = icmp eq i64 %10, 128, !dbg !9491
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !9492

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !9493, !tbaa !3308
  %call = call noalias i8* @malloc(i64 %11) #9, !dbg !9495
  store i8* %call, i8** %buffer, align 8, !dbg !9496, !tbaa !2668
  store i8* %call, i8** %buf, align 8, !dbg !9497, !tbaa !2668
  %12 = load i8*, i8** %buffer, align 8, !dbg !9498, !tbaa !2668
  %tobool = icmp ne i8* %12, null, !dbg !9498
  br i1 %tobool, label %if.end, label %if.then14, !dbg !9500

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !9501
  br label %return, !dbg !9501

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !9502

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9503, !tbaa !2668
  %14 = load i8*, i8** %buf, align 8, !dbg !9504, !tbaa !2668
  %15 = load i64, i64* %buf_size, align 8, !dbg !9505, !tbaa !3308
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #9, !dbg !9506
  store i64 %call16, i64* %r, align 8, !dbg !9507, !tbaa !3308
  %16 = load i64, i64* %r, align 8, !dbg !9508, !tbaa !3308
  store i64 %16, i64* %link_length, align 8, !dbg !9509, !tbaa !3308
  %17 = load i64, i64* %r, align 8, !dbg !9510, !tbaa !3308
  %cmp17 = icmp slt i64 %17, 0, !dbg !9512
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !9513

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #16, !dbg !9514
  %18 = load i32, i32* %call19, align 4, !dbg !9514, !tbaa !2655, !ctir !5
  %cmp20 = icmp ne i32 %18, 34, !dbg !9515
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9516

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9517, metadata !DIExpression()), !dbg !9519
  %call22 = call i32* @__errno_location() #16, !dbg !9520
  %19 = load i32, i32* %call22, align 4, !dbg !9520, !tbaa !2655, !ctir !5
  store i32 %19, i32* %saved_errno, align 4, !dbg !9519, !tbaa !2655
  %20 = load i8*, i8** %buffer, align 8, !dbg !9521, !tbaa !2668
  call void @free(i8* %20) #9, !dbg !9522
  %21 = load i32, i32* %saved_errno, align 4, !dbg !9523, !tbaa !2655
  %call23 = call i32* @__errno_location() #16, !dbg !9524
  store i32 %21, i32* %call23, align 4, !dbg !9525, !tbaa !2655, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9526
  br label %return, !dbg !9526

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !9527, !tbaa !3308
  %23 = load i64, i64* %buf_size, align 8, !dbg !9529, !tbaa !3308
  %cmp25 = icmp ult i64 %22, %23, !dbg !9530
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !9531

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !9532, !tbaa !2668
  %25 = load i64, i64* %link_length, align 8, !dbg !9534, !tbaa !3308
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !9532, !ctir !7
  store i8 0, i8* %arrayidx, align 1, !dbg !9535, !tbaa !3315
  %26 = load i8*, i8** %buffer, align 8, !dbg !9536, !tbaa !2668
  %tobool27 = icmp ne i8* %26, null, !dbg !9536
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !9538

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !9539, !tbaa !3308
  %add29 = add i64 %27, 1, !dbg !9541
  %call30 = call noalias i8* @malloc(i64 %add29) #9, !dbg !9542
  store i8* %call30, i8** %buffer, align 8, !dbg !9543, !tbaa !2668
  %28 = load i8*, i8** %buffer, align 8, !dbg !9544, !tbaa !2668
  %tobool31 = icmp ne i8* %28, null, !dbg !9544
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !9546

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !9547, !tbaa !2668
  %30 = load i8*, i8** %buf, align 8, !dbg !9548, !tbaa !2668
  %31 = load i64, i64* %link_length, align 8, !dbg !9549, !tbaa !3308
  %add33 = add i64 %31, 1, !dbg !9550
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !9551
  store i8* %29, i8** %retval, align 8, !dbg !9552
  br label %return, !dbg !9552

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !9553

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !9554, !tbaa !3308
  %add35 = add i64 %32, 1, !dbg !9556
  %33 = load i64, i64* %buf_size, align 8, !dbg !9557, !tbaa !3308
  %cmp36 = icmp ult i64 %add35, %33, !dbg !9558
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !9559

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !9560, metadata !DIExpression()), !dbg !9562
  %34 = load i8*, i8** %buffer, align 8, !dbg !9563, !tbaa !2668
  %35 = load i64, i64* %link_length, align 8, !dbg !9564, !tbaa !3308
  %add38 = add i64 %35, 1, !dbg !9565
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #9, !dbg !9566
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !9562, !tbaa !2668
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9567, !tbaa !2668
  %cmp40 = icmp ne i8* %36, null, !dbg !9569
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !9570

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9571, !tbaa !2668
  store i8* %37, i8** %buffer, align 8, !dbg !9572, !tbaa !2668
  br label %if.end42, !dbg !9573

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !9574

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !9575, !tbaa !2668
  store i8* %38, i8** %retval, align 8, !dbg !9576
  br label %return, !dbg !9576

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !9577, !tbaa !2668
  call void @free(i8* %39) #9, !dbg !9578
  %40 = load i64, i64* %buf_size, align 8, !dbg !9579, !tbaa !3308
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !9581
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !9582

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !9583, !tbaa !3308
  %mul = mul i64 %41, 2, !dbg !9583
  store i64 %mul, i64* %buf_size, align 8, !dbg !9583, !tbaa !3308
  br label %if.end54, !dbg !9584

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !9585, !tbaa !3308
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !9587
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !9588

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9589, !tbaa !3308
  br label %if.end53, !dbg !9590

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #16, !dbg !9591
  store i32 12, i32* %call52, align 4, !dbg !9593, !tbaa !2655, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9594
  br label %return, !dbg !9594

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !9473, !llvm.loop !9595

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !9597
  ret i8* %43, !dbg !9597
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !9598 !ctir !199 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !177
  store i8* %s, i8** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9599, metadata !DIExpression()), !dbg !9600
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9601, !tbaa !2668
  %tobool = icmp ne i8* %0, null, !dbg !9601
  br i1 %tobool, label %if.end, label %if.then, !dbg !9603

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.210, i64 0, i64 0)) #9, !dbg !9604
  store i8* %call, i8** %s.addr, align 8, !dbg !9605, !tbaa !2668
  br label %if.end, !dbg !9606

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !9607, !tbaa !2668
  %tobool1 = icmp ne i8* %1, null, !dbg !9607
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !9608

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9609, !tbaa !2668
  %3 = load i8, i8* %2, align 1, !dbg !9610, !tbaa !3315, !ctir !178
  %conv = sext i8 %3 to i32, !dbg !9610
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9610
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !9611

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !9612, !tbaa !2668
  %5 = load i8*, i8** %s.addr, align 8, !dbg !9613, !tbaa !2668
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !9614
  %cmp = icmp eq i8* %4, %call4, !dbg !9615
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9607

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !9616, !tbaa !2668
  br label %cond.end, !dbg !9607

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !9607

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.211, i64 0, i64 0), %cond.false ], !dbg !9607
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !9617, !tbaa !2668
  ret void, !dbg !9618
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !9619 !ctir !672 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !177
  %backup_type.addr = alloca i32, align 4, !ctir !65
  %rename.addr = alloca i8, align 1, !ctir !139
  %base_offset = alloca i64, align 8, !ctir !634
  %filelen = alloca i64, align 8, !ctir !52
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !52
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !52
  %ssize = alloca i64, align 8, !ctir !674
  %s = alloca i8*, align 8, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !675
  %sdir = alloca i32, align 4, !ctir !5
  %base_max = alloca i64, align 8, !ctir !52
  %flags = alloca i32, align 4, !ctir !67
  %e = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9620, metadata !DIExpression()), !dbg !9621
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9622, metadata !DIExpression()), !dbg !9623
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9624, metadata !DIExpression()), !dbg !9625
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9626, metadata !DIExpression()), !dbg !9627
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !9628, metadata !DIExpression()), !dbg !9629
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9630, !tbaa !2668
  %call = call i8* @last_component(i8* %0) #14, !dbg !9631
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9632, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9633
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9633
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9633
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !9629, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !9634, metadata !DIExpression()), !dbg !9635
  %2 = load i64, i64* %base_offset, align 8, !dbg !9636, !tbaa !3308
  %3 = load i8*, i8** %file.addr, align 8, !dbg !9637, !tbaa !2668
  %4 = load i64, i64* %base_offset, align 8, !dbg !9638, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !9639
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !9640
  %add = add i64 %2, %call1, !dbg !9641
  store i64 %add, i64* %filelen, align 8, !dbg !9635, !tbaa !3308
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9642, !tbaa !2668
  %tobool = icmp ne i8* %5, null, !dbg !9642
  br i1 %tobool, label %if.end, label %if.then, !dbg !9644

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !9645
  br label %if.end, !dbg !9645

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !9646, metadata !DIExpression()), !dbg !9647
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9648, !tbaa !2668
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !9649
  %add3 = add i64 %call2, 1, !dbg !9650
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !9647, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !9651, metadata !DIExpression()), !dbg !9652
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9653, !tbaa !3308
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !9652, !tbaa !3308
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9654, !tbaa !3308
  %cmp = icmp ult i64 %8, 9, !dbg !9656
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9657

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !9658, !tbaa !3308
  br label %if.end5, !dbg !9659

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !9660, metadata !DIExpression()), !dbg !9661
  %9 = load i64, i64* %filelen, align 8, !dbg !9662, !tbaa !3308
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9663, !tbaa !3308
  %add6 = add i64 %9, %10, !dbg !9664
  %add7 = add i64 %add6, 1, !dbg !9665
  store i64 %add7, i64* %ssize, align 8, !dbg !9661, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9666, metadata !DIExpression()), !dbg !9667
  %11 = load i64, i64* %ssize, align 8, !dbg !9668, !tbaa !3308
  %call8 = call noalias i8* @malloc(i64 %11) #9, !dbg !9669
  store i8* %call8, i8** %s, align 8, !dbg !9667, !tbaa !2668
  %12 = load i8*, i8** %s, align 8, !dbg !9670, !tbaa !2668
  %tobool9 = icmp ne i8* %12, null, !dbg !9670
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9672

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !9673, !tbaa !2668
  store i8* %13, i8** %retval, align 8, !dbg !9674
  br label %return, !dbg !9674

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9675, metadata !DIExpression()), !dbg !9676
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !9676, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !9677, metadata !DIExpression()), !dbg !9678
  store i32 -1, i32* %sdir, align 4, !dbg !9678, !tbaa !2655
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !9679, metadata !DIExpression()), !dbg !9680
  store i64 0, i64* %base_max, align 8, !dbg !9680, !tbaa !3308
  br label %while.body, !dbg !9681

while.body:                                       ; preds = %if.end11, %if.end50
  %14 = load i8*, i8** %s, align 8, !dbg !9682, !tbaa !2668
  %15 = load i8*, i8** %file.addr, align 8, !dbg !9684, !tbaa !2668
  %16 = load i64, i64* %filelen, align 8, !dbg !9685, !tbaa !3308
  %add12 = add i64 %16, 1, !dbg !9686
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !9687
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !9688, !tbaa !3315
  %cmp13 = icmp eq i32 %17, 1, !dbg !9690
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9691

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !9692, !tbaa !2668
  %19 = load i64, i64* %filelen, align 8, !dbg !9693, !tbaa !3308
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !9694
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9695, !tbaa !2668
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9696, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !9697
  br label %if.end29, !dbg !9697

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !9698, !tbaa !2655
  %23 = load i64, i64* %ssize, align 8, !dbg !9699, !tbaa !3308
  %24 = load i64, i64* %filelen, align 8, !dbg !9700, !tbaa !3308
  %25 = load i64, i64* %base_offset, align 8, !dbg !9701, !tbaa !3308
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !9702
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !9703

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !9704

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !9706, !tbaa !3315
  %cmp18 = icmp eq i32 %26, 2, !dbg !9708
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9709

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !9710, !tbaa !3315
  %27 = load i8*, i8** %s, align 8, !dbg !9712, !tbaa !2668
  %28 = load i64, i64* %filelen, align 8, !dbg !9713, !tbaa !3308
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !9714
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9715, !tbaa !2668
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9716, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !9717
  br label %if.end21, !dbg !9718

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !9719

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !9720, !tbaa !2668
  %32 = load i64, i64* %filelen, align 8, !dbg !9721, !tbaa !3308
  %33 = load i32, i32* %sdir, align 4, !dbg !9722, !tbaa !2655
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !9723
  br label %sw.epilog, !dbg !9724

sw.bb23:                                          ; preds = %if.else
  %34 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9725, !tbaa !2668
  %tobool24 = icmp ne %struct.__dirstream* %34, null, !dbg !9725
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !9727

if.then25:                                        ; preds = %sw.bb23
  %35 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9728, !tbaa !2668
  %call26 = call i32 @closedir(%struct.__dirstream* %35), !dbg !9729
  br label %if.end27, !dbg !9729

if.end27:                                         ; preds = %if.then25, %sw.bb23
  %36 = load i8*, i8** %s, align 8, !dbg !9730, !tbaa !2668
  call void @free(i8* %36) #9, !dbg !9731
  %call28 = call i32* @__errno_location() #16, !dbg !9732
  store i32 12, i32* %call28, align 4, !dbg !9733, !tbaa !2655, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9734
  br label %return, !dbg !9734

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end29

if.end29:                                         ; preds = %sw.epilog, %if.then14
  %37 = load i8, i8* %rename.addr, align 1, !dbg !9735, !tbaa !2762
  %tobool30 = trunc i8 %37 to i1, !dbg !9735
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !9737

if.then31:                                        ; preds = %if.end29
  br label %while.end, !dbg !9738

if.end32:                                         ; preds = %if.end29
  %38 = load i32, i32* %sdir, align 4, !dbg !9739, !tbaa !2655
  %cmp33 = icmp slt i32 %38, 0, !dbg !9741
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !9742

if.then34:                                        ; preds = %if.end32
  store i32 -100, i32* %sdir, align 4, !dbg !9743, !tbaa !2655
  store i64 0, i64* %base_offset, align 8, !dbg !9745, !tbaa !3308
  br label %if.end35, !dbg !9746

if.end35:                                         ; preds = %if.then34, %if.end32
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9747, metadata !DIExpression()), !dbg !9748
  %39 = load i32, i32* %backup_type.addr, align 4, !dbg !9749, !tbaa !3315
  %cmp36 = icmp eq i32 %39, 1, !dbg !9750
  %40 = zext i1 %cmp36 to i64, !dbg !9749
  %cond = select i1 %cmp36, i32 0, i32 1, !dbg !9749
  store i32 %cond, i32* %flags, align 4, !dbg !9748, !tbaa !2655
  %41 = load i8*, i8** %file.addr, align 8, !dbg !9751, !tbaa !2668
  %42 = load i32, i32* %sdir, align 4, !dbg !9753, !tbaa !2655
  %43 = load i8*, i8** %s, align 8, !dbg !9754, !tbaa !2668
  %44 = load i64, i64* %base_offset, align 8, !dbg !9755, !tbaa !3308
  %add.ptr37 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !9756
  %45 = load i32, i32* %flags, align 4, !dbg !9757, !tbaa !2655
  %call38 = call i32 @renameatu(i32 -100, i8* %41, i32 %42, i8* %add.ptr37, i32 %45), !dbg !9758
  %cmp39 = icmp eq i32 %call38, 0, !dbg !9759
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !9760

if.then40:                                        ; preds = %if.end35
  br label %while.end, !dbg !9761

if.end41:                                         ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9762, metadata !DIExpression()), !dbg !9763
  %call42 = call i32* @__errno_location() #16, !dbg !9764
  %46 = load i32, i32* %call42, align 4, !dbg !9764, !tbaa !2655, !ctir !5
  store i32 %46, i32* %e, align 4, !dbg !9763, !tbaa !2655
  %47 = load i32, i32* %e, align 4, !dbg !9765, !tbaa !2655
  %cmp43 = icmp ne i32 %47, 17, !dbg !9767
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !9768

if.then44:                                        ; preds = %if.end41
  %48 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9769, !tbaa !2668
  %tobool45 = icmp ne %struct.__dirstream* %48, null, !dbg !9769
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !9772

if.then46:                                        ; preds = %if.then44
  %49 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9773, !tbaa !2668
  %call47 = call i32 @closedir(%struct.__dirstream* %49), !dbg !9774
  br label %if.end48, !dbg !9774

if.end48:                                         ; preds = %if.then46, %if.then44
  %50 = load i8*, i8** %s, align 8, !dbg !9775, !tbaa !2668
  call void @free(i8* %50) #9, !dbg !9776
  %51 = load i32, i32* %e, align 4, !dbg !9777, !tbaa !2655
  %call49 = call i32* @__errno_location() #16, !dbg !9778
  store i32 %51, i32* %call49, align 4, !dbg !9779, !tbaa !2655, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !9780
  br label %return, !dbg !9780

if.end50:                                         ; preds = %if.end41
  br label %while.body, !dbg !9681, !llvm.loop !9781

while.end:                                        ; preds = %if.then40, %if.then31
  %52 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9783, !tbaa !2668
  %tobool51 = icmp ne %struct.__dirstream* %52, null, !dbg !9783
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !9785

if.then52:                                        ; preds = %while.end
  %53 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9786, !tbaa !2668
  %call53 = call i32 @closedir(%struct.__dirstream* %53), !dbg !9787
  br label %if.end54, !dbg !9787

if.end54:                                         ; preds = %if.then52, %while.end
  %54 = load i8*, i8** %s, align 8, !dbg !9788, !tbaa !2668
  store i8* %54, i8** %retval, align 8, !dbg !9789
  br label %return, !dbg !9789

return:                                           ; preds = %if.end54, %if.end48, %if.end27, %if.then10
  %55 = load i8*, i8** %retval, align 8, !dbg !9790
  ret i8* %55, !dbg !9790
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !9791 !ctir !679 {
entry:
  %retval = alloca i32, align 4, !ctir !664
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %buffer.addr = alloca i8**, align 8, !ctir !181
  %buffer_size.addr = alloca i64, align 8, !ctir !52
  %filelen.addr = alloca i64, align 8, !ctir !52
  %base_offset.addr = alloca i64, align 8, !ctir !634
  %dirpp.addr = alloca %struct.__dirstream**, align 8, !ctir !681
  %pnew_fd.addr = alloca i32*, align 8, !ctir !190
  %result = alloca i32, align 4, !ctir !664
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !675
  %dp = alloca %struct.dirent*, align 8, !ctir !682
  %buf = alloca i8*, align 8, !ctir !7
  %versionlenmax = alloca i64, align 8, !ctir !52
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %tmp = alloca [2 x i8], align 1, !ctir !691
  %p = alloca i8*, align 8, !ctir !177
  %q = alloca i8*, align 8, !ctir !7
  %all_9s = alloca i8, align 1, !ctir !139
  %versionlen = alloca i64, align 8, !ctir !52
  %new_buffer_size = alloca i64, align 8, !ctir !52
  %new_buf = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9792, metadata !DIExpression()), !dbg !9793
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !9794, metadata !DIExpression()), !dbg !9795
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !9796, metadata !DIExpression()), !dbg !9797
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  store i64 %base_offset, i64* %base_offset.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !9800, metadata !DIExpression()), !dbg !9801
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !9802, metadata !DIExpression()), !dbg !9803
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !9804, metadata !DIExpression()), !dbg !9805
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9806, metadata !DIExpression()), !dbg !9807
  store i32 2, i32* %result, align 4, !dbg !9807, !tbaa !3315
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9808, metadata !DIExpression()), !dbg !9809
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9810, !tbaa !2668
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !9811, !tbaa !2668, !ctir !675
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !9809, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !9812, metadata !DIExpression()), !dbg !9813
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9814, metadata !DIExpression()), !dbg !9815
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !9816, !tbaa !2668
  %3 = load i8*, i8** %2, align 8, !dbg !9817, !tbaa !2668, !ctir !7
  store i8* %3, i8** %buf, align 8, !dbg !9815, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !9818, metadata !DIExpression()), !dbg !9819
  store i64 1, i64* %versionlenmax, align 8, !dbg !9819, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9820, metadata !DIExpression()), !dbg !9821
  %4 = load i8*, i8** %buf, align 8, !dbg !9822, !tbaa !2668
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !9823, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !9824
  store i8* %add.ptr, i8** %base, align 8, !dbg !9821, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9825, metadata !DIExpression()), !dbg !9826
  %6 = load i8*, i8** %base, align 8, !dbg !9827, !tbaa !2668
  %call = call i64 @base_len(i8* %6) #14, !dbg !9828
  store i64 %call, i64* %baselen, align 8, !dbg !9826, !tbaa !3308
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9829, !tbaa !2668
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !9829
  br i1 %tobool, label %if.then, label %if.else, !dbg !9831

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9832, !tbaa !2668
  call void @rewinddir(%struct.__dirstream* %8) #9, !dbg !9833
  br label %if.end12, !dbg !9833

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9834, metadata !DIExpression()), !dbg !9836
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9837
  %9 = load i8*, i8** %base, align 8, !dbg !9838, !tbaa !2668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !9837
  %10 = load i8*, i8** %base, align 8, !dbg !9839, !tbaa !2668
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.212, i64 0, i64 0)) #9, !dbg !9840
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !9841, !tbaa !2655
  %12 = load i8*, i8** %buf, align 8, !dbg !9842, !tbaa !2668
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !9843, !tbaa !2668
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !9844
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !9845, !tbaa !2668
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9846, !tbaa !2668
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !9846
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !9848

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #16, !dbg !9849
  %15 = load i32, i32* %call4, align 4, !dbg !9849, !tbaa !2655, !ctir !5
  %cmp = icmp eq i32 %15, 12, !dbg !9850
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9851

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !9852, !tbaa !3315
  br label %if.end, !dbg !9853

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !9854, !tbaa !2668
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9855
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !9855
  %17 = load i8*, i8** %base, align 8, !dbg !9856, !tbaa !2668
  %18 = load i64, i64* %baselen, align 8, !dbg !9857, !tbaa !3308
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !9858
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.213, i64 0, i64 0)) #9, !dbg !9859
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9860, !tbaa !2668
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !9860
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9862

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !9863, !tbaa !3315
  store i32 %20, i32* %retval, align 4, !dbg !9864
  br label %return, !dbg !9864

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9865, !tbaa !2668
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9866, !tbaa !2668
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !9867, !tbaa !2668, !ctir !675
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !9868

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9869, !tbaa !2668
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !9870
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !9871, !tbaa !2668
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !9872
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !9868

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9873, metadata !DIExpression()), !dbg !9875
  call void @llvm.dbg.declare(metadata i8** %q, metadata !9876, metadata !DIExpression()), !dbg !9877
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !9878, metadata !DIExpression()), !dbg !9879
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !9880, metadata !DIExpression()), !dbg !9881
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9882, !tbaa !2668
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !9882, !ctir !683
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !9882
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !9882
  %25 = load i64, i64* %baselen, align 8, !dbg !9884, !tbaa !3308
  %add = add i64 %25, 4, !dbg !9885
  %cmp17 = icmp ult i64 %call16, %add, !dbg !9886
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9887

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !9888, !llvm.loop !9889

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !9891, !tbaa !2668
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !9893, !tbaa !3308
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !9894
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9895, !tbaa !2668
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !9896, !ctir !683
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !9895
  %29 = load i64, i64* %baselen, align 8, !dbg !9897, !tbaa !3308
  %add23 = add i64 %29, 2, !dbg !9898
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !9899
  %cmp25 = icmp ne i32 %call24, 0, !dbg !9900
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9901

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !9902, !llvm.loop !9889

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9903, !tbaa !2668
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !9904, !ctir !683
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !9903
  %31 = load i64, i64* %baselen, align 8, !dbg !9905, !tbaa !3308
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !9906
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !9907
  store i8* %add.ptr31, i8** %p, align 8, !dbg !9908, !tbaa !2668
  %32 = load i8*, i8** %p, align 8, !dbg !9909, !tbaa !2668
  %33 = load i8, i8* %32, align 1, !dbg !9911, !tbaa !3315, !ctir !178
  %conv = sext i8 %33 to i32, !dbg !9911
  %cmp32 = icmp sle i32 49, %conv, !dbg !9912
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !9913

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !9914, !tbaa !2668
  %35 = load i8, i8* %34, align 1, !dbg !9915, !tbaa !3315, !ctir !178
  %conv35 = sext i8 %35 to i32, !dbg !9915
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !9916
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !9917

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !9918, !llvm.loop !9889

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !9919, !tbaa !2668
  %37 = load i8, i8* %36, align 1, !dbg !9920, !tbaa !3315, !ctir !178
  %conv40 = sext i8 %37 to i32, !dbg !9920
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !9921
  %frombool = zext i1 %cmp41 to i8, !dbg !9922
  store i8 %frombool, i8* %all_9s, align 1, !dbg !9922, !tbaa !2762
  store i64 1, i64* %versionlen, align 8, !dbg !9923, !tbaa !3308
  br label %for.cond, !dbg !9925

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !9926, !tbaa !2668
  %39 = load i64, i64* %versionlen, align 8, !dbg !9926, !tbaa !3308
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !9926, !ctir !177
  %40 = load i8, i8* %arrayidx, align 1, !dbg !9926, !tbaa !3315
  %conv43 = sext i8 %40 to i32, !dbg !9926
  %sub = sub i32 %conv43, 48, !dbg !9926
  %cmp44 = icmp ule i32 %sub, 9, !dbg !9926
  br i1 %cmp44, label %for.body, label %for.end, !dbg !9928

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !9929, !tbaa !2668
  %42 = load i64, i64* %versionlen, align 8, !dbg !9930, !tbaa !3308
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9929, !ctir !177
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !9929, !tbaa !3315
  %conv47 = sext i8 %43 to i32, !dbg !9929
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !9931
  %conv49 = zext i1 %cmp48 to i32, !dbg !9931
  %44 = load i8, i8* %all_9s, align 1, !dbg !9932, !tbaa !2762
  %tobool50 = trunc i8 %44 to i1, !dbg !9932
  %conv51 = zext i1 %tobool50 to i32, !dbg !9932
  %and = and i32 %conv51, %conv49, !dbg !9932
  %tobool52 = icmp ne i32 %and, 0, !dbg !9932
  %frombool53 = zext i1 %tobool52 to i8, !dbg !9932
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !9932, !tbaa !2762
  br label %for.inc, !dbg !9933

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !9934, !tbaa !3308
  %inc = add i64 %45, 1, !dbg !9934
  store i64 %inc, i64* %versionlen, align 8, !dbg !9934, !tbaa !3308
  br label %for.cond, !dbg !9935, !llvm.loop !9936

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !9938, !tbaa !2668
  %47 = load i64, i64* %versionlen, align 8, !dbg !9940, !tbaa !3308
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !9938, !ctir !177
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !9938, !tbaa !3315
  %conv55 = sext i8 %48 to i32, !dbg !9938
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !9941
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !9942

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !9943, !tbaa !2668
  %50 = load i64, i64* %versionlen, align 8, !dbg !9944, !tbaa !3308
  %add59 = add i64 %50, 1, !dbg !9945
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !9943, !ctir !177
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !9943, !tbaa !3315
  %tobool61 = icmp ne i8 %51, 0, !dbg !9943
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !9946

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !9947, !tbaa !3308
  %53 = load i64, i64* %versionlen, align 8, !dbg !9948, !tbaa !3308
  %cmp63 = icmp ult i64 %52, %53, !dbg !9949
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !9950

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !9951, !tbaa !3308
  %55 = load i64, i64* %versionlen, align 8, !dbg !9952, !tbaa !3308
  %cmp65 = icmp eq i64 %54, %55, !dbg !9953
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !9954

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !9955, !tbaa !2668
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !9956, !tbaa !3308
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !9957
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !9958
  %58 = load i8*, i8** %p, align 8, !dbg !9959, !tbaa !2668
  %59 = load i64, i64* %versionlen, align 8, !dbg !9960, !tbaa !3308
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !9961
  %cmp71 = icmp sle i32 %call70, 0, !dbg !9962
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !9963

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !9964, !llvm.loop !9889

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !9965, !tbaa !2762
  %tobool75 = trunc i8 %60 to i1, !dbg !9965
  %conv76 = zext i1 %tobool75 to i64, !dbg !9965
  %61 = load i64, i64* %versionlen, align 8, !dbg !9966, !tbaa !3308
  %add77 = add i64 %conv76, %61, !dbg !9967
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !9968, !tbaa !3308
  %62 = load i8, i8* %all_9s, align 1, !dbg !9969, !tbaa !2762
  %tobool78 = trunc i8 %62 to i1, !dbg !9969
  %63 = zext i1 %tobool78 to i64, !dbg !9969
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !9969
  store i32 %cond, i32* %result, align 4, !dbg !9970, !tbaa !3315
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !9971, metadata !DIExpression()), !dbg !9972
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !9973, !tbaa !3308
  %add80 = add i64 %64, 2, !dbg !9974
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !9975, !tbaa !3308
  %add81 = add i64 %add80, %65, !dbg !9976
  %add82 = add i64 %add81, 2, !dbg !9977
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !9972, !tbaa !3308
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !9978, !tbaa !3308
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !9980, !tbaa !3308
  %cmp83 = icmp ult i64 %66, %67, !dbg !9981
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !9982

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !9983, !tbaa !3308
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !9983
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !9986

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !9987, !tbaa !3308
  %mul = mul i64 %69, 2, !dbg !9987
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !9987, !tbaa !3308
  br label %if.end89, !dbg !9988

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !9989, metadata !DIExpression()), !dbg !9990
  %70 = load i8*, i8** %buf, align 8, !dbg !9991, !tbaa !2668
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !9992, !tbaa !3308
  %call90 = call i8* @realloc(i8* %70, i64 %71) #9, !dbg !9993
  store i8* %call90, i8** %new_buf, align 8, !dbg !9990, !tbaa !2668
  %72 = load i8*, i8** %new_buf, align 8, !dbg !9994, !tbaa !2668
  %tobool91 = icmp ne i8* %72, null, !dbg !9994
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !9996

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !9997, !tbaa !2668
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !9999, !tbaa !2668
  store i8* %73, i8** %74, align 8, !dbg !10000, !tbaa !2668, !ctir !7
  store i32 3, i32* %retval, align 4, !dbg !10001
  br label %return, !dbg !10001

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !10002, !tbaa !2668
  store i8* %75, i8** %buf, align 8, !dbg !10003, !tbaa !2668
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !10004, !tbaa !3308
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !10005, !tbaa !3308
  br label %if.end94, !dbg !10006

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !10007, !tbaa !2668
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !10008, !tbaa !3308
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !10009
  store i8* %add.ptr95, i8** %q, align 8, !dbg !10010, !tbaa !2668
  %79 = load i8*, i8** %q, align 8, !dbg !10011, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !10011
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !10011, !tbaa !2668
  store i8 46, i8* %79, align 1, !dbg !10012, !tbaa !3315, !ctir !8
  %80 = load i8*, i8** %q, align 8, !dbg !10013, !tbaa !2668
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !10013
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !10013, !tbaa !2668
  store i8 126, i8* %80, align 1, !dbg !10014, !tbaa !3315, !ctir !8
  %81 = load i8*, i8** %q, align 8, !dbg !10015, !tbaa !2668
  store i8 48, i8* %81, align 1, !dbg !10016, !tbaa !3315, !ctir !8
  %82 = load i8, i8* %all_9s, align 1, !dbg !10017, !tbaa !2762
  %tobool97 = trunc i8 %82 to i1, !dbg !10017
  %conv98 = zext i1 %tobool97 to i32, !dbg !10017
  %83 = load i8*, i8** %q, align 8, !dbg !10018, !tbaa !2668
  %idx.ext = sext i32 %conv98 to i64, !dbg !10018
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !10018
  store i8* %add.ptr99, i8** %q, align 8, !dbg !10018, !tbaa !2668
  %84 = load i8*, i8** %q, align 8, !dbg !10019, !tbaa !2668
  %85 = load i8*, i8** %p, align 8, !dbg !10020, !tbaa !2668
  %86 = load i64, i64* %versionlen, align 8, !dbg !10021, !tbaa !3308
  %add100 = add i64 %86, 2, !dbg !10022
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !10023
  %87 = load i64, i64* %versionlen, align 8, !dbg !10024, !tbaa !3308
  %88 = load i8*, i8** %q, align 8, !dbg !10025, !tbaa !2668
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !10025
  store i8* %add.ptr101, i8** %q, align 8, !dbg !10025, !tbaa !2668
  br label %while.cond102, !dbg !10026

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !10027, !tbaa !2668
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !10027
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !10027, !tbaa !2668
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !10028, !tbaa !3315, !ctir !8
  %conv104 = sext i8 %90 to i32, !dbg !10028
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !10029
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !10026

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !10030, !tbaa !2668
  store i8 48, i8* %91, align 1, !dbg !10031, !tbaa !3315, !ctir !8
  br label %while.cond102, !dbg !10026, !llvm.loop !10032

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !10034, !tbaa !2668
  %93 = load i8, i8* %92, align 1, !dbg !10035, !tbaa !3315, !ctir !8
  %inc108 = add i8 %93, 1, !dbg !10035
  store i8 %inc108, i8* %92, align 1, !dbg !10035, !tbaa !3315, !ctir !8
  br label %while.cond, !dbg !9868, !llvm.loop !9889

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !10036, !tbaa !2668
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !10037, !tbaa !2668
  store i8* %94, i8** %95, align 8, !dbg !10038, !tbaa !2668, !ctir !7
  %96 = load i32, i32* %result, align 4, !dbg !10039, !tbaa !3315
  store i32 %96, i32* %retval, align 4, !dbg !10040
  br label %return, !dbg !10040

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !10041
  ret i32 %97, !dbg !10041
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !10042 !ctir !692 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !7
  %filelen.addr = alloca i64, align 8, !ctir !52
  %e.addr = alloca i8, align 1, !ctir !8
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %base_max.addr = alloca i64*, align 8, !ctir !694
  %base = alloca i8*, align 8, !ctir !7
  %baselen = alloca i64, align 8, !ctir !52
  %baselen_max = alloca i64, align 8, !ctir !52
  %name_max = alloca i64, align 8, !ctir !32
  %tmp = alloca [2 x i8], align 1, !ctir !691
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10043, metadata !DIExpression()), !dbg !10044
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10045, metadata !DIExpression()), !dbg !10046
  store i8 %e, i8* %e.addr, align 1, !tbaa !3315
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !10047, metadata !DIExpression()), !dbg !10048
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10049, metadata !DIExpression()), !dbg !10050
  store i64* %base_max, i64** %base_max.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !10051, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10053, metadata !DIExpression()), !dbg !10054
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10055, !tbaa !2668
  %call = call i8* @last_component(i8* %0) #14, !dbg !10056
  store i8* %call, i8** %base, align 8, !dbg !10054, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10057, metadata !DIExpression()), !dbg !10058
  %1 = load i8*, i8** %base, align 8, !dbg !10059, !tbaa !2668
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10060
  store i64 %call1, i64* %baselen, align 8, !dbg !10058, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !10061, metadata !DIExpression()), !dbg !10062
  store i64 255, i64* %baselen_max, align 8, !dbg !10062, !tbaa !3308
  %2 = load i64, i64* %baselen, align 8, !dbg !10063, !tbaa !3308
  %cmp = icmp ult i64 14, %2, !dbg !10065
  br i1 %cmp, label %if.then, label %if.end27, !dbg !10066

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !10067, !tbaa !2668
  %4 = load i64, i64* %3, align 8, !dbg !10070, !tbaa !3308, !ctir !52
  %cmp2 = icmp eq i64 %4, 0, !dbg !10071
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !10072

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !10073, metadata !DIExpression()), !dbg !10075
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !10076, !tbaa !2655
  %cmp4 = icmp slt i32 %5, 0, !dbg !10078
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10079

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10080, metadata !DIExpression()), !dbg !10082
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10083
  %6 = load i8*, i8** %base, align 8, !dbg !10084, !tbaa !2668
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !10083
  %7 = load i8*, i8** %base, align 8, !dbg !10085, !tbaa !2668
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.212, i64 0, i64 0)) #9, !dbg !10086
  %call7 = call i32* @__errno_location() #16, !dbg !10087
  store i32 0, i32* %call7, align 4, !dbg !10088, !tbaa !2655, !ctir !5
  %8 = load i8*, i8** %file.addr, align 8, !dbg !10089, !tbaa !2668
  %call8 = call i64 @pathconf(i8* %8, i32 3) #9, !dbg !10090
  store i64 %call8, i64* %name_max, align 8, !dbg !10091, !tbaa !3308
  %call9 = call i32* @__errno_location() #16, !dbg !10092
  %9 = load i32, i32* %call9, align 4, !dbg !10092, !tbaa !2655, !ctir !5
  %tobool = icmp ne i32 %9, 0, !dbg !10093
  %lnot = xor i1 %tobool, true, !dbg !10093
  %lnot.ext = zext i1 %lnot to i32, !dbg !10093
  %conv = sext i32 %lnot.ext to i64, !dbg !10093
  %10 = load i64, i64* %name_max, align 8, !dbg !10094, !tbaa !3308
  %sub = sub nsw i64 %10, %conv, !dbg !10094
  store i64 %sub, i64* %name_max, align 8, !dbg !10094, !tbaa !3308
  %11 = load i8*, i8** %base, align 8, !dbg !10095, !tbaa !2668
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !10096
  br label %if.end, !dbg !10097

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #16, !dbg !10098
  store i32 0, i32* %call11, align 4, !dbg !10100, !tbaa !2655, !ctir !5
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !10101, !tbaa !2655
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #9, !dbg !10102
  store i64 %call12, i64* %name_max, align 8, !dbg !10103, !tbaa !3308
  %call13 = call i32* @__errno_location() #16, !dbg !10104
  %13 = load i32, i32* %call13, align 4, !dbg !10104, !tbaa !2655, !ctir !5
  %tobool14 = icmp ne i32 %13, 0, !dbg !10105
  %lnot15 = xor i1 %tobool14, true, !dbg !10105
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !10105
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !10105
  %14 = load i64, i64* %name_max, align 8, !dbg !10106, !tbaa !3308
  %sub18 = sub nsw i64 %14, %conv17, !dbg !10106
  store i64 %sub18, i64* %name_max, align 8, !dbg !10106, !tbaa !3308
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !10107, !tbaa !3308
  %cmp19 = icmp sle i64 0, %15, !dbg !10108
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !10109

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !10110, !tbaa !3308
  %cmp21 = icmp ule i64 %16, -1, !dbg !10111
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10112

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !10113, !tbaa !3308
  br label %cond.end, !dbg !10112

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !10114, !tbaa !3308
  %cmp23 = icmp slt i64 %18, -1, !dbg !10115
  %19 = zext i1 %cmp23 to i64, !dbg !10114
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !10114
  br label %cond.end, !dbg !10112

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !10112
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !10116, !tbaa !2668
  store i64 %cond25, i64* %20, align 8, !dbg !10117, !tbaa !3308, !ctir !52
  br label %if.end26, !dbg !10118

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !10119, !tbaa !2668
  %22 = load i64, i64* %21, align 8, !dbg !10120, !tbaa !3308, !ctir !52
  store i64 %22, i64* %baselen_max, align 8, !dbg !10121, !tbaa !3308
  br label %if.end27, !dbg !10122

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !10123, !tbaa !3308
  %24 = load i64, i64* %baselen, align 8, !dbg !10125, !tbaa !3308
  %cmp28 = icmp ult i64 %23, %24, !dbg !10126
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !10127

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !10128, !tbaa !2668
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !10130, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !10131
  %27 = load i8*, i8** %base, align 8, !dbg !10132, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !10133
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !10133
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10133
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !10134, !tbaa !3308
  %28 = load i64, i64* %baselen_max, align 8, !dbg !10135, !tbaa !3308
  %29 = load i64, i64* %baselen, align 8, !dbg !10137, !tbaa !3308
  %cmp31 = icmp ule i64 %28, %29, !dbg !10138
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10139

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !10140, !tbaa !3308
  %sub34 = sub i64 %30, 1, !dbg !10141
  store i64 %sub34, i64* %baselen, align 8, !dbg !10142, !tbaa !3308
  br label %if.end35, !dbg !10143

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !10144, !tbaa !3315
  %32 = load i8*, i8** %base, align 8, !dbg !10145, !tbaa !2668
  %33 = load i64, i64* %baselen, align 8, !dbg !10146, !tbaa !3308
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !10145, !ctir !7
  store i8 %31, i8* %arrayidx, align 1, !dbg !10147, !tbaa !3315
  %34 = load i8*, i8** %base, align 8, !dbg !10148, !tbaa !2668
  %35 = load i64, i64* %baselen, align 8, !dbg !10149, !tbaa !3308
  %add = add i64 %35, 1, !dbg !10150
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !10148, !ctir !7
  store i8 0, i8* %arrayidx36, align 1, !dbg !10151, !tbaa !3315
  br label %if.end37, !dbg !10152

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !10153
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10154 !ctir !702 {
entry:
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !177
  %backup_type.addr = alloca i32, align 4, !ctir !65
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10156, metadata !DIExpression()), !dbg !10157
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10158, metadata !DIExpression()), !dbg !10159
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10160, metadata !DIExpression()), !dbg !10161
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10162, !tbaa !2655
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10163, !tbaa !2668
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10164, !tbaa !3315
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !10165
  ret i8* %call, !dbg !10166
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10167 !ctir !702 {
entry:
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !177
  %backup_type.addr = alloca i32, align 4, !ctir !65
  %result = alloca i8*, align 8, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10168, metadata !DIExpression()), !dbg !10169
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10174, metadata !DIExpression()), !dbg !10175
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10176, !tbaa !2655
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10177, !tbaa !2668
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10178, !tbaa !3315
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !10179
  store i8* %call, i8** %result, align 8, !dbg !10175, !tbaa !2668
  %3 = load i8*, i8** %result, align 8, !dbg !10180, !tbaa !2668
  %tobool = icmp ne i8* %3, null, !dbg !10180
  br i1 %tobool, label %if.end, label %if.then, !dbg !10182

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10183
  unreachable, !dbg !10183

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !10184, !tbaa !2668
  ret i8* %4, !dbg !10185
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !10186 !ctir !704 {
entry:
  %retval = alloca i32, align 4, !ctir !65
  %context.addr = alloca i8*, align 8, !ctir !177
  %version.addr = alloca i8*, align 8, !ctir !177
  store i8* %context, i8** %context.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10187, metadata !DIExpression()), !dbg !10188
  store i8* %version, i8** %version.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10189, metadata !DIExpression()), !dbg !10190
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10191, !tbaa !2668
  %cmp = icmp eq i8* %0, null, !dbg !10193
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10194

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10195, !tbaa !2668
  %2 = load i8, i8* %1, align 1, !dbg !10196, !tbaa !3315, !ctir !178
  %conv = sext i8 %2 to i32, !dbg !10196
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10197
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10198

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !10199
  br label %return, !dbg !10199

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10200, !tbaa !2668
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10200, !tbaa !2668
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !10200, !tbaa !2668
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !10200
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !10200, !ctir !706
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10200, !tbaa !3315
  store i32 %6, i32* %retval, align 4, !dbg !10201
  br label %return, !dbg !10201

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10202
  ret i32 %7, !dbg !10202
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !10203 !ctir !704 {
entry:
  %retval = alloca i32, align 4, !ctir !65
  %context.addr = alloca i8*, align 8, !ctir !177
  %version.addr = alloca i8*, align 8, !ctir !177
  store i8* %context, i8** %context.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  store i8* %version, i8** %version.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10206, metadata !DIExpression()), !dbg !10207
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10208, !tbaa !2668
  %tobool = icmp ne i8* %0, null, !dbg !10208
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10210

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10211, !tbaa !2668
  %2 = load i8, i8* %1, align 1, !dbg !10212, !tbaa !3315, !ctir !178
  %conv = sext i8 %2 to i32, !dbg !10212
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10212
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10213

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10214, !tbaa !2668
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10215, !tbaa !2668
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !10216
  store i32 %call, i32* %retval, align 4, !dbg !10217
  br label %return, !dbg !10217

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.226, i64 0, i64 0)) #9, !dbg !10218
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.227, i64 0, i64 0), i8* %call2), !dbg !10219
  store i32 %call3, i32* %retval, align 4, !dbg !10220
  br label %return, !dbg !10220

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10221
  ret i32 %5, !dbg !10221
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !10222 !ctir !1539 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %a.addr = alloca i64, align 8, !ctir !52
  %b.addr = alloca i64, align 8, !ctir !52
  %lcm_max.addr = alloca i64, align 8, !ctir !52
  %size = alloca i64, align 8, !ctir !52
  %lcm = alloca i64, align 8, !ctir !52
  %m = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %q = alloca i64, align 8, !ctir !52
  %r = alloca i64, align 8, !ctir !52
  store i64 %a, i64* %a.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10224, metadata !DIExpression()), !dbg !10225
  store i64 %b, i64* %b.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i64 %lcm_max, i64* %lcm_max.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10230, metadata !DIExpression()), !dbg !10231
  %0 = load i64, i64* %a.addr, align 8, !dbg !10232, !tbaa !3308
  %tobool = icmp ne i64 %0, 0, !dbg !10232
  br i1 %tobool, label %if.else, label %if.then, !dbg !10234

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !10235, !tbaa !3308
  %tobool1 = icmp ne i64 %1, 0, !dbg !10235
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10235

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !10236, !tbaa !3308
  br label %cond.end, !dbg !10235

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !10235

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !10235
  store i64 %cond, i64* %size, align 8, !dbg !10237, !tbaa !3308
  br label %if.end9, !dbg !10238

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !10239, !tbaa !3308
  %tobool2 = icmp ne i64 %3, 0, !dbg !10239
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !10242

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !10243, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.declare(metadata i64* %m, metadata !10246, metadata !DIExpression()), !dbg !10247
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10248, metadata !DIExpression()), !dbg !10249
  call void @llvm.dbg.declare(metadata i64* %q, metadata !10250, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10252, metadata !DIExpression()), !dbg !10253
  %4 = load i64, i64* %a.addr, align 8, !dbg !10254, !tbaa !3308
  store i64 %4, i64* %m, align 8, !dbg !10256, !tbaa !3308
  %5 = load i64, i64* %b.addr, align 8, !dbg !10257, !tbaa !3308
  store i64 %5, i64* %n, align 8, !dbg !10258, !tbaa !3308
  br label %for.cond, !dbg !10259

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !10260, !tbaa !3308
  %7 = load i64, i64* %n, align 8, !dbg !10262, !tbaa !3308
  %rem = urem i64 %6, %7, !dbg !10263
  store i64 %rem, i64* %r, align 8, !dbg !10264, !tbaa !3308
  %cmp = icmp ne i64 %rem, 0, !dbg !10265
  br i1 %cmp, label %for.body, label %for.end, !dbg !10266

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10267

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !10268, !tbaa !3308
  store i64 %8, i64* %m, align 8, !dbg !10269, !tbaa !3308
  %9 = load i64, i64* %r, align 8, !dbg !10270, !tbaa !3308
  store i64 %9, i64* %n, align 8, !dbg !10271, !tbaa !3308
  br label %for.cond, !dbg !10272, !llvm.loop !10273

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !10275, !tbaa !3308
  %11 = load i64, i64* %n, align 8, !dbg !10276, !tbaa !3308
  %div = udiv i64 %10, %11, !dbg !10277
  store i64 %div, i64* %q, align 8, !dbg !10278, !tbaa !3308
  %12 = load i64, i64* %q, align 8, !dbg !10279, !tbaa !3308
  %13 = load i64, i64* %b.addr, align 8, !dbg !10280, !tbaa !3308
  %mul = mul i64 %12, %13, !dbg !10281
  store i64 %mul, i64* %lcm, align 8, !dbg !10282, !tbaa !3308
  %14 = load i64, i64* %lcm, align 8, !dbg !10283, !tbaa !3308
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !10285, !tbaa !3308
  %cmp4 = icmp ule i64 %14, %15, !dbg !10286
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !10287

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !10288, !tbaa !3308
  %17 = load i64, i64* %b.addr, align 8, !dbg !10289, !tbaa !3308
  %div5 = udiv i64 %16, %17, !dbg !10290
  %18 = load i64, i64* %q, align 8, !dbg !10291, !tbaa !3308
  %cmp6 = icmp eq i64 %div5, %18, !dbg !10292
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10293

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !10294, !tbaa !3308
  store i64 %19, i64* %retval, align 8, !dbg !10295
  br label %return, !dbg !10295

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !10296

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !10297, !tbaa !3308
  store i64 %20, i64* %size, align 8, !dbg !10298, !tbaa !3308
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !10299, !tbaa !3308
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !10300, !tbaa !3308
  %cmp10 = icmp ule i64 %21, %22, !dbg !10301
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10299

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !10302, !tbaa !3308
  br label %cond.end13, !dbg !10299

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !10303, !tbaa !3308
  br label %cond.end13, !dbg !10299

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !10299
  store i64 %cond14, i64* %retval, align 8, !dbg !10304
  br label %return, !dbg !10304

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !10305
  ret i64 %25, !dbg !10305
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !10306 !ctir !199 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10307, metadata !DIExpression()), !dbg !10308
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10309, !tbaa !2668
  store i8* %0, i8** @file_name, align 8, !dbg !10310, !tbaa !2668
  ret void, !dbg !10311
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !10312 !ctir !197 {
entry:
  %fail = alloca i8, align 1, !ctir !139
  %close_error = alloca i8*, align 8, !ctir !177
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10313, metadata !DIExpression()), !dbg !10314
  store i8 0, i8* %fail, align 1, !dbg !10314, !tbaa !2762
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10315, !tbaa !2668
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !10317
  %cmp = icmp ugt i64 %call, 0, !dbg !10318
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10319

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10320, !tbaa !2668
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !10323
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10324
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10325

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10326, !tbaa !2668
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !10327
  %cmp4 = icmp ne i32 %call3, 0, !dbg !10328
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10329

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !10330, !tbaa !2762
  br label %if.end, !dbg !10331

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !10332

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10333, !tbaa !2668
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !10335
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10336
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10337

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !10338, !tbaa !2762
  br label %if.end10, !dbg !10339

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !10340, !tbaa !2762
  %tobool = trunc i8 %4 to i1, !dbg !10340
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !10342

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !10343, metadata !DIExpression()), !dbg !10345
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.232, i64 0, i64 0)) #9, !dbg !10346
  store i8* %call12, i8** %close_error, align 8, !dbg !10345, !tbaa !2668
  %5 = load i8*, i8** @file_name, align 8, !dbg !10347, !tbaa !2668
  %tobool13 = icmp ne i8* %5, null, !dbg !10347
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10349

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #16, !dbg !10350
  %6 = load i32, i32* %call15, align 4, !dbg !10350, !tbaa !2655, !ctir !5
  %7 = load i8*, i8** @file_name, align 8, !dbg !10351, !tbaa !2668
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !10352
  %8 = load i8*, i8** %close_error, align 8, !dbg !10353, !tbaa !2668
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.233, i64 0, i64 0), i8* %call16, i8* %8), !dbg !10354
  br label %if.end18, !dbg !10354

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #16, !dbg !10355
  %9 = load i32, i32* %call17, align 4, !dbg !10355, !tbaa !2655, !ctir !5
  %10 = load i8*, i8** %close_error, align 8, !dbg !10356, !tbaa !2668
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.234, i64 0, i64 0), i8* %10), !dbg !10357
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10358

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10359
  %11 = load i8, i8* %fail, align 1, !dbg !10360, !tbaa !2762
  %tobool20 = trunc i8 %11 to i1, !dbg !10360
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10362

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10363, !tbaa !2655
  call void @_exit(i32 %12) #15, !dbg !10364
  unreachable, !dbg !10364

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10365
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10366 !ctir !199 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10367, metadata !DIExpression()), !dbg !10368
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10369, !tbaa !2668
  store i8* %0, i8** @file_name.235, align 8, !dbg !10370, !tbaa !2668
  ret void, !dbg !10371
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10372 !ctir !770 {
entry:
  %ignore.addr = alloca i8, align 1, !ctir !139
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10375, !tbaa !2762
  %tobool = trunc i8 %0 to i1, !dbg !10375
  %frombool1 = zext i1 %tobool to i8, !dbg !10376
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10376, !tbaa !2762
  ret void, !dbg !10377
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10378 !ctir !197 {
entry:
  %write_error = alloca i8*, align 8, !ctir !177
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10379, !tbaa !2668
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10381
  %cmp = icmp ne i32 %call, 0, !dbg !10382
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10383

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10384, !tbaa !2762
  %tobool = trunc i8 %1 to i1, !dbg !10384
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10385

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !10386
  %2 = load i32, i32* %call2, align 4, !dbg !10386, !tbaa !2655, !ctir !5
  %cmp3 = icmp eq i32 %2, 32, !dbg !10387
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10388

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10389, metadata !DIExpression()), !dbg !10391
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.238, i64 0, i64 0)) #9, !dbg !10392
  store i8* %call4, i8** %write_error, align 8, !dbg !10391, !tbaa !2668
  %3 = load i8*, i8** @file_name.235, align 8, !dbg !10393, !tbaa !2668
  %tobool5 = icmp ne i8* %3, null, !dbg !10393
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10395

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #16, !dbg !10396
  %4 = load i32, i32* %call7, align 4, !dbg !10396, !tbaa !2655, !ctir !5
  %5 = load i8*, i8** @file_name.235, align 8, !dbg !10397, !tbaa !2668
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10398
  %6 = load i8*, i8** %write_error, align 8, !dbg !10399, !tbaa !2668
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.239, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10400
  br label %if.end, !dbg !10400

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #16, !dbg !10401
  %7 = load i32, i32* %call9, align 4, !dbg !10401, !tbaa !2655, !ctir !5
  %8 = load i8*, i8** %write_error, align 8, !dbg !10402, !tbaa !2668
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.240, i64 0, i64 0), i8* %8), !dbg !10403
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10404, !tbaa !2655
  call void @_exit(i32 %9) #15, !dbg !10405
  unreachable, !dbg !10405

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10406, !tbaa !2668
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10408
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10409
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10410

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10411, !tbaa !2655
  call void @_exit(i32 %11) #15, !dbg !10412
  unreachable, !dbg !10412

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10413
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10414 !ctir !215 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %result = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10416, metadata !DIExpression()), !dbg !10417
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10418, metadata !DIExpression()), !dbg !10419
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10420, !tbaa !2668
  %call = call i8* @mdir_name(i8* %0), !dbg !10421
  store i8* %call, i8** %result, align 8, !dbg !10419, !tbaa !2668
  %1 = load i8*, i8** %result, align 8, !dbg !10422, !tbaa !2668
  %tobool = icmp ne i8* %1, null, !dbg !10422
  br i1 %tobool, label %if.end, label %if.then, !dbg !10424

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10425
  unreachable, !dbg !10425

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10426, !tbaa !2668
  ret i8* %2, !dbg !10427
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #10 !dbg !10428 !ctir !1547 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %prefix_length = alloca i64, align 8, !ctir !52
  %length = alloca i64, align 8, !ctir !52
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10430, metadata !DIExpression()), !dbg !10431
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10432, metadata !DIExpression()), !dbg !10433
  store i64 0, i64* %prefix_length, align 8, !dbg !10433, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10434, metadata !DIExpression()), !dbg !10435
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10436, !tbaa !3308
  %cmp = icmp ne i64 %0, 0, !dbg !10437
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10436

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10436

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10438, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10438, !ctir !177
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10438, !tbaa !3315
  %conv = sext i8 %2 to i32, !dbg !10438
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10438
  %3 = zext i1 %cmp1 to i64, !dbg !10438
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10438
  br label %cond.end, !dbg !10436

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10436
  %conv4 = sext i32 %cond3 to i64, !dbg !10439
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10440, !tbaa !3308
  %add = add i64 %4, %conv4, !dbg !10440
  store i64 %add, i64* %prefix_length, align 8, !dbg !10440, !tbaa !3308
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10441, !tbaa !2668
  %call = call i8* @last_component(i8* %5) #14, !dbg !10443
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10444, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10445
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10445
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10445
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10446, !tbaa !3308
  br label %for.cond, !dbg !10447

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10448, !tbaa !3308
  %8 = load i64, i64* %length, align 8, !dbg !10450, !tbaa !3308
  %cmp5 = icmp ult i64 %7, %8, !dbg !10451
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10452

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10453, !tbaa !2668
  %10 = load i64, i64* %length, align 8, !dbg !10453, !tbaa !3308
  %sub = sub i64 %10, 1, !dbg !10453
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10453, !ctir !177
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10453, !tbaa !3315
  %conv8 = sext i8 %11 to i32, !dbg !10453
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10453
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10455

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10456

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10453

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10457, !tbaa !3308
  %dec = add i64 %12, -1, !dbg !10457
  store i64 %dec, i64* %length, align 8, !dbg !10457, !tbaa !3308
  br label %for.cond, !dbg !10458, !llvm.loop !10459

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10461, !tbaa !3308
  ret i64 %13, !dbg !10462
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10463 !ctir !215 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %file.addr = alloca i8*, align 8, !ctir !177
  %length = alloca i64, align 8, !ctir !52
  %append_dot = alloca i8, align 1, !ctir !139
  %dir = alloca i8*, align 8, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10466, metadata !DIExpression()), !dbg !10467
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10468, !tbaa !2668
  %call = call i64 @dir_len(i8* %0) #14, !dbg !10469
  store i64 %call, i64* %length, align 8, !dbg !10467, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10470, metadata !DIExpression()), !dbg !10471
  %1 = load i64, i64* %length, align 8, !dbg !10472, !tbaa !3308
  %cmp = icmp eq i64 %1, 0, !dbg !10473
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10474

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10474

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10471
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10471, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10475, metadata !DIExpression()), !dbg !10476
  %3 = load i64, i64* %length, align 8, !dbg !10477, !tbaa !3308
  %4 = load i8, i8* %append_dot, align 1, !dbg !10478, !tbaa !2762
  %tobool = trunc i8 %4 to i1, !dbg !10478
  %conv = zext i1 %tobool to i64, !dbg !10478
  %add = add i64 %3, %conv, !dbg !10479
  %add1 = add i64 %add, 1, !dbg !10480
  %call2 = call noalias i8* @malloc(i64 %add1) #9, !dbg !10481
  store i8* %call2, i8** %dir, align 8, !dbg !10476, !tbaa !2668
  %5 = load i8*, i8** %dir, align 8, !dbg !10482, !tbaa !2668
  %tobool3 = icmp ne i8* %5, null, !dbg !10482
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10484

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10485
  br label %return, !dbg !10485

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10486, !tbaa !2668
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10487, !tbaa !2668
  %8 = load i64, i64* %length, align 8, !dbg !10488, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10489
  %9 = load i8, i8* %append_dot, align 1, !dbg !10490, !tbaa !2762
  %tobool4 = trunc i8 %9 to i1, !dbg !10490
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10492

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10493, !tbaa !2668
  %11 = load i64, i64* %length, align 8, !dbg !10494, !tbaa !3308
  %inc = add i64 %11, 1, !dbg !10494
  store i64 %inc, i64* %length, align 8, !dbg !10494, !tbaa !3308
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10493, !ctir !7
  store i8 46, i8* %arrayidx, align 1, !dbg !10495, !tbaa !3315
  br label %if.end6, !dbg !10493

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10496, !tbaa !2668
  %13 = load i64, i64* %length, align 8, !dbg !10497, !tbaa !3308
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10496, !ctir !7
  store i8 0, i8* %arrayidx7, align 1, !dbg !10498, !tbaa !3315
  %14 = load i8*, i8** %dir, align 8, !dbg !10499, !tbaa !2668
  store i8* %14, i8** %retval, align 8, !dbg !10500
  br label %return, !dbg !10500

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10501
  ret i8* %15, !dbg !10501
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #10 !dbg !10502 !ctir !215 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %base = alloca i8*, align 8, !ctir !177
  %p = alloca i8*, align 8, !ctir !177
  %saw_slash = alloca i8, align 1, !ctir !139
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10504, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10506, metadata !DIExpression()), !dbg !10507
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10508, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10509
  store i8* %add.ptr, i8** %base, align 8, !dbg !10507, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10510, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10512, metadata !DIExpression()), !dbg !10513
  store i8 0, i8* %saw_slash, align 1, !dbg !10513, !tbaa !2762
  br label %while.cond, !dbg !10514

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10515, !tbaa !2668
  %2 = load i8, i8* %1, align 1, !dbg !10515, !tbaa !3315, !ctir !178
  %conv = sext i8 %2 to i32, !dbg !10515
  %cmp = icmp eq i32 %conv, 47, !dbg !10515
  br i1 %cmp, label %while.body, label %while.end, !dbg !10514

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10516, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10516
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10516, !tbaa !2668
  br label %while.cond, !dbg !10514, !llvm.loop !10517

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10518, !tbaa !2668
  store i8* %4, i8** %p, align 8, !dbg !10520, !tbaa !2668
  br label %for.cond, !dbg !10521

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10522, !tbaa !2668
  %6 = load i8, i8* %5, align 1, !dbg !10524, !tbaa !3315, !ctir !178
  %tobool = icmp ne i8 %6, 0, !dbg !10525
  br i1 %tobool, label %for.body, label %for.end, !dbg !10525

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10526, !tbaa !2668
  %8 = load i8, i8* %7, align 1, !dbg !10526, !tbaa !3315, !ctir !178
  %conv2 = sext i8 %8 to i32, !dbg !10526
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10526
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10529

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10530, !tbaa !2762
  br label %if.end7, !dbg !10531

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10532, !tbaa !2762
  %tobool5 = trunc i8 %9 to i1, !dbg !10532
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10534

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10535, !tbaa !2668
  store i8* %10, i8** %base, align 8, !dbg !10537, !tbaa !2668
  store i8 0, i8* %saw_slash, align 1, !dbg !10538, !tbaa !2762
  br label %if.end, !dbg !10539

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10540

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10541, !tbaa !2668
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10541
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10541, !tbaa !2668
  br label %for.cond, !dbg !10542, !llvm.loop !10543

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10545, !tbaa !2668
  ret i8* %12, !dbg !10546
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #10 !dbg !10547 !ctir !1547 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %len = alloca i64, align 8, !ctir !52
  %prefix_len = alloca i64, align 8, !ctir !52
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10548, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10550, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10552, metadata !DIExpression()), !dbg !10553
  store i64 0, i64* %prefix_len, align 8, !dbg !10553, !tbaa !3308
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10554, !tbaa !2668
  %call = call i64 @strlen(i8* %0) #14, !dbg !10556
  store i64 %call, i64* %len, align 8, !dbg !10557, !tbaa !3308
  br label %for.cond, !dbg !10558

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10559, !tbaa !3308
  %cmp = icmp ult i64 1, %1, !dbg !10561
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10562

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10563, !tbaa !2668
  %3 = load i64, i64* %len, align 8, !dbg !10563, !tbaa !3308
  %sub = sub i64 %3, 1, !dbg !10563
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10563, !ctir !177
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10563, !tbaa !3315
  %conv = sext i8 %4 to i32, !dbg !10563
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10563
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10564
  br i1 %5, label %for.body, label %for.end, !dbg !10565

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10566

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10567, !tbaa !3308
  %dec = add i64 %6, -1, !dbg !10567
  store i64 %dec, i64* %len, align 8, !dbg !10567, !tbaa !3308
  br label %for.cond, !dbg !10568, !llvm.loop !10569

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10571, !tbaa !3308
  ret i64 %7, !dbg !10572
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !10573 !ctir !1565 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %offset.addr = alloca i64, align 8, !ctir !358
  %len.addr = alloca i64, align 8, !ctir !358
  %advice.addr = alloca i32, align 4, !ctir !1567
  %__x = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10575, metadata !DIExpression()), !dbg !10576
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10577, metadata !DIExpression()), !dbg !10578
  store i64 %len, i64* %len.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10579, metadata !DIExpression()), !dbg !10580
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10581, metadata !DIExpression()), !dbg !10582
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10583, metadata !DIExpression()), !dbg !10585
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10585, !tbaa !2655
  %1 = load i64, i64* %offset.addr, align 8, !dbg !10585, !tbaa !3308
  %2 = load i64, i64* %len.addr, align 8, !dbg !10585, !tbaa !3308
  %3 = load i32, i32* %advice.addr, align 4, !dbg !10585, !tbaa !3315
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #9, !dbg !10585
  store i32 %call, i32* %__x, align 4, !dbg !10585, !tbaa !2655
  %4 = load i32, i32* %__x, align 4, !dbg !10585, !tbaa !2655
  ret void, !dbg !10586
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !10587 !ctir !1568 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !1570
  %advice.addr = alloca i32, align 4, !ctir !1567
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10588, metadata !DIExpression()), !dbg !10589
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10590, metadata !DIExpression()), !dbg !10591
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10592, !tbaa !2668
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10592
  br i1 %tobool, label %if.then, label %if.end, !dbg !10594

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10595, !tbaa !2668
  %call = call i32 @fileno(%struct._IO_FILE* %1) #9, !dbg !10596
  %2 = load i32, i32* %advice.addr, align 4, !dbg !10597, !tbaa !3315
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !10598
  br label %if.end, !dbg !10598

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10599
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !10600 !ctir !1613 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %flags.addr = alloca i32, align 4, !ctir !5
  %mode = alloca i32, align 4, !ctir !136
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1615
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10604, metadata !DIExpression()), !dbg !10605
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10606, metadata !DIExpression()), !dbg !10607
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10608, metadata !DIExpression()), !dbg !10609
  store i32 0, i32* %mode, align 4, !dbg !10609, !tbaa !2655
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10610, !tbaa !2655
  %and = and i32 %0, 64, !dbg !10612
  %tobool = icmp ne i32 %and, 0, !dbg !10612
  br i1 %tobool, label %if.then, label %if.end, !dbg !10613

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !10614, metadata !DIExpression()), !dbg !10616
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10617
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !10617
  call void @llvm.va_start(i8* %arraydecay1), !dbg !10617
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10618
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !10618
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !10618
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !10618
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10618

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !10618
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !10618
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !10618
  %3 = bitcast i8* %2 to i32*, !dbg !10618
  %4 = add i32 %gp_offset, 8, !dbg !10618
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !10618
  br label %vaarg.end, !dbg !10618

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !10618
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10618
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !10618
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !10618
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10618
  br label %vaarg.end, !dbg !10618

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !10618
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !10618
  store i32 %6, i32* %mode, align 4, !dbg !10619, !tbaa !2655
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10620
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !10620
  call void @llvm.va_end(i8* %arraydecay34), !dbg !10620
  br label %if.end, !dbg !10621

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10622, !tbaa !2668
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10623, !tbaa !2655
  %9 = load i32, i32* %mode, align 4, !dbg !10624, !tbaa !2655
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !10625
  %call5 = call i32 @fd_safer(i32 %call), !dbg !10626
  ret i32 %call5, !dbg !10627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !10628 !ctir !1627 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8, !ctir !172
  %file.addr = alloca i8*, align 8, !ctir !177
  %stats.addr = alloca %struct.stat*, align 8, !ctir !1629
  %ent = alloca %struct.F_triple*, align 8, !ctir !1652
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1652
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10636, metadata !DIExpression()), !dbg !10637
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10638, !tbaa !2668
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10640
  br i1 %cmp, label %if.then, label %if.end, !dbg !10641

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10642

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10643
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10643
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10644, !tbaa !2668
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10645, !tbaa !2668
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10646
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10647, !tbaa !2668
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10648, !ctir !1653
  store i8* %call1, i8** %name, align 8, !dbg !10649, !tbaa !10650, !ctir !7
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10652, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10653, !ctir !1630
  %5 = load i64, i64* %st_ino, align 8, !dbg !10653, !tbaa !4789, !ctir !282
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10654, !tbaa !2668
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10655, !ctir !1653
  store i64 %5, i64* %st_ino2, align 8, !dbg !10656, !tbaa !10657, !ctir !447
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10658, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10659, !ctir !1630
  %8 = load i64, i64* %st_dev, align 8, !dbg !10659, !tbaa !4768, !ctir !280
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10660, !tbaa !2668
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10661, !ctir !1653
  store i64 %8, i64* %st_dev3, align 8, !dbg !10662, !tbaa !10663, !ctir !449
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10664, metadata !DIExpression()), !dbg !10666
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10667, !tbaa !2668
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10668, !tbaa !2668
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10668
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10669
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10669
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10666, !tbaa !2668
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10670, !tbaa !2668
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10672
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10673

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !10674
  unreachable, !dbg !10674

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10676, !tbaa !2668
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10678, !tbaa !2668
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10679
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10680

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10681, !tbaa !2668
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10681
  call void @triple_free(i8* %18), !dbg !10683
  br label %if.end10, !dbg !10684

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10685
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !10686 !ctir !1659 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %ht.addr = alloca %struct.hash_table*, align 8, !ctir !1661
  %file.addr = alloca i8*, align 8, !ctir !177
  %stats.addr = alloca %struct.stat*, align 8, !ctir !1629
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1653
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10687, metadata !DIExpression()), !dbg !10688
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10689, metadata !DIExpression()), !dbg !10690
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10691, metadata !DIExpression()), !dbg !10692
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10693, metadata !DIExpression()), !dbg !10694
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10695, !tbaa !2668
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10697
  br i1 %cmp, label %if.then, label %if.end, !dbg !10698

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10699
  br label %return, !dbg !10699

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10700, !tbaa !2668
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10701, !ctir !1653
  store i8* %1, i8** %name, align 8, !dbg !10702, !tbaa !10650, !ctir !7
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10703, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10704, !ctir !1630
  %3 = load i64, i64* %st_ino, align 8, !dbg !10704, !tbaa !4789, !ctir !282
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10705, !ctir !1653
  store i64 %3, i64* %st_ino1, align 8, !dbg !10706, !tbaa !10657, !ctir !447
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10707, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10708, !ctir !1630
  %5 = load i64, i64* %st_dev, align 8, !dbg !10708, !tbaa !4768, !ctir !280
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10709, !ctir !1653
  store i64 %5, i64* %st_dev2, align 8, !dbg !10710, !tbaa !10663, !ctir !449
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10711, !tbaa !2668
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10712
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10713
  %tobool = icmp ne i8* %call, null, !dbg !10714
  %lnot = xor i1 %tobool, true, !dbg !10714
  %lnot3 = xor i1 %lnot, true, !dbg !10715
  store i1 %lnot3, i1* %retval, align 1, !dbg !10716
  br label %return, !dbg !10716

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10717
  ret i1 %8, !dbg !10717
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !10718 !ctir !1666 {
entry:
  %mode.addr = alloca i32, align 4, !ctir !136
  %str.addr = alloca i8*, align 8, !ctir !7
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10720, metadata !DIExpression()), !dbg !10721
  store i8* %str, i8** %str.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10722, metadata !DIExpression()), !dbg !10723
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10724, !tbaa !2655
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10725
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10726, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10726, !ctir !7
  store i8 %call, i8* %arrayidx, align 1, !dbg !10727, !tbaa !3315
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10728, !tbaa !2655
  %and = and i32 %2, 256, !dbg !10729
  %tobool = icmp ne i32 %and, 0, !dbg !10728
  %3 = zext i1 %tobool to i64, !dbg !10728
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10728
  %conv = trunc i32 %cond to i8, !dbg !10728
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10730, !tbaa !2668
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10730, !ctir !7
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10731, !tbaa !3315
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10732, !tbaa !2655
  %and2 = and i32 %5, 128, !dbg !10733
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10732
  %6 = zext i1 %tobool3 to i64, !dbg !10732
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10732
  %conv5 = trunc i32 %cond4 to i8, !dbg !10732
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10734, !tbaa !2668
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10734, !ctir !7
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10735, !tbaa !3315
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10736, !tbaa !2655
  %and7 = and i32 %8, 2048, !dbg !10737
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10737
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10736

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10738, !tbaa !2655
  %and9 = and i32 %9, 64, !dbg !10739
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10738
  %10 = zext i1 %tobool10 to i64, !dbg !10738
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10738
  br label %cond.end, !dbg !10736

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10740, !tbaa !2655
  %and12 = and i32 %11, 64, !dbg !10741
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10740
  %12 = zext i1 %tobool13 to i64, !dbg !10740
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10740
  br label %cond.end, !dbg !10736

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10736
  %conv16 = trunc i32 %cond15 to i8, !dbg !10742
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10743, !tbaa !2668
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10743, !ctir !7
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10744, !tbaa !3315
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10745, !tbaa !2655
  %and18 = and i32 %14, 32, !dbg !10746
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10745
  %15 = zext i1 %tobool19 to i64, !dbg !10745
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10745
  %conv21 = trunc i32 %cond20 to i8, !dbg !10745
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10747, !tbaa !2668
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10747, !ctir !7
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10748, !tbaa !3315
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10749, !tbaa !2655
  %and23 = and i32 %17, 16, !dbg !10750
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10749
  %18 = zext i1 %tobool24 to i64, !dbg !10749
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10749
  %conv26 = trunc i32 %cond25 to i8, !dbg !10749
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10751, !tbaa !2668
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10751, !ctir !7
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10752, !tbaa !3315
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10753, !tbaa !2655
  %and28 = and i32 %20, 1024, !dbg !10754
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10754
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10753

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10755, !tbaa !2655
  %and31 = and i32 %21, 8, !dbg !10756
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10755
  %22 = zext i1 %tobool32 to i64, !dbg !10755
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10755
  br label %cond.end38, !dbg !10753

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10757, !tbaa !2655
  %and35 = and i32 %23, 8, !dbg !10758
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10757
  %24 = zext i1 %tobool36 to i64, !dbg !10757
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10757
  br label %cond.end38, !dbg !10753

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10753
  %conv40 = trunc i32 %cond39 to i8, !dbg !10759
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10760, !tbaa !2668
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10760, !ctir !7
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10761, !tbaa !3315
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10762, !tbaa !2655
  %and42 = and i32 %26, 4, !dbg !10763
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10762
  %27 = zext i1 %tobool43 to i64, !dbg !10762
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10762
  %conv45 = trunc i32 %cond44 to i8, !dbg !10762
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10764, !tbaa !2668
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10764, !ctir !7
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10765, !tbaa !3315
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10766, !tbaa !2655
  %and47 = and i32 %29, 2, !dbg !10767
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10766
  %30 = zext i1 %tobool48 to i64, !dbg !10766
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10766
  %conv50 = trunc i32 %cond49 to i8, !dbg !10766
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10768, !tbaa !2668
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10768, !ctir !7
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10769, !tbaa !3315
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10770, !tbaa !2655
  %and52 = and i32 %32, 512, !dbg !10771
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10771
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10770

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10772, !tbaa !2655
  %and55 = and i32 %33, 1, !dbg !10773
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10772
  %34 = zext i1 %tobool56 to i64, !dbg !10772
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10772
  br label %cond.end62, !dbg !10770

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10774, !tbaa !2655
  %and59 = and i32 %35, 1, !dbg !10775
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10774
  %36 = zext i1 %tobool60 to i64, !dbg !10774
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10774
  br label %cond.end62, !dbg !10770

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10770
  %conv64 = trunc i32 %cond63 to i8, !dbg !10776
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10777, !tbaa !2668
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10777, !ctir !7
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10778, !tbaa !3315
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10779, !tbaa !2668
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10779, !ctir !7
  store i8 32, i8* %arrayidx66, align 1, !dbg !10780, !tbaa !3315
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10781, !tbaa !2668
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10781, !ctir !7
  store i8 0, i8* %arrayidx67, align 1, !dbg !10782, !tbaa !3315
  ret void, !dbg !10783
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !10784 !ctir !1693 {
entry:
  %retval = alloca i8, align 1, !ctir !8
  %bits.addr = alloca i32, align 4, !ctir !136
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10785, metadata !DIExpression()), !dbg !10786
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10787, !tbaa !2655
  %and = and i32 %0, 61440, !dbg !10787
  %cmp = icmp eq i32 %and, 32768, !dbg !10787
  br i1 %cmp, label %if.then, label %if.end, !dbg !10789

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10790
  br label %return, !dbg !10790

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10791, !tbaa !2655
  %and1 = and i32 %1, 61440, !dbg !10791
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10791
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10793

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10794
  br label %return, !dbg !10794

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10795, !tbaa !2655
  %and5 = and i32 %2, 61440, !dbg !10795
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10795
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10797

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10798
  br label %return, !dbg !10798

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10799, !tbaa !2655
  %and9 = and i32 %3, 61440, !dbg !10799
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10799
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10801

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10802
  br label %return, !dbg !10802

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10803, !tbaa !2655
  %and13 = and i32 %4, 61440, !dbg !10803
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10803
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10805

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10806
  br label %return, !dbg !10806

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10807, !tbaa !2655
  %and17 = and i32 %5, 61440, !dbg !10807
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10807
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10809

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10810
  br label %return, !dbg !10810

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10811, !tbaa !2655
  %and21 = and i32 %6, 61440, !dbg !10811
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10811
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10813

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10814
  br label %return, !dbg !10814

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10815
  br label %return, !dbg !10815

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10816
  ret i8 %7, !dbg !10816
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !10817 !ctir !1668 {
entry:
  %statp.addr = alloca %struct.stat*, align 8, !ctir !1670
  %str.addr = alloca i8*, align 8, !ctir !7
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10818, metadata !DIExpression()), !dbg !10819
  store i8* %str, i8** %str.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10820, metadata !DIExpression()), !dbg !10821
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10822, !tbaa !2668
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10823, !ctir !1671
  %1 = load i32, i32* %st_mode, align 8, !dbg !10823, !tbaa !2934, !ctir !137
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10824, !tbaa !2668
  call void @strmode(i32 %1, i8* %2), !dbg !10825
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10826, !tbaa !2668
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10826, !ctir !1671
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10826, !tbaa !2934, !ctir !137
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10826, !tbaa !2668
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10826, !ctir !1671
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10826, !tbaa !2934, !ctir !137
  %sub = sub i32 %4, %6, !dbg !10826
  %tobool = icmp ne i32 %sub, 0, !dbg !10826
  br i1 %tobool, label %if.then, label %if.else, !dbg !10828

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10829, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10829, !ctir !7
  store i8 70, i8* %arrayidx, align 1, !dbg !10830, !tbaa !3315
  br label %if.end18, !dbg !10829

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10831, !tbaa !2668
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10831, !ctir !1671
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10831, !tbaa !2934, !ctir !137
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10831, !tbaa !2668
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10831, !ctir !1671
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10831, !tbaa !2934, !ctir !137
  %sub5 = sub i32 %9, %11, !dbg !10831
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10831
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10834

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10835, !tbaa !2668
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10835, !ctir !7
  store i8 81, i8* %arrayidx8, align 1, !dbg !10836, !tbaa !3315
  br label %if.end17, !dbg !10835

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10837, !tbaa !2668
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10837, !ctir !1671
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10837, !tbaa !2934, !ctir !137
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10837, !tbaa !2668
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10837, !ctir !1671
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10837, !tbaa !2934, !ctir !137
  %sub12 = sub i32 %14, %16, !dbg !10837
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10837
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10839

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10840, !tbaa !2668
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10840, !ctir !7
  store i8 83, i8* %arrayidx15, align 1, !dbg !10841, !tbaa !3315
  br label %if.end, !dbg !10840

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10842
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10843 !ctir !1698 {
entry:
  %dir.addr = alloca i8*, align 8, !ctir !177
  %base.addr = alloca i8*, align 8, !ctir !177
  %base_in_result.addr = alloca i8**, align 8, !ctir !181
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  store i8* %base, i8** %base.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10849, metadata !DIExpression()), !dbg !10850
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10851, metadata !DIExpression()), !dbg !10852
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10853, !tbaa !2668
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10854, !tbaa !2668
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10855, !tbaa !2668
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10856
  store i8* %call, i8** %p, align 8, !dbg !10852, !tbaa !2668
  %3 = load i8*, i8** %p, align 8, !dbg !10857, !tbaa !2668
  %cmp = icmp eq i8* %3, null, !dbg !10859
  br i1 %cmp, label %if.then, label %if.end, !dbg !10860

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10861
  unreachable, !dbg !10861

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10862, !tbaa !2668
  ret i8* %4, !dbg !10863
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10864 !ctir !1698 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dir.addr = alloca i8*, align 8, !ctir !177
  %base.addr = alloca i8*, align 8, !ctir !177
  %base_in_result.addr = alloca i8**, align 8, !ctir !181
  %dirbase = alloca i8*, align 8, !ctir !177
  %dirbaselen = alloca i64, align 8, !ctir !52
  %dirlen = alloca i64, align 8, !ctir !52
  %baselen = alloca i64, align 8, !ctir !52
  %sep = alloca i8, align 1, !ctir !8
  %p_concat = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10866, metadata !DIExpression()), !dbg !10867
  store i8* %base, i8** %base.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10868, metadata !DIExpression()), !dbg !10869
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10870, metadata !DIExpression()), !dbg !10871
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10872, metadata !DIExpression()), !dbg !10873
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10874, !tbaa !2668
  %call = call i8* @last_component(i8* %0) #14, !dbg !10875
  store i8* %call, i8** %dirbase, align 8, !dbg !10873, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !10876, metadata !DIExpression()), !dbg !10877
  %1 = load i8*, i8** %dirbase, align 8, !dbg !10878, !tbaa !2668
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10879
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !10877, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !10880, metadata !DIExpression()), !dbg !10881
  %2 = load i8*, i8** %dirbase, align 8, !dbg !10882, !tbaa !2668
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !10883, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10884
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10884
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10884
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !10885, !tbaa !3308
  %add = add i64 %sub.ptr.sub, %4, !dbg !10886
  store i64 %add, i64* %dirlen, align 8, !dbg !10881, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10887, metadata !DIExpression()), !dbg !10888
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10889, !tbaa !2668
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !10890
  store i64 %call2, i64* %baselen, align 8, !dbg !10888, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !10891, metadata !DIExpression()), !dbg !10892
  store i8 0, i8* %sep, align 1, !dbg !10892, !tbaa !3315
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !10893, !tbaa !3308
  %tobool = icmp ne i64 %6, 0, !dbg !10893
  br i1 %tobool, label %if.then, label %if.else, !dbg !10895

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !10896, !tbaa !2668
  %8 = load i64, i64* %dirlen, align 8, !dbg !10896, !tbaa !3308
  %sub = sub i64 %8, 1, !dbg !10896
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !10896, !ctir !177
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10896, !tbaa !3315
  %conv = sext i8 %9 to i32, !dbg !10896
  %cmp = icmp eq i32 %conv, 47, !dbg !10896
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10899

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !10900, !tbaa !2668
  %11 = load i8, i8* %10, align 1, !dbg !10900, !tbaa !3315, !ctir !178
  %conv4 = sext i8 %11 to i32, !dbg !10900
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !10900
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !10901

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !10902, !tbaa !3315
  br label %if.end, !dbg !10903

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !10904

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !10905, !tbaa !2668
  %13 = load i8, i8* %12, align 1, !dbg !10905, !tbaa !3315, !ctir !178
  %conv8 = sext i8 %13 to i32, !dbg !10905
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10905
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10907

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !10908, !tbaa !3315
  br label %if.end12, !dbg !10910

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !10911, metadata !DIExpression()), !dbg !10912
  %14 = load i64, i64* %dirlen, align 8, !dbg !10913, !tbaa !3308
  %15 = load i8, i8* %sep, align 1, !dbg !10914, !tbaa !3315
  %conv14 = sext i8 %15 to i32, !dbg !10914
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !10915
  %conv16 = zext i1 %cmp15 to i32, !dbg !10915
  %conv17 = sext i32 %conv16 to i64, !dbg !10916
  %add18 = add i64 %14, %conv17, !dbg !10917
  %16 = load i64, i64* %baselen, align 8, !dbg !10918, !tbaa !3308
  %add19 = add i64 %add18, %16, !dbg !10919
  %add20 = add i64 %add19, 1, !dbg !10920
  %call21 = call noalias i8* @malloc(i64 %add20) #9, !dbg !10921
  store i8* %call21, i8** %p_concat, align 8, !dbg !10912, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10922, metadata !DIExpression()), !dbg !10923
  %17 = load i8*, i8** %p_concat, align 8, !dbg !10924, !tbaa !2668
  %cmp22 = icmp eq i8* %17, null, !dbg !10926
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10927

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !10928
  br label %return, !dbg !10928

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !10929, !tbaa !2668
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !10930, !tbaa !2668
  %20 = load i64, i64* %dirlen, align 8, !dbg !10931, !tbaa !3308
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #9, !dbg !10932
  store i8* %call26, i8** %p, align 8, !dbg !10933, !tbaa !2668
  %21 = load i8, i8* %sep, align 1, !dbg !10934, !tbaa !3315
  %22 = load i8*, i8** %p, align 8, !dbg !10935, !tbaa !2668
  store i8 %21, i8* %22, align 1, !dbg !10936, !tbaa !3315, !ctir !8
  %23 = load i8, i8* %sep, align 1, !dbg !10937, !tbaa !3315
  %conv27 = sext i8 %23 to i32, !dbg !10937
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10938
  %conv29 = zext i1 %cmp28 to i32, !dbg !10938
  %24 = load i8*, i8** %p, align 8, !dbg !10939, !tbaa !2668
  %idx.ext = sext i32 %conv29 to i64, !dbg !10939
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !10939
  store i8* %add.ptr, i8** %p, align 8, !dbg !10939, !tbaa !2668
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10940, !tbaa !2668
  %tobool30 = icmp ne i8** %25, null, !dbg !10940
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10942

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !10943, !tbaa !2668
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10944, !tbaa !2668
  store i8* %26, i8** %27, align 8, !dbg !10945, !tbaa !2668, !ctir !7
  br label %if.end32, !dbg !10946

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !10947, !tbaa !2668
  %29 = load i8*, i8** %base.addr, align 8, !dbg !10948, !tbaa !2668
  %30 = load i64, i64* %baselen, align 8, !dbg !10949, !tbaa !3308
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #9, !dbg !10950
  store i8* %call33, i8** %p, align 8, !dbg !10951, !tbaa !2668
  %31 = load i8*, i8** %p, align 8, !dbg !10952, !tbaa !2668
  store i8 0, i8* %31, align 1, !dbg !10953, !tbaa !3315, !ctir !8
  %32 = load i8*, i8** %p_concat, align 8, !dbg !10954, !tbaa !2668
  store i8* %32, i8** %retval, align 8, !dbg !10955
  br label %return, !dbg !10955

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !10956
  ret i8* %33, !dbg !10956
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !10957 !ctir !1706 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !47
  %count.addr = alloca i64, align 8, !ctir !52
  %total = alloca i64, align 8, !ctir !52
  %ptr = alloca i8*, align 8, !ctir !7
  %n_rw = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10958, metadata !DIExpression()), !dbg !10959
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10960, metadata !DIExpression()), !dbg !10961
  store i64 %count, i64* %count.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10962, metadata !DIExpression()), !dbg !10963
  call void @llvm.dbg.declare(metadata i64* %total, metadata !10964, metadata !DIExpression()), !dbg !10965
  store i64 0, i64* %total, align 8, !dbg !10965, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !10966, metadata !DIExpression()), !dbg !10967
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10968, !tbaa !2668
  store i8* %0, i8** %ptr, align 8, !dbg !10967, !tbaa !2668
  br label %while.cond, !dbg !10969

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !10970, !tbaa !3308
  %cmp = icmp ugt i64 %1, 0, !dbg !10971
  br i1 %cmp, label %while.body, label %while.end, !dbg !10969

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !10972, metadata !DIExpression()), !dbg !10974
  %2 = load i32, i32* %fd.addr, align 4, !dbg !10975, !tbaa !2655
  %3 = load i8*, i8** %ptr, align 8, !dbg !10976, !tbaa !2668
  %4 = load i64, i64* %count.addr, align 8, !dbg !10977, !tbaa !3308
  %call = call i64 @safe_read(i32 %2, i8* %3, i64 %4), !dbg !10978
  store i64 %call, i64* %n_rw, align 8, !dbg !10974, !tbaa !3308
  %5 = load i64, i64* %n_rw, align 8, !dbg !10979, !tbaa !3308
  %cmp1 = icmp eq i64 %5, -1, !dbg !10981
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10982

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !10983

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !10984, !tbaa !3308
  %cmp2 = icmp eq i64 %6, 0, !dbg !10986
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !10987

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !10988
  store i32 0, i32* %call4, align 4, !dbg !10990, !tbaa !2655, !ctir !5
  br label %while.end, !dbg !10991

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !10992, !tbaa !3308
  %8 = load i64, i64* %total, align 8, !dbg !10993, !tbaa !3308
  %add = add i64 %8, %7, !dbg !10993
  store i64 %add, i64* %total, align 8, !dbg !10993, !tbaa !3308
  %9 = load i64, i64* %n_rw, align 8, !dbg !10994, !tbaa !3308
  %10 = load i8*, i8** %ptr, align 8, !dbg !10995, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !10995
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !10995, !tbaa !2668
  %11 = load i64, i64* %n_rw, align 8, !dbg !10996, !tbaa !3308
  %12 = load i64, i64* %count.addr, align 8, !dbg !10997, !tbaa !3308
  %sub = sub i64 %12, %11, !dbg !10997
  store i64 %sub, i64* %count.addr, align 8, !dbg !10997, !tbaa !3308
  br label %while.cond, !dbg !10969, !llvm.loop !10998

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11000, !tbaa !3308
  ret i64 %13, !dbg !11001
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11002 !ctir !1711 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !525
  %count.addr = alloca i64, align 8, !ctir !52
  %total = alloca i64, align 8, !ctir !52
  %ptr = alloca i8*, align 8, !ctir !177
  %n_rw = alloca i64, align 8, !ctir !52
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11004, metadata !DIExpression()), !dbg !11005
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11006, metadata !DIExpression()), !dbg !11007
  store i64 %count, i64* %count.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11008, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11010, metadata !DIExpression()), !dbg !11011
  store i64 0, i64* %total, align 8, !dbg !11011, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11012, metadata !DIExpression()), !dbg !11013
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11014, !tbaa !2668
  store i8* %0, i8** %ptr, align 8, !dbg !11013, !tbaa !2668
  br label %while.cond, !dbg !11015

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11016, !tbaa !3308
  %cmp = icmp ugt i64 %1, 0, !dbg !11017
  br i1 %cmp, label %while.body, label %while.end, !dbg !11015

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11018, metadata !DIExpression()), !dbg !11020
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11021, !tbaa !2655
  %3 = load i8*, i8** %ptr, align 8, !dbg !11022, !tbaa !2668
  %4 = load i64, i64* %count.addr, align 8, !dbg !11023, !tbaa !3308
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !11024
  store i64 %call, i64* %n_rw, align 8, !dbg !11020, !tbaa !3308
  %5 = load i64, i64* %n_rw, align 8, !dbg !11025, !tbaa !3308
  %cmp1 = icmp eq i64 %5, -1, !dbg !11027
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11028

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11029

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11030, !tbaa !3308
  %cmp2 = icmp eq i64 %6, 0, !dbg !11032
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11033

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !11034
  store i32 28, i32* %call4, align 4, !dbg !11036, !tbaa !2655, !ctir !5
  br label %while.end, !dbg !11037

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11038, !tbaa !3308
  %8 = load i64, i64* %total, align 8, !dbg !11039, !tbaa !3308
  %add = add i64 %8, %7, !dbg !11039
  store i64 %add, i64* %total, align 8, !dbg !11039, !tbaa !3308
  %9 = load i64, i64* %n_rw, align 8, !dbg !11040, !tbaa !3308
  %10 = load i8*, i8** %ptr, align 8, !dbg !11041, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11041
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11041, !tbaa !2668
  %11 = load i64, i64* %n_rw, align 8, !dbg !11042, !tbaa !3308
  %12 = load i64, i64* %count.addr, align 8, !dbg !11043, !tbaa !3308
  %sub = sub i64 %12, %11, !dbg !11043
  store i64 %sub, i64* %count.addr, align 8, !dbg !11043, !tbaa !3308
  br label %while.cond, !dbg !11015, !llvm.loop !11044

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11046, !tbaa !3308
  ret i64 %13, !dbg !11047
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #10 !dbg !11048 !ctir !826 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11049, metadata !DIExpression()), !dbg !11050
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11051, !tbaa !2668
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11052, !ctir !829
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11052, !tbaa !11053, !ctir !52
  ret i64 %1, !dbg !11055
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #10 !dbg !11056 !ctir !826 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11057, metadata !DIExpression()), !dbg !11058
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11059, !tbaa !2668
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11060, !ctir !829
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11060, !tbaa !11061, !ctir !52
  ret i64 %1, !dbg !11062
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #10 !dbg !11063 !ctir !826 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11064, metadata !DIExpression()), !dbg !11065
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11066, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11067, !ctir !829
  %1 = load i64, i64* %n_entries, align 8, !dbg !11067, !tbaa !11068, !ctir !52
  ret i64 %1, !dbg !11069
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #10 !dbg !11070 !ctir !826 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !841
  %max_bucket_length = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !841
  %bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11071, metadata !DIExpression()), !dbg !11072
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11073, metadata !DIExpression()), !dbg !11074
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11075, metadata !DIExpression()), !dbg !11076
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11076, !tbaa !3308
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11077, !tbaa !2668
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11079, !ctir !829
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11079, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11081, !tbaa !2668
  br label %for.cond, !dbg !11082

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11083, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11085, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11086, !ctir !829
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11086, !tbaa !11087, !ctir !841
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11088
  br i1 %cmp, label %for.body, label %for.end, !dbg !11089

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11090, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11093, !ctir !842
  %6 = load i8*, i8** %data, align 8, !dbg !11093, !tbaa !11094, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11090
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11096

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11097, metadata !DIExpression()), !dbg !11099
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11100, !tbaa !2668
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11099, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11101, metadata !DIExpression()), !dbg !11102
  store i64 1, i64* %bucket_length, align 8, !dbg !11102, !tbaa !3308
  br label %while.cond, !dbg !11103

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11104, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11105, !ctir !842
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11105, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11107, !tbaa !2668
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11108, !tbaa !2668
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11103
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11103

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11109, !tbaa !3308
  %inc = add i64 %11, 1, !dbg !11109
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11109, !tbaa !3308
  br label %while.cond, !dbg !11103, !llvm.loop !11110

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11111, !tbaa !3308
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11113, !tbaa !3308
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11114
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11115

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11116, !tbaa !3308
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11117, !tbaa !3308
  br label %if.end, !dbg !11118

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11119

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11120

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11121, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11121
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11121, !tbaa !2668
  br label %for.cond, !dbg !11122, !llvm.loop !11123

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11125, !tbaa !3308
  ret i64 %16, !dbg !11126
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #10 !dbg !11127 !ctir !868 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !841
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %n_entries = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !841
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11128, metadata !DIExpression()), !dbg !11129
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11130, metadata !DIExpression()), !dbg !11131
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11132, metadata !DIExpression()), !dbg !11133
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11133, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11134, metadata !DIExpression()), !dbg !11135
  store i64 0, i64* %n_entries, align 8, !dbg !11135, !tbaa !3308
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11136, !tbaa !2668
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11138, !ctir !829
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11138, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11139, !tbaa !2668
  br label %for.cond, !dbg !11140

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11141, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11143, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11144, !ctir !829
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11144, !tbaa !11087, !ctir !841
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11145
  br i1 %cmp, label %for.body, label %for.end, !dbg !11146

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11147, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11150, !ctir !842
  %6 = load i8*, i8** %data, align 8, !dbg !11150, !tbaa !11094, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11147
  br i1 %tobool, label %if.then, label %if.end, !dbg !11151

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11152, metadata !DIExpression()), !dbg !11154
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11155, !tbaa !2668
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11154, !tbaa !2668
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11156, !tbaa !3308
  %inc = add i64 %8, 1, !dbg !11156
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11156, !tbaa !3308
  %9 = load i64, i64* %n_entries, align 8, !dbg !11157, !tbaa !3308
  %inc2 = add i64 %9, 1, !dbg !11157
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11157, !tbaa !3308
  br label %while.cond, !dbg !11158

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11159, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11160, !ctir !842
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11160, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11161, !tbaa !2668
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11162, !tbaa !2668
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11158
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11158

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11163, !tbaa !3308
  %inc4 = add i64 %13, 1, !dbg !11163
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11163, !tbaa !3308
  br label %while.cond, !dbg !11158, !llvm.loop !11164

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11165

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11166

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11167, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11167
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11167, !tbaa !2668
  br label %for.cond, !dbg !11168, !llvm.loop !11169

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11171, !tbaa !3308
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11173, !tbaa !2668
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11174, !ctir !829
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11174, !tbaa !11061, !ctir !52
  %cmp6 = icmp eq i64 %15, %17, !dbg !11175
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11176

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11177, !tbaa !3308
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11178, !tbaa !2668
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11179, !ctir !829
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11179, !tbaa !11068, !ctir !52
  %cmp8 = icmp eq i64 %18, %20, !dbg !11180
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11181

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11182
  br label %return, !dbg !11182

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11183
  br label %return, !dbg !11183

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11184
  ret i1 %21, !dbg !11184
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11185 !ctir !870 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !872
  %n_entries = alloca i64, align 8, !ctir !52
  %n_buckets = alloca i64, align 8, !ctir !52
  %n_buckets_used = alloca i64, align 8, !ctir !52
  %max_bucket_length = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11186, metadata !DIExpression()), !dbg !11187
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11188, metadata !DIExpression()), !dbg !11189
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11190, metadata !DIExpression()), !dbg !11191
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11192, !tbaa !2668
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11193
  store i64 %call, i64* %n_entries, align 8, !dbg !11191, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11194, metadata !DIExpression()), !dbg !11195
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11196, !tbaa !2668
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11197
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11195, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11198, metadata !DIExpression()), !dbg !11199
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11200, !tbaa !2668
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11201
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11199, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11202, metadata !DIExpression()), !dbg !11203
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11204, !tbaa !2668
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11205
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11203, !tbaa !3308
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11206, !tbaa !2668
  %5 = load i64, i64* %n_entries, align 8, !dbg !11207, !tbaa !3308
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.269, i64 0, i64 0), i64 %5), !dbg !11208
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11209, !tbaa !2668
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11210, !tbaa !3308
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.270, i64 0, i64 0), i64 %7), !dbg !11211
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11212, !tbaa !2668
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11213, !tbaa !3308
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11214, !tbaa !3308
  %conv = uitofp i64 %10 to double, !dbg !11214
  %mul = fmul double 1.000000e+02, %conv, !dbg !11215
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11216, !tbaa !3308
  %conv6 = uitofp i64 %11 to double, !dbg !11216
  %div = fdiv double %mul, %conv6, !dbg !11217
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.271, i64 0, i64 0), i64 %9, double %div), !dbg !11218
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11219, !tbaa !2668
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11220, !tbaa !3308
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.272, i64 0, i64 0), i64 %13), !dbg !11221
  ret void, !dbg !11222
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11223 !ctir !912 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %entry.addr = alloca i8*, align 8, !ctir !525
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !841
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !841
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11224, metadata !DIExpression()), !dbg !11225
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11226, metadata !DIExpression()), !dbg !11227
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11228, metadata !DIExpression()), !dbg !11229
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11230, !tbaa !2668
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11231, !tbaa !2668
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11232
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11229, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11233, metadata !DIExpression()), !dbg !11234
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11235, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11237, !ctir !842
  %3 = load i8*, i8** %data, align 8, !dbg !11237, !tbaa !11094, !ctir !47
  %cmp = icmp eq i8* %3, null, !dbg !11238
  br i1 %cmp, label %if.then, label %if.end, !dbg !11239

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11240
  br label %return, !dbg !11240

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11241, !tbaa !2668
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11243, !tbaa !2668
  br label %for.cond, !dbg !11244

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11245, !tbaa !2668
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11247
  br i1 %tobool, label %for.body, label %for.end, !dbg !11247

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11248, !tbaa !2668
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11250, !tbaa !2668
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11251, !ctir !842
  %8 = load i8*, i8** %data2, align 8, !dbg !11251, !tbaa !11094, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !11252
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11253

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11254, !tbaa !2668
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11255, !ctir !829
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11255, !tbaa !11256, !ctir !862
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11257, !tbaa !2668
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11258, !tbaa !2668
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11259, !ctir !842
  %13 = load i8*, i8** %data4, align 8, !dbg !11259, !tbaa !11094, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11254
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11260

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11261, !tbaa !2668
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11262, !ctir !842
  %15 = load i8*, i8** %data7, align 8, !dbg !11262, !tbaa !11094, !ctir !47
  store i8* %15, i8** %retval, align 8, !dbg !11263
  br label %return, !dbg !11263

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11264

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11265, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11266, !ctir !842
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11266, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11267, !tbaa !2668
  br label %for.cond, !dbg !11268, !llvm.loop !11269

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11271
  br label %return, !dbg !11271

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11272
  ret i8* %18, !dbg !11272
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11273 !ctir !942 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %key.addr = alloca i8*, align 8, !ctir !525
  %n = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11274, metadata !DIExpression()), !dbg !11275
  store i8* %key, i8** %key.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11276, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11278, metadata !DIExpression()), !dbg !11279
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11280, !tbaa !2668
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11281, !ctir !829
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11281, !tbaa !11282, !ctir !859
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11283, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11284, !tbaa !2668
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11285, !ctir !829
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11285, !tbaa !11053, !ctir !52
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11280
  store i64 %call, i64* %n, align 8, !dbg !11279, !tbaa !3308
  %5 = load i64, i64* %n, align 8, !dbg !11286, !tbaa !3308
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11288, !tbaa !2668
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11289, !ctir !829
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11289, !tbaa !11053, !ctir !52
  %cmp = icmp ult i64 %5, %7, !dbg !11290
  br i1 %cmp, label %if.end, label %if.then, !dbg !11291

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11292
  unreachable, !dbg !11292

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11293, !tbaa !2668
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11294, !ctir !829
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11294, !tbaa !11080, !ctir !835
  %10 = load i64, i64* %n, align 8, !dbg !11295, !tbaa !3308
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11296
  ret %struct.hash_entry* %add.ptr, !dbg !11297
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #10 !dbg !11298 !ctir !914 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !841
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11299, metadata !DIExpression()), !dbg !11300
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11301, metadata !DIExpression()), !dbg !11302
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11303, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11305, !ctir !829
  %1 = load i64, i64* %n_entries, align 8, !dbg !11305, !tbaa !11068, !ctir !52
  %cmp = icmp eq i64 %1, 0, !dbg !11306
  br i1 %cmp, label %if.then, label %if.end, !dbg !11307

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11308
  br label %return, !dbg !11308

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11309, !tbaa !2668
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11311, !ctir !829
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11311, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11312, !tbaa !2668
  br label %for.cond, !dbg !11313

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11314, !tbaa !2668
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11317, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11318, !ctir !829
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11318, !tbaa !11087, !ctir !841
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11319
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11320

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11321
  unreachable, !dbg !11321

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11322, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11324, !ctir !842
  %8 = load i8*, i8** %data, align 8, !dbg !11324, !tbaa !11094, !ctir !47
  %tobool = icmp ne i8* %8, null, !dbg !11322
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11325

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11326, !tbaa !2668
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11327, !ctir !842
  %10 = load i8*, i8** %data5, align 8, !dbg !11327, !tbaa !11094, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !11328
  br label %return, !dbg !11328

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11329

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11330, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11330
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11330, !tbaa !2668
  br label %for.cond, !dbg !11331, !llvm.loop !11332

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11335
  ret i8* %12, !dbg !11335
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11336 !ctir !912 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %entry.addr = alloca i8*, align 8, !ctir !525
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !841
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !841
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11337, metadata !DIExpression()), !dbg !11338
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11339, metadata !DIExpression()), !dbg !11340
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11341, metadata !DIExpression()), !dbg !11342
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11343, !tbaa !2668
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11344, !tbaa !2668
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11345
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11342, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11346, metadata !DIExpression()), !dbg !11347
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11348, !tbaa !2668
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11349, !tbaa !2668
  br label %do.body, !dbg !11350

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11351, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11354, !ctir !842
  %4 = load i8*, i8** %data, align 8, !dbg !11354, !tbaa !11094, !ctir !47
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11355, !tbaa !2668
  %cmp = icmp eq i8* %4, %5, !dbg !11356
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11357

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11358, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11359, !ctir !842
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11359, !tbaa !11106, !ctir !835
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11358
  br i1 %tobool, label %if.then, label %if.end, !dbg !11360

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11361, !tbaa !2668
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11362, !ctir !842
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11362, !tbaa !11106, !ctir !835
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11363, !ctir !836
  %10 = load i8*, i8** %data3, align 8, !dbg !11363, !tbaa !11094, !ctir !47
  store i8* %10, i8** %retval, align 8, !dbg !11364
  br label %return, !dbg !11364

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11365, !tbaa !2668
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11366, !ctir !842
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11366, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11367, !tbaa !2668
  br label %do.cond, !dbg !11368

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11369, !tbaa !2668
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11370
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11368, !llvm.loop !11371

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11373

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11374, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11374
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11374, !tbaa !2668
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11375, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11376, !ctir !829
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11376, !tbaa !11087, !ctir !841
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11377
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11373

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11378, !tbaa !2668
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11380, !ctir !842
  %18 = load i8*, i8** %data7, align 8, !dbg !11380, !tbaa !11094, !ctir !47
  %tobool8 = icmp ne i8* %18, null, !dbg !11378
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11381

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11382, !tbaa !2668
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11383, !ctir !842
  %20 = load i8*, i8** %data10, align 8, !dbg !11383, !tbaa !11094, !ctir !47
  store i8* %20, i8** %retval, align 8, !dbg !11384
  br label %return, !dbg !11384

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11373, !llvm.loop !11385

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11387
  br label %return, !dbg !11387

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11388
  ret i8* %21, !dbg !11388
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11389 !ctir !916 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %buffer.addr = alloca i8**, align 8, !ctir !918
  %buffer_size.addr = alloca i64, align 8, !ctir !52
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !841
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !841
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11390, metadata !DIExpression()), !dbg !11391
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11392, metadata !DIExpression()), !dbg !11393
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11394, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11396, metadata !DIExpression()), !dbg !11397
  store i64 0, i64* %counter, align 8, !dbg !11397, !tbaa !3308
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11398, metadata !DIExpression()), !dbg !11399
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11400, metadata !DIExpression()), !dbg !11401
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11402, !tbaa !2668
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11404, !ctir !829
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11404, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11405, !tbaa !2668
  br label %for.cond, !dbg !11406

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11407, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11409, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11410, !ctir !829
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11410, !tbaa !11087, !ctir !841
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11411
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11412

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11413, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11416, !ctir !842
  %6 = load i8*, i8** %data, align 8, !dbg !11416, !tbaa !11094, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11413
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11417

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11418, !tbaa !2668
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11421, !tbaa !2668
  br label %for.cond2, !dbg !11422

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11423, !tbaa !2668
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11425
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11425

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11426, !tbaa !3308
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11429, !tbaa !3308
  %cmp5 = icmp uge i64 %9, %10, !dbg !11430
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11431

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11432, !tbaa !3308
  store i64 %11, i64* %retval, align 8, !dbg !11433
  br label %return, !dbg !11433

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11434, !tbaa !2668
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11435, !ctir !842
  %13 = load i8*, i8** %data7, align 8, !dbg !11435, !tbaa !11094, !ctir !47
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11436, !tbaa !2668
  %15 = load i64, i64* %counter, align 8, !dbg !11437, !tbaa !3308
  %inc = add i64 %15, 1, !dbg !11437
  store i64 %inc, i64* %counter, align 8, !dbg !11437, !tbaa !3308
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11436, !ctir !918
  store i8* %13, i8** %arrayidx, align 8, !dbg !11438, !tbaa !2668
  br label %for.inc, !dbg !11439

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11440, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11441, !ctir !842
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11441, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11442, !tbaa !2668
  br label %for.cond2, !dbg !11443, !llvm.loop !11444

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11446

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11447

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11448, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11448
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11448, !tbaa !2668
  br label %for.cond, !dbg !11449, !llvm.loop !11450

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11452, !tbaa !3308
  store i64 %19, i64* %retval, align 8, !dbg !11453
  br label %return, !dbg !11453

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11454
  ret i64 %20, !dbg !11454
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11455 !ctir !919 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !828
  %processor.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !921
  %processor_data.addr = alloca i8*, align 8, !ctir !47
  %counter = alloca i64, align 8, !ctir !52
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !841
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !841
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11456, metadata !DIExpression()), !dbg !11457
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11458, metadata !DIExpression()), !dbg !11459
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11460, metadata !DIExpression()), !dbg !11461
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11462, metadata !DIExpression()), !dbg !11463
  store i64 0, i64* %counter, align 8, !dbg !11463, !tbaa !3308
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11464, metadata !DIExpression()), !dbg !11465
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11466, metadata !DIExpression()), !dbg !11467
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11468, !tbaa !2668
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11470, !ctir !829
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11470, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11471, !tbaa !2668
  br label %for.cond, !dbg !11472

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11473, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11475, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11476, !ctir !829
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11476, !tbaa !11087, !ctir !841
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11477
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11478

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11479, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11482, !ctir !842
  %6 = load i8*, i8** %data, align 8, !dbg !11482, !tbaa !11094, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11479
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11483

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11484, !tbaa !2668
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11487, !tbaa !2668
  br label %for.cond2, !dbg !11488

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11489, !tbaa !2668
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11491
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11491

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11492, !tbaa !2668
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11495, !tbaa !2668
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11496, !ctir !842
  %11 = load i8*, i8** %data5, align 8, !dbg !11496, !tbaa !11094, !ctir !47
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11497, !tbaa !2668
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11492
  br i1 %call, label %if.end, label %if.then6, !dbg !11498

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11499, !tbaa !3308
  store i64 %13, i64* %retval, align 8, !dbg !11500
  br label %return, !dbg !11500

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11501, !tbaa !3308
  %inc = add i64 %14, 1, !dbg !11501
  store i64 %inc, i64* %counter, align 8, !dbg !11501, !tbaa !3308
  br label %for.inc, !dbg !11502

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11503, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11504, !ctir !842
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11504, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11505, !tbaa !2668
  br label %for.cond2, !dbg !11506, !llvm.loop !11507

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11509

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11510

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11511, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11511
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11511, !tbaa !2668
  br label %for.cond, !dbg !11512, !llvm.loop !11513

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11515, !tbaa !3308
  store i64 %18, i64* %retval, align 8, !dbg !11516
  br label %return, !dbg !11516

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11517
  ret i64 %19, !dbg !11517
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #10 !dbg !11518 !ctir !925 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !177
  %n_buckets.addr = alloca i64, align 8, !ctir !52
  %value = alloca i64, align 8, !ctir !52
  %ch = alloca i8, align 1, !ctir !565
  store i8* %string, i8** %string.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11519, metadata !DIExpression()), !dbg !11520
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11521, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11523, metadata !DIExpression()), !dbg !11524
  store i64 0, i64* %value, align 8, !dbg !11524, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11525, metadata !DIExpression()), !dbg !11526
  br label %for.cond, !dbg !11527

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11528, !tbaa !2668
  %1 = load i8, i8* %0, align 1, !dbg !11531, !tbaa !3315, !ctir !178
  store i8 %1, i8* %ch, align 1, !dbg !11532, !tbaa !3315
  %tobool = icmp ne i8 %1, 0, !dbg !11533
  br i1 %tobool, label %for.body, label %for.end, !dbg !11533

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11534, !tbaa !3308
  %mul = mul i64 %2, 31, !dbg !11535
  %3 = load i8, i8* %ch, align 1, !dbg !11536, !tbaa !3315
  %conv = zext i8 %3 to i64, !dbg !11536
  %add = add i64 %mul, %conv, !dbg !11537
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11538, !tbaa !3308
  %rem = urem i64 %add, %4, !dbg !11539
  store i64 %rem, i64* %value, align 8, !dbg !11540, !tbaa !3308
  br label %for.inc, !dbg !11541

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11542, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11542
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11542, !tbaa !2668
  br label %for.cond, !dbg !11543, !llvm.loop !11544

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11546, !tbaa !3308
  ret i64 %6, !dbg !11547
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11548 !ctir !927 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !929
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11549, metadata !DIExpression()), !dbg !11550
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11551, !tbaa !2668
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11552
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11552, !tbaa.struct !11553
  ret void, !dbg !11556
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11557 !ctir !930 {
entry:
  %retval = alloca %struct.hash_table*, align 8, !ctir !932
  %candidate.addr = alloca i64, align 8, !ctir !52
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !847
  %hasher.addr = alloca i64 (i8*, i64)*, align 8, !ctir !859
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8, !ctir !862
  %data_freer.addr = alloca void (i8*)*, align 8, !ctir !865
  %table = alloca %struct.hash_table*, align 8, !ctir !932
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11558, metadata !DIExpression()), !dbg !11559
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11560, metadata !DIExpression()), !dbg !11561
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11562, metadata !DIExpression()), !dbg !11563
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11564, metadata !DIExpression()), !dbg !11565
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11566, metadata !DIExpression()), !dbg !11567
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11568, metadata !DIExpression()), !dbg !11569
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11570, !tbaa !2668
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11572
  br i1 %cmp, label %if.then, label %if.end, !dbg !11573

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11574, !tbaa !2668
  br label %if.end, !dbg !11575

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11576, !tbaa !2668
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11578
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11579

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11580, !tbaa !2668
  br label %if.end3, !dbg !11581

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #9, !dbg !11582
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11582
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11583, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11584, !tbaa !2668
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11586
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11587

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11588
  br label %return, !dbg !11588

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11589, !tbaa !2668
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11589
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11591

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11592, !tbaa !2668
  br label %if.end8, !dbg !11593

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11594, !tbaa !2668
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11595, !tbaa !2668
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11596, !ctir !830
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11597, !tbaa !11598, !ctir !847
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11599, !tbaa !2668
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11601
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11602

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11603

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11605, !tbaa !3308
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11606, !tbaa !2668
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !11607
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11608, !tbaa !2668
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11609, !ctir !830
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11610, !tbaa !11053, !ctir !52
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11611, !tbaa !2668
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11613, !ctir !830
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11613, !tbaa !11053, !ctir !52
  %tobool15 = icmp ne i64 %12, 0, !dbg !11611
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11614

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11615

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11616, !tbaa !2668
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11617, !ctir !830
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11617, !tbaa !11053, !ctir !52
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #9, !dbg !11618
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11618
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11619, !tbaa !2668
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11620, !ctir !830
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11621, !tbaa !11080, !ctir !835
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11622, !tbaa !2668
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11624, !ctir !830
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11624, !tbaa !11080, !ctir !835
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11625
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11626

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11627

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11628, !tbaa !2668
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11629, !ctir !830
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11629, !tbaa !11080, !ctir !835
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11630, !tbaa !2668
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11631, !ctir !830
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11631, !tbaa !11053, !ctir !52
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11632
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11633, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11634, !ctir !830
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11635, !tbaa !11087, !ctir !841
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11636, !tbaa !2668
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11637, !ctir !830
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11638, !tbaa !11061, !ctir !52
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11639, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11640, !ctir !830
  store i64 0, i64* %n_entries, align 8, !dbg !11641, !tbaa !11068, !ctir !52
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11642, !tbaa !2668
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11643, !tbaa !2668
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11644, !ctir !830
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11645, !tbaa !11282, !ctir !859
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11646, !tbaa !2668
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11647, !tbaa !2668
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11648, !ctir !830
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11649, !tbaa !11256, !ctir !862
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11650, !tbaa !2668
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11651, !tbaa !2668
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11652, !ctir !830
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11653, !tbaa !11654, !ctir !865
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11655, !tbaa !2668
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11656, !ctir !830
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11657, !tbaa !11658, !ctir !835
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11659, !tbaa !2668
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11660
  br label %return, !dbg !11660

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11661), !dbg !11662
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11663, !tbaa !2668
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11663
  call void @free(i8* %35) #9, !dbg !11664
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11665
  br label %return, !dbg !11665

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11666
  ret %struct.hash_table* %36, !dbg !11666
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !11667 !ctir !615 {
entry:
  %data.addr = alloca i8*, align 8, !ctir !525
  %n.addr = alloca i64, align 8, !ctir !52
  %val = alloca i64, align 8, !ctir !52
  store i8* %data, i8** %data.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11668, metadata !DIExpression()), !dbg !11669
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11670, metadata !DIExpression()), !dbg !11671
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11672, metadata !DIExpression()), !dbg !11673
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11674, !tbaa !2668
  %1 = ptrtoint i8* %0 to i64, !dbg !11675
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11676
  store i64 %call, i64* %val, align 8, !dbg !11673, !tbaa !3308
  %2 = load i64, i64* %val, align 8, !dbg !11677, !tbaa !3308
  %3 = load i64, i64* %n.addr, align 8, !dbg !11678, !tbaa !3308
  %rem = urem i64 %2, %3, !dbg !11679
  ret i64 %rem, !dbg !11680
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !11681 !ctir !617 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !525
  %b.addr = alloca i8*, align 8, !ctir !525
  store i8* %a, i8** %a.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11682, metadata !DIExpression()), !dbg !11683
  store i8* %b, i8** %b.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11684, metadata !DIExpression()), !dbg !11685
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11686, !tbaa !2668
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11687, !tbaa !2668
  %cmp = icmp eq i8* %0, %1, !dbg !11688
  ret i1 %cmp, !dbg !11689
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !11690 !ctir !944 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !847
  %epsilon = alloca float, align 4, !ctir !853
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11691, metadata !DIExpression()), !dbg !11692
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11693, metadata !DIExpression()), !dbg !11694
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11695, !tbaa !2668
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11696, !ctir !830
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11696, !tbaa !11598, !ctir !847
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11694, !tbaa !2668
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11697, metadata !DIExpression()), !dbg !11698
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11699, !tbaa !2668
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11701
  br i1 %cmp, label %if.then, label %if.end, !dbg !11702

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11703
  br label %return, !dbg !11703

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11704, !tbaa !11554
  %3 = load float, float* %epsilon, align 4, !dbg !11705, !tbaa !11554
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11707, !tbaa !2668
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11708, !ctir !848
  %5 = load float, float* %growth_threshold, align 4, !dbg !11708, !tbaa !11709, !ctir !853
  %cmp2 = fcmp olt float %3, %5, !dbg !11711
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11712

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11713, !tbaa !2668
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11714, !ctir !848
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11714, !tbaa !11709, !ctir !853
  %8 = load float, float* %epsilon, align 4, !dbg !11715, !tbaa !11554
  %sub = fsub float 1.000000e+00, %8, !dbg !11716
  %cmp4 = fcmp olt float %7, %sub, !dbg !11717
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11718

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11719, !tbaa !11554
  %add = fadd float 1.000000e+00, %9, !dbg !11720
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11721, !tbaa !2668
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11722, !ctir !848
  %11 = load float, float* %growth_factor, align 4, !dbg !11722, !tbaa !11723, !ctir !853
  %cmp6 = fcmp olt float %add, %11, !dbg !11724
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11725

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11726, !tbaa !2668
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11727, !ctir !848
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11727, !tbaa !11728, !ctir !853
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11729
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11730

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11731, !tbaa !2668
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11732, !ctir !848
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11732, !tbaa !11728, !ctir !853
  %16 = load float, float* %epsilon, align 4, !dbg !11733, !tbaa !11554
  %add11 = fadd float %15, %16, !dbg !11734
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11735, !tbaa !2668
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11736, !ctir !848
  %18 = load float, float* %shrink_factor, align 4, !dbg !11736, !tbaa !11737, !ctir !853
  %cmp12 = fcmp olt float %add11, %18, !dbg !11738
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11739

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11740, !tbaa !2668
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11741, !ctir !848
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11741, !tbaa !11737, !ctir !853
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11742
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11743

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11744, !tbaa !2668
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11745, !ctir !848
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11745, !tbaa !11728, !ctir !853
  %23 = load float, float* %epsilon, align 4, !dbg !11746, !tbaa !11554
  %add18 = fadd float %22, %23, !dbg !11747
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11748, !tbaa !2668
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11749, !ctir !848
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11749, !tbaa !11709, !ctir !853
  %cmp20 = fcmp olt float %add18, %25, !dbg !11750
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11751

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11752
  br label %return, !dbg !11752

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11753, !tbaa !2668
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11754, !ctir !830
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11755, !tbaa !11598, !ctir !847
  store i1 false, i1* %retval, align 1, !dbg !11756
  br label %return, !dbg !11756

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11757
  ret i1 %27, !dbg !11757
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #10 !dbg !11758 !ctir !946 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %candidate.addr = alloca i64, align 8, !ctir !52
  %tuning.addr = alloca %struct.hash_tuning*, align 8, !ctir !847
  %new_candidate = alloca float, align 4, !ctir !853
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11759, metadata !DIExpression()), !dbg !11760
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11761, metadata !DIExpression()), !dbg !11762
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11763, !tbaa !2668
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11765, !ctir !848
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11765, !tbaa !11766
  %tobool = trunc i8 %1 to i1, !dbg !11765, !ctir !139
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11767

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11768, metadata !DIExpression()), !dbg !11770
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11771, !tbaa !3308
  %conv = uitofp i64 %2 to float, !dbg !11771
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11772, !tbaa !2668
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11773, !ctir !848
  %4 = load float, float* %growth_threshold, align 4, !dbg !11773, !tbaa !11709, !ctir !853
  %div = fdiv float %conv, %4, !dbg !11774
  store float %div, float* %new_candidate, align 4, !dbg !11770, !tbaa !11554
  %5 = load float, float* %new_candidate, align 4, !dbg !11775, !tbaa !11554
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11777
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11778

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11779
  br label %return, !dbg !11779

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11780, !tbaa !11554
  %conv3 = fptoui float %6 to i64, !dbg !11780
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11781, !tbaa !3308
  br label %if.end4, !dbg !11782

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11783, !tbaa !3308
  %call = call i64 @next_prime(i64 %7) #16, !dbg !11784
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11785, !tbaa !3308
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11786, !tbaa !3308
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11786
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11788

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11789
  br label %return, !dbg !11789

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11790, !tbaa !3308
  store i64 %9, i64* %retval, align 8, !dbg !11791
  br label %return, !dbg !11791

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11792
  ret i64 %10, !dbg !11792
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !11793 !ctir !948 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11794, metadata !DIExpression()), !dbg !11795
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11796, !tbaa !3308
  %cmp = icmp ult i64 %0, 10, !dbg !11798
  br i1 %cmp, label %if.then, label %if.end, !dbg !11799

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11800, !tbaa !3308
  br label %if.end, !dbg !11801

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11802, !tbaa !3308
  %or = or i64 %1, 1, !dbg !11802
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11802, !tbaa !3308
  br label %while.cond, !dbg !11803

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11804, !tbaa !3308
  %cmp1 = icmp ne i64 -1, %2, !dbg !11805
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11806

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11807, !tbaa !3308
  %call = call zeroext i1 @is_prime(i64 %3) #16, !dbg !11808
  %lnot = xor i1 %call, true, !dbg !11809
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11810
  br i1 %4, label %while.body, label %while.end, !dbg !11803

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11811, !tbaa !3308
  %add = add i64 %5, 2, !dbg !11811
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11811, !tbaa !3308
  br label %while.cond, !dbg !11803, !llvm.loop !11812

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11814, !tbaa !3308
  ret i64 %6, !dbg !11815
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !11816 !ctir !950 {
entry:
  %candidate.addr = alloca i64, align 8, !ctir !52
  %divisor = alloca i64, align 8, !ctir !52
  %square = alloca i64, align 8, !ctir !52
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11817, metadata !DIExpression()), !dbg !11818
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11819, metadata !DIExpression()), !dbg !11820
  store i64 3, i64* %divisor, align 8, !dbg !11820, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11821, metadata !DIExpression()), !dbg !11822
  %0 = load i64, i64* %divisor, align 8, !dbg !11823, !tbaa !3308
  %1 = load i64, i64* %divisor, align 8, !dbg !11824, !tbaa !3308
  %mul = mul i64 %0, %1, !dbg !11825
  store i64 %mul, i64* %square, align 8, !dbg !11822, !tbaa !3308
  br label %while.cond, !dbg !11826

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11827, !tbaa !3308
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11828, !tbaa !3308
  %cmp = icmp ult i64 %2, %3, !dbg !11829
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11830

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11831, !tbaa !3308
  %5 = load i64, i64* %divisor, align 8, !dbg !11832, !tbaa !3308
  %rem = urem i64 %4, %5, !dbg !11833
  %tobool = icmp ne i64 %rem, 0, !dbg !11830
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11834
  br i1 %6, label %while.body, label %while.end, !dbg !11826

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11835, !tbaa !3308
  %inc = add i64 %7, 1, !dbg !11835
  store i64 %inc, i64* %divisor, align 8, !dbg !11835, !tbaa !3308
  %8 = load i64, i64* %divisor, align 8, !dbg !11837, !tbaa !3308
  %mul1 = mul i64 4, %8, !dbg !11838
  %9 = load i64, i64* %square, align 8, !dbg !11839, !tbaa !3308
  %add = add i64 %9, %mul1, !dbg !11839
  store i64 %add, i64* %square, align 8, !dbg !11839, !tbaa !3308
  %10 = load i64, i64* %divisor, align 8, !dbg !11840, !tbaa !3308
  %inc2 = add i64 %10, 1, !dbg !11840
  store i64 %inc2, i64* %divisor, align 8, !dbg !11840, !tbaa !3308
  br label %while.cond, !dbg !11826, !llvm.loop !11841

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !11843, !tbaa !3308
  %12 = load i64, i64* %divisor, align 8, !dbg !11844, !tbaa !3308
  %rem3 = urem i64 %11, %12, !dbg !11845
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !11843
  %13 = zext i1 %tobool4 to i64, !dbg !11843
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !11843
  %tobool5 = icmp ne i32 %cond, 0, !dbg !11846
  ret i1 %tobool5, !dbg !11847
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !11848 !ctir !933 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !835
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !835
  %next = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11849, metadata !DIExpression()), !dbg !11850
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11851, metadata !DIExpression()), !dbg !11852
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11853, !tbaa !2668
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11855, !ctir !830
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11855, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11856, !tbaa !2668
  br label %for.cond, !dbg !11857

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11858, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11860, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11861, !ctir !830
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11861, !tbaa !11087, !ctir !841
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11862
  br i1 %cmp, label %for.body, label %for.end24, !dbg !11863

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11864, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11867, !ctir !836
  %6 = load i8*, i8** %data, align 8, !dbg !11867, !tbaa !11094, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !11864
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11868

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11869, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11872, metadata !DIExpression()), !dbg !11873
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11874, !tbaa !2668
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11876, !ctir !836
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11876, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11877, !tbaa !2668
  br label %for.cond3, !dbg !11878

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11879, !tbaa !2668
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !11881
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !11881

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11882, !tbaa !2668
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !11885, !ctir !830
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11885, !tbaa !11654, !ctir !865
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !11882
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11886

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11887, !tbaa !2668
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !11888, !ctir !830
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11888, !tbaa !11654, !ctir !865
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11889, !tbaa !2668
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11890, !ctir !836
  %15 = load i8*, i8** %data9, align 8, !dbg !11890, !tbaa !11094, !ctir !47
  call void %13(i8* %15), !dbg !11887
  br label %if.end, !dbg !11887

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11891, !tbaa !2668
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11892, !ctir !836
  store i8* null, i8** %data10, align 8, !dbg !11893, !tbaa !11094, !ctir !47
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11894, !tbaa !2668
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11895, !ctir !836
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !11895, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !11896, !tbaa !2668
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11897, !tbaa !2668
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !11898, !ctir !830
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11898, !tbaa !11658, !ctir !835
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11899, !tbaa !2668
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !11900, !ctir !836
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !11901, !tbaa !11106, !ctir !835
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11902, !tbaa !2668
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11903, !tbaa !2668
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !11904, !ctir !830
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !11905, !tbaa !11658, !ctir !835
  br label %for.inc, !dbg !11906

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11907, !tbaa !2668
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !11908, !tbaa !2668
  br label %for.cond3, !dbg !11909, !llvm.loop !11910

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11912, !tbaa !2668
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !11914, !ctir !830
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !11914, !tbaa !11654, !ctir !865
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !11912
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !11915

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11916, !tbaa !2668
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !11917, !ctir !830
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !11917, !tbaa !11654, !ctir !865
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11918, !tbaa !2668
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !11919, !ctir !836
  %30 = load i8*, i8** %data18, align 8, !dbg !11919, !tbaa !11094, !ctir !47
  call void %28(i8* %30), !dbg !11916
  br label %if.end19, !dbg !11916

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11920, !tbaa !2668
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !11921, !ctir !836
  store i8* null, i8** %data20, align 8, !dbg !11922, !tbaa !11094, !ctir !47
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11923, !tbaa !2668
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11924, !ctir !836
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !11925, !tbaa !11106, !ctir !835
  br label %if.end22, !dbg !11926

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !11927

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11928, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11928
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11928, !tbaa !2668
  br label %for.cond, !dbg !11929, !llvm.loop !11930

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11932, !tbaa !2668
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !11933, !ctir !830
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11934, !tbaa !11061, !ctir !52
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11935, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !11936, !ctir !830
  store i64 0, i64* %n_entries, align 8, !dbg !11937, !tbaa !11068, !ctir !52
  ret void, !dbg !11938
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !11939 !ctir !933 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !835
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !835
  %next = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11942, metadata !DIExpression()), !dbg !11943
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11944, metadata !DIExpression()), !dbg !11945
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11946, metadata !DIExpression()), !dbg !11947
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11948, !tbaa !2668
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !11950, !ctir !830
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11950, !tbaa !11654, !ctir !865
  %tobool = icmp ne void (i8*)* %1, null, !dbg !11948
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !11951

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11952, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !11953, !ctir !830
  %3 = load i64, i64* %n_entries, align 8, !dbg !11953, !tbaa !11068, !ctir !52
  %tobool1 = icmp ne i64 %3, 0, !dbg !11952
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !11954

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11955, !tbaa !2668
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !11958, !ctir !830
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !11958, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !11959, !tbaa !2668
  br label %for.cond, !dbg !11960

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11961, !tbaa !2668
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11963, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !11964, !ctir !830
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11964, !tbaa !11087, !ctir !841
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !11965
  br i1 %cmp, label %for.body, label %for.end12, !dbg !11966

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11967, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11970, !ctir !836
  %10 = load i8*, i8** %data, align 8, !dbg !11970, !tbaa !11094, !ctir !47
  %tobool3 = icmp ne i8* %10, null, !dbg !11967
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !11971

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11972, !tbaa !2668
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11975, !tbaa !2668
  br label %for.cond5, !dbg !11976

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11977, !tbaa !2668
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !11979
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !11979

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11980, !tbaa !2668
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !11981, !ctir !830
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11981, !tbaa !11654, !ctir !865
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11982, !tbaa !2668
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !11983, !ctir !836
  %16 = load i8*, i8** %data9, align 8, !dbg !11983, !tbaa !11094, !ctir !47
  call void %14(i8* %16), !dbg !11980
  br label %for.inc, !dbg !11980

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11984, !tbaa !2668
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11985, !ctir !836
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !11985, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !11986, !tbaa !2668
  br label %for.cond5, !dbg !11987, !llvm.loop !11988

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !11990

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !11991

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11992, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !11992
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11992, !tbaa !2668
  br label %for.cond, !dbg !11993, !llvm.loop !11994

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !11996

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11997, !tbaa !2668
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !11999, !ctir !830
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !11999, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12000, !tbaa !2668
  br label %for.cond15, !dbg !12001

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12002, !tbaa !2668
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12004, !tbaa !2668
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12005, !ctir !830
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12005, !tbaa !11087, !ctir !841
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12006
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12007

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12008, !tbaa !2668
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12011, !ctir !836
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12011, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12012, !tbaa !2668
  br label %for.cond20, !dbg !12013

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12014, !tbaa !2668
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12016
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12016

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12017, !tbaa !2668
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12019, !ctir !836
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12019, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12020, !tbaa !2668
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12021, !tbaa !2668
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12021
  call void @free(i8* %31) #9, !dbg !12022
  br label %for.inc24, !dbg !12023

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12024, !tbaa !2668
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12025, !tbaa !2668
  br label %for.cond20, !dbg !12026, !llvm.loop !12027

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12029

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12030, !tbaa !2668
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12030
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12030, !tbaa !2668
  br label %for.cond15, !dbg !12031, !llvm.loop !12032

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12034, !tbaa !2668
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12036, !ctir !830
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12036, !tbaa !11658, !ctir !835
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12037, !tbaa !2668
  br label %for.cond29, !dbg !12038

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12039, !tbaa !2668
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12041
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12041

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12042, !tbaa !2668
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12044, !ctir !836
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12044, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12045, !tbaa !2668
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12046, !tbaa !2668
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12046
  call void @free(i8* %40) #9, !dbg !12047
  br label %for.inc33, !dbg !12048

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12049, !tbaa !2668
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12050, !tbaa !2668
  br label %for.cond29, !dbg !12051, !llvm.loop !12052

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12054, !tbaa !2668
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12055, !ctir !830
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12055, !tbaa !11080, !ctir !835
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12054
  call void @free(i8* %44) #9, !dbg !12056
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12057, !tbaa !2668
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12057
  call void @free(i8* %46) #9, !dbg !12058
  ret void, !dbg !12059
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12060 !ctir !935 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %candidate.addr = alloca i64, align 8, !ctir !52
  %storage = alloca %struct.hash_table, align 8, !ctir !830
  %new_table = alloca %struct.hash_table*, align 8, !ctir !932
  %new_size = alloca i64, align 8, !ctir !52
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12061, metadata !DIExpression()), !dbg !12062
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12063, metadata !DIExpression()), !dbg !12064
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12065, metadata !DIExpression()), !dbg !12066
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12067, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12069, metadata !DIExpression()), !dbg !12070
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12071, !tbaa !3308
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12072, !tbaa !2668
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12073, !ctir !830
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12073, !tbaa !11598, !ctir !847
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12074
  store i64 %call, i64* %new_size, align 8, !dbg !12070, !tbaa !3308
  %3 = load i64, i64* %new_size, align 8, !dbg !12075, !tbaa !3308
  %tobool = icmp ne i64 %3, 0, !dbg !12075
  br i1 %tobool, label %if.end, label %if.then, !dbg !12077

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12078
  br label %return, !dbg !12078

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12079, !tbaa !3308
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12081, !tbaa !2668
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12082, !ctir !830
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12082, !tbaa !11053, !ctir !52
  %cmp = icmp eq i64 %4, %6, !dbg !12083
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12084

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12085
  br label %return, !dbg !12085

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12086, !tbaa !2668
  %7 = load i64, i64* %new_size, align 8, !dbg !12087, !tbaa !3308
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #9, !dbg !12088
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12088
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12089, !tbaa !2668
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12090, !ctir !830
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12091, !tbaa !11080, !ctir !835
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12092, !tbaa !2668
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12094, !ctir !830
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12094, !tbaa !11080, !ctir !835
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12095
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12096

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12097
  br label %return, !dbg !12097

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12098, !tbaa !3308
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12099, !tbaa !2668
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12100, !ctir !830
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12101, !tbaa !11053, !ctir !52
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12102, !tbaa !2668
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12103, !ctir !830
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12103, !tbaa !11080, !ctir !835
  %16 = load i64, i64* %new_size, align 8, !dbg !12104, !tbaa !3308
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12105
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12106, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12107, !ctir !830
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12108, !tbaa !11087, !ctir !841
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12109, !tbaa !2668
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12110, !ctir !830
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12111, !tbaa !11061, !ctir !52
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12112, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12113, !ctir !830
  store i64 0, i64* %n_entries, align 8, !dbg !12114, !tbaa !11068, !ctir !52
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12115, !tbaa !2668
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12116, !ctir !830
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12116, !tbaa !11598, !ctir !847
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12117, !tbaa !2668
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12118, !ctir !830
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12119, !tbaa !11598, !ctir !847
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12120, !tbaa !2668
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12121, !ctir !830
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12121, !tbaa !11282, !ctir !859
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12122, !tbaa !2668
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12123, !ctir !830
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12124, !tbaa !11282, !ctir !859
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12125, !tbaa !2668
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12126, !ctir !830
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12126, !tbaa !11256, !ctir !862
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12127, !tbaa !2668
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12128, !ctir !830
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12129, !tbaa !11256, !ctir !862
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12130, !tbaa !2668
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12131, !ctir !830
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12131, !tbaa !11654, !ctir !865
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12132, !tbaa !2668
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12133, !ctir !830
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12134, !tbaa !11654, !ctir !865
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12135, !tbaa !2668
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12136, !ctir !830
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12136, !tbaa !11658, !ctir !835
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12137, !tbaa !2668
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12138, !ctir !830
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12139, !tbaa !11658, !ctir !835
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12140, !tbaa !2668
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12142, !tbaa !2668
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12143
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12144

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12145, !tbaa !2668
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12147, !ctir !830
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12147, !tbaa !11080, !ctir !835
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12145
  call void @free(i8* %39) #9, !dbg !12148
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12149, !tbaa !2668
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12150, !ctir !830
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12150, !tbaa !11080, !ctir !835
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12151, !tbaa !2668
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12152, !ctir !830
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12153, !tbaa !11080, !ctir !835
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12154, !tbaa !2668
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12155, !ctir !830
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12155, !tbaa !11087, !ctir !841
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12156, !tbaa !2668
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12157, !ctir !830
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12158, !tbaa !11087, !ctir !841
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12159, !tbaa !2668
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12160, !ctir !830
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12160, !tbaa !11053, !ctir !52
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12161, !tbaa !2668
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12162, !ctir !830
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12163, !tbaa !11053, !ctir !52
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12164, !tbaa !2668
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12165, !ctir !830
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12165, !tbaa !11061, !ctir !52
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12166, !tbaa !2668
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12167, !ctir !830
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12168, !tbaa !11061, !ctir !52
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12169, !tbaa !2668
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12170, !ctir !830
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12170, !tbaa !11658, !ctir !835
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12171, !tbaa !2668
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12172, !ctir !830
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12173, !tbaa !11658, !ctir !835
  store i1 true, i1* %retval, align 1, !dbg !12174
  br label %return, !dbg !12174

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12175, !tbaa !2668
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12176, !ctir !830
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12176, !tbaa !11658, !ctir !835
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12177, !tbaa !2668
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12178, !ctir !830
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12179, !tbaa !11658, !ctir !835
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12180, !tbaa !2668
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12182, !tbaa !2668
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12183
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12184

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12185, !tbaa !2668
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12186, !tbaa !2668
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12187
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12188

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12189
  unreachable, !dbg !12189

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12190, !tbaa !2668
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12191, !ctir !830
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12191, !tbaa !11080, !ctir !835
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12190
  call void @free(i8* %64) #9, !dbg !12192
  store i1 false, i1* %retval, align 1, !dbg !12193
  br label %return, !dbg !12193

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12194
  ret i1 %65, !dbg !12194
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12195 !ctir !952 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %dst.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %src.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %safe.addr = alloca i8, align 1, !ctir !139
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !835
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !835
  %next = alloca %struct.hash_entry*, align 8, !ctir !835
  %data2 = alloca i8*, align 8, !ctir !47
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !835
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12196, metadata !DIExpression()), !dbg !12197
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12198, metadata !DIExpression()), !dbg !12199
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12200, metadata !DIExpression()), !dbg !12201
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12202, metadata !DIExpression()), !dbg !12203
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12204, metadata !DIExpression()), !dbg !12205
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12206, metadata !DIExpression()), !dbg !12207
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12208, !tbaa !2668
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12210, !ctir !830
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12210, !tbaa !11080, !ctir !835
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12211, !tbaa !2668
  br label %for.cond, !dbg !12212

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12213, !tbaa !2668
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12215, !tbaa !2668
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12216, !ctir !830
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12216, !tbaa !11087, !ctir !841
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12217
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12218

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12219, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12221, !ctir !836
  %6 = load i8*, i8** %data, align 8, !dbg !12221, !tbaa !11094, !ctir !47
  %tobool = icmp ne i8* %6, null, !dbg !12219
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12222

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12223, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12226, metadata !DIExpression()), !dbg !12227
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12228, !tbaa !2668
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12230, !ctir !836
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12230, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12231, !tbaa !2668
  br label %for.cond4, !dbg !12232

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12233, !tbaa !2668
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12235
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12235

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12236, !tbaa !2668
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12238, !ctir !836
  %11 = load i8*, i8** %data7, align 8, !dbg !12238, !tbaa !11094, !ctir !47
  store i8* %11, i8** %data2, align 8, !dbg !12239, !tbaa !2668
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12240, !tbaa !2668
  %13 = load i8*, i8** %data2, align 8, !dbg !12241, !tbaa !2668
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12242
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12243, !tbaa !2668
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12244, !tbaa !2668
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12245, !ctir !836
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12245, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12246, !tbaa !2668
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12247, !tbaa !2668
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12249, !ctir !836
  %17 = load i8*, i8** %data9, align 8, !dbg !12249, !tbaa !11094, !ctir !47
  %tobool10 = icmp ne i8* %17, null, !dbg !12247
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12250

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12251, !tbaa !2668
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12253, !ctir !836
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12253, !tbaa !11106, !ctir !835
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12254, !tbaa !2668
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12255, !ctir !836
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12256, !tbaa !11106, !ctir !835
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12257, !tbaa !2668
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12258, !tbaa !2668
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12259, !ctir !836
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12260, !tbaa !11106, !ctir !835
  br label %if.end, !dbg !12261

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12262, !tbaa !2668
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12264, !tbaa !2668
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12265, !ctir !836
  store i8* %23, i8** %data15, align 8, !dbg !12266, !tbaa !11094, !ctir !47
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12267, !tbaa !2668
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12268, !ctir !830
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12269, !tbaa !11061, !ctir !52
  %inc = add i64 %26, 1, !dbg !12269
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12269, !tbaa !11061, !ctir !52
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12270, !tbaa !2668
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12271, !tbaa !2668
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12272
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12273

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12274, !tbaa !2668
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12275, !tbaa !2668
  br label %for.cond4, !dbg !12276, !llvm.loop !12277

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12279, !tbaa !2668
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12280, !ctir !836
  %31 = load i8*, i8** %data16, align 8, !dbg !12280, !tbaa !11094, !ctir !47
  store i8* %31, i8** %data2, align 8, !dbg !12281, !tbaa !2668
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12282, !tbaa !2668
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12283, !ctir !836
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12284, !tbaa !11106, !ctir !835
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12285, !tbaa !2762
  %tobool18 = trunc i8 %33 to i1, !dbg !12285
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12287

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12288

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12289, !tbaa !2668
  %35 = load i8*, i8** %data2, align 8, !dbg !12290, !tbaa !2668
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12291
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12292, !tbaa !2668
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12293, !tbaa !2668
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12295, !ctir !836
  %37 = load i8*, i8** %data22, align 8, !dbg !12295, !tbaa !11094, !ctir !47
  %tobool23 = icmp ne i8* %37, null, !dbg !12293
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12296

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12297, metadata !DIExpression()), !dbg !12299
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12300, !tbaa !2668
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12301
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12299, !tbaa !2668
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12302, !tbaa !2668
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12304
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12305

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12306
  br label %return, !dbg !12306

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12307, !tbaa !2668
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12308, !tbaa !2668
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12309, !ctir !836
  store i8* %40, i8** %data29, align 8, !dbg !12310, !tbaa !11094, !ctir !47
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12311, !tbaa !2668
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12312, !ctir !836
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12312, !tbaa !11106, !ctir !835
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12313, !tbaa !2668
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12314, !ctir !836
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12315, !tbaa !11106, !ctir !835
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12316, !tbaa !2668
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12317, !tbaa !2668
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12318, !ctir !836
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12319, !tbaa !11106, !ctir !835
  br label %if.end37, !dbg !12320

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12321, !tbaa !2668
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12323, !tbaa !2668
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12324, !ctir !836
  store i8* %47, i8** %data34, align 8, !dbg !12325, !tbaa !11094, !ctir !47
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12326, !tbaa !2668
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12327, !ctir !830
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12328, !tbaa !11061, !ctir !52
  %inc36 = add i64 %50, 1, !dbg !12328
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12328, !tbaa !11061, !ctir !52
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12329, !tbaa !2668
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12330, !ctir !836
  store i8* null, i8** %data38, align 8, !dbg !12331, !tbaa !11094, !ctir !47
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12332, !tbaa !2668
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12333, !ctir !830
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12334, !tbaa !11061, !ctir !52
  %dec = add i64 %53, -1, !dbg !12334
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12334, !tbaa !11061, !ctir !52
  br label %if.end40, !dbg !12335

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12221

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12336, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12336
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12336, !tbaa !2668
  br label %for.cond, !dbg !12337, !llvm.loop !12338

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12340
  br label %return, !dbg !12340

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12341
  ret i1 %55, !dbg !12341
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12342 !ctir !954 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %entry.addr = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12343, metadata !DIExpression()), !dbg !12344
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12345, metadata !DIExpression()), !dbg !12346
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12347, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12348, !ctir !836
  store i8* null, i8** %data, align 8, !dbg !12349, !tbaa !11094, !ctir !47
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12350, !tbaa !2668
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12351, !ctir !830
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12351, !tbaa !11658, !ctir !835
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12352, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12353, !ctir !836
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12354, !tbaa !11106, !ctir !835
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12355, !tbaa !2668
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12356, !tbaa !2668
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12357, !ctir !830
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12358, !tbaa !11658, !ctir !835
  ret void, !dbg !12359
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12360 !ctir !959 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %new = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12361, metadata !DIExpression()), !dbg !12362
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12363, metadata !DIExpression()), !dbg !12364
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12365, !tbaa !2668
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12367, !ctir !830
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12367, !tbaa !11658, !ctir !835
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12365
  br i1 %tobool, label %if.then, label %if.else, !dbg !12368

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12369, !tbaa !2668
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12371, !ctir !830
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12371, !tbaa !11658, !ctir !835
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12372, !tbaa !2668
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12373, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12374, !ctir !836
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12374, !tbaa !11106, !ctir !835
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12375, !tbaa !2668
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12376, !ctir !830
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12377, !tbaa !11658, !ctir !835
  br label %if.end, !dbg !12378

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #9, !dbg !12379
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12379
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12381, !tbaa !2668
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12382, !tbaa !2668
  ret %struct.hash_entry* %8, !dbg !12383
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12384 !ctir !937 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %entry.addr = alloca i8*, align 8, !ctir !525
  %matched_ent.addr = alloca i8**, align 8, !ctir !939
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !835
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !847
  %candidate = alloca float, align 4, !ctir !853
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12385, metadata !DIExpression()), !dbg !12386
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12387, metadata !DIExpression()), !dbg !12388
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12391, metadata !DIExpression()), !dbg !12392
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12393, metadata !DIExpression()), !dbg !12394
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12395, !tbaa !2668
  %tobool = icmp ne i8* %0, null, !dbg !12395
  br i1 %tobool, label %if.end, label %if.then, !dbg !12397

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12398
  unreachable, !dbg !12398

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12399, !tbaa !2668
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12401, !tbaa !2668
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12402
  store i8* %call, i8** %data, align 8, !dbg !12403, !tbaa !2668
  %cmp = icmp ne i8* %call, null, !dbg !12404
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12405

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12406, !tbaa !2668
  %tobool3 = icmp ne i8** %3, null, !dbg !12406
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12409

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12410, !tbaa !2668
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12411, !tbaa !2668
  store i8* %4, i8** %5, align 8, !dbg !12412, !tbaa !2668, !ctir !525
  br label %if.end5, !dbg !12413

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12414
  br label %return, !dbg !12414

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12415, !tbaa !2668
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12417, !ctir !830
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12417, !tbaa !11061, !ctir !52
  %conv = uitofp i64 %7 to float, !dbg !12415
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12418, !tbaa !2668
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12419, !ctir !830
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12419, !tbaa !11598, !ctir !847
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12420, !ctir !848
  %10 = load float, float* %growth_threshold, align 4, !dbg !12420, !tbaa !11709, !ctir !853
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12421, !tbaa !2668
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12422, !ctir !830
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12422, !tbaa !11053, !ctir !52
  %conv7 = uitofp i64 %12 to float, !dbg !12421
  %mul = fmul float %10, %conv7, !dbg !12423
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12424
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12425

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12426, !tbaa !2668
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12428
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12429, !tbaa !2668
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12431, !ctir !830
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12431, !tbaa !11061, !ctir !52
  %conv13 = uitofp i64 %15 to float, !dbg !12429
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12432, !tbaa !2668
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12433, !ctir !830
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12433, !tbaa !11598, !ctir !847
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12434, !ctir !848
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12434, !tbaa !11709, !ctir !853
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12435, !tbaa !2668
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12436, !ctir !830
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12436, !tbaa !11053, !ctir !52
  %conv17 = uitofp i64 %20 to float, !dbg !12435
  %mul18 = fmul float %18, %conv17, !dbg !12437
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12438
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12439

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12440, metadata !DIExpression()), !dbg !12442
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12443, !tbaa !2668
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12444, !ctir !830
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12444, !tbaa !11598, !ctir !847
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12442, !tbaa !2668
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12445, metadata !DIExpression()), !dbg !12446
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12447, !tbaa !2668
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12448, !ctir !848
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12448, !tbaa !11766
  %tobool24 = trunc i8 %24 to i1, !dbg !12448, !ctir !139
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12447

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12449, !tbaa !2668
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12450, !ctir !830
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12450, !tbaa !11053, !ctir !52
  %conv27 = uitofp i64 %26 to float, !dbg !12449
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12451, !tbaa !2668
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12452, !ctir !848
  %28 = load float, float* %growth_factor, align 4, !dbg !12452, !tbaa !11723, !ctir !853
  %mul28 = fmul float %conv27, %28, !dbg !12453
  br label %cond.end, !dbg !12447

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12454, !tbaa !2668
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12455, !ctir !830
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12455, !tbaa !11053, !ctir !52
  %conv30 = uitofp i64 %30 to float, !dbg !12454
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12456, !tbaa !2668
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12457, !ctir !848
  %32 = load float, float* %growth_factor31, align 4, !dbg !12457, !tbaa !11723, !ctir !853
  %mul32 = fmul float %conv30, %32, !dbg !12458
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12459, !tbaa !2668
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12460, !ctir !848
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12460, !tbaa !11709, !ctir !853
  %mul34 = fmul float %mul32, %34, !dbg !12461
  br label %cond.end, !dbg !12447

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12447
  store float %cond, float* %candidate, align 4, !dbg !12446, !tbaa !11554
  %35 = load float, float* %candidate, align 4, !dbg !12462, !tbaa !11554
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12464
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12465

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12466
  br label %return, !dbg !12466

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12467, !tbaa !2668
  %37 = load float, float* %candidate, align 4, !dbg !12469, !tbaa !11554
  %conv39 = fptoui float %37 to i64, !dbg !12469
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12470
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12471

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12472
  br label %return, !dbg !12472

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12473, !tbaa !2668
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12475, !tbaa !2668
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12476
  %cmp44 = icmp ne i8* %call43, null, !dbg !12477
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12478

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12479
  unreachable, !dbg !12479

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12480

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12481

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12482, !tbaa !2668
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12484, !ctir !836
  %41 = load i8*, i8** %data50, align 8, !dbg !12484, !tbaa !11094, !ctir !47
  %tobool51 = icmp ne i8* %41, null, !dbg !12482
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12485

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12486, metadata !DIExpression()), !dbg !12488
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12489, !tbaa !2668
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12490
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12488, !tbaa !2668
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12491, !tbaa !2668
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12493
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12494

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12495
  br label %return, !dbg !12495

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12496, !tbaa !2668
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12497, !tbaa !2668
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12498, !ctir !836
  store i8* %44, i8** %data58, align 8, !dbg !12499, !tbaa !11094, !ctir !47
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12500, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12501, !ctir !836
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12501, !tbaa !11106, !ctir !835
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12502, !tbaa !2668
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12503, !ctir !836
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12504, !tbaa !11106, !ctir !835
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12505, !tbaa !2668
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12506, !tbaa !2668
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12507, !ctir !836
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12508, !tbaa !11106, !ctir !835
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12509, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12510, !ctir !830
  %52 = load i64, i64* %n_entries, align 8, !dbg !12511, !tbaa !11068, !ctir !52
  %inc = add i64 %52, 1, !dbg !12511
  store i64 %inc, i64* %n_entries, align 8, !dbg !12511, !tbaa !11068, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12512
  br label %return, !dbg !12512

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12513, !tbaa !2668
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12514, !tbaa !2668
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12515, !ctir !836
  store i8* %53, i8** %data62, align 8, !dbg !12516, !tbaa !11094, !ctir !47
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12517, !tbaa !2668
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12518, !ctir !830
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12519, !tbaa !11068, !ctir !52
  %inc64 = add i64 %56, 1, !dbg !12519
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12519, !tbaa !11068, !ctir !52
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12520, !tbaa !2668
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12521, !ctir !830
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12522, !tbaa !11061, !ctir !52
  %inc66 = add i64 %58, 1, !dbg !12522
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12522, !tbaa !11061, !ctir !52
  store i32 1, i32* %retval, align 4, !dbg !12523
  br label %return, !dbg !12523

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12524
  ret i32 %59, !dbg !12524
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12525 !ctir !956 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %entry.addr = alloca i8*, align 8, !ctir !525
  %bucket_head.addr = alloca %struct.hash_entry**, align 8, !ctir !958
  %delete.addr = alloca i8, align 1, !ctir !139
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !835
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !835
  %data7 = alloca i8*, align 8, !ctir !47
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !835
  %data29 = alloca i8*, align 8, !ctir !47
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12526, metadata !DIExpression()), !dbg !12527
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12528, metadata !DIExpression()), !dbg !12529
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12530, metadata !DIExpression()), !dbg !12531
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12532, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12534, metadata !DIExpression()), !dbg !12535
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12536, !tbaa !2668
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12537, !tbaa !2668
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12538
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12535, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12539, metadata !DIExpression()), !dbg !12540
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12541, !tbaa !2668
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12542, !tbaa !2668
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12543, !tbaa !2668, !ctir !835
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12544, !tbaa !2668
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12546, !ctir !836
  %5 = load i8*, i8** %data, align 8, !dbg !12546, !tbaa !11094, !ctir !47
  %cmp = icmp eq i8* %5, null, !dbg !12547
  br i1 %cmp, label %if.then, label %if.end, !dbg !12548

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12549
  br label %return, !dbg !12549

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12550, !tbaa !2668
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12552, !tbaa !2668
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12553, !ctir !836
  %8 = load i8*, i8** %data2, align 8, !dbg !12553, !tbaa !11094, !ctir !47
  %cmp3 = icmp eq i8* %6, %8, !dbg !12554
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12555

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12556, !tbaa !2668
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12557, !ctir !830
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12557, !tbaa !11256, !ctir !862
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12558, !tbaa !2668
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12559, !tbaa !2668
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12560, !ctir !836
  %13 = load i8*, i8** %data4, align 8, !dbg !12560, !tbaa !11094, !ctir !47
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12556
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12561

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12562, metadata !DIExpression()), !dbg !12564
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12565, !tbaa !2668
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12566, !ctir !836
  %15 = load i8*, i8** %data8, align 8, !dbg !12566, !tbaa !11094, !ctir !47
  store i8* %15, i8** %data7, align 8, !dbg !12564, !tbaa !2668
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12567, !tbaa !2762
  %tobool = trunc i8 %16 to i1, !dbg !12567
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12569

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12570, !tbaa !2668
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12573, !ctir !836
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12573, !tbaa !11106, !ctir !835
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12570
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12574

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12575, metadata !DIExpression()), !dbg !12577
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12578, !tbaa !2668
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12579, !ctir !836
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12579, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12577, !tbaa !2668
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12580, !tbaa !2668
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12581, !tbaa !2668
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12582
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12582, !tbaa.struct !12583
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12584, !tbaa !2668
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12585, !tbaa !2668
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12586
  br label %if.end15, !dbg !12587

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12588, !tbaa !2668
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12590, !ctir !836
  store i8* null, i8** %data14, align 8, !dbg !12591, !tbaa !11094, !ctir !47
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12592

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12593, !tbaa !2668
  store i8* %28, i8** %retval, align 8, !dbg !12594
  br label %return, !dbg !12594

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12595, !tbaa !2668
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12597, !tbaa !2668
  br label %for.cond, !dbg !12598

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12599, !tbaa !2668
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12601, !ctir !836
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12601, !tbaa !11106, !ctir !835
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12602
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12602

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12603, !tbaa !2668
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12606, !tbaa !2668
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12607, !ctir !836
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12607, !tbaa !11106, !ctir !835
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12608, !ctir !836
  %35 = load i8*, i8** %data21, align 8, !dbg !12608, !tbaa !11094, !ctir !47
  %cmp22 = icmp eq i8* %32, %35, !dbg !12609
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12610

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12611, !tbaa !2668
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12612, !ctir !830
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12612, !tbaa !11256, !ctir !862
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12613, !tbaa !2668
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12614, !tbaa !2668
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12615, !ctir !836
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12615, !tbaa !11106, !ctir !835
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12616, !ctir !836
  %41 = load i8*, i8** %data26, align 8, !dbg !12616, !tbaa !11094, !ctir !47
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12611
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12617

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12618, metadata !DIExpression()), !dbg !12620
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12621, !tbaa !2668
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12622, !ctir !836
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12622, !tbaa !11106, !ctir !835
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12623, !ctir !836
  %44 = load i8*, i8** %data31, align 8, !dbg !12623, !tbaa !11094, !ctir !47
  store i8* %44, i8** %data29, align 8, !dbg !12620, !tbaa !2668
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12624, !tbaa !2762
  %tobool32 = trunc i8 %45 to i1, !dbg !12624
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12626

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12627, metadata !DIExpression()), !dbg !12629
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12630, !tbaa !2668
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12631, !ctir !836
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12631, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12629, !tbaa !2668
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12632, !tbaa !2668
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12633, !ctir !836
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12633, !tbaa !11106, !ctir !835
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12634, !tbaa !2668
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12635, !ctir !836
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12636, !tbaa !11106, !ctir !835
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12637, !tbaa !2668
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12638, !tbaa !2668
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12639
  br label %if.end38, !dbg !12640

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12641, !tbaa !2668
  store i8* %53, i8** %retval, align 8, !dbg !12642
  br label %return, !dbg !12642

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12643

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12644, !tbaa !2668
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12645, !ctir !836
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12645, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12646, !tbaa !2668
  br label %for.cond, !dbg !12647, !llvm.loop !12648

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12650
  br label %return, !dbg !12650

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12651
  ret i8* %56, !dbg !12651
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12652 !ctir !940 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %entry.addr = alloca i8*, align 8, !ctir !525
  %matched_ent = alloca i8*, align 8, !ctir !525
  %err = alloca i32, align 4, !ctir !5
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12653, metadata !DIExpression()), !dbg !12654
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12655, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12657, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12659, metadata !DIExpression()), !dbg !12660
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12661, !tbaa !2668
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12662, !tbaa !2668
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12663
  store i32 %call, i32* %err, align 4, !dbg !12660, !tbaa !2655
  %2 = load i32, i32* %err, align 4, !dbg !12664, !tbaa !2655
  %cmp = icmp eq i32 %2, -1, !dbg !12665
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12664

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12664

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12666, !tbaa !2655
  %cmp2 = icmp eq i32 %3, 0, !dbg !12667
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12666

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12668, !tbaa !2668
  br label %cond.end, !dbg !12666

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12669, !tbaa !2668
  br label %cond.end, !dbg !12666

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12666
  br label %cond.end5, !dbg !12664

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12664
  ret i8* %cond6, !dbg !12670
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12671 !ctir !940 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %table.addr = alloca %struct.hash_table*, align 8, !ctir !932
  %entry.addr = alloca i8*, align 8, !ctir !525
  %data = alloca i8*, align 8, !ctir !47
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !835
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !847
  %candidate = alloca i64, align 8, !ctir !52
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !835
  %next = alloca %struct.hash_entry*, align 8, !ctir !835
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12672, metadata !DIExpression()), !dbg !12673
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12674, metadata !DIExpression()), !dbg !12675
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12676, metadata !DIExpression()), !dbg !12677
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12678, metadata !DIExpression()), !dbg !12679
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12680, !tbaa !2668
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12681, !tbaa !2668
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12682
  store i8* %call, i8** %data, align 8, !dbg !12683, !tbaa !2668
  %2 = load i8*, i8** %data, align 8, !dbg !12684, !tbaa !2668
  %tobool = icmp ne i8* %2, null, !dbg !12684
  br i1 %tobool, label %if.end, label %if.then, !dbg !12686

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12687
  br label %return, !dbg !12687

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12688, !tbaa !2668
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12689, !ctir !830
  %4 = load i64, i64* %n_entries, align 8, !dbg !12690, !tbaa !11068, !ctir !52
  %dec = add i64 %4, -1, !dbg !12690
  store i64 %dec, i64* %n_entries, align 8, !dbg !12690, !tbaa !11068, !ctir !52
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12691, !tbaa !2668
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12693, !ctir !836
  %6 = load i8*, i8** %data2, align 8, !dbg !12693, !tbaa !11094, !ctir !47
  %tobool3 = icmp ne i8* %6, null, !dbg !12691
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12694

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12695, !tbaa !2668
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12697, !ctir !830
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12698, !tbaa !11061, !ctir !52
  %dec5 = add i64 %8, -1, !dbg !12698
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12698, !tbaa !11061, !ctir !52
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12699, !tbaa !2668
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12701, !ctir !830
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12701, !tbaa !11061, !ctir !52
  %conv = uitofp i64 %10 to float, !dbg !12699
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12702, !tbaa !2668
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12703, !ctir !830
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12703, !tbaa !11598, !ctir !847
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12704, !ctir !848
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12704, !tbaa !11728, !ctir !853
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12705, !tbaa !2668
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12706, !ctir !830
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12706, !tbaa !11053, !ctir !52
  %conv7 = uitofp i64 %15 to float, !dbg !12705
  %mul = fmul float %13, %conv7, !dbg !12707
  %cmp = fcmp olt float %conv, %mul, !dbg !12708
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12709

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12710, !tbaa !2668
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12712
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12713, !tbaa !2668
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12715, !ctir !830
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12715, !tbaa !11061, !ctir !52
  %conv12 = uitofp i64 %18 to float, !dbg !12713
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12716, !tbaa !2668
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12717, !ctir !830
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12717, !tbaa !11598, !ctir !847
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12718, !ctir !848
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12718, !tbaa !11728, !ctir !853
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12719, !tbaa !2668
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12720, !ctir !830
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12720, !tbaa !11053, !ctir !52
  %conv16 = uitofp i64 %23 to float, !dbg !12719
  %mul17 = fmul float %21, %conv16, !dbg !12721
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12722
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12723

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12724, metadata !DIExpression()), !dbg !12726
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12727, !tbaa !2668
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12728, !ctir !830
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12728, !tbaa !11598, !ctir !847
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12726, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12729, metadata !DIExpression()), !dbg !12730
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12731, !tbaa !2668
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12732, !ctir !848
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12732, !tbaa !11766
  %tobool23 = trunc i8 %27 to i1, !dbg !12732, !ctir !139
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12731

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12733, !tbaa !2668
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12734, !ctir !830
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12734, !tbaa !11053, !ctir !52
  %conv26 = uitofp i64 %29 to float, !dbg !12733
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12735, !tbaa !2668
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12736, !ctir !848
  %31 = load float, float* %shrink_factor, align 4, !dbg !12736, !tbaa !11737, !ctir !853
  %mul27 = fmul float %conv26, %31, !dbg !12737
  br label %cond.end, !dbg !12731

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12738, !tbaa !2668
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12739, !ctir !830
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12739, !tbaa !11053, !ctir !52
  %conv29 = uitofp i64 %33 to float, !dbg !12738
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12740, !tbaa !2668
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12741, !ctir !848
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12741, !tbaa !11737, !ctir !853
  %mul31 = fmul float %conv29, %35, !dbg !12742
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12743, !tbaa !2668
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12744, !ctir !848
  %37 = load float, float* %growth_threshold, align 4, !dbg !12744, !tbaa !11709, !ctir !853
  %mul32 = fmul float %mul31, %37, !dbg !12745
  br label %cond.end, !dbg !12731

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12731
  %conv33 = fptoui float %cond to i64, !dbg !12746
  store i64 %conv33, i64* %candidate, align 8, !dbg !12730, !tbaa !3308
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12747, !tbaa !2668
  %39 = load i64, i64* %candidate, align 8, !dbg !12749, !tbaa !3308
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12750
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12751

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12752, metadata !DIExpression()), !dbg !12754
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12755, !tbaa !2668
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12756, !ctir !830
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12756, !tbaa !11658, !ctir !835
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12754, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12757, metadata !DIExpression()), !dbg !12758
  br label %while.cond, !dbg !12759

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12760, !tbaa !2668
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12759
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12759

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12761, !tbaa !2668
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12763, !ctir !836
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12763, !tbaa !11106, !ctir !835
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12764, !tbaa !2668
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12765, !tbaa !2668
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12765
  call void @free(i8* %46) #9, !dbg !12766
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12767, !tbaa !2668
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12768, !tbaa !2668
  br label %while.cond, !dbg !12759, !llvm.loop !12769

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12771, !tbaa !2668
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12772, !ctir !830
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12773, !tbaa !11658, !ctir !835
  br label %if.end39, !dbg !12774

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12775

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12776

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12777

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12778, !tbaa !2668
  store i8* %49, i8** %retval, align 8, !dbg !12779
  br label %return, !dbg !12779

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12780
  ret i8* %50, !dbg !12780
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #10 !dbg !12781 !ctir !615 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.F_triple*, align 8, !ctir !1716
  %tmp = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12783, metadata !DIExpression()), !dbg !12784
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12785, metadata !DIExpression()), !dbg !12786
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12787, metadata !DIExpression()), !dbg !12788
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12789, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12789
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12788, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12790, metadata !DIExpression()), !dbg !12791
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12792, !tbaa !2668
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12793, !ctir !1717
  %3 = load i8*, i8** %name, align 8, !dbg !12793, !tbaa !10650, !ctir !7
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12794, !tbaa !3308
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !12795
  store i64 %call, i64* %tmp, align 8, !dbg !12791, !tbaa !3308
  %5 = load i64, i64* %tmp, align 8, !dbg !12796, !tbaa !3308
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12797, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12798, !ctir !1717
  %7 = load i64, i64* %st_ino, align 8, !dbg !12798, !tbaa !10657, !ctir !447
  %xor = xor i64 %5, %7, !dbg !12799
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12800, !tbaa !3308
  %rem = urem i64 %xor, %8, !dbg !12801
  ret i64 %rem, !dbg !12802
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #10 !dbg !12803 !ctir !615 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.F_triple*, align 8, !ctir !1716
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12804, metadata !DIExpression()), !dbg !12805
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12806, metadata !DIExpression()), !dbg !12807
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12808, metadata !DIExpression()), !dbg !12809
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12810, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12810
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12809, !tbaa !2668
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12811, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12812, !ctir !1717
  %3 = load i64, i64* %st_ino, align 8, !dbg !12812, !tbaa !10657, !ctir !447
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12813, !tbaa !3308
  %rem = urem i64 %3, %4, !dbg !12814
  ret i64 %rem, !dbg !12815
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !12816 !ctir !617 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %y.addr = alloca i8*, align 8, !ctir !525
  %a = alloca %struct.F_triple*, align 8, !ctir !1716
  %b = alloca %struct.F_triple*, align 8, !ctir !1716
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12817, metadata !DIExpression()), !dbg !12818
  store i8* %y, i8** %y.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12819, metadata !DIExpression()), !dbg !12820
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12821, metadata !DIExpression()), !dbg !12822
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12823, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12823
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12822, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12824, metadata !DIExpression()), !dbg !12825
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12826, !tbaa !2668
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12826
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12825, !tbaa !2668
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12827, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12827, !ctir !1717
  %5 = load i64, i64* %st_ino, align 8, !dbg !12827, !tbaa !10657, !ctir !447
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12827, !tbaa !2668
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12827, !ctir !1717
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12827, !tbaa !10657, !ctir !447
  %cmp = icmp eq i64 %5, %7, !dbg !12827
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12827

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12827, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12827, !ctir !1717
  %9 = load i64, i64* %st_dev, align 8, !dbg !12827, !tbaa !10663, !ctir !449
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12827, !tbaa !2668
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12827, !ctir !1717
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12827, !tbaa !10663, !ctir !449
  %cmp3 = icmp eq i64 %9, %11, !dbg !12827
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12828

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12829, !tbaa !2668
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12830, !ctir !1717
  %13 = load i8*, i8** %name, align 8, !dbg !12830, !tbaa !10650, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12831, !tbaa !2668
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12832, !ctir !1717
  %15 = load i8*, i8** %name4, align 8, !dbg !12832, !tbaa !10650, !ctir !7
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !12833
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !12834
  %17 = zext i1 %16 to i64, !dbg !12835
  %cond = select i1 %16, i32 1, i32 0, !dbg !12835
  %tobool = icmp ne i32 %cond, 0, !dbg !12835
  ret i1 %tobool, !dbg !12836
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #10 !dbg !12837 !ctir !617 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %y.addr = alloca i8*, align 8, !ctir !525
  %a = alloca %struct.F_triple*, align 8, !ctir !1716
  %b = alloca %struct.F_triple*, align 8, !ctir !1716
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12838, metadata !DIExpression()), !dbg !12839
  store i8* %y, i8** %y.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12842, metadata !DIExpression()), !dbg !12843
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12844, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12844
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12843, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12845, metadata !DIExpression()), !dbg !12846
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12847, !tbaa !2668
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12847
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12846, !tbaa !2668
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12848, !tbaa !2668
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12848, !ctir !1717
  %5 = load i64, i64* %st_ino, align 8, !dbg !12848, !tbaa !10657, !ctir !447
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12848, !tbaa !2668
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12848, !ctir !1717
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12848, !tbaa !10657, !ctir !447
  %cmp = icmp eq i64 %5, %7, !dbg !12848
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12848

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12848, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12848, !ctir !1717
  %9 = load i64, i64* %st_dev, align 8, !dbg !12848, !tbaa !10663, !ctir !449
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12848, !tbaa !2668
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12848, !ctir !1717
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12848, !tbaa !10663, !ctir !449
  %cmp3 = icmp eq i64 %9, %11, !dbg !12848
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12849

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12850, !tbaa !2668
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12850, !ctir !1717
  %13 = load i8*, i8** %name, align 8, !dbg !12850, !tbaa !10650, !ctir !7
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12850, !tbaa !2668
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12850, !ctir !1717
  %15 = load i8*, i8** %name4, align 8, !dbg !12850, !tbaa !10650, !ctir !7
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !12850
  %cmp5 = icmp eq i32 %call, 0, !dbg !12850
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !12851
  %17 = zext i1 %16 to i64, !dbg !12852
  %cond = select i1 %16, i32 1, i32 0, !dbg !12852
  %tobool = icmp ne i32 %cond, 0, !dbg !12852
  ret i1 %tobool, !dbg !12853
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !12854 !ctir !613 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !47
  %a = alloca %struct.F_triple*, align 8, !ctir !1723
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12855, metadata !DIExpression()), !dbg !12856
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12857, metadata !DIExpression()), !dbg !12858
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12859, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12859
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12858, !tbaa !2668
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12860, !tbaa !2668
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12861, !ctir !1718
  %3 = load i8*, i8** %name, align 8, !dbg !12861, !tbaa !10650, !ctir !7
  call void @free(i8* %3) #9, !dbg !12862
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12863, !tbaa !2668
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !12863
  call void @free(i8* %5) #9, !dbg !12864
  ret void, !dbg !12865
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mkancesdirs(i8* %file, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_dir, i8* %make_dir_arg) #4 !dbg !12866 !ctir !1738 {
entry:
  %retval = alloca i64, align 8, !ctir !634
  %file.addr = alloca i8*, align 8, !ctir !7
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1740
  %make_dir.addr = alloca i32 (i8*, i8*, i8*)*, align 8, !ctir !1741
  %make_dir_arg.addr = alloca i8*, align 8, !ctir !47
  %sep = alloca i8*, align 8, !ctir !7
  %component = alloca i8*, align 8, !ctir !7
  %p = alloca i8*, align 8, !ctir !7
  %c = alloca i8, align 1, !ctir !8
  %made_dir = alloca i8, align 1, !ctir !139
  %make_dir_errno = alloca i32, align 4, !ctir !5
  %savewd_chdir_options = alloca i32, align 4, !ctir !5
  %chdir_result = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !12868, metadata !DIExpression()), !dbg !12869
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !12870, metadata !DIExpression()), !dbg !12871
  store i32 (i8*, i8*, i8*)* %make_dir, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_dir.addr, metadata !12872, metadata !DIExpression()), !dbg !12873
  store i8* %make_dir_arg, i8** %make_dir_arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %make_dir_arg.addr, metadata !12874, metadata !DIExpression()), !dbg !12875
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !12876, metadata !DIExpression()), !dbg !12877
  store i8* null, i8** %sep, align 8, !dbg !12877, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %component, metadata !12878, metadata !DIExpression()), !dbg !12879
  %0 = load i8*, i8** %file.addr, align 8, !dbg !12880, !tbaa !2668
  store i8* %0, i8** %component, align 8, !dbg !12879, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12881, metadata !DIExpression()), !dbg !12882
  %1 = load i8*, i8** %file.addr, align 8, !dbg !12883, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !12884
  store i8* %add.ptr, i8** %p, align 8, !dbg !12882, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %c, metadata !12885, metadata !DIExpression()), !dbg !12886
  call void @llvm.dbg.declare(metadata i8* %made_dir, metadata !12887, metadata !DIExpression()), !dbg !12888
  store i8 0, i8* %made_dir, align 1, !dbg !12888, !tbaa !2762
  br label %while.cond, !dbg !12889

while.cond:                                       ; preds = %if.end69, %entry
  %2 = load i8*, i8** %p, align 8, !dbg !12890, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !12890
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !12890, !tbaa !2668
  %3 = load i8, i8* %2, align 1, !dbg !12891, !tbaa !3315, !ctir !8
  store i8 %3, i8* %c, align 1, !dbg !12892, !tbaa !3315
  %tobool = icmp ne i8 %3, 0, !dbg !12889
  br i1 %tobool, label %while.body, label %while.end, !dbg !12889

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p, align 8, !dbg !12893, !tbaa !2668
  %5 = load i8, i8* %4, align 1, !dbg !12893, !tbaa !3315, !ctir !8
  %conv = sext i8 %5 to i32, !dbg !12893
  %cmp = icmp eq i32 %conv, 47, !dbg !12893
  br i1 %cmp, label %if.then, label %if.else, !dbg !12895

if.then:                                          ; preds = %while.body
  %6 = load i8, i8* %c, align 1, !dbg !12896, !tbaa !3315
  %conv2 = sext i8 %6 to i32, !dbg !12896
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !12896
  br i1 %cmp3, label %if.end, label %if.then5, !dbg !12899

if.then5:                                         ; preds = %if.then
  %7 = load i8*, i8** %p, align 8, !dbg !12900, !tbaa !2668
  store i8* %7, i8** %sep, align 8, !dbg !12901, !tbaa !2668
  br label %if.end, !dbg !12902

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end69, !dbg !12903

if.else:                                          ; preds = %while.body
  %8 = load i8, i8* %c, align 1, !dbg !12904, !tbaa !3315
  %conv6 = sext i8 %8 to i32, !dbg !12904
  %cmp7 = icmp eq i32 %conv6, 47, !dbg !12904
  br i1 %cmp7, label %land.lhs.true, label %if.end68, !dbg !12906

land.lhs.true:                                    ; preds = %if.else
  %9 = load i8*, i8** %p, align 8, !dbg !12907, !tbaa !2668
  %10 = load i8, i8* %9, align 1, !dbg !12908, !tbaa !3315, !ctir !8
  %conv9 = sext i8 %10 to i32, !dbg !12908
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !12908
  br i1 %tobool10, label %land.lhs.true11, label %if.end68, !dbg !12909

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %sep, align 8, !dbg !12910, !tbaa !2668
  %tobool12 = icmp ne i8* %11, null, !dbg !12910
  br i1 %tobool12, label %if.then13, label %if.end68, !dbg !12911

if.then13:                                        ; preds = %land.lhs.true11
  %12 = load i8*, i8** %sep, align 8, !dbg !12912, !tbaa !2668
  %13 = load i8*, i8** %component, align 8, !dbg !12915, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !12916
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !12916
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12916
  %cmp14 = icmp eq i64 %sub.ptr.sub, 1, !dbg !12917
  br i1 %cmp14, label %land.lhs.true16, label %if.then20, !dbg !12918

land.lhs.true16:                                  ; preds = %if.then13
  %14 = load i8*, i8** %component, align 8, !dbg !12919, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0, !dbg !12919, !ctir !7
  %15 = load i8, i8* %arrayidx, align 1, !dbg !12919, !tbaa !3315
  %conv17 = sext i8 %15 to i32, !dbg !12919
  %cmp18 = icmp eq i32 %conv17, 46, !dbg !12920
  br i1 %cmp18, label %if.end67, label %if.then20, !dbg !12921

if.then20:                                        ; preds = %land.lhs.true16, %if.then13
  call void @llvm.dbg.declare(metadata i32* %make_dir_errno, metadata !12922, metadata !DIExpression()), !dbg !12924
  store i32 0, i32* %make_dir_errno, align 4, !dbg !12924, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !12925, metadata !DIExpression()), !dbg !12926
  store i32 0, i32* %savewd_chdir_options, align 4, !dbg !12926, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !12927, metadata !DIExpression()), !dbg !12928
  %16 = load i8*, i8** %sep, align 8, !dbg !12929, !tbaa !2668
  store i8 0, i8* %16, align 1, !dbg !12930, !tbaa !3315, !ctir !8
  %17 = load i8*, i8** %sep, align 8, !dbg !12931, !tbaa !2668
  %18 = load i8*, i8** %component, align 8, !dbg !12933, !tbaa !2668
  %sub.ptr.lhs.cast21 = ptrtoint i8* %17 to i64, !dbg !12934
  %sub.ptr.rhs.cast22 = ptrtoint i8* %18 to i64, !dbg !12934
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !12934
  %cmp24 = icmp eq i64 %sub.ptr.sub23, 2, !dbg !12935
  br i1 %cmp24, label %land.lhs.true26, label %if.else37, !dbg !12936

land.lhs.true26:                                  ; preds = %if.then20
  %19 = load i8*, i8** %component, align 8, !dbg !12937, !tbaa !2668
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !12937, !ctir !7
  %20 = load i8, i8* %arrayidx27, align 1, !dbg !12937, !tbaa !3315
  %conv28 = sext i8 %20 to i32, !dbg !12937
  %cmp29 = icmp eq i32 %conv28, 46, !dbg !12938
  br i1 %cmp29, label %land.lhs.true31, label %if.else37, !dbg !12939

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %21 = load i8*, i8** %component, align 8, !dbg !12940, !tbaa !2668
  %arrayidx32 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !12940, !ctir !7
  %22 = load i8, i8* %arrayidx32, align 1, !dbg !12940, !tbaa !3315
  %conv33 = sext i8 %22 to i32, !dbg !12940
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !12941
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !12942

if.then36:                                        ; preds = %land.lhs.true31
  store i8 0, i8* %made_dir, align 1, !dbg !12943, !tbaa !2762
  br label %if.end44, !dbg !12944

if.else37:                                        ; preds = %land.lhs.true31, %land.lhs.true26, %if.then20
  %23 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !dbg !12945, !tbaa !2668
  %24 = load i8*, i8** %file.addr, align 8, !dbg !12947, !tbaa !2668
  %25 = load i8*, i8** %component, align 8, !dbg !12948, !tbaa !2668
  %26 = load i8*, i8** %make_dir_arg.addr, align 8, !dbg !12949, !tbaa !2668
  %call = call i32 %23(i8* %24, i8* %25, i8* %26), !dbg !12945
  %cmp38 = icmp slt i32 %call, 0, !dbg !12950
  br i1 %cmp38, label %if.then40, label %if.else42, !dbg !12951

if.then40:                                        ; preds = %if.else37
  %call41 = call i32* @__errno_location() #16, !dbg !12952
  %27 = load i32, i32* %call41, align 4, !dbg !12952, !tbaa !2655, !ctir !5
  store i32 %27, i32* %make_dir_errno, align 4, !dbg !12953, !tbaa !2655
  br label %if.end43, !dbg !12954

if.else42:                                        ; preds = %if.else37
  store i8 1, i8* %made_dir, align 1, !dbg !12955, !tbaa !2762
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  %28 = load i8, i8* %made_dir, align 1, !dbg !12956, !tbaa !2762
  %tobool45 = trunc i8 %28 to i1, !dbg !12956
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !12958

if.then46:                                        ; preds = %if.end44
  %29 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12959, !tbaa !2655
  %or = or i32 %29, 1, !dbg !12959
  store i32 %or, i32* %savewd_chdir_options, align 4, !dbg !12959, !tbaa !2655
  br label %if.end47, !dbg !12960

if.end47:                                         ; preds = %if.then46, %if.end44
  %30 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !12961, !tbaa !2668
  %31 = load i8*, i8** %component, align 8, !dbg !12962, !tbaa !2668
  %32 = load i32, i32* %savewd_chdir_options, align 4, !dbg !12963, !tbaa !2655
  %call48 = call i32 @savewd_chdir(%struct.savewd* %30, i8* %31, i32 %32, i32* null), !dbg !12964
  store i32 %call48, i32* %chdir_result, align 4, !dbg !12965, !tbaa !2655
  %33 = load i32, i32* %chdir_result, align 4, !dbg !12966, !tbaa !2655
  %cmp49 = icmp ne i32 %33, -1, !dbg !12968
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !12969

if.then51:                                        ; preds = %if.end47
  %34 = load i8*, i8** %sep, align 8, !dbg !12970, !tbaa !2668
  store i8 47, i8* %34, align 1, !dbg !12971, !tbaa !3315, !ctir !8
  br label %if.end52, !dbg !12972

if.end52:                                         ; preds = %if.then51, %if.end47
  %35 = load i32, i32* %chdir_result, align 4, !dbg !12973, !tbaa !2655
  %cmp53 = icmp ne i32 %35, 0, !dbg !12975
  br i1 %cmp53, label %if.then55, label %if.end66, !dbg !12976

if.then55:                                        ; preds = %if.end52
  %36 = load i32, i32* %make_dir_errno, align 4, !dbg !12977, !tbaa !2655
  %cmp56 = icmp ne i32 %36, 0, !dbg !12980
  br i1 %cmp56, label %land.lhs.true58, label %if.end64, !dbg !12981

land.lhs.true58:                                  ; preds = %if.then55
  %call59 = call i32* @__errno_location() #16, !dbg !12982
  %37 = load i32, i32* %call59, align 4, !dbg !12982, !tbaa !2655, !ctir !5
  %cmp60 = icmp eq i32 %37, 2, !dbg !12983
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !12984

if.then62:                                        ; preds = %land.lhs.true58
  %38 = load i32, i32* %make_dir_errno, align 4, !dbg !12985, !tbaa !2655
  %call63 = call i32* @__errno_location() #16, !dbg !12986
  store i32 %38, i32* %call63, align 4, !dbg !12987, !tbaa !2655, !ctir !5
  br label %if.end64, !dbg !12986

if.end64:                                         ; preds = %if.then62, %land.lhs.true58, %if.then55
  %39 = load i32, i32* %chdir_result, align 4, !dbg !12988, !tbaa !2655
  %conv65 = sext i32 %39 to i64, !dbg !12988
  store i64 %conv65, i64* %retval, align 8, !dbg !12989
  br label %return, !dbg !12989

if.end66:                                         ; preds = %if.end52
  br label %if.end67, !dbg !12990

if.end67:                                         ; preds = %if.end66, %land.lhs.true16
  %40 = load i8*, i8** %p, align 8, !dbg !12991, !tbaa !2668
  store i8* %40, i8** %component, align 8, !dbg !12992, !tbaa !2668
  br label %if.end68, !dbg !12993

if.end68:                                         ; preds = %if.end67, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end
  br label %while.cond, !dbg !12889, !llvm.loop !12994

while.end:                                        ; preds = %while.cond
  %41 = load i8*, i8** %component, align 8, !dbg !12996, !tbaa !2668
  %42 = load i8*, i8** %file.addr, align 8, !dbg !12997, !tbaa !2668
  %sub.ptr.lhs.cast70 = ptrtoint i8* %41 to i64, !dbg !12998
  %sub.ptr.rhs.cast71 = ptrtoint i8* %42 to i64, !dbg !12998
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71, !dbg !12998
  store i64 %sub.ptr.sub72, i64* %retval, align 8, !dbg !12999
  br label %return, !dbg !12999

return:                                           ; preds = %while.end, %if.end64
  %43 = load i64, i64* %retval, align 8, !dbg !13000
  ret i64 %43, !dbg !13000
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @make_dir_parents(i8* %dir, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_ancestor, i8* %options, i32 %mode, void (i8*, i8*)* %announce, i32 %mode_bits, i32 %owner, i32 %group, i1 zeroext %preserve_existing) #4 !dbg !13001 !ctir !1756 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %dir.addr = alloca i8*, align 8, !ctir !7
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1758
  %make_ancestor.addr = alloca i32 (i8*, i8*, i8*)*, align 8, !ctir !1741
  %options.addr = alloca i8*, align 8, !ctir !47
  %mode.addr = alloca i32, align 4, !ctir !136
  %announce.addr = alloca void (i8*, i8*)*, align 8, !ctir !1759
  %mode_bits.addr = alloca i32, align 4, !ctir !136
  %owner.addr = alloca i32, align 4, !ctir !124
  %group.addr = alloca i32, align 4, !ctir !126
  %preserve_existing.addr = alloca i8, align 1, !ctir !139
  %mkdir_errno = alloca i32, align 4, !ctir !5
  %prefix_len = alloca i64, align 8, !ctir !634
  %savewd_chdir_options = alloca i32, align 4, !ctir !5
  %keep_owner = alloca i8, align 1, !ctir !139
  %keep_special_mode_bits = alloca i8, align 1, !ctir !139
  %mkdir_mode = alloca i32, align 4, !ctir !136
  %umask_must_be_ok = alloca i8, align 1, !ctir !139
  %st = alloca %struct.stat, align 8, !ctir !13003
  %open_result = alloca [2 x i32], align 4, !ctir !1760
  %chdir_result = alloca i32, align 4, !ctir !5
  %chdir_ok = alloca i8, align 1, !ctir !139
  %subdir = alloca i8*, align 8, !ctir !177
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13024, metadata !DIExpression()), !dbg !13025
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !13026, metadata !DIExpression()), !dbg !13027
  store i32 (i8*, i8*, i8*)* %make_ancestor, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_ancestor.addr, metadata !13028, metadata !DIExpression()), !dbg !13029
  store i8* %options, i8** %options.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !13030, metadata !DIExpression()), !dbg !13031
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13032, metadata !DIExpression()), !dbg !13033
  store void (i8*, i8*)* %announce, void (i8*, i8*)** %announce.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %announce.addr, metadata !13034, metadata !DIExpression()), !dbg !13035
  store i32 %mode_bits, i32* %mode_bits.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !13036, metadata !DIExpression()), !dbg !13037
  store i32 %owner, i32* %owner.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !13038, metadata !DIExpression()), !dbg !13039
  store i32 %group, i32* %group.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !13040, metadata !DIExpression()), !dbg !13041
  %frombool = zext i1 %preserve_existing to i8
  store i8 %frombool, i8* %preserve_existing.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %preserve_existing.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.declare(metadata i32* %mkdir_errno, metadata !13044, metadata !DIExpression()), !dbg !13045
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !13046, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !13046, !ctir !7
  %1 = load i8, i8* %arrayidx, align 1, !dbg !13046, !tbaa !3315
  %conv = sext i8 %1 to i32, !dbg !13046
  %cmp = icmp eq i32 %conv, 47, !dbg !13046
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13046

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13046

cond.false:                                       ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13047, !tbaa !2668
  %call = call i32 @savewd_errno(%struct.savewd* %2) #14, !dbg !13048
  br label %cond.end, !dbg !13046

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !13046
  store i32 %cond, i32* %mkdir_errno, align 4, !dbg !13045, !tbaa !2655
  %3 = load i32, i32* %mkdir_errno, align 4, !dbg !13049, !tbaa !2655
  %cmp2 = icmp eq i32 %3, 0, !dbg !13051
  br i1 %cmp2, label %if.then, label %if.end140, !dbg !13052

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !13053, metadata !DIExpression()), !dbg !13055
  store i64 0, i64* %prefix_len, align 8, !dbg !13055, !tbaa !3308
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !13056, metadata !DIExpression()), !dbg !13057
  store i32 2, i32* %savewd_chdir_options, align 4, !dbg !13057, !tbaa !2655
  %4 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13058, !tbaa !2668
  %tobool = icmp ne i32 (i8*, i8*, i8*)* %4, null, !dbg !13058
  br i1 %tobool, label %if.then4, label %if.end14, !dbg !13060

if.then4:                                         ; preds = %if.then
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !13061, !tbaa !2668
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13063, !tbaa !2668
  %7 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13064, !tbaa !2668
  %8 = load i8*, i8** %options.addr, align 8, !dbg !13065, !tbaa !2668
  %call5 = call i64 @mkancesdirs(i8* %5, %struct.savewd* %6, i32 (i8*, i8*, i8*)* %7, i8* %8), !dbg !13066
  store i64 %call5, i64* %prefix_len, align 8, !dbg !13067, !tbaa !3308
  %9 = load i64, i64* %prefix_len, align 8, !dbg !13068, !tbaa !3308
  %cmp6 = icmp slt i64 %9, 0, !dbg !13070
  br i1 %cmp6, label %if.then8, label %if.end13, !dbg !13071

if.then8:                                         ; preds = %if.then4
  %10 = load i64, i64* %prefix_len, align 8, !dbg !13072, !tbaa !3308
  %cmp9 = icmp slt i64 %10, -1, !dbg !13075
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !13076

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, align 1, !dbg !13077
  br label %return, !dbg !13077

if.end:                                           ; preds = %if.then8
  %call12 = call i32* @__errno_location() #16, !dbg !13078
  %11 = load i32, i32* %call12, align 4, !dbg !13078, !tbaa !2655, !ctir !5
  store i32 %11, i32* %mkdir_errno, align 4, !dbg !13079, !tbaa !2655
  br label %if.end13, !dbg !13080

if.end13:                                         ; preds = %if.end, %if.then4
  br label %if.end14, !dbg !13081

if.end14:                                         ; preds = %if.end13, %if.then
  %12 = load i64, i64* %prefix_len, align 8, !dbg !13082, !tbaa !3308
  %cmp15 = icmp sle i64 0, %12, !dbg !13084
  br i1 %cmp15, label %if.then17, label %if.end139, !dbg !13085

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i8* %keep_owner, metadata !13086, metadata !DIExpression()), !dbg !13088
  %13 = load i32, i32* %owner.addr, align 4, !dbg !13089, !tbaa !2655
  %cmp18 = icmp eq i32 %13, -1, !dbg !13090
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !13091

land.rhs:                                         ; preds = %if.then17
  %14 = load i32, i32* %group.addr, align 4, !dbg !13092, !tbaa !2655
  %cmp20 = icmp eq i32 %14, -1, !dbg !13093
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then17
  %15 = phi i1 [ false, %if.then17 ], [ %cmp20, %land.rhs ], !dbg !13094
  %frombool22 = zext i1 %15 to i8, !dbg !13088
  store i8 %frombool22, i8* %keep_owner, align 1, !dbg !13088, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %keep_special_mode_bits, metadata !13095, metadata !DIExpression()), !dbg !13096
  %16 = load i32, i32* %mode_bits.addr, align 4, !dbg !13097, !tbaa !2655
  %and = and i32 %16, 3072, !dbg !13098
  %17 = load i32, i32* %mode.addr, align 4, !dbg !13099, !tbaa !2655
  %and23 = and i32 %17, 512, !dbg !13100
  %or = or i32 %and, %and23, !dbg !13101
  %cmp24 = icmp eq i32 %or, 0, !dbg !13102
  %frombool26 = zext i1 %cmp24 to i8, !dbg !13096
  store i8 %frombool26, i8* %keep_special_mode_bits, align 1, !dbg !13096, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode, metadata !13103, metadata !DIExpression()), !dbg !13104
  %18 = load i32, i32* %mode.addr, align 4, !dbg !13105, !tbaa !2655
  store i32 %18, i32* %mkdir_mode, align 4, !dbg !13104, !tbaa !2655
  %19 = load i8, i8* %keep_owner, align 1, !dbg !13106, !tbaa !2762
  %tobool27 = trunc i8 %19 to i1, !dbg !13106
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !13108

if.then28:                                        ; preds = %land.end
  %20 = load i32, i32* %mkdir_mode, align 4, !dbg !13109, !tbaa !2655
  %and29 = and i32 %20, -64, !dbg !13109
  store i32 %and29, i32* %mkdir_mode, align 4, !dbg !13109, !tbaa !2655
  br label %if.end34, !dbg !13110

if.else:                                          ; preds = %land.end
  %21 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !13111, !tbaa !2762
  %tobool30 = trunc i8 %21 to i1, !dbg !13111
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !13113

if.then31:                                        ; preds = %if.else
  %22 = load i32, i32* %mkdir_mode, align 4, !dbg !13114, !tbaa !2655
  %and32 = and i32 %22, -19, !dbg !13114
  store i32 %and32, i32* %mkdir_mode, align 4, !dbg !13114, !tbaa !2655
  br label %if.end33, !dbg !13115

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then28
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !13116, !tbaa !2668
  %24 = load i64, i64* %prefix_len, align 8, !dbg !13118, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !13119
  %25 = load i32, i32* %mkdir_mode, align 4, !dbg !13120, !tbaa !2655
  %call35 = call i32 @mkdir(i8* %add.ptr, i32 %25) #9, !dbg !13121
  %cmp36 = icmp eq i32 %call35, 0, !dbg !13122
  br i1 %cmp36, label %if.then38, label %if.else55, !dbg !13123

if.then38:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8* %umask_must_be_ok, metadata !13124, metadata !DIExpression()), !dbg !13126
  %26 = load i32, i32* %mode.addr, align 4, !dbg !13127, !tbaa !2655
  %27 = load i32, i32* %mode_bits.addr, align 4, !dbg !13128, !tbaa !2655
  %and39 = and i32 %26, %27, !dbg !13129
  %and40 = and i32 %and39, 511, !dbg !13130
  %cmp41 = icmp eq i32 %and40, 0, !dbg !13131
  %frombool43 = zext i1 %cmp41 to i8, !dbg !13126
  store i8 %frombool43, i8* %umask_must_be_ok, align 1, !dbg !13126, !tbaa !2762
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %announce.addr, align 8, !dbg !13132, !tbaa !2668
  %29 = load i8*, i8** %dir.addr, align 8, !dbg !13133, !tbaa !2668
  %30 = load i8*, i8** %options.addr, align 8, !dbg !13134, !tbaa !2668
  call void %28(i8* %29, i8* %30), !dbg !13132
  %31 = load i8, i8* %keep_owner, align 1, !dbg !13135, !tbaa !2762
  %tobool44 = trunc i8 %31 to i1, !dbg !13135
  %conv45 = zext i1 %tobool44 to i32, !dbg !13135
  %32 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !13136, !tbaa !2762
  %tobool46 = trunc i8 %32 to i1, !dbg !13136
  %conv47 = zext i1 %tobool46 to i32, !dbg !13136
  %and48 = and i32 %conv45, %conv47, !dbg !13137
  %33 = load i8, i8* %umask_must_be_ok, align 1, !dbg !13138, !tbaa !2762
  %tobool49 = trunc i8 %33 to i1, !dbg !13138
  %conv50 = zext i1 %tobool49 to i32, !dbg !13138
  %and51 = and i32 %and48, %conv50, !dbg !13139
  %tobool52 = icmp ne i32 %and51, 0, !dbg !13140
  %frombool53 = zext i1 %tobool52 to i8, !dbg !13141
  store i8 %frombool53, i8* %preserve_existing.addr, align 1, !dbg !13141, !tbaa !2762
  %34 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13142, !tbaa !2655
  %or54 = or i32 %34, 1, !dbg !13142
  store i32 %or54, i32* %savewd_chdir_options, align 4, !dbg !13142, !tbaa !2655
  br label %if.end57, !dbg !13143

if.else55:                                        ; preds = %if.end34
  %call56 = call i32* @__errno_location() #16, !dbg !13144
  %35 = load i32, i32* %call56, align 4, !dbg !13144, !tbaa !2655, !ctir !5
  store i32 %35, i32* %mkdir_errno, align 4, !dbg !13146, !tbaa !2655
  store i32 -1, i32* %mkdir_mode, align 4, !dbg !13147, !tbaa !2655
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then38
  %36 = load i8, i8* %preserve_existing.addr, align 1, !dbg !13148, !tbaa !2762
  %tobool58 = trunc i8 %36 to i1, !dbg !13148
  br i1 %tobool58, label %if.then59, label %if.else96, !dbg !13150

if.then59:                                        ; preds = %if.end57
  %37 = load i32, i32* %mkdir_errno, align 4, !dbg !13151, !tbaa !2655
  %cmp60 = icmp eq i32 %37, 0, !dbg !13154
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !13155

if.then62:                                        ; preds = %if.then59
  store i1 true, i1* %retval, align 1, !dbg !13156
  br label %return, !dbg !13156

if.end63:                                         ; preds = %if.then59
  %38 = load i32, i32* %mkdir_errno, align 4, !dbg !13157, !tbaa !2655
  %cmp64 = icmp ne i32 %38, 2, !dbg !13159
  br i1 %cmp64, label %land.lhs.true, label %if.end95, !dbg !13160

land.lhs.true:                                    ; preds = %if.end63
  %39 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13161, !tbaa !2668
  %tobool66 = icmp ne i32 (i8*, i8*, i8*)* %39, null, !dbg !13161
  br i1 %tobool66, label %if.then67, label %if.end95, !dbg !13162

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !13163, metadata !DIExpression()), !dbg !13165
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !13166, !tbaa !2668
  %41 = load i64, i64* %prefix_len, align 8, !dbg !13168, !tbaa !3308
  %add.ptr68 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !13169
  %call69 = call i32 @stat(i8* %add.ptr68, %struct.stat* %st) #9, !dbg !13170
  %cmp70 = icmp eq i32 %call69, 0, !dbg !13171
  br i1 %cmp70, label %if.then72, label %if.else78, !dbg !13172

if.then72:                                        ; preds = %if.then67
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !13173, !ctir !13003
  %42 = load i32, i32* %st_mode, align 8, !dbg !13173, !tbaa !2934, !ctir !137
  %and73 = and i32 %42, 61440, !dbg !13173
  %cmp74 = icmp eq i32 %and73, 16384, !dbg !13173
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !13176

if.then76:                                        ; preds = %if.then72
  store i1 true, i1* %retval, align 1, !dbg !13177
  br label %return, !dbg !13177

if.end77:                                         ; preds = %if.then72
  br label %if.end94, !dbg !13178

if.else78:                                        ; preds = %if.then67
  %43 = load i32, i32* %mkdir_errno, align 4, !dbg !13179, !tbaa !2655
  %cmp79 = icmp eq i32 %43, 17, !dbg !13181
  br i1 %cmp79, label %land.lhs.true81, label %if.end93, !dbg !13182

land.lhs.true81:                                  ; preds = %if.else78
  %call82 = call i32* @__errno_location() #16, !dbg !13183
  %44 = load i32, i32* %call82, align 4, !dbg !13183, !tbaa !2655, !ctir !5
  %cmp83 = icmp ne i32 %44, 2, !dbg !13184
  br i1 %cmp83, label %land.lhs.true85, label %if.end93, !dbg !13185

land.lhs.true85:                                  ; preds = %land.lhs.true81
  %call86 = call i32* @__errno_location() #16, !dbg !13186
  %45 = load i32, i32* %call86, align 4, !dbg !13186, !tbaa !2655, !ctir !5
  %cmp87 = icmp ne i32 %45, 20, !dbg !13187
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !13188

if.then89:                                        ; preds = %land.lhs.true85
  %call90 = call i32* @__errno_location() #16, !dbg !13189
  %46 = load i32, i32* %call90, align 4, !dbg !13189, !tbaa !2655, !ctir !5
  %call91 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.295, i64 0, i64 0)) #9, !dbg !13191
  %47 = load i8*, i8** %dir.addr, align 8, !dbg !13192, !tbaa !2668
  %call92 = call i8* @quote(i8* %47), !dbg !13193
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %46, i8* %call91, i8* %call92), !dbg !13194
  store i1 false, i1* %retval, align 1, !dbg !13195
  br label %return, !dbg !13195

if.end93:                                         ; preds = %land.lhs.true85, %land.lhs.true81, %if.else78
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end77
  br label %if.end95, !dbg !13196

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %if.end63
  br label %if.end138, !dbg !13197

if.else96:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata [2 x i32]* %open_result, metadata !13198, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !13201, metadata !DIExpression()), !dbg !13202
  %48 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13203, !tbaa !2668
  %49 = load i8*, i8** %dir.addr, align 8, !dbg !13204, !tbaa !2668
  %50 = load i64, i64* %prefix_len, align 8, !dbg !13205, !tbaa !3308
  %add.ptr97 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !13206
  %51 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13207, !tbaa !2655
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !13208
  %call98 = call i32 @savewd_chdir(%struct.savewd* %48, i8* %add.ptr97, i32 %51, i32* %arraydecay), !dbg !13209
  store i32 %call98, i32* %chdir_result, align 4, !dbg !13202, !tbaa !2655
  %52 = load i32, i32* %chdir_result, align 4, !dbg !13210, !tbaa !2655
  %cmp99 = icmp slt i32 %52, -1, !dbg !13212
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !13213

if.then101:                                       ; preds = %if.else96
  store i1 true, i1* %retval, align 1, !dbg !13214
  br label %return, !dbg !13214

if.else102:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata i8* %chdir_ok, metadata !13215, metadata !DIExpression()), !dbg !13217
  %53 = load i32, i32* %chdir_result, align 4, !dbg !13218, !tbaa !2655
  %cmp103 = icmp eq i32 %53, 0, !dbg !13219
  %frombool105 = zext i1 %cmp103 to i8, !dbg !13217
  store i8 %frombool105, i8* %chdir_ok, align 1, !dbg !13217, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8** %subdir, metadata !13220, metadata !DIExpression()), !dbg !13221
  %54 = load i8, i8* %chdir_ok, align 1, !dbg !13222, !tbaa !2762
  %tobool106 = trunc i8 %54 to i1, !dbg !13222
  br i1 %tobool106, label %cond.true108, label %cond.false109, !dbg !13222

cond.true108:                                     ; preds = %if.else102
  br label %cond.end111, !dbg !13222

cond.false109:                                    ; preds = %if.else102
  %55 = load i8*, i8** %dir.addr, align 8, !dbg !13223, !tbaa !2668
  %56 = load i64, i64* %prefix_len, align 8, !dbg !13224, !tbaa !3308
  %add.ptr110 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !13225
  br label %cond.end111, !dbg !13222

cond.end111:                                      ; preds = %cond.false109, %cond.true108
  %cond112 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.296, i64 0, i64 0), %cond.true108 ], [ %add.ptr110, %cond.false109 ], !dbg !13222
  store i8* %cond112, i8** %subdir, align 8, !dbg !13221, !tbaa !2668
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !13226, !ctir !1760
  %57 = load i32, i32* %arrayidx113, align 4, !dbg !13226, !tbaa !2655
  %58 = load i8*, i8** %subdir, align 8, !dbg !13228, !tbaa !2668
  %59 = load i32, i32* %mkdir_mode, align 4, !dbg !13229, !tbaa !2655
  %60 = load i32, i32* %owner.addr, align 4, !dbg !13230, !tbaa !2655
  %61 = load i32, i32* %group.addr, align 4, !dbg !13231, !tbaa !2655
  %62 = load i32, i32* %mode.addr, align 4, !dbg !13232, !tbaa !2655
  %63 = load i32, i32* %mode_bits.addr, align 4, !dbg !13233, !tbaa !2655
  %call114 = call i32 @dirchownmod(i32 %57, i8* %58, i32 %59, i32 %60, i32 %61, i32 %62, i32 %63), !dbg !13234
  %cmp115 = icmp eq i32 %call114, 0, !dbg !13235
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !13236

if.then117:                                       ; preds = %cond.end111
  store i1 true, i1* %retval, align 1, !dbg !13237
  br label %return, !dbg !13237

if.end118:                                        ; preds = %cond.end111
  %64 = load i32, i32* %mkdir_errno, align 4, !dbg !13238, !tbaa !2655
  %cmp119 = icmp eq i32 %64, 0, !dbg !13240
  br i1 %cmp119, label %if.then129, label %lor.lhs.false, !dbg !13241

lor.lhs.false:                                    ; preds = %if.end118
  %65 = load i32, i32* %mkdir_errno, align 4, !dbg !13242, !tbaa !2655
  %cmp121 = icmp ne i32 %65, 2, !dbg !13243
  br i1 %cmp121, label %land.lhs.true123, label %if.end136, !dbg !13244

land.lhs.true123:                                 ; preds = %lor.lhs.false
  %66 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13245, !tbaa !2668
  %tobool124 = icmp ne i32 (i8*, i8*, i8*)* %66, null, !dbg !13245
  br i1 %tobool124, label %land.lhs.true125, label %if.end136, !dbg !13246

land.lhs.true125:                                 ; preds = %land.lhs.true123
  %call126 = call i32* @__errno_location() #16, !dbg !13247
  %67 = load i32, i32* %call126, align 4, !dbg !13247, !tbaa !2655, !ctir !5
  %cmp127 = icmp ne i32 %67, 20, !dbg !13248
  br i1 %cmp127, label %if.then129, label %if.end136, !dbg !13249

if.then129:                                       ; preds = %land.lhs.true125, %if.end118
  %call130 = call i32* @__errno_location() #16, !dbg !13250
  %68 = load i32, i32* %call130, align 4, !dbg !13250, !tbaa !2655, !ctir !5
  %69 = load i8, i8* %keep_owner, align 1, !dbg !13252, !tbaa !2762
  %tobool131 = trunc i8 %69 to i1, !dbg !13252
  %70 = zext i1 %tobool131 to i64, !dbg !13252
  %cond133 = select i1 %tobool131, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.297, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3.298, i64 0, i64 0), !dbg !13252
  %call134 = call i8* @gettext(i8* %cond133) #9, !dbg !13252
  %71 = load i8*, i8** %dir.addr, align 8, !dbg !13253, !tbaa !2668
  %call135 = call i8* @quote(i8* %71), !dbg !13254
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call134, i8* %call135), !dbg !13255
  store i1 false, i1* %retval, align 1, !dbg !13256
  br label %return, !dbg !13256

if.end136:                                        ; preds = %land.lhs.true125, %land.lhs.true123, %lor.lhs.false
  br label %if.end137

if.end137:                                        ; preds = %if.end136
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end95
  br label %if.end139, !dbg !13257

if.end139:                                        ; preds = %if.end138, %if.end14
  br label %if.end140, !dbg !13258

if.end140:                                        ; preds = %if.end139, %cond.end
  %72 = load i32, i32* %mkdir_errno, align 4, !dbg !13259, !tbaa !2655
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.299, i64 0, i64 0)) #9, !dbg !13260
  %73 = load i8*, i8** %dir.addr, align 8, !dbg !13261, !tbaa !2668
  %call142 = call i8* @quote(i8* %73), !dbg !13262
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* %call141, i8* %call142), !dbg !13263
  store i1 false, i1* %retval, align 1, !dbg !13264
  br label %return, !dbg !13264

return:                                           ; preds = %if.end140, %if.then129, %if.then117, %if.then101, %if.then89, %if.then76, %if.then62, %if.then11
  %74 = load i1, i1* %retval, align 1, !dbg !13265
  ret i1 %74, !dbg !13265
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_compile(i8* %mode_string) #4 !dbg !13266 !ctir !1764 {
entry:
  %retval = alloca %struct.mode_change*, align 8, !ctir !1766
  %mode_string.addr = alloca i8*, align 8, !ctir !177
  %mc = alloca %struct.mode_change*, align 8, !ctir !1766
  %used = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !177
  %octal_mode = alloca i32, align 4, !ctir !67
  %mode = alloca i32, align 4, !ctir !136
  %mentioned = alloca i32, align 4, !ctir !136
  %needed = alloca i64, align 8, !ctir !52
  %affected = alloca i32, align 4, !ctir !136
  %op = alloca i8, align 1, !ctir !8
  %value = alloca i32, align 4, !ctir !136
  %mentioned51 = alloca i32, align 4, !ctir !136
  %flag = alloca i8, align 1, !ctir !8
  %change = alloca %struct.mode_change*, align 8, !ctir !1766
  %octal_mode54 = alloca i32, align 4, !ctir !67
  store i8* %mode_string, i8** %mode_string.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %mode_string.addr, metadata !13267, metadata !DIExpression()), !dbg !13268
  call void @llvm.dbg.declare(metadata %struct.mode_change** %mc, metadata !13269, metadata !DIExpression()), !dbg !13270
  call void @llvm.dbg.declare(metadata i64* %used, metadata !13271, metadata !DIExpression()), !dbg !13272
  store i64 0, i64* %used, align 8, !dbg !13272, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13273, metadata !DIExpression()), !dbg !13274
  %0 = load i8*, i8** %mode_string.addr, align 8, !dbg !13275, !tbaa !2668
  %1 = load i8, i8* %0, align 1, !dbg !13277, !tbaa !3315, !ctir !178
  %conv = sext i8 %1 to i32, !dbg !13277
  %cmp = icmp sle i32 48, %conv, !dbg !13278
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !13279

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %mode_string.addr, align 8, !dbg !13280, !tbaa !2668
  %3 = load i8, i8* %2, align 1, !dbg !13281, !tbaa !3315, !ctir !178
  %conv2 = sext i8 %3 to i32, !dbg !13281
  %cmp3 = icmp slt i32 %conv2, 56, !dbg !13282
  br i1 %cmp3, label %if.then, label %if.end21, !dbg !13283

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %octal_mode, metadata !13284, metadata !DIExpression()), !dbg !13286
  store i32 0, i32* %octal_mode, align 4, !dbg !13286, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.declare(metadata i32* %mentioned, metadata !13289, metadata !DIExpression()), !dbg !13290
  %4 = load i8*, i8** %mode_string.addr, align 8, !dbg !13291, !tbaa !2668
  store i8* %4, i8** %p, align 8, !dbg !13292, !tbaa !2668
  br label %do.body, !dbg !13293

do.body:                                          ; preds = %land.end, %if.then
  %5 = load i32, i32* %octal_mode, align 4, !dbg !13294, !tbaa !2655
  %mul = mul i32 8, %5, !dbg !13296
  %6 = load i8*, i8** %p, align 8, !dbg !13297, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !13297
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13297, !tbaa !2668
  %7 = load i8, i8* %6, align 1, !dbg !13298, !tbaa !3315, !ctir !178
  %conv5 = sext i8 %7 to i32, !dbg !13298
  %add = add i32 %mul, %conv5, !dbg !13299
  %sub = sub i32 %add, 48, !dbg !13300
  store i32 %sub, i32* %octal_mode, align 4, !dbg !13301, !tbaa !2655
  %8 = load i32, i32* %octal_mode, align 4, !dbg !13302, !tbaa !2655
  %cmp6 = icmp ult i32 4095, %8, !dbg !13304
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !13305

if.then8:                                         ; preds = %do.body
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13306
  br label %return, !dbg !13306

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13307

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %p, align 8, !dbg !13308, !tbaa !2668
  %10 = load i8, i8* %9, align 1, !dbg !13309, !tbaa !3315, !ctir !178
  %conv9 = sext i8 %10 to i32, !dbg !13309
  %cmp10 = icmp sle i32 48, %conv9, !dbg !13310
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !13311

land.rhs:                                         ; preds = %do.cond
  %11 = load i8*, i8** %p, align 8, !dbg !13312, !tbaa !2668
  %12 = load i8, i8* %11, align 1, !dbg !13313, !tbaa !3315, !ctir !178
  %conv12 = sext i8 %12 to i32, !dbg !13313
  %cmp13 = icmp slt i32 %conv12, 56, !dbg !13314
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %13 = phi i1 [ false, %do.cond ], [ %cmp13, %land.rhs ], !dbg !13315
  br i1 %13, label %do.body, label %do.end, !dbg !13307, !llvm.loop !13316

do.end:                                           ; preds = %land.end
  %14 = load i8*, i8** %p, align 8, !dbg !13318, !tbaa !2668
  %15 = load i8, i8* %14, align 1, !dbg !13320, !tbaa !3315, !ctir !178
  %tobool = icmp ne i8 %15, 0, !dbg !13320
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !13321

if.then15:                                        ; preds = %do.end
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13322
  br label %return, !dbg !13322

if.end16:                                         ; preds = %do.end
  %16 = load i32, i32* %octal_mode, align 4, !dbg !13323, !tbaa !2655
  %call = call i32 @octal_to_mode(i32 %16), !dbg !13324
  store i32 %call, i32* %mode, align 4, !dbg !13325, !tbaa !2655
  %17 = load i8*, i8** %p, align 8, !dbg !13326, !tbaa !2668
  %18 = load i8*, i8** %mode_string.addr, align 8, !dbg !13327, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !13328
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !13328
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13328
  %cmp17 = icmp slt i64 %sub.ptr.sub, 5, !dbg !13329
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !13326

cond.true:                                        ; preds = %if.end16
  %19 = load i32, i32* %mode, align 4, !dbg !13330, !tbaa !2655
  %and = and i32 %19, 3072, !dbg !13331
  %or = or i32 %and, 512, !dbg !13332
  %or19 = or i32 %or, 511, !dbg !13333
  br label %cond.end, !dbg !13326

cond.false:                                       ; preds = %if.end16
  br label %cond.end, !dbg !13326

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or19, %cond.true ], [ 4095, %cond.false ], !dbg !13326
  store i32 %cond, i32* %mentioned, align 4, !dbg !13334, !tbaa !2655
  %20 = load i32, i32* %mode, align 4, !dbg !13335, !tbaa !2655
  %21 = load i32, i32* %mentioned, align 4, !dbg !13336, !tbaa !2655
  %call20 = call %struct.mode_change* @make_node_op_equals(i32 %20, i32 %21), !dbg !13337
  store %struct.mode_change* %call20, %struct.mode_change** %retval, align 8, !dbg !13338
  br label %return, !dbg !13338

if.end21:                                         ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i64* %needed, metadata !13339, metadata !DIExpression()), !dbg !13341
  store i64 1, i64* %needed, align 8, !dbg !13341, !tbaa !3308
  %22 = load i8*, i8** %mode_string.addr, align 8, !dbg !13342, !tbaa !2668
  store i8* %22, i8** %p, align 8, !dbg !13344, !tbaa !2668
  br label %for.cond, !dbg !13345

for.cond:                                         ; preds = %for.inc, %if.end21
  %23 = load i8*, i8** %p, align 8, !dbg !13346, !tbaa !2668
  %24 = load i8, i8* %23, align 1, !dbg !13348, !tbaa !3315, !ctir !178
  %tobool22 = icmp ne i8 %24, 0, !dbg !13349
  br i1 %tobool22, label %for.body, label %for.end, !dbg !13349

for.body:                                         ; preds = %for.cond
  %25 = load i8*, i8** %p, align 8, !dbg !13350, !tbaa !2668
  %26 = load i8, i8* %25, align 1, !dbg !13351, !tbaa !3315, !ctir !178
  %conv23 = sext i8 %26 to i32, !dbg !13351
  %cmp24 = icmp eq i32 %conv23, 61, !dbg !13352
  br i1 %cmp24, label %lor.end, label %lor.lhs.false, !dbg !13353

lor.lhs.false:                                    ; preds = %for.body
  %27 = load i8*, i8** %p, align 8, !dbg !13354, !tbaa !2668
  %28 = load i8, i8* %27, align 1, !dbg !13355, !tbaa !3315, !ctir !178
  %conv26 = sext i8 %28 to i32, !dbg !13355
  %cmp27 = icmp eq i32 %conv26, 43, !dbg !13356
  br i1 %cmp27, label %lor.end, label %lor.rhs, !dbg !13357

lor.rhs:                                          ; preds = %lor.lhs.false
  %29 = load i8*, i8** %p, align 8, !dbg !13358, !tbaa !2668
  %30 = load i8, i8* %29, align 1, !dbg !13359, !tbaa !3315, !ctir !178
  %conv29 = sext i8 %30 to i32, !dbg !13359
  %cmp30 = icmp eq i32 %conv29, 45, !dbg !13360
  br label %lor.end, !dbg !13357

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.body
  %31 = phi i1 [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp30, %lor.rhs ]
  %lor.ext = zext i1 %31 to i32, !dbg !13357
  %conv32 = sext i32 %lor.ext to i64, !dbg !13361
  %32 = load i64, i64* %needed, align 8, !dbg !13362, !tbaa !3308
  %add33 = add i64 %32, %conv32, !dbg !13362
  store i64 %add33, i64* %needed, align 8, !dbg !13362, !tbaa !3308
  br label %for.inc, !dbg !13363

for.inc:                                          ; preds = %lor.end
  %33 = load i8*, i8** %p, align 8, !dbg !13364, !tbaa !2668
  %incdec.ptr34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !13364
  store i8* %incdec.ptr34, i8** %p, align 8, !dbg !13364, !tbaa !2668
  br label %for.cond, !dbg !13365, !llvm.loop !13366

for.end:                                          ; preds = %for.cond
  %34 = load i64, i64* %needed, align 8, !dbg !13368, !tbaa !3308
  %call35 = call noalias i8* @xnmalloc(i64 %34, i64 16), !dbg !13369
  %35 = bitcast i8* %call35 to %struct.mode_change*, !dbg !13369
  store %struct.mode_change* %35, %struct.mode_change** %mc, align 8, !dbg !13370, !tbaa !2668
  %36 = load i8*, i8** %mode_string.addr, align 8, !dbg !13371, !tbaa !2668
  store i8* %36, i8** %p, align 8, !dbg !13373, !tbaa !2668
  br label %for.cond36, !dbg !13374

for.cond36:                                       ; preds = %for.inc147, %for.end
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13375, metadata !DIExpression()), !dbg !13378
  store i32 0, i32* %affected, align 4, !dbg !13378, !tbaa !2655
  br label %for.cond37, !dbg !13379

for.cond37:                                       ; preds = %for.inc47, %for.cond36
  %37 = load i8*, i8** %p, align 8, !dbg !13380, !tbaa !2668
  %38 = load i8, i8* %37, align 1, !dbg !13383, !tbaa !3315, !ctir !178
  %conv38 = sext i8 %38 to i32, !dbg !13383
  switch i32 %conv38, label %sw.default [
    i32 117, label %sw.bb
    i32 103, label %sw.bb40
    i32 111, label %sw.bb42
    i32 97, label %sw.bb44
    i32 61, label %sw.bb46
    i32 43, label %sw.bb46
    i32 45, label %sw.bb46
  ], !dbg !13384

sw.default:                                       ; preds = %for.cond37
  br label %invalid, !dbg !13385

sw.bb:                                            ; preds = %for.cond37
  %39 = load i32, i32* %affected, align 4, !dbg !13387, !tbaa !2655
  %or39 = or i32 %39, 2496, !dbg !13387
  store i32 %or39, i32* %affected, align 4, !dbg !13387, !tbaa !2655
  br label %sw.epilog, !dbg !13388

sw.bb40:                                          ; preds = %for.cond37
  %40 = load i32, i32* %affected, align 4, !dbg !13389, !tbaa !2655
  %or41 = or i32 %40, 1080, !dbg !13389
  store i32 %or41, i32* %affected, align 4, !dbg !13389, !tbaa !2655
  br label %sw.epilog, !dbg !13390

sw.bb42:                                          ; preds = %for.cond37
  %41 = load i32, i32* %affected, align 4, !dbg !13391, !tbaa !2655
  %or43 = or i32 %41, 519, !dbg !13391
  store i32 %or43, i32* %affected, align 4, !dbg !13391, !tbaa !2655
  br label %sw.epilog, !dbg !13392

sw.bb44:                                          ; preds = %for.cond37
  %42 = load i32, i32* %affected, align 4, !dbg !13393, !tbaa !2655
  %or45 = or i32 %42, 4095, !dbg !13393
  store i32 %or45, i32* %affected, align 4, !dbg !13393, !tbaa !2655
  br label %sw.epilog, !dbg !13394

sw.bb46:                                          ; preds = %for.cond37, %for.cond37, %for.cond37
  br label %no_more_affected, !dbg !13395

sw.epilog:                                        ; preds = %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb
  br label %for.inc47, !dbg !13396

for.inc47:                                        ; preds = %sw.epilog
  %43 = load i8*, i8** %p, align 8, !dbg !13397, !tbaa !2668
  %incdec.ptr48 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !13397
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !13397, !tbaa !2668
  br label %for.cond37, !dbg !13398, !llvm.loop !13399

no_more_affected:                                 ; preds = %sw.bb46
  call void @llvm.dbg.label(metadata !13402), !dbg !13403
  br label %do.body49, !dbg !13404

do.body49:                                        ; preds = %lor.end139, %no_more_affected
  call void @llvm.dbg.declare(metadata i8* %op, metadata !13405, metadata !DIExpression()), !dbg !13407
  %44 = load i8*, i8** %p, align 8, !dbg !13408, !tbaa !2668
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !13408
  store i8* %incdec.ptr50, i8** %p, align 8, !dbg !13408, !tbaa !2668
  %45 = load i8, i8* %44, align 1, !dbg !13409, !tbaa !3315, !ctir !178
  store i8 %45, i8* %op, align 1, !dbg !13407, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13410, metadata !DIExpression()), !dbg !13411
  call void @llvm.dbg.declare(metadata i32* %mentioned51, metadata !13412, metadata !DIExpression()), !dbg !13413
  store i32 0, i32* %mentioned51, align 4, !dbg !13413, !tbaa !2655
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !13414, metadata !DIExpression()), !dbg !13415
  store i8 3, i8* %flag, align 1, !dbg !13415, !tbaa !3315
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !13416, metadata !DIExpression()), !dbg !13417
  %46 = load i8*, i8** %p, align 8, !dbg !13418, !tbaa !2668
  %47 = load i8, i8* %46, align 1, !dbg !13419, !tbaa !3315, !ctir !178
  %conv52 = sext i8 %47 to i32, !dbg !13419
  switch i32 %conv52, label %sw.default92 [
    i32 48, label %sw.bb53
    i32 49, label %sw.bb53
    i32 50, label %sw.bb53
    i32 51, label %sw.bb53
    i32 52, label %sw.bb53
    i32 53, label %sw.bb53
    i32 54, label %sw.bb53
    i32 55, label %sw.bb53
    i32 117, label %sw.bb86
    i32 103, label %sw.bb88
    i32 111, label %sw.bb90
  ], !dbg !13420

sw.bb53:                                          ; preds = %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49
  call void @llvm.dbg.declare(metadata i32* %octal_mode54, metadata !13421, metadata !DIExpression()), !dbg !13424
  store i32 0, i32* %octal_mode54, align 4, !dbg !13424, !tbaa !2655
  br label %do.body55, !dbg !13425

do.body55:                                        ; preds = %land.end73, %sw.bb53
  %48 = load i32, i32* %octal_mode54, align 4, !dbg !13426, !tbaa !2655
  %mul56 = mul i32 8, %48, !dbg !13428
  %49 = load i8*, i8** %p, align 8, !dbg !13429, !tbaa !2668
  %incdec.ptr57 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !13429
  store i8* %incdec.ptr57, i8** %p, align 8, !dbg !13429, !tbaa !2668
  %50 = load i8, i8* %49, align 1, !dbg !13430, !tbaa !3315, !ctir !178
  %conv58 = sext i8 %50 to i32, !dbg !13430
  %add59 = add i32 %mul56, %conv58, !dbg !13431
  %sub60 = sub i32 %add59, 48, !dbg !13432
  store i32 %sub60, i32* %octal_mode54, align 4, !dbg !13433, !tbaa !2655
  %51 = load i32, i32* %octal_mode54, align 4, !dbg !13434, !tbaa !2655
  %cmp61 = icmp ult i32 4095, %51, !dbg !13436
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !13437

if.then63:                                        ; preds = %do.body55
  br label %invalid, !dbg !13438

if.end64:                                         ; preds = %do.body55
  br label %do.cond65, !dbg !13439

do.cond65:                                        ; preds = %if.end64
  %52 = load i8*, i8** %p, align 8, !dbg !13440, !tbaa !2668
  %53 = load i8, i8* %52, align 1, !dbg !13441, !tbaa !3315, !ctir !178
  %conv66 = sext i8 %53 to i32, !dbg !13441
  %cmp67 = icmp sle i32 48, %conv66, !dbg !13442
  br i1 %cmp67, label %land.rhs69, label %land.end73, !dbg !13443

land.rhs69:                                       ; preds = %do.cond65
  %54 = load i8*, i8** %p, align 8, !dbg !13444, !tbaa !2668
  %55 = load i8, i8* %54, align 1, !dbg !13445, !tbaa !3315, !ctir !178
  %conv70 = sext i8 %55 to i32, !dbg !13445
  %cmp71 = icmp slt i32 %conv70, 56, !dbg !13446
  br label %land.end73

land.end73:                                       ; preds = %land.rhs69, %do.cond65
  %56 = phi i1 [ false, %do.cond65 ], [ %cmp71, %land.rhs69 ], !dbg !13447
  br i1 %56, label %do.body55, label %do.end74, !dbg !13439, !llvm.loop !13448

do.end74:                                         ; preds = %land.end73
  %57 = load i32, i32* %affected, align 4, !dbg !13450, !tbaa !2655
  %tobool75 = icmp ne i32 %57, 0, !dbg !13450
  br i1 %tobool75, label %if.then83, label %lor.lhs.false76, !dbg !13452

lor.lhs.false76:                                  ; preds = %do.end74
  %58 = load i8*, i8** %p, align 8, !dbg !13453, !tbaa !2668
  %59 = load i8, i8* %58, align 1, !dbg !13454, !tbaa !3315, !ctir !178
  %conv77 = sext i8 %59 to i32, !dbg !13454
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !13454
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !13455

land.lhs.true79:                                  ; preds = %lor.lhs.false76
  %60 = load i8*, i8** %p, align 8, !dbg !13456, !tbaa !2668
  %61 = load i8, i8* %60, align 1, !dbg !13457, !tbaa !3315, !ctir !178
  %conv80 = sext i8 %61 to i32, !dbg !13457
  %cmp81 = icmp ne i32 %conv80, 44, !dbg !13458
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !13459

if.then83:                                        ; preds = %land.lhs.true79, %do.end74
  br label %invalid, !dbg !13460

if.end84:                                         ; preds = %land.lhs.true79, %lor.lhs.false76
  store i32 4095, i32* %mentioned51, align 4, !dbg !13461, !tbaa !2655
  store i32 4095, i32* %affected, align 4, !dbg !13462, !tbaa !2655
  %62 = load i32, i32* %octal_mode54, align 4, !dbg !13463, !tbaa !2655
  %call85 = call i32 @octal_to_mode(i32 %62), !dbg !13464
  store i32 %call85, i32* %value, align 4, !dbg !13465, !tbaa !2655
  store i8 1, i8* %flag, align 1, !dbg !13466, !tbaa !3315
  br label %sw.epilog110, !dbg !13467

sw.bb86:                                          ; preds = %do.body49
  store i32 448, i32* %value, align 4, !dbg !13468, !tbaa !2655
  %63 = load i8*, i8** %p, align 8, !dbg !13469, !tbaa !2668
  %incdec.ptr87 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !13469
  store i8* %incdec.ptr87, i8** %p, align 8, !dbg !13469, !tbaa !2668
  br label %sw.epilog110, !dbg !13470

sw.bb88:                                          ; preds = %do.body49
  store i32 56, i32* %value, align 4, !dbg !13471, !tbaa !2655
  %64 = load i8*, i8** %p, align 8, !dbg !13472, !tbaa !2668
  %incdec.ptr89 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !13472
  store i8* %incdec.ptr89, i8** %p, align 8, !dbg !13472, !tbaa !2668
  br label %sw.epilog110, !dbg !13473

sw.bb90:                                          ; preds = %do.body49
  store i32 7, i32* %value, align 4, !dbg !13474, !tbaa !2655
  %65 = load i8*, i8** %p, align 8, !dbg !13475, !tbaa !2668
  %incdec.ptr91 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !13475
  store i8* %incdec.ptr91, i8** %p, align 8, !dbg !13475, !tbaa !2668
  br label %sw.epilog110, !dbg !13476

sw.default92:                                     ; preds = %do.body49
  store i32 0, i32* %value, align 4, !dbg !13477, !tbaa !2655
  store i8 1, i8* %flag, align 1, !dbg !13478, !tbaa !3315
  br label %for.cond93, !dbg !13479

for.cond93:                                       ; preds = %for.inc108, %sw.default92
  %66 = load i8*, i8** %p, align 8, !dbg !13480, !tbaa !2668
  %67 = load i8, i8* %66, align 1, !dbg !13483, !tbaa !3315, !ctir !178
  %conv94 = sext i8 %67 to i32, !dbg !13483
  switch i32 %conv94, label %sw.default106 [
    i32 114, label %sw.bb95
    i32 119, label %sw.bb97
    i32 120, label %sw.bb99
    i32 88, label %sw.bb101
    i32 115, label %sw.bb102
    i32 116, label %sw.bb104
  ], !dbg !13484

sw.bb95:                                          ; preds = %for.cond93
  %68 = load i32, i32* %value, align 4, !dbg !13485, !tbaa !2655
  %or96 = or i32 %68, 292, !dbg !13485
  store i32 %or96, i32* %value, align 4, !dbg !13485, !tbaa !2655
  br label %sw.epilog107, !dbg !13487

sw.bb97:                                          ; preds = %for.cond93
  %69 = load i32, i32* %value, align 4, !dbg !13488, !tbaa !2655
  %or98 = or i32 %69, 146, !dbg !13488
  store i32 %or98, i32* %value, align 4, !dbg !13488, !tbaa !2655
  br label %sw.epilog107, !dbg !13489

sw.bb99:                                          ; preds = %for.cond93
  %70 = load i32, i32* %value, align 4, !dbg !13490, !tbaa !2655
  %or100 = or i32 %70, 73, !dbg !13490
  store i32 %or100, i32* %value, align 4, !dbg !13490, !tbaa !2655
  br label %sw.epilog107, !dbg !13491

sw.bb101:                                         ; preds = %for.cond93
  store i8 2, i8* %flag, align 1, !dbg !13492, !tbaa !3315
  br label %sw.epilog107, !dbg !13493

sw.bb102:                                         ; preds = %for.cond93
  %71 = load i32, i32* %value, align 4, !dbg !13494, !tbaa !2655
  %or103 = or i32 %71, 3072, !dbg !13494
  store i32 %or103, i32* %value, align 4, !dbg !13494, !tbaa !2655
  br label %sw.epilog107, !dbg !13495

sw.bb104:                                         ; preds = %for.cond93
  %72 = load i32, i32* %value, align 4, !dbg !13496, !tbaa !2655
  %or105 = or i32 %72, 512, !dbg !13496
  store i32 %or105, i32* %value, align 4, !dbg !13496, !tbaa !2655
  br label %sw.epilog107, !dbg !13497

sw.default106:                                    ; preds = %for.cond93
  br label %no_more_values, !dbg !13498

sw.epilog107:                                     ; preds = %sw.bb104, %sw.bb102, %sw.bb101, %sw.bb99, %sw.bb97, %sw.bb95
  br label %for.inc108, !dbg !13499

for.inc108:                                       ; preds = %sw.epilog107
  %73 = load i8*, i8** %p, align 8, !dbg !13500, !tbaa !2668
  %incdec.ptr109 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !13500
  store i8* %incdec.ptr109, i8** %p, align 8, !dbg !13500, !tbaa !2668
  br label %for.cond93, !dbg !13501, !llvm.loop !13502

no_more_values:                                   ; preds = %sw.default106
  call void @llvm.dbg.label(metadata !13505), !dbg !13506
  br label %sw.epilog110, !dbg !13507

sw.epilog110:                                     ; preds = %no_more_values, %sw.bb90, %sw.bb88, %sw.bb86, %if.end84
  %74 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13508, !tbaa !2668
  %75 = load i64, i64* %used, align 8, !dbg !13509, !tbaa !3308
  %inc = add i64 %75, 1, !dbg !13509
  store i64 %inc, i64* %used, align 8, !dbg !13509, !tbaa !3308
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %74, i64 %75, !dbg !13508, !ctir !1766
  store %struct.mode_change* %arrayidx, %struct.mode_change** %change, align 8, !dbg !13510, !tbaa !2668
  %76 = load i8, i8* %op, align 1, !dbg !13511, !tbaa !3315
  %77 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13512, !tbaa !2668
  %op111 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %77, i32 0, i32 0, !dbg !13513, !ctir !1767
  store i8 %76, i8* %op111, align 4, !dbg !13514, !tbaa !13515, !ctir !8
  %78 = load i8, i8* %flag, align 1, !dbg !13517, !tbaa !3315
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13518, !tbaa !2668
  %flag112 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %79, i32 0, i32 1, !dbg !13519, !ctir !1767
  store i8 %78, i8* %flag112, align 1, !dbg !13520, !tbaa !13521, !ctir !8
  %80 = load i32, i32* %affected, align 4, !dbg !13522, !tbaa !2655
  %81 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13523, !tbaa !2668
  %affected113 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %81, i32 0, i32 2, !dbg !13524, !ctir !1767
  store i32 %80, i32* %affected113, align 4, !dbg !13525, !tbaa !13526, !ctir !136
  %82 = load i32, i32* %value, align 4, !dbg !13527, !tbaa !2655
  %83 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13528, !tbaa !2668
  %value114 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %83, i32 0, i32 3, !dbg !13529, !ctir !1767
  store i32 %82, i32* %value114, align 4, !dbg !13530, !tbaa !13531, !ctir !136
  %84 = load i32, i32* %mentioned51, align 4, !dbg !13532, !tbaa !2655
  %tobool115 = icmp ne i32 %84, 0, !dbg !13532
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13532

cond.true116:                                     ; preds = %sw.epilog110
  %85 = load i32, i32* %mentioned51, align 4, !dbg !13533, !tbaa !2655
  br label %cond.end124, !dbg !13532

cond.false117:                                    ; preds = %sw.epilog110
  %86 = load i32, i32* %affected, align 4, !dbg !13534, !tbaa !2655
  %tobool118 = icmp ne i32 %86, 0, !dbg !13534
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !13534

cond.true119:                                     ; preds = %cond.false117
  %87 = load i32, i32* %affected, align 4, !dbg !13535, !tbaa !2655
  %88 = load i32, i32* %value, align 4, !dbg !13536, !tbaa !2655
  %and120 = and i32 %87, %88, !dbg !13537
  br label %cond.end122, !dbg !13534

cond.false121:                                    ; preds = %cond.false117
  %89 = load i32, i32* %value, align 4, !dbg !13538, !tbaa !2655
  br label %cond.end122, !dbg !13534

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi i32 [ %and120, %cond.true119 ], [ %89, %cond.false121 ], !dbg !13534
  br label %cond.end124, !dbg !13532

cond.end124:                                      ; preds = %cond.end122, %cond.true116
  %cond125 = phi i32 [ %85, %cond.true116 ], [ %cond123, %cond.end122 ], !dbg !13532
  %90 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13539, !tbaa !2668
  %mentioned126 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %90, i32 0, i32 4, !dbg !13540, !ctir !1767
  store i32 %cond125, i32* %mentioned126, align 4, !dbg !13541, !tbaa !13542, !ctir !136
  br label %do.cond127, !dbg !13543

do.cond127:                                       ; preds = %cond.end124
  %91 = load i8*, i8** %p, align 8, !dbg !13544, !tbaa !2668
  %92 = load i8, i8* %91, align 1, !dbg !13545, !tbaa !3315, !ctir !178
  %conv128 = sext i8 %92 to i32, !dbg !13545
  %cmp129 = icmp eq i32 %conv128, 61, !dbg !13546
  br i1 %cmp129, label %lor.end139, label %lor.lhs.false131, !dbg !13547

lor.lhs.false131:                                 ; preds = %do.cond127
  %93 = load i8*, i8** %p, align 8, !dbg !13548, !tbaa !2668
  %94 = load i8, i8* %93, align 1, !dbg !13549, !tbaa !3315, !ctir !178
  %conv132 = sext i8 %94 to i32, !dbg !13549
  %cmp133 = icmp eq i32 %conv132, 43, !dbg !13550
  br i1 %cmp133, label %lor.end139, label %lor.rhs135, !dbg !13551

lor.rhs135:                                       ; preds = %lor.lhs.false131
  %95 = load i8*, i8** %p, align 8, !dbg !13552, !tbaa !2668
  %96 = load i8, i8* %95, align 1, !dbg !13553, !tbaa !3315, !ctir !178
  %conv136 = sext i8 %96 to i32, !dbg !13553
  %cmp137 = icmp eq i32 %conv136, 45, !dbg !13554
  br label %lor.end139, !dbg !13551

lor.end139:                                       ; preds = %lor.rhs135, %lor.lhs.false131, %do.cond127
  %97 = phi i1 [ true, %lor.lhs.false131 ], [ true, %do.cond127 ], [ %cmp137, %lor.rhs135 ]
  br i1 %97, label %do.body49, label %do.end141, !dbg !13543, !llvm.loop !13555

do.end141:                                        ; preds = %lor.end139
  %98 = load i8*, i8** %p, align 8, !dbg !13557, !tbaa !2668
  %99 = load i8, i8* %98, align 1, !dbg !13559, !tbaa !3315, !ctir !178
  %conv142 = sext i8 %99 to i32, !dbg !13559
  %cmp143 = icmp ne i32 %conv142, 44, !dbg !13560
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !13561

if.then145:                                       ; preds = %do.end141
  br label %for.end149, !dbg !13562

if.end146:                                        ; preds = %do.end141
  br label %for.inc147, !dbg !13563

for.inc147:                                       ; preds = %if.end146
  %100 = load i8*, i8** %p, align 8, !dbg !13564, !tbaa !2668
  %incdec.ptr148 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !13564
  store i8* %incdec.ptr148, i8** %p, align 8, !dbg !13564, !tbaa !2668
  br label %for.cond36, !dbg !13565, !llvm.loop !13566

for.end149:                                       ; preds = %if.then145
  %101 = load i8*, i8** %p, align 8, !dbg !13569, !tbaa !2668
  %102 = load i8, i8* %101, align 1, !dbg !13571, !tbaa !3315, !ctir !178
  %conv150 = sext i8 %102 to i32, !dbg !13571
  %cmp151 = icmp eq i32 %conv150, 0, !dbg !13572
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !13573

if.then153:                                       ; preds = %for.end149
  %103 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13574, !tbaa !2668
  %104 = load i64, i64* %used, align 8, !dbg !13576, !tbaa !3308
  %arrayidx154 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %103, i64 %104, !dbg !13574, !ctir !1766
  %flag155 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx154, i32 0, i32 1, !dbg !13577, !ctir !1767
  store i8 0, i8* %flag155, align 1, !dbg !13578, !tbaa !13521, !ctir !8
  %105 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13579, !tbaa !2668
  store %struct.mode_change* %105, %struct.mode_change** %retval, align 8, !dbg !13580
  br label %return, !dbg !13580

if.end156:                                        ; preds = %for.end149
  br label %invalid, !dbg !13581

invalid:                                          ; preds = %if.end156, %if.then83, %if.then63, %sw.default
  call void @llvm.dbg.label(metadata !13582), !dbg !13583
  %106 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13584, !tbaa !2668
  %107 = bitcast %struct.mode_change* %106 to i8*, !dbg !13584
  call void @free(i8* %107) #9, !dbg !13585
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13586
  br label %return, !dbg !13586

return:                                           ; preds = %invalid, %if.then153, %cond.end, %if.then15, %if.then8
  %108 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13587
  ret %struct.mode_change* %108, !dbg !13587
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @octal_to_mode(i32 %octal) #4 !dbg !13588 !ctir !1780 {
entry:
  %octal.addr = alloca i32, align 4, !ctir !67
  store i32 %octal, i32* %octal.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %octal.addr, metadata !13589, metadata !DIExpression()), !dbg !13590
  %0 = load i32, i32* %octal.addr, align 4, !dbg !13591, !tbaa !2655
  ret i32 %0, !dbg !13592
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.mode_change* @make_node_op_equals(i32 %new_mode, i32 %mentioned) #4 !dbg !13593 !ctir !1782 {
entry:
  %new_mode.addr = alloca i32, align 4, !ctir !136
  %mentioned.addr = alloca i32, align 4, !ctir !136
  %p = alloca %struct.mode_change*, align 8, !ctir !1766
  store i32 %new_mode, i32* %new_mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %new_mode.addr, metadata !13594, metadata !DIExpression()), !dbg !13595
  store i32 %mentioned, i32* %mentioned.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mentioned.addr, metadata !13596, metadata !DIExpression()), !dbg !13597
  call void @llvm.dbg.declare(metadata %struct.mode_change** %p, metadata !13598, metadata !DIExpression()), !dbg !13599
  %call = call noalias i8* @xmalloc(i64 32), !dbg !13600
  %0 = bitcast i8* %call to %struct.mode_change*, !dbg !13600
  store %struct.mode_change* %0, %struct.mode_change** %p, align 8, !dbg !13599, !tbaa !2668
  %1 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13601, !tbaa !2668
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 0, !dbg !13602, !ctir !1767
  store i8 61, i8* %op, align 4, !dbg !13603, !tbaa !13515, !ctir !8
  %2 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13604, !tbaa !2668
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %2, i32 0, i32 1, !dbg !13605, !ctir !1767
  store i8 1, i8* %flag, align 1, !dbg !13606, !tbaa !13521, !ctir !8
  %3 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13607, !tbaa !2668
  %affected = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13608, !ctir !1767
  store i32 4095, i32* %affected, align 4, !dbg !13609, !tbaa !13526, !ctir !136
  %4 = load i32, i32* %new_mode.addr, align 4, !dbg !13610, !tbaa !2655
  %5 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13611, !tbaa !2668
  %value = getelementptr inbounds %struct.mode_change, %struct.mode_change* %5, i32 0, i32 3, !dbg !13612, !ctir !1767
  store i32 %4, i32* %value, align 4, !dbg !13613, !tbaa !13531, !ctir !136
  %6 = load i32, i32* %mentioned.addr, align 4, !dbg !13614, !tbaa !2655
  %7 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13615, !tbaa !2668
  %mentioned1 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13616, !ctir !1767
  store i32 %6, i32* %mentioned1, align 4, !dbg !13617, !tbaa !13542, !ctir !136
  %8 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13618, !tbaa !2668
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %8, i64 1, !dbg !13618, !ctir !1766
  %flag2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx, i32 0, i32 1, !dbg !13619, !ctir !1767
  store i8 0, i8* %flag2, align 1, !dbg !13620, !tbaa !13521, !ctir !8
  %9 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13621, !tbaa !2668
  ret %struct.mode_change* %9, !dbg !13622
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_create_from_ref(i8* %ref_file) #4 !dbg !13623 !ctir !1764 {
entry:
  %retval = alloca %struct.mode_change*, align 8, !ctir !1766
  %ref_file.addr = alloca i8*, align 8, !ctir !177
  %ref_stats = alloca %struct.stat, align 8, !ctir !13624
  store i8* %ref_file, i8** %ref_file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %ref_file.addr, metadata !13645, metadata !DIExpression()), !dbg !13646
  call void @llvm.dbg.declare(metadata %struct.stat* %ref_stats, metadata !13647, metadata !DIExpression()), !dbg !13648
  %0 = load i8*, i8** %ref_file.addr, align 8, !dbg !13649, !tbaa !2668
  %call = call i32 @stat(i8* %0, %struct.stat* %ref_stats) #9, !dbg !13651
  %cmp = icmp ne i32 %call, 0, !dbg !13652
  br i1 %cmp, label %if.then, label %if.end, !dbg !13653

if.then:                                          ; preds = %entry
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13654
  br label %return, !dbg !13654

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %ref_stats, i32 0, i32 3, !dbg !13655, !ctir !13624
  %1 = load i32, i32* %st_mode, align 8, !dbg !13655, !tbaa !2934, !ctir !137
  %call1 = call %struct.mode_change* @make_node_op_equals(i32 %1, i32 4095), !dbg !13656
  store %struct.mode_change* %call1, %struct.mode_change** %retval, align 8, !dbg !13657
  br label %return, !dbg !13657

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13658
  ret %struct.mode_change* %2, !dbg !13658
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mode_adjust(i32 %oldmode, i1 zeroext %dir, i32 %umask_value, %struct.mode_change* %changes, i32* %pmode_bits) #4 !dbg !13659 !ctir !1775 {
entry:
  %oldmode.addr = alloca i32, align 4, !ctir !136
  %dir.addr = alloca i8, align 1, !ctir !139
  %umask_value.addr = alloca i32, align 4, !ctir !136
  %changes.addr = alloca %struct.mode_change*, align 8, !ctir !1777
  %pmode_bits.addr = alloca i32*, align 8, !ctir !1779
  %newmode = alloca i32, align 4, !ctir !136
  %mode_bits = alloca i32, align 4, !ctir !136
  %affected = alloca i32, align 4, !ctir !136
  %omit_change = alloca i32, align 4, !ctir !136
  %value = alloca i32, align 4, !ctir !136
  %preserved = alloca i32, align 4, !ctir !136
  store i32 %oldmode, i32* %oldmode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %oldmode.addr, metadata !13660, metadata !DIExpression()), !dbg !13661
  %frombool = zext i1 %dir to i8
  store i8 %frombool, i8* %dir.addr, align 1, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !13662, metadata !DIExpression()), !dbg !13663
  store i32 %umask_value, i32* %umask_value.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %umask_value.addr, metadata !13664, metadata !DIExpression()), !dbg !13665
  store %struct.mode_change* %changes, %struct.mode_change** %changes.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.mode_change** %changes.addr, metadata !13666, metadata !DIExpression()), !dbg !13667
  store i32* %pmode_bits, i32** %pmode_bits.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32** %pmode_bits.addr, metadata !13668, metadata !DIExpression()), !dbg !13669
  call void @llvm.dbg.declare(metadata i32* %newmode, metadata !13670, metadata !DIExpression()), !dbg !13671
  %0 = load i32, i32* %oldmode.addr, align 4, !dbg !13672, !tbaa !2655
  %and = and i32 %0, 4095, !dbg !13673
  store i32 %and, i32* %newmode, align 4, !dbg !13671, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode_bits, metadata !13674, metadata !DIExpression()), !dbg !13675
  store i32 0, i32* %mode_bits, align 4, !dbg !13675, !tbaa !2655
  br label %for.cond, !dbg !13676

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13677, !tbaa !2668
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 1, !dbg !13680, !ctir !1778
  %2 = load i8, i8* %flag, align 1, !dbg !13680, !tbaa !13521, !ctir !8
  %conv = sext i8 %2 to i32, !dbg !13677
  %cmp = icmp ne i32 %conv, 0, !dbg !13681
  br i1 %cmp, label %for.body, label %for.end, !dbg !13682

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13683, metadata !DIExpression()), !dbg !13685
  %3 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13686, !tbaa !2668
  %affected2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13687, !ctir !1778
  %4 = load i32, i32* %affected2, align 4, !dbg !13687, !tbaa !13526, !ctir !136
  store i32 %4, i32* %affected, align 4, !dbg !13685, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %omit_change, metadata !13688, metadata !DIExpression()), !dbg !13689
  %5 = load i8, i8* %dir.addr, align 1, !dbg !13690, !tbaa !2762
  %tobool = trunc i8 %5 to i1, !dbg !13690
  %6 = zext i1 %tobool to i64, !dbg !13690
  %cond = select i1 %tobool, i32 3072, i32 0, !dbg !13690
  %7 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13691, !tbaa !2668
  %mentioned = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13692, !ctir !1778
  %8 = load i32, i32* %mentioned, align 4, !dbg !13692, !tbaa !13542, !ctir !136
  %neg = xor i32 %8, -1, !dbg !13693
  %and4 = and i32 %cond, %neg, !dbg !13694
  store i32 %and4, i32* %omit_change, align 4, !dbg !13689, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13695, metadata !DIExpression()), !dbg !13696
  %9 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13697, !tbaa !2668
  %value5 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %9, i32 0, i32 3, !dbg !13698, !ctir !1778
  %10 = load i32, i32* %value5, align 4, !dbg !13698, !tbaa !13531, !ctir !136
  store i32 %10, i32* %value, align 4, !dbg !13696, !tbaa !2655
  %11 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13699, !tbaa !2668
  %flag6 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %11, i32 0, i32 1, !dbg !13700, !ctir !1778
  %12 = load i8, i8* %flag6, align 1, !dbg !13700, !tbaa !13521, !ctir !8
  %conv7 = sext i8 %12 to i32, !dbg !13699
  switch i32 %conv7, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb8
    i32 2, label %sw.bb21
  ], !dbg !13701

sw.bb:                                            ; preds = %for.body
  br label %sw.epilog, !dbg !13702

sw.bb8:                                           ; preds = %for.body
  %13 = load i32, i32* %newmode, align 4, !dbg !13704, !tbaa !2655
  %14 = load i32, i32* %value, align 4, !dbg !13705, !tbaa !2655
  %and9 = and i32 %14, %13, !dbg !13705
  store i32 %and9, i32* %value, align 4, !dbg !13705, !tbaa !2655
  %15 = load i32, i32* %value, align 4, !dbg !13706, !tbaa !2655
  %and10 = and i32 %15, 292, !dbg !13707
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13706
  %16 = zext i1 %tobool11 to i64, !dbg !13706
  %cond12 = select i1 %tobool11, i32 292, i32 0, !dbg !13706
  %17 = load i32, i32* %value, align 4, !dbg !13708, !tbaa !2655
  %and13 = and i32 %17, 146, !dbg !13709
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13708
  %18 = zext i1 %tobool14 to i64, !dbg !13708
  %cond15 = select i1 %tobool14, i32 146, i32 0, !dbg !13708
  %or = or i32 %cond12, %cond15, !dbg !13710
  %19 = load i32, i32* %value, align 4, !dbg !13711, !tbaa !2655
  %and16 = and i32 %19, 73, !dbg !13712
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13711
  %20 = zext i1 %tobool17 to i64, !dbg !13711
  %cond18 = select i1 %tobool17, i32 73, i32 0, !dbg !13711
  %or19 = or i32 %or, %cond18, !dbg !13713
  %21 = load i32, i32* %value, align 4, !dbg !13714, !tbaa !2655
  %or20 = or i32 %21, %or19, !dbg !13714
  store i32 %or20, i32* %value, align 4, !dbg !13714, !tbaa !2655
  br label %sw.epilog, !dbg !13715

sw.bb21:                                          ; preds = %for.body
  %22 = load i32, i32* %newmode, align 4, !dbg !13716, !tbaa !2655
  %and22 = and i32 %22, 73, !dbg !13718
  %23 = load i8, i8* %dir.addr, align 1, !dbg !13719, !tbaa !2762
  %tobool23 = trunc i8 %23 to i1, !dbg !13719
  %conv24 = zext i1 %tobool23 to i32, !dbg !13719
  %or25 = or i32 %and22, %conv24, !dbg !13720
  %tobool26 = icmp ne i32 %or25, 0, !dbg !13720
  br i1 %tobool26, label %if.then, label %if.end, !dbg !13721

if.then:                                          ; preds = %sw.bb21
  %24 = load i32, i32* %value, align 4, !dbg !13722, !tbaa !2655
  %or27 = or i32 %24, 73, !dbg !13722
  store i32 %or27, i32* %value, align 4, !dbg !13722, !tbaa !2655
  br label %if.end, !dbg !13723

if.end:                                           ; preds = %if.then, %sw.bb21
  br label %sw.epilog, !dbg !13724

sw.epilog:                                        ; preds = %for.body, %if.end, %sw.bb8, %sw.bb
  %25 = load i32, i32* %affected, align 4, !dbg !13725, !tbaa !2655
  %tobool28 = icmp ne i32 %25, 0, !dbg !13725
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !13725

cond.true:                                        ; preds = %sw.epilog
  %26 = load i32, i32* %affected, align 4, !dbg !13726, !tbaa !2655
  br label %cond.end, !dbg !13725

cond.false:                                       ; preds = %sw.epilog
  %27 = load i32, i32* %umask_value.addr, align 4, !dbg !13727, !tbaa !2655
  %neg29 = xor i32 %27, -1, !dbg !13728
  br label %cond.end, !dbg !13725

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond30 = phi i32 [ %26, %cond.true ], [ %neg29, %cond.false ], !dbg !13725
  %28 = load i32, i32* %omit_change, align 4, !dbg !13729, !tbaa !2655
  %neg31 = xor i32 %28, -1, !dbg !13730
  %and32 = and i32 %cond30, %neg31, !dbg !13731
  %29 = load i32, i32* %value, align 4, !dbg !13732, !tbaa !2655
  %and33 = and i32 %29, %and32, !dbg !13732
  store i32 %and33, i32* %value, align 4, !dbg !13732, !tbaa !2655
  %30 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13733, !tbaa !2668
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %30, i32 0, i32 0, !dbg !13734, !ctir !1778
  %31 = load i8, i8* %op, align 4, !dbg !13734, !tbaa !13515, !ctir !8
  %conv34 = sext i8 %31 to i32, !dbg !13733
  switch i32 %conv34, label %sw.epilog55 [
    i32 61, label %sw.bb35
    i32 43, label %sw.bb48
    i32 45, label %sw.bb51
  ], !dbg !13735

sw.bb35:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %preserved, metadata !13736, metadata !DIExpression()), !dbg !13739
  %32 = load i32, i32* %affected, align 4, !dbg !13740, !tbaa !2655
  %tobool36 = icmp ne i32 %32, 0, !dbg !13740
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !13740

cond.true37:                                      ; preds = %sw.bb35
  %33 = load i32, i32* %affected, align 4, !dbg !13741, !tbaa !2655
  %neg38 = xor i32 %33, -1, !dbg !13742
  br label %cond.end40, !dbg !13740

cond.false39:                                     ; preds = %sw.bb35
  br label %cond.end40, !dbg !13740

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i32 [ %neg38, %cond.true37 ], [ 0, %cond.false39 ], !dbg !13740
  %34 = load i32, i32* %omit_change, align 4, !dbg !13743, !tbaa !2655
  %or42 = or i32 %cond41, %34, !dbg !13744
  store i32 %or42, i32* %preserved, align 4, !dbg !13739, !tbaa !2655
  %35 = load i32, i32* %preserved, align 4, !dbg !13745, !tbaa !2655
  %neg43 = xor i32 %35, -1, !dbg !13746
  %and44 = and i32 4095, %neg43, !dbg !13747
  %36 = load i32, i32* %mode_bits, align 4, !dbg !13748, !tbaa !2655
  %or45 = or i32 %36, %and44, !dbg !13748
  store i32 %or45, i32* %mode_bits, align 4, !dbg !13748, !tbaa !2655
  %37 = load i32, i32* %newmode, align 4, !dbg !13749, !tbaa !2655
  %38 = load i32, i32* %preserved, align 4, !dbg !13750, !tbaa !2655
  %and46 = and i32 %37, %38, !dbg !13751
  %39 = load i32, i32* %value, align 4, !dbg !13752, !tbaa !2655
  %or47 = or i32 %and46, %39, !dbg !13753
  store i32 %or47, i32* %newmode, align 4, !dbg !13754, !tbaa !2655
  br label %sw.epilog55, !dbg !13755

sw.bb48:                                          ; preds = %cond.end
  %40 = load i32, i32* %value, align 4, !dbg !13756, !tbaa !2655
  %41 = load i32, i32* %mode_bits, align 4, !dbg !13757, !tbaa !2655
  %or49 = or i32 %41, %40, !dbg !13757
  store i32 %or49, i32* %mode_bits, align 4, !dbg !13757, !tbaa !2655
  %42 = load i32, i32* %value, align 4, !dbg !13758, !tbaa !2655
  %43 = load i32, i32* %newmode, align 4, !dbg !13759, !tbaa !2655
  %or50 = or i32 %43, %42, !dbg !13759
  store i32 %or50, i32* %newmode, align 4, !dbg !13759, !tbaa !2655
  br label %sw.epilog55, !dbg !13760

sw.bb51:                                          ; preds = %cond.end
  %44 = load i32, i32* %value, align 4, !dbg !13761, !tbaa !2655
  %45 = load i32, i32* %mode_bits, align 4, !dbg !13762, !tbaa !2655
  %or52 = or i32 %45, %44, !dbg !13762
  store i32 %or52, i32* %mode_bits, align 4, !dbg !13762, !tbaa !2655
  %46 = load i32, i32* %value, align 4, !dbg !13763, !tbaa !2655
  %neg53 = xor i32 %46, -1, !dbg !13764
  %47 = load i32, i32* %newmode, align 4, !dbg !13765, !tbaa !2655
  %and54 = and i32 %47, %neg53, !dbg !13765
  store i32 %and54, i32* %newmode, align 4, !dbg !13765, !tbaa !2655
  br label %sw.epilog55, !dbg !13766

sw.epilog55:                                      ; preds = %cond.end, %sw.bb51, %sw.bb48, %cond.end40
  br label %for.inc, !dbg !13767

for.inc:                                          ; preds = %sw.epilog55
  %48 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13768, !tbaa !2668
  %incdec.ptr = getelementptr inbounds %struct.mode_change, %struct.mode_change* %48, i32 1, !dbg !13768
  store %struct.mode_change* %incdec.ptr, %struct.mode_change** %changes.addr, align 8, !dbg !13768, !tbaa !2668
  br label %for.cond, !dbg !13769, !llvm.loop !13770

for.end:                                          ; preds = %for.cond
  %49 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13772, !tbaa !2668
  %tobool56 = icmp ne i32* %49, null, !dbg !13772
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !13774

if.then57:                                        ; preds = %for.end
  %50 = load i32, i32* %mode_bits, align 4, !dbg !13775, !tbaa !2655
  %51 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13776, !tbaa !2668
  store i32 %50, i32* %51, align 4, !dbg !13777, !tbaa !2655, !ctir !136
  br label %if.end58, !dbg !13778

if.end58:                                         ; preds = %if.then57, %for.end
  %52 = load i32, i32* %newmode, align 4, !dbg !13779, !tbaa !2655
  ret i32 %52, !dbg !13780
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13781 !ctir !1787 {
entry:
  %retval = alloca %struct.__dirstream*, align 8, !ctir !675
  %dir_fd.addr = alloca i32, align 4, !ctir !5
  %dir.addr = alloca i8*, align 8, !ctir !177
  %extra_flags.addr = alloca i32, align 4, !ctir !5
  %pnew_fd.addr = alloca i32*, align 8, !ctir !190
  %open_flags = alloca i32, align 4, !ctir !5
  %new_fd = alloca i32, align 4, !ctir !5
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !675
  %fdopendir_errno = alloca i32, align 4, !ctir !5
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13783, metadata !DIExpression()), !dbg !13784
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13785, metadata !DIExpression()), !dbg !13786
  store i32 %extra_flags, i32* %extra_flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13787, metadata !DIExpression()), !dbg !13788
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13789, metadata !DIExpression()), !dbg !13790
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13791, metadata !DIExpression()), !dbg !13792
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13793, !tbaa !2655
  %or = or i32 592128, %0, !dbg !13794
  store i32 %or, i32* %open_flags, align 4, !dbg !13792, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13795, metadata !DIExpression()), !dbg !13796
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13797, !tbaa !2655
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13798, !tbaa !2668
  %3 = load i32, i32* %open_flags, align 4, !dbg !13799, !tbaa !2655
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13800
  store i32 %call, i32* %new_fd, align 4, !dbg !13796, !tbaa !2655
  %4 = load i32, i32* %new_fd, align 4, !dbg !13801, !tbaa !2655
  %cmp = icmp slt i32 %4, 0, !dbg !13803
  br i1 %cmp, label %if.then, label %if.end, !dbg !13804

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13805
  br label %return, !dbg !13805

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13806, metadata !DIExpression()), !dbg !13807
  %5 = load i32, i32* %new_fd, align 4, !dbg !13808, !tbaa !2655
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13809
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13807, !tbaa !2668
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13810, !tbaa !2668
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13810
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13812

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13813, !tbaa !2655
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13814, !tbaa !2668
  store i32 %7, i32* %8, align 4, !dbg !13815, !tbaa !2655, !ctir !5
  br label %if.end6, !dbg !13816

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13817, metadata !DIExpression()), !dbg !13819
  %call3 = call i32* @__errno_location() #16, !dbg !13820
  %9 = load i32, i32* %call3, align 4, !dbg !13820, !tbaa !2655, !ctir !5
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13819, !tbaa !2655
  %10 = load i32, i32* %new_fd, align 4, !dbg !13821, !tbaa !2655
  %call4 = call i32 @close(i32 %10), !dbg !13822
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13823, !tbaa !2655
  %call5 = call i32* @__errno_location() #16, !dbg !13824
  store i32 %11, i32* %call5, align 4, !dbg !13825, !tbaa !2655, !ctir !5
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13826, !tbaa !2668
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13827
  br label %return, !dbg !13827

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13828
  ret %struct.__dirstream* %13, !dbg !13828
}

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13829 !ctir !199 {
entry:
  %argv0.addr = alloca i8*, align 8, !ctir !177
  %slash = alloca i8*, align 8, !ctir !177
  %base = alloca i8*, align 8, !ctir !177
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13830, metadata !DIExpression()), !dbg !13831
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13832, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13834, metadata !DIExpression()), !dbg !13835
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13836, !tbaa !2668
  %cmp = icmp eq i8* %0, null, !dbg !13838
  br i1 %cmp, label %if.then, label %if.end, !dbg !13839

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13840, !tbaa !2668
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.310, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13842
  call void @abort() #13, !dbg !13843
  unreachable, !dbg !13843

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13844, !tbaa !2668
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13845
  store i8* %call1, i8** %slash, align 8, !dbg !13846, !tbaa !2668
  %3 = load i8*, i8** %slash, align 8, !dbg !13847, !tbaa !2668
  %cmp2 = icmp ne i8* %3, null, !dbg !13848
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13847

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13849, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13850
  br label %cond.end, !dbg !13847

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13851, !tbaa !2668
  br label %cond.end, !dbg !13847

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13847
  store i8* %cond, i8** %base, align 8, !dbg !13852, !tbaa !2668
  %6 = load i8*, i8** %base, align 8, !dbg !13853, !tbaa !2668
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13855, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13856
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13856
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13856
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13857
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13858

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13859, !tbaa !2668
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13860
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.311, i64 0, i64 0), i64 7) #14, !dbg !13861
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13862
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13863

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13864, !tbaa !2668
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13866, !tbaa !2668
  %10 = load i8*, i8** %base, align 8, !dbg !13867, !tbaa !2668
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.312, i64 0, i64 0), i64 3) #14, !dbg !13869
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13870
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13871

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13872, !tbaa !2668
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !13874
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !13875, !tbaa !2668
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !13876, !tbaa !2668
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !13877, !tbaa !2668
  br label %if.end12, !dbg !13878

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !13879

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !13880, !tbaa !2668
  store i8* %13, i8** @program_name, align 8, !dbg !13881, !tbaa !2668
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !13882, !tbaa !2668
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !13883, !tbaa !2668
  ret void, !dbg !13884
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !13885 !ctir !1520 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %src_name.addr = alloca i8*, align 8, !ctir !177
  %source_desc.addr = alloca i32, align 4, !ctir !5
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dest_desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !136
  %ctx = alloca %union.anon, align 4, !ctir !13887
  %ret = alloca i32, align 4, !ctir !5
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !13890, metadata !DIExpression()), !dbg !13891
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !13892, metadata !DIExpression()), !dbg !13893
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !13894, metadata !DIExpression()), !dbg !13895
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !13896, metadata !DIExpression()), !dbg !13897
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13898, metadata !DIExpression()), !dbg !13899
  call void @llvm.dbg.declare(metadata %union.anon* %ctx, metadata !13900, metadata !DIExpression()), !dbg !13901
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13902, metadata !DIExpression()), !dbg !13903
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !13904, !tbaa !2668
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !13905, !tbaa !2655
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13906, !tbaa !2655
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %union.anon* %ctx), !dbg !13907
  store i32 %call, i32* %ret, align 4, !dbg !13908, !tbaa !2655
  %3 = load i32, i32* %ret, align 4, !dbg !13909, !tbaa !2655
  %cmp = icmp ne i32 %3, 0, !dbg !13911
  br i1 %cmp, label %if.then, label %if.end, !dbg !13912

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !13913
  br label %return, !dbg !13913

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !13914, !tbaa !2668
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !13915, !tbaa !2655
  %call1 = call i32 @set_permissions(%union.anon* %ctx, i8* %4, i32 %5), !dbg !13916
  store i32 %call1, i32* %ret, align 4, !dbg !13917, !tbaa !2655
  call void @free_permission_context(%union.anon* %ctx), !dbg !13918
  %6 = load i32, i32* %ret, align 4, !dbg !13919, !tbaa !2655
  store i32 %6, i32* %retval, align 4, !dbg !13920
  br label %return, !dbg !13920

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13921
  ret i32 %7, !dbg !13921
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !13922 !ctir !1525 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !136
  %ctx = alloca %union.anon, align 4, !ctir !13924
  %ret = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13927, metadata !DIExpression()), !dbg !13928
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !13929, metadata !DIExpression()), !dbg !13930
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13931, metadata !DIExpression()), !dbg !13932
  call void @llvm.dbg.declare(metadata %union.anon* %ctx, metadata !13933, metadata !DIExpression()), !dbg !13934
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13935, metadata !DIExpression()), !dbg !13936
  %0 = bitcast %union.anon* %ctx to i8*, !dbg !13937
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 4, i1 false), !dbg !13937
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13938, !tbaa !2655
  %mode1 = getelementptr inbounds %union.anon, %union.anon* %ctx, i32 0, i32 0, !dbg !13939, !ctir !13924
  store i32 %1, i32* %mode1, align 4, !dbg !13940, !tbaa !13941, !ctir !136
  %2 = load i8*, i8** %name.addr, align 8, !dbg !13943, !tbaa !2668
  %3 = load i32, i32* %desc.addr, align 4, !dbg !13944, !tbaa !2655
  %call = call i32 @set_permissions(%union.anon* %ctx, i8* %2, i32 %3), !dbg !13945
  store i32 %call, i32* %ret, align 4, !dbg !13946, !tbaa !2655
  call void @free_permission_context(%union.anon* %ctx), !dbg !13947
  %4 = load i32, i32* %ret, align 4, !dbg !13948, !tbaa !2655
  ret i32 %4, !dbg !13949
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !13950 !ctir !1034 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1036
  %e = alloca i32, align 4, !ctir !5
  %p = alloca %struct.quoting_options*, align 8, !ctir !1036
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13951, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.declare(metadata i32* %e, metadata !13953, metadata !DIExpression()), !dbg !13954
  %call = call i32* @__errno_location() #16, !dbg !13955
  %0 = load i32, i32* %call, align 4, !dbg !13955, !tbaa !2655, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !13954, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !13956, metadata !DIExpression()), !dbg !13957
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13958, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13958
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13958

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13959, !tbaa !2668
  br label %cond.end, !dbg !13958

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13958

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13958
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !13958
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !13960
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !13960
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !13957, !tbaa !2668
  %5 = load i32, i32* %e, align 4, !dbg !13961, !tbaa !2655
  %call2 = call i32* @__errno_location() #16, !dbg !13962
  store i32 %5, i32* %call2, align 4, !dbg !13963, !tbaa !2655, !ctir !5
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !13964, !tbaa !2668
  ret %struct.quoting_options* %6, !dbg !13965
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !13966 !ctir !1046 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1048
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13967, metadata !DIExpression()), !dbg !13968
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13969, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !13969
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13969

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13970, !tbaa !2668
  br label %cond.end, !dbg !13969

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13969

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13969
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13971, !ctir !1049
  %2 = load i32, i32* %style, align 8, !dbg !13971, !tbaa !13972, !ctir !1012
  ret i32 %2, !dbg !13974
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !13975 !ctir !1050 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1036
  %s.addr = alloca i32, align 4, !ctir !1012
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13976, metadata !DIExpression()), !dbg !13977
  store i32 %s, i32* %s.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !13978, metadata !DIExpression()), !dbg !13979
  %0 = load i32, i32* %s.addr, align 4, !dbg !13980, !tbaa !3315
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13981, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13981
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13981

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13982, !tbaa !2668
  br label %cond.end, !dbg !13981

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13981

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13981
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !13983, !ctir !1037
  store i32 %0, i32* %style, align 8, !dbg !13984, !tbaa !13972, !ctir !1012
  ret void, !dbg !13985
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !13986 !ctir !1052 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1036
  %c.addr = alloca i8, align 1, !ctir !8
  %i.addr = alloca i32, align 4, !ctir !5
  %uc = alloca i8, align 1, !ctir !565
  %p = alloca i32*, align 8, !ctir !1054
  %shift = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !13987, metadata !DIExpression()), !dbg !13988
  store i8 %c, i8* %c.addr, align 1, !tbaa !3315
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !13989, metadata !DIExpression()), !dbg !13990
  store i32 %i, i32* %i.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13991, metadata !DIExpression()), !dbg !13992
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !13993, metadata !DIExpression()), !dbg !13994
  %0 = load i8, i8* %c.addr, align 1, !dbg !13995, !tbaa !3315
  store i8 %0, i8* %uc, align 1, !dbg !13994, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32** %p, metadata !13996, metadata !DIExpression()), !dbg !13997
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13998, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !13998
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13998

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !13999, !tbaa !2668
  br label %cond.end, !dbg !13998

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13998

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !13998
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !14000, !ctir !1037
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14001
  %3 = load i8, i8* %uc, align 1, !dbg !14002, !tbaa !3315
  %conv = zext i8 %3 to i64, !dbg !14002
  %div = udiv i64 %conv, 32, !dbg !14003
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !14004
  store i32* %add.ptr, i32** %p, align 8, !dbg !13997, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !14005, metadata !DIExpression()), !dbg !14006
  %4 = load i8, i8* %uc, align 1, !dbg !14007, !tbaa !3315
  %conv1 = zext i8 %4 to i64, !dbg !14007
  %rem = urem i64 %conv1, 32, !dbg !14008
  %conv2 = trunc i64 %rem to i32, !dbg !14007
  store i32 %conv2, i32* %shift, align 4, !dbg !14006, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14009, metadata !DIExpression()), !dbg !14010
  %5 = load i32*, i32** %p, align 8, !dbg !14011, !tbaa !2668
  %6 = load i32, i32* %5, align 4, !dbg !14012, !tbaa !2655, !ctir !67
  %7 = load i32, i32* %shift, align 4, !dbg !14013, !tbaa !2655
  %shr = lshr i32 %6, %7, !dbg !14014
  %and = and i32 %shr, 1, !dbg !14015
  store i32 %and, i32* %r, align 4, !dbg !14010, !tbaa !2655
  %8 = load i32, i32* %i.addr, align 4, !dbg !14016, !tbaa !2655
  %and3 = and i32 %8, 1, !dbg !14017
  %9 = load i32, i32* %r, align 4, !dbg !14018, !tbaa !2655
  %xor = xor i32 %and3, %9, !dbg !14019
  %10 = load i32, i32* %shift, align 4, !dbg !14020, !tbaa !2655
  %shl = shl i32 %xor, %10, !dbg !14021
  %11 = load i32*, i32** %p, align 8, !dbg !14022, !tbaa !2668
  %12 = load i32, i32* %11, align 4, !dbg !14023, !tbaa !2655, !ctir !67
  %xor4 = xor i32 %12, %shl, !dbg !14023
  store i32 %xor4, i32* %11, align 4, !dbg !14023, !tbaa !2655, !ctir !67
  %13 = load i32, i32* %r, align 4, !dbg !14024, !tbaa !2655
  ret i32 %13, !dbg !14025
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !14026 !ctir !1055 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1036
  %i.addr = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14027, metadata !DIExpression()), !dbg !14028
  store i32 %i, i32* %i.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14029, metadata !DIExpression()), !dbg !14030
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14031, metadata !DIExpression()), !dbg !14032
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14033, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14033
  br i1 %tobool, label %if.end, label %if.then, !dbg !14035

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14036, !tbaa !2668
  br label %if.end, !dbg !14037

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14038, !tbaa !2668
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !14039, !ctir !1037
  %2 = load i32, i32* %flags, align 4, !dbg !14039, !tbaa !14040, !ctir !5
  store i32 %2, i32* %r, align 4, !dbg !14041, !tbaa !2655
  %3 = load i32, i32* %i.addr, align 4, !dbg !14042, !tbaa !2655
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14043, !tbaa !2668
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !14044, !ctir !1037
  store i32 %3, i32* %flags1, align 4, !dbg !14045, !tbaa !14040, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !14046, !tbaa !2655
  ret i32 %5, !dbg !14047
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !14048 !ctir !1057 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1036
  %left_quote.addr = alloca i8*, align 8, !ctir !177
  %right_quote.addr = alloca i8*, align 8, !ctir !177
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14049, metadata !DIExpression()), !dbg !14050
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14051, metadata !DIExpression()), !dbg !14052
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14053, metadata !DIExpression()), !dbg !14054
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14055, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14055
  br i1 %tobool, label %if.end, label %if.then, !dbg !14057

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14058, !tbaa !2668
  br label %if.end, !dbg !14059

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14060, !tbaa !2668
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !14061, !ctir !1037
  store i32 10, i32* %style, align 8, !dbg !14062, !tbaa !13972, !ctir !1012
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !14063, !tbaa !2668
  %tobool1 = icmp ne i8* %2, null, !dbg !14063
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !14065

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !14066, !tbaa !2668
  %tobool2 = icmp ne i8* %3, null, !dbg !14066
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !14067

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !14068
  unreachable, !dbg !14068

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !14069, !tbaa !2668
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14070, !tbaa !2668
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !14071, !ctir !1037
  store i8* %4, i8** %left_quote5, align 8, !dbg !14072, !tbaa !14073, !ctir !177
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !14074, !tbaa !2668
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14075, !tbaa !2668
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !14076, !ctir !1037
  store i8* %6, i8** %right_quote6, align 8, !dbg !14077, !tbaa !14078, !ctir !177
  ret void, !dbg !14079
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14080 !ctir !1059 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !7
  %buffersize.addr = alloca i64, align 8, !ctir !52
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1048
  %p = alloca %struct.quoting_options*, align 8, !ctir !1048
  %e = alloca i32, align 4, !ctir !5
  %r = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14081, metadata !DIExpression()), !dbg !14082
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14083, metadata !DIExpression()), !dbg !14084
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14085, metadata !DIExpression()), !dbg !14086
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14087, metadata !DIExpression()), !dbg !14088
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14089, metadata !DIExpression()), !dbg !14090
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14091, metadata !DIExpression()), !dbg !14092
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14093, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14093
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14093

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14094, !tbaa !2668
  br label %cond.end, !dbg !14093

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14093

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14093
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14092, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14095, metadata !DIExpression()), !dbg !14096
  %call = call i32* @__errno_location() #16, !dbg !14097
  %2 = load i32, i32* %call, align 4, !dbg !14097, !tbaa !2655, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !14096, !tbaa !2655
  call void @llvm.dbg.declare(metadata i64* %r, metadata !14098, metadata !DIExpression()), !dbg !14099
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !14100, !tbaa !2668
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14101, !tbaa !3308
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !14102, !tbaa !2668
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !14103, !tbaa !3308
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14104, !tbaa !2668
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !14105, !ctir !1049
  %8 = load i32, i32* %style, align 8, !dbg !14105, !tbaa !13972, !ctir !1012
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14106, !tbaa !2668
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !14107, !ctir !1049
  %10 = load i32, i32* %flags, align 4, !dbg !14107, !tbaa !14040, !ctir !5
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14108, !tbaa !2668
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !14109, !ctir !1049
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14108
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14110, !tbaa !2668
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !14111, !ctir !1049
  %13 = load i8*, i8** %left_quote, align 8, !dbg !14111, !tbaa !14073, !ctir !177
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14112, !tbaa !2668
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !14113, !ctir !1049
  %15 = load i8*, i8** %right_quote, align 8, !dbg !14113, !tbaa !14078, !ctir !177
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !14114
  store i64 %call1, i64* %r, align 8, !dbg !14099, !tbaa !3308
  %16 = load i32, i32* %e, align 4, !dbg !14115, !tbaa !2655
  %call2 = call i32* @__errno_location() #16, !dbg !14116
  store i32 %16, i32* %call2, align 4, !dbg !14117, !tbaa !2655, !ctir !5
  %17 = load i64, i64* %r, align 8, !dbg !14118, !tbaa !3308
  ret i64 %17, !dbg !14119
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !14120 !ctir !1104 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %buffer.addr = alloca i8*, align 8, !ctir !7
  %buffersize.addr = alloca i64, align 8, !ctir !52
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %quoting_style.addr = alloca i32, align 4, !ctir !1012
  %flags.addr = alloca i32, align 4, !ctir !5
  %quote_these_too.addr = alloca i32*, align 8, !ctir !1106
  %left_quote.addr = alloca i8*, align 8, !ctir !177
  %right_quote.addr = alloca i8*, align 8, !ctir !177
  %i = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %orig_buffersize = alloca i64, align 8, !ctir !52
  %quote_string = alloca i8*, align 8, !ctir !177
  %quote_string_len = alloca i64, align 8, !ctir !52
  %backslash_escapes = alloca i8, align 1, !ctir !139
  %unibyte_locale = alloca i8, align 1, !ctir !139
  %elide_outer_quotes = alloca i8, align 1, !ctir !139
  %pending_shell_escape_end = alloca i8, align 1, !ctir !139
  %encountered_single_quote = alloca i8, align 1, !ctir !139
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !139
  %c = alloca i8, align 1, !ctir !565
  %esc = alloca i8, align 1, !ctir !565
  %is_right_quote = alloca i8, align 1, !ctir !139
  %escaping = alloca i8, align 1, !ctir !139
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !139
  %m = alloca i64, align 8, !ctir !52
  %printable = alloca i8, align 1, !ctir !139
  %mbstate = alloca %struct.savewd, align 4, !ctir !1110
  %w = alloca i32, align 4, !ctir !1124
  %bytes = alloca i64, align 8, !ctir !52
  %j = alloca i64, align 8, !ctir !52
  %ilim = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14121, metadata !DIExpression()), !dbg !14122
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14123, metadata !DIExpression()), !dbg !14124
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14125, metadata !DIExpression()), !dbg !14126
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14127, metadata !DIExpression()), !dbg !14128
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !14129, metadata !DIExpression()), !dbg !14130
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14131, metadata !DIExpression()), !dbg !14132
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !14133, metadata !DIExpression()), !dbg !14134
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14135, metadata !DIExpression()), !dbg !14136
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14137, metadata !DIExpression()), !dbg !14138
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14139, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14141, metadata !DIExpression()), !dbg !14142
  store i64 0, i64* %len, align 8, !dbg !14142, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !14143, metadata !DIExpression()), !dbg !14144
  store i64 0, i64* %orig_buffersize, align 8, !dbg !14144, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !14145, metadata !DIExpression()), !dbg !14146
  store i8* null, i8** %quote_string, align 8, !dbg !14146, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !14147, metadata !DIExpression()), !dbg !14148
  store i64 0, i64* %quote_string_len, align 8, !dbg !14148, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !14149, metadata !DIExpression()), !dbg !14150
  store i8 0, i8* %backslash_escapes, align 1, !dbg !14150, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !14151, metadata !DIExpression()), !dbg !14152
  %call = call i64 @__ctype_get_mb_cur_max() #9, !dbg !14153
  %cmp = icmp eq i64 %call, 1, !dbg !14154
  %frombool = zext i1 %cmp to i8, !dbg !14152
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !14152, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !14155, metadata !DIExpression()), !dbg !14156
  %0 = load i32, i32* %flags.addr, align 4, !dbg !14157, !tbaa !2655
  %and = and i32 %0, 2, !dbg !14158
  %cmp1 = icmp ne i32 %and, 0, !dbg !14159
  %frombool2 = zext i1 %cmp1 to i8, !dbg !14156
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !14156, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !14160, metadata !DIExpression()), !dbg !14161
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14161, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !14162, metadata !DIExpression()), !dbg !14163
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !14163, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !14164, metadata !DIExpression()), !dbg !14165
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14165, !tbaa !2762
  br label %process_input, !dbg !14166

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !14167), !dbg !14168
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !14169, !tbaa !3315
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !14170

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !14171, !tbaa !3315
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14173, !tbaa !2762
  br label %sw.bb3, !dbg !14174

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14175, !tbaa !2762
  %tobool = trunc i8 %2 to i1, !dbg !14175
  br i1 %tobool, label %if.end6, label %if.then, !dbg !14177

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !14178

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !14179, !tbaa !3308
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14179, !tbaa !3308
  %cmp4 = icmp ult i64 %3, %4, !dbg !14179
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !14182

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !14179, !tbaa !2668
  %6 = load i64, i64* %len, align 8, !dbg !14179, !tbaa !3308
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !14179, !ctir !7
  store i8 34, i8* %arrayidx, align 1, !dbg !14179, !tbaa !3315
  br label %if.end, !dbg !14179

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !14182, !tbaa !3308
  %inc = add i64 %7, 1, !dbg !14182
  store i64 %inc, i64* %len, align 8, !dbg !14182, !tbaa !3308
  br label %do.end, !dbg !14182

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !14182

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14183, !tbaa !2762
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14184, !tbaa !2668
  store i64 1, i64* %quote_string_len, align 8, !dbg !14185, !tbaa !3308
  br label %sw.epilog, !dbg !14186

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14187, !tbaa !2762
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14188, !tbaa !2762
  br label %sw.epilog, !dbg !14189

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !14190, !tbaa !3315
  %cmp9 = icmp ne i32 %8, 10, !dbg !14193
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !14194

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !14195, !tbaa !3315
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.328, i64 0, i64 0), i32 %9), !dbg !14197
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !14198, !tbaa !2668
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !14199, !tbaa !3315
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.329, i64 0, i64 0), i32 %10), !dbg !14200
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !14201, !tbaa !2668
  br label %if.end13, !dbg !14202

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14203, !tbaa !2762
  %tobool14 = trunc i8 %11 to i1, !dbg !14203
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !14205

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !14206, !tbaa !2668
  store i8* %12, i8** %quote_string, align 8, !dbg !14208, !tbaa !2668
  br label %for.cond, !dbg !14209

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !14210, !tbaa !2668
  %14 = load i8, i8* %13, align 1, !dbg !14212, !tbaa !3315, !ctir !178
  %tobool16 = icmp ne i8 %14, 0, !dbg !14213
  br i1 %tobool16, label %for.body, label %for.end, !dbg !14213

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !14214

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !14215, !tbaa !3308
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !14215, !tbaa !3308
  %cmp18 = icmp ult i64 %15, %16, !dbg !14215
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !14218

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !14215, !tbaa !2668
  %18 = load i8, i8* %17, align 1, !dbg !14215, !tbaa !3315, !ctir !178
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !14215, !tbaa !2668
  %20 = load i64, i64* %len, align 8, !dbg !14215, !tbaa !3308
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !14215, !ctir !7
  store i8 %18, i8* %arrayidx20, align 1, !dbg !14215, !tbaa !3315
  br label %if.end21, !dbg !14215

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !14218, !tbaa !3308
  %inc22 = add i64 %21, 1, !dbg !14218
  store i64 %inc22, i64* %len, align 8, !dbg !14218, !tbaa !3308
  br label %do.end23, !dbg !14218

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !14218

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !14219, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !14219
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !14219, !tbaa !2668
  br label %for.cond, !dbg !14220, !llvm.loop !14221

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !14222

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14223, !tbaa !2762
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !14224, !tbaa !2668
  store i8* %23, i8** %quote_string, align 8, !dbg !14225, !tbaa !2668
  %24 = load i8*, i8** %quote_string, align 8, !dbg !14226, !tbaa !2668
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !14227
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !14228, !tbaa !3308
  br label %sw.epilog, !dbg !14229

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14230, !tbaa !2762
  br label %sw.bb27, !dbg !14231

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14232, !tbaa !2762
  br label %sw.bb28, !dbg !14233

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14234, !tbaa !2762
  %tobool29 = trunc i8 %25 to i1, !dbg !14234
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !14236

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14237, !tbaa !2762
  br label %if.end31, !dbg !14238

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !14239

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !14240, !tbaa !3315
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14241, !tbaa !2762
  %tobool33 = trunc i8 %26 to i1, !dbg !14241
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !14243

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !14244

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !14245, !tbaa !3308
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !14245, !tbaa !3308
  %cmp36 = icmp ult i64 %27, %28, !dbg !14245
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !14248

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !14245, !tbaa !2668
  %30 = load i64, i64* %len, align 8, !dbg !14245, !tbaa !3308
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !14245, !ctir !7
  store i8 39, i8* %arrayidx38, align 1, !dbg !14245, !tbaa !3315
  br label %if.end39, !dbg !14245

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !14248, !tbaa !3308
  %inc40 = add i64 %31, 1, !dbg !14248
  store i64 %inc40, i64* %len, align 8, !dbg !14248, !tbaa !3308
  br label %do.end41, !dbg !14248

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !14248

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.329, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14249, !tbaa !2668
  store i64 1, i64* %quote_string_len, align 8, !dbg !14250, !tbaa !3308
  br label %sw.epilog, !dbg !14251

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14252, !tbaa !2762
  br label %sw.epilog, !dbg !14253

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !14254
  unreachable, !dbg !14254

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !14255, !tbaa !3308
  br label %for.cond44, !dbg !14257

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !14258, !tbaa !3308
  %cmp45 = icmp eq i64 %32, -1, !dbg !14260
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !14258

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !14261, !tbaa !2668
  %34 = load i64, i64* %i, align 8, !dbg !14262, !tbaa !3308
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !14261, !ctir !177
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !14261, !tbaa !3315
  %conv = sext i8 %35 to i32, !dbg !14261
  %cmp47 = icmp eq i32 %conv, 0, !dbg !14263
  %conv48 = zext i1 %cmp47 to i32, !dbg !14263
  br label %cond.end, !dbg !14258

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !14264, !tbaa !3308
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !14265, !tbaa !3308
  %cmp49 = icmp eq i64 %36, %37, !dbg !14266
  %conv50 = zext i1 %cmp49 to i32, !dbg !14266
  br label %cond.end, !dbg !14258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !14258
  %tobool51 = icmp ne i32 %cond, 0, !dbg !14267
  %lnot = xor i1 %tobool51, true, !dbg !14267
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !14268

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14269, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !14272, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !14274, metadata !DIExpression()), !dbg !14275
  store i8 0, i8* %is_right_quote, align 1, !dbg !14275, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !14276, metadata !DIExpression()), !dbg !14277
  store i8 0, i8* %escaping, align 1, !dbg !14277, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !14278, metadata !DIExpression()), !dbg !14279
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !14279, !tbaa !2762
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !14280, !tbaa !2762
  %tobool53 = trunc i8 %38 to i1, !dbg !14280
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !14282

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !14283, !tbaa !3315
  %cmp55 = icmp ne i32 %39, 2, !dbg !14284
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !14285

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !14286, !tbaa !3308
  %tobool58 = icmp ne i64 %40, 0, !dbg !14286
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !14287

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !14288, !tbaa !3308
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !14289, !tbaa !3308
  %add = add i64 %41, %42, !dbg !14290
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !14291, !tbaa !3308
  %cmp60 = icmp eq i64 %43, -1, !dbg !14292
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !14293

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !14294, !tbaa !3308
  %cmp63 = icmp ult i64 1, %44, !dbg !14295
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !14291

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !14296, !tbaa !2668
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !14297
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !14298, !tbaa !3308
  br label %cond.end68, !dbg !14291

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !14299, !tbaa !3308
  br label %cond.end68, !dbg !14291

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !14291
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !14300
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !14301

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !14302, !tbaa !2668
  %48 = load i64, i64* %i, align 8, !dbg !14303, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !14304
  %49 = load i8*, i8** %quote_string, align 8, !dbg !14305, !tbaa !2668
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !14306, !tbaa !3308
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !14307
  %cmp74 = icmp eq i32 %call73, 0, !dbg !14308
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !14309

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14310, !tbaa !2762
  %tobool77 = trunc i8 %51 to i1, !dbg !14310
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !14313

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !14314

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !14315, !tbaa !2762
  br label %if.end80, !dbg !14316

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !14317, !tbaa !2668
  %53 = load i64, i64* %i, align 8, !dbg !14318, !tbaa !3308
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !14317, !ctir !177
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !14317, !tbaa !3315
  store i8 %54, i8* %c, align 1, !dbg !14319, !tbaa !3315
  %55 = load i8, i8* %c, align 1, !dbg !14320, !tbaa !3315
  %conv82 = zext i8 %55 to i32, !dbg !14320
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !14321

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !14322, !tbaa !2762
  %tobool84 = trunc i8 %56 to i1, !dbg !14322
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !14325

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !14326

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14328, !tbaa !2762
  %tobool87 = trunc i8 %57 to i1, !dbg !14328
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !14331

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !14328

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !14331, !tbaa !2762
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !14332, !tbaa !3315
  %cmp90 = icmp eq i32 %58, 2, !dbg !14332
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !14332

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14332, !tbaa !2762
  %tobool93 = trunc i8 %59 to i1, !dbg !14332
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !14331

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !14334

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !14336, !tbaa !3308
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !14336, !tbaa !3308
  %cmp96 = icmp ult i64 %60, %61, !dbg !14336
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !14339

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !14336, !tbaa !2668
  %63 = load i64, i64* %len, align 8, !dbg !14336, !tbaa !3308
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !14336, !ctir !7
  store i8 39, i8* %arrayidx99, align 1, !dbg !14336, !tbaa !3315
  br label %if.end100, !dbg !14336

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !14339, !tbaa !3308
  %inc101 = add i64 %64, 1, !dbg !14339
  store i64 %inc101, i64* %len, align 8, !dbg !14339, !tbaa !3308
  br label %do.end102, !dbg !14339

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !14334

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !14340, !tbaa !3308
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !14340, !tbaa !3308
  %cmp104 = icmp ult i64 %65, %66, !dbg !14340
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !14343

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !14340, !tbaa !2668
  %68 = load i64, i64* %len, align 8, !dbg !14340, !tbaa !3308
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !14340, !ctir !7
  store i8 36, i8* %arrayidx107, align 1, !dbg !14340, !tbaa !3315
  br label %if.end108, !dbg !14340

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !14343, !tbaa !3308
  %inc109 = add i64 %69, 1, !dbg !14343
  store i64 %inc109, i64* %len, align 8, !dbg !14343, !tbaa !3308
  br label %do.end110, !dbg !14343

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !14334

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !14344, !tbaa !3308
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !14344, !tbaa !3308
  %cmp112 = icmp ult i64 %70, %71, !dbg !14344
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !14347

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !14344, !tbaa !2668
  %73 = load i64, i64* %len, align 8, !dbg !14344, !tbaa !3308
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !14344, !ctir !7
  store i8 39, i8* %arrayidx115, align 1, !dbg !14344, !tbaa !3315
  br label %if.end116, !dbg !14344

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !14347, !tbaa !3308
  %inc117 = add i64 %74, 1, !dbg !14347
  store i64 %inc117, i64* %len, align 8, !dbg !14347, !tbaa !3308
  br label %do.end118, !dbg !14347

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14334, !tbaa !2762
  br label %if.end119, !dbg !14334

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !14331

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !14348, !tbaa !3308
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !14348, !tbaa !3308
  %cmp121 = icmp ult i64 %75, %76, !dbg !14348
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !14351

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !14348, !tbaa !2668
  %78 = load i64, i64* %len, align 8, !dbg !14348, !tbaa !3308
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !14348, !ctir !7
  store i8 92, i8* %arrayidx124, align 1, !dbg !14348, !tbaa !3315
  br label %if.end125, !dbg !14348

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !14351, !tbaa !3308
  %inc126 = add i64 %79, 1, !dbg !14351
  store i64 %inc126, i64* %len, align 8, !dbg !14351, !tbaa !3308
  br label %do.end127, !dbg !14351

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !14331

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !14352, !tbaa !3315
  %cmp129 = icmp ne i32 %80, 2, !dbg !14354
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !14355

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !14356, !tbaa !3308
  %add132 = add i64 %81, 1, !dbg !14357
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !14358, !tbaa !3308
  %cmp133 = icmp ult i64 %add132, %82, !dbg !14359
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !14360

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !14361, !tbaa !2668
  %84 = load i64, i64* %i, align 8, !dbg !14362, !tbaa !3308
  %add136 = add i64 %84, 1, !dbg !14363
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !14361, !ctir !177
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !14361, !tbaa !3315
  %conv138 = sext i8 %85 to i32, !dbg !14361
  %cmp139 = icmp sle i32 48, %conv138, !dbg !14364
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !14365

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !14366, !tbaa !2668
  %87 = load i64, i64* %i, align 8, !dbg !14367, !tbaa !3308
  %add142 = add i64 %87, 1, !dbg !14368
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !14366, !ctir !177
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !14366, !tbaa !3315
  %conv144 = sext i8 %88 to i32, !dbg !14366
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !14369
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !14370

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !14371

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !14373, !tbaa !3308
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !14373, !tbaa !3308
  %cmp149 = icmp ult i64 %89, %90, !dbg !14373
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !14376

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !14373, !tbaa !2668
  %92 = load i64, i64* %len, align 8, !dbg !14373, !tbaa !3308
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !14373, !ctir !7
  store i8 48, i8* %arrayidx152, align 1, !dbg !14373, !tbaa !3315
  br label %if.end153, !dbg !14373

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !14376, !tbaa !3308
  %inc154 = add i64 %93, 1, !dbg !14376
  store i64 %inc154, i64* %len, align 8, !dbg !14376, !tbaa !3308
  br label %do.end155, !dbg !14376

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !14377

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !14378, !tbaa !3308
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !14378, !tbaa !3308
  %cmp157 = icmp ult i64 %94, %95, !dbg !14378
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !14381

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !14378, !tbaa !2668
  %97 = load i64, i64* %len, align 8, !dbg !14378, !tbaa !3308
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !14378, !ctir !7
  store i8 48, i8* %arrayidx160, align 1, !dbg !14378, !tbaa !3315
  br label %if.end161, !dbg !14378

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !14381, !tbaa !3308
  %inc162 = add i64 %98, 1, !dbg !14381
  store i64 %inc162, i64* %len, align 8, !dbg !14381, !tbaa !3308
  br label %do.end163, !dbg !14381

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !14382

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !14383, !tbaa !3315
  br label %if.end169, !dbg !14384

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !14385, !tbaa !2655
  %and165 = and i32 %99, 1, !dbg !14387
  %tobool166 = icmp ne i32 %and165, 0, !dbg !14387
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14388

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !14389

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !14390

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !14391, !tbaa !3315
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !14392

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14393, !tbaa !2762
  %tobool172 = trunc i8 %101 to i1, !dbg !14393
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !14396

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !14397

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !14398

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !14399, !tbaa !2655
  %and176 = and i32 %102, 4, !dbg !14401
  %tobool177 = icmp ne i32 %and176, 0, !dbg !14401
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !14402

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !14403, !tbaa !3308
  %add179 = add i64 %103, 2, !dbg !14404
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14405, !tbaa !3308
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14406
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14407

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14408, !tbaa !2668
  %106 = load i64, i64* %i, align 8, !dbg !14409, !tbaa !3308
  %add183 = add i64 %106, 1, !dbg !14410
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14408, !ctir !177
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14408, !tbaa !3315
  %conv185 = sext i8 %107 to i32, !dbg !14408
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14411
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14412

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14413, !tbaa !2668
  %109 = load i64, i64* %i, align 8, !dbg !14414, !tbaa !3308
  %add189 = add i64 %109, 2, !dbg !14415
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14413, !ctir !177
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14413, !tbaa !3315
  %conv191 = sext i8 %110 to i32, !dbg !14413
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14416

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14417, !tbaa !2762
  %tobool193 = trunc i8 %111 to i1, !dbg !14417
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14420

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14421

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14422, !tbaa !2668
  %113 = load i64, i64* %i, align 8, !dbg !14423, !tbaa !3308
  %add196 = add i64 %113, 2, !dbg !14424
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14422, !ctir !177
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14422, !tbaa !3315
  store i8 %114, i8* %c, align 1, !dbg !14425, !tbaa !3315
  %115 = load i64, i64* %i, align 8, !dbg !14426, !tbaa !3308
  %add198 = add i64 %115, 2, !dbg !14426
  store i64 %add198, i64* %i, align 8, !dbg !14426, !tbaa !3308
  br label %do.body199, !dbg !14427

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14428, !tbaa !3308
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14428, !tbaa !3308
  %cmp200 = icmp ult i64 %116, %117, !dbg !14428
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14431

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14428, !tbaa !2668
  %119 = load i64, i64* %len, align 8, !dbg !14428, !tbaa !3308
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14428, !ctir !7
  store i8 63, i8* %arrayidx203, align 1, !dbg !14428, !tbaa !3315
  br label %if.end204, !dbg !14428

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14431, !tbaa !3308
  %inc205 = add i64 %120, 1, !dbg !14431
  store i64 %inc205, i64* %len, align 8, !dbg !14431, !tbaa !3308
  br label %do.end206, !dbg !14431

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14432

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14433, !tbaa !3308
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14433, !tbaa !3308
  %cmp208 = icmp ult i64 %121, %122, !dbg !14433
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14436

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14433, !tbaa !2668
  %124 = load i64, i64* %len, align 8, !dbg !14433, !tbaa !3308
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14433, !ctir !7
  store i8 34, i8* %arrayidx211, align 1, !dbg !14433, !tbaa !3315
  br label %if.end212, !dbg !14433

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14436, !tbaa !3308
  %inc213 = add i64 %125, 1, !dbg !14436
  store i64 %inc213, i64* %len, align 8, !dbg !14436, !tbaa !3308
  br label %do.end214, !dbg !14436

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14437

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14438, !tbaa !3308
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14438, !tbaa !3308
  %cmp216 = icmp ult i64 %126, %127, !dbg !14438
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14441

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14438, !tbaa !2668
  %129 = load i64, i64* %len, align 8, !dbg !14438, !tbaa !3308
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14438, !ctir !7
  store i8 34, i8* %arrayidx219, align 1, !dbg !14438, !tbaa !3315
  br label %if.end220, !dbg !14438

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14441, !tbaa !3308
  %inc221 = add i64 %130, 1, !dbg !14441
  store i64 %inc221, i64* %len, align 8, !dbg !14441, !tbaa !3308
  br label %do.end222, !dbg !14441

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14442

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14443, !tbaa !3308
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14443, !tbaa !3308
  %cmp224 = icmp ult i64 %131, %132, !dbg !14443
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14446

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14443, !tbaa !2668
  %134 = load i64, i64* %len, align 8, !dbg !14443, !tbaa !3308
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14443, !ctir !7
  store i8 63, i8* %arrayidx227, align 1, !dbg !14443, !tbaa !3315
  br label %if.end228, !dbg !14443

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14446, !tbaa !3308
  %inc229 = add i64 %135, 1, !dbg !14446
  store i64 %inc229, i64* %len, align 8, !dbg !14446, !tbaa !3308
  br label %do.end230, !dbg !14446

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14447

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14448

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14449

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14450

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14451

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14452

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14453, !tbaa !3315
  br label %c_escape, !dbg !14454

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14455, !tbaa !3315
  br label %c_escape, !dbg !14456

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14457, !tbaa !3315
  br label %c_escape, !dbg !14458

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14459, !tbaa !3315
  br label %c_and_shell_escape, !dbg !14460

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14461, !tbaa !3315
  br label %c_and_shell_escape, !dbg !14462

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14463, !tbaa !3315
  br label %c_and_shell_escape, !dbg !14464

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14465, !tbaa !3315
  br label %c_escape, !dbg !14466

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14467, !tbaa !3315
  store i8 %136, i8* %esc, align 1, !dbg !14468, !tbaa !3315
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14469, !tbaa !3315
  %cmp244 = icmp eq i32 %137, 2, !dbg !14471
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14472

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14473, !tbaa !2762
  %tobool247 = trunc i8 %138 to i1, !dbg !14473
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14476

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14477

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14478

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14479, !tbaa !2762
  %tobool251 = trunc i8 %139 to i1, !dbg !14479
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14481

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14482, !tbaa !2762
  %tobool254 = trunc i8 %140 to i1, !dbg !14482
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14483

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14484, !tbaa !3308
  %tobool257 = icmp ne i64 %141, 0, !dbg !14484
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14485

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14486

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14484

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14487), !dbg !14488
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14489, !tbaa !3315
  %cmp260 = icmp eq i32 %142, 2, !dbg !14491
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14492

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14493, !tbaa !2762
  %tobool263 = trunc i8 %143 to i1, !dbg !14493
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14494

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14495

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14493

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14496), !dbg !14497
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14498, !tbaa !2762
  %tobool267 = trunc i8 %144 to i1, !dbg !14498
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14500

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14501, !tbaa !3315
  store i8 %145, i8* %c, align 1, !dbg !14503, !tbaa !3315
  br label %store_escape, !dbg !14504

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14505

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14506, !tbaa !3308
  %cmp271 = icmp eq i64 %146, -1, !dbg !14508
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14509

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14510, !tbaa !2668
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14510, !ctir !177
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14510, !tbaa !3315
  %conv275 = sext i8 %148 to i32, !dbg !14510
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14511
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14506

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14512, !tbaa !3308
  %cmp279 = icmp eq i64 %149, 1, !dbg !14513
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14509

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14514

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14515

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14516, !tbaa !3308
  %cmp284 = icmp ne i64 %150, 0, !dbg !14518
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14519

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14520

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14521

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14522, !tbaa !2762
  br label %sw.bb289, !dbg !14523

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14524, !tbaa !3315
  %cmp290 = icmp eq i32 %151, 2, !dbg !14526
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14527

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14528, !tbaa !2762
  %tobool293 = trunc i8 %152 to i1, !dbg !14528
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14529

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14530

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14531

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14532, !tbaa !2762
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14533, !tbaa !2762
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14534, !tbaa !3315
  %cmp298 = icmp eq i32 %153, 2, !dbg !14536
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14537

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14538, !tbaa !2762
  %tobool301 = trunc i8 %154 to i1, !dbg !14538
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14541

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14542

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14543, !tbaa !3308
  %tobool304 = icmp ne i64 %155, 0, !dbg !14543
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14545

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14546, !tbaa !3308
  %tobool306 = icmp ne i64 %156, 0, !dbg !14546
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14547

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14548, !tbaa !3308
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14550, !tbaa !3308
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14551, !tbaa !3308
  br label %if.end308, !dbg !14552

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14553

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14554, !tbaa !3308
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14554, !tbaa !3308
  %cmp310 = icmp ult i64 %158, %159, !dbg !14554
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14557

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14554, !tbaa !2668
  %161 = load i64, i64* %len, align 8, !dbg !14554, !tbaa !3308
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14554, !ctir !7
  store i8 39, i8* %arrayidx313, align 1, !dbg !14554, !tbaa !3315
  br label %if.end314, !dbg !14554

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14557, !tbaa !3308
  %inc315 = add i64 %162, 1, !dbg !14557
  store i64 %inc315, i64* %len, align 8, !dbg !14557, !tbaa !3308
  br label %do.end316, !dbg !14557

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14558

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14559, !tbaa !3308
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14559, !tbaa !3308
  %cmp318 = icmp ult i64 %163, %164, !dbg !14559
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14562

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14559, !tbaa !2668
  %166 = load i64, i64* %len, align 8, !dbg !14559, !tbaa !3308
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14559, !ctir !7
  store i8 92, i8* %arrayidx321, align 1, !dbg !14559, !tbaa !3315
  br label %if.end322, !dbg !14559

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14562, !tbaa !3308
  %inc323 = add i64 %167, 1, !dbg !14562
  store i64 %inc323, i64* %len, align 8, !dbg !14562, !tbaa !3308
  br label %do.end324, !dbg !14562

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14563

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14564, !tbaa !3308
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14564, !tbaa !3308
  %cmp326 = icmp ult i64 %168, %169, !dbg !14564
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14567

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14564, !tbaa !2668
  %171 = load i64, i64* %len, align 8, !dbg !14564, !tbaa !3308
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14564, !ctir !7
  store i8 39, i8* %arrayidx329, align 1, !dbg !14564, !tbaa !3315
  br label %if.end330, !dbg !14564

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14567, !tbaa !3308
  %inc331 = add i64 %172, 1, !dbg !14567
  store i64 %inc331, i64* %len, align 8, !dbg !14567, !tbaa !3308
  br label %do.end332, !dbg !14567

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14568, !tbaa !2762
  br label %if.end333, !dbg !14569

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14570

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14571, !tbaa !2762
  br label %sw.epilog564, !dbg !14572

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14573, metadata !DIExpression()), !dbg !14575
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14576, metadata !DIExpression()), !dbg !14577
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14578, !tbaa !2762
  %tobool336 = trunc i8 %173 to i1, !dbg !14578
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14580

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14581, !tbaa !3308
  %call338 = call i16** @__ctype_b_loc() #16, !dbg !14583
  %174 = load i16*, i16** %call338, align 8, !dbg !14583, !tbaa !2668, !ctir !1108
  %175 = load i8, i8* %c, align 1, !dbg !14583, !tbaa !3315
  %conv339 = zext i8 %175 to i32, !dbg !14583
  %idxprom = sext i32 %conv339 to i64, !dbg !14583
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14583, !ctir !1108
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14583, !tbaa !14584
  %conv341 = zext i16 %176 to i32, !dbg !14583
  %and342 = and i32 %conv341, 16384, !dbg !14583
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14586
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14587
  store i8 %frombool345, i8* %printable, align 1, !dbg !14587, !tbaa !2762
  br label %if.end410, !dbg !14588

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.savewd* %mbstate, metadata !14589, metadata !DIExpression()), !dbg !14591
  %177 = bitcast %struct.savewd* %mbstate to i8*, !dbg !14592
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14592
  store i64 0, i64* %m, align 8, !dbg !14593, !tbaa !3308
  store i8 1, i8* %printable, align 1, !dbg !14594, !tbaa !2762
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14595, !tbaa !3308
  %cmp347 = icmp eq i64 %178, -1, !dbg !14597
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14598

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14599, !tbaa !2668
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14600
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14601, !tbaa !3308
  br label %if.end351, !dbg !14602

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14603

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14604, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14607, metadata !DIExpression()), !dbg !14608
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14609, !tbaa !2668
  %181 = load i64, i64* %i, align 8, !dbg !14610, !tbaa !3308
  %182 = load i64, i64* %m, align 8, !dbg !14611, !tbaa !3308
  %add353 = add i64 %181, %182, !dbg !14612
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14609, !ctir !177
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14613, !tbaa !3308
  %184 = load i64, i64* %i, align 8, !dbg !14614, !tbaa !3308
  %185 = load i64, i64* %m, align 8, !dbg !14615, !tbaa !3308
  %add355 = add i64 %184, %185, !dbg !14616
  %sub = sub i64 %183, %add355, !dbg !14617
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.savewd* %mbstate), !dbg !14618
  store i64 %call356, i64* %bytes, align 8, !dbg !14608, !tbaa !3308
  %186 = load i64, i64* %bytes, align 8, !dbg !14619, !tbaa !3308
  %cmp357 = icmp eq i64 %186, 0, !dbg !14621
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14622

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14623

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14624, !tbaa !3308
  %cmp361 = icmp eq i64 %187, -1, !dbg !14626
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14627

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14628, !tbaa !2762
  br label %do.end409, !dbg !14630

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14631, !tbaa !3308
  %cmp365 = icmp eq i64 %188, -2, !dbg !14633
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14634

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14635, !tbaa !2762
  br label %while.cond, !dbg !14637

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14638, !tbaa !3308
  %190 = load i64, i64* %m, align 8, !dbg !14639, !tbaa !3308
  %add368 = add i64 %189, %190, !dbg !14640
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14641, !tbaa !3308
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14642
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14643

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14644, !tbaa !2668
  %193 = load i64, i64* %i, align 8, !dbg !14645, !tbaa !3308
  %194 = load i64, i64* %m, align 8, !dbg !14646, !tbaa !3308
  %add371 = add i64 %193, %194, !dbg !14647
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14644, !ctir !177
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14644, !tbaa !3315
  %conv373 = sext i8 %195 to i32, !dbg !14644
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14643
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14648
  br i1 %196, label %while.body, label %while.end, !dbg !14637

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14649, !tbaa !3308
  %inc375 = add i64 %197, 1, !dbg !14649
  store i64 %inc375, i64* %m, align 8, !dbg !14649, !tbaa !3308
  br label %while.cond, !dbg !14637, !llvm.loop !14650

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14651

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14652, !tbaa !2762
  %tobool377 = trunc i8 %198 to i1, !dbg !14652
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14655

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14656, !tbaa !3315
  %cmp380 = icmp eq i32 %199, 2, !dbg !14657
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14658

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14659, metadata !DIExpression()), !dbg !14661
  store i64 1, i64* %j, align 8, !dbg !14662, !tbaa !3308
  br label %for.cond383, !dbg !14664

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14665, !tbaa !3308
  %201 = load i64, i64* %bytes, align 8, !dbg !14667, !tbaa !3308
  %cmp384 = icmp ult i64 %200, %201, !dbg !14668
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14669

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14670, !tbaa !2668
  %203 = load i64, i64* %i, align 8, !dbg !14671, !tbaa !3308
  %204 = load i64, i64* %m, align 8, !dbg !14672, !tbaa !3308
  %add387 = add i64 %203, %204, !dbg !14673
  %205 = load i64, i64* %j, align 8, !dbg !14674, !tbaa !3308
  %add388 = add i64 %add387, %205, !dbg !14675
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14670, !ctir !177
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14670, !tbaa !3315
  %conv390 = sext i8 %206 to i32, !dbg !14670
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14676

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14677

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14679

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14680

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14681, !tbaa !3308
  %inc395 = add i64 %207, 1, !dbg !14681
  store i64 %inc395, i64* %j, align 8, !dbg !14681, !tbaa !3308
  br label %for.cond383, !dbg !14682, !llvm.loop !14683

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14685

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14686, !tbaa !2655
  %call398 = call i32 @iswprint(i32 %208) #9, !dbg !14688
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14688
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14689

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14690, !tbaa !2762
  br label %if.end401, !dbg !14691

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14692, !tbaa !3308
  %210 = load i64, i64* %m, align 8, !dbg !14693, !tbaa !3308
  %add402 = add i64 %210, %209, !dbg !14693
  store i64 %add402, i64* %m, align 8, !dbg !14693, !tbaa !3308
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14694

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.savewd* %mbstate) #14, !dbg !14695
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14696
  %lnot408 = xor i1 %tobool407, true, !dbg !14696
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14694, !llvm.loop !14697

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14699, !tbaa !2762
  %tobool411 = trunc i8 %211 to i1, !dbg !14699
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14700
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14700, !tbaa !2762
  %212 = load i64, i64* %m, align 8, !dbg !14701, !tbaa !3308
  %cmp413 = icmp ult i64 1, %212, !dbg !14703
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14704

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14705, !tbaa !2762
  %tobool415 = trunc i8 %213 to i1, !dbg !14705
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14706

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14707, !tbaa !2762
  %tobool418 = trunc i8 %214 to i1, !dbg !14707
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14708

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14709, metadata !DIExpression()), !dbg !14711
  %215 = load i64, i64* %i, align 8, !dbg !14712, !tbaa !3308
  %216 = load i64, i64* %m, align 8, !dbg !14713, !tbaa !3308
  %add420 = add i64 %215, %216, !dbg !14714
  store i64 %add420, i64* %ilim, align 8, !dbg !14711, !tbaa !3308
  br label %for.cond421, !dbg !14715

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14716, !tbaa !2762
  %tobool422 = trunc i8 %217 to i1, !dbg !14716
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14721

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14722, !tbaa !2762
  %tobool425 = trunc i8 %218 to i1, !dbg !14722
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14723

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14724

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14726, !tbaa !2762
  %tobool428 = trunc i8 %219 to i1, !dbg !14726
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14729

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14726

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14729, !tbaa !2762
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14730, !tbaa !3315
  %cmp431 = icmp eq i32 %220, 2, !dbg !14730
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14730

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14730, !tbaa !2762
  %tobool434 = trunc i8 %221 to i1, !dbg !14730
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14729

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14732

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14734, !tbaa !3308
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14734, !tbaa !3308
  %cmp437 = icmp ult i64 %222, %223, !dbg !14734
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14737

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14734, !tbaa !2668
  %225 = load i64, i64* %len, align 8, !dbg !14734, !tbaa !3308
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14734, !ctir !7
  store i8 39, i8* %arrayidx440, align 1, !dbg !14734, !tbaa !3315
  br label %if.end441, !dbg !14734

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14737, !tbaa !3308
  %inc442 = add i64 %226, 1, !dbg !14737
  store i64 %inc442, i64* %len, align 8, !dbg !14737, !tbaa !3308
  br label %do.end444, !dbg !14737

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14732

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14738, !tbaa !3308
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14738, !tbaa !3308
  %cmp446 = icmp ult i64 %227, %228, !dbg !14738
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14741

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14738, !tbaa !2668
  %230 = load i64, i64* %len, align 8, !dbg !14738, !tbaa !3308
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14738, !ctir !7
  store i8 36, i8* %arrayidx449, align 1, !dbg !14738, !tbaa !3315
  br label %if.end450, !dbg !14738

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14741, !tbaa !3308
  %inc451 = add i64 %231, 1, !dbg !14741
  store i64 %inc451, i64* %len, align 8, !dbg !14741, !tbaa !3308
  br label %do.end453, !dbg !14741

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14732

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14742, !tbaa !3308
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14742, !tbaa !3308
  %cmp455 = icmp ult i64 %232, %233, !dbg !14742
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14745

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14742, !tbaa !2668
  %235 = load i64, i64* %len, align 8, !dbg !14742, !tbaa !3308
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14742, !ctir !7
  store i8 39, i8* %arrayidx458, align 1, !dbg !14742, !tbaa !3315
  br label %if.end459, !dbg !14742

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14745, !tbaa !3308
  %inc460 = add i64 %236, 1, !dbg !14745
  store i64 %inc460, i64* %len, align 8, !dbg !14745, !tbaa !3308
  br label %do.end462, !dbg !14745

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14732, !tbaa !2762
  br label %if.end463, !dbg !14732

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14729

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14746, !tbaa !3308
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14746, !tbaa !3308
  %cmp465 = icmp ult i64 %237, %238, !dbg !14746
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14749

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14746, !tbaa !2668
  %240 = load i64, i64* %len, align 8, !dbg !14746, !tbaa !3308
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14746, !ctir !7
  store i8 92, i8* %arrayidx468, align 1, !dbg !14746, !tbaa !3315
  br label %if.end469, !dbg !14746

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14749, !tbaa !3308
  %inc470 = add i64 %241, 1, !dbg !14749
  store i64 %inc470, i64* %len, align 8, !dbg !14749, !tbaa !3308
  br label %do.end472, !dbg !14749

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14729

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14750

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14751, !tbaa !3308
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14751, !tbaa !3308
  %cmp476 = icmp ult i64 %242, %243, !dbg !14751
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14754

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14751, !tbaa !3315
  %conv479 = zext i8 %244 to i32, !dbg !14751
  %shr = ashr i32 %conv479, 6, !dbg !14751
  %add480 = add nsw i32 48, %shr, !dbg !14751
  %conv481 = trunc i32 %add480 to i8, !dbg !14751
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14751, !tbaa !2668
  %246 = load i64, i64* %len, align 8, !dbg !14751, !tbaa !3308
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14751, !ctir !7
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14751, !tbaa !3315
  br label %if.end483, !dbg !14751

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14754, !tbaa !3308
  %inc484 = add i64 %247, 1, !dbg !14754
  store i64 %inc484, i64* %len, align 8, !dbg !14754, !tbaa !3308
  br label %do.end486, !dbg !14754

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14755

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14756, !tbaa !3308
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14756, !tbaa !3308
  %cmp488 = icmp ult i64 %248, %249, !dbg !14756
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14759

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14756, !tbaa !3315
  %conv491 = zext i8 %250 to i32, !dbg !14756
  %shr492 = ashr i32 %conv491, 3, !dbg !14756
  %and493 = and i32 %shr492, 7, !dbg !14756
  %add494 = add nsw i32 48, %and493, !dbg !14756
  %conv495 = trunc i32 %add494 to i8, !dbg !14756
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14756, !tbaa !2668
  %252 = load i64, i64* %len, align 8, !dbg !14756, !tbaa !3308
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14756, !ctir !7
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14756, !tbaa !3315
  br label %if.end497, !dbg !14756

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14759, !tbaa !3308
  %inc498 = add i64 %253, 1, !dbg !14759
  store i64 %inc498, i64* %len, align 8, !dbg !14759, !tbaa !3308
  br label %do.end500, !dbg !14759

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14760, !tbaa !3315
  %conv501 = zext i8 %254 to i32, !dbg !14760
  %and502 = and i32 %conv501, 7, !dbg !14761
  %add503 = add nsw i32 48, %and502, !dbg !14762
  %conv504 = trunc i32 %add503 to i8, !dbg !14763
  store i8 %conv504, i8* %c, align 1, !dbg !14764, !tbaa !3315
  br label %if.end518, !dbg !14765

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14766, !tbaa !2762
  %tobool506 = trunc i8 %255 to i1, !dbg !14766
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14768

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14769

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14771, !tbaa !3308
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14771, !tbaa !3308
  %cmp509 = icmp ult i64 %256, %257, !dbg !14771
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14774

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14771, !tbaa !2668
  %259 = load i64, i64* %len, align 8, !dbg !14771, !tbaa !3308
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14771, !ctir !7
  store i8 92, i8* %arrayidx512, align 1, !dbg !14771, !tbaa !3315
  br label %if.end513, !dbg !14771

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14774, !tbaa !3308
  %inc514 = add i64 %260, 1, !dbg !14774
  store i64 %inc514, i64* %len, align 8, !dbg !14774, !tbaa !3308
  br label %do.end516, !dbg !14774

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14775, !tbaa !2762
  br label %if.end517, !dbg !14776

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14777, !tbaa !3308
  %262 = load i64, i64* %i, align 8, !dbg !14779, !tbaa !3308
  %add519 = add i64 %262, 1, !dbg !14780
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14781
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14782

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14783

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14784

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14785, !tbaa !2762
  %tobool525 = trunc i8 %263 to i1, !dbg !14785
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14785

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14785, !tbaa !2762
  %tobool528 = trunc i8 %264 to i1, !dbg !14785
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14788

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14789

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14791, !tbaa !3308
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14791, !tbaa !3308
  %cmp531 = icmp ult i64 %265, %266, !dbg !14791
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14794

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14791, !tbaa !2668
  %268 = load i64, i64* %len, align 8, !dbg !14791, !tbaa !3308
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14791, !ctir !7
  store i8 39, i8* %arrayidx534, align 1, !dbg !14791, !tbaa !3315
  br label %if.end535, !dbg !14791

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14794, !tbaa !3308
  %inc536 = add i64 %269, 1, !dbg !14794
  store i64 %inc536, i64* %len, align 8, !dbg !14794, !tbaa !3308
  br label %do.end538, !dbg !14794

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14789

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14795, !tbaa !3308
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14795, !tbaa !3308
  %cmp540 = icmp ult i64 %270, %271, !dbg !14795
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14798

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14795, !tbaa !2668
  %273 = load i64, i64* %len, align 8, !dbg !14795, !tbaa !3308
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14795, !ctir !7
  store i8 39, i8* %arrayidx543, align 1, !dbg !14795, !tbaa !3315
  br label %if.end544, !dbg !14795

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14798, !tbaa !3308
  %inc545 = add i64 %274, 1, !dbg !14798
  store i64 %inc545, i64* %len, align 8, !dbg !14798, !tbaa !3308
  br label %do.end547, !dbg !14798

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14789, !tbaa !2762
  br label %if.end548, !dbg !14789

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14788

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14799

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14800, !tbaa !3308
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14800, !tbaa !3308
  %cmp552 = icmp ult i64 %275, %276, !dbg !14800
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14803

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14800, !tbaa !3315
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14800, !tbaa !2668
  %279 = load i64, i64* %len, align 8, !dbg !14800, !tbaa !3308
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14800, !ctir !7
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14800, !tbaa !3315
  br label %if.end556, !dbg !14800

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14803, !tbaa !3308
  %inc557 = add i64 %280, 1, !dbg !14803
  store i64 %inc557, i64* %len, align 8, !dbg !14803, !tbaa !3308
  br label %do.end559, !dbg !14803

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14804, !tbaa !2668
  %282 = load i64, i64* %i, align 8, !dbg !14805, !tbaa !3308
  %inc560 = add i64 %282, 1, !dbg !14805
  store i64 %inc560, i64* %i, align 8, !dbg !14805, !tbaa !3308
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14804, !ctir !177
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14804, !tbaa !3315
  store i8 %283, i8* %c, align 1, !dbg !14806, !tbaa !3315
  br label %for.cond421, !dbg !14807, !llvm.loop !14808

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14811

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14812

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14813, !tbaa !2762
  %tobool565 = trunc i8 %284 to i1, !dbg !14813
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14815

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14816, !tbaa !3315
  %cmp568 = icmp ne i32 %285, 2, !dbg !14817
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14818

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14819, !tbaa !2762
  %tobool571 = trunc i8 %286 to i1, !dbg !14819
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14820

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14821, !tbaa !2668
  %tobool574 = icmp ne i32* %287, null, !dbg !14821
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14822

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14823, !tbaa !2668
  %289 = load i8, i8* %c, align 1, !dbg !14824, !tbaa !3315
  %conv576 = zext i8 %289 to i64, !dbg !14824
  %div = udiv i64 %conv576, 32, !dbg !14825
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14823, !ctir !1106
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14823, !tbaa !2655
  %291 = load i8, i8* %c, align 1, !dbg !14826, !tbaa !3315
  %conv578 = zext i8 %291 to i64, !dbg !14826
  %rem = urem i64 %conv578, 32, !dbg !14827
  %sh_prom = trunc i64 %rem to i32, !dbg !14828
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14828
  %and580 = and i32 %shr579, 1, !dbg !14829
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14829
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14830

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14831, !tbaa !2762
  %tobool583 = trunc i8 %292 to i1, !dbg !14831
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14832

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14833

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14831

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14834), !dbg !14835
  br label %do.body586, !dbg !14836

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14837, !tbaa !2762
  %tobool587 = trunc i8 %293 to i1, !dbg !14837
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14840

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14837

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14840, !tbaa !2762
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14841, !tbaa !3315
  %cmp590 = icmp eq i32 %294, 2, !dbg !14841
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14841

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14841, !tbaa !2762
  %tobool593 = trunc i8 %295 to i1, !dbg !14841
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14840

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14843

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14845, !tbaa !3308
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14845, !tbaa !3308
  %cmp596 = icmp ult i64 %296, %297, !dbg !14845
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14848

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14845, !tbaa !2668
  %299 = load i64, i64* %len, align 8, !dbg !14845, !tbaa !3308
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14845, !ctir !7
  store i8 39, i8* %arrayidx599, align 1, !dbg !14845, !tbaa !3315
  br label %if.end600, !dbg !14845

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14848, !tbaa !3308
  %inc601 = add i64 %300, 1, !dbg !14848
  store i64 %inc601, i64* %len, align 8, !dbg !14848, !tbaa !3308
  br label %do.end603, !dbg !14848

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14843

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14849, !tbaa !3308
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14849, !tbaa !3308
  %cmp605 = icmp ult i64 %301, %302, !dbg !14849
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14852

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14849, !tbaa !2668
  %304 = load i64, i64* %len, align 8, !dbg !14849, !tbaa !3308
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14849, !ctir !7
  store i8 36, i8* %arrayidx608, align 1, !dbg !14849, !tbaa !3315
  br label %if.end609, !dbg !14849

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14852, !tbaa !3308
  %inc610 = add i64 %305, 1, !dbg !14852
  store i64 %inc610, i64* %len, align 8, !dbg !14852, !tbaa !3308
  br label %do.end612, !dbg !14852

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14843

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14853, !tbaa !3308
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14853, !tbaa !3308
  %cmp614 = icmp ult i64 %306, %307, !dbg !14853
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14856

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14853, !tbaa !2668
  %309 = load i64, i64* %len, align 8, !dbg !14853, !tbaa !3308
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14853, !ctir !7
  store i8 39, i8* %arrayidx617, align 1, !dbg !14853, !tbaa !3315
  br label %if.end618, !dbg !14853

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14856, !tbaa !3308
  %inc619 = add i64 %310, 1, !dbg !14856
  store i64 %inc619, i64* %len, align 8, !dbg !14856, !tbaa !3308
  br label %do.end621, !dbg !14856

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14843, !tbaa !2762
  br label %if.end622, !dbg !14843

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14840

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14857, !tbaa !3308
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14857, !tbaa !3308
  %cmp624 = icmp ult i64 %311, %312, !dbg !14857
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14860

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14857, !tbaa !2668
  %314 = load i64, i64* %len, align 8, !dbg !14857, !tbaa !3308
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14857, !ctir !7
  store i8 92, i8* %arrayidx627, align 1, !dbg !14857, !tbaa !3315
  br label %if.end628, !dbg !14857

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14860, !tbaa !3308
  %inc629 = add i64 %315, 1, !dbg !14860
  store i64 %inc629, i64* %len, align 8, !dbg !14860, !tbaa !3308
  br label %do.end631, !dbg !14860

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14840

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14840

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14861), !dbg !14862
  br label %do.body634, !dbg !14863

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14864, !tbaa !2762
  %tobool635 = trunc i8 %316 to i1, !dbg !14864
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14864

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14864, !tbaa !2762
  %tobool638 = trunc i8 %317 to i1, !dbg !14864
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !14867

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !14868

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !14870, !tbaa !3308
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !14870, !tbaa !3308
  %cmp641 = icmp ult i64 %318, %319, !dbg !14870
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !14873

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !14870, !tbaa !2668
  %321 = load i64, i64* %len, align 8, !dbg !14870, !tbaa !3308
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !14870, !ctir !7
  store i8 39, i8* %arrayidx644, align 1, !dbg !14870, !tbaa !3315
  br label %if.end645, !dbg !14870

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !14873, !tbaa !3308
  %inc646 = add i64 %322, 1, !dbg !14873
  store i64 %inc646, i64* %len, align 8, !dbg !14873, !tbaa !3308
  br label %do.end648, !dbg !14873

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !14868

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !14874, !tbaa !3308
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !14874, !tbaa !3308
  %cmp650 = icmp ult i64 %323, %324, !dbg !14874
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !14877

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !14874, !tbaa !2668
  %326 = load i64, i64* %len, align 8, !dbg !14874, !tbaa !3308
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !14874, !ctir !7
  store i8 39, i8* %arrayidx653, align 1, !dbg !14874, !tbaa !3315
  br label %if.end654, !dbg !14874

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !14877, !tbaa !3308
  %inc655 = add i64 %327, 1, !dbg !14877
  store i64 %inc655, i64* %len, align 8, !dbg !14877, !tbaa !3308
  br label %do.end657, !dbg !14877

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14868, !tbaa !2762
  br label %if.end658, !dbg !14868

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !14867

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !14878

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !14879, !tbaa !3308
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !14879, !tbaa !3308
  %cmp662 = icmp ult i64 %328, %329, !dbg !14879
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !14882

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !14879, !tbaa !3315
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !14879, !tbaa !2668
  %332 = load i64, i64* %len, align 8, !dbg !14879, !tbaa !3308
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !14879, !ctir !7
  store i8 %330, i8* %arrayidx665, align 1, !dbg !14879, !tbaa !3315
  br label %if.end666, !dbg !14879

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !14882, !tbaa !3308
  %inc667 = add i64 %333, 1, !dbg !14882
  store i64 %inc667, i64* %len, align 8, !dbg !14882, !tbaa !3308
  br label %do.end669, !dbg !14882

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !14883, !tbaa !2762
  %tobool670 = trunc i8 %334 to i1, !dbg !14883
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !14885

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14886, !tbaa !2762
  br label %if.end672, !dbg !14887

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !14888

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !14889, !tbaa !3308
  %inc674 = add i64 %335, 1, !dbg !14889
  store i64 %inc674, i64* %i, align 8, !dbg !14889, !tbaa !3308
  br label %for.cond44, !dbg !14890, !llvm.loop !14891

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !14893, !tbaa !3308
  %cmp676 = icmp eq i64 %336, 0, !dbg !14895
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !14896

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !14897, !tbaa !3315
  %cmp679 = icmp eq i32 %337, 2, !dbg !14898
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !14899

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14900, !tbaa !2762
  %tobool682 = trunc i8 %338 to i1, !dbg !14900
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !14901

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !14902

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !14903, !tbaa !3315
  %cmp686 = icmp eq i32 %339, 2, !dbg !14905
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !14906

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14907, !tbaa !2762
  %tobool689 = trunc i8 %340 to i1, !dbg !14907
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !14908

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !14909, !tbaa !2762
  %tobool691 = trunc i8 %341 to i1, !dbg !14909
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !14910

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14911, !tbaa !2762
  %tobool694 = trunc i8 %342 to i1, !dbg !14911
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !14914

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !14915, !tbaa !2668
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !14916, !tbaa !3308
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !14917, !tbaa !2668
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !14918, !tbaa !3308
  %347 = load i32, i32* %flags.addr, align 4, !dbg !14919, !tbaa !2655
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14920, !tbaa !2668
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !14921, !tbaa !2668
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !14922, !tbaa !2668
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !14923
  store i64 %call696, i64* %retval, align 8, !dbg !14924
  br label %return, !dbg !14924

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !14925, !tbaa !3308
  %tobool698 = icmp ne i64 %351, 0, !dbg !14925
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !14927

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !14928, !tbaa !3308
  %tobool700 = icmp ne i64 %352, 0, !dbg !14928
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !14929

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !14930, !tbaa !3308
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !14932, !tbaa !3308
  store i64 0, i64* %len, align 8, !dbg !14933, !tbaa !3308
  br label %process_input, !dbg !14934

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !14935

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !14936, !tbaa !2668
  %tobool705 = icmp ne i8* %354, null, !dbg !14936
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !14938

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14939, !tbaa !2762
  %tobool707 = trunc i8 %355 to i1, !dbg !14939
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !14940

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !14941

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !14942, !tbaa !2668
  %357 = load i8, i8* %356, align 1, !dbg !14945, !tbaa !3315, !ctir !178
  %tobool710 = icmp ne i8 %357, 0, !dbg !14946
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14946

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14947

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14948, !tbaa !3308
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14948, !tbaa !3308
  %cmp713 = icmp ult i64 %358, %359, !dbg !14948
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !14951

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14948, !tbaa !2668
  %361 = load i8, i8* %360, align 1, !dbg !14948, !tbaa !3315, !ctir !178
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14948, !tbaa !2668
  %363 = load i64, i64* %len, align 8, !dbg !14948, !tbaa !3308
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14948, !ctir !7
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14948, !tbaa !3315
  br label %if.end717, !dbg !14948

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !14951, !tbaa !3308
  %inc718 = add i64 %364, 1, !dbg !14951
  store i64 %inc718, i64* %len, align 8, !dbg !14951, !tbaa !3308
  br label %do.end720, !dbg !14951

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !14951

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !14952, !tbaa !2668
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !14952
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !14952, !tbaa !2668
  br label %for.cond709, !dbg !14953, !llvm.loop !14954

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !14955

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !14956, !tbaa !3308
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !14958, !tbaa !3308
  %cmp725 = icmp ult i64 %366, %367, !dbg !14959
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !14960

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !14961, !tbaa !2668
  %369 = load i64, i64* %len, align 8, !dbg !14962, !tbaa !3308
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !14961, !ctir !7
  store i8 0, i8* %arrayidx728, align 1, !dbg !14963, !tbaa !3315
  br label %if.end729, !dbg !14961

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !14964, !tbaa !3308
  store i64 %370, i64* %retval, align 8, !dbg !14965
  br label %return, !dbg !14965

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !14966), !dbg !14967
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !14968, !tbaa !3315
  %cmp730 = icmp eq i32 %371, 2, !dbg !14970
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !14971

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !14972, !tbaa !2762
  %tobool733 = trunc i8 %372 to i1, !dbg !14972
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !14973

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !14974, !tbaa !3315
  br label %if.end736, !dbg !14975

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !14976, !tbaa !2668
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !14977, !tbaa !3308
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !14978, !tbaa !2668
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !14979, !tbaa !3308
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !14980, !tbaa !3315
  %378 = load i32, i32* %flags.addr, align 4, !dbg !14981, !tbaa !2655
  %and737 = and i32 %378, -3, !dbg !14982
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !14983, !tbaa !2668
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !14984, !tbaa !2668
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !14985
  store i64 %call738, i64* %retval, align 8, !dbg !14986
  br label %return, !dbg !14986

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !14987
  ret i64 %381, !dbg !14987
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !14988 !ctir !1125 {
entry:
  %retval = alloca i8*, align 8, !ctir !177
  %msgid.addr = alloca i8*, align 8, !ctir !177
  %s.addr = alloca i32, align 4, !ctir !1012
  %translation = alloca i8*, align 8, !ctir !177
  %locale_code = alloca i8*, align 8, !ctir !177
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !14989, metadata !DIExpression()), !dbg !14990
  store i32 %s, i32* %s.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14991, metadata !DIExpression()), !dbg !14992
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !14993, metadata !DIExpression()), !dbg !14994
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !14995, !tbaa !2668
  %call = call i8* @gettext(i8* %0) #9, !dbg !14995
  store i8* %call, i8** %translation, align 8, !dbg !14994, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !14996, metadata !DIExpression()), !dbg !14997
  %1 = load i8*, i8** %translation, align 8, !dbg !14998, !tbaa !2668
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !15000, !tbaa !2668
  %cmp = icmp ne i8* %1, %2, !dbg !15001
  br i1 %cmp, label %if.then, label %if.end, !dbg !15002

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !15003, !tbaa !2668
  store i8* %3, i8** %retval, align 8, !dbg !15004
  br label %return, !dbg !15004

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !15005
  store i8* %call1, i8** %locale_code, align 8, !dbg !15006, !tbaa !2668
  %4 = load i8*, i8** %locale_code, align 8, !dbg !15007, !tbaa !2668
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.330, i64 0, i64 0)) #14, !dbg !15007
  %cmp3 = icmp eq i32 %call2, 0, !dbg !15007
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !15009

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !15010, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !15010, !ctir !177
  %6 = load i8, i8* %arrayidx, align 1, !dbg !15010, !tbaa !3315
  %conv = sext i8 %6 to i32, !dbg !15010
  %cmp5 = icmp eq i32 %conv, 96, !dbg !15011
  %7 = zext i1 %cmp5 to i64, !dbg !15010
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.331, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.332, i64 0, i64 0), !dbg !15010
  store i8* %cond, i8** %retval, align 8, !dbg !15012
  br label %return, !dbg !15012

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !15013, !tbaa !2668
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.333, i64 0, i64 0)) #14, !dbg !15013
  %cmp9 = icmp eq i32 %call8, 0, !dbg !15013
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15015

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !15016, !tbaa !2668
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !15016, !ctir !177
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !15016, !tbaa !3315
  %conv13 = sext i8 %10 to i32, !dbg !15016
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !15017
  %11 = zext i1 %cmp14 to i64, !dbg !15016
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.334, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.335, i64 0, i64 0), !dbg !15016
  store i8* %cond16, i8** %retval, align 8, !dbg !15018
  br label %return, !dbg !15018

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !15019, !tbaa !3315
  %cmp18 = icmp eq i32 %12, 9, !dbg !15020
  %13 = zext i1 %cmp18 to i64, !dbg !15019
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.327, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.329, i64 0, i64 0), !dbg !15019
  store i8* %cond20, i8** %retval, align 8, !dbg !15021
  br label %return, !dbg !15021

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !15022
  ret i8* %14, !dbg !15022
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.savewd*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !15023 !ctir !1061 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1048
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15024, metadata !DIExpression()), !dbg !15025
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15026, metadata !DIExpression()), !dbg !15027
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15028, metadata !DIExpression()), !dbg !15029
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15030, !tbaa !2668
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15031, !tbaa !3308
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15032, !tbaa !2668
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !15033
  ret i8* %call, !dbg !15034
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !15035 !ctir !1063 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %size.addr = alloca i64*, align 8, !ctir !694
  %o.addr = alloca %struct.quoting_options*, align 8, !ctir !1048
  %p = alloca %struct.quoting_options*, align 8, !ctir !1048
  %e = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %bufsize = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15036, metadata !DIExpression()), !dbg !15037
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15038, metadata !DIExpression()), !dbg !15039
  store i64* %size, i64** %size.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !15040, metadata !DIExpression()), !dbg !15041
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15042, metadata !DIExpression()), !dbg !15043
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !15044, metadata !DIExpression()), !dbg !15045
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15046, !tbaa !2668
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !15046
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15046

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15047, !tbaa !2668
  br label %cond.end, !dbg !15046

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15046

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !15046
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !15045, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15048, metadata !DIExpression()), !dbg !15049
  %call = call i32* @__errno_location() #16, !dbg !15050
  %2 = load i32, i32* %call, align 4, !dbg !15050, !tbaa !2655, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !15049, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15051, metadata !DIExpression()), !dbg !15052
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15053, !tbaa !2668
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !15054, !ctir !1049
  %4 = load i32, i32* %flags1, align 4, !dbg !15054, !tbaa !14040, !ctir !5
  %5 = load i64*, i64** %size.addr, align 8, !dbg !15055, !tbaa !2668
  %tobool2 = icmp ne i64* %5, null, !dbg !15055
  %6 = zext i1 %tobool2 to i64, !dbg !15055
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !15055
  %or = or i32 %4, %cond3, !dbg !15056
  store i32 %or, i32* %flags, align 4, !dbg !15052, !tbaa !2655
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !15057, metadata !DIExpression()), !dbg !15058
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !15059, !tbaa !2668
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !15060, !tbaa !3308
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15061, !tbaa !2668
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !15062, !ctir !1049
  %10 = load i32, i32* %style, align 8, !dbg !15062, !tbaa !13972, !ctir !1012
  %11 = load i32, i32* %flags, align 4, !dbg !15063, !tbaa !2655
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15064, !tbaa !2668
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !15065, !ctir !1049
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15064
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15066, !tbaa !2668
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !15067, !ctir !1049
  %14 = load i8*, i8** %left_quote, align 8, !dbg !15067, !tbaa !14073, !ctir !177
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15068, !tbaa !2668
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !15069, !ctir !1049
  %16 = load i8*, i8** %right_quote, align 8, !dbg !15069, !tbaa !14078, !ctir !177
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !15070
  %add = add i64 %call4, 1, !dbg !15071
  store i64 %add, i64* %bufsize, align 8, !dbg !15058, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15072, metadata !DIExpression()), !dbg !15073
  %17 = load i64, i64* %bufsize, align 8, !dbg !15074, !tbaa !3308
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !15075
  store i8* %call5, i8** %buf, align 8, !dbg !15073, !tbaa !2668
  %18 = load i8*, i8** %buf, align 8, !dbg !15076, !tbaa !2668
  %19 = load i64, i64* %bufsize, align 8, !dbg !15077, !tbaa !3308
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !15078, !tbaa !2668
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !15079, !tbaa !3308
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15080, !tbaa !2668
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !15081, !ctir !1049
  %23 = load i32, i32* %style6, align 8, !dbg !15081, !tbaa !13972, !ctir !1012
  %24 = load i32, i32* %flags, align 4, !dbg !15082, !tbaa !2655
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15083, !tbaa !2668
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !15084, !ctir !1049
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !15083
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15085, !tbaa !2668
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !15086, !ctir !1049
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !15086, !tbaa !14073, !ctir !177
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15087, !tbaa !2668
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !15088, !ctir !1049
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !15088, !tbaa !14078, !ctir !177
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !15089
  %30 = load i32, i32* %e, align 4, !dbg !15090, !tbaa !2655
  %call12 = call i32* @__errno_location() #16, !dbg !15091
  store i32 %30, i32* %call12, align 4, !dbg !15092, !tbaa !2655, !ctir !5
  %31 = load i64*, i64** %size.addr, align 8, !dbg !15093, !tbaa !2668
  %tobool13 = icmp ne i64* %31, null, !dbg !15093
  br i1 %tobool13, label %if.then, label %if.end, !dbg !15095

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !15096, !tbaa !3308
  %sub = sub i64 %32, 1, !dbg !15097
  %33 = load i64*, i64** %size.addr, align 8, !dbg !15098, !tbaa !2668
  store i64 %sub, i64* %33, align 8, !dbg !15099, !tbaa !3308, !ctir !52
  br label %if.end, !dbg !15100

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !15101, !tbaa !2668
  ret i8* %34, !dbg !15102
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !15103 !ctir !197 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !1065
  %i = alloca i32, align 4, !ctir !5
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15104, metadata !DIExpression()), !dbg !15105
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15106, !tbaa !2668
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !15105, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15107, metadata !DIExpression()), !dbg !15108
  store i32 1, i32* %i, align 4, !dbg !15109, !tbaa !2655
  br label %for.cond, !dbg !15111

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !15112, !tbaa !2655
  %2 = load i32, i32* @nslots, align 4, !dbg !15114, !tbaa !2655
  %cmp = icmp slt i32 %1, %2, !dbg !15115
  br i1 %cmp, label %for.body, label %for.end, !dbg !15116

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15117, !tbaa !2668
  %4 = load i32, i32* %i, align 4, !dbg !15118, !tbaa !2655
  %idxprom = sext i32 %4 to i64, !dbg !15117
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !15117, !ctir !1065
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !15119, !ctir !1066
  %5 = load i8*, i8** %val, align 8, !dbg !15119, !tbaa !15120, !ctir !7
  call void @free(i8* %5) #9, !dbg !15122
  br label %for.inc, !dbg !15122

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !15123, !tbaa !2655
  %inc = add nsw i32 %6, 1, !dbg !15123
  store i32 %inc, i32* %i, align 4, !dbg !15123, !tbaa !2655
  br label %for.cond, !dbg !15124, !llvm.loop !15125

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15127, !tbaa !2668
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !15127, !ctir !1065
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !15129, !ctir !1066
  %8 = load i8*, i8** %val2, align 8, !dbg !15129, !tbaa !15120, !ctir !7
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15130
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15131

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15132, !tbaa !2668
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !15132, !ctir !1065
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !15134, !ctir !1066
  %10 = load i8*, i8** %val5, align 8, !dbg !15134, !tbaa !15120, !ctir !7
  call void @free(i8* %10) #9, !dbg !15135
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !15136, !tbaa !15137, !ctir !52
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !15138, !tbaa !15120, !ctir !7
  br label %if.end, !dbg !15139

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15140, !tbaa !2668
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !15142
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !15143

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15144, !tbaa !2668
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !15144
  call void @free(i8* %13) #9, !dbg !15146
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !15147, !tbaa !2668
  br label %if.end8, !dbg !15148

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !15149, !tbaa !2655
  ret void, !dbg !15150
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !15151 !ctir !1070 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15152, metadata !DIExpression()), !dbg !15153
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15154, metadata !DIExpression()), !dbg !15155
  %0 = load i32, i32* %n.addr, align 4, !dbg !15156, !tbaa !2655
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15157, !tbaa !2668
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !15158
  ret i8* %call, !dbg !15159
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !15160 !ctir !1127 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %options.addr = alloca %struct.quoting_options*, align 8, !ctir !1048
  %e = alloca i32, align 4, !ctir !5
  %sv = alloca %struct.slotvec*, align 8, !ctir !1065
  %preallocated = alloca i8, align 1, !ctir !139
  %nmax = alloca i32, align 4, !ctir !5
  %size = alloca i64, align 8, !ctir !52
  %val = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %qsize = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15161, metadata !DIExpression()), !dbg !15162
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15163, metadata !DIExpression()), !dbg !15164
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15165, metadata !DIExpression()), !dbg !15166
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !15167, metadata !DIExpression()), !dbg !15168
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15169, metadata !DIExpression()), !dbg !15170
  %call = call i32* @__errno_location() #16, !dbg !15171
  %0 = load i32, i32* %call, align 4, !dbg !15171, !tbaa !2655, !ctir !5
  store i32 %0, i32* %e, align 4, !dbg !15170, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15172, metadata !DIExpression()), !dbg !15173
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15174, !tbaa !2668
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !15173, !tbaa !2668
  %2 = load i32, i32* %n.addr, align 4, !dbg !15175, !tbaa !2655
  %cmp = icmp slt i32 %2, 0, !dbg !15177
  br i1 %cmp, label %if.then, label %if.end, !dbg !15178

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15179
  unreachable, !dbg !15179

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !15180, !tbaa !2655
  %4 = load i32, i32* %n.addr, align 4, !dbg !15182, !tbaa !2655
  %cmp1 = icmp sle i32 %3, %4, !dbg !15183
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !15184

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !15185, metadata !DIExpression()), !dbg !15187
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15188, !tbaa !2668
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !15189
  %frombool = zext i1 %cmp3 to i8, !dbg !15187
  store i8 %frombool, i8* %preallocated, align 1, !dbg !15187, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !15190, metadata !DIExpression()), !dbg !15191
  store i32 2147483646, i32* %nmax, align 4, !dbg !15191, !tbaa !2655
  %6 = load i32, i32* %nmax, align 4, !dbg !15192, !tbaa !2655
  %7 = load i32, i32* %n.addr, align 4, !dbg !15194, !tbaa !2655
  %cmp4 = icmp slt i32 %6, %7, !dbg !15195
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !15196

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #15, !dbg !15197
  unreachable, !dbg !15197

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !15198, !tbaa !2762
  %tobool = trunc i8 %8 to i1, !dbg !15198
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15198

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !15198

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15199, !tbaa !2668
  br label %cond.end, !dbg !15198

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !15198
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !15198
  %11 = load i32, i32* %n.addr, align 4, !dbg !15200, !tbaa !2655
  %add = add nsw i32 %11, 1, !dbg !15201
  %conv = sext i32 %add to i64, !dbg !15202
  %mul = mul i64 %conv, 16, !dbg !15203
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !15204
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !15204
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !15205, !tbaa !2668
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !15206, !tbaa !2668
  %13 = load i8, i8* %preallocated, align 1, !dbg !15207, !tbaa !2762
  %tobool8 = trunc i8 %13 to i1, !dbg !15207
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !15209

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15210, !tbaa !2668
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !15211
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !15211, !tbaa.struct !15212
  br label %if.end10, !dbg !15213

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15214, !tbaa !2668
  %17 = load i32, i32* @nslots, align 4, !dbg !15215, !tbaa !2655
  %idx.ext = sext i32 %17 to i64, !dbg !15216
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !15216
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !15217
  %19 = load i32, i32* %n.addr, align 4, !dbg !15218, !tbaa !2655
  %add11 = add nsw i32 %19, 1, !dbg !15219
  %20 = load i32, i32* @nslots, align 4, !dbg !15220, !tbaa !2655
  %sub = sub nsw i32 %add11, %20, !dbg !15221
  %conv12 = sext i32 %sub to i64, !dbg !15222
  %mul13 = mul i64 %conv12, 16, !dbg !15223
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !15217
  %21 = load i32, i32* %n.addr, align 4, !dbg !15224, !tbaa !2655
  %add14 = add nsw i32 %21, 1, !dbg !15225
  store i32 %add14, i32* @nslots, align 4, !dbg !15226, !tbaa !2655
  br label %if.end15, !dbg !15227

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15228, metadata !DIExpression()), !dbg !15230
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15231, !tbaa !2668
  %23 = load i32, i32* %n.addr, align 4, !dbg !15232, !tbaa !2655
  %idxprom = sext i32 %23 to i64, !dbg !15231
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !15231, !ctir !1065
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !15233, !ctir !1066
  %24 = load i64, i64* %size16, align 8, !dbg !15233, !tbaa !15137, !ctir !52
  store i64 %24, i64* %size, align 8, !dbg !15230, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8** %val, metadata !15234, metadata !DIExpression()), !dbg !15235
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15236, !tbaa !2668
  %26 = load i32, i32* %n.addr, align 4, !dbg !15237, !tbaa !2655
  %idxprom17 = sext i32 %26 to i64, !dbg !15236
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !15236, !ctir !1065
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !15238, !ctir !1066
  %27 = load i8*, i8** %val19, align 8, !dbg !15238, !tbaa !15120, !ctir !7
  store i8* %27, i8** %val, align 8, !dbg !15235, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15239, metadata !DIExpression()), !dbg !15240
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15241, !tbaa !2668
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !15242, !ctir !1049
  %29 = load i32, i32* %flags20, align 4, !dbg !15242, !tbaa !14040, !ctir !5
  %or = or i32 %29, 1, !dbg !15243
  store i32 %or, i32* %flags, align 4, !dbg !15240, !tbaa !2655
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !15244, metadata !DIExpression()), !dbg !15245
  %30 = load i8*, i8** %val, align 8, !dbg !15246, !tbaa !2668
  %31 = load i64, i64* %size, align 8, !dbg !15247, !tbaa !3308
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !15248, !tbaa !2668
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !15249, !tbaa !3308
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15250, !tbaa !2668
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !15251, !ctir !1049
  %35 = load i32, i32* %style, align 8, !dbg !15251, !tbaa !13972, !ctir !1012
  %36 = load i32, i32* %flags, align 4, !dbg !15252, !tbaa !2655
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15253, !tbaa !2668
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !15254, !ctir !1049
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15253
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15255, !tbaa !2668
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !15256, !ctir !1049
  %39 = load i8*, i8** %left_quote, align 8, !dbg !15256, !tbaa !14073, !ctir !177
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15257, !tbaa !2668
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !15258, !ctir !1049
  %41 = load i8*, i8** %right_quote, align 8, !dbg !15258, !tbaa !14078, !ctir !177
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !15259
  store i64 %call21, i64* %qsize, align 8, !dbg !15245, !tbaa !3308
  %42 = load i64, i64* %size, align 8, !dbg !15260, !tbaa !3308
  %43 = load i64, i64* %qsize, align 8, !dbg !15262, !tbaa !3308
  %cmp22 = icmp ule i64 %42, %43, !dbg !15263
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !15264

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !15265, !tbaa !3308
  %add25 = add i64 %44, 1, !dbg !15267
  store i64 %add25, i64* %size, align 8, !dbg !15268, !tbaa !3308
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15269, !tbaa !2668
  %46 = load i32, i32* %n.addr, align 4, !dbg !15270, !tbaa !2655
  %idxprom26 = sext i32 %46 to i64, !dbg !15269
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !15269, !ctir !1065
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !15271, !ctir !1066
  store i64 %add25, i64* %size28, align 8, !dbg !15272, !tbaa !15137, !ctir !52
  %47 = load i8*, i8** %val, align 8, !dbg !15273, !tbaa !2668
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15275
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15276

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !15277, !tbaa !2668
  call void @free(i8* %48) #9, !dbg !15278
  br label %if.end32, !dbg !15278

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !15279, !tbaa !3308
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !15280
  store i8* %call33, i8** %val, align 8, !dbg !15281, !tbaa !2668
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15282, !tbaa !2668
  %51 = load i32, i32* %n.addr, align 4, !dbg !15283, !tbaa !2655
  %idxprom34 = sext i32 %51 to i64, !dbg !15282
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !15282, !ctir !1065
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !15284, !ctir !1066
  store i8* %call33, i8** %val36, align 8, !dbg !15285, !tbaa !15120, !ctir !7
  %52 = load i8*, i8** %val, align 8, !dbg !15286, !tbaa !2668
  %53 = load i64, i64* %size, align 8, !dbg !15287, !tbaa !3308
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !15288, !tbaa !2668
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !15289, !tbaa !3308
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15290, !tbaa !2668
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !15291, !ctir !1049
  %57 = load i32, i32* %style37, align 8, !dbg !15291, !tbaa !13972, !ctir !1012
  %58 = load i32, i32* %flags, align 4, !dbg !15292, !tbaa !2655
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15293, !tbaa !2668
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !15294, !ctir !1049
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !15293
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15295, !tbaa !2668
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !15296, !ctir !1049
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !15296, !tbaa !14073, !ctir !177
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15297, !tbaa !2668
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !15298, !ctir !1049
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !15298, !tbaa !14078, !ctir !177
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !15299
  br label %if.end43, !dbg !15300

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !15301, !tbaa !2655
  %call44 = call i32* @__errno_location() #16, !dbg !15302
  store i32 %64, i32* %call44, align 4, !dbg !15303, !tbaa !2655, !ctir !5
  %65 = load i8*, i8** %val, align 8, !dbg !15304, !tbaa !2668
  ret i8* %65, !dbg !15305
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15306 !ctir !1072 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15307, metadata !DIExpression()), !dbg !15308
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15309, metadata !DIExpression()), !dbg !15310
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15311, metadata !DIExpression()), !dbg !15312
  %0 = load i32, i32* %n.addr, align 4, !dbg !15313, !tbaa !2655
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15314, !tbaa !2668
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15315, !tbaa !3308
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !15316
  ret i8* %call, !dbg !15317
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !15318 !ctir !215 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15319, metadata !DIExpression()), !dbg !15320
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15321, !tbaa !2668
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !15322
  ret i8* %call, !dbg !15323
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !15324 !ctir !1074 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15325, metadata !DIExpression()), !dbg !15326
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15327, metadata !DIExpression()), !dbg !15328
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15329, !tbaa !2668
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15330, !tbaa !3308
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !15331
  ret i8* %call, !dbg !15332
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !15333 !ctir !1076 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !1012
  %arg.addr = alloca i8*, align 8, !ctir !177
  %o = alloca %struct.quoting_options, align 8, !ctir !1049
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15334, metadata !DIExpression()), !dbg !15335
  store i32 %s, i32* %s.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15336, metadata !DIExpression()), !dbg !15337
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15338, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15340, metadata !DIExpression()), !dbg !15341
  %0 = load i32, i32* %s.addr, align 4, !dbg !15342, !tbaa !3315
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15343
  %1 = load i32, i32* %n.addr, align 4, !dbg !15344, !tbaa !2655
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15345, !tbaa !2668
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !15346
  ret i8* %call, !dbg !15347
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !15348 !ctir !1129 {
entry:
  %style.addr = alloca i32, align 4, !ctir !1012
  store i32 %style, i32* %style.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !15349, metadata !DIExpression()), !dbg !15350
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !15351, metadata !DIExpression()), !dbg !15352
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !15352
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15352
  %1 = load i32, i32* %style.addr, align 4, !dbg !15353, !tbaa !3315
  %cmp = icmp eq i32 %1, 10, !dbg !15355
  br i1 %cmp, label %if.then, label %if.end, !dbg !15356

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15357
  unreachable, !dbg !15357

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !15358, !tbaa !3315
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !15359, !ctir !1037
  store i32 %2, i32* %style1, align 8, !dbg !15360, !tbaa !13972, !ctir !1012
  ret void, !dbg !15361
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15362 !ctir !1078 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !1012
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o = alloca %struct.quoting_options, align 8, !ctir !1049
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15363, metadata !DIExpression()), !dbg !15364
  store i32 %s, i32* %s.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15365, metadata !DIExpression()), !dbg !15366
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15367, metadata !DIExpression()), !dbg !15368
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15369, metadata !DIExpression()), !dbg !15370
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15371, metadata !DIExpression()), !dbg !15372
  %0 = load i32, i32* %s.addr, align 4, !dbg !15373, !tbaa !3315
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15374
  %1 = load i32, i32* %n.addr, align 4, !dbg !15375, !tbaa !2655
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15376, !tbaa !2668
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15377, !tbaa !3308
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !15378
  ret i8* %call, !dbg !15379
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !15380 !ctir !1080 {
entry:
  %s.addr = alloca i32, align 4, !ctir !1012
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i32 %s, i32* %s.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15381, metadata !DIExpression()), !dbg !15382
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15383, metadata !DIExpression()), !dbg !15384
  %0 = load i32, i32* %s.addr, align 4, !dbg !15385, !tbaa !3315
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15386, !tbaa !2668
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !15387
  ret i8* %call, !dbg !15388
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15389 !ctir !1082 {
entry:
  %s.addr = alloca i32, align 4, !ctir !1012
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %s, i32* %s.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15390, metadata !DIExpression()), !dbg !15391
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15392, metadata !DIExpression()), !dbg !15393
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15394, metadata !DIExpression()), !dbg !15395
  %0 = load i32, i32* %s.addr, align 4, !dbg !15396, !tbaa !3315
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15397, !tbaa !2668
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15398, !tbaa !3308
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15399
  ret i8* %call, !dbg !15400
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15401 !ctir !1084 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %ch.addr = alloca i8, align 1, !ctir !8
  %options = alloca %struct.quoting_options, align 8, !ctir !1037
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15402, metadata !DIExpression()), !dbg !15403
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15404, metadata !DIExpression()), !dbg !15405
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3315
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15406, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15408, metadata !DIExpression()), !dbg !15409
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15410
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15410, !tbaa.struct !15411
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15412, !tbaa !3315
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15413
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15414, !tbaa !2668
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15415, !tbaa !3308
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15416
  ret i8* %call1, !dbg !15417
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15418 !ctir !1086 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  %ch.addr = alloca i8, align 1, !ctir !8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15419, metadata !DIExpression()), !dbg !15420
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3315
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15421, metadata !DIExpression()), !dbg !15422
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15423, !tbaa !2668
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15424, !tbaa !3315
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15425
  ret i8* %call, !dbg !15426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15427 !ctir !215 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15428, metadata !DIExpression()), !dbg !15429
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15430, !tbaa !2668
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15431
  ret i8* %call, !dbg !15432
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15433 !ctir !1074 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15434, metadata !DIExpression()), !dbg !15435
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15436, metadata !DIExpression()), !dbg !15437
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15438, !tbaa !2668
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15439, !tbaa !3308
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15440
  ret i8* %call, !dbg !15441
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15442 !ctir !1076 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %s.addr = alloca i32, align 4, !ctir !1012
  %arg.addr = alloca i8*, align 8, !ctir !177
  %options = alloca %struct.quoting_options, align 8, !ctir !1037
  %tmp = alloca %struct.quoting_options, align 8, !ctir !1037
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15443, metadata !DIExpression()), !dbg !15444
  store i32 %s, i32* %s.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15445, metadata !DIExpression()), !dbg !15446
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15447, metadata !DIExpression()), !dbg !15448
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15449, metadata !DIExpression()), !dbg !15450
  %0 = load i32, i32* %s.addr, align 4, !dbg !15451, !tbaa !3315
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15452
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15452
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15452, !tbaa.struct !15411
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15453
  %3 = load i32, i32* %n.addr, align 4, !dbg !15454, !tbaa !2655
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15455, !tbaa !2668
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15456
  ret i8* %call1, !dbg !15457
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15458 !ctir !1088 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %left_quote.addr = alloca i8*, align 8, !ctir !177
  %right_quote.addr = alloca i8*, align 8, !ctir !177
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15459, metadata !DIExpression()), !dbg !15460
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15461, metadata !DIExpression()), !dbg !15462
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15463, metadata !DIExpression()), !dbg !15464
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15465, metadata !DIExpression()), !dbg !15466
  %0 = load i32, i32* %n.addr, align 4, !dbg !15467, !tbaa !2655
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15468, !tbaa !2668
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15469, !tbaa !2668
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15470, !tbaa !2668
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15471
  ret i8* %call, !dbg !15472
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15473 !ctir !1090 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %left_quote.addr = alloca i8*, align 8, !ctir !177
  %right_quote.addr = alloca i8*, align 8, !ctir !177
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  %o = alloca %struct.quoting_options, align 8, !ctir !1037
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15474, metadata !DIExpression()), !dbg !15475
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15476, metadata !DIExpression()), !dbg !15477
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15478, metadata !DIExpression()), !dbg !15479
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15480, metadata !DIExpression()), !dbg !15481
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15482, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15484, metadata !DIExpression()), !dbg !15485
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15486
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15486, !tbaa.struct !15411
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15487, !tbaa !2668
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15488, !tbaa !2668
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15489
  %3 = load i32, i32* %n.addr, align 4, !dbg !15490, !tbaa !2655
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15491, !tbaa !2668
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15492, !tbaa !3308
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15493
  ret i8* %call, !dbg !15494
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15495 !ctir !1092 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !177
  %right_quote.addr = alloca i8*, align 8, !ctir !177
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15496, metadata !DIExpression()), !dbg !15497
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15498, metadata !DIExpression()), !dbg !15499
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15500, metadata !DIExpression()), !dbg !15501
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15502, !tbaa !2668
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15503, !tbaa !2668
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15504, !tbaa !2668
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15505
  ret i8* %call, !dbg !15506
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15507 !ctir !1094 {
entry:
  %left_quote.addr = alloca i8*, align 8, !ctir !177
  %right_quote.addr = alloca i8*, align 8, !ctir !177
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15508, metadata !DIExpression()), !dbg !15509
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15510, metadata !DIExpression()), !dbg !15511
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15512, metadata !DIExpression()), !dbg !15513
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15514, metadata !DIExpression()), !dbg !15515
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15516, !tbaa !2668
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15517, !tbaa !2668
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15518, !tbaa !2668
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15519, !tbaa !3308
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15520
  ret i8* %call, !dbg !15521
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15522 !ctir !1096 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15523, metadata !DIExpression()), !dbg !15524
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15525, metadata !DIExpression()), !dbg !15526
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15527, metadata !DIExpression()), !dbg !15528
  %0 = load i32, i32* %n.addr, align 4, !dbg !15529, !tbaa !2655
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15530, !tbaa !2668
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15531, !tbaa !3308
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15532
  ret i8* %call, !dbg !15533
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15534 !ctir !1098 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  %argsize.addr = alloca i64, align 8, !ctir !52
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15537, metadata !DIExpression()), !dbg !15538
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15539, !tbaa !2668
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15540, !tbaa !3308
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15541
  ret i8* %call, !dbg !15542
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15543 !ctir !1100 {
entry:
  %n.addr = alloca i32, align 4, !ctir !5
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15544, metadata !DIExpression()), !dbg !15545
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15546, metadata !DIExpression()), !dbg !15547
  %0 = load i32, i32* %n.addr, align 4, !dbg !15548, !tbaa !2655
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15549, !tbaa !2668
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15550
  ret i8* %call, !dbg !15551
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15552 !ctir !1102 {
entry:
  %arg.addr = alloca i8*, align 8, !ctir !177
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15553, metadata !DIExpression()), !dbg !15554
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15555, !tbaa !2668
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15556
  ret i8* %call, !dbg !15557
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15558 !ctir !1796 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fd1.addr = alloca i32, align 4, !ctir !5
  %src.addr = alloca i8*, align 8, !ctir !177
  %fd2.addr = alloca i32, align 4, !ctir !5
  %dst.addr = alloca i8*, align 8, !ctir !177
  %flags.addr = alloca i32, align 4, !ctir !67
  %ret_val = alloca i32, align 4, !ctir !5
  %err = alloca i32, align 4, !ctir !5
  %src_len = alloca i64, align 8, !ctir !52
  %dst_len = alloca i64, align 8, !ctir !52
  %src_temp = alloca i8*, align 8, !ctir !7
  %dst_temp = alloca i8*, align 8, !ctir !7
  %src_slash = alloca i8, align 1, !ctir !139
  %dst_slash = alloca i8, align 1, !ctir !139
  %rename_errno = alloca i32, align 4, !ctir !5
  %src_st = alloca %struct.stat, align 8, !ctir !15560
  %dst_st = alloca %struct.stat, align 8, !ctir !15560
  %dst_found_nonexistent = alloca i8, align 1, !ctir !139
  store i32 %fd1, i32* %fd1.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15581, metadata !DIExpression()), !dbg !15582
  store i8* %src, i8** %src.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15583, metadata !DIExpression()), !dbg !15584
  store i32 %fd2, i32* %fd2.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15585, metadata !DIExpression()), !dbg !15586
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15587, metadata !DIExpression()), !dbg !15588
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15589, metadata !DIExpression()), !dbg !15590
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15591, metadata !DIExpression()), !dbg !15592
  store i32 -1, i32* %ret_val, align 4, !dbg !15592, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15593, metadata !DIExpression()), !dbg !15594
  store i32 22, i32* %err, align 4, !dbg !15594, !tbaa !2655
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15595, !tbaa !2655
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15596, !tbaa !2668
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15597, !tbaa !2655
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15598, !tbaa !2668
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15599, !tbaa !2655
  %call = call i64 (i64, ...) @syscall(i64 316, i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #9, !dbg !15600
  %conv = trunc i64 %call to i32, !dbg !15600
  store i32 %conv, i32* %ret_val, align 4, !dbg !15601, !tbaa !2655
  %call1 = call i32* @__errno_location() #16, !dbg !15602
  %5 = load i32, i32* %call1, align 4, !dbg !15602, !tbaa !2655, !ctir !5
  store i32 %5, i32* %err, align 4, !dbg !15603, !tbaa !2655
  %6 = load i32, i32* %ret_val, align 4, !dbg !15604, !tbaa !2655
  %cmp = icmp slt i32 %6, 0, !dbg !15606
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15607

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15608, !tbaa !2655
  %cmp3 = icmp eq i32 %7, 22, !dbg !15609
  br i1 %cmp3, label %if.end, label %lor.lhs.false, !dbg !15610

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15611, !tbaa !2655
  %cmp5 = icmp eq i32 %8, 38, !dbg !15612
  br i1 %cmp5, label %if.end, label %lor.lhs.false7, !dbg !15613

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15614, !tbaa !2655
  %cmp8 = icmp eq i32 %9, 95, !dbg !15615
  br i1 %cmp8, label %if.end, label %if.then, !dbg !15616

if.then:                                          ; preds = %lor.lhs.false7, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15617, !tbaa !2655
  store i32 %10, i32* %retval, align 4, !dbg !15618
  br label %return, !dbg !15618

if.end:                                           ; preds = %lor.lhs.false7, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15619, metadata !DIExpression()), !dbg !15621
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15622, metadata !DIExpression()), !dbg !15623
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15624, metadata !DIExpression()), !dbg !15625
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15626, !tbaa !2668
  store i8* %11, i8** %src_temp, align 8, !dbg !15625, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15627, metadata !DIExpression()), !dbg !15628
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15629, !tbaa !2668
  store i8* %12, i8** %dst_temp, align 8, !dbg !15628, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15630, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15632, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15634, metadata !DIExpression()), !dbg !15635
  store i32 20, i32* %rename_errno, align 4, !dbg !15635, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15636, metadata !DIExpression()), !dbg !15637
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15638, metadata !DIExpression()), !dbg !15639
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15640, metadata !DIExpression()), !dbg !15641
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15641, !tbaa !2762
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15642, !tbaa !2655
  %cmp10 = icmp ne i32 %13, 0, !dbg !15644
  br i1 %cmp10, label %if.then12, label %if.end31, !dbg !15645

if.then12:                                        ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15646, !tbaa !2655
  %and = and i32 %14, -2, !dbg !15649
  %tobool = icmp ne i32 %and, 0, !dbg !15649
  br i1 %tobool, label %if.then13, label %if.else, !dbg !15650

if.then13:                                        ; preds = %if.then12
  %call14 = call i32 @errno_fail(i32 95), !dbg !15651
  store i32 %call14, i32* %retval, align 4, !dbg !15652
  br label %return, !dbg !15652

if.else:                                          ; preds = %if.then12
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15653, !tbaa !2655
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15656, !tbaa !2668
  %call15 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15657
  %cmp16 = icmp eq i32 %call15, 0, !dbg !15658
  br i1 %cmp16, label %if.then22, label %lor.lhs.false18, !dbg !15659

lor.lhs.false18:                                  ; preds = %if.else
  %call19 = call i32* @__errno_location() #16, !dbg !15660
  %17 = load i32, i32* %call19, align 4, !dbg !15660, !tbaa !2655, !ctir !5
  %cmp20 = icmp eq i32 %17, 75, !dbg !15661
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !15662

if.then22:                                        ; preds = %lor.lhs.false18, %if.else
  %call23 = call i32 @errno_fail(i32 17), !dbg !15663
  store i32 %call23, i32* %retval, align 4, !dbg !15664
  br label %return, !dbg !15664

if.end24:                                         ; preds = %lor.lhs.false18
  %call25 = call i32* @__errno_location() #16, !dbg !15665
  %18 = load i32, i32* %call25, align 4, !dbg !15665, !tbaa !2655, !ctir !5
  %cmp26 = icmp ne i32 %18, 2, !dbg !15667
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !15668

if.then28:                                        ; preds = %if.end24
  store i32 -1, i32* %retval, align 4, !dbg !15669
  br label %return, !dbg !15669

if.end29:                                         ; preds = %if.end24
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15670, !tbaa !2762
  br label %if.end30

if.end30:                                         ; preds = %if.end29
  br label %if.end31, !dbg !15671

if.end31:                                         ; preds = %if.end30, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15672, !tbaa !2668
  %call32 = call i64 @strlen(i8* %19) #14, !dbg !15673
  store i64 %call32, i64* %src_len, align 8, !dbg !15674, !tbaa !3308
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15675, !tbaa !2668
  %call33 = call i64 @strlen(i8* %20) #14, !dbg !15676
  store i64 %call33, i64* %dst_len, align 8, !dbg !15677, !tbaa !3308
  %21 = load i64, i64* %src_len, align 8, !dbg !15678, !tbaa !3308
  %tobool34 = icmp ne i64 %21, 0, !dbg !15678
  br i1 %tobool34, label %lor.lhs.false35, label %if.then37, !dbg !15680

lor.lhs.false35:                                  ; preds = %if.end31
  %22 = load i64, i64* %dst_len, align 8, !dbg !15681, !tbaa !3308
  %tobool36 = icmp ne i64 %22, 0, !dbg !15681
  br i1 %tobool36, label %if.end39, label %if.then37, !dbg !15682

if.then37:                                        ; preds = %lor.lhs.false35, %if.end31
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15683, !tbaa !2655
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15684, !tbaa !2668
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15685, !tbaa !2655
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15686, !tbaa !2668
  %call38 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #9, !dbg !15687
  store i32 %call38, i32* %retval, align 4, !dbg !15688
  br label %return, !dbg !15688

if.end39:                                         ; preds = %lor.lhs.false35
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15689, !tbaa !2668
  %28 = load i64, i64* %src_len, align 8, !dbg !15690, !tbaa !3308
  %sub = sub i64 %28, 1, !dbg !15691
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15689, !ctir !177
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15689, !tbaa !3315
  %conv40 = sext i8 %29 to i32, !dbg !15689
  %cmp41 = icmp eq i32 %conv40, 47, !dbg !15692
  %frombool = zext i1 %cmp41 to i8, !dbg !15693
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15693, !tbaa !2762
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15694, !tbaa !2668
  %31 = load i64, i64* %dst_len, align 8, !dbg !15695, !tbaa !3308
  %sub43 = sub i64 %31, 1, !dbg !15696
  %arrayidx44 = getelementptr inbounds i8, i8* %30, i64 %sub43, !dbg !15694, !ctir !177
  %32 = load i8, i8* %arrayidx44, align 1, !dbg !15694, !tbaa !3315
  %conv45 = sext i8 %32 to i32, !dbg !15694
  %cmp46 = icmp eq i32 %conv45, 47, !dbg !15697
  %frombool48 = zext i1 %cmp46 to i8, !dbg !15698
  store i8 %frombool48, i8* %dst_slash, align 1, !dbg !15698, !tbaa !2762
  %33 = load i8, i8* %src_slash, align 1, !dbg !15699, !tbaa !2762
  %tobool49 = trunc i8 %33 to i1, !dbg !15699
  br i1 %tobool49, label %if.end54, label %land.lhs.true50, !dbg !15701

land.lhs.true50:                                  ; preds = %if.end39
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15702, !tbaa !2762
  %tobool51 = trunc i8 %34 to i1, !dbg !15702
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !15703

if.then52:                                        ; preds = %land.lhs.true50
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15704, !tbaa !2655
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15705, !tbaa !2668
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15706, !tbaa !2655
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15707, !tbaa !2668
  %call53 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #9, !dbg !15708
  store i32 %call53, i32* %retval, align 4, !dbg !15709
  br label %return, !dbg !15709

if.end54:                                         ; preds = %land.lhs.true50, %if.end39
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15710, !tbaa !2655
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15712, !tbaa !2668
  %call55 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15713
  %tobool56 = icmp ne i32 %call55, 0, !dbg !15713
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !15714

if.then57:                                        ; preds = %if.end54
  store i32 -1, i32* %retval, align 4, !dbg !15715
  br label %return, !dbg !15715

if.end58:                                         ; preds = %if.end54
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15716, !tbaa !2762
  %tobool59 = trunc i8 %41 to i1, !dbg !15716
  br i1 %tobool59, label %if.then60, label %if.else67, !dbg !15718

if.then60:                                        ; preds = %if.end58
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15719, !ctir !15560
  %42 = load i32, i32* %st_mode, align 8, !dbg !15719, !tbaa !2934, !ctir !137
  %and61 = and i32 %42, 61440, !dbg !15719
  %cmp62 = icmp eq i32 %and61, 16384, !dbg !15719
  br i1 %cmp62, label %if.end66, label %if.then64, !dbg !15722

if.then64:                                        ; preds = %if.then60
  %call65 = call i32 @errno_fail(i32 2), !dbg !15723
  store i32 %call65, i32* %retval, align 4, !dbg !15724
  br label %return, !dbg !15724

if.end66:                                         ; preds = %if.then60
  br label %if.end98, !dbg !15725

if.else67:                                        ; preds = %if.end58
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15726, !tbaa !2655
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15728, !tbaa !2668
  %call68 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15729
  %tobool69 = icmp ne i32 %call68, 0, !dbg !15729
  br i1 %tobool69, label %if.then70, label %if.else81, !dbg !15730

if.then70:                                        ; preds = %if.else67
  %call71 = call i32* @__errno_location() #16, !dbg !15731
  %45 = load i32, i32* %call71, align 4, !dbg !15731, !tbaa !2655, !ctir !5
  %cmp72 = icmp ne i32 %45, 2, !dbg !15734
  br i1 %cmp72, label %if.then79, label %lor.lhs.false74, !dbg !15735

lor.lhs.false74:                                  ; preds = %if.then70
  %st_mode75 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15736, !ctir !15560
  %46 = load i32, i32* %st_mode75, align 8, !dbg !15736, !tbaa !2934, !ctir !137
  %and76 = and i32 %46, 61440, !dbg !15736
  %cmp77 = icmp eq i32 %and76, 16384, !dbg !15736
  br i1 %cmp77, label %if.end80, label %if.then79, !dbg !15737

if.then79:                                        ; preds = %lor.lhs.false74, %if.then70
  store i32 -1, i32* %retval, align 4, !dbg !15738
  br label %return, !dbg !15738

if.end80:                                         ; preds = %lor.lhs.false74
  br label %if.end97, !dbg !15739

if.else81:                                        ; preds = %if.else67
  %st_mode82 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15740, !ctir !15560
  %47 = load i32, i32* %st_mode82, align 8, !dbg !15740, !tbaa !2934, !ctir !137
  %and83 = and i32 %47, 61440, !dbg !15740
  %cmp84 = icmp eq i32 %and83, 16384, !dbg !15740
  br i1 %cmp84, label %if.else88, label %if.then86, !dbg !15742

if.then86:                                        ; preds = %if.else81
  %call87 = call i32 @errno_fail(i32 20), !dbg !15743
  store i32 %call87, i32* %retval, align 4, !dbg !15744
  br label %return, !dbg !15744

if.else88:                                        ; preds = %if.else81
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15745, !ctir !15560
  %48 = load i32, i32* %st_mode89, align 8, !dbg !15745, !tbaa !2934, !ctir !137
  %and90 = and i32 %48, 61440, !dbg !15745
  %cmp91 = icmp eq i32 %and90, 16384, !dbg !15745
  br i1 %cmp91, label %if.end95, label %if.then93, !dbg !15747

if.then93:                                        ; preds = %if.else88
  %call94 = call i32 @errno_fail(i32 21), !dbg !15748
  store i32 %call94, i32* %retval, align 4, !dbg !15749
  br label %return, !dbg !15749

if.end95:                                         ; preds = %if.else88
  br label %if.end96

if.end96:                                         ; preds = %if.end95
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end80
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.end66
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15750, !tbaa !2655
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15751, !tbaa !2668
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15752, !tbaa !2655
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15753, !tbaa !2668
  %call99 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #9, !dbg !15754
  store i32 %call99, i32* %ret_val, align 4, !dbg !15755, !tbaa !2655
  %call100 = call i32* @__errno_location() #16, !dbg !15756
  %53 = load i32, i32* %call100, align 4, !dbg !15756, !tbaa !2655, !ctir !5
  store i32 %53, i32* %rename_errno, align 4, !dbg !15757, !tbaa !2655
  br label %out, !dbg !15758

out:                                              ; preds = %if.end98
  call void @llvm.dbg.label(metadata !15759), !dbg !15760
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15761, !tbaa !2668
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15763, !tbaa !2668
  %cmp101 = icmp ne i8* %54, %55, !dbg !15764
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !15765

if.then103:                                       ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15766, !tbaa !2668
  call void @free(i8* %56) #9, !dbg !15767
  br label %if.end104, !dbg !15767

if.end104:                                        ; preds = %if.then103, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15768, !tbaa !2668
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15770, !tbaa !2668
  %cmp105 = icmp ne i8* %57, %58, !dbg !15771
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !15772

if.then107:                                       ; preds = %if.end104
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15773, !tbaa !2668
  call void @free(i8* %59) #9, !dbg !15774
  br label %if.end108, !dbg !15774

if.end108:                                        ; preds = %if.then107, %if.end104
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15775, !tbaa !2655
  %call109 = call i32* @__errno_location() #16, !dbg !15776
  store i32 %60, i32* %call109, align 4, !dbg !15777, !tbaa !2655, !ctir !5
  %61 = load i32, i32* %ret_val, align 4, !dbg !15778, !tbaa !2655
  store i32 %61, i32* %retval, align 4, !dbg !15779
  br label %return, !dbg !15779

return:                                           ; preds = %if.end108, %if.then93, %if.then86, %if.then79, %if.then64, %if.then57, %if.then52, %if.then37, %if.then28, %if.then22, %if.then13, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15780
  ret i32 %62, !dbg !15780
}

; Function Attrs: nounwind
declare dso_local i64 @syscall(i64, ...) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15781 !ctir !1798 {
entry:
  %e.addr = alloca i32, align 4, !ctir !5
  store i32 %e, i32* %e.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15782, metadata !DIExpression()), !dbg !15783
  %0 = load i32, i32* %e.addr, align 4, !dbg !15784, !tbaa !2655
  %call = call i32* @__errno_location() #16, !dbg !15785
  store i32 %0, i32* %call, align 4, !dbg !15786, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !15787
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15788 !ctir !1706 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !47
  %count.addr = alloca i64, align 8, !ctir !52
  %result = alloca i64, align 8, !ctir !674
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15790, metadata !DIExpression()), !dbg !15791
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15792, metadata !DIExpression()), !dbg !15793
  store i64 %count, i64* %count.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15794, metadata !DIExpression()), !dbg !15795
  br label %for.cond, !dbg !15796

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15797, metadata !DIExpression()), !dbg !15801
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15802, !tbaa !2655
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15803, !tbaa !2668
  %2 = load i64, i64* %count.addr, align 8, !dbg !15804, !tbaa !3308
  %call = call i64 @read(i32 %0, i8* %1, i64 %2), !dbg !15805
  store i64 %call, i64* %result, align 8, !dbg !15801, !tbaa !3308
  %3 = load i64, i64* %result, align 8, !dbg !15806, !tbaa !3308
  %cmp = icmp sle i64 0, %3, !dbg !15808
  br i1 %cmp, label %if.then, label %if.else, !dbg !15809

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15810, !tbaa !3308
  store i64 %4, i64* %retval, align 8, !dbg !15811
  br label %return, !dbg !15811

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15812
  %5 = load i32, i32* %call1, align 4, !dbg !15812, !tbaa !2655, !ctir !5
  %cmp2 = icmp eq i32 %5, 4, !dbg !15812
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15814

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15815, !llvm.loop !15816

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15819
  %6 = load i32, i32* %call5, align 4, !dbg !15819, !tbaa !2655, !ctir !5
  %cmp6 = icmp eq i32 %6, 22, !dbg !15821
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15822

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15823, !tbaa !3308
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15824
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15825

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15826, !tbaa !3308
  br label %if.end, !dbg !15827

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15828, !tbaa !3308
  store i64 %8, i64* %retval, align 8, !dbg !15829
  br label %return, !dbg !15829

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15830, !llvm.loop !15816

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15831
  ret i64 %9, !dbg !15831
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15832 !ctir !1711 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %fd.addr = alloca i32, align 4, !ctir !5
  %buf.addr = alloca i8*, align 8, !ctir !525
  %count.addr = alloca i64, align 8, !ctir !52
  %result = alloca i64, align 8, !ctir !674
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15833, metadata !DIExpression()), !dbg !15834
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15835, metadata !DIExpression()), !dbg !15836
  store i64 %count, i64* %count.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15837, metadata !DIExpression()), !dbg !15838
  br label %for.cond, !dbg !15839

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15840, metadata !DIExpression()), !dbg !15844
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15845, !tbaa !2655
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15846, !tbaa !2668
  %2 = load i64, i64* %count.addr, align 8, !dbg !15847, !tbaa !3308
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15848
  store i64 %call, i64* %result, align 8, !dbg !15844, !tbaa !3308
  %3 = load i64, i64* %result, align 8, !dbg !15849, !tbaa !3308
  %cmp = icmp sle i64 0, %3, !dbg !15851
  br i1 %cmp, label %if.then, label %if.else, !dbg !15852

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15853, !tbaa !3308
  store i64 %4, i64* %retval, align 8, !dbg !15854
  br label %return, !dbg !15854

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15855
  %5 = load i32, i32* %call1, align 4, !dbg !15855, !tbaa !2655, !ctir !5
  %cmp2 = icmp eq i32 %5, 4, !dbg !15855
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15857

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15858, !llvm.loop !15859

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15862
  %6 = load i32, i32* %call5, align 4, !dbg !15862, !tbaa !2655, !ctir !5
  %cmp6 = icmp eq i32 %6, 22, !dbg !15864
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15865

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15866, !tbaa !3308
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15867
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15868

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15869, !tbaa !3308
  br label %if.end, !dbg !15870

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15871, !tbaa !3308
  store i64 %8, i64* %retval, align 8, !dbg !15872
  br label %return, !dbg !15872

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15873, !llvm.loop !15859

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15874
  ret i64 %9, !dbg !15874
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !15875 !ctir !1809 {
entry:
  %source.addr = alloca i8*, align 8, !ctir !177
  %dest.addr = alloca i8*, align 8, !ctir !177
  store i8* %source, i8** %source.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15877, metadata !DIExpression()), !dbg !15878
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15879, metadata !DIExpression()), !dbg !15880
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15881, !tbaa !2668
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15882, !tbaa !2668
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !15883
  ret i1 %call, !dbg !15884
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !15885 !ctir !1811 {
entry:
  %source_dfd.addr = alloca i32, align 4, !ctir !5
  %source.addr = alloca i8*, align 8, !ctir !177
  %dest_dfd.addr = alloca i32, align 4, !ctir !5
  %dest.addr = alloca i8*, align 8, !ctir !177
  %source_basename = alloca i8*, align 8, !ctir !177
  %dest_basename = alloca i8*, align 8, !ctir !177
  %source_baselen = alloca i64, align 8, !ctir !52
  %dest_baselen = alloca i64, align 8, !ctir !52
  %identical_basenames = alloca i8, align 1, !ctir !139
  %compare_dirs = alloca i8, align 1, !ctir !139
  %same = alloca i8, align 1, !ctir !139
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !15886
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !15886
  %source_dirname = alloca i8*, align 8, !ctir !7
  %flags = alloca i32, align 4, !ctir !5
  %dest_dirname = alloca i8*, align 8, !ctir !7
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15907, metadata !DIExpression()), !dbg !15908
  store i8* %source, i8** %source.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15909, metadata !DIExpression()), !dbg !15910
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15911, metadata !DIExpression()), !dbg !15912
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15913, metadata !DIExpression()), !dbg !15914
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15915, metadata !DIExpression()), !dbg !15916
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15917, !tbaa !2668
  %call = call i8* @last_component(i8* %0) #14, !dbg !15918
  store i8* %call, i8** %source_basename, align 8, !dbg !15916, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15919, metadata !DIExpression()), !dbg !15920
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15921, !tbaa !2668
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15922
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15920, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15923, metadata !DIExpression()), !dbg !15924
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15925, !tbaa !2668
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15926
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15924, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15927, metadata !DIExpression()), !dbg !15928
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15929, !tbaa !2668
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15930
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15928, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15931, metadata !DIExpression()), !dbg !15932
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15933, !tbaa !3308
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15934, !tbaa !3308
  %cmp = icmp eq i64 %4, %5, !dbg !15935
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15936

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15937, !tbaa !2668
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15938, !tbaa !2668
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15939, !tbaa !3308
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15940
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15941
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15942
  %frombool = zext i1 %9 to i8, !dbg !15932
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15932, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15943, metadata !DIExpression()), !dbg !15944
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15945, !tbaa !2762
  %tobool = trunc i8 %10 to i1, !dbg !15945
  %frombool6 = zext i1 %tobool to i8, !dbg !15944
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15944, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15946, metadata !DIExpression()), !dbg !15947
  store i8 0, i8* %same, align 1, !dbg !15947, !tbaa !2762
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15948, !tbaa !2762
  %tobool7 = trunc i8 %11 to i1, !dbg !15948
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !15950

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !15951, metadata !DIExpression()), !dbg !15953
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !15954, metadata !DIExpression()), !dbg !15955
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !15956, metadata !DIExpression()), !dbg !15957
  %12 = load i8*, i8** %source.addr, align 8, !dbg !15958, !tbaa !2668
  %call8 = call i8* @dir_name(i8* %12), !dbg !15959
  store i8* %call8, i8** %source_dirname, align 8, !dbg !15957, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15960, metadata !DIExpression()), !dbg !15961
  store i32 256, i32* %flags, align 4, !dbg !15961, !tbaa !2655
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !15962, !tbaa !2655
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !15964, !tbaa !2668
  %15 = load i32, i32* %flags, align 4, !dbg !15965, !tbaa !2655
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #9, !dbg !15966
  %cmp10 = icmp ne i32 %call9, 0, !dbg !15967
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !15968

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #16, !dbg !15969
  %16 = load i32, i32* %call12, align 4, !dbg !15969, !tbaa !2655, !ctir !5
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !15971, !tbaa !2668
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.356, i64 0, i64 0), i8* %17), !dbg !15972
  br label %if.end, !dbg !15973

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !15974, !tbaa !2668
  call void @free(i8* %18) #9, !dbg !15975
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !15976, metadata !DIExpression()), !dbg !15977
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !15978, !tbaa !2668
  %call13 = call i8* @dir_name(i8* %19), !dbg !15979
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !15977, !tbaa !2668
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !15980, !tbaa !2655
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !15982, !tbaa !2668
  %22 = load i32, i32* %flags, align 4, !dbg !15983, !tbaa !2655
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #9, !dbg !15984
  %cmp15 = icmp ne i32 %call14, 0, !dbg !15985
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !15986

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #16, !dbg !15987
  %23 = load i32, i32* %call17, align 4, !dbg !15987, !tbaa !2655, !ctir !5
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !15989, !tbaa !2668
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.356, i64 0, i64 0), i8* %24), !dbg !15990
  br label %if.end18, !dbg !15991

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !15992, !ctir !15886
  %25 = load i64, i64* %st_ino, align 8, !dbg !15992, !tbaa !4789, !ctir !282
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !15992, !ctir !15886
  %26 = load i64, i64* %st_ino19, align 8, !dbg !15992, !tbaa !4789, !ctir !282
  %cmp20 = icmp eq i64 %25, %26, !dbg !15992
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !15992

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !15992, !ctir !15886
  %27 = load i64, i64* %st_dev, align 8, !dbg !15992, !tbaa !4768, !ctir !280
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !15992, !ctir !15886
  %28 = load i64, i64* %st_dev22, align 8, !dbg !15992, !tbaa !4768, !ctir !280
  %cmp23 = icmp eq i64 %27, %28, !dbg !15992
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !15993
  %frombool25 = zext i1 %29 to i8, !dbg !15994
  store i8 %frombool25, i8* %same, align 1, !dbg !15994, !tbaa !2762
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !15995, !tbaa !2668
  call void @free(i8* %30) #9, !dbg !15996
  br label %if.end26, !dbg !15997

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !15998, !tbaa !2762
  %tobool27 = trunc i8 %31 to i1, !dbg !15998
  ret i1 %tobool27, !dbg !15999
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !16000 !ctir !1159 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dirp.addr = alloca %struct.__dirstream*, align 8, !ctir !675
  %option.addr = alloca i32, align 4, !ctir !1151
  %name_space = alloca i8*, align 8, !ctir !7
  %allocated = alloca i64, align 8, !ctir !52
  %entries = alloca %struct.direntry_t*, align 8, !ctir !1161
  %entries_allocated = alloca i64, align 8, !ctir !52
  %entries_used = alloca i64, align 8, !ctir !52
  %used = alloca i64, align 8, !ctir !52
  %readdir_errno = alloca i32, align 4, !ctir !5
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !1169
  %dp = alloca %struct.dirent*, align 8, !ctir !1175
  %entry2 = alloca i8*, align 8, !ctir !177
  %entry_size = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  %n36 = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %dest = alloca i8*, align 8, !ctir !7
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !16001, metadata !DIExpression()), !dbg !16002
  store i32 %option, i32* %option.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !16003, metadata !DIExpression()), !dbg !16004
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !16005, metadata !DIExpression()), !dbg !16006
  store i8* null, i8** %name_space, align 8, !dbg !16006, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !16007, metadata !DIExpression()), !dbg !16008
  store i64 0, i64* %allocated, align 8, !dbg !16008, !tbaa !3308
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !16009, metadata !DIExpression()), !dbg !16010
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !16010, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !16011, metadata !DIExpression()), !dbg !16012
  store i64 0, i64* %entries_allocated, align 8, !dbg !16012, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !16013, metadata !DIExpression()), !dbg !16014
  store i64 0, i64* %entries_used, align 8, !dbg !16014, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %used, metadata !16015, metadata !DIExpression()), !dbg !16016
  store i64 0, i64* %used, align 8, !dbg !16016, !tbaa !3308
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !16017, metadata !DIExpression()), !dbg !16018
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !16019, metadata !DIExpression()), !dbg !16020
  %0 = load i32, i32* %option.addr, align 4, !dbg !16021, !tbaa !3315
  %idxprom = zext i32 %0 to i64, !dbg !16022
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !16022, !ctir !1173
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !16022, !tbaa !2668
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !16020, !tbaa !2668
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !16023, !tbaa !2668
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !16025
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16026

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !16027
  br label %return, !dbg !16027

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !16028

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !16029, metadata !DIExpression()), !dbg !16033
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !16034, metadata !DIExpression()), !dbg !16035
  %call = call i32* @__errno_location() #16, !dbg !16036
  store i32 0, i32* %call, align 4, !dbg !16037, !tbaa !2655, !ctir !5
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !16038, !tbaa !2668
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !16039
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !16040, !tbaa !2668
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16041, !tbaa !2668
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !16041
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !16043

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !16044

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16045, !tbaa !2668
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !16046, !ctir !1176
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !16045
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !16047, !tbaa !2668
  %6 = load i8*, i8** %entry2, align 8, !dbg !16048, !tbaa !2668
  %7 = load i8*, i8** %entry2, align 8, !dbg !16050, !tbaa !2668
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !16050, !ctir !177
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !16050, !tbaa !3315
  %conv = sext i8 %8 to i32, !dbg !16050
  %cmp7 = icmp ne i32 %conv, 46, !dbg !16051
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !16050

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !16050

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !16052, !tbaa !2668
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !16052, !ctir !177
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !16052, !tbaa !3315
  %conv10 = sext i8 %10 to i32, !dbg !16052
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !16053
  %11 = zext i1 %cmp11 to i64, !dbg !16052
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !16052
  br label %cond.end, !dbg !16050

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !16050
  %idxprom14 = sext i32 %cond13 to i64, !dbg !16048
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !16048, !ctir !177
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !16048, !tbaa !3315
  %conv16 = sext i8 %12 to i32, !dbg !16048
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !16054
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !16055

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !16056, metadata !DIExpression()), !dbg !16058
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16059, !tbaa !2668
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !16059, !ctir !1176
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !16059
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !16059
  %add = add i64 %call22, 1, !dbg !16060
  store i64 %add, i64* %entry_size, align 8, !dbg !16058, !tbaa !3308
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16061, !tbaa !2668
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !16061
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !16063

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !16064, !tbaa !3308
  %16 = load i64, i64* %entries_used, align 8, !dbg !16067, !tbaa !3308
  %cmp25 = icmp eq i64 %15, %16, !dbg !16068
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !16069

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !16070, metadata !DIExpression()), !dbg !16072
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !16073, !tbaa !3308
  store i64 %17, i64* %n, align 8, !dbg !16072, !tbaa !3308
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16074, !tbaa !2668
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !16074
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !16075
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !16075
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !16076, !tbaa !2668
  %21 = load i64, i64* %n, align 8, !dbg !16077, !tbaa !3308
  store i64 %21, i64* %entries_allocated, align 8, !dbg !16078, !tbaa !3308
  br label %if.end29, !dbg !16079

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !16080, !tbaa !2668
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !16081
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16082, !tbaa !2668
  %24 = load i64, i64* %entries_used, align 8, !dbg !16083, !tbaa !3308
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !16082, !ctir !1161
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !16084, !ctir !1162
  store i8* %call30, i8** %name, align 8, !dbg !16085, !tbaa !16086, !ctir !7
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16088, !tbaa !2668
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !16089, !ctir !1176
  %26 = load i64, i64* %d_ino, align 8, !dbg !16089, !tbaa !16090, !ctir !282
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16092, !tbaa !2668
  %28 = load i64, i64* %entries_used, align 8, !dbg !16093, !tbaa !3308
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !16092, !ctir !1161
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !16094, !ctir !1162
  store i64 %26, i64* %ino, align 8, !dbg !16095, !tbaa !16096, !ctir !1168
  %29 = load i64, i64* %entries_used, align 8, !dbg !16097, !tbaa !3308
  %inc = add i64 %29, 1, !dbg !16097
  store i64 %inc, i64* %entries_used, align 8, !dbg !16097, !tbaa !3308
  br label %if.end44, !dbg !16098

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !16099, !tbaa !3308
  %31 = load i64, i64* %used, align 8, !dbg !16102, !tbaa !3308
  %sub = sub i64 %30, %31, !dbg !16103
  %32 = load i64, i64* %entry_size, align 8, !dbg !16104, !tbaa !3308
  %cmp33 = icmp ule i64 %sub, %32, !dbg !16105
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !16106

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !16107, metadata !DIExpression()), !dbg !16109
  %33 = load i64, i64* %used, align 8, !dbg !16110, !tbaa !3308
  %34 = load i64, i64* %entry_size, align 8, !dbg !16111, !tbaa !3308
  %add37 = add i64 %33, %34, !dbg !16112
  store i64 %add37, i64* %n36, align 8, !dbg !16109, !tbaa !3308
  %35 = load i64, i64* %n36, align 8, !dbg !16113, !tbaa !3308
  %36 = load i64, i64* %used, align 8, !dbg !16115, !tbaa !3308
  %cmp38 = icmp ult i64 %35, %36, !dbg !16116
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !16117

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #15, !dbg !16118
  unreachable, !dbg !16118

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !16119, !tbaa !2668
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !16120
  store i8* %call42, i8** %name_space, align 8, !dbg !16121, !tbaa !2668
  %38 = load i64, i64* %n36, align 8, !dbg !16122, !tbaa !3308
  store i64 %38, i64* %allocated, align 8, !dbg !16123, !tbaa !3308
  br label %if.end43, !dbg !16124

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !16125, !tbaa !2668
  %40 = load i64, i64* %used, align 8, !dbg !16126, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !16127
  %41 = load i8*, i8** %entry2, align 8, !dbg !16128, !tbaa !2668
  %42 = load i64, i64* %entry_size, align 8, !dbg !16129, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !16130
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !16131, !tbaa !3308
  %44 = load i64, i64* %used, align 8, !dbg !16132, !tbaa !3308
  %add45 = add i64 %44, %43, !dbg !16132
  store i64 %add45, i64* %used, align 8, !dbg !16132, !tbaa !3308
  br label %if.end46, !dbg !16133

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !16134, !llvm.loop !16135

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #16, !dbg !16138
  %45 = load i32, i32* %call47, align 4, !dbg !16138, !tbaa !2655, !ctir !5
  store i32 %45, i32* %readdir_errno, align 4, !dbg !16139, !tbaa !2655
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !16140, !tbaa !2655
  %cmp48 = icmp ne i32 %46, 0, !dbg !16142
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !16143

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16144, !tbaa !2668
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !16144
  call void @free(i8* %48) #9, !dbg !16146
  %49 = load i8*, i8** %name_space, align 8, !dbg !16147, !tbaa !2668
  call void @free(i8* %49) #9, !dbg !16148
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !16149, !tbaa !2655
  %call51 = call i32* @__errno_location() #16, !dbg !16150
  store i32 %50, i32* %call51, align 4, !dbg !16151, !tbaa !2655, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !16152
  br label %return, !dbg !16152

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16153, !tbaa !2668
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !16153
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !16155

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16156, metadata !DIExpression()), !dbg !16158
  %52 = load i64, i64* %entries_used, align 8, !dbg !16159, !tbaa !3308
  %tobool55 = icmp ne i64 %52, 0, !dbg !16159
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !16161

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16162, !tbaa !2668
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !16162
  %55 = load i64, i64* %entries_used, align 8, !dbg !16163, !tbaa !3308
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16164, !tbaa !2668
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !16165
  br label %if.end57, !dbg !16165

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !16166, !tbaa !3308
  %add58 = add i64 %57, 1, !dbg !16167
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !16168
  store i8* %call59, i8** %name_space, align 8, !dbg !16169, !tbaa !2668
  store i64 0, i64* %used, align 8, !dbg !16170, !tbaa !3308
  store i64 0, i64* %i, align 8, !dbg !16171, !tbaa !3308
  br label %for.cond60, !dbg !16173

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !16174, !tbaa !3308
  %59 = load i64, i64* %entries_used, align 8, !dbg !16176, !tbaa !3308
  %cmp61 = icmp ult i64 %58, %59, !dbg !16177
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !16178

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !16179, metadata !DIExpression()), !dbg !16181
  %60 = load i8*, i8** %name_space, align 8, !dbg !16182, !tbaa !2668
  %61 = load i64, i64* %used, align 8, !dbg !16183, !tbaa !3308
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !16184
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !16181, !tbaa !2668
  %62 = load i8*, i8** %dest, align 8, !dbg !16185, !tbaa !2668
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16186, !tbaa !2668
  %64 = load i64, i64* %i, align 8, !dbg !16187, !tbaa !3308
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !16186, !ctir !1161
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !16188, !ctir !1162
  %65 = load i8*, i8** %name65, align 8, !dbg !16188, !tbaa !16086, !ctir !7
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #9, !dbg !16189
  %66 = load i8*, i8** %dest, align 8, !dbg !16190, !tbaa !2668
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !16191
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !16191
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16191
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !16192
  %67 = load i64, i64* %used, align 8, !dbg !16193, !tbaa !3308
  %add68 = add i64 %67, %add67, !dbg !16193
  store i64 %add68, i64* %used, align 8, !dbg !16193, !tbaa !3308
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16194, !tbaa !2668
  %69 = load i64, i64* %i, align 8, !dbg !16195, !tbaa !3308
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !16194, !ctir !1161
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !16196, !ctir !1162
  %70 = load i8*, i8** %name70, align 8, !dbg !16196, !tbaa !16086, !ctir !7
  call void @free(i8* %70) #9, !dbg !16197
  br label %for.inc, !dbg !16198

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !16199, !tbaa !3308
  %inc71 = add i64 %71, 1, !dbg !16199
  store i64 %inc71, i64* %i, align 8, !dbg !16199, !tbaa !3308
  br label %for.cond60, !dbg !16200, !llvm.loop !16201

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16203, !tbaa !2668
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !16203
  call void @free(i8* %73) #9, !dbg !16204
  br label %if.end80, !dbg !16205

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !16206, !tbaa !3308
  %75 = load i64, i64* %allocated, align 8, !dbg !16208, !tbaa !3308
  %cmp74 = icmp eq i64 %74, %75, !dbg !16209
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !16210

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !16211, !tbaa !2668
  %77 = load i64, i64* %used, align 8, !dbg !16212, !tbaa !3308
  %add77 = add i64 %77, 1, !dbg !16213
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !16214
  store i8* %call78, i8** %name_space, align 8, !dbg !16215, !tbaa !2668
  br label %if.end79, !dbg !16216

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !16217, !tbaa !2668
  %79 = load i64, i64* %used, align 8, !dbg !16218, !tbaa !3308
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !16217, !ctir !7
  store i8 0, i8* %arrayidx81, align 1, !dbg !16219, !tbaa !3315
  %80 = load i8*, i8** %name_space, align 8, !dbg !16220, !tbaa !2668
  store i8* %80, i8** %retval, align 8, !dbg !16221
  br label %return, !dbg !16221

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !16222
  ret i8* %81, !dbg !16222
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !16223 !ctir !1171 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !525
  %b.addr = alloca i8*, align 8, !ctir !525
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1186
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1186
  store i8* %a, i8** %a.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16224, metadata !DIExpression()), !dbg !16225
  store i8* %b, i8** %b.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16226, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !16228, metadata !DIExpression()), !dbg !16229
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16230, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !16230
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !16229, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !16231, metadata !DIExpression()), !dbg !16232
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16233, !tbaa !2668
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !16233
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !16232, !tbaa !2668
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16234, !tbaa !2668
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !16235, !ctir !1187
  %5 = load i8*, i8** %name, align 8, !dbg !16235, !tbaa !16086, !ctir !7
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16236, !tbaa !2668
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !16237, !ctir !1187
  %7 = load i8*, i8** %name1, align 8, !dbg !16237, !tbaa !16086, !ctir !7
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !16238
  ret i32 %call, !dbg !16239
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !16240 !ctir !1171 {
entry:
  %a.addr = alloca i8*, align 8, !ctir !525
  %b.addr = alloca i8*, align 8, !ctir !525
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1186
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1186
  store i8* %a, i8** %a.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16241, metadata !DIExpression()), !dbg !16242
  store i8* %b, i8** %b.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16243, metadata !DIExpression()), !dbg !16244
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !16245, metadata !DIExpression()), !dbg !16246
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16247, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !16247
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !16246, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !16248, metadata !DIExpression()), !dbg !16249
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16250, !tbaa !2668
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !16250
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !16249, !tbaa !2668
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16251, !tbaa !2668
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !16252, !ctir !1187
  %5 = load i64, i64* %ino, align 8, !dbg !16252, !tbaa !16096, !ctir !1168
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16253, !tbaa !2668
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !16254, !ctir !1187
  %7 = load i64, i64* %ino1, align 8, !dbg !16254, !tbaa !16096, !ctir !1168
  %cmp = icmp ult i64 %5, %7, !dbg !16255
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16251

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !16251

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16256, !tbaa !2668
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !16257, !ctir !1187
  %9 = load i64, i64* %ino2, align 8, !dbg !16257, !tbaa !16096, !ctir !1168
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16258, !tbaa !2668
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !16259, !ctir !1187
  %11 = load i64, i64* %ino3, align 8, !dbg !16259, !tbaa !16096, !ctir !1168
  %cmp4 = icmp ugt i64 %9, %11, !dbg !16260
  %conv = zext i1 %cmp4 to i32, !dbg !16260
  br label %cond.end, !dbg !16251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !16251
  ret i32 %cond, !dbg !16261
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !16262 !ctir !1184 {
entry:
  %retval = alloca i8*, align 8, !ctir !7
  %dir.addr = alloca i8*, align 8, !ctir !177
  %option.addr = alloca i32, align 4, !ctir !1151
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !675
  %name_space = alloca i8*, align 8, !ctir !7
  %closedir_errno = alloca i32, align 4, !ctir !5
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !16263, metadata !DIExpression()), !dbg !16264
  store i32 %option, i32* %option.addr, align 4, !tbaa !3315
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !16265, metadata !DIExpression()), !dbg !16266
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !16267, metadata !DIExpression()), !dbg !16268
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !16269, !tbaa !2668
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !16270
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !16268, !tbaa !2668
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16271, !tbaa !2668
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !16271
  br i1 %tobool, label %if.else, label %if.then, !dbg !16273

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !16274
  br label %return, !dbg !16274

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !16275, metadata !DIExpression()), !dbg !16277
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16278, !tbaa !2668
  %3 = load i32, i32* %option.addr, align 4, !dbg !16279, !tbaa !3315
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !16280
  store i8* %call1, i8** %name_space, align 8, !dbg !16277, !tbaa !2668
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16281, !tbaa !2668
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !16283
  %cmp = icmp ne i32 %call2, 0, !dbg !16284
  br i1 %cmp, label %if.then3, label %if.end, !dbg !16285

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !16286, metadata !DIExpression()), !dbg !16288
  %call4 = call i32* @__errno_location() #16, !dbg !16289
  %5 = load i32, i32* %call4, align 4, !dbg !16289, !tbaa !2655, !ctir !5
  store i32 %5, i32* %closedir_errno, align 4, !dbg !16288, !tbaa !2655
  %6 = load i8*, i8** %name_space, align 8, !dbg !16290, !tbaa !2668
  call void @free(i8* %6) #9, !dbg !16291
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !16292, !tbaa !2655
  %call5 = call i32* @__errno_location() #16, !dbg !16293
  store i32 %7, i32* %call5, align 4, !dbg !16294, !tbaa !2655, !ctir !5
  store i8* null, i8** %retval, align 8, !dbg !16295
  br label %return, !dbg !16295

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !16296, !tbaa !2668
  store i8* %8, i8** %retval, align 8, !dbg !16297
  br label %return, !dbg !16297

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !16298
  ret i8* %9, !dbg !16298
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_init(%struct.savewd* %wd) #4 !dbg !16299 !ctir !1827 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1829
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16300, metadata !DIExpression()), !dbg !16301
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16302, !tbaa !2668
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16303, !ctir !1817
  store i32 0, i32* %state, align 4, !dbg !16304, !tbaa !16305, !ctir !1816
  ret void, !dbg !16307
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @savewd_errno(%struct.savewd* %wd) #10 !dbg !16308 !ctir !1830 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1832
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16309, metadata !DIExpression()), !dbg !16310
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16311, !tbaa !2668
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16312, !ctir !1833
  %1 = load i32, i32* %state, align 4, !dbg !16312, !tbaa !16305, !ctir !1816
  %cmp = icmp eq i32 %1, 4, !dbg !16313
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16311

cond.true:                                        ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16314, !tbaa !2668
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16315, !ctir !1833
  %errnum = bitcast %union.anon* %val to i32*, !dbg !16316
  %3 = load i32, i32* %errnum, align 4, !dbg !16316, !tbaa !3315, !ctir !1821
  br label %cond.end, !dbg !16311

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16311

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %cond.false ], !dbg !16311
  ret i32 %cond, !dbg !16317
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_chdir(%struct.savewd* %wd, i8* %dir, i32 %options, i32* %open_result) #4 !dbg !16318 !ctir !1834 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1829
  %dir.addr = alloca i8*, align 8, !ctir !177
  %options.addr = alloca i32, align 4, !ctir !5
  %open_result.addr = alloca i32*, align 8, !ctir !190
  %fd = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16319, metadata !DIExpression()), !dbg !16320
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !16321, metadata !DIExpression()), !dbg !16322
  store i32 %options, i32* %options.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16323, metadata !DIExpression()), !dbg !16324
  store i32* %open_result, i32** %open_result.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32** %open_result.addr, metadata !16325, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16327, metadata !DIExpression()), !dbg !16328
  store i32 -1, i32* %fd, align 4, !dbg !16328, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16329, metadata !DIExpression()), !dbg !16330
  store i32 0, i32* %result, align 4, !dbg !16330, !tbaa !2655
  %0 = load i32*, i32** %open_result.addr, align 8, !dbg !16331, !tbaa !2668
  %tobool = icmp ne i32* %0, null, !dbg !16331
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !16333

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !16334, !tbaa !2655
  %and = and i32 %1, 1, !dbg !16335
  %tobool1 = icmp ne i32 %and, 0, !dbg !16335
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !16336

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !16337, !tbaa !2668
  %3 = load i32, i32* %options.addr, align 4, !dbg !16339, !tbaa !2655
  %and2 = and i32 %3, 1, !dbg !16340
  %tobool3 = icmp ne i32 %and2, 0, !dbg !16339
  %4 = zext i1 %tobool3 to i64, !dbg !16339
  %cond = select i1 %tobool3, i32 131072, i32 0, !dbg !16339
  %or = or i32 67840, %cond, !dbg !16341
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or), !dbg !16342
  store i32 %call, i32* %fd, align 4, !dbg !16343, !tbaa !2655
  %5 = load i32*, i32** %open_result.addr, align 8, !dbg !16344, !tbaa !2668
  %tobool4 = icmp ne i32* %5, null, !dbg !16344
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16346

if.then5:                                         ; preds = %if.then
  %6 = load i32, i32* %fd, align 4, !dbg !16347, !tbaa !2655
  %7 = load i32*, i32** %open_result.addr, align 8, !dbg !16349, !tbaa !2668
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !16349, !ctir !190
  store i32 %6, i32* %arrayidx, align 4, !dbg !16350, !tbaa !2655
  %call6 = call i32* @__errno_location() #16, !dbg !16351
  %8 = load i32, i32* %call6, align 4, !dbg !16351, !tbaa !2655, !ctir !5
  %9 = load i32*, i32** %open_result.addr, align 8, !dbg !16352, !tbaa !2668
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !16352, !ctir !190
  store i32 %8, i32* %arrayidx7, align 4, !dbg !16353, !tbaa !2655
  br label %if.end, !dbg !16354

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load i32, i32* %fd, align 4, !dbg !16355, !tbaa !2655
  %cmp = icmp slt i32 %10, 0, !dbg !16357
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !16358

land.lhs.true:                                    ; preds = %if.end
  %call8 = call i32* @__errno_location() #16, !dbg !16359
  %11 = load i32, i32* %call8, align 4, !dbg !16359, !tbaa !2655, !ctir !5
  %cmp9 = icmp ne i32 %11, 13, !dbg !16360
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !16361

if.then10:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %result, align 4, !dbg !16362, !tbaa !2655
  br label %if.end11, !dbg !16363

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  br label %if.end12, !dbg !16364

if.end12:                                         ; preds = %if.end11, %lor.lhs.false
  %12 = load i32, i32* %result, align 4, !dbg !16365, !tbaa !2655
  %cmp13 = icmp eq i32 %12, 0, !dbg !16367
  br i1 %cmp13, label %land.lhs.true14, label %if.end37, !dbg !16368

land.lhs.true14:                                  ; preds = %if.end12
  %13 = load i32, i32* %fd, align 4, !dbg !16369, !tbaa !2655
  %cmp15 = icmp sle i32 0, %13, !dbg !16370
  br i1 %cmp15, label %land.lhs.true16, label %if.then19, !dbg !16371

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %14 = load i32, i32* %options.addr, align 4, !dbg !16372, !tbaa !2655
  %and17 = and i32 %14, 2, !dbg !16373
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16373
  br i1 %tobool18, label %if.end37, label %if.then19, !dbg !16374

if.then19:                                        ; preds = %land.lhs.true16, %land.lhs.true14
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16375, !tbaa !2668
  %call20 = call zeroext i1 @savewd_save(%struct.savewd* %15), !dbg !16378
  br i1 %call20, label %if.then21, label %if.else, !dbg !16379

if.then21:                                        ; preds = %if.then19
  store i32* null, i32** %open_result.addr, align 8, !dbg !16380, !tbaa !2668
  store i32 -2, i32* %result, align 4, !dbg !16382, !tbaa !2655
  br label %if.end36, !dbg !16383

if.else:                                          ; preds = %if.then19
  %16 = load i32, i32* %fd, align 4, !dbg !16384, !tbaa !2655
  %cmp22 = icmp slt i32 %16, 0, !dbg !16386
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !16384

cond.true:                                        ; preds = %if.else
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !16387, !tbaa !2668
  %call23 = call i32 @chdir(i8* %17) #9, !dbg !16388
  br label %cond.end, !dbg !16384

cond.false:                                       ; preds = %if.else
  %18 = load i32, i32* %fd, align 4, !dbg !16389, !tbaa !2655
  %call24 = call i32 @fchdir(i32 %18) #9, !dbg !16390
  br label %cond.end, !dbg !16384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i32 [ %call23, %cond.true ], [ %call24, %cond.false ], !dbg !16384
  store i32 %cond25, i32* %result, align 4, !dbg !16391, !tbaa !2655
  %19 = load i32, i32* %result, align 4, !dbg !16392, !tbaa !2655
  %cmp26 = icmp eq i32 %19, 0, !dbg !16394
  br i1 %cmp26, label %if.then27, label %if.end35, !dbg !16395

if.then27:                                        ; preds = %cond.end
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16396, !tbaa !2668
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16397, !ctir !1817
  %21 = load i32, i32* %state, align 4, !dbg !16397, !tbaa !16305, !ctir !1816
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb29
    i32 2, label %sw.bb29
    i32 5, label %sw.bb29
    i32 3, label %sw.bb30
  ], !dbg !16398

sw.bb:                                            ; preds = %if.then27
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16399, !tbaa !2668
  %state28 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 0, !dbg !16401, !ctir !1817
  store i32 2, i32* %state28, align 4, !dbg !16402, !tbaa !16305, !ctir !1816
  br label %sw.epilog, !dbg !16403

sw.bb29:                                          ; preds = %if.then27, %if.then27, %if.then27
  br label %sw.epilog, !dbg !16404

sw.bb30:                                          ; preds = %if.then27
  %23 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16405, !tbaa !2668
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %23, i32 0, i32 1, !dbg !16405, !ctir !1817
  %child = bitcast %union.anon* %val to i32*, !dbg !16405
  %24 = load i32, i32* %child, align 4, !dbg !16405, !tbaa !3315, !ctir !1821
  %cmp31 = icmp eq i32 %24, 0, !dbg !16405
  br i1 %cmp31, label %cond.true32, label %cond.false33, !dbg !16405

cond.true32:                                      ; preds = %sw.bb30
  br label %cond.end34, !dbg !16405

cond.false33:                                     ; preds = %sw.bb30
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.365, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 155, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16405
  unreachable, !dbg !16405

25:                                               ; No predecessors!
  br label %cond.end34, !dbg !16405

cond.end34:                                       ; preds = %25, %cond.true32
  br label %sw.epilog, !dbg !16406

sw.default:                                       ; preds = %if.then27
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16407
  unreachable, !dbg !16407

sw.epilog:                                        ; preds = %cond.end34, %sw.bb29, %sw.bb
  br label %if.end35, !dbg !16408

if.end35:                                         ; preds = %sw.epilog, %cond.end
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  br label %if.end37, !dbg !16409

if.end37:                                         ; preds = %if.end36, %land.lhs.true16, %if.end12
  %26 = load i32, i32* %fd, align 4, !dbg !16410, !tbaa !2655
  %cmp38 = icmp sle i32 0, %26, !dbg !16412
  br i1 %cmp38, label %land.lhs.true39, label %if.end45, !dbg !16413

land.lhs.true39:                                  ; preds = %if.end37
  %27 = load i32*, i32** %open_result.addr, align 8, !dbg !16414, !tbaa !2668
  %tobool40 = icmp ne i32* %27, null, !dbg !16414
  br i1 %tobool40, label %if.end45, label %if.then41, !dbg !16415

if.then41:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16416, metadata !DIExpression()), !dbg !16418
  %call42 = call i32* @__errno_location() #16, !dbg !16419
  %28 = load i32, i32* %call42, align 4, !dbg !16419, !tbaa !2655, !ctir !5
  store i32 %28, i32* %e, align 4, !dbg !16418, !tbaa !2655
  %29 = load i32, i32* %fd, align 4, !dbg !16420, !tbaa !2655
  %call43 = call i32 @close(i32 %29), !dbg !16421
  %30 = load i32, i32* %e, align 4, !dbg !16422, !tbaa !2655
  %call44 = call i32* @__errno_location() #16, !dbg !16423
  store i32 %30, i32* %call44, align 4, !dbg !16424, !tbaa !2655, !ctir !5
  br label %if.end45, !dbg !16425

if.end45:                                         ; preds = %if.then41, %land.lhs.true39, %if.end37
  %31 = load i32, i32* %result, align 4, !dbg !16426, !tbaa !2655
  ret i32 %31, !dbg !16427
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_save(%struct.savewd* %wd) #4 !dbg !16428 !ctir !1857 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1829
  %fd = alloca i32, align 4, !ctir !5
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16429, metadata !DIExpression()), !dbg !16430
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16431, !tbaa !2668
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16432, !ctir !1817
  %1 = load i32, i32* %state, align 4, !dbg !16432, !tbaa !16305, !ctir !1816
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb14
    i32 1, label %sw.bb37
    i32 2, label %sw.bb37
    i32 4, label %sw.bb37
    i32 5, label %sw.bb37
  ], !dbg !16433

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16434, metadata !DIExpression()), !dbg !16437
  %call = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.368, i64 0, i64 0), i32 0), !dbg !16438
  store i32 %call, i32* %fd, align 4, !dbg !16437, !tbaa !2655
  %2 = load i32, i32* %fd, align 4, !dbg !16439, !tbaa !2655
  %cmp = icmp sle i32 0, %2, !dbg !16441
  br i1 %cmp, label %if.then, label %if.end, !dbg !16442

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16443, !tbaa !2668
  %state1 = getelementptr inbounds %struct.savewd, %struct.savewd* %3, i32 0, i32 0, !dbg !16445, !ctir !1817
  store i32 1, i32* %state1, align 4, !dbg !16446, !tbaa !16305, !ctir !1816
  %4 = load i32, i32* %fd, align 4, !dbg !16447, !tbaa !2655
  %5 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16448, !tbaa !2668
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %5, i32 0, i32 1, !dbg !16449, !ctir !1817
  %fd2 = bitcast %union.anon* %val to i32*, !dbg !16450
  store i32 %4, i32* %fd2, align 4, !dbg !16451, !tbaa !3315, !ctir !1821
  br label %sw.epilog, !dbg !16452

if.end:                                           ; preds = %sw.bb
  %call3 = call i32* @__errno_location() #16, !dbg !16453
  %6 = load i32, i32* %call3, align 4, !dbg !16453, !tbaa !2655, !ctir !5
  %cmp4 = icmp ne i32 %6, 13, !dbg !16455
  br i1 %cmp4, label %land.lhs.true, label %if.end11, !dbg !16456

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #16, !dbg !16457
  %7 = load i32, i32* %call5, align 4, !dbg !16457, !tbaa !2655, !ctir !5
  %cmp6 = icmp ne i32 %7, 116, !dbg !16458
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !16459

if.then7:                                         ; preds = %land.lhs.true
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16460, !tbaa !2668
  %state8 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16462, !ctir !1817
  store i32 4, i32* %state8, align 4, !dbg !16463, !tbaa !16305, !ctir !1816
  %call9 = call i32* @__errno_location() #16, !dbg !16464
  %9 = load i32, i32* %call9, align 4, !dbg !16464, !tbaa !2655, !ctir !5
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16465, !tbaa !2668
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16466, !ctir !1817
  %errnum = bitcast %union.anon* %val10 to i32*, !dbg !16467
  store i32 %9, i32* %errnum, align 4, !dbg !16468, !tbaa !3315, !ctir !1821
  br label %sw.epilog, !dbg !16469

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16470, !tbaa !2668
  %state12 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 0, !dbg !16471, !ctir !1817
  store i32 3, i32* %state12, align 4, !dbg !16472, !tbaa !16305, !ctir !1816
  %12 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16473, !tbaa !2668
  %val13 = getelementptr inbounds %struct.savewd, %struct.savewd* %12, i32 0, i32 1, !dbg !16474, !ctir !1817
  %child = bitcast %union.anon* %val13 to i32*, !dbg !16475
  store i32 -1, i32* %child, align 4, !dbg !16476, !tbaa !3315, !ctir !1821
  br label %sw.bb14, !dbg !16477

sw.bb14:                                          ; preds = %entry, %if.end11
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16478, !tbaa !2668
  %val15 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16480, !ctir !1817
  %child16 = bitcast %union.anon* %val15 to i32*, !dbg !16481
  %14 = load i32, i32* %child16, align 4, !dbg !16481, !tbaa !3315, !ctir !1821
  %cmp17 = icmp slt i32 %14, 0, !dbg !16482
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !16483

if.then18:                                        ; preds = %sw.bb14
  %call19 = call i32 @fork() #9, !dbg !16484
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16486, !tbaa !2668
  %val20 = getelementptr inbounds %struct.savewd, %struct.savewd* %15, i32 0, i32 1, !dbg !16487, !ctir !1817
  %child21 = bitcast %union.anon* %val20 to i32*, !dbg !16488
  store i32 %call19, i32* %child21, align 4, !dbg !16489, !tbaa !3315, !ctir !1821
  %16 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16490, !tbaa !2668
  %val22 = getelementptr inbounds %struct.savewd, %struct.savewd* %16, i32 0, i32 1, !dbg !16492, !ctir !1817
  %child23 = bitcast %union.anon* %val22 to i32*, !dbg !16493
  %17 = load i32, i32* %child23, align 4, !dbg !16493, !tbaa !3315, !ctir !1821
  %cmp24 = icmp ne i32 %17, 0, !dbg !16494
  br i1 %cmp24, label %if.then25, label %if.end35, !dbg !16495

if.then25:                                        ; preds = %if.then18
  %18 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16496, !tbaa !2668
  %val26 = getelementptr inbounds %struct.savewd, %struct.savewd* %18, i32 0, i32 1, !dbg !16499, !ctir !1817
  %child27 = bitcast %union.anon* %val26 to i32*, !dbg !16500
  %19 = load i32, i32* %child27, align 4, !dbg !16500, !tbaa !3315, !ctir !1821
  %cmp28 = icmp slt i32 0, %19, !dbg !16501
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !16502

if.then29:                                        ; preds = %if.then25
  store i1 true, i1* %retval, align 1, !dbg !16503
  br label %return, !dbg !16503

if.end30:                                         ; preds = %if.then25
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16504, !tbaa !2668
  %state31 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16505, !ctir !1817
  store i32 4, i32* %state31, align 4, !dbg !16506, !tbaa !16305, !ctir !1816
  %call32 = call i32* @__errno_location() #16, !dbg !16507
  %21 = load i32, i32* %call32, align 4, !dbg !16507, !tbaa !2655, !ctir !5
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16508, !tbaa !2668
  %val33 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 1, !dbg !16509, !ctir !1817
  %errnum34 = bitcast %union.anon* %val33 to i32*, !dbg !16510
  store i32 %21, i32* %errnum34, align 4, !dbg !16511, !tbaa !3315, !ctir !1821
  br label %if.end35, !dbg !16512

if.end35:                                         ; preds = %if.end30, %if.then18
  br label %if.end36, !dbg !16513

if.end36:                                         ; preds = %if.end35, %sw.bb14
  br label %sw.epilog, !dbg !16514

sw.bb37:                                          ; preds = %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !16515

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.savewd_save, i64 0, i64 0)) #13, !dbg !16516
  unreachable, !dbg !16516

sw.epilog:                                        ; preds = %sw.bb37, %if.end36, %if.then7, %if.then
  store i1 false, i1* %retval, align 1, !dbg !16517
  br label %return, !dbg !16517

return:                                           ; preds = %sw.epilog, %if.then29
  %23 = load i1, i1* %retval, align 1, !dbg !16518
  ret i1 %23, !dbg !16518
}

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_restore(%struct.savewd* %wd, i32 %status) #4 !dbg !1840 !ctir !1836 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1829
  %status.addr = alloca i32, align 4, !ctir !5
  %chdir_errno = alloca i32, align 4, !ctir !5
  %child = alloca i32, align 4, !ctir !108
  %child_status = alloca i32, align 4, !ctir !5
  %.compoundliteral = alloca %union.anon, align 4, !ctir !1838
  %.compoundliteral29 = alloca %union.anon, align 4, !ctir !1844
  %.compoundliteral35 = alloca %union.anon, align 4, !ctir !1848
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16519, metadata !DIExpression()), !dbg !16520
  store i32 %status, i32* %status.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !16521, metadata !DIExpression()), !dbg !16522
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16523, !tbaa !2668
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16524, !ctir !1817
  %1 = load i32, i32* %state, align 4, !dbg !16524, !tbaa !16305, !ctir !1816
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb9
    i32 3, label %sw.bb13
  ], !dbg !16525

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16526

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16528, !tbaa !2668
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16530, !ctir !1817
  %fd = bitcast %union.anon* %val to i32*, !dbg !16531
  %3 = load i32, i32* %fd, align 4, !dbg !16531, !tbaa !3315, !ctir !1821
  %call = call i32 @fchdir(i32 %3) #9, !dbg !16532
  %cmp = icmp eq i32 %call, 0, !dbg !16533
  br i1 %cmp, label %if.then, label %if.else, !dbg !16534

if.then:                                          ; preds = %sw.bb1
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16535, !tbaa !2668
  %state2 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 0, !dbg !16537, !ctir !1817
  store i32 1, i32* %state2, align 4, !dbg !16538, !tbaa !16305, !ctir !1816
  br label %sw.epilog, !dbg !16539

if.else:                                          ; preds = %sw.bb1
  call void @llvm.dbg.declare(metadata i32* %chdir_errno, metadata !16540, metadata !DIExpression()), !dbg !16542
  %call3 = call i32* @__errno_location() #16, !dbg !16543
  %5 = load i32, i32* %call3, align 4, !dbg !16543, !tbaa !2655, !ctir !5
  store i32 %5, i32* %chdir_errno, align 4, !dbg !16542, !tbaa !2655
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16544, !tbaa !2668
  %val4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 1, !dbg !16545, !ctir !1817
  %fd5 = bitcast %union.anon* %val4 to i32*, !dbg !16546
  %7 = load i32, i32* %fd5, align 4, !dbg !16546, !tbaa !3315, !ctir !1821
  %call6 = call i32 @close(i32 %7), !dbg !16547
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16548, !tbaa !2668
  %state7 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16549, !ctir !1817
  store i32 4, i32* %state7, align 4, !dbg !16550, !tbaa !16305, !ctir !1816
  %9 = load i32, i32* %chdir_errno, align 4, !dbg !16551, !tbaa !2655
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16552, !tbaa !2668
  %val8 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16553, !ctir !1817
  %errnum = bitcast %union.anon* %val8 to i32*, !dbg !16554
  store i32 %9, i32* %errnum, align 4, !dbg !16555, !tbaa !3315, !ctir !1821
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %sw.bb9, !dbg !16556

sw.bb9:                                           ; preds = %entry, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16557, !tbaa !2668
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 1, !dbg !16558, !ctir !1817
  %errnum11 = bitcast %union.anon* %val10 to i32*, !dbg !16559
  %12 = load i32, i32* %errnum11, align 4, !dbg !16559, !tbaa !3315, !ctir !1821
  %call12 = call i32* @__errno_location() #16, !dbg !16560
  store i32 %12, i32* %call12, align 4, !dbg !16561, !tbaa !2655, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !16562
  br label %return, !dbg !16562

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %child, metadata !16563, metadata !DIExpression()), !dbg !16565
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16566, !tbaa !2668
  %val14 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16567, !ctir !1817
  %child15 = bitcast %union.anon* %val14 to i32*, !dbg !16568
  %14 = load i32, i32* %child15, align 4, !dbg !16568, !tbaa !3315, !ctir !1821
  store i32 %14, i32* %child, align 4, !dbg !16565, !tbaa !2655
  %15 = load i32, i32* %child, align 4, !dbg !16569, !tbaa !2655
  %cmp16 = icmp eq i32 %15, 0, !dbg !16571
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !16572

if.then17:                                        ; preds = %sw.bb13
  %16 = load i32, i32* %status.addr, align 4, !dbg !16573, !tbaa !2655
  call void @_exit(i32 %16) #15, !dbg !16574
  unreachable, !dbg !16574

if.end18:                                         ; preds = %sw.bb13
  %17 = load i32, i32* %child, align 4, !dbg !16575, !tbaa !2655
  %cmp19 = icmp slt i32 0, %17, !dbg !16577
  br i1 %cmp19, label %if.then20, label %if.end39, !dbg !16578

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %child_status, metadata !16579, metadata !DIExpression()), !dbg !16581
  br label %while.cond, !dbg !16582

while.cond:                                       ; preds = %cond.end, %if.then20
  %18 = load i32, i32* %child, align 4, !dbg !16583, !tbaa !2655
  %call21 = call i32 @waitpid(i32 %18, i32* %child_status, i32 0), !dbg !16584
  %cmp22 = icmp slt i32 %call21, 0, !dbg !16585
  br i1 %cmp22, label %while.body, label %while.end, !dbg !16582

while.body:                                       ; preds = %while.cond
  %call23 = call i32* @__errno_location() #16, !dbg !16586
  %19 = load i32, i32* %call23, align 4, !dbg !16586, !tbaa !2655, !ctir !5
  %cmp24 = icmp eq i32 %19, 4, !dbg !16586
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !16586

cond.true:                                        ; preds = %while.body
  br label %cond.end, !dbg !16586

cond.false:                                       ; preds = %while.body
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.371, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 216, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16586
  unreachable, !dbg !16586

20:                                               ; No predecessors!
  br label %cond.end, !dbg !16586

cond.end:                                         ; preds = %20, %cond.true
  br label %while.cond, !dbg !16582, !llvm.loop !16587

while.end:                                        ; preds = %while.cond
  %21 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16588, !tbaa !2668
  %val25 = getelementptr inbounds %struct.savewd, %struct.savewd* %21, i32 0, i32 1, !dbg !16589, !ctir !1817
  %child26 = bitcast %union.anon* %val25 to i32*, !dbg !16590
  store i32 -1, i32* %child26, align 4, !dbg !16591, !tbaa !3315, !ctir !1821
  %__in = bitcast %union.anon* %.compoundliteral to i32*, !dbg !16592
  %22 = load i32, i32* %child_status, align 4, !dbg !16592, !tbaa !2655
  store i32 %22, i32* %__in, align 4, !dbg !16592, !tbaa !3315
  %__i = bitcast %union.anon* %.compoundliteral to i32*, !dbg !16592
  %23 = load i32, i32* %__i, align 4, !dbg !16592, !tbaa !3315, !ctir !1838
  %and = and i32 %23, 127, !dbg !16592
  %cmp27 = icmp eq i32 %and, 0, !dbg !16592
  br i1 %cmp27, label %if.end34, label %if.then28, !dbg !16594

if.then28:                                        ; preds = %while.end
  %__in30 = bitcast %union.anon* %.compoundliteral29 to i32*, !dbg !16595
  %24 = load i32, i32* %child_status, align 4, !dbg !16595, !tbaa !2655
  store i32 %24, i32* %__in30, align 4, !dbg !16595, !tbaa !3315
  %__i31 = bitcast %union.anon* %.compoundliteral29 to i32*, !dbg !16595
  %25 = load i32, i32* %__i31, align 4, !dbg !16595, !tbaa !3315, !ctir !1844
  %and32 = and i32 %25, 127, !dbg !16595
  %call33 = call i32 @raise(i32 %and32) #9, !dbg !16596
  br label %if.end34, !dbg !16596

if.end34:                                         ; preds = %if.then28, %while.end
  %__in36 = bitcast %union.anon* %.compoundliteral35 to i32*, !dbg !16597
  %26 = load i32, i32* %child_status, align 4, !dbg !16597, !tbaa !2655
  store i32 %26, i32* %__in36, align 4, !dbg !16597, !tbaa !3315
  %__i37 = bitcast %union.anon* %.compoundliteral35 to i32*, !dbg !16597
  %27 = load i32, i32* %__i37, align 4, !dbg !16597, !tbaa !3315, !ctir !1848
  %and38 = and i32 %27, 65280, !dbg !16597
  %shr = ashr i32 %and38, 8, !dbg !16597
  store i32 %shr, i32* %retval, align 4, !dbg !16598
  br label %return, !dbg !16598

if.end39:                                         ; preds = %if.end18
  br label %sw.epilog, !dbg !16599

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 226, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16600
  unreachable, !dbg !16600

sw.epilog:                                        ; preds = %if.end39, %if.then, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !16601
  br label %return, !dbg !16601

return:                                           ; preds = %sw.epilog, %if.end34, %sw.bb9
  %28 = load i32, i32* %retval, align 4, !dbg !16602
  ret i32 %28, !dbg !16602
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_finish(%struct.savewd* %wd) #4 !dbg !16603 !ctir !1827 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1829
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16604, metadata !DIExpression()), !dbg !16605
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16606, !tbaa !2668
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16607, !ctir !1817
  %1 = load i32, i32* %state, align 4, !dbg !16607, !tbaa !16305, !ctir !1816
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
  ], !dbg !16608

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16609

sw.bb1:                                           ; preds = %entry, %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16611, !tbaa !2668
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16612, !ctir !1817
  %fd = bitcast %union.anon* %val to i32*, !dbg !16613
  %3 = load i32, i32* %fd, align 4, !dbg !16613, !tbaa !3315, !ctir !1821
  %call = call i32 @close(i32 %3), !dbg !16614
  br label %sw.epilog, !dbg !16615

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16616, !tbaa !2668
  %val3 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 1, !dbg !16616, !ctir !1817
  %child = bitcast %union.anon* %val3 to i32*, !dbg !16616
  %5 = load i32, i32* %child, align 4, !dbg !16616, !tbaa !3315, !ctir !1821
  %cmp = icmp slt i32 %5, 0, !dbg !16616
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16616

cond.true:                                        ; preds = %sw.bb2
  br label %cond.end, !dbg !16616

cond.false:                                       ; preds = %sw.bb2
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.374, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 247, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16616
  unreachable, !dbg !16616

6:                                                ; No predecessors!
  br label %cond.end, !dbg !16616

cond.end:                                         ; preds = %6, %cond.true
  br label %sw.epilog, !dbg !16617

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.367, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.366, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16618
  unreachable, !dbg !16618

sw.epilog:                                        ; preds = %cond.end, %sw.bb1, %sw.bb
  %7 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16619, !tbaa !2668
  %state4 = getelementptr inbounds %struct.savewd, %struct.savewd* %7, i32 0, i32 0, !dbg !16620, !ctir !1817
  store i32 5, i32* %state4, align 4, !dbg !16621, !tbaa !16305, !ctir !1816
  ret void, !dbg !16622
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_process_files(i32 %n_files, i8** %file, i32 (i8*, %struct.savewd*, i8*)* %act, i8* %options) #4 !dbg !16623 !ctir !1852 {
entry:
  %n_files.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8**, align 8, !ctir !181
  %act.addr = alloca i32 (i8*, %struct.savewd*, i8*)*, align 8, !ctir !1854
  %options.addr = alloca i8*, align 8, !ctir !47
  %i = alloca i32, align 4, !ctir !5
  %last_relative = alloca i32, align 4, !ctir !5
  %exit_status = alloca i32, align 4, !ctir !5
  %wd = alloca %struct.savewd, align 4, !ctir !1817
  %s = alloca i32, align 4, !ctir !5
  %r = alloca i32, align 4, !ctir !5
  %s36 = alloca i32, align 4, !ctir !5
  store i32 %n_files, i32* %n_files.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n_files.addr, metadata !16624, metadata !DIExpression()), !dbg !16625
  store i8** %file, i8*** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !16626, metadata !DIExpression()), !dbg !16627
  store i32 (i8*, %struct.savewd*, i8*)* %act, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.savewd*, i8*)** %act.addr, metadata !16628, metadata !DIExpression()), !dbg !16629
  store i8* %options, i8** %options.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !16630, metadata !DIExpression()), !dbg !16631
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16632, metadata !DIExpression()), !dbg !16633
  store i32 0, i32* %i, align 4, !dbg !16633, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %last_relative, metadata !16634, metadata !DIExpression()), !dbg !16635
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !16636, metadata !DIExpression()), !dbg !16637
  store i32 0, i32* %exit_status, align 4, !dbg !16637, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !16638, metadata !DIExpression()), !dbg !16639
  call void @savewd_init(%struct.savewd* %wd), !dbg !16640
  %0 = load i32, i32* %n_files.addr, align 4, !dbg !16641, !tbaa !2655
  %sub = sub nsw i32 %0, 1, !dbg !16643
  store i32 %sub, i32* %last_relative, align 4, !dbg !16644, !tbaa !2655
  br label %for.cond, !dbg !16645

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %last_relative, align 4, !dbg !16646, !tbaa !2655
  %cmp = icmp sle i32 0, %1, !dbg !16648
  br i1 %cmp, label %for.body, label %for.end, !dbg !16649

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %file.addr, align 8, !dbg !16650, !tbaa !2668
  %3 = load i32, i32* %last_relative, align 4, !dbg !16650, !tbaa !2655
  %idxprom = sext i32 %3 to i64, !dbg !16650
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !16650, !ctir !181
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !16650, !tbaa !2668
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !16650, !ctir !7
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !16650, !tbaa !3315
  %conv = sext i8 %5 to i32, !dbg !16650
  %cmp2 = icmp eq i32 %conv, 47, !dbg !16650
  br i1 %cmp2, label %if.end, label %if.then, !dbg !16652

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16653

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16650

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %last_relative, align 4, !dbg !16654, !tbaa !2655
  %dec = add nsw i32 %6, -1, !dbg !16654
  store i32 %dec, i32* %last_relative, align 4, !dbg !16654, !tbaa !2655
  br label %for.cond, !dbg !16655, !llvm.loop !16656

for.end:                                          ; preds = %if.then, %for.cond
  br label %for.cond4, !dbg !16658

for.cond4:                                        ; preds = %for.inc30, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !16659, !tbaa !2655
  %8 = load i32, i32* %last_relative, align 4, !dbg !16662, !tbaa !2655
  %cmp5 = icmp slt i32 %7, %8, !dbg !16663
  br i1 %cmp5, label %for.body7, label %for.end31, !dbg !16664

for.body7:                                        ; preds = %for.cond4
  %call = call zeroext i1 @savewd_delegating(%struct.savewd* %wd), !dbg !16665
  br i1 %call, label %if.end16, label %if.then8, !dbg !16668

if.then8:                                         ; preds = %for.body7
  call void @llvm.dbg.declare(metadata i32* %s, metadata !16669, metadata !DIExpression()), !dbg !16671
  %9 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16672, !tbaa !2668
  %10 = load i8**, i8*** %file.addr, align 8, !dbg !16673, !tbaa !2668
  %11 = load i32, i32* %i, align 4, !dbg !16674, !tbaa !2655
  %idxprom9 = sext i32 %11 to i64, !dbg !16673
  %arrayidx10 = getelementptr inbounds i8*, i8** %10, i64 %idxprom9, !dbg !16673, !ctir !181
  %12 = load i8*, i8** %arrayidx10, align 8, !dbg !16673, !tbaa !2668
  %13 = load i8*, i8** %options.addr, align 8, !dbg !16675, !tbaa !2668
  %call11 = call i32 %9(i8* %12, %struct.savewd* %wd, i8* %13), !dbg !16672
  store i32 %call11, i32* %s, align 4, !dbg !16671, !tbaa !2655
  %14 = load i32, i32* %exit_status, align 4, !dbg !16676, !tbaa !2655
  %15 = load i32, i32* %s, align 4, !dbg !16678, !tbaa !2655
  %cmp12 = icmp slt i32 %14, %15, !dbg !16679
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16680

if.then14:                                        ; preds = %if.then8
  %16 = load i32, i32* %s, align 4, !dbg !16681, !tbaa !2655
  store i32 %16, i32* %exit_status, align 4, !dbg !16682, !tbaa !2655
  br label %if.end15, !dbg !16683

if.end15:                                         ; preds = %if.then14, %if.then8
  br label %if.end16, !dbg !16684

if.end16:                                         ; preds = %if.end15, %for.body7
  %17 = load i8**, i8*** %file.addr, align 8, !dbg !16685, !tbaa !2668
  %18 = load i32, i32* %i, align 4, !dbg !16685, !tbaa !2655
  %add = add nsw i32 %18, 1, !dbg !16685
  %idxprom17 = sext i32 %add to i64, !dbg !16685
  %arrayidx18 = getelementptr inbounds i8*, i8** %17, i64 %idxprom17, !dbg !16685, !ctir !181
  %19 = load i8*, i8** %arrayidx18, align 8, !dbg !16685, !tbaa !2668
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !16685, !ctir !7
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !16685, !tbaa !3315
  %conv20 = sext i8 %20 to i32, !dbg !16685
  %cmp21 = icmp eq i32 %conv20, 47, !dbg !16685
  br i1 %cmp21, label %if.end29, label %if.then23, !dbg !16687

if.then23:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16688, metadata !DIExpression()), !dbg !16690
  %21 = load i32, i32* %exit_status, align 4, !dbg !16691, !tbaa !2655
  %call24 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %21), !dbg !16692
  store i32 %call24, i32* %r, align 4, !dbg !16690, !tbaa !2655
  %22 = load i32, i32* %exit_status, align 4, !dbg !16693, !tbaa !2655
  %23 = load i32, i32* %r, align 4, !dbg !16695, !tbaa !2655
  %cmp25 = icmp slt i32 %22, %23, !dbg !16696
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !16697

if.then27:                                        ; preds = %if.then23
  %24 = load i32, i32* %r, align 4, !dbg !16698, !tbaa !2655
  store i32 %24, i32* %exit_status, align 4, !dbg !16699, !tbaa !2655
  br label %if.end28, !dbg !16700

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !16701

if.end29:                                         ; preds = %if.end28, %if.end16
  br label %for.inc30, !dbg !16702

for.inc30:                                        ; preds = %if.end29
  %25 = load i32, i32* %i, align 4, !dbg !16703, !tbaa !2655
  %inc = add nsw i32 %25, 1, !dbg !16703
  store i32 %inc, i32* %i, align 4, !dbg !16703, !tbaa !2655
  br label %for.cond4, !dbg !16704, !llvm.loop !16705

for.end31:                                        ; preds = %for.cond4
  call void @savewd_finish(%struct.savewd* %wd), !dbg !16707
  br label %for.cond32, !dbg !16708

for.cond32:                                       ; preds = %for.inc44, %for.end31
  %26 = load i32, i32* %i, align 4, !dbg !16709, !tbaa !2655
  %27 = load i32, i32* %n_files.addr, align 4, !dbg !16712, !tbaa !2655
  %cmp33 = icmp slt i32 %26, %27, !dbg !16713
  br i1 %cmp33, label %for.body35, label %for.end46, !dbg !16714

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %s36, metadata !16715, metadata !DIExpression()), !dbg !16717
  %28 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16718, !tbaa !2668
  %29 = load i8**, i8*** %file.addr, align 8, !dbg !16719, !tbaa !2668
  %30 = load i32, i32* %i, align 4, !dbg !16720, !tbaa !2655
  %idxprom37 = sext i32 %30 to i64, !dbg !16719
  %arrayidx38 = getelementptr inbounds i8*, i8** %29, i64 %idxprom37, !dbg !16719, !ctir !181
  %31 = load i8*, i8** %arrayidx38, align 8, !dbg !16719, !tbaa !2668
  %32 = load i8*, i8** %options.addr, align 8, !dbg !16721, !tbaa !2668
  %call39 = call i32 %28(i8* %31, %struct.savewd* %wd, i8* %32), !dbg !16718
  store i32 %call39, i32* %s36, align 4, !dbg !16717, !tbaa !2655
  %33 = load i32, i32* %exit_status, align 4, !dbg !16722, !tbaa !2655
  %34 = load i32, i32* %s36, align 4, !dbg !16724, !tbaa !2655
  %cmp40 = icmp slt i32 %33, %34, !dbg !16725
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16726

if.then42:                                        ; preds = %for.body35
  %35 = load i32, i32* %s36, align 4, !dbg !16727, !tbaa !2655
  store i32 %35, i32* %exit_status, align 4, !dbg !16728, !tbaa !2655
  br label %if.end43, !dbg !16729

if.end43:                                         ; preds = %if.then42, %for.body35
  br label %for.inc44, !dbg !16730

for.inc44:                                        ; preds = %if.end43
  %36 = load i32, i32* %i, align 4, !dbg !16731, !tbaa !2655
  %inc45 = add nsw i32 %36, 1, !dbg !16731
  store i32 %inc45, i32* %i, align 4, !dbg !16731, !tbaa !2655
  br label %for.cond32, !dbg !16732, !llvm.loop !16733

for.end46:                                        ; preds = %for.cond32
  %37 = load i32, i32* %exit_status, align 4, !dbg !16735, !tbaa !2655
  ret i32 %37, !dbg !16736
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_delegating(%struct.savewd* %wd) #4 !dbg !16737 !ctir !1859 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8, !ctir !1832
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16738, metadata !DIExpression()), !dbg !16739
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16740, !tbaa !2668
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16741, !ctir !1833
  %1 = load i32, i32* %state, align 4, !dbg !16741, !tbaa !16305, !ctir !1816
  %cmp = icmp eq i32 %1, 3, !dbg !16742
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16743

land.rhs:                                         ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16744, !tbaa !2668
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16745, !ctir !1833
  %child = bitcast %union.anon* %val to i32*, !dbg !16746
  %3 = load i32, i32* %child, align 4, !dbg !16746, !tbaa !3315, !ctir !1821
  %cmp1 = icmp slt i32 0, %3, !dbg !16747
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !16748
  ret i1 %4, !dbg !16749
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !16750 !ctir !1864 {
entry:
  %con.addr = alloca i8**, align 8, !ctir !1866
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16751, metadata !DIExpression()), !dbg !16752
  %call = call i32* @__errno_location() #16, !dbg !16753
  store i32 95, i32* %call, align 4, !dbg !16754, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16755
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !16756 !ctir !1869 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16757, metadata !DIExpression()), !dbg !16758
  ret void, !dbg !16759
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !16760 !ctir !1864 {
entry:
  %con.addr = alloca i8**, align 8, !ctir !1866
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16761, metadata !DIExpression()), !dbg !16762
  %call = call i32* @__errno_location() #16, !dbg !16763
  store i32 95, i32* %call, align 4, !dbg !16764, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16765
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !16766 !ctir !1871 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16767, metadata !DIExpression()), !dbg !16768
  %call = call i32* @__errno_location() #16, !dbg !16769
  store i32 95, i32* %call, align 4, !dbg !16770, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16771
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !16772 !ctir !1873 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %m.addr = alloca i32, align 4, !ctir !136
  %con.addr = alloca i8**, align 8, !ctir !1866
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16773, metadata !DIExpression()), !dbg !16774
  store i32 %m, i32* %m.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !16775, metadata !DIExpression()), !dbg !16776
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16777, metadata !DIExpression()), !dbg !16778
  %call = call i32* @__errno_location() #16, !dbg !16779
  store i32 95, i32* %call, align 4, !dbg !16780, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16781
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !16782 !ctir !1875 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %con.addr = alloca i8**, align 8, !ctir !1866
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16783, metadata !DIExpression()), !dbg !16784
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16785, metadata !DIExpression()), !dbg !16786
  %call = call i32* @__errno_location() #16, !dbg !16787
  store i32 95, i32* %call, align 4, !dbg !16788, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16789
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !16790 !ctir !1875 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %con.addr = alloca i8**, align 8, !ctir !1866
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16791, metadata !DIExpression()), !dbg !16792
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16793, metadata !DIExpression()), !dbg !16794
  %call = call i32* @__errno_location() #16, !dbg !16795
  store i32 95, i32* %call, align 4, !dbg !16796, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16797
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !16798 !ctir !1877 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %con.addr = alloca i8**, align 8, !ctir !1866
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16799, metadata !DIExpression()), !dbg !16800
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16801, metadata !DIExpression()), !dbg !16802
  %call = call i32* @__errno_location() #16, !dbg !16803
  store i32 95, i32* %call, align 4, !dbg !16804, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !16806 !ctir !1879 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16807, metadata !DIExpression()), !dbg !16808
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16809, metadata !DIExpression()), !dbg !16810
  %call = call i32* @__errno_location() #16, !dbg !16811
  store i32 95, i32* %call, align 4, !dbg !16812, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16813
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !16814 !ctir !1879 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16815, metadata !DIExpression()), !dbg !16816
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16817, metadata !DIExpression()), !dbg !16818
  %call = call i32* @__errno_location() #16, !dbg !16819
  store i32 95, i32* %call, align 4, !dbg !16820, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16821
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !16822 !ctir !1881 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16823, metadata !DIExpression()), !dbg !16824
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16825, metadata !DIExpression()), !dbg !16826
  %call = call i32* @__errno_location() #16, !dbg !16827
  store i32 95, i32* %call, align 4, !dbg !16828, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16829
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !16830 !ctir !1871 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16831, metadata !DIExpression()), !dbg !16832
  %call = call i32* @__errno_location() #16, !dbg !16833
  store i32 95, i32* %call, align 4, !dbg !16834, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16835
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !16836 !ctir !1871 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16837, metadata !DIExpression()), !dbg !16838
  %call = call i32* @__errno_location() #16, !dbg !16839
  store i32 95, i32* %call, align 4, !dbg !16840, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16841
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !16842 !ctir !1871 {
entry:
  %con.addr = alloca i8*, align 8, !ctir !1867
  store i8* %con, i8** %con.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16843, metadata !DIExpression()), !dbg !16844
  %call = call i32* @__errno_location() #16, !dbg !16845
  store i32 95, i32* %call, align 4, !dbg !16846, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16847
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !16848 !ctir !1883 {
entry:
  %scon.addr = alloca i8*, align 8, !ctir !1867
  %tcon.addr = alloca i8*, align 8, !ctir !1867
  %tclass.addr = alloca i16, align 2, !ctir !1885
  %newcon.addr = alloca i8**, align 8, !ctir !1866
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !16849, metadata !DIExpression()), !dbg !16850
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !16851, metadata !DIExpression()), !dbg !16852
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !14584
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !16853, metadata !DIExpression()), !dbg !16854
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !16855, metadata !DIExpression()), !dbg !16856
  %call = call i32* @__errno_location() #16, !dbg !16857
  store i32 95, i32* %call, align 4, !dbg !16858, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16859
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !16860 !ctir !1886 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16861, metadata !DIExpression()), !dbg !16862
  %call = call i32* @__errno_location() #16, !dbg !16863
  store i32 95, i32* %call, align 4, !dbg !16864, !tbaa !2655, !ctir !5
  ret i16 0, !dbg !16865
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !16866 !ctir !1888 {
entry:
  %path.addr = alloca i8*, align 8, !ctir !177
  %prefix.addr = alloca i8*, align 8, !ctir !177
  store i8* %path, i8** %path.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !16867, metadata !DIExpression()), !dbg !16868
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !16869, metadata !DIExpression()), !dbg !16870
  %call = call i32* @__errno_location() #16, !dbg !16871
  store i32 95, i32* %call, align 4, !dbg !16872, !tbaa !2655, !ctir !5
  ret i32 -1, !dbg !16873
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #10 !dbg !16874 !ctir !1893 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16876, metadata !DIExpression()), !dbg !16877
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16878, !tbaa !2668
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16878, !ctir !1896
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !16879, !ctir !1911
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16879, !tbaa !16880, !ctir !302
  ret i64 %1, !dbg !16881
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #10 !dbg !16882 !ctir !1893 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16883, metadata !DIExpression()), !dbg !16884
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16885, !tbaa !2668
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16885, !ctir !1896
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !16886, !ctir !1911
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16886, !tbaa !16887, !ctir !302
  ret i64 %1, !dbg !16888
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #10 !dbg !16889 !ctir !1893 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16890, metadata !DIExpression()), !dbg !16891
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16892, !tbaa !2668
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16892, !ctir !1896
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !16893, !ctir !1911
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16893, !tbaa !16894, !ctir !302
  ret i64 %1, !dbg !16895
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #10 !dbg !16896 !ctir !1893 {
entry:
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16897, metadata !DIExpression()), !dbg !16898
  ret i64 0, !dbg !16899
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #10 !dbg !16900 !ctir !1918 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1911
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16901, metadata !DIExpression()), !dbg !16902
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16903, !tbaa !2668
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16903, !ctir !1896
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16903
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !16903
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16903, !tbaa.struct !3817
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16904
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16904
  ret { i64, i64 } %4, !dbg !16904
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #10 !dbg !16905 !ctir !1918 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1911
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16906, metadata !DIExpression()), !dbg !16907
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16908, !tbaa !2668
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16908, !ctir !1896
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16908
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !16908
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16908, !tbaa.struct !3817
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16909
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16909
  ret { i64, i64 } %4, !dbg !16909
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #10 !dbg !16910 !ctir !1918 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1911
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16911, metadata !DIExpression()), !dbg !16912
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16913, !tbaa !2668
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16913, !ctir !1896
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16913
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !16913
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16913, !tbaa.struct !3817
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16914
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16914
  ret { i64, i64 } %4, !dbg !16914
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #10 !dbg !16915 !ctir !1918 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !1911
  %st.addr = alloca %struct.stat*, align 8, !ctir !1895
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16916, metadata !DIExpression()), !dbg !16917
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !16918, metadata !DIExpression()), !dbg !16919
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !16920, !ctir !1911
  store i64 -1, i64* %tv_sec, align 8, !dbg !16921, !tbaa !16922, !ctir !300
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !16923, !ctir !1911
  store i64 -1, i64* %tv_nsec, align 8, !dbg !16924, !tbaa !16925, !ctir !302
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16926
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !16926
  ret { i64, i64 } %1, !dbg !16926
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !16927 !ctir !1920 {
entry:
  %result.addr = alloca i32, align 4, !ctir !5
  %st.addr = alloca %struct.stat*, align 8, !ctir !1922
  store i32 %result, i32* %result.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !16928, metadata !DIExpression()), !dbg !16929
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16930, metadata !DIExpression()), !dbg !16931
  %0 = load i32, i32* %result.addr, align 4, !dbg !16932, !tbaa !2655
  ret i32 %0, !dbg !16933
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16934 !ctir !1926 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !177
  %st.addr = alloca %struct.stat*, align 8, !ctir !1928
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16936, metadata !DIExpression()), !dbg !16937
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16938, metadata !DIExpression()), !dbg !16939
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16940, metadata !DIExpression()), !dbg !16941
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16942, !tbaa !2655
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16943, !tbaa !2668
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16944, !tbaa !2668
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #9, !dbg !16945
  ret i32 %call, !dbg !16946
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !16947 !ctir !1926 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !177
  %st.addr = alloca %struct.stat*, align 8, !ctir !1928
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16948, metadata !DIExpression()), !dbg !16949
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16950, metadata !DIExpression()), !dbg !16951
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16952, metadata !DIExpression()), !dbg !16953
  %0 = load i32, i32* %fd.addr, align 4, !dbg !16954, !tbaa !2655
  %1 = load i8*, i8** %name.addr, align 8, !dbg !16955, !tbaa !2668
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16956, !tbaa !2668
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #9, !dbg !16957
  ret i32 %call, !dbg !16958
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !16959 !ctir !1194 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %args.addr = alloca i8*, align 8, !ctir !47
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1196
  %x_suffix_len.addr = alloca i64, align 8, !ctir !52
  %len = alloca i64, align 8, !ctir !52
  %XXXXXX = alloca i8*, align 8, !ctir !7
  %count = alloca i32, align 4, !ctir !67
  %fd = alloca i32, align 4, !ctir !5
  %save_errno = alloca i32, align 4, !ctir !5
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1197
  %attempts = alloca i32, align 4, !ctir !67
  %i = alloca i64, align 8, !ctir !52
  %saved_errno = alloca i32, align 4, !ctir !5
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !16960, metadata !DIExpression()), !dbg !16961
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !16962, metadata !DIExpression()), !dbg !16963
  store i8* %args, i8** %args.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !16964, metadata !DIExpression()), !dbg !16965
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !16966, metadata !DIExpression()), !dbg !16967
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !16968, metadata !DIExpression()), !dbg !16969
  call void @llvm.dbg.declare(metadata i64* %len, metadata !16970, metadata !DIExpression()), !dbg !16971
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !16972, metadata !DIExpression()), !dbg !16973
  call void @llvm.dbg.declare(metadata i32* %count, metadata !16974, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16976, metadata !DIExpression()), !dbg !16977
  store i32 -1, i32* %fd, align 4, !dbg !16977, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !16978, metadata !DIExpression()), !dbg !16979
  %call = call i32* @__errno_location() #16, !dbg !16980
  %0 = load i32, i32* %call, align 4, !dbg !16980, !tbaa !2655, !ctir !5
  store i32 %0, i32* %save_errno, align 4, !dbg !16979, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !16981, metadata !DIExpression()), !dbg !16982
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !16983, metadata !DIExpression()), !dbg !16984
  store i32 238328, i32* %attempts, align 4, !dbg !16984, !tbaa !2655
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !16985, !tbaa !2668
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !16986
  store i64 %call1, i64* %len, align 8, !dbg !16987, !tbaa !3308
  %2 = load i64, i64* %len, align 8, !dbg !16988, !tbaa !3308
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16990, !tbaa !3308
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !16991, !tbaa !2655
  %conv = sext i32 %4 to i64, !dbg !16991
  %add = add i64 %3, %conv, !dbg !16992
  %cmp = icmp ult i64 %2, %add, !dbg !16993
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !16994

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !16995, !tbaa !2668
  %6 = load i64, i64* %len, align 8, !dbg !16996, !tbaa !3308
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !16997, !tbaa !3308
  %sub = sub i64 %6, %7, !dbg !16998
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !16999, !tbaa !2655
  %conv3 = sext i32 %8 to i64, !dbg !16999
  %sub4 = sub i64 %sub, %conv3, !dbg !17000
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !16995, !ctir !7
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17001, !tbaa !3308
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !17002
  br i1 %call5, label %if.end, label %if.then, !dbg !17003

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #16, !dbg !17004
  store i32 22, i32* %call6, align 4, !dbg !17004, !tbaa !2655, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17006
  br label %return, !dbg !17006

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !17007, !tbaa !2668
  %11 = load i64, i64* %len, align 8, !dbg !17008, !tbaa !3308
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17009, !tbaa !3308
  %sub7 = sub i64 %11, %12, !dbg !17010
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !17011, !tbaa !2655
  %conv8 = sext i32 %13 to i64, !dbg !17011
  %sub9 = sub i64 %sub7, %conv8, !dbg !17012
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !17007, !ctir !7
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !17013, !tbaa !2668
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17014, !tbaa !3308
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !17015
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !17016, !tbaa !2668
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17017, !tbaa !2668
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !17017
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !17019

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17020
  br label %return, !dbg !17020

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !17021, !tbaa !2655
  br label %for.cond, !dbg !17023

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !17024, !tbaa !2655
  %17 = load i32, i32* %attempts, align 4, !dbg !17026, !tbaa !2655
  %cmp14 = icmp ult i32 %16, %17, !dbg !17027
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !17028

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17029, metadata !DIExpression()), !dbg !17031
  store i64 0, i64* %i, align 8, !dbg !17032, !tbaa !3308
  br label %for.cond16, !dbg !17034

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !17035, !tbaa !3308
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17037, !tbaa !3308
  %cmp17 = icmp ult i64 %18, %19, !dbg !17038
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !17039

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17040, !tbaa !2668
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !17041
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !17042, !ctir !1200
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !17042, !tbaa !3315
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !17043, !tbaa !2668
  %23 = load i64, i64* %i, align 8, !dbg !17044, !tbaa !3308
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !17043, !ctir !7
  store i8 %21, i8* %arrayidx22, align 1, !dbg !17045, !tbaa !3315
  br label %for.inc, !dbg !17043

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !17046, !tbaa !3308
  %inc = add i64 %24, 1, !dbg !17046
  store i64 %inc, i64* %i, align 8, !dbg !17046, !tbaa !3308
  br label %for.cond16, !dbg !17047, !llvm.loop !17048

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !17050, !tbaa !2668
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !17051, !tbaa !2668
  %27 = load i8*, i8** %args.addr, align 8, !dbg !17052, !tbaa !2668
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !17050
  store i32 %call23, i32* %fd, align 4, !dbg !17053, !tbaa !2655
  %28 = load i32, i32* %fd, align 4, !dbg !17054, !tbaa !2655
  %cmp24 = icmp sge i32 %28, 0, !dbg !17056
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !17057

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !17058, !tbaa !2655
  %call27 = call i32* @__errno_location() #16, !dbg !17058
  store i32 %29, i32* %call27, align 4, !dbg !17058, !tbaa !2655, !ctir !5
  br label %done, !dbg !17060

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #16, !dbg !17061
  %30 = load i32, i32* %call28, align 4, !dbg !17061, !tbaa !2655, !ctir !5
  %cmp29 = icmp ne i32 %30, 17, !dbg !17063
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !17064

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !17065, !tbaa !2655
  br label %done, !dbg !17067

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !17068

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !17069, !tbaa !2655
  %inc35 = add i32 %31, 1, !dbg !17069
  store i32 %inc35, i32* %count, align 4, !dbg !17069, !tbaa !2655
  br label %for.cond, !dbg !17070, !llvm.loop !17071

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17073, !tbaa !2668
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !17074
  %call38 = call i32* @__errno_location() #16, !dbg !17075
  store i32 17, i32* %call38, align 4, !dbg !17075, !tbaa !2655, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17076
  br label %return, !dbg !17076

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !17077), !dbg !17078
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !17079, metadata !DIExpression()), !dbg !17081
  %call39 = call i32* @__errno_location() #16, !dbg !17082
  %33 = load i32, i32* %call39, align 4, !dbg !17082, !tbaa !2655, !ctir !5
  store i32 %33, i32* %saved_errno, align 4, !dbg !17081, !tbaa !2655
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17083, !tbaa !2668
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !17084
  %35 = load i32, i32* %saved_errno, align 4, !dbg !17085, !tbaa !2655
  %call41 = call i32* @__errno_location() #16, !dbg !17085
  store i32 %35, i32* %call41, align 4, !dbg !17085, !tbaa !2655, !ctir !5
  %36 = load i32, i32* %fd, align 4, !dbg !17086, !tbaa !2655
  store i32 %36, i32* %retval, align 4, !dbg !17087
  br label %return, !dbg !17087

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !17088
  ret i32 %37, !dbg !17088
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #10 !dbg !17089 !ctir !1209 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !177
  %len.addr = alloca i64, align 8, !ctir !52
  store i8* %s, i8** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !17090, metadata !DIExpression()), !dbg !17091
  store i64 %len, i64* %len.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !17092, metadata !DIExpression()), !dbg !17093
  %0 = load i64, i64* %len.addr, align 8, !dbg !17094, !tbaa !3308
  %1 = load i8*, i8** %s.addr, align 8, !dbg !17095, !tbaa !2668
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.397, i64 0, i64 0)) #14, !dbg !17096
  %cmp = icmp ule i64 %0, %call, !dbg !17097
  ret i1 %cmp, !dbg !17098
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !17099 !ctir !1203 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %flags.addr = alloca i32, align 4, !ctir !5
  %kind.addr = alloca i32, align 4, !ctir !5
  %x_suffix_len.addr = alloca i64, align 8, !ctir !52
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1196
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17100, metadata !DIExpression()), !dbg !17101
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17102, metadata !DIExpression()), !dbg !17103
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17104, metadata !DIExpression()), !dbg !17105
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !17106, metadata !DIExpression()), !dbg !17107
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !17108, metadata !DIExpression()), !dbg !17109
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !17110, metadata !DIExpression()), !dbg !17111
  %0 = load i32, i32* %kind.addr, align 4, !dbg !17112, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !17113

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17114, !tbaa !2668
  br label %sw.epilog, !dbg !17116

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17117, !tbaa !2668
  br label %sw.epilog, !dbg !17118

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17119, !tbaa !2668
  br label %sw.epilog, !dbg !17120

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.398, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.399, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !17121
  unreachable, !dbg !17121

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !17122, !tbaa !2668
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !17123, !tbaa !2655
  %3 = bitcast i32* %flags.addr to i8*, !dbg !17124
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17125, !tbaa !2668
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17126, !tbaa !3308
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !17127
  ret i32 %call, !dbg !17128
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !17129 !ctir !638 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %flags.addr = alloca i8*, align 8, !ctir !47
  %openflags = alloca i32*, align 8, !ctir !190
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17130, metadata !DIExpression()), !dbg !17131
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17132, metadata !DIExpression()), !dbg !17133
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !17134, metadata !DIExpression()), !dbg !17135
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !17136, !tbaa !2668
  %1 = bitcast i8* %0 to i32*, !dbg !17136
  store i32* %1, i32** %openflags, align 8, !dbg !17135, !tbaa !2668
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !17137, !tbaa !2668
  %3 = load i32*, i32** %openflags, align 8, !dbg !17138, !tbaa !2668
  %4 = load i32, i32* %3, align 4, !dbg !17139, !tbaa !2655, !ctir !5
  %and = and i32 %4, -4, !dbg !17140
  %or = or i32 %and, 2, !dbg !17141
  %or1 = or i32 %or, 64, !dbg !17142
  %or2 = or i32 %or1, 128, !dbg !17143
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !17144
  ret i32 %call, !dbg !17145
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !17146 !ctir !638 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %flags.addr = alloca i8*, align 8, !ctir !47
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17147, metadata !DIExpression()), !dbg !17148
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17149, metadata !DIExpression()), !dbg !17150
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17151, !tbaa !2668
  %call = call i32 @mkdir(i8* %0, i32 448) #9, !dbg !17152
  ret i32 %call, !dbg !17153
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !17154 !ctir !638 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %flags.addr = alloca i8*, align 8, !ctir !47
  %st = alloca %struct.stat, align 8, !ctir !17155
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17176, metadata !DIExpression()), !dbg !17177
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17178, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17180, metadata !DIExpression()), !dbg !17181
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17182, !tbaa !2668
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #9, !dbg !17182
  %cmp = icmp eq i32 %call, 0, !dbg !17184
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17185

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !17186
  %1 = load i32, i32* %call1, align 4, !dbg !17186, !tbaa !2655, !ctir !5
  %cmp2 = icmp eq i32 %1, 75, !dbg !17187
  br i1 %cmp2, label %if.then, label %if.end, !dbg !17188

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #16, !dbg !17189
  store i32 17, i32* %call3, align 4, !dbg !17189, !tbaa !2655, !ctir !5
  br label %if.end, !dbg !17189

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #16, !dbg !17190
  %2 = load i32, i32* %call4, align 4, !dbg !17190, !tbaa !2655, !ctir !5
  %cmp5 = icmp eq i32 %2, 2, !dbg !17191
  %3 = zext i1 %cmp5 to i64, !dbg !17190
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !17190
  ret i32 %cond, !dbg !17192
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !17193 !ctir !1205 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %flags.addr = alloca i32, align 4, !ctir !5
  %kind.addr = alloca i32, align 4, !ctir !5
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17194, metadata !DIExpression()), !dbg !17195
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17196, metadata !DIExpression()), !dbg !17197
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17198, metadata !DIExpression()), !dbg !17199
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !17200, metadata !DIExpression()), !dbg !17201
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17202, !tbaa !2668
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !17203, !tbaa !2655
  %2 = load i32, i32* %flags.addr, align 4, !dbg !17204, !tbaa !2655
  %3 = load i32, i32* %kind.addr, align 4, !dbg !17205, !tbaa !2655
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !17206
  ret i32 %call, !dbg !17207
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !17208 !ctir !1207 {
entry:
  %tmpl.addr = alloca i8*, align 8, !ctir !7
  %suffixlen.addr = alloca i32, align 4, !ctir !5
  %args.addr = alloca i8*, align 8, !ctir !47
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8, !ctir !1196
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17209, metadata !DIExpression()), !dbg !17210
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17211, metadata !DIExpression()), !dbg !17212
  store i8* %args, i8** %args.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !17213, metadata !DIExpression()), !dbg !17214
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !17215, metadata !DIExpression()), !dbg !17216
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17217, !tbaa !2668
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !17218, !tbaa !2655
  %2 = load i8*, i8** %args.addr, align 8, !dbg !17219, !tbaa !2668
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !17220, !tbaa !2668
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !17221
  ret i32 %call, !dbg !17222
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !17223 !ctir !1798 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17225, metadata !DIExpression()), !dbg !17226
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17227, !tbaa !2655
  %cmp = icmp sle i32 0, %0, !dbg !17229
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17230

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !17231, !tbaa !2655
  %cmp1 = icmp sle i32 %1, 2, !dbg !17232
  br i1 %cmp1, label %if.then, label %if.end, !dbg !17233

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17234, metadata !DIExpression()), !dbg !17236
  %2 = load i32, i32* %fd.addr, align 4, !dbg !17237, !tbaa !2655
  %call = call i32 @dup_safer(i32 %2), !dbg !17238
  store i32 %call, i32* %f, align 4, !dbg !17236, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17239, metadata !DIExpression()), !dbg !17240
  %call2 = call i32* @__errno_location() #16, !dbg !17241
  %3 = load i32, i32* %call2, align 4, !dbg !17241, !tbaa !2655, !ctir !5
  store i32 %3, i32* %e, align 4, !dbg !17240, !tbaa !2655
  %4 = load i32, i32* %fd.addr, align 4, !dbg !17242, !tbaa !2655
  %call3 = call i32 @close(i32 %4), !dbg !17243
  %5 = load i32, i32* %e, align 4, !dbg !17244, !tbaa !2655
  %call4 = call i32* @__errno_location() #16, !dbg !17245
  store i32 %5, i32* %call4, align 4, !dbg !17246, !tbaa !2655, !ctir !5
  %6 = load i32, i32* %f, align 4, !dbg !17247, !tbaa !2655
  store i32 %6, i32* %fd.addr, align 4, !dbg !17248, !tbaa !2655
  br label %if.end, !dbg !17249

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !17250, !tbaa !2655
  ret i32 %7, !dbg !17251
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !17252 !ctir !1245 {
entry:
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dst_stat.addr = alloca %struct.stat*, align 8, !ctir !1219
  %src_stat.addr = alloca %struct.stat*, align 8, !ctir !1219
  %options.addr = alloca i32, align 4, !ctir !5
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17253, metadata !DIExpression()), !dbg !17254
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17255, metadata !DIExpression()), !dbg !17256
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17257, metadata !DIExpression()), !dbg !17258
  store i32 %options, i32* %options.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17259, metadata !DIExpression()), !dbg !17260
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !17261, !tbaa !2668
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17262, !tbaa !2668
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17263, !tbaa !2668
  %3 = load i32, i32* %options.addr, align 4, !dbg !17264, !tbaa !2655
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !17265
  ret i32 %call, !dbg !17266
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1215 !ctir !1217 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %dfd.addr = alloca i32, align 4, !ctir !5
  %dst_name.addr = alloca i8*, align 8, !ctir !177
  %dst_stat.addr = alloca %struct.stat*, align 8, !ctir !1219
  %src_stat.addr = alloca %struct.stat*, align 8, !ctir !1219
  %options.addr = alloca i32, align 4, !ctir !5
  %dst_s = alloca i64, align 8, !ctir !1247
  %src_s = alloca i64, align 8, !ctir !1247
  %dst_ns = alloca i32, align 4, !ctir !5
  %src_ns = alloca i32, align 4, !ctir !5
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1248
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1249
  %res = alloca i32, align 4, !ctir !5
  %dst_a_s = alloca i64, align 8, !ctir !1247
  %dst_c_s = alloca i64, align 8, !ctir !1247
  %dst_m_s = alloca i64, align 8, !ctir !1247
  %dst_a_ns = alloca i32, align 4, !ctir !5
  %dst_c_ns = alloca i32, align 4, !ctir !5
  %dst_m_ns = alloca i32, align 4, !ctir !5
  %odd_second = alloca i8, align 1, !ctir !139
  %a = alloca i32, align 4, !ctir !5
  %c = alloca i32, align 4, !ctir !5
  %m = alloca i32, align 4, !ctir !5
  %SR10 = alloca i32, align 4, !ctir !5
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1254
  %dst_status = alloca %struct.stat, align 8, !ctir !1221
  %s = alloca i64, align 8, !ctir !1247
  %stat_result = alloca i32, align 4, !ctir !5
  %old_res = alloca i32, align 4, !ctir !5
  %a168 = alloca i32, align 4, !ctir !5
  store i32 %dfd, i32* %dfd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !17267, metadata !DIExpression()), !dbg !17268
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17269, metadata !DIExpression()), !dbg !17270
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17271, metadata !DIExpression()), !dbg !17272
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17273, metadata !DIExpression()), !dbg !17274
  store i32 %options, i32* %options.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17275, metadata !DIExpression()), !dbg !17276
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !17277, metadata !DIExpression()), !dbg !17278
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17279, !tbaa !2668
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !17280, !ctir !1220
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17280, !ctir !1235
  %1 = load i64, i64* %tv_sec, align 8, !dbg !17280, !tbaa !17281, !ctir !300
  store i64 %1, i64* %dst_s, align 8, !dbg !17278, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !17282, metadata !DIExpression()), !dbg !17283
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17284, !tbaa !2668
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !17285, !ctir !1220
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !17285, !ctir !1235
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !17285, !tbaa !17281, !ctir !300
  store i64 %3, i64* %src_s, align 8, !dbg !17283, !tbaa !3308
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !17286, metadata !DIExpression()), !dbg !17287
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17288, !tbaa !2668
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !17289
  %conv = trunc i64 %call to i32, !dbg !17289
  store i32 %conv, i32* %dst_ns, align 4, !dbg !17287, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !17290, metadata !DIExpression()), !dbg !17291
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17292, !tbaa !2668
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !17293
  %conv4 = trunc i64 %call3 to i32, !dbg !17293
  store i32 %conv4, i32* %src_ns, align 4, !dbg !17291, !tbaa !2655
  %6 = load i32, i32* %options.addr, align 4, !dbg !17294, !tbaa !2655
  %and = and i32 %6, 1, !dbg !17296
  %tobool = icmp ne i32 %and, 0, !dbg !17296
  br i1 %tobool, label %if.then, label %if.end207, !dbg !17297

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !17298, metadata !DIExpression()), !dbg !17300
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !17300, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !17301, metadata !DIExpression()), !dbg !17302
  call void @llvm.dbg.declare(metadata i32* %res, metadata !17303, metadata !DIExpression()), !dbg !17304
  %7 = load i64, i64* %dst_s, align 8, !dbg !17305, !tbaa !3308
  %8 = load i64, i64* %src_s, align 8, !dbg !17307, !tbaa !3308
  %cmp = icmp eq i64 %7, %8, !dbg !17308
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17309

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !17310, !tbaa !2655
  %10 = load i32, i32* %src_ns, align 4, !dbg !17311, !tbaa !2655
  %cmp6 = icmp eq i32 %9, %10, !dbg !17312
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !17313

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17314
  br label %return, !dbg !17314

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !17315, !tbaa !3308
  %12 = load i64, i64* %src_s, align 8, !dbg !17317, !tbaa !3308
  %sub = sub nsw i64 %12, 2, !dbg !17318
  %cmp9 = icmp sle i64 %11, %sub, !dbg !17319
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17320

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17321
  br label %return, !dbg !17321

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !17322, !tbaa !3308
  %14 = load i64, i64* %dst_s, align 8, !dbg !17324, !tbaa !3308
  %sub13 = sub nsw i64 %14, 2, !dbg !17325
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !17326
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !17327

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !17328
  br label %return, !dbg !17328

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17329, !tbaa !2668
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !17329
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !17331

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !17332
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17333, !tbaa !2668
  br label %if.end21, !dbg !17334

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17335, !tbaa !2668
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !17335
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !17337

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17338, !tbaa !2668
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !17338
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !17341

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #9, !dbg !17342
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !17342
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17344, !tbaa !2668
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17345, !tbaa !2668
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !17345
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !17347

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !17348

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17349, !tbaa !2668
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !17350, !ctir !1249
  store i32 2000000000, i32* %resolution, align 8, !dbg !17351, !tbaa !17352, !ctir !5
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17354, !tbaa !2668
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !17355, !ctir !1249
  store i8 0, i8* %exact, align 4, !dbg !17356, !tbaa !17357, !ctir !139
  br label %if.end30, !dbg !17358

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17359, !tbaa !2668
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !17360, !ctir !1220
  %23 = load i64, i64* %st_dev, align 8, !dbg !17360, !tbaa !4768, !ctir !280
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17361, !tbaa !2668
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !17362, !ctir !1249
  store i64 %23, i64* %dev, align 8, !dbg !17363, !tbaa !17364, !ctir !449
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17365, !tbaa !2668
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17366, !tbaa !2668
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !17366
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !17367
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !17367
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !17368, !tbaa !2668
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17369, !tbaa !2668
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !17369
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !17371

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !17372

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17373, !tbaa !2668
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17375, !tbaa !2668
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !17376
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !17377

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17378, !tbaa !2668
  br label %if.end38, !dbg !17380

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !17381

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !17382

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !17383), !dbg !17385
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17386, !tbaa !2668
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !17386
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !17388

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17389, !tbaa !2668
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !17391, !ctir !1220
  %34 = load i64, i64* %st_dev41, align 8, !dbg !17391, !tbaa !4768, !ctir !280
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !17392, !ctir !1249
  store i64 %34, i64* %dev42, align 8, !dbg !17393, !tbaa !17364, !ctir !449
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17394, !tbaa !2668
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !17395
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !17396
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !17396
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !17397, !tbaa !2668
  br label %if.end44, !dbg !17398

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17399, !tbaa !2668
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !17399
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !17401

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !17402, !tbaa !2668
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17404, !tbaa !2668
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !17405, !ctir !1249
  store i32 2000000000, i32* %resolution47, align 8, !dbg !17406, !tbaa !17352, !ctir !5
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17407, !tbaa !2668
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !17408, !ctir !1249
  store i8 0, i8* %exact48, align 4, !dbg !17409, !tbaa !17357, !ctir !139
  br label %if.end49, !dbg !17410

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17411, !tbaa !2668
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !17412, !ctir !1249
  %42 = load i32, i32* %resolution51, align 8, !dbg !17412, !tbaa !17352, !ctir !5
  store i32 %42, i32* %res, align 4, !dbg !17413, !tbaa !2655
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17414, !tbaa !2668
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !17416, !ctir !1249
  %44 = load i8, i8* %exact52, align 4, !dbg !17416, !tbaa !17357
  %tobool53 = trunc i8 %44 to i1, !dbg !17416, !ctir !139
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !17417

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !17418, metadata !DIExpression()), !dbg !17420
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17421, !tbaa !2668
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !17422, !ctir !1220
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17422, !ctir !1235
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !17422, !tbaa !17423, !ctir !300
  store i64 %46, i64* %dst_a_s, align 8, !dbg !17420, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !17424, metadata !DIExpression()), !dbg !17425
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17426, !tbaa !2668
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !17427, !ctir !1220
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !17427, !ctir !1235
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !17427, !tbaa !17428, !ctir !300
  store i64 %48, i64* %dst_c_s, align 8, !dbg !17425, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !17429, metadata !DIExpression()), !dbg !17430
  %49 = load i64, i64* %dst_s, align 8, !dbg !17431, !tbaa !3308
  store i64 %49, i64* %dst_m_s, align 8, !dbg !17430, !tbaa !3308
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !17432, metadata !DIExpression()), !dbg !17433
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17434, !tbaa !2668
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !17435
  %conv58 = trunc i64 %call57 to i32, !dbg !17435
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !17433, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !17436, metadata !DIExpression()), !dbg !17437
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17438, !tbaa !2668
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !17439
  %conv60 = trunc i64 %call59 to i32, !dbg !17439
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !17437, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !17440, metadata !DIExpression()), !dbg !17441
  %52 = load i32, i32* %dst_ns, align 4, !dbg !17442, !tbaa !2655
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !17441, !tbaa !2655
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !17443, metadata !DIExpression()), !dbg !17445
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !17446, !tbaa !3308
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !17447, !tbaa !3308
  %or = or i64 %53, %54, !dbg !17448
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !17449, !tbaa !3308
  %or61 = or i64 %or, %55, !dbg !17450
  %and62 = and i64 %or61, 1, !dbg !17451
  %tobool63 = icmp ne i64 %and62, 0, !dbg !17452
  %frombool = zext i1 %tobool63 to i8, !dbg !17445
  store i8 %frombool, i8* %odd_second, align 1, !dbg !17445, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17453, metadata !DIExpression()), !dbg !17456
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !17457, !tbaa !2655
  store i32 %56, i32* %a, align 4, !dbg !17456, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c, metadata !17458, metadata !DIExpression()), !dbg !17459
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !17460, !tbaa !2655
  store i32 %57, i32* %c, align 4, !dbg !17459, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %m, metadata !17461, metadata !DIExpression()), !dbg !17462
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !17463, !tbaa !2655
  store i32 %58, i32* %m, align 4, !dbg !17462, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !17464, metadata !DIExpression()), !dbg !17465
  store i32 1, i32* %SR10, align 4, !dbg !17465, !tbaa !2655
  %59 = load i32, i32* %SR10, align 4, !dbg !17466, !tbaa !2655
  %mul = mul nsw i32 %59, 10, !dbg !17466
  store i32 %mul, i32* %SR10, align 4, !dbg !17466, !tbaa !2655
  %60 = load i32, i32* %a, align 4, !dbg !17467, !tbaa !2655
  %61 = load i32, i32* %SR10, align 4, !dbg !17469, !tbaa !2655
  %rem = srem i32 %60, %61, !dbg !17470
  %62 = load i32, i32* %c, align 4, !dbg !17471, !tbaa !2655
  %63 = load i32, i32* %SR10, align 4, !dbg !17472, !tbaa !2655
  %rem64 = srem i32 %62, %63, !dbg !17473
  %or65 = or i32 %rem, %rem64, !dbg !17474
  %64 = load i32, i32* %m, align 4, !dbg !17475, !tbaa !2655
  %65 = load i32, i32* %SR10, align 4, !dbg !17476, !tbaa !2655
  %rem66 = srem i32 %64, %65, !dbg !17477
  %or67 = or i32 %or65, %rem66, !dbg !17478
  %cmp68 = icmp ne i32 %or67, 0, !dbg !17479
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !17480

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !17481, !tbaa !2655
  br label %if.end96, !dbg !17482

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !17483, !tbaa !2655
  store i32 %66, i32* %res, align 4, !dbg !17485, !tbaa !2655
  %67 = load i32, i32* %SR10, align 4, !dbg !17486, !tbaa !2655
  %68 = load i32, i32* %a, align 4, !dbg !17487, !tbaa !2655
  %div = sdiv i32 %68, %67, !dbg !17487
  store i32 %div, i32* %a, align 4, !dbg !17487, !tbaa !2655
  %69 = load i32, i32* %SR10, align 4, !dbg !17488, !tbaa !2655
  %70 = load i32, i32* %c, align 4, !dbg !17489, !tbaa !2655
  %div72 = sdiv i32 %70, %69, !dbg !17489
  store i32 %div72, i32* %c, align 4, !dbg !17489, !tbaa !2655
  %71 = load i32, i32* %SR10, align 4, !dbg !17490, !tbaa !2655
  %72 = load i32, i32* %m, align 4, !dbg !17491, !tbaa !2655
  %div73 = sdiv i32 %72, %71, !dbg !17491
  store i32 %div73, i32* %m, align 4, !dbg !17491, !tbaa !2655
  br label %for.cond, !dbg !17492

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !17493, !tbaa !2655
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17495, !tbaa !2668
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !17496, !ctir !1249
  %75 = load i32, i32* %resolution74, align 8, !dbg !17496, !tbaa !17352, !ctir !5
  %cmp75 = icmp slt i32 %73, %75, !dbg !17497
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !17498

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !17499, !tbaa !2655
  %rem77 = srem i32 %76, 10, !dbg !17500
  %77 = load i32, i32* %c, align 4, !dbg !17501, !tbaa !2655
  %rem78 = srem i32 %77, 10, !dbg !17502
  %or79 = or i32 %rem77, %rem78, !dbg !17503
  %78 = load i32, i32* %m, align 4, !dbg !17504, !tbaa !2655
  %rem80 = srem i32 %78, 10, !dbg !17505
  %or81 = or i32 %or79, %rem80, !dbg !17506
  %cmp82 = icmp eq i32 %or81, 0, !dbg !17507
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !17508
  br i1 %79, label %for.body, label %for.end, !dbg !17509

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !17510, !tbaa !2655
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !17512
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !17513

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !17514, !tbaa !2762
  %tobool87 = trunc i8 %81 to i1, !dbg !17514
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !17517

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !17518, !tbaa !2655
  %mul89 = mul nsw i32 %82, 2, !dbg !17518
  store i32 %mul89, i32* %res, align 4, !dbg !17518, !tbaa !2655
  br label %if.end90, !dbg !17519

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !17520

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !17521

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !17522, !tbaa !2655
  %mul92 = mul nsw i32 %83, 10, !dbg !17522
  store i32 %mul92, i32* %res, align 4, !dbg !17522, !tbaa !2655
  %84 = load i32, i32* %a, align 4, !dbg !17523, !tbaa !2655
  %div93 = sdiv i32 %84, 10, !dbg !17523
  store i32 %div93, i32* %a, align 4, !dbg !17523, !tbaa !2655
  %85 = load i32, i32* %c, align 4, !dbg !17524, !tbaa !2655
  %div94 = sdiv i32 %85, 10, !dbg !17524
  store i32 %div94, i32* %c, align 4, !dbg !17524, !tbaa !2655
  %86 = load i32, i32* %m, align 4, !dbg !17525, !tbaa !2655
  %div95 = sdiv i32 %86, 10, !dbg !17525
  store i32 %div95, i32* %m, align 4, !dbg !17525, !tbaa !2655
  br label %for.cond, !dbg !17526, !llvm.loop !17527

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !17529, !tbaa !2655
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17530, !tbaa !2668
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !17531, !ctir !1249
  store i32 %87, i32* %resolution97, align 8, !dbg !17532, !tbaa !17352, !ctir !5
  %89 = load i32, i32* %res, align 4, !dbg !17533, !tbaa !2655
  %cmp98 = icmp slt i32 1, %89, !dbg !17535
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !17536

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !17537, metadata !DIExpression()), !dbg !17539
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !17540, metadata !DIExpression()), !dbg !17541
  %90 = load i32, i32* %src_ns, align 4, !dbg !17542, !tbaa !2655
  %rem101 = srem i32 %90, 1, !dbg !17543
  %91 = load i32, i32* %src_ns, align 4, !dbg !17544, !tbaa !2655
  %sub102 = sub nsw i32 %91, %rem101, !dbg !17544
  store i32 %sub102, i32* %src_ns, align 4, !dbg !17544, !tbaa !2655
  call void @llvm.dbg.declare(metadata i64* %s, metadata !17545, metadata !DIExpression()), !dbg !17547
  %92 = load i64, i64* %src_s, align 8, !dbg !17548, !tbaa !3308
  %93 = load i32, i32* %res, align 4, !dbg !17549, !tbaa !2655
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !17550
  %94 = zext i1 %cmp103 to i64, !dbg !17549
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !17549
  %neg = xor i32 %cond, -1, !dbg !17551
  %conv105 = sext i32 %neg to i64, !dbg !17551
  %and106 = and i64 %92, %conv105, !dbg !17552
  store i64 %and106, i64* %s, align 8, !dbg !17547, !tbaa !3308
  %95 = load i64, i64* %src_s, align 8, !dbg !17553, !tbaa !3308
  %96 = load i64, i64* %dst_s, align 8, !dbg !17555, !tbaa !3308
  %cmp107 = icmp slt i64 %95, %96, !dbg !17556
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !17557

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !17558, !tbaa !3308
  %98 = load i64, i64* %dst_s, align 8, !dbg !17559, !tbaa !3308
  %cmp109 = icmp eq i64 %97, %98, !dbg !17560
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !17561

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !17562, !tbaa !2655
  %100 = load i32, i32* %dst_ns, align 4, !dbg !17563, !tbaa !2655
  %cmp112 = icmp sle i32 %99, %100, !dbg !17564
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !17565

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !17566
  br label %return, !dbg !17566

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !17567, !tbaa !3308
  %102 = load i64, i64* %s, align 8, !dbg !17569, !tbaa !3308
  %cmp116 = icmp slt i64 %101, %102, !dbg !17570
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !17571

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !17572, !tbaa !3308
  %104 = load i64, i64* %s, align 8, !dbg !17573, !tbaa !3308
  %cmp119 = icmp eq i64 %103, %104, !dbg !17574
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !17575

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !17576, !tbaa !2655
  %106 = load i32, i32* %src_ns, align 4, !dbg !17577, !tbaa !2655
  %107 = load i32, i32* %src_ns, align 4, !dbg !17578, !tbaa !2655
  %108 = load i32, i32* %res, align 4, !dbg !17579, !tbaa !2655
  %rem122 = srem i32 %107, %108, !dbg !17580
  %sub123 = sub nsw i32 %106, %rem122, !dbg !17581
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !17582
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !17583

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !17584
  br label %return, !dbg !17584

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !17585, !tbaa !3308
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17586, !ctir !1254
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !17587, !ctir !1235
  store i64 %109, i64* %tv_sec128, align 16, !dbg !17588, !tbaa !16922, !ctir !300
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !17589, !tbaa !2655
  %conv129 = sext i32 %110 to i64, !dbg !17589
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17590, !ctir !1254
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !17591, !ctir !1235
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !17592, !tbaa !16925, !ctir !302
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !17593, !tbaa !3308
  %112 = load i32, i32* %res, align 4, !dbg !17594, !tbaa !2655
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !17595
  %conv132 = zext i1 %cmp131 to i32, !dbg !17595
  %conv133 = sext i32 %conv132 to i64, !dbg !17596
  %or134 = or i64 %111, %conv133, !dbg !17597
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17598, !ctir !1254
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !17599, !ctir !1235
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !17600, !tbaa !16922, !ctir !300
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !17601, !tbaa !2655
  %114 = load i32, i32* %res, align 4, !dbg !17602, !tbaa !2655
  %div137 = sdiv i32 %114, 9, !dbg !17603
  %add = add nsw i32 %113, %div137, !dbg !17604
  %conv138 = sext i32 %add to i64, !dbg !17601
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17605, !ctir !1254
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !17606, !ctir !1235
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !17607, !tbaa !16925, !ctir !302
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !17608, !tbaa !2655
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !17610, !tbaa !2668
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17611
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #9, !dbg !17612
  %tobool142 = icmp ne i32 %call141, 0, !dbg !17612
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !17613

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !17614
  br label %return, !dbg !17614

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !17615, metadata !DIExpression()), !dbg !17617
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !17618, !tbaa !2655
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !17619, !tbaa !2668
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #9, !dbg !17620
  store i32 %call145, i32* %stat_result, align 4, !dbg !17617, !tbaa !2655
  %119 = load i32, i32* %stat_result, align 4, !dbg !17621, !tbaa !2655
  %conv146 = sext i32 %119 to i64, !dbg !17621
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17623, !ctir !1221
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !17623, !ctir !1235
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !17623, !tbaa !17281, !ctir !300
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !17624, !tbaa !3308
  %xor = xor i64 %120, %121, !dbg !17625
  %or149 = or i64 %conv146, %xor, !dbg !17626
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17627
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !17628, !tbaa !2655
  %conv151 = sext i32 %122 to i64, !dbg !17628
  %xor152 = xor i64 %call150, %conv151, !dbg !17629
  %or153 = or i64 %or149, %xor152, !dbg !17630
  %tobool154 = icmp ne i64 %or153, 0, !dbg !17630
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !17631

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !17632, !tbaa !3308
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17634, !ctir !1254
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !17635, !ctir !1235
  store i64 %123, i64* %tv_sec157, align 16, !dbg !17636, !tbaa !16922, !ctir !300
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !17637, !tbaa !2655
  %conv158 = sext i32 %124 to i64, !dbg !17637
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17638, !ctir !1254
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !17639, !ctir !1235
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !17640, !tbaa !16925, !ctir !302
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !17641, !tbaa !2655
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !17642, !tbaa !2668
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17643
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #9, !dbg !17644
  br label %if.end163, !dbg !17645

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !17646, !tbaa !2655
  %cmp164 = icmp ne i32 %127, 0, !dbg !17648
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !17649

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !17650
  br label %return, !dbg !17650

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !17651, metadata !DIExpression()), !dbg !17653
  %128 = load i32, i32* %res, align 4, !dbg !17654, !tbaa !2655
  store i32 %128, i32* %old_res, align 4, !dbg !17653, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !17655, metadata !DIExpression()), !dbg !17656
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17657, !ctir !1221
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !17657, !ctir !1235
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !17657, !tbaa !17281, !ctir !300
  %and171 = and i64 %129, 1, !dbg !17658
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !17659
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17660
  %add174 = add nsw i64 %mul172, %call173, !dbg !17661
  %conv175 = trunc i64 %add174 to i32, !dbg !17662
  store i32 %conv175, i32* %a168, align 4, !dbg !17656, !tbaa !2655
  store i32 1, i32* %res, align 4, !dbg !17663, !tbaa !2655
  %130 = load i32, i32* %res, align 4, !dbg !17664, !tbaa !2655
  %131 = load i32, i32* %a168, align 4, !dbg !17666, !tbaa !2655
  %div176 = sdiv i32 %131, %130, !dbg !17666
  store i32 %div176, i32* %a168, align 4, !dbg !17666, !tbaa !2655
  br label %for.cond177, !dbg !17667

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !17668, !tbaa !2655
  %rem178 = srem i32 %132, 10, !dbg !17670
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !17671
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !17672

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !17673, !tbaa !2655
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !17676
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !17677

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !17678, !tbaa !2655
  %mul185 = mul nsw i32 %134, 2, !dbg !17678
  store i32 %mul185, i32* %res, align 4, !dbg !17678, !tbaa !2655
  br label %for.end194, !dbg !17680

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !17681, !tbaa !2655
  %mul187 = mul nsw i32 %135, 10, !dbg !17681
  store i32 %mul187, i32* %res, align 4, !dbg !17681, !tbaa !2655
  %136 = load i32, i32* %res, align 4, !dbg !17682, !tbaa !2655
  %137 = load i32, i32* %old_res, align 4, !dbg !17684, !tbaa !2655
  %cmp188 = icmp eq i32 %136, %137, !dbg !17685
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !17686

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !17687

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !17688

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !17689, !tbaa !2655
  %div193 = sdiv i32 %138, 10, !dbg !17689
  store i32 %div193, i32* %a168, align 4, !dbg !17689, !tbaa !2655
  br label %for.cond177, !dbg !17690, !llvm.loop !17691

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !17693

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !17694, !tbaa !2655
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17695, !tbaa !2668
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !17696, !ctir !1249
  store i32 %139, i32* %resolution196, align 8, !dbg !17697, !tbaa !17352, !ctir !5
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17698, !tbaa !2668
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !17699, !ctir !1249
  store i8 1, i8* %exact197, align 4, !dbg !17700, !tbaa !17357, !ctir !139
  br label %if.end198, !dbg !17701

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !17702, !tbaa !2655
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !17703
  %143 = zext i1 %cmp199 to i64, !dbg !17702
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !17702
  %neg202 = xor i32 %cond201, -1, !dbg !17704
  %conv203 = sext i32 %neg202 to i64, !dbg !17704
  %144 = load i64, i64* %src_s, align 8, !dbg !17705, !tbaa !3308
  %and204 = and i64 %144, %conv203, !dbg !17705
  store i64 %and204, i64* %src_s, align 8, !dbg !17705, !tbaa !3308
  %145 = load i32, i32* %src_ns, align 4, !dbg !17706, !tbaa !2655
  %146 = load i32, i32* %res, align 4, !dbg !17707, !tbaa !2655
  %rem205 = srem i32 %145, %146, !dbg !17708
  %147 = load i32, i32* %src_ns, align 4, !dbg !17709, !tbaa !2655
  %sub206 = sub nsw i32 %147, %rem205, !dbg !17709
  store i32 %sub206, i32* %src_ns, align 4, !dbg !17709, !tbaa !2655
  br label %if.end207, !dbg !17710

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !17711, !tbaa !3308
  %149 = load i64, i64* %src_s, align 8, !dbg !17712, !tbaa !3308
  %cmp208 = icmp slt i64 %148, %149, !dbg !17713
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !17711

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !17711

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !17714, !tbaa !3308
  %151 = load i64, i64* %src_s, align 8, !dbg !17715, !tbaa !3308
  %cmp210 = icmp sgt i64 %150, %151, !dbg !17716
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !17714

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !17714

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !17717, !tbaa !2655
  %153 = load i32, i32* %src_ns, align 4, !dbg !17718, !tbaa !2655
  %cmp214 = icmp slt i32 %152, %153, !dbg !17719
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !17717

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !17717

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !17720, !tbaa !2655
  %155 = load i32, i32* %src_ns, align 4, !dbg !17721, !tbaa !2655
  %cmp218 = icmp sgt i32 %154, %155, !dbg !17722
  %conv219 = zext i1 %cmp218 to i32, !dbg !17722
  br label %cond.end, !dbg !17717

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !17717
  br label %cond.end221, !dbg !17714

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !17714
  br label %cond.end223, !dbg !17711

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !17711
  store i32 %cond224, i32* %retval, align 4, !dbg !17723
  br label %return, !dbg !17723

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !17724
  ret i32 %156, !dbg !17724
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !17725 !ctir !615 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %table_size.addr = alloca i64, align 8, !ctir !52
  %p = alloca %struct.fs_res*, align 8, !ctir !1255
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17726, metadata !DIExpression()), !dbg !17727
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !17728, metadata !DIExpression()), !dbg !17729
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !17730, metadata !DIExpression()), !dbg !17731
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17732, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17732
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !17731, !tbaa !2668
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !17733, !tbaa !2668
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !17734, !ctir !1256
  %3 = load i64, i64* %dev, align 8, !dbg !17734, !tbaa !17364, !ctir !449
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !17735, !tbaa !3308
  %rem = urem i64 %3, %4, !dbg !17736
  ret i64 %rem, !dbg !17737
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !17738 !ctir !617 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %y.addr = alloca i8*, align 8, !ctir !525
  %a = alloca %struct.fs_res*, align 8, !ctir !1255
  %b = alloca %struct.fs_res*, align 8, !ctir !1255
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17739, metadata !DIExpression()), !dbg !17740
  store i8* %y, i8** %y.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !17741, metadata !DIExpression()), !dbg !17742
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !17743, metadata !DIExpression()), !dbg !17744
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17745, !tbaa !2668
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17745
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !17744, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !17746, metadata !DIExpression()), !dbg !17747
  %2 = load i8*, i8** %y.addr, align 8, !dbg !17748, !tbaa !2668
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !17748
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !17747, !tbaa !2668
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !17749, !tbaa !2668
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !17750, !ctir !1256
  %5 = load i64, i64* %dev, align 8, !dbg !17750, !tbaa !17364, !ctir !449
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !17751, !tbaa !2668
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !17752, !ctir !1256
  %7 = load i64, i64* %dev1, align 8, !dbg !17752, !tbaa !17364, !ctir !449
  %cmp = icmp eq i64 %5, %7, !dbg !17753
  ret i1 %cmp, !dbg !17754
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !17755 !ctir !1265 {
entry:
  %dir.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !177
  %times.addr = alloca %struct.timespec*, align 8, !ctir !1267
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17757, metadata !DIExpression()), !dbg !17758
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17759, metadata !DIExpression()), !dbg !17760
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !17761, metadata !DIExpression()), !dbg !17762
  %0 = load i32, i32* %dir.addr, align 4, !dbg !17763, !tbaa !2655
  %1 = load i8*, i8** %file.addr, align 8, !dbg !17764, !tbaa !2668
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !17765, !tbaa !2668
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #9, !dbg !17766
  ret i32 %call, !dbg !17767
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !17768 !ctir !1265 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !177
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1267
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1273
  %ts = alloca %struct.timespec*, align 8, !ctir !1274
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !1291
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8, !ctir !1269
  %tmp35 = alloca %struct.timespec, align 8, !ctir !1269
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1275
  %t = alloca %struct.timespec*, align 8, !ctir !1282
  %abig = alloca i8, align 1, !ctir !139
  %mbig = alloca i8, align 1, !ctir !139
  %adiff = alloca i64, align 8, !ctir !1247
  %mdiff = alloca i64, align 8, !ctir !1247
  %tt = alloca %struct.timespec*, align 8, !ctir !1282
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1275
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17769, metadata !DIExpression()), !dbg !17770
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17771, metadata !DIExpression()), !dbg !17772
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17773, metadata !DIExpression()), !dbg !17774
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17775, metadata !DIExpression()), !dbg !17776
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17777, metadata !DIExpression()), !dbg !17778
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17779, !tbaa !2668
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17779
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17779

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17780
  br label %cond.end, !dbg !17779

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17779

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17779
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17778, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17781, metadata !DIExpression()), !dbg !17782
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17782, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17783, metadata !DIExpression()), !dbg !17784
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17785, !tbaa !2668
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17785
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17787

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17788, !ctir !1273
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17790, !tbaa !2668
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17790, !ctir !1267
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17790
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17790
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17790, !tbaa.struct !3817
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17791, !ctir !1273
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17792, !tbaa !2668
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17792, !ctir !1267
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17792
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17792
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17792, !tbaa.struct !3817
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17793, !tbaa !2668
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17794
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17795, !tbaa !2655
  br label %if.end, !dbg !17796

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17797, !tbaa !2655
  %cmp = icmp slt i32 %9, 0, !dbg !17799
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17800

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17801
  br label %return, !dbg !17801

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !17802, !tbaa !2655
  %cmp7 = icmp slt i32 %10, 0, !dbg !17804
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !17805

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !17806, !tbaa !2668
  %tobool8 = icmp ne i8* %11, null, !dbg !17806
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !17807

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !17808
  store i32 9, i32* %call10, align 4, !dbg !17810, !tbaa !2655, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !17811
  br label %return, !dbg !17811

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !17812, !tbaa !2655
  %cmp12 = icmp sle i32 0, %12, !dbg !17814
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !17815

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17816, metadata !DIExpression()), !dbg !17818
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !17819, !tbaa !2655
  %cmp14 = icmp eq i32 %13, 2, !dbg !17821
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !17822

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !17823, !tbaa !2655
  %cmp16 = icmp slt i32 %14, 0, !dbg !17826
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !17827

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !17828, !tbaa !2668
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #9, !dbg !17829
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17829
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !17823

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !17830, !tbaa !2655
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #9, !dbg !17831
  %tobool22 = icmp ne i32 %call21, 0, !dbg !17831
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !17827

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !17832
  br label %return, !dbg !17832

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17833, !tbaa !2668
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !17833, !ctir !1274
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17835, !ctir !1269
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !17835, !tbaa !16925, !ctir !302
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !17836
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !17837

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17838, !tbaa !2668
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !17838, !ctir !1274
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17839
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17839
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !17839
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !17839
  store i64 %22, i64* %21, align 8, !dbg !17839
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !17839
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !17839
  store i64 %24, i64* %23, align 8, !dbg !17839
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !17839
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !17839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !17839, !tbaa.struct !3817
  br label %if.end38, !dbg !17838

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17840, !tbaa !2668
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17840, !ctir !1274
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !17842, !ctir !1269
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !17842, !tbaa !16925, !ctir !302
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !17843
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !17844

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17845, !tbaa !2668
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17845, !ctir !1274
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17846
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !17846
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !17846
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !17846
  store i64 %32, i64* %31, align 8, !dbg !17846
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !17846
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !17846
  store i64 %34, i64* %33, align 8, !dbg !17846
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !17846
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !17846
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !17846, !tbaa.struct !3817
  br label %if.end37, !dbg !17845

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !17847, !tbaa !2655
  %inc = add nsw i32 %37, 1, !dbg !17847
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17847, !tbaa !2655
  br label %if.end39, !dbg !17848

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !17849, !tbaa !2655
  %cmp40 = icmp slt i32 %38, 0, !dbg !17851
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !17852

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !17853, !tbaa !2668
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17855, !tbaa !2668
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #9, !dbg !17856
  store i32 %call42, i32* %result, align 4, !dbg !17857, !tbaa !2655
  %41 = load i32, i32* %result, align 4, !dbg !17858, !tbaa !2655
  %cmp43 = icmp slt i32 0, %41, !dbg !17860
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !17861

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #16, !dbg !17862
  store i32 38, i32* %call45, align 4, !dbg !17863, !tbaa !2655, !ctir !5
  br label %if.end46, !dbg !17862

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !17864, !tbaa !2655
  %cmp47 = icmp eq i32 %42, 0, !dbg !17866
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !17867

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #16, !dbg !17868
  %43 = load i32, i32* %call48, align 4, !dbg !17868, !tbaa !2655, !ctir !5
  %cmp49 = icmp ne i32 %43, 38, !dbg !17869
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !17870

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17871, !tbaa !2655
  %44 = load i32, i32* %result, align 4, !dbg !17873, !tbaa !2655
  store i32 %44, i32* %retval, align 4, !dbg !17874
  br label %return, !dbg !17874

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !17875

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !17876, !tbaa !2655
  %cmp53 = icmp sle i32 0, %45, !dbg !17878
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !17879

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !17880, !tbaa !2655
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17882, !tbaa !2668
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #9, !dbg !17883
  store i32 %call55, i32* %result, align 4, !dbg !17884, !tbaa !2655
  %48 = load i32, i32* %result, align 4, !dbg !17885, !tbaa !2655
  %cmp56 = icmp slt i32 0, %48, !dbg !17887
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !17888

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #16, !dbg !17889
  store i32 38, i32* %call58, align 4, !dbg !17890, !tbaa !2655, !ctir !5
  br label %if.end59, !dbg !17889

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !17891, !tbaa !2655
  %cmp60 = icmp eq i32 %49, 0, !dbg !17893
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !17894

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #16, !dbg !17895
  %50 = load i32, i32* %call62, align 4, !dbg !17895, !tbaa !2655, !ctir !5
  %cmp63 = icmp ne i32 %50, 38, !dbg !17896
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !17897

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17898, !tbaa !2655
  %51 = load i32, i32* %result, align 4, !dbg !17900, !tbaa !2655
  store i32 %51, i32* %retval, align 4, !dbg !17901
  br label %return, !dbg !17901

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !17902

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !17903

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !17904, !tbaa !2655
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17905, !tbaa !2655
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !17906, !tbaa !2655
  %tobool68 = icmp ne i32 %52, 0, !dbg !17906
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !17908

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !17909, !tbaa !2655
  %cmp70 = icmp ne i32 %53, 3, !dbg !17912
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !17913

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !17914, !tbaa !2655
  %cmp72 = icmp slt i32 %54, 0, !dbg !17915
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !17916

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !17917, !tbaa !2668
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #9, !dbg !17918
  %tobool75 = icmp ne i32 %call74, 0, !dbg !17918
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !17914

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !17919, !tbaa !2655
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #9, !dbg !17920
  %tobool78 = icmp ne i32 %call77, 0, !dbg !17920
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !17916

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !17921
  br label %return, !dbg !17921

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17922, !tbaa !2668
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !17922
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !17924

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17925
  br i1 %call83, label %if.then84, label %if.end85, !dbg !17926

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !17927
  br label %return, !dbg !17927

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !17928

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !17929, metadata !DIExpression()), !dbg !17931
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !17932, metadata !DIExpression()), !dbg !17933
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17934, !tbaa !2668
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !17934
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !17936

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17937, !tbaa !2668
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !17937, !ctir !1274
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !17939, !ctir !1269
  %60 = load i64, i64* %tv_sec, align 8, !dbg !17939, !tbaa !16922, !ctir !300
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17940, !ctir !1275
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !17941, !ctir !1276
  store i64 %60, i64* %tv_sec91, align 16, !dbg !17942, !tbaa !17943, !ctir !300
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17945, !tbaa !2668
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !17945, !ctir !1274
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !17946, !ctir !1269
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !17946, !tbaa !16925, !ctir !302
  %div = sdiv i64 %62, 1000, !dbg !17947
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17948, !ctir !1275
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !17949, !ctir !1276
  store i64 %div, i64* %tv_usec, align 8, !dbg !17950, !tbaa !17951, !ctir !1281
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17952, !tbaa !2668
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !17952, !ctir !1274
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !17953, !ctir !1269
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !17953, !tbaa !16922, !ctir !300
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17954, !ctir !1275
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !17955, !ctir !1276
  store i64 %64, i64* %tv_sec98, align 16, !dbg !17956, !tbaa !17943, !ctir !300
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17957, !tbaa !2668
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !17957, !ctir !1274
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !17958, !ctir !1269
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !17958, !tbaa !16925, !ctir !302
  %div101 = sdiv i64 %66, 1000, !dbg !17959
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !17960, !ctir !1275
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !17961, !ctir !1276
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !17962, !tbaa !17951, !ctir !1281
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !17963
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !17964, !tbaa !2668
  br label %if.end106, !dbg !17965

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !17966, !tbaa !2668
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !17967, !tbaa !2655
  %cmp107 = icmp slt i32 %67, 0, !dbg !17969
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !17970

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !17971, !tbaa !2668
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17973, !tbaa !2668
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #9, !dbg !17974
  store i32 %call109, i32* %retval, align 4, !dbg !17975
  br label %return, !dbg !17975

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !17976, !tbaa !2655
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17976, !tbaa !2668
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #9, !dbg !17976
  %cmp112 = icmp eq i32 %call111, 0, !dbg !17979
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !17980

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17981, !tbaa !2668
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !17981
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !17984

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !17985, metadata !DIExpression()), !dbg !17987
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17988, !tbaa !2668
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !17988, !ctir !1282
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !17989, !ctir !1276
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !17989, !tbaa !17951, !ctir !1281
  %cmp118 = icmp sle i64 500000, %74, !dbg !17990
  %frombool = zext i1 %cmp118 to i8, !dbg !17987
  store i8 %frombool, i8* %abig, align 1, !dbg !17987, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !17991, metadata !DIExpression()), !dbg !17992
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !17993, !tbaa !2668
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !17993, !ctir !1282
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !17994, !ctir !1276
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !17994, !tbaa !17951, !ctir !1281
  %cmp121 = icmp sle i64 500000, %76, !dbg !17995
  %frombool122 = zext i1 %cmp121 to i8, !dbg !17992
  store i8 %frombool122, i8* %mbig, align 1, !dbg !17992, !tbaa !2762
  %77 = load i8, i8* %abig, align 1, !dbg !17996, !tbaa !2762
  %tobool123 = trunc i8 %77 to i1, !dbg !17996
  %conv = zext i1 %tobool123 to i32, !dbg !17996
  %78 = load i8, i8* %mbig, align 1, !dbg !17998, !tbaa !2762
  %tobool124 = trunc i8 %78 to i1, !dbg !17998
  %conv125 = zext i1 %tobool124 to i32, !dbg !17998
  %or = or i32 %conv, %conv125, !dbg !17999
  %tobool126 = icmp ne i32 %or, 0, !dbg !17999
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !18000

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !18001, !tbaa !2655
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #9, !dbg !18002
  %cmp129 = icmp eq i32 %call128, 0, !dbg !18003
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !18004

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !18005, metadata !DIExpression()), !dbg !18007
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !18008, !ctir !1291
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !18008, !ctir !1269
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !18008, !tbaa !17423, !ctir !300
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18009, !tbaa !2668
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !18009, !ctir !1282
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !18010, !ctir !1276
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !18010, !tbaa !17943, !ctir !300
  %sub = sub nsw i64 %80, %82, !dbg !18011
  store i64 %sub, i64* %adiff, align 8, !dbg !18007, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !18012, metadata !DIExpression()), !dbg !18013
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !18014, !ctir !1291
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !18014, !ctir !1269
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !18014, !tbaa !17281, !ctir !300
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18015, !tbaa !2668
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !18015, !ctir !1282
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !18016, !ctir !1276
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !18016, !tbaa !17943, !ctir !300
  %sub138 = sub nsw i64 %83, %85, !dbg !18017
  store i64 %sub138, i64* %mdiff, align 8, !dbg !18013, !tbaa !3308
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !18018, metadata !DIExpression()), !dbg !18019
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !18019, !tbaa !2668
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !18020, metadata !DIExpression()), !dbg !18021
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18022, !ctir !1275
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18023, !tbaa !2668
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !18023, !ctir !1282
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !18023
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !18023
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !18023, !tbaa.struct !3817
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !18024, !ctir !1275
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18025, !tbaa !2668
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !18025, !ctir !1282
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !18025
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !18025
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !18025, !tbaa.struct !3817
  %92 = load i8, i8* %abig, align 1, !dbg !18026, !tbaa !2762
  %tobool143 = trunc i8 %92 to i1, !dbg !18026
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !18028

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !18029, !tbaa !3308
  %cmp146 = icmp eq i64 %93, 1, !dbg !18030
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !18031

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !18032
  %cmp150 = icmp eq i64 %call149, 0, !dbg !18033
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !18034

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18035
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !18037, !tbaa !2668
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18038, !tbaa !2668
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !18038, !ctir !1282
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !18039, !ctir !1276
  store i64 0, i64* %tv_usec155, align 8, !dbg !18040, !tbaa !17951, !ctir !1281
  br label %if.end156, !dbg !18041

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !18042, !tbaa !2762
  %tobool157 = trunc i8 %95 to i1, !dbg !18042
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !18044

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !18045, !tbaa !3308
  %cmp160 = icmp eq i64 %96, 1, !dbg !18046
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !18047

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !18048
  %cmp164 = icmp eq i64 %call163, 0, !dbg !18049
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !18050

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18051
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !18053, !tbaa !2668
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18054, !tbaa !2668
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !18054, !ctir !1282
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !18055, !ctir !1276
  store i64 0, i64* %tv_usec169, align 8, !dbg !18056, !tbaa !17951, !ctir !1281
  br label %if.end170, !dbg !18057

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18058, !tbaa !2668
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !18058
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !18060

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !18061, !tbaa !2655
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18061, !tbaa !2668
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #9, !dbg !18061
  br label %if.end174, !dbg !18061

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !18062

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !18063

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !18064
  br label %return, !dbg !18064

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !18065, !tbaa !2668
  %tobool179 = icmp ne i8* %101, null, !dbg !18065
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !18067

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !18068
  br label %return, !dbg !18068

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !18070, !tbaa !2668
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18071, !tbaa !2668
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #9, !dbg !18072
  store i32 %call182, i32* %retval, align 4, !dbg !18073
  br label %return, !dbg !18073

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !18074
  ret i32 %104, !dbg !18074
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !18075 !ctir !1285 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1274
  %result = alloca i32, align 4, !ctir !5
  %utime_omit_count = alloca i32, align 4, !ctir !5
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18076, metadata !DIExpression()), !dbg !18077
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18078, metadata !DIExpression()), !dbg !18079
  store i32 0, i32* %result, align 4, !dbg !18079, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !18080, metadata !DIExpression()), !dbg !18081
  store i32 0, i32* %utime_omit_count, align 4, !dbg !18081, !tbaa !2655
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18082, !tbaa !2668
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !18082, !ctir !1274
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !18084, !ctir !1269
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18084, !tbaa !16925, !ctir !302
  %cmp = icmp ne i64 %1, 1073741823, !dbg !18085
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !18086

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18087, !tbaa !2668
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18087, !ctir !1274
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !18088, !ctir !1269
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !18088, !tbaa !16925, !ctir !302
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !18089
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !18090

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18091, !tbaa !2668
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !18091, !ctir !1274
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !18092, !ctir !1269
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !18092, !tbaa !16925, !ctir !302
  %cmp7 = icmp sle i64 0, %5, !dbg !18093
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !18094

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18095, !tbaa !2668
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !18095, !ctir !1274
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !18096, !ctir !1269
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !18096, !tbaa !16925, !ctir !302
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !18097
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !18098

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18099, !tbaa !2668
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !18099, !ctir !1274
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !18100, !ctir !1269
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !18100, !tbaa !16925, !ctir !302
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !18101
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !18102

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18103, !tbaa !2668
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !18103, !ctir !1274
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !18104, !ctir !1269
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !18104, !tbaa !16925, !ctir !302
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !18105
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !18106

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18107, !tbaa !2668
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !18107, !ctir !1274
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18108, !ctir !1269
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !18108, !tbaa !16925, !ctir !302
  %cmp22 = icmp sle i64 0, %13, !dbg !18109
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !18110

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18111, !tbaa !2668
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !18111, !ctir !1274
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !18112, !ctir !1269
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !18112, !tbaa !16925, !ctir !302
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !18113
  br i1 %cmp26, label %if.end, label %if.then, !dbg !18114

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #16, !dbg !18115
  store i32 22, i32* %call, align 4, !dbg !18117, !tbaa !2655, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !18118
  br label %return, !dbg !18118

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18119, !tbaa !2668
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !18119, !ctir !1274
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !18121, !ctir !1269
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !18121, !tbaa !16925, !ctir !302
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !18122
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !18123

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18124, !tbaa !2668
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !18124, !ctir !1274
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !18125, !ctir !1269
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !18125, !tbaa !16925, !ctir !302
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !18126
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !18127

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18128, !tbaa !2668
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !18128, !ctir !1274
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !18130, !ctir !1269
  store i64 0, i64* %tv_sec, align 8, !dbg !18131, !tbaa !16922, !ctir !300
  store i32 1, i32* %result, align 4, !dbg !18132, !tbaa !2655
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18133, !tbaa !2668
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !18133, !ctir !1274
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !18135, !ctir !1269
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !18135, !tbaa !16925, !ctir !302
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !18136
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !18137

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !18138, !tbaa !2655
  %inc = add nsw i32 %23, 1, !dbg !18138
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !18138, !tbaa !2655
  br label %if.end40, !dbg !18139

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !18140

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18141, !tbaa !2668
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !18141, !ctir !1274
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !18143, !ctir !1269
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !18143, !tbaa !16925, !ctir !302
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !18144
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !18145

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18146, !tbaa !2668
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !18146, !ctir !1274
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !18147, !ctir !1269
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !18147, !tbaa !16925, !ctir !302
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !18148
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !18149

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18150, !tbaa !2668
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !18150, !ctir !1274
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !18152, !ctir !1269
  store i64 0, i64* %tv_sec51, align 8, !dbg !18153, !tbaa !16922, !ctir !300
  store i32 1, i32* %result, align 4, !dbg !18154, !tbaa !2655
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18155, !tbaa !2668
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !18155, !ctir !1274
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !18157, !ctir !1269
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !18157, !tbaa !16925, !ctir !302
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !18158
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !18159

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !18160, !tbaa !2655
  %inc56 = add nsw i32 %31, 1, !dbg !18160
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !18160, !tbaa !2655
  br label %if.end57, !dbg !18161

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !18162

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !18163, !tbaa !2655
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !18164, !tbaa !2655
  %cmp59 = icmp eq i32 %33, 1, !dbg !18165
  %conv = zext i1 %cmp59 to i32, !dbg !18165
  %add = add nsw i32 %32, %conv, !dbg !18166
  store i32 %add, i32* %retval, align 4, !dbg !18167
  br label %return, !dbg !18167

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !18168
  ret i32 %34, !dbg !18168
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !18169 !ctir !1287 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %statbuf.addr = alloca %struct.stat*, align 8, !ctir !1289
  %ts.addr = alloca %struct.timespec**, align 8, !ctir !1308
  %timespec = alloca %struct.timespec*, align 8, !ctir !1274
  %tmp = alloca %struct.timespec, align 8, !ctir !1269
  %tmp30 = alloca %struct.timespec, align 8, !ctir !1269
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !18170, metadata !DIExpression()), !dbg !18171
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !18172, metadata !DIExpression()), !dbg !18173
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !18174, metadata !DIExpression()), !dbg !18175
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !18176, !tbaa !2668
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !18177, !tbaa !2668, !ctir !1274
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !18175, !tbaa !2668
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18178, !tbaa !2668
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18178, !ctir !1274
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !18180, !ctir !1269
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !18180, !tbaa !16925, !ctir !302
  %cmp = icmp eq i64 %3, 1073741822, !dbg !18181
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18182

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18183, !tbaa !2668
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !18183, !ctir !1274
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !18184, !ctir !1269
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !18184, !tbaa !16925, !ctir !302
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !18185
  br i1 %cmp3, label %if.then, label %if.end, !dbg !18186

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !18187
  br label %return, !dbg !18187

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18188, !tbaa !2668
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !18188, !ctir !1274
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !18190, !ctir !1269
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !18190, !tbaa !16925, !ctir !302
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !18191
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !18192

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18193, !tbaa !2668
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !18193, !ctir !1274
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !18194, !ctir !1269
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !18194, !tbaa !16925, !ctir !302
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !18195
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !18196

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !18197, !tbaa !2668
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !18199, !tbaa !2668, !ctir !1274
  store i1 false, i1* %retval, align 1, !dbg !18200
  br label %return, !dbg !18200

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18201, !tbaa !2668
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !18201, !ctir !1274
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !18203, !ctir !1269
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !18203, !tbaa !16925, !ctir !302
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !18204
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !18205

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18206, !tbaa !2668
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18206, !ctir !1274
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18207, !tbaa !2668
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !18208
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18208
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !18208
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !18208
  store i64 %17, i64* %16, align 8, !dbg !18208
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !18208
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !18208
  store i64 %19, i64* %18, align 8, !dbg !18208
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !18208
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !18208
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !18208, !tbaa.struct !3817
  br label %if.end24, !dbg !18206

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18209, !tbaa !2668
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !18209, !ctir !1274
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !18211, !ctir !1269
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !18211, !tbaa !16925, !ctir !302
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !18212
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !18213

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18214, !tbaa !2668
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !18214, !ctir !1274
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !18215
  br label %if.end23, !dbg !18215

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18216, !tbaa !2668
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18216, !ctir !1274
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !18218, !ctir !1269
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !18218, !tbaa !16925, !ctir !302
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !18219
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !18220

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18221, !tbaa !2668
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !18221, !ctir !1274
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18222, !tbaa !2668
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !18223
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !18223
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !18223
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !18223
  store i64 %31, i64* %30, align 8, !dbg !18223
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !18223
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !18223
  store i64 %33, i64* %32, align 8, !dbg !18223
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !18223
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !18223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !18223, !tbaa.struct !3817
  br label %if.end39, !dbg !18221

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18224, !tbaa !2668
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !18224, !ctir !1274
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !18226, !ctir !1269
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !18226, !tbaa !16925, !ctir !302
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !18227
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !18228

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18229, !tbaa !2668
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !18229, !ctir !1274
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !18230
  br label %if.end38, !dbg !18230

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !18231
  br label %return, !dbg !18231

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !18232
  ret i1 %39, !dbg !18232
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18233 !ctir !1283 {
entry:
  %file.addr = alloca i8*, align 8, !ctir !177
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1267
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18234, metadata !DIExpression()), !dbg !18235
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18236, metadata !DIExpression()), !dbg !18237
  %0 = load i8*, i8** %file.addr, align 8, !dbg !18238, !tbaa !2668
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18239, !tbaa !2668
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !18240
  ret i32 %call, !dbg !18241
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18242 !ctir !1283 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !177
  %timespec.addr = alloca %struct.timespec*, align 8, !ctir !1267
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1273
  %ts = alloca %struct.timespec*, align 8, !ctir !1274
  %adjustment_needed = alloca i32, align 4, !ctir !5
  %st = alloca %struct.stat, align 8, !ctir !1291
  %result = alloca i32, align 4, !ctir !5
  %tmp = alloca %struct.timespec, align 8, !ctir !1269
  %tmp25 = alloca %struct.timespec, align 8, !ctir !1269
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18243, metadata !DIExpression()), !dbg !18244
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18245, metadata !DIExpression()), !dbg !18246
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !18247, metadata !DIExpression()), !dbg !18248
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !18249, metadata !DIExpression()), !dbg !18250
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18251, !tbaa !2668
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !18251
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18251

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18252
  br label %cond.end, !dbg !18251

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !18251
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !18250, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !18253, metadata !DIExpression()), !dbg !18254
  store i32 0, i32* %adjustment_needed, align 4, !dbg !18254, !tbaa !2655
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !18255, metadata !DIExpression()), !dbg !18256
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18257, !tbaa !2668
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !18257
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18259

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18260, !ctir !1273
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18262, !tbaa !2668
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18262, !ctir !1267
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !18262
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !18262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !18262, !tbaa.struct !3817
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !18263, !ctir !1273
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18264, !tbaa !2668
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !18264, !ctir !1267
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !18264
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !18264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !18264, !tbaa.struct !3817
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18265, !tbaa !2668
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !18266
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !18267, !tbaa !2655
  br label %if.end, !dbg !18268

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !18269, !tbaa !2655
  %cmp = icmp slt i32 %9, 0, !dbg !18271
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !18272

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !18273
  br label %return, !dbg !18273

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !18274, !tbaa !2655
  %cmp7 = icmp sle i32 0, %10, !dbg !18276
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !18277

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18278, metadata !DIExpression()), !dbg !18280
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !18281, !tbaa !2655
  %cmp9 = icmp eq i32 %11, 2, !dbg !18283
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !18284

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !18285, !tbaa !2668
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #9, !dbg !18288
  %tobool12 = icmp ne i32 %call11, 0, !dbg !18288
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !18289

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !18290
  br label %return, !dbg !18290

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18291, !tbaa !2668
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18291, !ctir !1274
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !18293, !ctir !1269
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !18293, !tbaa !16925, !ctir !302
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !18294
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !18295

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18296, !tbaa !2668
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !18296, !ctir !1274
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !18297
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18297
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !18297
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !18297
  store i64 %18, i64* %17, align 8, !dbg !18297
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !18297
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !18297
  store i64 %20, i64* %19, align 8, !dbg !18297
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !18297
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !18297
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !18297, !tbaa.struct !3817
  br label %if.end28, !dbg !18296

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18298, !tbaa !2668
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !18298, !ctir !1274
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18300, !ctir !1269
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !18300, !tbaa !16925, !ctir !302
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !18301
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !18302

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18303, !tbaa !2668
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18303, !ctir !1274
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !18304
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !18304
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !18304
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !18304
  store i64 %28, i64* %27, align 8, !dbg !18304
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !18304
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !18304
  store i64 %30, i64* %29, align 8, !dbg !18304
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !18304
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !18304
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !18304, !tbaa.struct !3817
  br label %if.end27, !dbg !18303

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !18305, !tbaa !2655
  %inc = add nsw i32 %33, 1, !dbg !18305
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !18305, !tbaa !2655
  br label %if.end29, !dbg !18306

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !18307, !tbaa !2668
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18308, !tbaa !2668
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #9, !dbg !18309
  store i32 %call30, i32* %result, align 4, !dbg !18310, !tbaa !2655
  %36 = load i32, i32* %result, align 4, !dbg !18311, !tbaa !2655
  %cmp31 = icmp slt i32 0, %36, !dbg !18313
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !18314

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #16, !dbg !18315
  store i32 38, i32* %call33, align 4, !dbg !18316, !tbaa !2655, !ctir !5
  br label %if.end34, !dbg !18315

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !18317, !tbaa !2655
  %cmp35 = icmp eq i32 %37, 0, !dbg !18319
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !18320

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #16, !dbg !18321
  %38 = load i32, i32* %call36, align 4, !dbg !18321, !tbaa !2655, !ctir !5
  %cmp37 = icmp ne i32 %38, 38, !dbg !18322
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !18323

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !18324, !tbaa !2655
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !18326, !tbaa !2655
  %39 = load i32, i32* %result, align 4, !dbg !18327, !tbaa !2655
  store i32 %39, i32* %retval, align 4, !dbg !18328
  br label %return, !dbg !18328

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !18329

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !18330, !tbaa !2655
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !18331, !tbaa !2655
  %tobool41 = icmp ne i32 %40, 0, !dbg !18331
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !18333

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !18334, !tbaa !2655
  %cmp43 = icmp ne i32 %41, 3, !dbg !18337
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !18338

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !18339, !tbaa !2668
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #9, !dbg !18340
  %tobool45 = icmp ne i32 %call44, 0, !dbg !18340
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !18341

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !18342
  br label %return, !dbg !18342

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18343, !tbaa !2668
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !18343
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !18345

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !18346
  br i1 %call50, label %if.then51, label %if.end52, !dbg !18347

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !18348
  br label %return, !dbg !18348

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !18349

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !18350, !tbaa !2655
  %tobool54 = icmp ne i32 %44, 0, !dbg !18350
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !18352

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !18353, !tbaa !2668
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #9, !dbg !18354
  %tobool57 = icmp ne i32 %call56, 0, !dbg !18354
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !18355

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !18356
  br label %return, !dbg !18356

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !18357, !ctir !1291
  %46 = load i32, i32* %st_mode, align 8, !dbg !18357, !tbaa !2934, !ctir !137
  %and = and i32 %46, 61440, !dbg !18357
  %cmp60 = icmp eq i32 %and, 40960, !dbg !18357
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !18359

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !18360, !tbaa !2668
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18361, !tbaa !2668
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !18362
  store i32 %call62, i32* %retval, align 4, !dbg !18363
  br label %return, !dbg !18363

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #16, !dbg !18364
  store i32 38, i32* %call64, align 4, !dbg !18365, !tbaa !2655, !ctir !5
  store i32 -1, i32* %retval, align 4, !dbg !18366
  br label %return, !dbg !18366

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !18367
  ret i32 %49, !dbg !18367
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !18368 !ctir !1956 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1958
  %command_name.addr = alloca i8*, align 8, !ctir !177
  %package.addr = alloca i8*, align 8, !ctir !177
  %version.addr = alloca i8*, align 8, !ctir !177
  %authors.addr = alloca i8**, align 8, !ctir !1342
  %n_authors.addr = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18370, metadata !DIExpression()), !dbg !18371
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18372, metadata !DIExpression()), !dbg !18373
  store i8* %package, i8** %package.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18374, metadata !DIExpression()), !dbg !18375
  store i8* %version, i8** %version.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18376, metadata !DIExpression()), !dbg !18377
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18378, metadata !DIExpression()), !dbg !18379
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !18380, metadata !DIExpression()), !dbg !18381
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !18382, !tbaa !2668
  %tobool = icmp ne i8* %0, null, !dbg !18382
  br i1 %tobool, label %if.then, label %if.else, !dbg !18384

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18385, !tbaa !2668
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !18386, !tbaa !2668
  %3 = load i8*, i8** %package.addr, align 8, !dbg !18387, !tbaa !2668
  %4 = load i8*, i8** %version.addr, align 8, !dbg !18388, !tbaa !2668
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.410, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !18389
  br label %if.end, !dbg !18389

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18390, !tbaa !2668
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18391, !tbaa !2668
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18392, !tbaa !2668
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.411, i64 0, i64 0), i8* %6, i8* %7), !dbg !18393
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18394, !tbaa !2668
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.412, i64 0, i64 0)) #9, !dbg !18395
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !18396
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18397, !tbaa !2668
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.413, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !18397
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18398, !tbaa !2668
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.414, i64 0, i64 0)) #9, !dbg !18399
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.415, i64 0, i64 0)), !dbg !18400
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18401, !tbaa !2668
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.413, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !18401
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !18402, !tbaa !3308
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !18403

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !18404

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18406, !tbaa !2668
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.416, i64 0, i64 0)) #9, !dbg !18407
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !18408, !tbaa !2668
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !18408, !ctir !1342
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !18408, !tbaa !2668
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !18409
  br label %sw.epilog, !dbg !18410

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18411, !tbaa !2668
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.417, i64 0, i64 0)) #9, !dbg !18412
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !18413, !tbaa !2668
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !18413, !ctir !1342
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !18413, !tbaa !2668
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !18414, !tbaa !2668
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !18414, !ctir !1342
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !18414, !tbaa !2668
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !18415
  br label %sw.epilog, !dbg !18416

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18417, !tbaa !2668
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.418, i64 0, i64 0)) #9, !dbg !18418
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !18419, !tbaa !2668
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !18419, !ctir !1342
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !18419, !tbaa !2668
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !18420, !tbaa !2668
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !18420, !ctir !1342
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !18420, !tbaa !2668
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !18421, !tbaa !2668
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !18421, !ctir !1342
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !18421, !tbaa !2668
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !18422
  br label %sw.epilog, !dbg !18423

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18424, !tbaa !2668
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.419, i64 0, i64 0)) #9, !dbg !18425
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !18426, !tbaa !2668
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !18426, !ctir !1342
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !18426, !tbaa !2668
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !18427, !tbaa !2668
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !18427, !ctir !1342
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !18427, !tbaa !2668
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !18428, !tbaa !2668
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !18428, !ctir !1342
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !18428, !tbaa !2668
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !18429, !tbaa !2668
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !18429, !ctir !1342
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !18429, !tbaa !2668
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !18430
  br label %sw.epilog, !dbg !18431

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18432, !tbaa !2668
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.420, i64 0, i64 0)) #9, !dbg !18433
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !18434, !tbaa !2668
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !18434, !ctir !1342
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !18434, !tbaa !2668
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !18435, !tbaa !2668
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !18435, !ctir !1342
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !18435, !tbaa !2668
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !18436, !tbaa !2668
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !18436, !ctir !1342
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !18436, !tbaa !2668
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !18437, !tbaa !2668
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !18437, !ctir !1342
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !18437, !tbaa !2668
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !18438, !tbaa !2668
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !18438, !ctir !1342
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !18438, !tbaa !2668
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !18439
  br label %sw.epilog, !dbg !18440

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18441, !tbaa !2668
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.421, i64 0, i64 0)) #9, !dbg !18442
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !18443, !tbaa !2668
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !18443, !ctir !1342
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !18443, !tbaa !2668
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !18444, !tbaa !2668
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !18444, !ctir !1342
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !18444, !tbaa !2668
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !18445, !tbaa !2668
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !18445, !ctir !1342
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !18445, !tbaa !2668
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !18446, !tbaa !2668
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !18446, !ctir !1342
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !18446, !tbaa !2668
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !18447, !tbaa !2668
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !18447, !ctir !1342
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !18447, !tbaa !2668
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !18448, !tbaa !2668
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !18448, !ctir !1342
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !18448, !tbaa !2668
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !18449
  br label %sw.epilog, !dbg !18450

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18451, !tbaa !2668
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.422, i64 0, i64 0)) #9, !dbg !18452
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !18453, !tbaa !2668
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !18453, !ctir !1342
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !18453, !tbaa !2668
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !18454, !tbaa !2668
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !18454, !ctir !1342
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !18454, !tbaa !2668
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !18455, !tbaa !2668
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !18455, !ctir !1342
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !18455, !tbaa !2668
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !18456, !tbaa !2668
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !18456, !ctir !1342
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !18456, !tbaa !2668
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !18457, !tbaa !2668
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !18457, !ctir !1342
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !18457, !tbaa !2668
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !18458, !tbaa !2668
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !18458, !ctir !1342
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !18458, !tbaa !2668
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !18459, !tbaa !2668
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !18459, !ctir !1342
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !18459, !tbaa !2668
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !18460
  br label %sw.epilog, !dbg !18461

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18462, !tbaa !2668
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.423, i64 0, i64 0)) #9, !dbg !18463
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !18464, !tbaa !2668
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !18464, !ctir !1342
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !18464, !tbaa !2668
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !18465, !tbaa !2668
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !18465, !ctir !1342
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !18465, !tbaa !2668
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !18466, !tbaa !2668
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !18466, !ctir !1342
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !18466, !tbaa !2668
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !18467, !tbaa !2668
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !18467, !ctir !1342
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !18467, !tbaa !2668
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !18468, !tbaa !2668
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !18468, !ctir !1342
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !18468, !tbaa !2668
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !18469, !tbaa !2668
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !18469, !ctir !1342
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !18469, !tbaa !2668
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !18470, !tbaa !2668
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !18470, !ctir !1342
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !18470, !tbaa !2668
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !18471, !tbaa !2668
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !18471, !ctir !1342
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !18471, !tbaa !2668
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !18472
  br label %sw.epilog, !dbg !18473

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18474, !tbaa !2668
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.424, i64 0, i64 0)) #9, !dbg !18475
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !18476, !tbaa !2668
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !18476, !ctir !1342
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !18476, !tbaa !2668
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !18477, !tbaa !2668
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !18477, !ctir !1342
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !18477, !tbaa !2668
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !18478, !tbaa !2668
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !18478, !ctir !1342
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !18478, !tbaa !2668
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !18479, !tbaa !2668
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !18479, !ctir !1342
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !18479, !tbaa !2668
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !18480, !tbaa !2668
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !18480, !ctir !1342
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !18480, !tbaa !2668
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !18481, !tbaa !2668
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !18481, !ctir !1342
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !18481, !tbaa !2668
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !18482, !tbaa !2668
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !18482, !ctir !1342
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !18482, !tbaa !2668
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !18483, !tbaa !2668
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !18483, !ctir !1342
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !18483, !tbaa !2668
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !18484, !tbaa !2668
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !18484, !ctir !1342
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !18484, !tbaa !2668
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !18485
  br label %sw.epilog, !dbg !18486

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18487, !tbaa !2668
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.425, i64 0, i64 0)) #9, !dbg !18488
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !18489, !tbaa !2668
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !18489, !ctir !1342
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !18489, !tbaa !2668
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !18490, !tbaa !2668
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !18490, !ctir !1342
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !18490, !tbaa !2668
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !18491, !tbaa !2668
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !18491, !ctir !1342
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !18491, !tbaa !2668
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !18492, !tbaa !2668
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !18492, !ctir !1342
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !18492, !tbaa !2668
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !18493, !tbaa !2668
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !18493, !ctir !1342
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !18493, !tbaa !2668
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !18494, !tbaa !2668
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !18494, !ctir !1342
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !18494, !tbaa !2668
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !18495, !tbaa !2668
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !18495, !ctir !1342
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !18495, !tbaa !2668
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !18496, !tbaa !2668
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !18496, !ctir !1342
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !18496, !tbaa !2668
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !18497, !tbaa !2668
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !18497, !ctir !1342
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !18497, !tbaa !2668
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !18498
  br label %sw.epilog, !dbg !18499

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !18500
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !18501 !ctir !1999 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1958
  %command_name.addr = alloca i8*, align 8, !ctir !177
  %package.addr = alloca i8*, align 8, !ctir !177
  %version.addr = alloca i8*, align 8, !ctir !177
  %authors.addr = alloca i8**, align 8, !ctir !1342
  %n_authors = alloca i64, align 8, !ctir !52
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18502, metadata !DIExpression()), !dbg !18503
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18504, metadata !DIExpression()), !dbg !18505
  store i8* %package, i8** %package.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18506, metadata !DIExpression()), !dbg !18507
  store i8* %version, i8** %version.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18508, metadata !DIExpression()), !dbg !18509
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18510, metadata !DIExpression()), !dbg !18511
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18512, metadata !DIExpression()), !dbg !18513
  store i64 0, i64* %n_authors, align 8, !dbg !18514, !tbaa !3308
  br label %for.cond, !dbg !18516

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !18517, !tbaa !2668
  %1 = load i64, i64* %n_authors, align 8, !dbg !18519, !tbaa !3308
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !18517, !ctir !1342
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !18517, !tbaa !2668
  %tobool = icmp ne i8* %2, null, !dbg !18520
  br i1 %tobool, label %for.body, label %for.end, !dbg !18520

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !18520

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !18521, !tbaa !3308
  %inc = add i64 %3, 1, !dbg !18521
  store i64 %inc, i64* %n_authors, align 8, !dbg !18521, !tbaa !3308
  br label %for.cond, !dbg !18522, !llvm.loop !18523

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18525, !tbaa !2668
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !18526, !tbaa !2668
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18527, !tbaa !2668
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18528, !tbaa !2668
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !18529, !tbaa !2668
  %9 = load i64, i64* %n_authors, align 8, !dbg !18530, !tbaa !3308
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !18531
  ret void, !dbg !18532
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !18533 !ctir !2001 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1958
  %command_name.addr = alloca i8*, align 8, !ctir !177
  %package.addr = alloca i8*, align 8, !ctir !177
  %version.addr = alloca i8*, align 8, !ctir !177
  %authors.addr = alloca %struct.__va_list_tag*, align 8, !ctir !2003
  %n_authors = alloca i64, align 8, !ctir !52
  %authtab = alloca [10 x i8*], align 16, !ctir !2010
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18534, metadata !DIExpression()), !dbg !18535
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18536, metadata !DIExpression()), !dbg !18537
  store i8* %package, i8** %package.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18538, metadata !DIExpression()), !dbg !18539
  store i8* %version, i8** %version.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18540, metadata !DIExpression()), !dbg !18541
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !18542, metadata !DIExpression()), !dbg !18543
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18544, metadata !DIExpression()), !dbg !18545
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !18546, metadata !DIExpression()), !dbg !18547
  store i64 0, i64* %n_authors, align 8, !dbg !18548, !tbaa !3308
  br label %for.cond, !dbg !18550

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !18551, !tbaa !3308
  %cmp = icmp ult i64 %0, 10, !dbg !18553
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18554

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !18555, !tbaa !2668
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !18555
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !18555
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18555
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18555

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !18555
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !18555
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18555
  %4 = bitcast i8* %3 to i8**, !dbg !18555
  %5 = add i32 %gp_offset, 8, !dbg !18555
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !18555
  br label %vaarg.end, !dbg !18555

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !18555
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18555
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !18555
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18555
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18555
  br label %vaarg.end, !dbg !18555

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !18555
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !18555
  %8 = load i64, i64* %n_authors, align 8, !dbg !18556, !tbaa !3308
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !18557, !ctir !2010
  store i8* %7, i8** %arrayidx, align 8, !dbg !18558, !tbaa !2668
  %cmp1 = icmp ne i8* %7, null, !dbg !18559
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !18560
  br i1 %9, label %for.body, label %for.end, !dbg !18561

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !18561

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !18562, !tbaa !3308
  %inc = add i64 %10, 1, !dbg !18562
  store i64 %inc, i64* %n_authors, align 8, !dbg !18562, !tbaa !3308
  br label %for.cond, !dbg !18563, !llvm.loop !18564

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18566, !tbaa !2668
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !18567, !tbaa !2668
  %13 = load i8*, i8** %package.addr, align 8, !dbg !18568, !tbaa !2668
  %14 = load i8*, i8** %version.addr, align 8, !dbg !18569, !tbaa !2668
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !18570
  %15 = load i64, i64* %n_authors, align 8, !dbg !18571, !tbaa !3308
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !18572
  ret void, !dbg !18573
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !18574 !ctir !2011 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !1958
  %command_name.addr = alloca i8*, align 8, !ctir !177
  %package.addr = alloca i8*, align 8, !ctir !177
  %version.addr = alloca i8*, align 8, !ctir !177
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2013
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18577, metadata !DIExpression()), !dbg !18578
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18579, metadata !DIExpression()), !dbg !18580
  store i8* %package, i8** %package.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18581, metadata !DIExpression()), !dbg !18582
  store i8* %version, i8** %version.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18583, metadata !DIExpression()), !dbg !18584
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !18585, metadata !DIExpression()), !dbg !18586
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18587
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18587
  call void @llvm.va_start(i8* %arraydecay1), !dbg !18587
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18588, !tbaa !2668
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !18589, !tbaa !2668
  %2 = load i8*, i8** %package.addr, align 8, !dbg !18590, !tbaa !2668
  %3 = load i8*, i8** %version.addr, align 8, !dbg !18591, !tbaa !2668
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18592
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !18593
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18594
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !18594
  call void @llvm.va_end(i8* %arraydecay34), !dbg !18594
  ret void, !dbg !18595
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !18596 !ctir !197 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18597, !tbaa !2668
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.413, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !18597
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.428, i64 0, i64 0)) #9, !dbg !18598
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.429, i64 0, i64 0)), !dbg !18599
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.430, i64 0, i64 0)) #9, !dbg !18600
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.431, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.432, i64 0, i64 0)), !dbg !18601
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.433, i64 0, i64 0)) #9, !dbg !18602
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.434, i64 0, i64 0)), !dbg !18603
  ret void, !dbg !18604
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1325 !ctir !1327 {
entry:
  %can = alloca i8, align 1, !ctir !139
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !18605, !tbaa !2762
  %tobool = trunc i8 %0 to i1, !dbg !18605
  br i1 %tobool, label %if.end, label %if.then, !dbg !18607

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !18608, metadata !DIExpression()), !dbg !18610
  store i8 0, i8* %can, align 1, !dbg !18610, !tbaa !2762
  %call = call i32 @geteuid() #9, !dbg !18611
  %cmp = icmp eq i32 %call, 0, !dbg !18612
  %frombool = zext i1 %cmp to i8, !dbg !18613
  store i8 %frombool, i8* %can, align 1, !dbg !18613, !tbaa !2762
  %1 = load i8, i8* %can, align 1, !dbg !18614, !tbaa !2762
  %tobool1 = trunc i8 %1 to i1, !dbg !18614
  %frombool2 = zext i1 %tobool1 to i8, !dbg !18615
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !18615, !tbaa !2762
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !18616, !tbaa !2762
  br label %if.end, !dbg !18617

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !18618, !tbaa !2762
  %tobool3 = trunc i8 %2 to i1, !dbg !18618
  ret i1 %tobool3, !dbg !18619
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !18620 !ctir !2020 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18622, metadata !DIExpression()), !dbg !18623
  store i64 %s, i64* %s.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18624, metadata !DIExpression()), !dbg !18625
  %0 = load i64, i64* %s.addr, align 8, !dbg !18626, !tbaa !3308
  %div = udiv i64 9223372036854775807, %0, !dbg !18626
  %1 = load i64, i64* %n.addr, align 8, !dbg !18626, !tbaa !3308
  %cmp = icmp ult i64 %div, %1, !dbg !18626
  br i1 %cmp, label %if.then, label %if.end, !dbg !18628

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18629
  unreachable, !dbg !18629

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18630, !tbaa !3308
  %3 = load i64, i64* %s.addr, align 8, !dbg !18631, !tbaa !3308
  %mul = mul i64 %2, %3, !dbg !18632
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !18633
  ret i8* %call, !dbg !18634
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !18635 !ctir !2028 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18637, metadata !DIExpression()), !dbg !18638
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18639, metadata !DIExpression()), !dbg !18640
  %0 = load i64, i64* %n.addr, align 8, !dbg !18641, !tbaa !3308
  %call = call noalias i8* @malloc(i64 %0) #9, !dbg !18642
  store i8* %call, i8** %p, align 8, !dbg !18640, !tbaa !2668
  %1 = load i8*, i8** %p, align 8, !dbg !18643, !tbaa !2668
  %tobool = icmp ne i8* %1, null, !dbg !18643
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18645

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18646, !tbaa !3308
  %cmp = icmp ne i64 %2, 0, !dbg !18647
  br i1 %cmp, label %if.then, label %if.end, !dbg !18648

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !18649
  unreachable, !dbg !18649

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !18650, !tbaa !2668
  ret i8* %3, !dbg !18651
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !18652 !ctir !2022 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18653, metadata !DIExpression()), !dbg !18654
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18655, metadata !DIExpression()), !dbg !18656
  store i64 %s, i64* %s.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18657, metadata !DIExpression()), !dbg !18658
  %0 = load i64, i64* %s.addr, align 8, !dbg !18659, !tbaa !3308
  %div = udiv i64 9223372036854775807, %0, !dbg !18659
  %1 = load i64, i64* %n.addr, align 8, !dbg !18659, !tbaa !3308
  %cmp = icmp ult i64 %div, %1, !dbg !18659
  br i1 %cmp, label %if.then, label %if.end, !dbg !18661

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18662
  unreachable, !dbg !18662

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18663, !tbaa !2668
  %3 = load i64, i64* %n.addr, align 8, !dbg !18664, !tbaa !3308
  %4 = load i64, i64* %s.addr, align 8, !dbg !18665, !tbaa !3308
  %mul = mul i64 %3, %4, !dbg !18666
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !18667
  ret i8* %call, !dbg !18668
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !18669 !ctir !2030 {
entry:
  %retval = alloca i8*, align 8, !ctir !47
  %p.addr = alloca i8*, align 8, !ctir !47
  %n.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18670, metadata !DIExpression()), !dbg !18671
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18672, metadata !DIExpression()), !dbg !18673
  %0 = load i64, i64* %n.addr, align 8, !dbg !18674, !tbaa !3308
  %tobool = icmp ne i64 %0, 0, !dbg !18674
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18676

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18677, !tbaa !2668
  %tobool1 = icmp ne i8* %1, null, !dbg !18677
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18678

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18679, !tbaa !2668
  call void @free(i8* %2) #9, !dbg !18681
  store i8* null, i8** %retval, align 8, !dbg !18682
  br label %return, !dbg !18682

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !18683, !tbaa !2668
  %4 = load i64, i64* %n.addr, align 8, !dbg !18684, !tbaa !3308
  %call = call i8* @realloc(i8* %3, i64 %4) #9, !dbg !18685
  store i8* %call, i8** %p.addr, align 8, !dbg !18686, !tbaa !2668
  %5 = load i8*, i8** %p.addr, align 8, !dbg !18687, !tbaa !2668
  %tobool2 = icmp ne i8* %5, null, !dbg !18687
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !18689

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !18690, !tbaa !3308
  %tobool4 = icmp ne i64 %6, 0, !dbg !18690
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !18691

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #15, !dbg !18692
  unreachable, !dbg !18692

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !18693, !tbaa !2668
  store i8* %7, i8** %retval, align 8, !dbg !18694
  br label %return, !dbg !18694

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !18695
  ret i8* %8, !dbg !18695
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !18696 !ctir !2024 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %pn.addr = alloca i64*, align 8, !ctir !694
  %s.addr = alloca i64, align 8, !ctir !52
  %n = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18697, metadata !DIExpression()), !dbg !18698
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18699, metadata !DIExpression()), !dbg !18700
  store i64 %s, i64* %s.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18701, metadata !DIExpression()), !dbg !18702
  call void @llvm.dbg.declare(metadata i64* %n, metadata !18703, metadata !DIExpression()), !dbg !18704
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !18705, !tbaa !2668
  %1 = load i64, i64* %0, align 8, !dbg !18706, !tbaa !3308, !ctir !52
  store i64 %1, i64* %n, align 8, !dbg !18704, !tbaa !3308
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18707, !tbaa !2668
  %tobool = icmp ne i8* %2, null, !dbg !18707
  br i1 %tobool, label %if.else, label %if.then, !dbg !18709

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !18710, !tbaa !3308
  %tobool1 = icmp ne i64 %3, 0, !dbg !18710
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !18713

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !18714, !tbaa !3308
  %div = udiv i64 128, %4, !dbg !18716
  store i64 %div, i64* %n, align 8, !dbg !18717, !tbaa !3308
  %5 = load i64, i64* %n, align 8, !dbg !18718, !tbaa !3308
  %tobool3 = icmp ne i64 %5, 0, !dbg !18719
  %lnot = xor i1 %tobool3, true, !dbg !18719
  %lnot.ext = zext i1 %lnot to i32, !dbg !18719
  %conv = sext i32 %lnot.ext to i64, !dbg !18719
  %6 = load i64, i64* %n, align 8, !dbg !18720, !tbaa !3308
  %add = add i64 %6, %conv, !dbg !18720
  store i64 %add, i64* %n, align 8, !dbg !18720, !tbaa !3308
  br label %if.end, !dbg !18721

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !18722, !tbaa !3308
  %div4 = udiv i64 9223372036854775807, %7, !dbg !18722
  %8 = load i64, i64* %n, align 8, !dbg !18722, !tbaa !3308
  %cmp = icmp ult i64 %div4, %8, !dbg !18722
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18724

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !18725
  unreachable, !dbg !18725

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !18726

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !18727, !tbaa !3308
  %div8 = udiv i64 6148914691236517204, %9, !dbg !18730
  %10 = load i64, i64* %n, align 8, !dbg !18731, !tbaa !3308
  %cmp9 = icmp ule i64 %div8, %10, !dbg !18732
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !18733

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !18734
  unreachable, !dbg !18734

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !18735, !tbaa !3308
  %div13 = udiv i64 %11, 2, !dbg !18736
  %add14 = add i64 %div13, 1, !dbg !18737
  %12 = load i64, i64* %n, align 8, !dbg !18738, !tbaa !3308
  %add15 = add i64 %12, %add14, !dbg !18738
  store i64 %add15, i64* %n, align 8, !dbg !18738, !tbaa !3308
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !18739, !tbaa !3308
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !18740, !tbaa !2668
  store i64 %13, i64* %14, align 8, !dbg !18741, !tbaa !3308, !ctir !52
  %15 = load i8*, i8** %p.addr, align 8, !dbg !18742, !tbaa !2668
  %16 = load i64, i64* %n, align 8, !dbg !18743, !tbaa !3308
  %17 = load i64, i64* %s.addr, align 8, !dbg !18744, !tbaa !3308
  %mul = mul i64 %16, %17, !dbg !18745
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !18746
  ret i8* %call, !dbg !18747
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !18748 !ctir !2026 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18749, metadata !DIExpression()), !dbg !18750
  %0 = load i64, i64* %n.addr, align 8, !dbg !18751, !tbaa !3308
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18751
  ret i8* %call, !dbg !18752
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !18753 !ctir !2032 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !47
  %pn.addr = alloca i64*, align 8, !ctir !694
  store i8* %p, i8** %p.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18754, metadata !DIExpression()), !dbg !18755
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18756, metadata !DIExpression()), !dbg !18757
  %0 = load i8*, i8** %p.addr, align 8, !dbg !18758, !tbaa !2668
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !18759, !tbaa !2668
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !18760
  ret i8* %call, !dbg !18761
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !18762 !ctir !2028 {
entry:
  %s.addr = alloca i64, align 8, !ctir !52
  store i64 %s, i64* %s.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18763, metadata !DIExpression()), !dbg !18764
  %0 = load i64, i64* %s.addr, align 8, !dbg !18765, !tbaa !3308
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18766
  %1 = load i64, i64* %s.addr, align 8, !dbg !18767, !tbaa !3308
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !18768
  ret i8* %call, !dbg !18769
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !18770 !ctir !2020 {
entry:
  %n.addr = alloca i64, align 8, !ctir !52
  %s.addr = alloca i64, align 8, !ctir !52
  %p = alloca i8*, align 8, !ctir !47
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18771, metadata !DIExpression()), !dbg !18772
  store i64 %s, i64* %s.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18773, metadata !DIExpression()), !dbg !18774
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18775, metadata !DIExpression()), !dbg !18776
  %0 = load i64, i64* %s.addr, align 8, !dbg !18777, !tbaa !3308
  %div = udiv i64 9223372036854775807, %0, !dbg !18777
  %1 = load i64, i64* %n.addr, align 8, !dbg !18777, !tbaa !3308
  %cmp = icmp ult i64 %div, %1, !dbg !18777
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18779

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18780, !tbaa !3308
  %3 = load i64, i64* %s.addr, align 8, !dbg !18781, !tbaa !3308
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #9, !dbg !18782
  store i8* %call, i8** %p, align 8, !dbg !18783, !tbaa !2668
  %tobool = icmp ne i8* %call, null, !dbg !18783
  br i1 %tobool, label %if.end, label %if.then, !dbg !18784

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #15, !dbg !18785
  unreachable, !dbg !18785

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !18786, !tbaa !2668
  ret i8* %4, !dbg !18787
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !18788 !ctir !523 {
entry:
  %p.addr = alloca i8*, align 8, !ctir !525
  %s.addr = alloca i64, align 8, !ctir !52
  store i8* %p, i8** %p.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18789, metadata !DIExpression()), !dbg !18790
  store i64 %s, i64* %s.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18791, metadata !DIExpression()), !dbg !18792
  %0 = load i64, i64* %s.addr, align 8, !dbg !18793, !tbaa !3308
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18794
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18795, !tbaa !2668
  %2 = load i64, i64* %s.addr, align 8, !dbg !18796, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !18797
  ret i8* %call, !dbg !18798
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !18799 !ctir !215 {
entry:
  %string.addr = alloca i8*, align 8, !ctir !177
  store i8* %string, i8** %string.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !18800, metadata !DIExpression()), !dbg !18801
  %0 = load i8*, i8** %string.addr, align 8, !dbg !18802, !tbaa !2668
  %1 = load i8*, i8** %string.addr, align 8, !dbg !18803, !tbaa !2668
  %call = call i64 @strlen(i8* %1) #14, !dbg !18804
  %add = add i64 %call, 1, !dbg !18805
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !18806
  ret i8* %call1, !dbg !18807
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !18808 !ctir !197 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !18810, !tbaa !2655
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.457, i64 0, i64 0)) #9, !dbg !18811
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.458, i64 0, i64 0), i8* %call), !dbg !18812
  call void @abort() #13, !dbg !18813
  unreachable, !dbg !18813
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !18814 !ctir !2049 {
entry:
  %retval = alloca i32, align 4, !ctir !2051
  %s.addr = alloca i8*, align 8, !ctir !177
  %ptr.addr = alloca i8**, align 8, !ctir !181
  %strtol_base.addr = alloca i32, align 4, !ctir !5
  %val.addr = alloca i64*, align 8, !ctir !2052
  %valid_suffixes.addr = alloca i8*, align 8, !ctir !177
  %t_ptr = alloca i8*, align 8, !ctir !7
  %p = alloca i8**, align 8, !ctir !181
  %tmp = alloca i64, align 8, !ctir !54
  %err = alloca i32, align 4, !ctir !2051
  %q = alloca i8*, align 8, !ctir !177
  %ch = alloca i8, align 1, !ctir !565
  %base = alloca i32, align 4, !ctir !5
  %suffixes = alloca i32, align 4, !ctir !5
  %overflow = alloca i32, align 4, !ctir !2051
  store i8* %s, i8** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18816, metadata !DIExpression()), !dbg !18817
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !18818, metadata !DIExpression()), !dbg !18819
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !18820, metadata !DIExpression()), !dbg !18821
  store i64* %val, i64** %val.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !18822, metadata !DIExpression()), !dbg !18823
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !18824, metadata !DIExpression()), !dbg !18825
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !18826, metadata !DIExpression()), !dbg !18827
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !18828, metadata !DIExpression()), !dbg !18829
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !18830, metadata !DIExpression()), !dbg !18831
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18832, metadata !DIExpression()), !dbg !18833
  store i32 0, i32* %err, align 4, !dbg !18833, !tbaa !3315
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !18834, !tbaa !2655
  %cmp = icmp sle i32 0, %0, !dbg !18834
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !18834

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !18834, !tbaa !2655
  %cmp1 = icmp sle i32 %1, 36, !dbg !18834
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !18834

cond.true:                                        ; preds = %land.lhs.true
  br label %cond.end, !dbg !18834

cond.false:                                       ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.461, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.462, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #13, !dbg !18834
  unreachable, !dbg !18834

2:                                                ; No predecessors!
  br label %cond.end, !dbg !18834

cond.end:                                         ; preds = %2, %cond.true
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !18835, !tbaa !2668
  %tobool = icmp ne i8** %3, null, !dbg !18835
  br i1 %tobool, label %cond.true2, label %cond.false3, !dbg !18835

cond.true2:                                       ; preds = %cond.end
  %4 = load i8**, i8*** %ptr.addr, align 8, !dbg !18836, !tbaa !2668
  br label %cond.end4, !dbg !18835

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !18835

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond = phi i8** [ %4, %cond.true2 ], [ %t_ptr, %cond.false3 ], !dbg !18835
  store i8** %cond, i8*** %p, align 8, !dbg !18837, !tbaa !2668
  %call = call i32* @__errno_location() #16, !dbg !18838
  store i32 0, i32* %call, align 4, !dbg !18839, !tbaa !2655, !ctir !5
  call void @llvm.dbg.declare(metadata i8** %q, metadata !18840, metadata !DIExpression()), !dbg !18843
  %5 = load i8*, i8** %s.addr, align 8, !dbg !18844, !tbaa !2668
  store i8* %5, i8** %q, align 8, !dbg !18843, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !18845, metadata !DIExpression()), !dbg !18846
  %6 = load i8*, i8** %q, align 8, !dbg !18847, !tbaa !2668
  %7 = load i8, i8* %6, align 1, !dbg !18848, !tbaa !3315, !ctir !178
  store i8 %7, i8* %ch, align 1, !dbg !18846, !tbaa !3315
  br label %while.cond, !dbg !18849

while.cond:                                       ; preds = %while.body, %cond.end4
  %call5 = call i16** @__ctype_b_loc() #16, !dbg !18850
  %8 = load i16*, i16** %call5, align 8, !dbg !18850, !tbaa !2668, !ctir !1108
  %9 = load i8, i8* %ch, align 1, !dbg !18850, !tbaa !3315
  %conv = zext i8 %9 to i32, !dbg !18850
  %idxprom = sext i32 %conv to i64, !dbg !18850
  %arrayidx = getelementptr inbounds i16, i16* %8, i64 %idxprom, !dbg !18850, !ctir !1108
  %10 = load i16, i16* %arrayidx, align 2, !dbg !18850, !tbaa !14584
  %conv6 = zext i16 %10 to i32, !dbg !18850
  %and = and i32 %conv6, 8192, !dbg !18850
  %tobool7 = icmp ne i32 %and, 0, !dbg !18849
  br i1 %tobool7, label %while.body, label %while.end, !dbg !18849

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %q, align 8, !dbg !18851, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !18851
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !18851, !tbaa !2668
  %12 = load i8, i8* %incdec.ptr, align 1, !dbg !18852, !tbaa !3315, !ctir !178
  store i8 %12, i8* %ch, align 1, !dbg !18853, !tbaa !3315
  br label %while.cond, !dbg !18849, !llvm.loop !18854

while.end:                                        ; preds = %while.cond
  %13 = load i8, i8* %ch, align 1, !dbg !18856, !tbaa !3315
  %conv8 = zext i8 %13 to i32, !dbg !18856
  %cmp9 = icmp eq i32 %conv8, 45, !dbg !18858
  br i1 %cmp9, label %if.then, label %if.end, !dbg !18859

if.then:                                          ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !18860
  br label %return, !dbg !18860

if.end:                                           ; preds = %while.end
  %14 = load i8*, i8** %s.addr, align 8, !dbg !18861, !tbaa !2668
  %15 = load i8**, i8*** %p, align 8, !dbg !18862, !tbaa !2668
  %16 = load i32, i32* %strtol_base.addr, align 4, !dbg !18863, !tbaa !2655
  %call11 = call i64 @strtoul(i8* %14, i8** %15, i32 %16) #9, !dbg !18864
  store i64 %call11, i64* %tmp, align 8, !dbg !18865, !tbaa !3308
  %17 = load i8**, i8*** %p, align 8, !dbg !18866, !tbaa !2668
  %18 = load i8*, i8** %17, align 8, !dbg !18868, !tbaa !2668, !ctir !7
  %19 = load i8*, i8** %s.addr, align 8, !dbg !18869, !tbaa !2668
  %cmp12 = icmp eq i8* %18, %19, !dbg !18870
  br i1 %cmp12, label %if.then14, label %if.else25, !dbg !18871

if.then14:                                        ; preds = %if.end
  %20 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18872, !tbaa !2668
  %tobool15 = icmp ne i8* %20, null, !dbg !18872
  br i1 %tobool15, label %land.lhs.true16, label %if.else, !dbg !18875

land.lhs.true16:                                  ; preds = %if.then14
  %21 = load i8**, i8*** %p, align 8, !dbg !18876, !tbaa !2668
  %22 = load i8*, i8** %21, align 8, !dbg !18877, !tbaa !2668, !ctir !7
  %23 = load i8, i8* %22, align 1, !dbg !18878, !tbaa !3315, !ctir !8
  %conv17 = sext i8 %23 to i32, !dbg !18878
  %tobool18 = icmp ne i32 %conv17, 0, !dbg !18878
  br i1 %tobool18, label %land.lhs.true19, label %if.else, !dbg !18879

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %24 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18880, !tbaa !2668
  %25 = load i8**, i8*** %p, align 8, !dbg !18881, !tbaa !2668
  %26 = load i8*, i8** %25, align 8, !dbg !18882, !tbaa !2668, !ctir !7
  %27 = load i8, i8* %26, align 1, !dbg !18883, !tbaa !3315, !ctir !8
  %conv20 = sext i8 %27 to i32, !dbg !18883
  %call21 = call i8* @strchr(i8* %24, i32 %conv20) #14, !dbg !18884
  %tobool22 = icmp ne i8* %call21, null, !dbg !18884
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !18885

if.then23:                                        ; preds = %land.lhs.true19
  store i64 1, i64* %tmp, align 8, !dbg !18886, !tbaa !3308
  br label %if.end24, !dbg !18887

if.else:                                          ; preds = %land.lhs.true19, %land.lhs.true16, %if.then14
  store i32 4, i32* %retval, align 4, !dbg !18888
  br label %return, !dbg !18888

if.end24:                                         ; preds = %if.then23
  br label %if.end36, !dbg !18889

if.else25:                                        ; preds = %if.end
  %call26 = call i32* @__errno_location() #16, !dbg !18890
  %28 = load i32, i32* %call26, align 4, !dbg !18890, !tbaa !2655, !ctir !5
  %cmp27 = icmp ne i32 %28, 0, !dbg !18892
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !18893

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !18894
  %29 = load i32, i32* %call30, align 4, !dbg !18894, !tbaa !2655, !ctir !5
  %cmp31 = icmp ne i32 %29, 34, !dbg !18897
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !18898

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !18899
  br label %return, !dbg !18899

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !18900, !tbaa !3315
  br label %if.end35, !dbg !18901

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %30 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18902, !tbaa !2668
  %tobool37 = icmp ne i8* %30, null, !dbg !18902
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !18904

if.then38:                                        ; preds = %if.end36
  %31 = load i64, i64* %tmp, align 8, !dbg !18905, !tbaa !3308
  %32 = load i64*, i64** %val.addr, align 8, !dbg !18907, !tbaa !2668
  store i64 %31, i64* %32, align 8, !dbg !18908, !tbaa !3308, !ctir !54
  %33 = load i32, i32* %err, align 4, !dbg !18909, !tbaa !3315
  store i32 %33, i32* %retval, align 4, !dbg !18910
  br label %return, !dbg !18910

if.end39:                                         ; preds = %if.end36
  %34 = load i8**, i8*** %p, align 8, !dbg !18911, !tbaa !2668
  %35 = load i8*, i8** %34, align 8, !dbg !18913, !tbaa !2668, !ctir !7
  %36 = load i8, i8* %35, align 1, !dbg !18914, !tbaa !3315, !ctir !8
  %conv40 = sext i8 %36 to i32, !dbg !18914
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !18915
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !18916

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !18917, metadata !DIExpression()), !dbg !18919
  store i32 1024, i32* %base, align 4, !dbg !18919, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !18920, metadata !DIExpression()), !dbg !18921
  store i32 1, i32* %suffixes, align 4, !dbg !18921, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !18922, metadata !DIExpression()), !dbg !18923
  %37 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18924, !tbaa !2668
  %38 = load i8**, i8*** %p, align 8, !dbg !18926, !tbaa !2668
  %39 = load i8*, i8** %38, align 8, !dbg !18927, !tbaa !2668, !ctir !7
  %40 = load i8, i8* %39, align 1, !dbg !18928, !tbaa !3315, !ctir !8
  %conv44 = sext i8 %40 to i32, !dbg !18928
  %call45 = call i8* @strchr(i8* %37, i32 %conv44) #14, !dbg !18929
  %tobool46 = icmp ne i8* %call45, null, !dbg !18929
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !18930

if.then47:                                        ; preds = %if.then43
  %41 = load i64, i64* %tmp, align 8, !dbg !18931, !tbaa !3308
  %42 = load i64*, i64** %val.addr, align 8, !dbg !18933, !tbaa !2668
  store i64 %41, i64* %42, align 8, !dbg !18934, !tbaa !3308, !ctir !54
  %43 = load i32, i32* %err, align 4, !dbg !18935, !tbaa !3315
  %or = or i32 %43, 2, !dbg !18936
  store i32 %or, i32* %retval, align 4, !dbg !18937
  br label %return, !dbg !18937

if.end48:                                         ; preds = %if.then43
  %44 = load i8**, i8*** %p, align 8, !dbg !18938, !tbaa !2668
  %45 = load i8*, i8** %44, align 8, !dbg !18939, !tbaa !2668, !ctir !7
  %46 = load i8, i8* %45, align 1, !dbg !18940, !tbaa !3315, !ctir !8
  %conv49 = sext i8 %46 to i32, !dbg !18940
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !18941

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %47 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !18942, !tbaa !2668
  %call50 = call i8* @strchr(i8* %47, i32 48) #14, !dbg !18945
  %tobool51 = icmp ne i8* %call50, null, !dbg !18945
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !18946

if.then52:                                        ; preds = %sw.bb
  %48 = load i8**, i8*** %p, align 8, !dbg !18947, !tbaa !2668
  %arrayidx53 = getelementptr inbounds i8*, i8** %48, i64 0, !dbg !18947, !ctir !181
  %49 = load i8*, i8** %arrayidx53, align 8, !dbg !18947, !tbaa !2668
  %arrayidx54 = getelementptr inbounds i8, i8* %49, i64 1, !dbg !18947, !ctir !7
  %50 = load i8, i8* %arrayidx54, align 1, !dbg !18947, !tbaa !3315
  %conv55 = sext i8 %50 to i32, !dbg !18947
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !18948

sw.bb56:                                          ; preds = %if.then52
  %51 = load i8**, i8*** %p, align 8, !dbg !18949, !tbaa !2668
  %arrayidx57 = getelementptr inbounds i8*, i8** %51, i64 0, !dbg !18949, !ctir !181
  %52 = load i8*, i8** %arrayidx57, align 8, !dbg !18949, !tbaa !2668
  %arrayidx58 = getelementptr inbounds i8, i8* %52, i64 2, !dbg !18949, !ctir !7
  %53 = load i8, i8* %arrayidx58, align 1, !dbg !18949, !tbaa !3315
  %conv59 = sext i8 %53 to i32, !dbg !18949
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !18952
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !18953

if.then62:                                        ; preds = %sw.bb56
  %54 = load i32, i32* %suffixes, align 4, !dbg !18954, !tbaa !2655
  %add = add nsw i32 %54, 2, !dbg !18954
  store i32 %add, i32* %suffixes, align 4, !dbg !18954, !tbaa !2655
  br label %if.end63, !dbg !18955

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !18956

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !18957, !tbaa !2655
  %55 = load i32, i32* %suffixes, align 4, !dbg !18958, !tbaa !2655
  %inc = add nsw i32 %55, 1, !dbg !18958
  store i32 %inc, i32* %suffixes, align 4, !dbg !18958, !tbaa !2655
  br label %sw.epilog, !dbg !18959

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !18960

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !18961

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %56 = load i8**, i8*** %p, align 8, !dbg !18962, !tbaa !2668
  %57 = load i8*, i8** %56, align 8, !dbg !18963, !tbaa !2668, !ctir !7
  %58 = load i8, i8* %57, align 1, !dbg !18964, !tbaa !3315, !ctir !8
  %conv67 = sext i8 %58 to i32, !dbg !18964
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !18965

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !18966
  store i32 %call69, i32* %overflow, align 4, !dbg !18968, !tbaa !3315
  br label %sw.epilog92, !dbg !18969

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !18970
  store i32 %call71, i32* %overflow, align 4, !dbg !18971, !tbaa !3315
  br label %sw.epilog92, !dbg !18972

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !18973, !tbaa !3315
  br label %sw.epilog92, !dbg !18974

sw.bb73:                                          ; preds = %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !18975, !tbaa !2655
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 6), !dbg !18976
  store i32 %call74, i32* %overflow, align 4, !dbg !18977, !tbaa !3315
  br label %sw.epilog92, !dbg !18978

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !18979, !tbaa !2655
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 3), !dbg !18980
  store i32 %call76, i32* %overflow, align 4, !dbg !18981, !tbaa !3315
  br label %sw.epilog92, !dbg !18982

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !18983, !tbaa !2655
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 1), !dbg !18984
  store i32 %call78, i32* %overflow, align 4, !dbg !18985, !tbaa !3315
  br label %sw.epilog92, !dbg !18986

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !18987, !tbaa !2655
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 2), !dbg !18988
  store i32 %call80, i32* %overflow, align 4, !dbg !18989, !tbaa !3315
  br label %sw.epilog92, !dbg !18990

sw.bb81:                                          ; preds = %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !18991, !tbaa !2655
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 5), !dbg !18992
  store i32 %call82, i32* %overflow, align 4, !dbg !18993, !tbaa !3315
  br label %sw.epilog92, !dbg !18994

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !18995, !tbaa !2655
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 4), !dbg !18996
  store i32 %call84, i32* %overflow, align 4, !dbg !18997, !tbaa !3315
  br label %sw.epilog92, !dbg !18998

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !18999
  store i32 %call86, i32* %overflow, align 4, !dbg !19000, !tbaa !3315
  br label %sw.epilog92, !dbg !19001

sw.bb87:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19002, !tbaa !2655
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 8), !dbg !19003
  store i32 %call88, i32* %overflow, align 4, !dbg !19004, !tbaa !3315
  br label %sw.epilog92, !dbg !19005

sw.bb89:                                          ; preds = %sw.epilog66
  %66 = load i32, i32* %base, align 4, !dbg !19006, !tbaa !2655
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %66, i32 7), !dbg !19007
  store i32 %call90, i32* %overflow, align 4, !dbg !19008, !tbaa !3315
  br label %sw.epilog92, !dbg !19009

sw.default:                                       ; preds = %sw.epilog66
  %67 = load i64, i64* %tmp, align 8, !dbg !19010, !tbaa !3308
  %68 = load i64*, i64** %val.addr, align 8, !dbg !19011, !tbaa !2668
  store i64 %67, i64* %68, align 8, !dbg !19012, !tbaa !3308, !ctir !54
  %69 = load i32, i32* %err, align 4, !dbg !19013, !tbaa !3315
  %or91 = or i32 %69, 2, !dbg !19014
  store i32 %or91, i32* %retval, align 4, !dbg !19015
  br label %return, !dbg !19015

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %70 = load i32, i32* %overflow, align 4, !dbg !19016, !tbaa !3315
  %71 = load i32, i32* %err, align 4, !dbg !19017, !tbaa !3315
  %or93 = or i32 %71, %70, !dbg !19017
  store i32 %or93, i32* %err, align 4, !dbg !19017, !tbaa !3315
  %72 = load i32, i32* %suffixes, align 4, !dbg !19018, !tbaa !2655
  %73 = load i8**, i8*** %p, align 8, !dbg !19019, !tbaa !2668
  %74 = load i8*, i8** %73, align 8, !dbg !19020, !tbaa !2668, !ctir !7
  %idx.ext = sext i32 %72 to i64, !dbg !19020
  %add.ptr = getelementptr inbounds i8, i8* %74, i64 %idx.ext, !dbg !19020
  store i8* %add.ptr, i8** %73, align 8, !dbg !19020, !tbaa !2668, !ctir !7
  %75 = load i8**, i8*** %p, align 8, !dbg !19021, !tbaa !2668
  %76 = load i8*, i8** %75, align 8, !dbg !19023, !tbaa !2668, !ctir !7
  %77 = load i8, i8* %76, align 1, !dbg !19024, !tbaa !3315, !ctir !8
  %tobool94 = icmp ne i8 %77, 0, !dbg !19024
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19025

if.then95:                                        ; preds = %sw.epilog92
  %78 = load i32, i32* %err, align 4, !dbg !19026, !tbaa !3315
  %or96 = or i32 %78, 2, !dbg !19026
  store i32 %or96, i32* %err, align 4, !dbg !19026, !tbaa !3315
  br label %if.end97, !dbg !19027

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !19028

if.end98:                                         ; preds = %if.end97, %if.end39
  %79 = load i64, i64* %tmp, align 8, !dbg !19029, !tbaa !3308
  %80 = load i64*, i64** %val.addr, align 8, !dbg !19030, !tbaa !2668
  store i64 %79, i64* %80, align 8, !dbg !19031, !tbaa !3308, !ctir !54
  %81 = load i32, i32* %err, align 4, !dbg !19032, !tbaa !3315
  store i32 %81, i32* %retval, align 4, !dbg !19033
  br label %return, !dbg !19033

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !19034
  ret i32 %82, !dbg !19034
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #4 !dbg !19035 !ctir !2053 {
entry:
  %retval = alloca i32, align 4, !ctir !2051
  %x.addr = alloca i64*, align 8, !ctir !2052
  %scale_factor.addr = alloca i32, align 4, !ctir !5
  store i64* %x, i64** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19036, metadata !DIExpression()), !dbg !19037
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !19038, metadata !DIExpression()), !dbg !19039
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !19040, !tbaa !2655
  %conv = sext i32 %0 to i64, !dbg !19040
  %div = udiv i64 -1, %conv, !dbg !19042
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19043, !tbaa !2668
  %2 = load i64, i64* %1, align 8, !dbg !19044, !tbaa !3308, !ctir !54
  %cmp = icmp ult i64 %div, %2, !dbg !19045
  br i1 %cmp, label %if.then, label %if.end, !dbg !19046

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !19047, !tbaa !2668
  store i64 -1, i64* %3, align 8, !dbg !19049, !tbaa !3308, !ctir !54
  store i32 1, i32* %retval, align 4, !dbg !19050
  br label %return, !dbg !19050

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !19051, !tbaa !2655
  %conv2 = sext i32 %4 to i64, !dbg !19051
  %5 = load i64*, i64** %x.addr, align 8, !dbg !19052, !tbaa !2668
  %6 = load i64, i64* %5, align 8, !dbg !19053, !tbaa !3308, !ctir !54
  %mul = mul i64 %6, %conv2, !dbg !19053
  store i64 %mul, i64* %5, align 8, !dbg !19053, !tbaa !3308, !ctir !54
  store i32 0, i32* %retval, align 4, !dbg !19054
  br label %return, !dbg !19054

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !19055
  ret i32 %7, !dbg !19055
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #4 !dbg !19056 !ctir !2055 {
entry:
  %x.addr = alloca i64*, align 8, !ctir !2052
  %base.addr = alloca i32, align 4, !ctir !5
  %power.addr = alloca i32, align 4, !ctir !5
  %err = alloca i32, align 4, !ctir !2051
  store i64* %x, i64** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19057, metadata !DIExpression()), !dbg !19058
  store i32 %base, i32* %base.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19059, metadata !DIExpression()), !dbg !19060
  store i32 %power, i32* %power.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !19061, metadata !DIExpression()), !dbg !19062
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19063, metadata !DIExpression()), !dbg !19064
  store i32 0, i32* %err, align 4, !dbg !19064, !tbaa !3315
  br label %while.cond, !dbg !19065

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !19066, !tbaa !2655
  %dec = add nsw i32 %0, -1, !dbg !19066
  store i32 %dec, i32* %power.addr, align 4, !dbg !19066, !tbaa !2655
  %tobool = icmp ne i32 %0, 0, !dbg !19065
  br i1 %tobool, label %while.body, label %while.end, !dbg !19065

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19067, !tbaa !2668
  %2 = load i32, i32* %base.addr, align 4, !dbg !19068, !tbaa !2655
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !19069
  %3 = load i32, i32* %err, align 4, !dbg !19070, !tbaa !3315
  %or = or i32 %3, %call, !dbg !19070
  store i32 %or, i32* %err, align 4, !dbg !19070, !tbaa !3315
  br label %while.cond, !dbg !19065, !llvm.loop !19071

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !19073, !tbaa !3315
  ret i32 %4, !dbg !19074
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !19075 !ctir !1327 {
entry:
  %yes = alloca i8, align 1, !ctir !139
  %response = alloca i8*, align 8, !ctir !7
  %response_size = alloca i64, align 8, !ctir !52
  %response_len = alloca i64, align 8, !ctir !674
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !19077, metadata !DIExpression()), !dbg !19078
  call void @llvm.dbg.declare(metadata i8** %response, metadata !19079, metadata !DIExpression()), !dbg !19080
  store i8* null, i8** %response, align 8, !dbg !19080, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !19081, metadata !DIExpression()), !dbg !19082
  store i64 0, i64* %response_size, align 8, !dbg !19082, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !19083, metadata !DIExpression()), !dbg !19084
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !19085, !tbaa !2668
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !19086
  store i64 %call, i64* %response_len, align 8, !dbg !19084, !tbaa !3308
  %1 = load i64, i64* %response_len, align 8, !dbg !19087, !tbaa !3308
  %cmp = icmp sle i64 %1, 0, !dbg !19089
  br i1 %cmp, label %if.then, label %if.else, !dbg !19090

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !19091, !tbaa !2762
  br label %if.end9, !dbg !19092

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !19093, !tbaa !2668
  %3 = load i64, i64* %response_len, align 8, !dbg !19096, !tbaa !3308
  %sub = sub nsw i64 %3, 1, !dbg !19097
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !19093, !ctir !7
  %4 = load i8, i8* %arrayidx, align 1, !dbg !19093, !tbaa !3315
  %conv = sext i8 %4 to i32, !dbg !19093
  %cmp1 = icmp eq i32 %conv, 10, !dbg !19098
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !19099

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !19100, !tbaa !2668
  %6 = load i64, i64* %response_len, align 8, !dbg !19101, !tbaa !3308
  %sub4 = sub nsw i64 %6, 1, !dbg !19102
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !19100, !ctir !7
  store i8 0, i8* %arrayidx5, align 1, !dbg !19103, !tbaa !3315
  br label %if.end, !dbg !19100

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !19104, !tbaa !2668
  %call6 = call i32 @rpmatch(i8* %7) #9, !dbg !19105
  %cmp7 = icmp slt i32 0, %call6, !dbg !19106
  %frombool = zext i1 %cmp7 to i8, !dbg !19107
  store i8 %frombool, i8* %yes, align 1, !dbg !19107, !tbaa !2762
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !19108, !tbaa !2668
  call void @free(i8* %8) #9, !dbg !19109
  %9 = load i8, i8* %yes, align 1, !dbg !19110, !tbaa !2762
  %tobool = trunc i8 %9 to i1, !dbg !19110
  ret i1 %tobool, !dbg !19111
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !19112 !ctir !2101 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2103
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19114, metadata !DIExpression()), !dbg !19115
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19116, !tbaa !2668
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !19118
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19119

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19120, !tbaa !2668
  %call = call i32 @__freading(%struct._IO_FILE* %1) #9, !dbg !19120
  %cmp1 = icmp ne i32 %call, 0, !dbg !19120
  br i1 %cmp1, label %if.end, label %if.then, !dbg !19121

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19122, !tbaa !2668
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !19123
  store i32 %call2, i32* %retval, align 4, !dbg !19124
  br label %return, !dbg !19124

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19125, !tbaa !2668
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !19126
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19127, !tbaa !2668
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !19128
  store i32 %call3, i32* %retval, align 4, !dbg !19129
  br label %return, !dbg !19129

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19130
  ret i32 %5, !dbg !19130
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !19131 !ctir !2143 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2103
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19132, metadata !DIExpression()), !dbg !19133
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19134, !tbaa !2668
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !19136, !ctir !2104
  %1 = load i32, i32* %_flags, align 8, !dbg !19136, !tbaa !19137, !ctir !5
  %and = and i32 %1, 256, !dbg !19139
  %tobool = icmp ne i32 %and, 0, !dbg !19139
  br i1 %tobool, label %if.then, label %if.end, !dbg !19140

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19141, !tbaa !2668
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !19142
  br label %if.end, !dbg !19142

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19143
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #10 !dbg !19144 !ctir !2148 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2150
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19146, metadata !DIExpression()), !dbg !19147
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19148, !tbaa !2668
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !19150, !ctir !2151
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19150, !tbaa !19151, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19152, !tbaa !2668
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !19153, !ctir !2151
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !19153, !tbaa !19154, !ctir !7
  %cmp = icmp ugt i8* %1, %3, !dbg !19155
  br i1 %cmp, label %if.then, label %if.end, !dbg !19156

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !19157
  br label %return, !dbg !19157

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19158, !tbaa !2668
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !19159, !ctir !2151
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !19159, !tbaa !19160, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19161, !tbaa !2668
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !19162, !ctir !2151
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19162, !tbaa !19163, !ctir !7
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !19164
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !19164
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19164
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19165, !tbaa !2668
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !19166, !ctir !2151
  %9 = load i32, i32* %_flags, align 8, !dbg !19166, !tbaa !19137, !ctir !5
  %and = and i32 %9, 256, !dbg !19167
  %tobool = icmp ne i32 %and, 0, !dbg !19167
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19165

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19168, !tbaa !2668
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !19169, !ctir !2151
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !19169, !tbaa !19170, !ctir !7
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19171, !tbaa !2668
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !19172, !ctir !2151
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !19172, !tbaa !19173, !ctir !7
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !19174
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !19174
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !19174
  br label %cond.end, !dbg !19165

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19165

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !19165
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !19175
  store i64 %add, i64* %retval, align 8, !dbg !19176
  br label %return, !dbg !19176

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !19177
  ret i64 %14, !dbg !19177
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !19178 !ctir !2193 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2195
  %offset.addr = alloca i64, align 8, !ctir !358
  %whence.addr = alloca i32, align 4, !ctir !5
  %pos = alloca i64, align 8, !ctir !358
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19180, metadata !DIExpression()), !dbg !19181
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !19182, metadata !DIExpression()), !dbg !19183
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !19184, metadata !DIExpression()), !dbg !19185
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19186, !tbaa !2668
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !19188, !ctir !2196
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !19188, !tbaa !19160, !ctir !7
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19189, !tbaa !2668
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !19190, !ctir !2196
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19190, !tbaa !19163, !ctir !7
  %cmp = icmp eq i8* %1, %3, !dbg !19191
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !19192

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19193, !tbaa !2668
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !19194, !ctir !2196
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19194, !tbaa !19151, !ctir !7
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19195, !tbaa !2668
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !19196, !ctir !2196
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !19196, !tbaa !19154, !ctir !7
  %cmp1 = icmp eq i8* %5, %7, !dbg !19197
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !19198

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19199, !tbaa !2668
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !19200, !ctir !2196
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !19200, !tbaa !19173, !ctir !7
  %cmp3 = icmp eq i8* %9, null, !dbg !19201
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !19202

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !19203, metadata !DIExpression()), !dbg !19205
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19206, !tbaa !2668
  %call = call i32 @fileno(%struct._IO_FILE* %10) #9, !dbg !19207
  %11 = load i64, i64* %offset.addr, align 8, !dbg !19208, !tbaa !3308
  %12 = load i32, i32* %whence.addr, align 4, !dbg !19209, !tbaa !2655
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #9, !dbg !19210
  store i64 %call4, i64* %pos, align 8, !dbg !19205, !tbaa !3308
  %13 = load i64, i64* %pos, align 8, !dbg !19211, !tbaa !3308
  %cmp5 = icmp eq i64 %13, -1, !dbg !19213
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19214

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19215
  br label %return, !dbg !19215

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19217, !tbaa !2668
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !19218, !ctir !2196
  %15 = load i32, i32* %_flags, align 8, !dbg !19219, !tbaa !19137, !ctir !5
  %and = and i32 %15, -17, !dbg !19219
  store i32 %and, i32* %_flags, align 8, !dbg !19219, !tbaa !19137, !ctir !5
  %16 = load i64, i64* %pos, align 8, !dbg !19220, !tbaa !3308
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19221, !tbaa !2668
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !19222, !ctir !2196
  store i64 %16, i64* %_offset, align 8, !dbg !19223, !tbaa !19224, !ctir !45
  store i32 0, i32* %retval, align 4, !dbg !19225
  br label %return, !dbg !19225

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19226, !tbaa !2668
  %19 = load i64, i64* %offset.addr, align 8, !dbg !19227, !tbaa !3308
  %20 = load i32, i32* %whence.addr, align 4, !dbg !19228, !tbaa !2655
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !19229
  store i32 %call8, i32* %retval, align 4, !dbg !19230
  br label %return, !dbg !19230

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !19231
  ret i32 %21, !dbg !19231
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.savewd* %ps) #4 !dbg !19232 !ctir !2238 {
entry:
  %retval = alloca i64, align 8, !ctir !52
  %pwc.addr = alloca i32*, align 8, !ctir !2240
  %s.addr = alloca i8*, align 8, !ctir !177
  %n.addr = alloca i64, align 8, !ctir !52
  %ps.addr = alloca %struct.savewd*, align 8, !ctir !2241
  %ret = alloca i64, align 8, !ctir !52
  %wc = alloca i32, align 4, !ctir !1124
  %uc = alloca i8, align 1, !ctir !565
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !19234, metadata !DIExpression()), !dbg !19235
  store i8* %s, i8** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19236, metadata !DIExpression()), !dbg !19237
  store i64 %n, i64* %n.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19238, metadata !DIExpression()), !dbg !19239
  store %struct.savewd* %ps, %struct.savewd** %ps.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.savewd** %ps.addr, metadata !19240, metadata !DIExpression()), !dbg !19241
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !19242, metadata !DIExpression()), !dbg !19243
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !19244, metadata !DIExpression()), !dbg !19245
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !19246, !tbaa !2668
  %tobool = icmp ne i32* %0, null, !dbg !19246
  br i1 %tobool, label %if.end, label %if.then, !dbg !19248

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !19249, !tbaa !2668
  br label %if.end, !dbg !19250

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !19251, !tbaa !2668
  %2 = load i8*, i8** %s.addr, align 8, !dbg !19252, !tbaa !2668
  %3 = load i64, i64* %n.addr, align 8, !dbg !19253, !tbaa !3308
  %4 = load %struct.savewd*, %struct.savewd** %ps.addr, align 8, !dbg !19254, !tbaa !2668
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.savewd* %4) #9, !dbg !19255
  store i64 %call, i64* %ret, align 8, !dbg !19256, !tbaa !3308
  %5 = load i64, i64* %ret, align 8, !dbg !19257, !tbaa !3308
  %cmp = icmp ule i64 -2, %5, !dbg !19259
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !19260

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19261, !tbaa !3308
  %cmp1 = icmp ne i64 %6, 0, !dbg !19262
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !19263

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !19264
  br i1 %call3, label %if.end5, label %if.then4, !dbg !19265

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !19266, metadata !DIExpression()), !dbg !19268
  %7 = load i8*, i8** %s.addr, align 8, !dbg !19269, !tbaa !2668
  %8 = load i8, i8* %7, align 1, !dbg !19270, !tbaa !3315, !ctir !178
  store i8 %8, i8* %uc, align 1, !dbg !19268, !tbaa !3315
  %9 = load i8, i8* %uc, align 1, !dbg !19271, !tbaa !3315
  %conv = zext i8 %9 to i32, !dbg !19271
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !19272, !tbaa !2668
  store i32 %conv, i32* %10, align 4, !dbg !19273, !tbaa !2655, !ctir !1124
  store i64 1, i64* %retval, align 8, !dbg !19274
  br label %return, !dbg !19274

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !19275, !tbaa !3308
  store i64 %11, i64* %retval, align 8, !dbg !19276
  br label %return, !dbg !19276

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !19277
  ret i64 %12, !dbg !19277
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.savewd*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%union.anon* %ctx) #4 !dbg !19278 !ctir !2255 {
entry:
  %ctx.addr = alloca %union.anon*, align 8, !ctir !2257
  store %union.anon* %ctx, %union.anon** %ctx.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %union.anon** %ctx.addr, metadata !19280, metadata !DIExpression()), !dbg !19281
  ret void, !dbg !19282
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %union.anon* %ctx) #4 !dbg !19283 !ctir !2265 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !136
  %ctx.addr = alloca %union.anon*, align 8, !ctir !2267
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19285, metadata !DIExpression()), !dbg !19286
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19287, metadata !DIExpression()), !dbg !19288
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19289, metadata !DIExpression()), !dbg !19290
  store %union.anon* %ctx, %union.anon** %ctx.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %union.anon** %ctx.addr, metadata !19291, metadata !DIExpression()), !dbg !19292
  %0 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19293, !tbaa !2668
  %1 = bitcast %union.anon* %0 to i8*, !dbg !19294
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 4, i1 false), !dbg !19294
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19295, !tbaa !2655
  %3 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19296, !tbaa !2668
  %mode1 = getelementptr inbounds %union.anon, %union.anon* %3, i32 0, i32 0, !dbg !19297, !ctir !2268
  store i32 %2, i32* %mode1, align 4, !dbg !19298, !tbaa !13941, !ctir !136
  ret i32 0, !dbg !19299
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !19300 !ctir !1525 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %name.addr = alloca i8*, align 8, !ctir !177
  %desc.addr = alloca i32, align 4, !ctir !5
  %mode.addr = alloca i32, align 4, !ctir !136
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19302, metadata !DIExpression()), !dbg !19303
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19304, metadata !DIExpression()), !dbg !19305
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19306, metadata !DIExpression()), !dbg !19307
  %0 = load i32, i32* %desc.addr, align 4, !dbg !19308, !tbaa !2655
  %cmp = icmp ne i32 %0, -1, !dbg !19310
  br i1 %cmp, label %if.then, label %if.else, !dbg !19311

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !19312, !tbaa !2655
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19313, !tbaa !2655
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !19314
  store i32 %call, i32* %retval, align 4, !dbg !19315
  br label %return, !dbg !19315

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19316, !tbaa !2668
  %4 = load i32, i32* %mode.addr, align 4, !dbg !19317, !tbaa !2655
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !19318
  store i32 %call1, i32* %retval, align 4, !dbg !19319
  br label %return, !dbg !19319

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19320
  ret i32 %5, !dbg !19320
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%union.anon* %ctx, i8* %name, i32 %desc) #4 !dbg !19321 !ctir !2274 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %ctx.addr = alloca %union.anon*, align 8, !ctir !2276
  %name.addr = alloca i8*, align 8, !ctir !177
  %desc.addr = alloca i32, align 4, !ctir !5
  %acls_set = alloca i8, align 1, !ctir !139
  %early_chmod = alloca i8, align 1, !ctir !139
  %must_chmod = alloca i8, align 1, !ctir !139
  %ret = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store %union.anon* %ctx, %union.anon** %ctx.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %union.anon** %ctx.addr, metadata !19322, metadata !DIExpression()), !dbg !19323
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19324, metadata !DIExpression()), !dbg !19325
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19326, metadata !DIExpression()), !dbg !19327
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !19328, metadata !DIExpression()), !dbg !19329
  store i8 0, i8* %acls_set, align 1, !dbg !19329, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !19330, metadata !DIExpression()), !dbg !19331
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !19332, metadata !DIExpression()), !dbg !19333
  store i8 0, i8* %must_chmod, align 1, !dbg !19333, !tbaa !2762
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19334, metadata !DIExpression()), !dbg !19335
  store i32 0, i32* %ret, align 4, !dbg !19335, !tbaa !2655
  store i8 1, i8* %early_chmod, align 1, !dbg !19336, !tbaa !2762
  %0 = load i8, i8* %early_chmod, align 1, !dbg !19337, !tbaa !2762
  %tobool = trunc i8 %0 to i1, !dbg !19337
  br i1 %tobool, label %if.then, label %if.end2, !dbg !19339

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !19340, !tbaa !2668
  %2 = load i32, i32* %desc.addr, align 4, !dbg !19342, !tbaa !2655
  %3 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19343, !tbaa !2668
  %mode = getelementptr inbounds %union.anon, %union.anon* %3, i32 0, i32 0, !dbg !19344, !ctir !2277
  %4 = load i32, i32* %mode, align 4, !dbg !19344, !tbaa !13941, !ctir !136
  %call = call i32 @chmod_or_fchmod(i8* %1, i32 %2, i32 %4), !dbg !19345
  store i32 %call, i32* %ret, align 4, !dbg !19346, !tbaa !2655
  %5 = load i32, i32* %ret, align 4, !dbg !19347, !tbaa !2655
  %cmp = icmp ne i32 %5, 0, !dbg !19349
  br i1 %cmp, label %if.then1, label %if.end, !dbg !19350

if.then1:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19351
  br label %return, !dbg !19351

if.end:                                           ; preds = %if.then
  br label %if.end2, !dbg !19352

if.end2:                                          ; preds = %if.end, %entry
  %6 = load i8, i8* %must_chmod, align 1, !dbg !19353, !tbaa !2762
  %tobool3 = trunc i8 %6 to i1, !dbg !19353
  br i1 %tobool3, label %land.lhs.true, label %if.end14, !dbg !19355

land.lhs.true:                                    ; preds = %if.end2
  %7 = load i8, i8* %early_chmod, align 1, !dbg !19356, !tbaa !2762
  %tobool4 = trunc i8 %7 to i1, !dbg !19356
  br i1 %tobool4, label %if.end14, label %if.then5, !dbg !19357

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19358, metadata !DIExpression()), !dbg !19360
  %8 = load i32, i32* %ret, align 4, !dbg !19361, !tbaa !2655
  %tobool6 = icmp ne i32 %8, 0, !dbg !19361
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !19361

cond.true:                                        ; preds = %if.then5
  %call7 = call i32* @__errno_location() #16, !dbg !19362
  %9 = load i32, i32* %call7, align 4, !dbg !19362, !tbaa !2655, !ctir !5
  br label %cond.end, !dbg !19361

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !19361

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ 0, %cond.false ], !dbg !19361
  store i32 %cond, i32* %saved_errno, align 4, !dbg !19360, !tbaa !2655
  %10 = load i8*, i8** %name.addr, align 8, !dbg !19363, !tbaa !2668
  %11 = load i32, i32* %desc.addr, align 4, !dbg !19364, !tbaa !2655
  %12 = load %union.anon*, %union.anon** %ctx.addr, align 8, !dbg !19365, !tbaa !2668
  %mode8 = getelementptr inbounds %union.anon, %union.anon* %12, i32 0, i32 0, !dbg !19366, !ctir !2277
  %13 = load i32, i32* %mode8, align 4, !dbg !19366, !tbaa !13941, !ctir !136
  %call9 = call i32 @chmod_or_fchmod(i8* %10, i32 %11, i32 %13), !dbg !19367
  store i32 %call9, i32* %ret, align 4, !dbg !19368, !tbaa !2655
  %14 = load i32, i32* %saved_errno, align 4, !dbg !19369, !tbaa !2655
  %tobool10 = icmp ne i32 %14, 0, !dbg !19369
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !19371

if.then11:                                        ; preds = %cond.end
  %15 = load i32, i32* %saved_errno, align 4, !dbg !19372, !tbaa !2655
  %call12 = call i32* @__errno_location() #16, !dbg !19374
  store i32 %15, i32* %call12, align 4, !dbg !19375, !tbaa !2655, !ctir !5
  store i32 -1, i32* %ret, align 4, !dbg !19376, !tbaa !2655
  br label %if.end13, !dbg !19377

if.end13:                                         ; preds = %if.then11, %cond.end
  br label %if.end14, !dbg !19378

if.end14:                                         ; preds = %if.end13, %land.lhs.true, %if.end2
  %16 = load i32, i32* %ret, align 4, !dbg !19379, !tbaa !2655
  store i32 %16, i32* %retval, align 4, !dbg !19380
  br label %return, !dbg !19380

return:                                           ; preds = %if.end14, %if.then1
  %17 = load i32, i32* %retval, align 4, !dbg !19381
  ret i32 %17, !dbg !19381
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !19382 !ctir !197 {
entry:
  call void @usage(i32 1), !dbg !19383
  ret void, !dbg !19384
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !19385 !ctir !1340 {
entry:
  %retval = alloca i64, align 8, !ctir !634
  %arg.addr = alloca i8*, align 8, !ctir !177
  %arglist.addr = alloca i8**, align 8, !ctir !1342
  %vallist.addr = alloca i8*, align 8, !ctir !525
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %arglen = alloca i64, align 8, !ctir !52
  %matchind = alloca i64, align 8, !ctir !634
  %ambiguous = alloca i8, align 1, !ctir !139
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19386, metadata !DIExpression()), !dbg !19387
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19388, metadata !DIExpression()), !dbg !19389
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19390, metadata !DIExpression()), !dbg !19391
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19392, metadata !DIExpression()), !dbg !19393
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19394, metadata !DIExpression()), !dbg !19395
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !19396, metadata !DIExpression()), !dbg !19397
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !19398, metadata !DIExpression()), !dbg !19399
  store i64 -1, i64* %matchind, align 8, !dbg !19399, !tbaa !3308
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !19400, metadata !DIExpression()), !dbg !19401
  store i8 0, i8* %ambiguous, align 1, !dbg !19401, !tbaa !2762
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19402, !tbaa !2668
  %call = call i64 @strlen(i8* %0) #14, !dbg !19403
  store i64 %call, i64* %arglen, align 8, !dbg !19404, !tbaa !3308
  store i64 0, i64* %i, align 8, !dbg !19405, !tbaa !3308
  br label %for.cond, !dbg !19407

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19408, !tbaa !2668
  %2 = load i64, i64* %i, align 8, !dbg !19410, !tbaa !3308
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !19408, !ctir !1342
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !19408, !tbaa !2668
  %tobool = icmp ne i8* %3, null, !dbg !19411
  br i1 %tobool, label %for.body, label %for.end, !dbg !19411

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !19412, !tbaa !2668
  %5 = load i64, i64* %i, align 8, !dbg !19415, !tbaa !3308
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !19412, !ctir !1342
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !19412, !tbaa !2668
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19416, !tbaa !2668
  %8 = load i64, i64* %arglen, align 8, !dbg !19417, !tbaa !3308
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !19418
  %tobool3 = icmp ne i32 %call2, 0, !dbg !19418
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !19419

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !19420, !tbaa !2668
  %10 = load i64, i64* %i, align 8, !dbg !19423, !tbaa !3308
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !19420, !ctir !1342
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !19420, !tbaa !2668
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !19424
  %12 = load i64, i64* %arglen, align 8, !dbg !19425, !tbaa !3308
  %cmp = icmp eq i64 %call5, %12, !dbg !19426
  br i1 %cmp, label %if.then6, label %if.else, !dbg !19427

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !19428, !tbaa !3308
  store i64 %13, i64* %retval, align 8, !dbg !19429
  br label %return, !dbg !19429

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !19430, !tbaa !3308
  %cmp7 = icmp eq i64 %14, -1, !dbg !19432
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !19433

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !19434, !tbaa !3308
  store i64 %15, i64* %matchind, align 8, !dbg !19435, !tbaa !3308
  br label %if.end16, !dbg !19436

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !19437, !tbaa !2668
  %cmp10 = icmp eq i8* %16, null, !dbg !19440
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !19441

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !19442, !tbaa !2668
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !19443, !tbaa !3308
  %19 = load i64, i64* %matchind, align 8, !dbg !19444, !tbaa !3308
  %mul = mul i64 %18, %19, !dbg !19445
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !19446
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !19447, !tbaa !2668
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !19448, !tbaa !3308
  %22 = load i64, i64* %i, align 8, !dbg !19449, !tbaa !3308
  %mul11 = mul i64 %21, %22, !dbg !19450
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !19451
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !19452, !tbaa !3308
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !19453
  %tobool14 = icmp ne i32 %call13, 0, !dbg !19453
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !19454

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !19455, !tbaa !2762
  br label %if.end, !dbg !19457

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !19458

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !19459

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !19460, !tbaa !3308
  %inc = add i64 %24, 1, !dbg !19460
  store i64 %inc, i64* %i, align 8, !dbg !19460, !tbaa !3308
  br label %for.cond, !dbg !19461, !llvm.loop !19462

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !19464, !tbaa !2762
  %tobool19 = trunc i8 %25 to i1, !dbg !19464
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !19466

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !19467
  br label %return, !dbg !19467

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !19468, !tbaa !3308
  store i64 %26, i64* %retval, align 8, !dbg !19469
  br label %return, !dbg !19469

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !19470
  ret i64 %27, !dbg !19470
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !19471 !ctir !1343 {
entry:
  %context.addr = alloca i8*, align 8, !ctir !177
  %value.addr = alloca i8*, align 8, !ctir !177
  %problem.addr = alloca i64, align 8, !ctir !634
  %format = alloca i8*, align 8, !ctir !177
  store i8* %context, i8** %context.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !19472, metadata !DIExpression()), !dbg !19473
  store i8* %value, i8** %value.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !19474, metadata !DIExpression()), !dbg !19475
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !19476, metadata !DIExpression()), !dbg !19477
  call void @llvm.dbg.declare(metadata i8** %format, metadata !19478, metadata !DIExpression()), !dbg !19479
  %0 = load i64, i64* %problem.addr, align 8, !dbg !19480, !tbaa !3308
  %cmp = icmp eq i64 %0, -1, !dbg !19481
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !19480

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.481, i64 0, i64 0)) #9, !dbg !19482
  br label %cond.end, !dbg !19480

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.482, i64 0, i64 0)) #9, !dbg !19483
  br label %cond.end, !dbg !19480

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !19480
  store i8* %cond, i8** %format, align 8, !dbg !19479, !tbaa !2668
  %1 = load i8*, i8** %format, align 8, !dbg !19484, !tbaa !2668
  %2 = load i8*, i8** %value.addr, align 8, !dbg !19485, !tbaa !2668
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !19486
  %3 = load i8*, i8** %context.addr, align 8, !dbg !19487, !tbaa !2668
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !19488
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !19489
  ret void, !dbg !19490
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !19491 !ctir !1345 {
entry:
  %arglist.addr = alloca i8**, align 8, !ctir !1342
  %vallist.addr = alloca i8*, align 8, !ctir !525
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  %last_val = alloca i8*, align 8, !ctir !177
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19492, metadata !DIExpression()), !dbg !19493
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19494, metadata !DIExpression()), !dbg !19495
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19496, metadata !DIExpression()), !dbg !19497
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19498, metadata !DIExpression()), !dbg !19499
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !19500, metadata !DIExpression()), !dbg !19501
  store i8* null, i8** %last_val, align 8, !dbg !19501, !tbaa !2668
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.483, i64 0, i64 0)) #9, !dbg !19502
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19502, !tbaa !2668
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !19502
  store i64 0, i64* %i, align 8, !dbg !19503, !tbaa !3308
  br label %for.cond, !dbg !19505

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19506, !tbaa !2668
  %2 = load i64, i64* %i, align 8, !dbg !19508, !tbaa !3308
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !19506, !ctir !1342
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !19506, !tbaa !2668
  %tobool = icmp ne i8* %3, null, !dbg !19509
  br i1 %tobool, label %for.body, label %for.end, !dbg !19509

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !19510, !tbaa !3308
  %cmp = icmp eq i64 %4, 0, !dbg !19512
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19513

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !19514, !tbaa !2668
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !19515, !tbaa !2668
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !19516, !tbaa !3308
  %8 = load i64, i64* %i, align 8, !dbg !19517, !tbaa !3308
  %mul = mul i64 %7, %8, !dbg !19518
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !19519
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !19520, !tbaa !3308
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !19521
  %tobool3 = icmp ne i32 %call2, 0, !dbg !19521
  br i1 %tobool3, label %if.then, label %if.else, !dbg !19522

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19523, !tbaa !2668
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !19525, !tbaa !2668
  %12 = load i64, i64* %i, align 8, !dbg !19526, !tbaa !3308
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !19525, !ctir !1342
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !19525, !tbaa !2668
  %call5 = call i8* @quote(i8* %13), !dbg !19527
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.484, i64 0, i64 0), i8* %call5), !dbg !19528
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !19529, !tbaa !2668
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !19530, !tbaa !3308
  %16 = load i64, i64* %i, align 8, !dbg !19531, !tbaa !3308
  %mul7 = mul i64 %15, %16, !dbg !19532
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !19533
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !19534, !tbaa !2668
  br label %if.end, !dbg !19535

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19536, !tbaa !2668
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !19538, !tbaa !2668
  %19 = load i64, i64* %i, align 8, !dbg !19539, !tbaa !3308
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !19538, !ctir !1342
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !19538, !tbaa !2668
  %call10 = call i8* @quote(i8* %20), !dbg !19540
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.485, i64 0, i64 0), i8* %call10), !dbg !19541
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !19542

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !19543, !tbaa !3308
  %inc = add i64 %21, 1, !dbg !19543
  store i64 %inc, i64* %i, align 8, !dbg !19543, !tbaa !3308
  br label %for.cond, !dbg !19544, !llvm.loop !19545

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !19547, !tbaa !2668
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !19547
  ret void, !dbg !19548
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !19549 !ctir !1385 {
entry:
  %retval = alloca i64, align 8, !ctir !634
  %context.addr = alloca i8*, align 8, !ctir !177
  %arg.addr = alloca i8*, align 8, !ctir !177
  %arglist.addr = alloca i8**, align 8, !ctir !1342
  %vallist.addr = alloca i8*, align 8, !ctir !525
  %valsize.addr = alloca i64, align 8, !ctir !52
  %exit_fn.addr = alloca void ()*, align 8, !ctir !712
  %res = alloca i64, align 8, !ctir !634
  store i8* %context, i8** %context.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !19550, metadata !DIExpression()), !dbg !19551
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19552, metadata !DIExpression()), !dbg !19553
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19554, metadata !DIExpression()), !dbg !19555
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19556, metadata !DIExpression()), !dbg !19557
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19558, metadata !DIExpression()), !dbg !19559
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !19560, metadata !DIExpression()), !dbg !19561
  call void @llvm.dbg.declare(metadata i64* %res, metadata !19562, metadata !DIExpression()), !dbg !19563
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19564, !tbaa !2668
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19565, !tbaa !2668
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !19566, !tbaa !2668
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !19567, !tbaa !3308
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !19568
  store i64 %call, i64* %res, align 8, !dbg !19563, !tbaa !3308
  %4 = load i64, i64* %res, align 8, !dbg !19569, !tbaa !3308
  %cmp = icmp sge i64 %4, 0, !dbg !19571
  br i1 %cmp, label %if.then, label %if.end, !dbg !19572

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !19573, !tbaa !3308
  store i64 %5, i64* %retval, align 8, !dbg !19574
  br label %return, !dbg !19574

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !19575, !tbaa !2668
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19576, !tbaa !2668
  %8 = load i64, i64* %res, align 8, !dbg !19577, !tbaa !3308
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !19578
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !19579, !tbaa !2668
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !19580, !tbaa !2668
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !19581, !tbaa !3308
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !19582
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !19583, !tbaa !2668
  call void %12(), !dbg !19584
  store i64 -1, i64* %retval, align 8, !dbg !19585
  br label %return, !dbg !19585

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !19586
  ret i64 %13, !dbg !19586
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !19587 !ctir !1387 {
entry:
  %retval = alloca i8*, align 8, !ctir !177
  %value.addr = alloca i8*, align 8, !ctir !525
  %arglist.addr = alloca i8**, align 8, !ctir !1342
  %vallist.addr = alloca i8*, align 8, !ctir !525
  %valsize.addr = alloca i64, align 8, !ctir !52
  %i = alloca i64, align 8, !ctir !52
  store i8* %value, i8** %value.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !19588, metadata !DIExpression()), !dbg !19589
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19590, metadata !DIExpression()), !dbg !19591
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19592, metadata !DIExpression()), !dbg !19593
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19594, metadata !DIExpression()), !dbg !19595
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19596, metadata !DIExpression()), !dbg !19597
  store i64 0, i64* %i, align 8, !dbg !19598, !tbaa !3308
  br label %for.cond, !dbg !19600

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !19601, !tbaa !2668
  %1 = load i64, i64* %i, align 8, !dbg !19603, !tbaa !3308
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !19601, !ctir !1342
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !19601, !tbaa !2668
  %tobool = icmp ne i8* %2, null, !dbg !19604
  br i1 %tobool, label %for.body, label %for.end, !dbg !19604

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !19605, !tbaa !2668
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !19607, !tbaa !2668
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !19608, !tbaa !3308
  %6 = load i64, i64* %i, align 8, !dbg !19609, !tbaa !3308
  %mul = mul i64 %5, %6, !dbg !19610
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !19611
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !19612, !tbaa !3308
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !19613
  %tobool1 = icmp ne i32 %call, 0, !dbg !19613
  br i1 %tobool1, label %if.end, label %if.then, !dbg !19614

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !19615, !tbaa !2668
  %9 = load i64, i64* %i, align 8, !dbg !19616, !tbaa !3308
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !19615, !ctir !1342
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !19615, !tbaa !2668
  store i8* %10, i8** %retval, align 8, !dbg !19617
  br label %return, !dbg !19617

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !19618

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !19619, !tbaa !3308
  %inc = add i64 %11, 1, !dbg !19619
  store i64 %inc, i64* %i, align 8, !dbg !19619, !tbaa !3308
  br label %for.cond, !dbg !19620, !llvm.loop !19621

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !19623
  br label %return, !dbg !19623

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !19624
  ret i8* %12, !dbg !19624
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !19625 !ctir !2283 {
entry:
  %x.addr = alloca i64, align 8, !ctir !1493
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19627, metadata !DIExpression()), !dbg !19628
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19629, metadata !DIExpression()), !dbg !19630
  %0 = load i64, i64* %x.addr, align 8, !dbg !19631, !tbaa !3308
  %1 = load i32, i32* %n.addr, align 4, !dbg !19632, !tbaa !2655
  %sh_prom = zext i32 %1 to i64, !dbg !19633
  %shl = shl i64 %0, %sh_prom, !dbg !19633
  %2 = load i64, i64* %x.addr, align 8, !dbg !19634, !tbaa !3308
  %3 = load i32, i32* %n.addr, align 4, !dbg !19635, !tbaa !2655
  %sub = sub nsw i32 64, %3, !dbg !19636
  %sh_prom1 = zext i32 %sub to i64, !dbg !19637
  %shr = lshr i64 %2, %sh_prom1, !dbg !19637
  %or = or i64 %shl, %shr, !dbg !19638
  ret i64 %or, !dbg !19639
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !19640 !ctir !2283 {
entry:
  %x.addr = alloca i64, align 8, !ctir !1493
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19641, metadata !DIExpression()), !dbg !19642
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19643, metadata !DIExpression()), !dbg !19644
  %0 = load i64, i64* %x.addr, align 8, !dbg !19645, !tbaa !3308
  %1 = load i32, i32* %n.addr, align 4, !dbg !19646, !tbaa !2655
  %sh_prom = zext i32 %1 to i64, !dbg !19647
  %shr = lshr i64 %0, %sh_prom, !dbg !19647
  %2 = load i64, i64* %x.addr, align 8, !dbg !19648, !tbaa !3308
  %3 = load i32, i32* %n.addr, align 4, !dbg !19649, !tbaa !2655
  %sub = sub nsw i32 64, %3, !dbg !19650
  %sh_prom1 = zext i32 %sub to i64, !dbg !19651
  %shl = shl i64 %2, %sh_prom1, !dbg !19651
  %or = or i64 %shr, %shl, !dbg !19652
  ret i64 %or, !dbg !19653
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !19654 !ctir !2285 {
entry:
  %x.addr = alloca i32, align 4, !ctir !1496
  %n.addr = alloca i32, align 4, !ctir !5
  store i32 %x, i32* %x.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19655, metadata !DIExpression()), !dbg !19656
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19657, metadata !DIExpression()), !dbg !19658
  %0 = load i32, i32* %x.addr, align 4, !dbg !19659, !tbaa !2655
  %1 = load i32, i32* %n.addr, align 4, !dbg !19660, !tbaa !2655
  %shl = shl i32 %0, %1, !dbg !19661
  %2 = load i32, i32* %x.addr, align 4, !dbg !19662, !tbaa !2655
  %3 = load i32, i32* %n.addr, align 4, !dbg !19663, !tbaa !2655
  %sub = sub nsw i32 32, %3, !dbg !19664
  %shr = lshr i32 %2, %sub, !dbg !19665
  %or = or i32 %shl, %shr, !dbg !19666
  ret i32 %or, !dbg !19667
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !19668 !ctir !2285 {
entry:
  %x.addr = alloca i32, align 4, !ctir !1496
  %n.addr = alloca i32, align 4, !ctir !5
  store i32 %x, i32* %x.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !19669, metadata !DIExpression()), !dbg !19670
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19671, metadata !DIExpression()), !dbg !19672
  %0 = load i32, i32* %x.addr, align 4, !dbg !19673, !tbaa !2655
  %1 = load i32, i32* %n.addr, align 4, !dbg !19674, !tbaa !2655
  %shr = lshr i32 %0, %1, !dbg !19675
  %2 = load i32, i32* %x.addr, align 4, !dbg !19676, !tbaa !2655
  %3 = load i32, i32* %n.addr, align 4, !dbg !19677, !tbaa !2655
  %sub = sub nsw i32 32, %3, !dbg !19678
  %shl = shl i32 %2, %sub, !dbg !19679
  %or = or i32 %shr, %shl, !dbg !19680
  ret i32 %or, !dbg !19681
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !19682 !ctir !2287 {
entry:
  %x.addr = alloca i64, align 8, !ctir !52
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19683, metadata !DIExpression()), !dbg !19684
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19685, metadata !DIExpression()), !dbg !19686
  %0 = load i64, i64* %x.addr, align 8, !dbg !19687, !tbaa !3308
  %1 = load i32, i32* %n.addr, align 4, !dbg !19688, !tbaa !2655
  %sh_prom = zext i32 %1 to i64, !dbg !19689
  %shl = shl i64 %0, %sh_prom, !dbg !19689
  %2 = load i64, i64* %x.addr, align 8, !dbg !19690, !tbaa !3308
  %3 = load i32, i32* %n.addr, align 4, !dbg !19691, !tbaa !2655
  %conv = sext i32 %3 to i64, !dbg !19691
  %sub = sub i64 64, %conv, !dbg !19692
  %shr = lshr i64 %2, %sub, !dbg !19693
  %or = or i64 %shl, %shr, !dbg !19694
  ret i64 %or, !dbg !19695
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !19696 !ctir !2287 {
entry:
  %x.addr = alloca i64, align 8, !ctir !52
  %n.addr = alloca i32, align 4, !ctir !5
  store i64 %x, i64* %x.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !19697, metadata !DIExpression()), !dbg !19698
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19699, metadata !DIExpression()), !dbg !19700
  %0 = load i64, i64* %x.addr, align 8, !dbg !19701, !tbaa !3308
  %1 = load i32, i32* %n.addr, align 4, !dbg !19702, !tbaa !2655
  %sh_prom = zext i32 %1 to i64, !dbg !19703
  %shr = lshr i64 %0, %sh_prom, !dbg !19703
  %2 = load i64, i64* %x.addr, align 8, !dbg !19704, !tbaa !3308
  %3 = load i32, i32* %n.addr, align 4, !dbg !19705, !tbaa !2655
  %conv = sext i32 %3 to i64, !dbg !19705
  %sub = sub i64 64, %conv, !dbg !19706
  %shl = shl i64 %2, %sub, !dbg !19707
  %or = or i64 %shr, %shl, !dbg !19708
  ret i64 %or, !dbg !19709
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !19710 !ctir !2289 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2291
  %n.addr = alloca i32, align 4, !ctir !5
  store i16 %x, i16* %x.addr, align 2, !tbaa !14584
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19711, metadata !DIExpression()), !dbg !19712
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19713, metadata !DIExpression()), !dbg !19714
  %0 = load i16, i16* %x.addr, align 2, !dbg !19715, !tbaa !14584
  %conv = zext i16 %0 to i32, !dbg !19716
  %1 = load i32, i32* %n.addr, align 4, !dbg !19717, !tbaa !2655
  %shl = shl i32 %conv, %1, !dbg !19718
  %2 = load i16, i16* %x.addr, align 2, !dbg !19719, !tbaa !14584
  %conv1 = zext i16 %2 to i32, !dbg !19720
  %3 = load i32, i32* %n.addr, align 4, !dbg !19721, !tbaa !2655
  %sub = sub nsw i32 16, %3, !dbg !19722
  %shr = lshr i32 %conv1, %sub, !dbg !19723
  %or = or i32 %shl, %shr, !dbg !19724
  %and = and i32 %or, 65535, !dbg !19725
  %conv2 = trunc i32 %and to i16, !dbg !19726
  ret i16 %conv2, !dbg !19727
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !19728 !ctir !2289 {
entry:
  %x.addr = alloca i16, align 2, !ctir !2291
  %n.addr = alloca i32, align 4, !ctir !5
  store i16 %x, i16* %x.addr, align 2, !tbaa !14584
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !19729, metadata !DIExpression()), !dbg !19730
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19731, metadata !DIExpression()), !dbg !19732
  %0 = load i16, i16* %x.addr, align 2, !dbg !19733, !tbaa !14584
  %conv = zext i16 %0 to i32, !dbg !19734
  %1 = load i32, i32* %n.addr, align 4, !dbg !19735, !tbaa !2655
  %shr = lshr i32 %conv, %1, !dbg !19736
  %2 = load i16, i16* %x.addr, align 2, !dbg !19737, !tbaa !14584
  %conv1 = zext i16 %2 to i32, !dbg !19738
  %3 = load i32, i32* %n.addr, align 4, !dbg !19739, !tbaa !2655
  %sub = sub nsw i32 16, %3, !dbg !19740
  %shl = shl i32 %conv1, %sub, !dbg !19741
  %or = or i32 %shr, %shl, !dbg !19742
  %and = and i32 %or, 65535, !dbg !19743
  %conv2 = trunc i32 %and to i16, !dbg !19744
  ret i16 %conv2, !dbg !19745
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !19746 !ctir !2292 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2294
  %n.addr = alloca i32, align 4, !ctir !5
  store i8 %x, i8* %x.addr, align 1, !tbaa !3315
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19747, metadata !DIExpression()), !dbg !19748
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19749, metadata !DIExpression()), !dbg !19750
  %0 = load i8, i8* %x.addr, align 1, !dbg !19751, !tbaa !3315
  %conv = zext i8 %0 to i32, !dbg !19752
  %1 = load i32, i32* %n.addr, align 4, !dbg !19753, !tbaa !2655
  %shl = shl i32 %conv, %1, !dbg !19754
  %2 = load i8, i8* %x.addr, align 1, !dbg !19755, !tbaa !3315
  %conv1 = zext i8 %2 to i32, !dbg !19756
  %3 = load i32, i32* %n.addr, align 4, !dbg !19757, !tbaa !2655
  %sub = sub nsw i32 8, %3, !dbg !19758
  %shr = lshr i32 %conv1, %sub, !dbg !19759
  %or = or i32 %shl, %shr, !dbg !19760
  %and = and i32 %or, 255, !dbg !19761
  %conv2 = trunc i32 %and to i8, !dbg !19762
  ret i8 %conv2, !dbg !19763
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !19764 !ctir !2292 {
entry:
  %x.addr = alloca i8, align 1, !ctir !2294
  %n.addr = alloca i32, align 4, !ctir !5
  store i8 %x, i8* %x.addr, align 1, !tbaa !3315
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !19765, metadata !DIExpression()), !dbg !19766
  store i32 %n, i32* %n.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !19767, metadata !DIExpression()), !dbg !19768
  %0 = load i8, i8* %x.addr, align 1, !dbg !19769, !tbaa !3315
  %conv = zext i8 %0 to i32, !dbg !19770
  %1 = load i32, i32* %n.addr, align 4, !dbg !19771, !tbaa !2655
  %shr = lshr i32 %conv, %1, !dbg !19772
  %2 = load i8, i8* %x.addr, align 1, !dbg !19773, !tbaa !3315
  %conv1 = zext i8 %2 to i32, !dbg !19774
  %3 = load i32, i32* %n.addr, align 4, !dbg !19775, !tbaa !2655
  %sub = sub nsw i32 8, %3, !dbg !19776
  %shl = shl i32 %conv1, %sub, !dbg !19777
  %or = or i32 %shr, %shl, !dbg !19778
  %and = and i32 %or, 255, !dbg !19779
  %conv2 = trunc i32 %and to i8, !dbg !19780
  ret i8 %conv2, !dbg !19781
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #10 !dbg !19782 !ctir !1888 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %s1.addr = alloca i8*, align 8, !ctir !177
  %s2.addr = alloca i8*, align 8, !ctir !177
  %p1 = alloca i8*, align 8, !ctir !563
  %p2 = alloca i8*, align 8, !ctir !563
  %c1 = alloca i8, align 1, !ctir !565
  %c2 = alloca i8, align 1, !ctir !565
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !19784, metadata !DIExpression()), !dbg !19785
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !19786, metadata !DIExpression()), !dbg !19787
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !19788, metadata !DIExpression()), !dbg !19789
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !19790, !tbaa !2668
  store i8* %0, i8** %p1, align 8, !dbg !19789, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !19791, metadata !DIExpression()), !dbg !19792
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !19793, !tbaa !2668
  store i8* %1, i8** %p2, align 8, !dbg !19792, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !19794, metadata !DIExpression()), !dbg !19795
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !19796, metadata !DIExpression()), !dbg !19797
  %2 = load i8*, i8** %p1, align 8, !dbg !19798, !tbaa !2668
  %3 = load i8*, i8** %p2, align 8, !dbg !19800, !tbaa !2668
  %cmp = icmp eq i8* %2, %3, !dbg !19801
  br i1 %cmp, label %if.then, label %if.end, !dbg !19802

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !19803
  br label %return, !dbg !19803

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !19804

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !19805, !tbaa !2668
  %5 = load i8, i8* %4, align 1, !dbg !19807, !tbaa !3315, !ctir !564
  %conv = zext i8 %5 to i32, !dbg !19807
  %call = call i32 @c_tolower(i32 %conv), !dbg !19808
  %conv1 = trunc i32 %call to i8, !dbg !19808
  store i8 %conv1, i8* %c1, align 1, !dbg !19809, !tbaa !3315
  %6 = load i8*, i8** %p2, align 8, !dbg !19810, !tbaa !2668
  %7 = load i8, i8* %6, align 1, !dbg !19811, !tbaa !3315, !ctir !564
  %conv2 = zext i8 %7 to i32, !dbg !19811
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !19812
  %conv4 = trunc i32 %call3 to i8, !dbg !19812
  store i8 %conv4, i8* %c2, align 1, !dbg !19813, !tbaa !3315
  %8 = load i8, i8* %c1, align 1, !dbg !19814, !tbaa !3315
  %conv5 = zext i8 %8 to i32, !dbg !19814
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !19816
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19817

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !19818

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !19819, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !19819
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !19819, !tbaa !2668
  %10 = load i8*, i8** %p2, align 8, !dbg !19820, !tbaa !2668
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19820
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !19820, !tbaa !2668
  br label %do.cond, !dbg !19821

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !19822, !tbaa !3315
  %conv11 = zext i8 %11 to i32, !dbg !19822
  %12 = load i8, i8* %c2, align 1, !dbg !19823, !tbaa !3315
  %conv12 = zext i8 %12 to i32, !dbg !19823
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !19824
  br i1 %cmp13, label %do.body, label %do.end, !dbg !19821, !llvm.loop !19825

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !19827, !tbaa !3315
  %conv15 = zext i8 %13 to i32, !dbg !19827
  %14 = load i8, i8* %c2, align 1, !dbg !19829, !tbaa !3315
  %conv16 = zext i8 %14 to i32, !dbg !19829
  %sub = sub nsw i32 %conv15, %conv16, !dbg !19830
  store i32 %sub, i32* %retval, align 4, !dbg !19831
  br label %return, !dbg !19831

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !19832
  ret i32 %15, !dbg !19832
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !19833 !ctir !2301 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %stream.addr = alloca %struct._IO_FILE*, align 8, !ctir !2303
  %some_pending = alloca i8, align 1, !ctir !2343
  %prev_fail = alloca i8, align 1, !ctir !2343
  %fclose_fail = alloca i8, align 1, !ctir !2343
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19835, metadata !DIExpression()), !dbg !19836
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !19837, metadata !DIExpression()), !dbg !19838
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19839, !tbaa !2668
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #9, !dbg !19840
  %cmp = icmp ne i64 %call, 0, !dbg !19841
  %frombool = zext i1 %cmp to i8, !dbg !19838
  store i8 %frombool, i8* %some_pending, align 1, !dbg !19838, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !19842, metadata !DIExpression()), !dbg !19843
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19844, !tbaa !2668
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #9, !dbg !19844
  %cmp2 = icmp ne i32 %call1, 0, !dbg !19845
  %frombool3 = zext i1 %cmp2 to i8, !dbg !19843
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !19843, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !19846, metadata !DIExpression()), !dbg !19847
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19848, !tbaa !2668
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !19849
  %cmp5 = icmp ne i32 %call4, 0, !dbg !19850
  %frombool6 = zext i1 %cmp5 to i8, !dbg !19847
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !19847, !tbaa !2762
  %3 = load i8, i8* %prev_fail, align 1, !dbg !19851, !tbaa !2762
  %tobool = trunc i8 %3 to i1, !dbg !19851
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !19853

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !19854, !tbaa !2762
  %tobool7 = trunc i8 %4 to i1, !dbg !19854
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !19855

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !19856, !tbaa !2762
  %tobool8 = trunc i8 %5 to i1, !dbg !19856
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !19857

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !19858
  %6 = load i32, i32* %call10, align 4, !dbg !19858, !tbaa !2655, !ctir !5
  %cmp11 = icmp ne i32 %6, 9, !dbg !19859
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !19860

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !19861, !tbaa !2762
  %tobool12 = trunc i8 %7 to i1, !dbg !19861
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !19864

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !19865
  store i32 0, i32* %call14, align 4, !dbg !19866, !tbaa !2655, !ctir !5
  br label %if.end, !dbg !19865

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19867
  br label %return, !dbg !19867

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !19868
  br label %return, !dbg !19868

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !19869
  ret i32 %8, !dbg !19869
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !19870 !ctir !2347 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %dp = alloca %struct.__dirstream*, align 8, !ctir !675
  %fd = alloca i32, align 4, !ctir !5
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !675
  %e = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19872, metadata !DIExpression()), !dbg !19873
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !19874, metadata !DIExpression()), !dbg !19875
  %0 = load i8*, i8** %name.addr, align 8, !dbg !19876, !tbaa !2668
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !19877
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !19875, !tbaa !2668
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19878, !tbaa !2668
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !19878
  br i1 %tobool, label %if.then, label %if.end17, !dbg !19880

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !19881, metadata !DIExpression()), !dbg !19883
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19884, !tbaa !2668
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #9, !dbg !19885
  store i32 %call1, i32* %fd, align 4, !dbg !19883, !tbaa !2655
  %3 = load i32, i32* %fd, align 4, !dbg !19886, !tbaa !2655
  %cmp = icmp sle i32 0, %3, !dbg !19888
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !19889

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !19890, !tbaa !2655
  %cmp2 = icmp sle i32 %4, 2, !dbg !19891
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !19892

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !19893, metadata !DIExpression()), !dbg !19895
  call void @llvm.dbg.declare(metadata i32* %e, metadata !19896, metadata !DIExpression()), !dbg !19897
  call void @llvm.dbg.declare(metadata i32* %f, metadata !19898, metadata !DIExpression()), !dbg !19899
  %5 = load i32, i32* %fd, align 4, !dbg !19900, !tbaa !2655
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !19901
  store i32 %call4, i32* %f, align 4, !dbg !19899, !tbaa !2655
  %6 = load i32, i32* %f, align 4, !dbg !19902, !tbaa !2655
  %cmp5 = icmp slt i32 %6, 0, !dbg !19904
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !19905

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #16, !dbg !19906
  %7 = load i32, i32* %call7, align 4, !dbg !19906, !tbaa !2655, !ctir !5
  store i32 %7, i32* %e, align 4, !dbg !19908, !tbaa !2655
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !19909, !tbaa !2668
  br label %if.end13, !dbg !19910

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !19911, !tbaa !2655
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !19913
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !19914, !tbaa !2668
  %call9 = call i32* @__errno_location() #16, !dbg !19915
  %9 = load i32, i32* %call9, align 4, !dbg !19915, !tbaa !2655, !ctir !5
  store i32 %9, i32* %e, align 4, !dbg !19916, !tbaa !2655
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !19917, !tbaa !2668
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !19917
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !19919

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !19920, !tbaa !2655
  %call12 = call i32 @close(i32 %11), !dbg !19921
  br label %if.end, !dbg !19921

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19922, !tbaa !2668
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !19923
  %13 = load i32, i32* %e, align 4, !dbg !19924, !tbaa !2655
  %call15 = call i32* @__errno_location() #16, !dbg !19925
  store i32 %13, i32* %call15, align 4, !dbg !19926, !tbaa !2655, !ctir !5
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !19927, !tbaa !2668
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !19928, !tbaa !2668
  br label %if.end16, !dbg !19929

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !19930

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !19931, !tbaa !2668
  ret %struct.__dirstream* %15, !dbg !19932
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !19933 !ctir !2352 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8, !ctir !2354
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !19935, metadata !DIExpression()), !dbg !19936
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !19937, !tbaa !2668
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #9, !dbg !19938
  ret void, !dbg !19939
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !19940 !ctir !2359 {
entry:
  %retval = alloca %struct.timespec, align 8, !ctir !2355
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !19941, metadata !DIExpression()), !dbg !19942
  call void @gettime(%struct.timespec* %retval), !dbg !19943
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !19944
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !19944
  ret { i64, i64 } %1, !dbg !19944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !19945 !ctir !253 {
entry:
  %category.addr = alloca i32, align 4, !ctir !5
  %hard = alloca i8, align 1, !ctir !139
  %p = alloca i8*, align 8, !ctir !177
  store i32 %category, i32* %category.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !19947, metadata !DIExpression()), !dbg !19948
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !19949, metadata !DIExpression()), !dbg !19950
  store i8 1, i8* %hard, align 1, !dbg !19950, !tbaa !2762
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19951, metadata !DIExpression()), !dbg !19952
  %0 = load i32, i32* %category.addr, align 4, !dbg !19953, !tbaa !2655
  %call = call i8* @setlocale(i32 %0, i8* null) #9, !dbg !19954
  store i8* %call, i8** %p, align 8, !dbg !19952, !tbaa !2668
  %1 = load i8*, i8** %p, align 8, !dbg !19955, !tbaa !2668
  %tobool = icmp ne i8* %1, null, !dbg !19955
  br i1 %tobool, label %if.then, label %if.end5, !dbg !19957

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !19958, !tbaa !2668
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.500, i64 0, i64 0)) #14, !dbg !19963
  %cmp = icmp eq i32 %call1, 0, !dbg !19964
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !19965

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !19966, !tbaa !2668
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.501, i64 0, i64 0)) #14, !dbg !19967
  %cmp3 = icmp eq i32 %call2, 0, !dbg !19968
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !19969

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !19970, !tbaa !2762
  br label %if.end, !dbg !19971

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !19972

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !19973, !tbaa !2762
  %tobool6 = trunc i8 %4 to i1, !dbg !19973
  ret i1 %tobool6, !dbg !19974
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #10 !dbg !19975 !ctir !615 {
entry:
  %x.addr = alloca i8*, align 8, !ctir !525
  %tablesize.addr = alloca i64, align 8, !ctir !52
  %s = alloca i8*, align 8, !ctir !177
  %h = alloca i64, align 8, !ctir !52
  store i8* %x, i8** %x.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !19977, metadata !DIExpression()), !dbg !19978
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !19979, metadata !DIExpression()), !dbg !19980
  call void @llvm.dbg.declare(metadata i8** %s, metadata !19981, metadata !DIExpression()), !dbg !19982
  call void @llvm.dbg.declare(metadata i64* %h, metadata !19983, metadata !DIExpression()), !dbg !19984
  store i64 0, i64* %h, align 8, !dbg !19984, !tbaa !3308
  %0 = load i8*, i8** %x.addr, align 8, !dbg !19985, !tbaa !2668
  store i8* %0, i8** %s, align 8, !dbg !19987, !tbaa !2668
  br label %for.cond, !dbg !19988

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !19989, !tbaa !2668
  %2 = load i8, i8* %1, align 1, !dbg !19991, !tbaa !3315, !ctir !178
  %tobool = icmp ne i8 %2, 0, !dbg !19992
  br i1 %tobool, label %for.body, label %for.end, !dbg !19992

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !19993, !tbaa !2668
  %4 = load i8, i8* %3, align 1, !dbg !19994, !tbaa !3315, !ctir !178
  %conv = sext i8 %4 to i64, !dbg !19994
  %5 = load i64, i64* %h, align 8, !dbg !19995, !tbaa !3308
  %shl = shl i64 %5, 9, !dbg !19996
  %6 = load i64, i64* %h, align 8, !dbg !19997, !tbaa !3308
  %shr = lshr i64 %6, 55, !dbg !19998
  %or = or i64 %shl, %shr, !dbg !19999
  %add = add i64 %conv, %or, !dbg !20000
  store i64 %add, i64* %h, align 8, !dbg !20001, !tbaa !3308
  br label %for.inc, !dbg !20002

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !20003, !tbaa !2668
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !20003
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !20003, !tbaa !2668
  br label %for.cond, !dbg !20004, !llvm.loop !20005

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !20007, !tbaa !3308
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !20008, !tbaa !3308
  %rem = urem i64 %8, %9, !dbg !20009
  ret i64 %rem, !dbg !20010
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !20011 !ctir !2370 {
entry:
  %codeset = alloca i8*, align 8, !ctir !177
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !20013, metadata !DIExpression()), !dbg !20014
  %call = call i8* @rpl_nl_langinfo(i32 14), !dbg !20015
  store i8* %call, i8** %codeset, align 8, !dbg !20016, !tbaa !2668
  %0 = load i8*, i8** %codeset, align 8, !dbg !20017, !tbaa !2668
  %cmp = icmp eq i8* %0, null, !dbg !20019
  br i1 %cmp, label %if.then, label %if.end, !dbg !20020

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.506, i64 0, i64 0), i8** %codeset, align 8, !dbg !20021, !tbaa !2668
  br label %if.end, !dbg !20022

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !20023, !tbaa !2668
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !20023, !ctir !177
  %2 = load i8, i8* %arrayidx, align 1, !dbg !20023, !tbaa !3315
  %conv = sext i8 %2 to i32, !dbg !20023
  %cmp1 = icmp eq i32 %conv, 0, !dbg !20027
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !20028

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.507, i64 0, i64 0), i8** %codeset, align 8, !dbg !20029, !tbaa !2668
  br label %if.end4, !dbg !20030

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !20031, !tbaa !2668
  ret i8* %3, !dbg !20032
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dirchownmod(i32 %fd, i8* %dir, i32 %mkdir_mode, i32 %owner, i32 %group, i32 %mode, i32 %mode_bits) #4 !dbg !20033 !ctir !2374 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %dir.addr = alloca i8*, align 8, !ctir !177
  %mkdir_mode.addr = alloca i32, align 4, !ctir !136
  %owner.addr = alloca i32, align 4, !ctir !124
  %group.addr = alloca i32, align 4, !ctir !126
  %mode.addr = alloca i32, align 4, !ctir !136
  %mode_bits.addr = alloca i32, align 4, !ctir !136
  %st = alloca %struct.stat, align 8, !ctir !20035
  %result = alloca i32, align 4, !ctir !5
  %dir_mode = alloca i32, align 4, !ctir !136
  %indeterminate = alloca i32, align 4, !ctir !136
  %chmod_mode = alloca i32, align 4, !ctir !136
  %e = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20056, metadata !DIExpression()), !dbg !20057
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !20058, metadata !DIExpression()), !dbg !20059
  store i32 %mkdir_mode, i32* %mkdir_mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode.addr, metadata !20060, metadata !DIExpression()), !dbg !20061
  store i32 %owner, i32* %owner.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !20062, metadata !DIExpression()), !dbg !20063
  store i32 %group, i32* %group.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !20064, metadata !DIExpression()), !dbg !20065
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !20066, metadata !DIExpression()), !dbg !20067
  store i32 %mode_bits, i32* %mode_bits.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !20068, metadata !DIExpression()), !dbg !20069
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !20070, metadata !DIExpression()), !dbg !20071
  call void @llvm.dbg.declare(metadata i32* %result, metadata !20072, metadata !DIExpression()), !dbg !20073
  %0 = load i32, i32* %fd.addr, align 4, !dbg !20074, !tbaa !2655
  %cmp = icmp slt i32 %0, 0, !dbg !20075
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20074

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !20076, !tbaa !2668
  %call = call i32 @stat(i8* %1, %struct.stat* %st) #9, !dbg !20077
  br label %cond.end, !dbg !20074

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !20078, !tbaa !2655
  %call1 = call i32 @fstat(i32 %2, %struct.stat* %st) #9, !dbg !20079
  br label %cond.end, !dbg !20074

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !20074
  store i32 %cond, i32* %result, align 4, !dbg !20073, !tbaa !2655
  %3 = load i32, i32* %result, align 4, !dbg !20080, !tbaa !2655
  %cmp2 = icmp eq i32 %3, 0, !dbg !20082
  br i1 %cmp2, label %if.then, label %if.end54, !dbg !20083

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %dir_mode, metadata !20084, metadata !DIExpression()), !dbg !20086
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !20087, !ctir !20035
  %4 = load i32, i32* %st_mode, align 8, !dbg !20087, !tbaa !2934, !ctir !137
  store i32 %4, i32* %dir_mode, align 4, !dbg !20086, !tbaa !2655
  %5 = load i32, i32* %dir_mode, align 4, !dbg !20088, !tbaa !2655
  %and = and i32 %5, 61440, !dbg !20088
  %cmp3 = icmp eq i32 %and, 16384, !dbg !20088
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !20090

if.then4:                                         ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !20091
  store i32 20, i32* %call5, align 4, !dbg !20093, !tbaa !2655, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !20094, !tbaa !2655
  br label %if.end53, !dbg !20095

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %indeterminate, metadata !20096, metadata !DIExpression()), !dbg !20098
  store i32 0, i32* %indeterminate, align 4, !dbg !20098, !tbaa !2655
  %6 = load i32, i32* %owner.addr, align 4, !dbg !20099, !tbaa !2655
  %cmp6 = icmp ne i32 %6, -1, !dbg !20101
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false, !dbg !20102

land.lhs.true:                                    ; preds = %if.else
  %7 = load i32, i32* %owner.addr, align 4, !dbg !20103, !tbaa !2655
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !20104, !ctir !20035
  %8 = load i32, i32* %st_uid, align 4, !dbg !20104, !tbaa !4064, !ctir !125
  %cmp7 = icmp ne i32 %7, %8, !dbg !20105
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !20106

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.else
  %9 = load i32, i32* %group.addr, align 4, !dbg !20107, !tbaa !2655
  %cmp8 = icmp ne i32 %9, -1, !dbg !20108
  br i1 %cmp8, label %land.lhs.true9, label %if.end30, !dbg !20109

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %group.addr, align 4, !dbg !20110, !tbaa !2655
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !20111, !ctir !20035
  %11 = load i32, i32* %st_gid, align 8, !dbg !20111, !tbaa !4093, !ctir !127
  %cmp10 = icmp ne i32 %10, %11, !dbg !20112
  br i1 %cmp10, label %if.then11, label %if.end30, !dbg !20113

if.then11:                                        ; preds = %land.lhs.true9, %land.lhs.true
  %12 = load i32, i32* %fd.addr, align 4, !dbg !20114, !tbaa !2655
  %cmp12 = icmp sle i32 0, %12, !dbg !20116
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !20117

cond.true13:                                      ; preds = %if.then11
  %13 = load i32, i32* %fd.addr, align 4, !dbg !20118, !tbaa !2655
  %14 = load i32, i32* %owner.addr, align 4, !dbg !20119, !tbaa !2655
  %15 = load i32, i32* %group.addr, align 4, !dbg !20120, !tbaa !2655
  %call14 = call i32 @fchown(i32 %13, i32 %14, i32 %15) #9, !dbg !20121
  br label %cond.end23, !dbg !20117

cond.false15:                                     ; preds = %if.then11
  %16 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20122, !tbaa !2655
  %cmp16 = icmp ne i32 %16, -1, !dbg !20123
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !20122

cond.true17:                                      ; preds = %cond.false15
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !20124, !tbaa !2668
  %18 = load i32, i32* %owner.addr, align 4, !dbg !20125, !tbaa !2655
  %19 = load i32, i32* %group.addr, align 4, !dbg !20126, !tbaa !2655
  %call18 = call i32 @lchown(i8* %17, i32 %18, i32 %19) #9, !dbg !20127
  br label %cond.end21, !dbg !20122

cond.false19:                                     ; preds = %cond.false15
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !20128, !tbaa !2668
  %21 = load i32, i32* %owner.addr, align 4, !dbg !20129, !tbaa !2655
  %22 = load i32, i32* %group.addr, align 4, !dbg !20130, !tbaa !2655
  %call20 = call i32 @chown(i8* %20, i32 %21, i32 %22) #9, !dbg !20131
  br label %cond.end21, !dbg !20122

cond.end21:                                       ; preds = %cond.false19, %cond.true17
  %cond22 = phi i32 [ %call18, %cond.true17 ], [ %call20, %cond.false19 ], !dbg !20122
  br label %cond.end23, !dbg !20117

cond.end23:                                       ; preds = %cond.end21, %cond.true13
  %cond24 = phi i32 [ %call14, %cond.true13 ], [ %cond22, %cond.end21 ], !dbg !20117
  store i32 %cond24, i32* %result, align 4, !dbg !20132, !tbaa !2655
  %23 = load i32, i32* %result, align 4, !dbg !20133, !tbaa !2655
  %cmp25 = icmp eq i32 %23, 0, !dbg !20135
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !20136

land.lhs.true26:                                  ; preds = %cond.end23
  %24 = load i32, i32* %dir_mode, align 4, !dbg !20137, !tbaa !2655
  %and27 = and i32 %24, 73, !dbg !20138
  %tobool = icmp ne i32 %and27, 0, !dbg !20138
  br i1 %tobool, label %if.then28, label %if.end, !dbg !20139

if.then28:                                        ; preds = %land.lhs.true26
  %25 = load i32, i32* %dir_mode, align 4, !dbg !20140, !tbaa !2655
  %and29 = and i32 %25, 3072, !dbg !20141
  store i32 %and29, i32* %indeterminate, align 4, !dbg !20142, !tbaa !2655
  br label %if.end, !dbg !20143

if.end:                                           ; preds = %if.then28, %land.lhs.true26, %cond.end23
  br label %if.end30, !dbg !20144

if.end30:                                         ; preds = %if.end, %land.lhs.true9, %lor.lhs.false
  %26 = load i32, i32* %result, align 4, !dbg !20145, !tbaa !2655
  %cmp31 = icmp eq i32 %26, 0, !dbg !20147
  br i1 %cmp31, label %land.lhs.true32, label %if.end52, !dbg !20148

land.lhs.true32:                                  ; preds = %if.end30
  %27 = load i32, i32* %dir_mode, align 4, !dbg !20149, !tbaa !2655
  %28 = load i32, i32* %mode.addr, align 4, !dbg !20150, !tbaa !2655
  %xor = xor i32 %27, %28, !dbg !20151
  %29 = load i32, i32* %indeterminate, align 4, !dbg !20152, !tbaa !2655
  %or = or i32 %xor, %29, !dbg !20153
  %30 = load i32, i32* %mode_bits.addr, align 4, !dbg !20154, !tbaa !2655
  %and33 = and i32 %or, %30, !dbg !20155
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20155
  br i1 %tobool34, label %if.then35, label %if.end52, !dbg !20156

if.then35:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata i32* %chmod_mode, metadata !20157, metadata !DIExpression()), !dbg !20159
  %31 = load i32, i32* %mode.addr, align 4, !dbg !20160, !tbaa !2655
  %32 = load i32, i32* %dir_mode, align 4, !dbg !20161, !tbaa !2655
  %and36 = and i32 %32, 4095, !dbg !20162
  %33 = load i32, i32* %mode_bits.addr, align 4, !dbg !20163, !tbaa !2655
  %neg = xor i32 %33, -1, !dbg !20164
  %and37 = and i32 %and36, %neg, !dbg !20165
  %or38 = or i32 %31, %and37, !dbg !20166
  store i32 %or38, i32* %chmod_mode, align 4, !dbg !20159, !tbaa !2655
  %34 = load i32, i32* %fd.addr, align 4, !dbg !20167, !tbaa !2655
  %cmp39 = icmp sle i32 0, %34, !dbg !20168
  br i1 %cmp39, label %cond.true40, label %cond.false42, !dbg !20169

cond.true40:                                      ; preds = %if.then35
  %35 = load i32, i32* %fd.addr, align 4, !dbg !20170, !tbaa !2655
  %36 = load i32, i32* %chmod_mode, align 4, !dbg !20171, !tbaa !2655
  %call41 = call i32 @fchmod(i32 %35, i32 %36) #9, !dbg !20172
  br label %cond.end50, !dbg !20169

cond.false42:                                     ; preds = %if.then35
  %37 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20173, !tbaa !2655
  %cmp43 = icmp ne i32 %37, -1, !dbg !20174
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !20173

cond.true44:                                      ; preds = %cond.false42
  %38 = load i8*, i8** %dir.addr, align 8, !dbg !20175, !tbaa !2668
  %39 = load i32, i32* %chmod_mode, align 4, !dbg !20176, !tbaa !2655
  %call45 = call i32 @chmod(i8* %38, i32 %39) #9, !dbg !20177
  br label %cond.end48, !dbg !20173

cond.false46:                                     ; preds = %cond.false42
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !20178, !tbaa !2668
  %41 = load i32, i32* %chmod_mode, align 4, !dbg !20179, !tbaa !2655
  %call47 = call i32 @chmod(i8* %40, i32 %41) #9, !dbg !20180
  br label %cond.end48, !dbg !20173

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %call45, %cond.true44 ], [ %call47, %cond.false46 ], !dbg !20173
  br label %cond.end50, !dbg !20169

cond.end50:                                       ; preds = %cond.end48, %cond.true40
  %cond51 = phi i32 [ %call41, %cond.true40 ], [ %cond49, %cond.end48 ], !dbg !20169
  store i32 %cond51, i32* %result, align 4, !dbg !20181, !tbaa !2655
  br label %if.end52, !dbg !20182

if.end52:                                         ; preds = %cond.end50, %land.lhs.true32, %if.end30
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then4
  br label %if.end54, !dbg !20183

if.end54:                                         ; preds = %if.end53, %cond.end
  %42 = load i32, i32* %fd.addr, align 4, !dbg !20184, !tbaa !2655
  %cmp55 = icmp sle i32 0, %42, !dbg !20186
  br i1 %cmp55, label %if.then56, label %if.end65, !dbg !20187

if.then56:                                        ; preds = %if.end54
  %43 = load i32, i32* %result, align 4, !dbg !20188, !tbaa !2655
  %cmp57 = icmp eq i32 %43, 0, !dbg !20191
  br i1 %cmp57, label %if.then58, label %if.else60, !dbg !20192

if.then58:                                        ; preds = %if.then56
  %44 = load i32, i32* %fd.addr, align 4, !dbg !20193, !tbaa !2655
  %call59 = call i32 @close(i32 %44), !dbg !20194
  store i32 %call59, i32* %result, align 4, !dbg !20195, !tbaa !2655
  br label %if.end64, !dbg !20196

if.else60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20197, metadata !DIExpression()), !dbg !20199
  %call61 = call i32* @__errno_location() #16, !dbg !20200
  %45 = load i32, i32* %call61, align 4, !dbg !20200, !tbaa !2655, !ctir !5
  store i32 %45, i32* %e, align 4, !dbg !20199, !tbaa !2655
  %46 = load i32, i32* %fd.addr, align 4, !dbg !20201, !tbaa !2655
  %call62 = call i32 @close(i32 %46), !dbg !20202
  %47 = load i32, i32* %e, align 4, !dbg !20203, !tbaa !2655
  %call63 = call i32* @__errno_location() #16, !dbg !20204
  store i32 %47, i32* %call63, align 4, !dbg !20205, !tbaa !2655, !ctir !5
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then58
  br label %if.end65, !dbg !20206

if.end65:                                         ; preds = %if.end64, %if.end54
  %48 = load i32, i32* %result, align 4, !dbg !20207, !tbaa !2655
  ret i32 %48, !dbg !20208
}

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !20209 !ctir !2379 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %file.addr = alloca i8*, align 8, !ctir !177
  %flags.addr = alloca i32, align 4, !ctir !5
  %mode = alloca i32, align 4, !ctir !136
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2381
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20213, metadata !DIExpression()), !dbg !20214
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !20215, metadata !DIExpression()), !dbg !20216
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20217, metadata !DIExpression()), !dbg !20218
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !20219, metadata !DIExpression()), !dbg !20220
  store i32 0, i32* %mode, align 4, !dbg !20220, !tbaa !2655
  %0 = load i32, i32* %flags.addr, align 4, !dbg !20221, !tbaa !2655
  %and = and i32 %0, 64, !dbg !20223
  %tobool = icmp ne i32 %and, 0, !dbg !20223
  br i1 %tobool, label %if.then, label %if.end, !dbg !20224

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !20225, metadata !DIExpression()), !dbg !20227
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20228
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !20228
  call void @llvm.va_start(i8* %arraydecay1), !dbg !20228
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20229
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !20229
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !20229
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !20229
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !20229

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !20229
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !20229
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !20229
  %3 = bitcast i8* %2 to i32*, !dbg !20229
  %4 = add i32 %gp_offset, 8, !dbg !20229
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !20229
  br label %vaarg.end, !dbg !20229

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !20229
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !20229
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !20229
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !20229
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !20229
  br label %vaarg.end, !dbg !20229

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !20229
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !20229
  store i32 %6, i32* %mode, align 4, !dbg !20230, !tbaa !2655
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20231
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !20231
  call void @llvm.va_end(i8* %arraydecay34), !dbg !20231
  br label %if.end, !dbg !20232

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !20233, !tbaa !2655
  %8 = load i8*, i8** %file.addr, align 8, !dbg !20234, !tbaa !2668
  %9 = load i32, i32* %flags.addr, align 4, !dbg !20235, !tbaa !2655
  %10 = load i32, i32* %mode, align 4, !dbg !20236, !tbaa !2655
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !20237
  %call5 = call i32 @fd_safer(i32 %call), !dbg !20238
  ret i32 %call5, !dbg !20239
}

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !20240 !ctir !2393 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8, !ctir !2400
  %s = alloca %struct.randint_source*, align 8, !ctir !2395
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !20241, metadata !DIExpression()), !dbg !20242
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !20243, metadata !DIExpression()), !dbg !20244
  %call = call noalias i8* @xmalloc(i64 24), !dbg !20245
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !20245
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !20244, !tbaa !2668
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !20246, !tbaa !2668
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20247, !tbaa !2668
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !20248, !ctir !2396
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !20249, !tbaa !20250, !ctir !2400
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20252, !tbaa !2668
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !20253, !ctir !2396
  store i64 0, i64* %randmax, align 8, !dbg !20254, !tbaa !20255, !ctir !2404
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20256, !tbaa !2668
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !20257, !ctir !2396
  store i64 0, i64* %randnum, align 8, !dbg !20258, !tbaa !20259, !ctir !2404
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20260, !tbaa !2668
  ret %struct.randint_source* %5, !dbg !20261
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !20262 !ctir !2406 {
entry:
  %name.addr = alloca i8*, align 8, !ctir !177
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %source = alloca %struct.randread_source*, align 8, !ctir !2400
  %s = alloca %struct.randint_source*, align 8, !ctir !2395
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20263, metadata !DIExpression()), !dbg !20264
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20265, metadata !DIExpression()), !dbg !20266
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20267, metadata !DIExpression()), !dbg !20268
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20269, !tbaa !2668
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20270, !tbaa !3308
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !20271
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !20268, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !20272, metadata !DIExpression()), !dbg !20273
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20274, !tbaa !2668
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %2), !dbg !20275
  store %struct.randint_source* %call1, %struct.randint_source** %s, align 8, !dbg !20273, !tbaa !2668
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20276, !tbaa !2668
  %source2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 0, !dbg !20277, !ctir !2396
  %4 = load %struct.randread_source*, %struct.randread_source** %source2, align 8, !dbg !20277, !tbaa !20250, !ctir !2400
  call void @randread(%struct.randread_source* %4, i8* null, i64 30), !dbg !20278
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20279, !tbaa !2668
  ret %struct.randint_source* %5, !dbg !20280
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #10 !dbg !20281 !ctir !2408 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2410
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20282, metadata !DIExpression()), !dbg !20283
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20284, !tbaa !2668
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20285, !ctir !2411
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20285, !tbaa !20250, !ctir !2400
  ret %struct.randread_source* %1, !dbg !20286
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !20287 !ctir !2412 {
entry:
  %retval = alloca i64, align 8, !ctir !2404
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2395
  %genmax.addr = alloca i64, align 8, !ctir !2404
  %source = alloca %struct.randread_source*, align 8, !ctir !2400
  %randnum = alloca i64, align 8, !ctir !2404
  %randmax = alloca i64, align 8, !ctir !2404
  %choices = alloca i64, align 8, !ctir !2404
  %i = alloca i64, align 8, !ctir !52
  %rmax = alloca i64, align 8, !ctir !2404
  %buf = alloca [8 x i8], align 1, !ctir !2414
  %excess_choices = alloca i64, align 8, !ctir !2404
  %unusable_choices = alloca i64, align 8, !ctir !2404
  %last_usable_choice = alloca i64, align 8, !ctir !2404
  %reduced_randnum = alloca i64, align 8, !ctir !2404
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20288, metadata !DIExpression()), !dbg !20289
  store i64 %genmax, i64* %genmax.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !20290, metadata !DIExpression()), !dbg !20291
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20292, metadata !DIExpression()), !dbg !20293
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20294, !tbaa !2668
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20295, !ctir !2396
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !20295, !tbaa !20250, !ctir !2400
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !20293, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !20296, metadata !DIExpression()), !dbg !20297
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20298, !tbaa !2668
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !20299, !ctir !2396
  %3 = load i64, i64* %randnum2, align 8, !dbg !20299, !tbaa !20259, !ctir !2404
  store i64 %3, i64* %randnum, align 8, !dbg !20297, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !20300, metadata !DIExpression()), !dbg !20301
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20302, !tbaa !2668
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !20303, !ctir !2396
  %5 = load i64, i64* %randmax3, align 8, !dbg !20303, !tbaa !20255, !ctir !2404
  store i64 %5, i64* %randmax, align 8, !dbg !20301, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !20304, metadata !DIExpression()), !dbg !20305
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !20306, !tbaa !3308
  %add = add i64 %6, 1, !dbg !20307
  store i64 %add, i64* %choices, align 8, !dbg !20305, !tbaa !3308
  br label %while.body, !dbg !20308

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !20309, !tbaa !3308
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !20312, !tbaa !3308
  %cmp = icmp ult i64 %7, %8, !dbg !20313
  br i1 %cmp, label %if.then, label %if.end, !dbg !20314

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20315, metadata !DIExpression()), !dbg !20317
  store i64 0, i64* %i, align 8, !dbg !20317, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !20318, metadata !DIExpression()), !dbg !20319
  %9 = load i64, i64* %randmax, align 8, !dbg !20320, !tbaa !3308
  store i64 %9, i64* %rmax, align 8, !dbg !20319, !tbaa !3308
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !20321, metadata !DIExpression()), !dbg !20322
  br label %do.body, !dbg !20323

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !20324, !tbaa !3308
  %call = call i64 @shift_left(i64 %10), !dbg !20326
  %add4 = add i64 %call, 255, !dbg !20327
  store i64 %add4, i64* %rmax, align 8, !dbg !20328, !tbaa !3308
  %11 = load i64, i64* %i, align 8, !dbg !20329, !tbaa !3308
  %inc = add i64 %11, 1, !dbg !20329
  store i64 %inc, i64* %i, align 8, !dbg !20329, !tbaa !3308
  br label %do.cond, !dbg !20330

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !20331, !tbaa !3308
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !20332, !tbaa !3308
  %cmp5 = icmp ult i64 %12, %13, !dbg !20333
  br i1 %cmp5, label %do.body, label %do.end, !dbg !20330, !llvm.loop !20334

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20336, !tbaa !2668
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !20337
  %15 = load i64, i64* %i, align 8, !dbg !20338, !tbaa !3308
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !20339
  store i64 0, i64* %i, align 8, !dbg !20340, !tbaa !3308
  br label %do.body6, !dbg !20341

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !20342, !tbaa !3308
  %call7 = call i64 @shift_left(i64 %16), !dbg !20344
  %17 = load i64, i64* %i, align 8, !dbg !20345, !tbaa !3308
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !20346, !ctir !2414
  %18 = load i8, i8* %arrayidx, align 1, !dbg !20346, !tbaa !3315
  %conv = zext i8 %18 to i64, !dbg !20346
  %add8 = add i64 %call7, %conv, !dbg !20347
  store i64 %add8, i64* %randnum, align 8, !dbg !20348, !tbaa !3308
  %19 = load i64, i64* %randmax, align 8, !dbg !20349, !tbaa !3308
  %call9 = call i64 @shift_left(i64 %19), !dbg !20350
  %add10 = add i64 %call9, 255, !dbg !20351
  store i64 %add10, i64* %randmax, align 8, !dbg !20352, !tbaa !3308
  %20 = load i64, i64* %i, align 8, !dbg !20353, !tbaa !3308
  %inc11 = add i64 %20, 1, !dbg !20353
  store i64 %inc11, i64* %i, align 8, !dbg !20353, !tbaa !3308
  br label %do.cond12, !dbg !20354

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !20355, !tbaa !3308
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !20356, !tbaa !3308
  %cmp13 = icmp ult i64 %21, %22, !dbg !20357
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !20354, !llvm.loop !20358

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !20360

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !20361, !tbaa !3308
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !20363, !tbaa !3308
  %cmp16 = icmp eq i64 %23, %24, !dbg !20364
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !20365

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20366, !tbaa !2668
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !20368, !ctir !2396
  store i64 0, i64* %randmax19, align 8, !dbg !20369, !tbaa !20255, !ctir !2404
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20370, !tbaa !2668
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !20371, !ctir !2396
  store i64 0, i64* %randnum20, align 8, !dbg !20372, !tbaa !20259, !ctir !2404
  %27 = load i64, i64* %randnum, align 8, !dbg !20373, !tbaa !3308
  store i64 %27, i64* %retval, align 8, !dbg !20374
  br label %return, !dbg !20374

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !20375, metadata !DIExpression()), !dbg !20377
  %28 = load i64, i64* %randmax, align 8, !dbg !20378, !tbaa !3308
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !20379, !tbaa !3308
  %sub = sub i64 %28, %29, !dbg !20380
  store i64 %sub, i64* %excess_choices, align 8, !dbg !20377, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !20381, metadata !DIExpression()), !dbg !20382
  %30 = load i64, i64* %excess_choices, align 8, !dbg !20383, !tbaa !3308
  %31 = load i64, i64* %choices, align 8, !dbg !20384, !tbaa !3308
  %rem = urem i64 %30, %31, !dbg !20385
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !20382, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !20386, metadata !DIExpression()), !dbg !20387
  %32 = load i64, i64* %randmax, align 8, !dbg !20388, !tbaa !3308
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !20389, !tbaa !3308
  %sub21 = sub i64 %32, %33, !dbg !20390
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !20387, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !20391, metadata !DIExpression()), !dbg !20392
  %34 = load i64, i64* %randnum, align 8, !dbg !20393, !tbaa !3308
  %35 = load i64, i64* %choices, align 8, !dbg !20394, !tbaa !3308
  %rem22 = urem i64 %34, %35, !dbg !20395
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !20392, !tbaa !3308
  %36 = load i64, i64* %randnum, align 8, !dbg !20396, !tbaa !3308
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !20398, !tbaa !3308
  %cmp23 = icmp ule i64 %36, %37, !dbg !20399
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !20400

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !20401, !tbaa !3308
  %39 = load i64, i64* %choices, align 8, !dbg !20403, !tbaa !3308
  %div = udiv i64 %38, %39, !dbg !20404
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20405, !tbaa !2668
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !20406, !ctir !2396
  store i64 %div, i64* %randnum26, align 8, !dbg !20407, !tbaa !20259, !ctir !2404
  %41 = load i64, i64* %excess_choices, align 8, !dbg !20408, !tbaa !3308
  %42 = load i64, i64* %choices, align 8, !dbg !20409, !tbaa !3308
  %div27 = udiv i64 %41, %42, !dbg !20410
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20411, !tbaa !2668
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !20412, !ctir !2396
  store i64 %div27, i64* %randmax28, align 8, !dbg !20413, !tbaa !20255, !ctir !2404
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !20414, !tbaa !3308
  store i64 %44, i64* %retval, align 8, !dbg !20415
  br label %return, !dbg !20415

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !20416, !tbaa !3308
  store i64 %45, i64* %randnum, align 8, !dbg !20417, !tbaa !3308
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !20418, !tbaa !3308
  %sub30 = sub i64 %46, 1, !dbg !20419
  store i64 %sub30, i64* %randmax, align 8, !dbg !20420, !tbaa !3308
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !20308, !llvm.loop !20421

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !20423
  ret i64 %47, !dbg !20423
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !20424 !ctir !2419 {
entry:
  %x.addr = alloca i64, align 8, !ctir !2404
  store i64 %x, i64* %x.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20425, metadata !DIExpression()), !dbg !20426
  %0 = load i64, i64* %x.addr, align 8, !dbg !20427, !tbaa !3308
  %shl = shl i64 %0, 8, !dbg !20428
  ret i64 %shl, !dbg !20429
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !20430 !ctir !2415 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2395
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20431, metadata !DIExpression()), !dbg !20432
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20433, !tbaa !2668
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !20433
  call void @explicit_bzero(i8* %1, i64 24), !dbg !20434
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20435, !tbaa !2668
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !20435
  call void @free(i8* %3) #9, !dbg !20436
  ret void, !dbg !20437
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !20438 !ctir !2417 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8, !ctir !2395
  %r = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20439, metadata !DIExpression()), !dbg !20440
  call void @llvm.dbg.declare(metadata i32* %r, metadata !20441, metadata !DIExpression()), !dbg !20442
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20443, !tbaa !2668
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20444, !ctir !2396
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20444, !tbaa !20250, !ctir !2400
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !20445
  store i32 %call, i32* %r, align 4, !dbg !20442, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20446, metadata !DIExpression()), !dbg !20447
  %call1 = call i32* @__errno_location() #16, !dbg !20448
  %2 = load i32, i32* %call1, align 4, !dbg !20448, !tbaa !2655, !ctir !5
  store i32 %2, i32* %e, align 4, !dbg !20447, !tbaa !2655
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20449, !tbaa !2668
  call void @randint_free(%struct.randint_source* %3), !dbg !20450
  %4 = load i32, i32* %e, align 4, !dbg !20451, !tbaa !2655
  %call2 = call i32* @__errno_location() #16, !dbg !20452
  store i32 %4, i32* %call2, align 4, !dbg !20453, !tbaa !2655, !ctir !5
  %5 = load i32, i32* %r, align 4, !dbg !20454, !tbaa !2655
  ret i32 %5, !dbg !20455
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !20456 !ctir !2424 {
entry:
  %retval = alloca %struct.randread_source*, align 8, !ctir !2426
  %name.addr = alloca i8*, align 8, !ctir !177
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2431
  %s = alloca %struct.randread_source*, align 8, !ctir !2426
  store i8* %name, i8** %name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20457, metadata !DIExpression()), !dbg !20458
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20459, metadata !DIExpression()), !dbg !20460
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20461, !tbaa !3308
  %cmp = icmp eq i64 %0, 0, !dbg !20463
  br i1 %cmp, label %if.then, label %if.else, !dbg !20464

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !20465
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !20466
  br label %return, !dbg !20466

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !20467, metadata !DIExpression()), !dbg !20469
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !20469, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !20470, metadata !DIExpression()), !dbg !20471
  %1 = load i8*, i8** %name.addr, align 8, !dbg !20472, !tbaa !2668
  %tobool = icmp ne i8* %1, null, !dbg !20472
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !20474

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !20475, !tbaa !2668
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.520, i64 0, i64 0)), !dbg !20477
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !20478, !tbaa !2668
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !20478
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !20479

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !20480
  br label %return, !dbg !20480

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !20481

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20482, !tbaa !2668
  %4 = load i8*, i8** %name.addr, align 8, !dbg !20483, !tbaa !2668
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !20484
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !20485, !tbaa !2668
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20486, !tbaa !2668
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !20486
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !20488

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20489, !tbaa !2668
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20490, !tbaa !2668
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !20491, !ctir !2427
  %c = bitcast %union.anon.87* %buf to [4096 x i8]*, !dbg !20492
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !20490
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20493, !tbaa !3308
  %cmp9 = icmp ult i64 4096, %8, !dbg !20493
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !20493

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !20493

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20493, !tbaa !3308
  br label %cond.end, !dbg !20493

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !20493
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #9, !dbg !20494
  br label %if.end19, !dbg !20494

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20495, !tbaa !2668
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !20497, !ctir !2427
  %isaac = bitcast %union.anon.87* %buf12 to %struct.isaac*, !dbg !20498
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !20499, !ctir !2481
  store i64 0, i64* %buffered, align 8, !dbg !20500, !tbaa !3315, !ctir !52
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20501, !tbaa !2668
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !20502, !ctir !2427
  %isaac14 = bitcast %union.anon.87* %buf13 to %struct.isaac*, !dbg !20503
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !20504, !ctir !2481
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !20505, !ctir !2485
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !20501
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !20501
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20506, !tbaa !3308
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !20507
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20508, !tbaa !2668
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !20509, !ctir !2427
  %isaac17 = bitcast %union.anon.87* %buf16 to %struct.isaac*, !dbg !20510
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !20511, !ctir !2481
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !20512
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20513, !tbaa !2668
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !20514
  br label %return, !dbg !20514

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !20515
  ret %struct.randread_source* %16, !dbg !20515
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !20516 !ctir !2511 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8, !ctir !2431
  %handler_arg.addr = alloca i8*, align 8, !ctir !525
  %s = alloca %struct.randread_source*, align 8, !ctir !2426
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !20517, metadata !DIExpression()), !dbg !20518
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !20519, metadata !DIExpression()), !dbg !20520
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !20521, metadata !DIExpression()), !dbg !20522
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !20523
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !20523
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !20522, !tbaa !2668
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !20524, !tbaa !2668
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20525, !tbaa !2668
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !20526, !ctir !2427
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !20527, !tbaa !20528, !ctir !2431
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20530, !tbaa !2668
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !20531, !ctir !2427
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !20532, !tbaa !20533, !ctir !2472
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !20534, !tbaa !2668
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20535, !tbaa !2668
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !20536, !ctir !2427
  store i8* %4, i8** %handler_arg2, align 8, !dbg !20537, !tbaa !20538, !ctir !525
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !20539, !tbaa !2668
  ret %struct.randread_source* %6, !dbg !20540
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !20541 !ctir !2513 {
entry:
  %buffer.addr = alloca i8*, align 8, !ctir !47
  %bufsize.addr = alloca i64, align 8, !ctir !52
  %bytes_bound.addr = alloca i64, align 8, !ctir !52
  %buf = alloca i8*, align 8, !ctir !7
  %seeded = alloca i64, align 8, !ctir !674
  %fd = alloca i32, align 4, !ctir !5
  %v = alloca %struct.timespec, align 8, !ctir !20542
  %nbytes = alloca i64, align 8, !ctir !52
  %v19 = alloca i32, align 4, !ctir !108
  %nbytes20 = alloca i64, align 8, !ctir !52
  %v34 = alloca i32, align 4, !ctir !108
  %nbytes35 = alloca i64, align 8, !ctir !52
  %v49 = alloca i32, align 4, !ctir !124
  %nbytes50 = alloca i64, align 8, !ctir !52
  %v64 = alloca i32, align 4, !ctir !124
  %nbytes65 = alloca i64, align 8, !ctir !52
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !20546, metadata !DIExpression()), !dbg !20547
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !20548, metadata !DIExpression()), !dbg !20549
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20550, metadata !DIExpression()), !dbg !20551
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !20552, metadata !DIExpression()), !dbg !20553
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !20554, !tbaa !2668
  store i8* %0, i8** %buf, align 8, !dbg !20553, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !20555, metadata !DIExpression()), !dbg !20556
  store i64 0, i64* %seeded, align 8, !dbg !20556, !tbaa !3308
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !20557, metadata !DIExpression()), !dbg !20558
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.521, i64 0, i64 0), i32 0), !dbg !20559
  store i32 %call, i32* %fd, align 4, !dbg !20558, !tbaa !2655
  %1 = load i32, i32* %fd, align 4, !dbg !20560, !tbaa !2655
  %cmp = icmp sle i32 0, %1, !dbg !20562
  br i1 %cmp, label %if.then, label %if.end6, !dbg !20563

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !20564, !tbaa !2655
  %3 = load i8*, i8** %buf, align 8, !dbg !20566, !tbaa !2668
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !20567, !tbaa !3308
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20567, !tbaa !3308
  %cmp1 = icmp ult i64 %4, %5, !dbg !20567
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !20567

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !20567, !tbaa !3308
  br label %cond.end, !dbg !20567

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20567, !tbaa !3308
  br label %cond.end, !dbg !20567

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !20567
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !20568
  store i64 %call2, i64* %seeded, align 8, !dbg !20569, !tbaa !3308
  %8 = load i64, i64* %seeded, align 8, !dbg !20570, !tbaa !3308
  %cmp3 = icmp slt i64 %8, 0, !dbg !20572
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !20573

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !20574, !tbaa !3308
  br label %if.end, !dbg !20575

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !20576, !tbaa !2655
  %call5 = call i32 @close(i32 %9), !dbg !20577
  br label %if.end6, !dbg !20578

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !20579, !tbaa !3308
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !20579, !tbaa !3308
  %cmp7 = icmp ult i64 %10, %11, !dbg !20579
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !20581

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !20582, metadata !DIExpression()), !dbg !20584
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !20585, metadata !DIExpression()), !dbg !20584
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !20584, !tbaa !3308
  %13 = load i64, i64* %seeded, align 8, !dbg !20584, !tbaa !3308
  %sub = sub i64 %12, %13, !dbg !20584
  %cmp9 = icmp ult i64 16, %sub, !dbg !20584
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !20584

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !20584

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !20584, !tbaa !3308
  %15 = load i64, i64* %seeded, align 8, !dbg !20584, !tbaa !3308
  %sub12 = sub i64 %14, %15, !dbg !20584
  br label %cond.end13, !dbg !20584

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !20584
  store i64 %cond14, i64* %nbytes, align 8, !dbg !20584, !tbaa !3308
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #9, !dbg !20584
  %16 = load i8*, i8** %buf, align 8, !dbg !20584, !tbaa !2668
  %17 = load i64, i64* %seeded, align 8, !dbg !20584, !tbaa !3308
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !20584
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !20584
  %19 = load i64, i64* %nbytes, align 8, !dbg !20584, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !20584
  %20 = load i64, i64* %nbytes, align 8, !dbg !20584, !tbaa !3308
  %21 = load i64, i64* %seeded, align 8, !dbg !20584, !tbaa !3308
  %add = add i64 %21, %20, !dbg !20584
  store i64 %add, i64* %seeded, align 8, !dbg !20584, !tbaa !3308
  br label %if.end16, !dbg !20584

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !20586, !tbaa !3308
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !20586, !tbaa !3308
  %cmp17 = icmp ult i64 %22, %23, !dbg !20586
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !20588

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !20589, metadata !DIExpression()), !dbg !20591
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !20592, metadata !DIExpression()), !dbg !20591
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !20591, !tbaa !3308
  %25 = load i64, i64* %seeded, align 8, !dbg !20591, !tbaa !3308
  %sub21 = sub i64 %24, %25, !dbg !20591
  %cmp22 = icmp ult i64 4, %sub21, !dbg !20591
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !20591

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !20591

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !20591, !tbaa !3308
  %27 = load i64, i64* %seeded, align 8, !dbg !20591, !tbaa !3308
  %sub25 = sub i64 %26, %27, !dbg !20591
  br label %cond.end26, !dbg !20591

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !20591
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !20591, !tbaa !3308
  %call28 = call i32 @getpid() #9, !dbg !20591
  store i32 %call28, i32* %v19, align 4, !dbg !20591, !tbaa !2655
  %28 = load i8*, i8** %buf, align 8, !dbg !20591, !tbaa !2668
  %29 = load i64, i64* %seeded, align 8, !dbg !20591, !tbaa !3308
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !20591
  %30 = bitcast i32* %v19 to i8*, !dbg !20591
  %31 = load i64, i64* %nbytes20, align 8, !dbg !20591, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !20591
  %32 = load i64, i64* %nbytes20, align 8, !dbg !20591, !tbaa !3308
  %33 = load i64, i64* %seeded, align 8, !dbg !20591, !tbaa !3308
  %add30 = add i64 %33, %32, !dbg !20591
  store i64 %add30, i64* %seeded, align 8, !dbg !20591, !tbaa !3308
  br label %if.end31, !dbg !20591

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !20593, !tbaa !3308
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !20593, !tbaa !3308
  %cmp32 = icmp ult i64 %34, %35, !dbg !20593
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !20595

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !20596, metadata !DIExpression()), !dbg !20598
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !20599, metadata !DIExpression()), !dbg !20598
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !20598, !tbaa !3308
  %37 = load i64, i64* %seeded, align 8, !dbg !20598, !tbaa !3308
  %sub36 = sub i64 %36, %37, !dbg !20598
  %cmp37 = icmp ult i64 4, %sub36, !dbg !20598
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !20598

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !20598

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !20598, !tbaa !3308
  %39 = load i64, i64* %seeded, align 8, !dbg !20598, !tbaa !3308
  %sub40 = sub i64 %38, %39, !dbg !20598
  br label %cond.end41, !dbg !20598

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !20598
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !20598, !tbaa !3308
  %call43 = call i32 @getppid() #9, !dbg !20598
  store i32 %call43, i32* %v34, align 4, !dbg !20598, !tbaa !2655
  %40 = load i8*, i8** %buf, align 8, !dbg !20598, !tbaa !2668
  %41 = load i64, i64* %seeded, align 8, !dbg !20598, !tbaa !3308
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !20598
  %42 = bitcast i32* %v34 to i8*, !dbg !20598
  %43 = load i64, i64* %nbytes35, align 8, !dbg !20598, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !20598
  %44 = load i64, i64* %nbytes35, align 8, !dbg !20598, !tbaa !3308
  %45 = load i64, i64* %seeded, align 8, !dbg !20598, !tbaa !3308
  %add45 = add i64 %45, %44, !dbg !20598
  store i64 %add45, i64* %seeded, align 8, !dbg !20598, !tbaa !3308
  br label %if.end46, !dbg !20598

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !20600, !tbaa !3308
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !20600, !tbaa !3308
  %cmp47 = icmp ult i64 %46, %47, !dbg !20600
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !20602

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !20603, metadata !DIExpression()), !dbg !20605
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !20606, metadata !DIExpression()), !dbg !20605
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !20605, !tbaa !3308
  %49 = load i64, i64* %seeded, align 8, !dbg !20605, !tbaa !3308
  %sub51 = sub i64 %48, %49, !dbg !20605
  %cmp52 = icmp ult i64 4, %sub51, !dbg !20605
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !20605

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !20605

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !20605, !tbaa !3308
  %51 = load i64, i64* %seeded, align 8, !dbg !20605, !tbaa !3308
  %sub55 = sub i64 %50, %51, !dbg !20605
  br label %cond.end56, !dbg !20605

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !20605
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !20605, !tbaa !3308
  %call58 = call i32 @getuid() #9, !dbg !20605
  store i32 %call58, i32* %v49, align 4, !dbg !20605, !tbaa !2655
  %52 = load i8*, i8** %buf, align 8, !dbg !20605, !tbaa !2668
  %53 = load i64, i64* %seeded, align 8, !dbg !20605, !tbaa !3308
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !20605
  %54 = bitcast i32* %v49 to i8*, !dbg !20605
  %55 = load i64, i64* %nbytes50, align 8, !dbg !20605, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !20605
  %56 = load i64, i64* %nbytes50, align 8, !dbg !20605, !tbaa !3308
  %57 = load i64, i64* %seeded, align 8, !dbg !20605, !tbaa !3308
  %add60 = add i64 %57, %56, !dbg !20605
  store i64 %add60, i64* %seeded, align 8, !dbg !20605, !tbaa !3308
  br label %if.end61, !dbg !20605

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !20607, !tbaa !3308
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !20607, !tbaa !3308
  %cmp62 = icmp ult i64 %58, %59, !dbg !20607
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !20609

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !20610, metadata !DIExpression()), !dbg !20612
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !20613, metadata !DIExpression()), !dbg !20612
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !20612, !tbaa !3308
  %61 = load i64, i64* %seeded, align 8, !dbg !20612, !tbaa !3308
  %sub66 = sub i64 %60, %61, !dbg !20612
  %cmp67 = icmp ult i64 4, %sub66, !dbg !20612
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !20612

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !20612

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !20612, !tbaa !3308
  %63 = load i64, i64* %seeded, align 8, !dbg !20612, !tbaa !3308
  %sub70 = sub i64 %62, %63, !dbg !20612
  br label %cond.end71, !dbg !20612

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !20612
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !20612, !tbaa !3308
  %call73 = call i32 @getgid() #9, !dbg !20612
  store i32 %call73, i32* %v64, align 4, !dbg !20612, !tbaa !2655
  %64 = load i8*, i8** %buf, align 8, !dbg !20612, !tbaa !2668
  %65 = load i64, i64* %seeded, align 8, !dbg !20612, !tbaa !3308
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !20612
  %66 = bitcast i32* %v64 to i8*, !dbg !20612
  %67 = load i64, i64* %nbytes65, align 8, !dbg !20612, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !20612
  %68 = load i64, i64* %nbytes65, align 8, !dbg !20612, !tbaa !3308
  %69 = load i64, i64* %seeded, align 8, !dbg !20612, !tbaa !3308
  %add75 = add i64 %69, %68, !dbg !20612
  store i64 %add75, i64* %seeded, align 8, !dbg !20612, !tbaa !3308
  br label %if.end76, !dbg !20612

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !20614
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !20615 !ctir !2473 {
entry:
  %file_name.addr = alloca i8*, align 8, !ctir !525
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !20616, metadata !DIExpression()), !dbg !20617
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !20618, !tbaa !2668
  %tobool = icmp ne i8* %0, null, !dbg !20618
  br i1 %tobool, label %if.then, label %if.end, !dbg !20620

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !20621, !tbaa !2655
  %call = call i32* @__errno_location() #16, !dbg !20622
  %2 = load i32, i32* %call, align 4, !dbg !20622, !tbaa !2655, !ctir !5
  %call1 = call i32* @__errno_location() #16, !dbg !20623
  %3 = load i32, i32* %call1, align 4, !dbg !20623, !tbaa !2655, !ctir !5
  %cmp = icmp eq i32 %3, 0, !dbg !20624
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20623

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.522, i64 0, i64 0)) #9, !dbg !20625
  br label %cond.end, !dbg !20623

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.523, i64 0, i64 0)) #9, !dbg !20626
  br label %cond.end, !dbg !20623

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !20623
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !20627, !tbaa !2668
  %call4 = call i8* @quote(i8* %4), !dbg !20628
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !20629
  br label %if.end, !dbg !20629

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !20630
  unreachable, !dbg !20630
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !20631 !ctir !2503 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2426
  %handler.addr = alloca void (i8*)*, align 8, !ctir !2472
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20632, metadata !DIExpression()), !dbg !20633
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !20634, metadata !DIExpression()), !dbg !20635
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !20636, !tbaa !2668
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20637, !tbaa !2668
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !20638, !ctir !2427
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !20639, !tbaa !20533, !ctir !2472
  ret void, !dbg !20640
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !20641 !ctir !2505 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2426
  %handler_arg.addr = alloca i8*, align 8, !ctir !525
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20642, metadata !DIExpression()), !dbg !20643
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !20644, metadata !DIExpression()), !dbg !20645
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !20646, !tbaa !2668
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20647, !tbaa !2668
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !20648, !ctir !2427
  store i8* %0, i8** %handler_arg1, align 8, !dbg !20649, !tbaa !20538, !ctir !525
  ret void, !dbg !20650
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !20651 !ctir !2507 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2426
  %buf.addr = alloca i8*, align 8, !ctir !47
  %size.addr = alloca i64, align 8, !ctir !52
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20652, metadata !DIExpression()), !dbg !20653
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !20654, metadata !DIExpression()), !dbg !20655
  store i64 %size, i64* %size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20656, metadata !DIExpression()), !dbg !20657
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20658, !tbaa !2668
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !20660, !ctir !2427
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20660, !tbaa !20528, !ctir !2431
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !20658
  br i1 %tobool, label %if.then, label %if.else, !dbg !20661

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20662, !tbaa !2668
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !20663, !tbaa !2668
  %4 = load i64, i64* %size.addr, align 8, !dbg !20664, !tbaa !3308
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !20665
  br label %if.end, !dbg !20665

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20666, !tbaa !2668
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !20667, !ctir !2427
  %isaac = bitcast %union.anon.87* %buf1 to %struct.isaac*, !dbg !20668
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !20669, !tbaa !2668
  %7 = load i64, i64* %size.addr, align 8, !dbg !20670, !tbaa !3308
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !20671
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !20672
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !20673 !ctir !2515 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2426
  %p.addr = alloca i8*, align 8, !ctir !2517
  %size.addr = alloca i64, align 8, !ctir !52
  %inbytes = alloca i64, align 8, !ctir !52
  %fread_errno = alloca i32, align 4, !ctir !5
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20674, metadata !DIExpression()), !dbg !20675
  store i8* %p, i8** %p.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !20676, metadata !DIExpression()), !dbg !20677
  store i64 %size, i64* %size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20678, metadata !DIExpression()), !dbg !20679
  br label %while.body, !dbg !20680

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !20681, metadata !DIExpression()), !dbg !20683
  %0 = load i8*, i8** %p.addr, align 8, !dbg !20684, !tbaa !2668
  %1 = load i64, i64* %size.addr, align 8, !dbg !20684, !tbaa !3308
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20684, !tbaa !2668
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !20684, !ctir !2427
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20684, !tbaa !20528, !ctir !2431
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !20684
  store i64 %call, i64* %inbytes, align 8, !dbg !20683, !tbaa !3308
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !20685, metadata !DIExpression()), !dbg !20686
  %call1 = call i32* @__errno_location() #16, !dbg !20687
  %4 = load i32, i32* %call1, align 4, !dbg !20687, !tbaa !2655, !ctir !5
  store i32 %4, i32* %fread_errno, align 4, !dbg !20686, !tbaa !2655
  %5 = load i64, i64* %inbytes, align 8, !dbg !20688, !tbaa !3308
  %6 = load i8*, i8** %p.addr, align 8, !dbg !20689, !tbaa !2668
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !20689
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !20689, !tbaa !2668
  %7 = load i64, i64* %inbytes, align 8, !dbg !20690, !tbaa !3308
  %8 = load i64, i64* %size.addr, align 8, !dbg !20691, !tbaa !3308
  %sub = sub i64 %8, %7, !dbg !20691
  store i64 %sub, i64* %size.addr, align 8, !dbg !20691, !tbaa !3308
  %9 = load i64, i64* %size.addr, align 8, !dbg !20692, !tbaa !3308
  %cmp = icmp eq i64 %9, 0, !dbg !20694
  br i1 %cmp, label %if.then, label %if.end, !dbg !20695

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !20696

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20697, !tbaa !2668
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !20697, !ctir !2427
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !20697, !tbaa !20528, !ctir !2431
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #9, !dbg !20697
  %tobool = icmp ne i32 %call3, 0, !dbg !20697
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20697

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !20698, !tbaa !2655
  br label %cond.end, !dbg !20697

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !20697

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !20697
  %call4 = call i32* @__errno_location() #16, !dbg !20699
  store i32 %cond, i32* %call4, align 4, !dbg !20700, !tbaa !2655, !ctir !5
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20701, !tbaa !2668
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !20702, !ctir !2427
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !20702, !tbaa !20533, !ctir !2472
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20703, !tbaa !2668
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !20704, !ctir !2427
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !20704, !tbaa !20538, !ctir !525
  call void %14(i8* %16), !dbg !20701
  br label %while.body, !dbg !20680, !llvm.loop !20705

while.end:                                        ; preds = %if.then
  ret void, !dbg !20707
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !20708 !ctir !2518 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8, !ctir !2520
  %p.addr = alloca i8*, align 8, !ctir !47
  %size.addr = alloca i64, align 8, !ctir !52
  %inbytes = alloca i64, align 8, !ctir !52
  %char_p = alloca i8*, align 8, !ctir !7
  %wp = alloca i64*, align 8, !ctir !2521
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !20709, metadata !DIExpression()), !dbg !20710
  store i8* %p, i8** %p.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !20711, metadata !DIExpression()), !dbg !20712
  store i64 %size, i64* %size.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !20713, metadata !DIExpression()), !dbg !20714
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !20715, metadata !DIExpression()), !dbg !20716
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20717, !tbaa !2668
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !20718, !ctir !2481
  %1 = load i64, i64* %buffered, align 8, !dbg !20718, !tbaa !20719, !ctir !52
  store i64 %1, i64* %inbytes, align 8, !dbg !20716, !tbaa !3308
  br label %while.body, !dbg !20722

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !20723, metadata !DIExpression()), !dbg !20725
  %2 = load i8*, i8** %p.addr, align 8, !dbg !20726, !tbaa !2668
  store i8* %2, i8** %char_p, align 8, !dbg !20725, !tbaa !2668
  %3 = load i64, i64* %size.addr, align 8, !dbg !20727, !tbaa !3308
  %4 = load i64, i64* %inbytes, align 8, !dbg !20729, !tbaa !3308
  %cmp = icmp ule i64 %3, %4, !dbg !20730
  br i1 %cmp, label %if.then, label %if.end, !dbg !20731

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !20732, !tbaa !2668
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20734, !tbaa !2668
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !20735, !ctir !2481
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !20736
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !20734
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !20737
  %7 = load i64, i64* %inbytes, align 8, !dbg !20738, !tbaa !3308
  %idx.neg = sub i64 0, %7, !dbg !20739
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !20739
  %8 = load i64, i64* %size.addr, align 8, !dbg !20740, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !20741
  %9 = load i64, i64* %inbytes, align 8, !dbg !20742, !tbaa !3308
  %10 = load i64, i64* %size.addr, align 8, !dbg !20743, !tbaa !3308
  %sub = sub i64 %9, %10, !dbg !20744
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20745, !tbaa !2668
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !20746, !ctir !2481
  store i64 %sub, i64* %buffered2, align 8, !dbg !20747, !tbaa !20719, !ctir !52
  br label %return, !dbg !20748

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !20749, !tbaa !2668
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20750, !tbaa !2668
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !20751, !ctir !2481
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !20752
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !20750
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !20753
  %14 = load i64, i64* %inbytes, align 8, !dbg !20754, !tbaa !3308
  %idx.neg7 = sub i64 0, %14, !dbg !20755
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !20755
  %15 = load i64, i64* %inbytes, align 8, !dbg !20756, !tbaa !3308
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !20757
  %16 = load i8*, i8** %char_p, align 8, !dbg !20758, !tbaa !2668
  %17 = load i64, i64* %inbytes, align 8, !dbg !20759, !tbaa !3308
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !20760
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !20761, !tbaa !2668
  %18 = load i64, i64* %inbytes, align 8, !dbg !20762, !tbaa !3308
  %19 = load i64, i64* %size.addr, align 8, !dbg !20763, !tbaa !3308
  %sub10 = sub i64 %19, %18, !dbg !20763
  store i64 %sub10, i64* %size.addr, align 8, !dbg !20763, !tbaa !3308
  %20 = load i8*, i8** %p.addr, align 8, !dbg !20764, !tbaa !2668
  %21 = ptrtoint i8* %20 to i64, !dbg !20764
  %rem = urem i64 %21, 8, !dbg !20764
  %cmp11 = icmp eq i64 %rem, 0, !dbg !20764
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !20766

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !20767, metadata !DIExpression()), !dbg !20769
  %22 = load i8*, i8** %p.addr, align 8, !dbg !20770, !tbaa !2668
  %23 = bitcast i8* %22 to i64*, !dbg !20770
  store i64* %23, i64** %wp, align 8, !dbg !20769, !tbaa !2668
  br label %while.cond13, !dbg !20771

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !20772, !tbaa !3308
  %cmp14 = icmp ule i64 2048, %24, !dbg !20773
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !20771

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20774, !tbaa !2668
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !20776, !ctir !2481
  %26 = load i64*, i64** %wp, align 8, !dbg !20777, !tbaa !2668
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !20778
  %27 = load i64*, i64** %wp, align 8, !dbg !20779, !tbaa !2668
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !20779
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !20779, !tbaa !2668
  %28 = load i64, i64* %size.addr, align 8, !dbg !20780, !tbaa !3308
  %sub17 = sub i64 %28, 2048, !dbg !20780
  store i64 %sub17, i64* %size.addr, align 8, !dbg !20780, !tbaa !3308
  %29 = load i64, i64* %size.addr, align 8, !dbg !20781, !tbaa !3308
  %cmp18 = icmp eq i64 %29, 0, !dbg !20783
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !20784

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20785, !tbaa !2668
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !20787, !ctir !2481
  store i64 0, i64* %buffered20, align 8, !dbg !20788, !tbaa !20719, !ctir !52
  br label %return, !dbg !20789

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !20771, !llvm.loop !20790

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !20792, !tbaa !2668
  %32 = bitcast i64* %31 to i8*, !dbg !20792
  store i8* %32, i8** %p.addr, align 8, !dbg !20793, !tbaa !2668
  br label %if.end22, !dbg !20794

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20795, !tbaa !2668
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !20796, !ctir !2481
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !20797, !tbaa !2668
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !20798, !ctir !2481
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !20799
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !20797
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !20800
  store i64 2048, i64* %inbytes, align 8, !dbg !20801, !tbaa !3308
  br label %while.body, !dbg !20722, !llvm.loop !20802

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !20804
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !20805 !ctir !2509 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8, !ctir !2426
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2431
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !20806, metadata !DIExpression()), !dbg !20807
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !20808, metadata !DIExpression()), !dbg !20809
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20810, !tbaa !2668
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !20811, !ctir !2427
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !20811, !tbaa !20528, !ctir !2431
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !20809, !tbaa !2668
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20812, !tbaa !2668
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !20812
  call void @explicit_bzero(i8* %3, i64 4152), !dbg !20813
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !20814, !tbaa !2668
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !20814
  call void @free(i8* %5) #9, !dbg !20815
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20816, !tbaa !2668
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !20816
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20816

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !20817, !tbaa !2668
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !20818
  br label %cond.end, !dbg !20816

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !20816
  ret i32 %cond, !dbg !20819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !20820 !ctir !2525 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8, !ctir !2527
  %result.addr = alloca i64*, align 8, !ctir !2521
  %a = alloca i64, align 8, !ctir !2490
  %b = alloca i64, align 8, !ctir !2490
  %m = alloca i64*, align 8, !ctir !2521
  %r = alloca i64*, align 8, !ctir !2521
  %x = alloca i64, align 8, !ctir !2490
  %y = alloca i64, align 8, !ctir !2490
  %x18 = alloca i64, align 8, !ctir !2490
  %y19 = alloca i64, align 8, !ctir !2490
  %x40 = alloca i64, align 8, !ctir !2490
  %y41 = alloca i64, align 8, !ctir !2490
  %x61 = alloca i64, align 8, !ctir !2490
  %y62 = alloca i64, align 8, !ctir !2490
  %x88 = alloca i64, align 8, !ctir !2490
  %y89 = alloca i64, align 8, !ctir !2490
  %x110 = alloca i64, align 8, !ctir !2490
  %y111 = alloca i64, align 8, !ctir !2490
  %x132 = alloca i64, align 8, !ctir !2490
  %y133 = alloca i64, align 8, !ctir !2490
  %x153 = alloca i64, align 8, !ctir !2490
  %y154 = alloca i64, align 8, !ctir !2490
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !20822, metadata !DIExpression()), !dbg !20823
  store i64* %result, i64** %result.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !20824, metadata !DIExpression()), !dbg !20825
  call void @llvm.dbg.declare(metadata i64* %a, metadata !20826, metadata !DIExpression()), !dbg !20827
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20828, !tbaa !2668
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !20829, !ctir !2528
  %1 = load i64, i64* %a1, align 8, !dbg !20829, !tbaa !20830, !ctir !2490
  store i64 %1, i64* %a, align 8, !dbg !20827, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %b, metadata !20831, metadata !DIExpression()), !dbg !20832
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20833, !tbaa !2668
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !20834, !ctir !2528
  %3 = load i64, i64* %b2, align 8, !dbg !20834, !tbaa !20835, !ctir !2490
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20836, !tbaa !2668
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !20837, !ctir !2528
  %5 = load i64, i64* %c, align 8, !dbg !20838, !tbaa !20839, !ctir !2490
  %inc = add i64 %5, 1, !dbg !20838
  store i64 %inc, i64* %c, align 8, !dbg !20838, !tbaa !20839, !ctir !2490
  %add = add i64 %3, %inc, !dbg !20840
  store i64 %add, i64* %b, align 8, !dbg !20832, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64** %m, metadata !20841, metadata !DIExpression()), !dbg !20842
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20843, !tbaa !2668
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !20844, !ctir !2528
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !20843
  store i64* %arraydecay, i64** %m, align 8, !dbg !20842, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %r, metadata !20845, metadata !DIExpression()), !dbg !20846
  %7 = load i64*, i64** %result.addr, align 8, !dbg !20847, !tbaa !2668
  store i64* %7, i64** %r, align 8, !dbg !20846, !tbaa !2668
  br label %do.body, !dbg !20848

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !20849, metadata !DIExpression()), !dbg !20852
  call void @llvm.dbg.declare(metadata i64* %y, metadata !20853, metadata !DIExpression()), !dbg !20852
  %8 = load i64, i64* %a, align 8, !dbg !20852, !tbaa !3308
  %9 = load i64, i64* %a, align 8, !dbg !20852, !tbaa !3308
  %shl = shl i64 %9, 21, !dbg !20852
  %xor = xor i64 %8, %shl, !dbg !20852
  %neg = xor i64 %xor, -1, !dbg !20852
  %xor4 = xor i64 0, %neg, !dbg !20852
  %10 = load i64*, i64** %m, align 8, !dbg !20852, !tbaa !2668
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !20852, !ctir !2521
  %11 = load i64, i64* %arrayidx, align 8, !dbg !20852, !tbaa !3308
  %add5 = add i64 %xor4, %11, !dbg !20852
  store i64 %add5, i64* %a, align 8, !dbg !20852, !tbaa !3308
  %12 = load i64*, i64** %m, align 8, !dbg !20852, !tbaa !2668
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !20852, !ctir !2521
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !20852, !tbaa !3308
  store i64 %13, i64* %x, align 8, !dbg !20852, !tbaa !3308
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20852, !tbaa !2668
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !20852, !ctir !2528
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !20852
  %15 = load i64, i64* %x, align 8, !dbg !20852, !tbaa !3308
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !20852
  %16 = load i64, i64* %a, align 8, !dbg !20852, !tbaa !3308
  %add9 = add i64 %call, %16, !dbg !20852
  %17 = load i64, i64* %b, align 8, !dbg !20852, !tbaa !3308
  %add10 = add i64 %add9, %17, !dbg !20852
  store i64 %add10, i64* %y, align 8, !dbg !20852, !tbaa !3308
  %18 = load i64*, i64** %m, align 8, !dbg !20852, !tbaa !2668
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !20852, !ctir !2521
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !20852, !tbaa !3308
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20852, !tbaa !2668
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !20852, !ctir !2528
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !20852
  %20 = load i64, i64* %y, align 8, !dbg !20852, !tbaa !3308
  %shr = lshr i64 %20, 8, !dbg !20852
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !20852
  %21 = load i64, i64* %x, align 8, !dbg !20852, !tbaa !3308
  %add15 = add i64 %call14, %21, !dbg !20852
  %call16 = call i64 @just(i64 %add15), !dbg !20852
  store i64 %call16, i64* %b, align 8, !dbg !20852, !tbaa !3308
  %22 = load i64*, i64** %r, align 8, !dbg !20852, !tbaa !2668
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !20852, !ctir !2521
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !20852, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !20854, metadata !DIExpression()), !dbg !20856
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !20857, metadata !DIExpression()), !dbg !20856
  %23 = load i64, i64* %a, align 8, !dbg !20856, !tbaa !3308
  %24 = load i64, i64* %a, align 8, !dbg !20856, !tbaa !3308
  %call20 = call i64 @just(i64 %24), !dbg !20856
  %shr21 = lshr i64 %call20, 5, !dbg !20856
  %xor22 = xor i64 %23, %shr21, !dbg !20856
  %xor23 = xor i64 0, %xor22, !dbg !20856
  %25 = load i64*, i64** %m, align 8, !dbg !20856, !tbaa !2668
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !20856, !ctir !2521
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !20856, !tbaa !3308
  %add25 = add i64 %xor23, %26, !dbg !20856
  store i64 %add25, i64* %a, align 8, !dbg !20856, !tbaa !3308
  %27 = load i64*, i64** %m, align 8, !dbg !20856, !tbaa !2668
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !20856, !ctir !2521
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !20856, !tbaa !3308
  store i64 %28, i64* %x18, align 8, !dbg !20856, !tbaa !3308
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20856, !tbaa !2668
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !20856, !ctir !2528
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !20856
  %30 = load i64, i64* %x18, align 8, !dbg !20856, !tbaa !3308
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !20856
  %31 = load i64, i64* %a, align 8, !dbg !20856, !tbaa !3308
  %add30 = add i64 %call29, %31, !dbg !20856
  %32 = load i64, i64* %b, align 8, !dbg !20856, !tbaa !3308
  %add31 = add i64 %add30, %32, !dbg !20856
  store i64 %add31, i64* %y19, align 8, !dbg !20856, !tbaa !3308
  %33 = load i64*, i64** %m, align 8, !dbg !20856, !tbaa !2668
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !20856, !ctir !2521
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !20856, !tbaa !3308
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20856, !tbaa !2668
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !20856, !ctir !2528
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !20856
  %35 = load i64, i64* %y19, align 8, !dbg !20856, !tbaa !3308
  %shr35 = lshr i64 %35, 8, !dbg !20856
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !20856
  %36 = load i64, i64* %x18, align 8, !dbg !20856, !tbaa !3308
  %add37 = add i64 %call36, %36, !dbg !20856
  %call38 = call i64 @just(i64 %add37), !dbg !20856
  store i64 %call38, i64* %b, align 8, !dbg !20856, !tbaa !3308
  %37 = load i64*, i64** %r, align 8, !dbg !20856, !tbaa !2668
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !20856, !ctir !2521
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !20856, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !20858, metadata !DIExpression()), !dbg !20860
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !20861, metadata !DIExpression()), !dbg !20860
  %38 = load i64, i64* %a, align 8, !dbg !20860, !tbaa !3308
  %39 = load i64, i64* %a, align 8, !dbg !20860, !tbaa !3308
  %shl42 = shl i64 %39, 12, !dbg !20860
  %xor43 = xor i64 %38, %shl42, !dbg !20860
  %xor44 = xor i64 0, %xor43, !dbg !20860
  %40 = load i64*, i64** %m, align 8, !dbg !20860, !tbaa !2668
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !20860, !ctir !2521
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !20860, !tbaa !3308
  %add46 = add i64 %xor44, %41, !dbg !20860
  store i64 %add46, i64* %a, align 8, !dbg !20860, !tbaa !3308
  %42 = load i64*, i64** %m, align 8, !dbg !20860, !tbaa !2668
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !20860, !ctir !2521
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !20860, !tbaa !3308
  store i64 %43, i64* %x40, align 8, !dbg !20860, !tbaa !3308
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20860, !tbaa !2668
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !20860, !ctir !2528
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !20860
  %45 = load i64, i64* %x40, align 8, !dbg !20860, !tbaa !3308
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !20860
  %46 = load i64, i64* %a, align 8, !dbg !20860, !tbaa !3308
  %add51 = add i64 %call50, %46, !dbg !20860
  %47 = load i64, i64* %b, align 8, !dbg !20860, !tbaa !3308
  %add52 = add i64 %add51, %47, !dbg !20860
  store i64 %add52, i64* %y41, align 8, !dbg !20860, !tbaa !3308
  %48 = load i64*, i64** %m, align 8, !dbg !20860, !tbaa !2668
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !20860, !ctir !2521
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !20860, !tbaa !3308
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20860, !tbaa !2668
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !20860, !ctir !2528
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !20860
  %50 = load i64, i64* %y41, align 8, !dbg !20860, !tbaa !3308
  %shr56 = lshr i64 %50, 8, !dbg !20860
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !20860
  %51 = load i64, i64* %x40, align 8, !dbg !20860, !tbaa !3308
  %add58 = add i64 %call57, %51, !dbg !20860
  %call59 = call i64 @just(i64 %add58), !dbg !20860
  store i64 %call59, i64* %b, align 8, !dbg !20860, !tbaa !3308
  %52 = load i64*, i64** %r, align 8, !dbg !20860, !tbaa !2668
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !20860, !ctir !2521
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !20860, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !20862, metadata !DIExpression()), !dbg !20864
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !20865, metadata !DIExpression()), !dbg !20864
  %53 = load i64, i64* %a, align 8, !dbg !20864, !tbaa !3308
  %54 = load i64, i64* %a, align 8, !dbg !20864, !tbaa !3308
  %call63 = call i64 @just(i64 %54), !dbg !20864
  %shr64 = lshr i64 %call63, 33, !dbg !20864
  %xor65 = xor i64 %53, %shr64, !dbg !20864
  %xor66 = xor i64 0, %xor65, !dbg !20864
  %55 = load i64*, i64** %m, align 8, !dbg !20864, !tbaa !2668
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !20864, !ctir !2521
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !20864, !tbaa !3308
  %add68 = add i64 %xor66, %56, !dbg !20864
  store i64 %add68, i64* %a, align 8, !dbg !20864, !tbaa !3308
  %57 = load i64*, i64** %m, align 8, !dbg !20864, !tbaa !2668
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !20864, !ctir !2521
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !20864, !tbaa !3308
  store i64 %58, i64* %x61, align 8, !dbg !20864, !tbaa !3308
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20864, !tbaa !2668
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !20864, !ctir !2528
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !20864
  %60 = load i64, i64* %x61, align 8, !dbg !20864, !tbaa !3308
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !20864
  %61 = load i64, i64* %a, align 8, !dbg !20864, !tbaa !3308
  %add73 = add i64 %call72, %61, !dbg !20864
  %62 = load i64, i64* %b, align 8, !dbg !20864, !tbaa !3308
  %add74 = add i64 %add73, %62, !dbg !20864
  store i64 %add74, i64* %y62, align 8, !dbg !20864, !tbaa !3308
  %63 = load i64*, i64** %m, align 8, !dbg !20864, !tbaa !2668
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !20864, !ctir !2521
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !20864, !tbaa !3308
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20864, !tbaa !2668
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !20864, !ctir !2528
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !20864
  %65 = load i64, i64* %y62, align 8, !dbg !20864, !tbaa !3308
  %shr78 = lshr i64 %65, 8, !dbg !20864
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !20864
  %66 = load i64, i64* %x61, align 8, !dbg !20864, !tbaa !3308
  %add80 = add i64 %call79, %66, !dbg !20864
  %call81 = call i64 @just(i64 %add80), !dbg !20864
  store i64 %call81, i64* %b, align 8, !dbg !20864, !tbaa !3308
  %67 = load i64*, i64** %r, align 8, !dbg !20864, !tbaa !2668
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !20864, !ctir !2521
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !20864, !tbaa !3308
  %68 = load i64*, i64** %r, align 8, !dbg !20866, !tbaa !2668
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !20866
  store i64* %add.ptr, i64** %r, align 8, !dbg !20866, !tbaa !2668
  br label %do.cond, !dbg !20867

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !20868, !tbaa !2668
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !20868
  store i64* %add.ptr83, i64** %m, align 8, !dbg !20868, !tbaa !2668
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20869, !tbaa !2668
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !20870, !ctir !2528
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !20869
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !20871
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !20872
  br i1 %cmp, label %do.body, label %do.end, !dbg !20867, !llvm.loop !20873

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !20875

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !20876, metadata !DIExpression()), !dbg !20879
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !20880, metadata !DIExpression()), !dbg !20879
  %71 = load i64, i64* %a, align 8, !dbg !20879, !tbaa !3308
  %72 = load i64, i64* %a, align 8, !dbg !20879, !tbaa !3308
  %shl90 = shl i64 %72, 21, !dbg !20879
  %xor91 = xor i64 %71, %shl90, !dbg !20879
  %neg92 = xor i64 %xor91, -1, !dbg !20879
  %xor93 = xor i64 0, %neg92, !dbg !20879
  %73 = load i64*, i64** %m, align 8, !dbg !20879, !tbaa !2668
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !20879, !ctir !2521
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !20879, !tbaa !3308
  %add95 = add i64 %xor93, %74, !dbg !20879
  store i64 %add95, i64* %a, align 8, !dbg !20879, !tbaa !3308
  %75 = load i64*, i64** %m, align 8, !dbg !20879, !tbaa !2668
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !20879, !ctir !2521
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !20879, !tbaa !3308
  store i64 %76, i64* %x88, align 8, !dbg !20879, !tbaa !3308
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20879, !tbaa !2668
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !20879, !ctir !2528
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !20879
  %78 = load i64, i64* %x88, align 8, !dbg !20879, !tbaa !3308
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !20879
  %79 = load i64, i64* %a, align 8, !dbg !20879, !tbaa !3308
  %add100 = add i64 %call99, %79, !dbg !20879
  %80 = load i64, i64* %b, align 8, !dbg !20879, !tbaa !3308
  %add101 = add i64 %add100, %80, !dbg !20879
  store i64 %add101, i64* %y89, align 8, !dbg !20879, !tbaa !3308
  %81 = load i64*, i64** %m, align 8, !dbg !20879, !tbaa !2668
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !20879, !ctir !2521
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !20879, !tbaa !3308
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20879, !tbaa !2668
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !20879, !ctir !2528
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !20879
  %83 = load i64, i64* %y89, align 8, !dbg !20879, !tbaa !3308
  %shr105 = lshr i64 %83, 8, !dbg !20879
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !20879
  %84 = load i64, i64* %x88, align 8, !dbg !20879, !tbaa !3308
  %add107 = add i64 %call106, %84, !dbg !20879
  %call108 = call i64 @just(i64 %add107), !dbg !20879
  store i64 %call108, i64* %b, align 8, !dbg !20879, !tbaa !3308
  %85 = load i64*, i64** %r, align 8, !dbg !20879, !tbaa !2668
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !20879, !ctir !2521
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !20879, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !20881, metadata !DIExpression()), !dbg !20883
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !20884, metadata !DIExpression()), !dbg !20883
  %86 = load i64, i64* %a, align 8, !dbg !20883, !tbaa !3308
  %87 = load i64, i64* %a, align 8, !dbg !20883, !tbaa !3308
  %call112 = call i64 @just(i64 %87), !dbg !20883
  %shr113 = lshr i64 %call112, 5, !dbg !20883
  %xor114 = xor i64 %86, %shr113, !dbg !20883
  %xor115 = xor i64 0, %xor114, !dbg !20883
  %88 = load i64*, i64** %m, align 8, !dbg !20883, !tbaa !2668
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !20883, !ctir !2521
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !20883, !tbaa !3308
  %add117 = add i64 %xor115, %89, !dbg !20883
  store i64 %add117, i64* %a, align 8, !dbg !20883, !tbaa !3308
  %90 = load i64*, i64** %m, align 8, !dbg !20883, !tbaa !2668
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !20883, !ctir !2521
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !20883, !tbaa !3308
  store i64 %91, i64* %x110, align 8, !dbg !20883, !tbaa !3308
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20883, !tbaa !2668
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !20883, !ctir !2528
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !20883
  %93 = load i64, i64* %x110, align 8, !dbg !20883, !tbaa !3308
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !20883
  %94 = load i64, i64* %a, align 8, !dbg !20883, !tbaa !3308
  %add122 = add i64 %call121, %94, !dbg !20883
  %95 = load i64, i64* %b, align 8, !dbg !20883, !tbaa !3308
  %add123 = add i64 %add122, %95, !dbg !20883
  store i64 %add123, i64* %y111, align 8, !dbg !20883, !tbaa !3308
  %96 = load i64*, i64** %m, align 8, !dbg !20883, !tbaa !2668
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !20883, !ctir !2521
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !20883, !tbaa !3308
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20883, !tbaa !2668
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !20883, !ctir !2528
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !20883
  %98 = load i64, i64* %y111, align 8, !dbg !20883, !tbaa !3308
  %shr127 = lshr i64 %98, 8, !dbg !20883
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !20883
  %99 = load i64, i64* %x110, align 8, !dbg !20883, !tbaa !3308
  %add129 = add i64 %call128, %99, !dbg !20883
  %call130 = call i64 @just(i64 %add129), !dbg !20883
  store i64 %call130, i64* %b, align 8, !dbg !20883, !tbaa !3308
  %100 = load i64*, i64** %r, align 8, !dbg !20883, !tbaa !2668
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !20883, !ctir !2521
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !20883, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !20885, metadata !DIExpression()), !dbg !20887
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !20888, metadata !DIExpression()), !dbg !20887
  %101 = load i64, i64* %a, align 8, !dbg !20887, !tbaa !3308
  %102 = load i64, i64* %a, align 8, !dbg !20887, !tbaa !3308
  %shl134 = shl i64 %102, 12, !dbg !20887
  %xor135 = xor i64 %101, %shl134, !dbg !20887
  %xor136 = xor i64 0, %xor135, !dbg !20887
  %103 = load i64*, i64** %m, align 8, !dbg !20887, !tbaa !2668
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !20887, !ctir !2521
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !20887, !tbaa !3308
  %add138 = add i64 %xor136, %104, !dbg !20887
  store i64 %add138, i64* %a, align 8, !dbg !20887, !tbaa !3308
  %105 = load i64*, i64** %m, align 8, !dbg !20887, !tbaa !2668
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !20887, !ctir !2521
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !20887, !tbaa !3308
  store i64 %106, i64* %x132, align 8, !dbg !20887, !tbaa !3308
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20887, !tbaa !2668
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !20887, !ctir !2528
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !20887
  %108 = load i64, i64* %x132, align 8, !dbg !20887, !tbaa !3308
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !20887
  %109 = load i64, i64* %a, align 8, !dbg !20887, !tbaa !3308
  %add143 = add i64 %call142, %109, !dbg !20887
  %110 = load i64, i64* %b, align 8, !dbg !20887, !tbaa !3308
  %add144 = add i64 %add143, %110, !dbg !20887
  store i64 %add144, i64* %y133, align 8, !dbg !20887, !tbaa !3308
  %111 = load i64*, i64** %m, align 8, !dbg !20887, !tbaa !2668
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !20887, !ctir !2521
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !20887, !tbaa !3308
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20887, !tbaa !2668
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !20887, !ctir !2528
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !20887
  %113 = load i64, i64* %y133, align 8, !dbg !20887, !tbaa !3308
  %shr148 = lshr i64 %113, 8, !dbg !20887
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !20887
  %114 = load i64, i64* %x132, align 8, !dbg !20887, !tbaa !3308
  %add150 = add i64 %call149, %114, !dbg !20887
  %call151 = call i64 @just(i64 %add150), !dbg !20887
  store i64 %call151, i64* %b, align 8, !dbg !20887, !tbaa !3308
  %115 = load i64*, i64** %r, align 8, !dbg !20887, !tbaa !2668
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !20887, !ctir !2521
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !20887, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !20889, metadata !DIExpression()), !dbg !20891
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !20892, metadata !DIExpression()), !dbg !20891
  %116 = load i64, i64* %a, align 8, !dbg !20891, !tbaa !3308
  %117 = load i64, i64* %a, align 8, !dbg !20891, !tbaa !3308
  %call155 = call i64 @just(i64 %117), !dbg !20891
  %shr156 = lshr i64 %call155, 33, !dbg !20891
  %xor157 = xor i64 %116, %shr156, !dbg !20891
  %xor158 = xor i64 0, %xor157, !dbg !20891
  %118 = load i64*, i64** %m, align 8, !dbg !20891, !tbaa !2668
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !20891, !ctir !2521
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !20891, !tbaa !3308
  %add160 = add i64 %xor158, %119, !dbg !20891
  store i64 %add160, i64* %a, align 8, !dbg !20891, !tbaa !3308
  %120 = load i64*, i64** %m, align 8, !dbg !20891, !tbaa !2668
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !20891, !ctir !2521
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !20891, !tbaa !3308
  store i64 %121, i64* %x153, align 8, !dbg !20891, !tbaa !3308
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20891, !tbaa !2668
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !20891, !ctir !2528
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !20891
  %123 = load i64, i64* %x153, align 8, !dbg !20891, !tbaa !3308
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !20891
  %124 = load i64, i64* %a, align 8, !dbg !20891, !tbaa !3308
  %add165 = add i64 %call164, %124, !dbg !20891
  %125 = load i64, i64* %b, align 8, !dbg !20891, !tbaa !3308
  %add166 = add i64 %add165, %125, !dbg !20891
  store i64 %add166, i64* %y154, align 8, !dbg !20891, !tbaa !3308
  %126 = load i64*, i64** %m, align 8, !dbg !20891, !tbaa !2668
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !20891, !ctir !2521
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !20891, !tbaa !3308
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20891, !tbaa !2668
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !20891, !ctir !2528
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !20891
  %128 = load i64, i64* %y154, align 8, !dbg !20891, !tbaa !3308
  %shr170 = lshr i64 %128, 8, !dbg !20891
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !20891
  %129 = load i64, i64* %x153, align 8, !dbg !20891, !tbaa !3308
  %add172 = add i64 %call171, %129, !dbg !20891
  %call173 = call i64 @just(i64 %add172), !dbg !20891
  store i64 %call173, i64* %b, align 8, !dbg !20891, !tbaa !3308
  %130 = load i64*, i64** %r, align 8, !dbg !20891, !tbaa !2668
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !20891, !ctir !2521
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !20891, !tbaa !3308
  %131 = load i64*, i64** %r, align 8, !dbg !20893, !tbaa !2668
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !20893
  store i64* %add.ptr175, i64** %r, align 8, !dbg !20893, !tbaa !2668
  br label %do.cond176, !dbg !20894

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !20895, !tbaa !2668
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !20895
  store i64* %add.ptr177, i64** %m, align 8, !dbg !20895, !tbaa !2668
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20896, !tbaa !2668
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !20897, !ctir !2528
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !20896
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !20898
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !20899
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !20894, !llvm.loop !20900

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !20902, !tbaa !3308
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20903, !tbaa !2668
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !20904, !ctir !2528
  store i64 %134, i64* %a183, align 8, !dbg !20905, !tbaa !20830, !ctir !2490
  %136 = load i64, i64* %b, align 8, !dbg !20906, !tbaa !3308
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20907, !tbaa !2668
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !20908, !ctir !2528
  store i64 %136, i64* %b184, align 8, !dbg !20909, !tbaa !20835, !ctir !2490
  ret void, !dbg !20910
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !20911 !ctir !2536 {
entry:
  %m.addr = alloca i64*, align 8, !ctir !2538
  %x.addr = alloca i64, align 8, !ctir !2490
  %void_m = alloca i8*, align 8, !ctir !525
  %base_p = alloca i8*, align 8, !ctir !177
  %word_p = alloca i8*, align 8, !ctir !525
  %p = alloca i64*, align 8, !ctir !2538
  store i64* %m, i64** %m.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !20912, metadata !DIExpression()), !dbg !20913
  store i64 %x, i64* %x.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20914, metadata !DIExpression()), !dbg !20915
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !20916, metadata !DIExpression()), !dbg !20919
  %0 = load i64*, i64** %m.addr, align 8, !dbg !20920, !tbaa !2668
  %1 = bitcast i64* %0 to i8*, !dbg !20920
  store i8* %1, i8** %void_m, align 8, !dbg !20919, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !20921, metadata !DIExpression()), !dbg !20922
  %2 = load i8*, i8** %void_m, align 8, !dbg !20923, !tbaa !2668
  store i8* %2, i8** %base_p, align 8, !dbg !20922, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !20924, metadata !DIExpression()), !dbg !20925
  %3 = load i8*, i8** %base_p, align 8, !dbg !20926, !tbaa !2668
  %4 = load i64, i64* %x.addr, align 8, !dbg !20927, !tbaa !3308
  %and = and i64 %4, 2040, !dbg !20928
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !20929
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !20925, !tbaa !2668
  call void @llvm.dbg.declare(metadata i64** %p, metadata !20930, metadata !DIExpression()), !dbg !20931
  %5 = load i8*, i8** %word_p, align 8, !dbg !20932, !tbaa !2668
  %6 = bitcast i8* %5 to i64*, !dbg !20932
  store i64* %6, i64** %p, align 8, !dbg !20931, !tbaa !2668
  %7 = load i64*, i64** %p, align 8, !dbg !20933, !tbaa !2668
  %8 = load i64, i64* %7, align 8, !dbg !20934, !tbaa !3308, !ctir !2539
  ret i64 %8, !dbg !20935
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !20936 !ctir !2540 {
entry:
  %a.addr = alloca i64, align 8, !ctir !2490
  %desired_bits = alloca i64, align 8, !ctir !2490
  store i64 %a, i64* %a.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !20937, metadata !DIExpression()), !dbg !20938
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !20939, metadata !DIExpression()), !dbg !20940
  store i64 -1, i64* %desired_bits, align 8, !dbg !20940, !tbaa !3308
  %0 = load i64, i64* %a.addr, align 8, !dbg !20941, !tbaa !3308
  %1 = load i64, i64* %desired_bits, align 8, !dbg !20942, !tbaa !3308
  %and = and i64 %0, %1, !dbg !20943
  ret i64 %and, !dbg !20944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !20945 !ctir !2534 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8, !ctir !2527
  %a = alloca i64, align 8, !ctir !2490
  %b = alloca i64, align 8, !ctir !2490
  %c = alloca i64, align 8, !ctir !2490
  %d = alloca i64, align 8, !ctir !2490
  %e = alloca i64, align 8, !ctir !2490
  %f = alloca i64, align 8, !ctir !2490
  %g = alloca i64, align 8, !ctir !2490
  %h = alloca i64, align 8, !ctir !2490
  %i = alloca i32, align 4, !ctir !5
  %i99 = alloca i32, align 4, !ctir !5
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !20946, metadata !DIExpression()), !dbg !20947
  call void @llvm.dbg.declare(metadata i64* %a, metadata !20948, metadata !DIExpression()), !dbg !20949
  store i64 7240739780546808700, i64* %a, align 8, !dbg !20949, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %b, metadata !20950, metadata !DIExpression()), !dbg !20951
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !20951, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %c, metadata !20952, metadata !DIExpression()), !dbg !20953
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !20953, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %d, metadata !20954, metadata !DIExpression()), !dbg !20955
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !20955, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %e, metadata !20956, metadata !DIExpression()), !dbg !20957
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !20957, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %f, metadata !20958, metadata !DIExpression()), !dbg !20959
  store i64 5259722845879046933, i64* %f, align 8, !dbg !20959, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %g, metadata !20960, metadata !DIExpression()), !dbg !20961
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !20961, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %h, metadata !20962, metadata !DIExpression()), !dbg !20963
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !20963, !tbaa !3308
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20964, metadata !DIExpression()), !dbg !20966
  store i32 0, i32* %i, align 4, !dbg !20967, !tbaa !2655
  br label %for.cond, !dbg !20967

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !20969, !tbaa !2655
  %cmp = icmp slt i32 %0, 256, !dbg !20969
  br i1 %cmp, label %for.body, label %for.end, !dbg !20967

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !20971, !ctir !2528
  %2 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %idxprom = sext i32 %2 to i64, !dbg !20971
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !20971, !ctir !2489
  %3 = load i64, i64* %arrayidx, align 8, !dbg !20971, !tbaa !3308
  %4 = load i64, i64* %a, align 8, !dbg !20971, !tbaa !3308
  %add = add i64 %4, %3, !dbg !20971
  store i64 %add, i64* %a, align 8, !dbg !20971, !tbaa !3308
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !20971, !ctir !2528
  %6 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add2 = add nsw i32 %6, 1, !dbg !20971
  %idxprom3 = sext i32 %add2 to i64, !dbg !20971
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !20971, !ctir !2489
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !20971, !tbaa !3308
  %8 = load i64, i64* %b, align 8, !dbg !20971, !tbaa !3308
  %add5 = add i64 %8, %7, !dbg !20971
  store i64 %add5, i64* %b, align 8, !dbg !20971, !tbaa !3308
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !20971, !ctir !2528
  %10 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add7 = add nsw i32 %10, 2, !dbg !20971
  %idxprom8 = sext i32 %add7 to i64, !dbg !20971
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !20971, !ctir !2489
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !20971, !tbaa !3308
  %12 = load i64, i64* %c, align 8, !dbg !20971, !tbaa !3308
  %add10 = add i64 %12, %11, !dbg !20971
  store i64 %add10, i64* %c, align 8, !dbg !20971, !tbaa !3308
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !20971, !ctir !2528
  %14 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add12 = add nsw i32 %14, 3, !dbg !20971
  %idxprom13 = sext i32 %add12 to i64, !dbg !20971
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !20971, !ctir !2489
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !20971, !tbaa !3308
  %16 = load i64, i64* %d, align 8, !dbg !20971, !tbaa !3308
  %add15 = add i64 %16, %15, !dbg !20971
  store i64 %add15, i64* %d, align 8, !dbg !20971, !tbaa !3308
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !20971, !ctir !2528
  %18 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add17 = add nsw i32 %18, 4, !dbg !20971
  %idxprom18 = sext i32 %add17 to i64, !dbg !20971
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !20971, !ctir !2489
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !20971, !tbaa !3308
  %20 = load i64, i64* %e, align 8, !dbg !20971, !tbaa !3308
  %add20 = add i64 %20, %19, !dbg !20971
  store i64 %add20, i64* %e, align 8, !dbg !20971, !tbaa !3308
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !20971, !ctir !2528
  %22 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add22 = add nsw i32 %22, 5, !dbg !20971
  %idxprom23 = sext i32 %add22 to i64, !dbg !20971
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !20971, !ctir !2489
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !20971, !tbaa !3308
  %24 = load i64, i64* %f, align 8, !dbg !20971, !tbaa !3308
  %add25 = add i64 %24, %23, !dbg !20971
  store i64 %add25, i64* %f, align 8, !dbg !20971, !tbaa !3308
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !20971, !ctir !2528
  %26 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add27 = add nsw i32 %26, 6, !dbg !20971
  %idxprom28 = sext i32 %add27 to i64, !dbg !20971
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !20971, !ctir !2489
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !20971, !tbaa !3308
  %28 = load i64, i64* %g, align 8, !dbg !20971, !tbaa !3308
  %add30 = add i64 %28, %27, !dbg !20971
  store i64 %add30, i64* %g, align 8, !dbg !20971, !tbaa !3308
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !20971, !ctir !2528
  %30 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add32 = add nsw i32 %30, 7, !dbg !20971
  %idxprom33 = sext i32 %add32 to i64, !dbg !20971
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !20971, !ctir !2489
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !20971, !tbaa !3308
  %32 = load i64, i64* %h, align 8, !dbg !20971, !tbaa !3308
  %add35 = add i64 %32, %31, !dbg !20971
  store i64 %add35, i64* %h, align 8, !dbg !20971, !tbaa !3308
  %33 = load i64, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %34 = load i64, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %sub = sub i64 %34, %33, !dbg !20973
  store i64 %sub, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %35 = load i64, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %call = call i64 @just(i64 %35), !dbg !20973
  %shr = lshr i64 %call, 9, !dbg !20973
  %36 = load i64, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %xor = xor i64 %36, %shr, !dbg !20973
  store i64 %xor, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %37 = load i64, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %38 = load i64, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %add36 = add i64 %38, %37, !dbg !20973
  store i64 %add36, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %39 = load i64, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %40 = load i64, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %sub37 = sub i64 %40, %39, !dbg !20973
  store i64 %sub37, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %41 = load i64, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %shl = shl i64 %41, 9, !dbg !20973
  %42 = load i64, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %xor38 = xor i64 %42, %shl, !dbg !20973
  store i64 %xor38, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %43 = load i64, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %44 = load i64, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %add39 = add i64 %44, %43, !dbg !20973
  store i64 %add39, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %45 = load i64, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %46 = load i64, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %sub40 = sub i64 %46, %45, !dbg !20973
  store i64 %sub40, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %47 = load i64, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %call41 = call i64 @just(i64 %47), !dbg !20973
  %shr42 = lshr i64 %call41, 23, !dbg !20973
  %48 = load i64, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %xor43 = xor i64 %48, %shr42, !dbg !20973
  store i64 %xor43, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %49 = load i64, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %50 = load i64, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %add44 = add i64 %50, %49, !dbg !20973
  store i64 %add44, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %51 = load i64, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %52 = load i64, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %sub45 = sub i64 %52, %51, !dbg !20973
  store i64 %sub45, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %53 = load i64, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %shl46 = shl i64 %53, 15, !dbg !20973
  %54 = load i64, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %xor47 = xor i64 %54, %shl46, !dbg !20973
  store i64 %xor47, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %55 = load i64, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %56 = load i64, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %add48 = add i64 %56, %55, !dbg !20973
  store i64 %add48, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %57 = load i64, i64* %a, align 8, !dbg !20973, !tbaa !3308
  %58 = load i64, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %sub49 = sub i64 %58, %57, !dbg !20973
  store i64 %sub49, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %59 = load i64, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %call50 = call i64 @just(i64 %59), !dbg !20973
  %shr51 = lshr i64 %call50, 14, !dbg !20973
  %60 = load i64, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %xor52 = xor i64 %60, %shr51, !dbg !20973
  store i64 %xor52, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %61 = load i64, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %62 = load i64, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %add53 = add i64 %62, %61, !dbg !20973
  store i64 %add53, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %63 = load i64, i64* %b, align 8, !dbg !20973, !tbaa !3308
  %64 = load i64, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %sub54 = sub i64 %64, %63, !dbg !20973
  store i64 %sub54, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %65 = load i64, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %shl55 = shl i64 %65, 20, !dbg !20973
  %66 = load i64, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %xor56 = xor i64 %66, %shl55, !dbg !20973
  store i64 %xor56, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %67 = load i64, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %68 = load i64, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %add57 = add i64 %68, %67, !dbg !20973
  store i64 %add57, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %69 = load i64, i64* %c, align 8, !dbg !20973, !tbaa !3308
  %70 = load i64, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %sub58 = sub i64 %70, %69, !dbg !20973
  store i64 %sub58, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %71 = load i64, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %call59 = call i64 @just(i64 %71), !dbg !20973
  %shr60 = lshr i64 %call59, 17, !dbg !20973
  %72 = load i64, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %xor61 = xor i64 %72, %shr60, !dbg !20973
  store i64 %xor61, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %73 = load i64, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %74 = load i64, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %add62 = add i64 %74, %73, !dbg !20973
  store i64 %add62, i64* %f, align 8, !dbg !20973, !tbaa !3308
  %75 = load i64, i64* %d, align 8, !dbg !20973, !tbaa !3308
  %76 = load i64, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %sub63 = sub i64 %76, %75, !dbg !20973
  store i64 %sub63, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %77 = load i64, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %shl64 = shl i64 %77, 14, !dbg !20973
  %78 = load i64, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %xor65 = xor i64 %78, %shl64, !dbg !20973
  store i64 %xor65, i64* %e, align 8, !dbg !20973, !tbaa !3308
  %79 = load i64, i64* %h, align 8, !dbg !20973, !tbaa !3308
  %80 = load i64, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %add66 = add i64 %80, %79, !dbg !20973
  store i64 %add66, i64* %g, align 8, !dbg !20973, !tbaa !3308
  %81 = load i64, i64* %a, align 8, !dbg !20971, !tbaa !3308
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !20971, !ctir !2528
  %83 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %idxprom68 = sext i32 %83 to i64, !dbg !20971
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !20971, !ctir !2489
  store i64 %81, i64* %arrayidx69, align 8, !dbg !20971, !tbaa !3308
  %84 = load i64, i64* %b, align 8, !dbg !20971, !tbaa !3308
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !20971, !ctir !2528
  %86 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add71 = add nsw i32 %86, 1, !dbg !20971
  %idxprom72 = sext i32 %add71 to i64, !dbg !20971
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !20971, !ctir !2489
  store i64 %84, i64* %arrayidx73, align 8, !dbg !20971, !tbaa !3308
  %87 = load i64, i64* %c, align 8, !dbg !20971, !tbaa !3308
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !20971, !ctir !2528
  %89 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add75 = add nsw i32 %89, 2, !dbg !20971
  %idxprom76 = sext i32 %add75 to i64, !dbg !20971
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !20971, !ctir !2489
  store i64 %87, i64* %arrayidx77, align 8, !dbg !20971, !tbaa !3308
  %90 = load i64, i64* %d, align 8, !dbg !20971, !tbaa !3308
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !20971, !ctir !2528
  %92 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add79 = add nsw i32 %92, 3, !dbg !20971
  %idxprom80 = sext i32 %add79 to i64, !dbg !20971
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !20971, !ctir !2489
  store i64 %90, i64* %arrayidx81, align 8, !dbg !20971, !tbaa !3308
  %93 = load i64, i64* %e, align 8, !dbg !20971, !tbaa !3308
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !20971, !ctir !2528
  %95 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add83 = add nsw i32 %95, 4, !dbg !20971
  %idxprom84 = sext i32 %add83 to i64, !dbg !20971
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !20971, !ctir !2489
  store i64 %93, i64* %arrayidx85, align 8, !dbg !20971, !tbaa !3308
  %96 = load i64, i64* %f, align 8, !dbg !20971, !tbaa !3308
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !20971, !ctir !2528
  %98 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add87 = add nsw i32 %98, 5, !dbg !20971
  %idxprom88 = sext i32 %add87 to i64, !dbg !20971
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !20971, !ctir !2489
  store i64 %96, i64* %arrayidx89, align 8, !dbg !20971, !tbaa !3308
  %99 = load i64, i64* %g, align 8, !dbg !20971, !tbaa !3308
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !20971, !ctir !2528
  %101 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add91 = add nsw i32 %101, 6, !dbg !20971
  %idxprom92 = sext i32 %add91 to i64, !dbg !20971
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !20971, !ctir !2489
  store i64 %99, i64* %arrayidx93, align 8, !dbg !20971, !tbaa !3308
  %102 = load i64, i64* %h, align 8, !dbg !20971, !tbaa !3308
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20971, !tbaa !2668
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !20971, !ctir !2528
  %104 = load i32, i32* %i, align 4, !dbg !20971, !tbaa !2655
  %add95 = add nsw i32 %104, 7, !dbg !20971
  %idxprom96 = sext i32 %add95 to i64, !dbg !20971
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !20971, !ctir !2489
  store i64 %102, i64* %arrayidx97, align 8, !dbg !20971, !tbaa !3308
  br label %for.inc, !dbg !20971

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !20969, !tbaa !2655
  %add98 = add nsw i32 %105, 8, !dbg !20969
  store i32 %add98, i32* %i, align 4, !dbg !20969, !tbaa !2655
  br label %for.cond, !dbg !20969, !llvm.loop !20975

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !20976, metadata !DIExpression()), !dbg !20978
  store i32 0, i32* %i99, align 4, !dbg !20979, !tbaa !2655
  br label %for.cond100, !dbg !20979

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !20981, !tbaa !2655
  %cmp101 = icmp slt i32 %106, 256, !dbg !20981
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !20979

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !20983, !ctir !2528
  %108 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %idxprom104 = sext i32 %108 to i64, !dbg !20983
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !20983, !ctir !2489
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !20983, !tbaa !3308
  %110 = load i64, i64* %a, align 8, !dbg !20983, !tbaa !3308
  %add106 = add i64 %110, %109, !dbg !20983
  store i64 %add106, i64* %a, align 8, !dbg !20983, !tbaa !3308
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !20983, !ctir !2528
  %112 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add108 = add nsw i32 %112, 1, !dbg !20983
  %idxprom109 = sext i32 %add108 to i64, !dbg !20983
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !20983, !ctir !2489
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !20983, !tbaa !3308
  %114 = load i64, i64* %b, align 8, !dbg !20983, !tbaa !3308
  %add111 = add i64 %114, %113, !dbg !20983
  store i64 %add111, i64* %b, align 8, !dbg !20983, !tbaa !3308
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !20983, !ctir !2528
  %116 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add113 = add nsw i32 %116, 2, !dbg !20983
  %idxprom114 = sext i32 %add113 to i64, !dbg !20983
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !20983, !ctir !2489
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !20983, !tbaa !3308
  %118 = load i64, i64* %c, align 8, !dbg !20983, !tbaa !3308
  %add116 = add i64 %118, %117, !dbg !20983
  store i64 %add116, i64* %c, align 8, !dbg !20983, !tbaa !3308
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !20983, !ctir !2528
  %120 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add118 = add nsw i32 %120, 3, !dbg !20983
  %idxprom119 = sext i32 %add118 to i64, !dbg !20983
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !20983, !ctir !2489
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !20983, !tbaa !3308
  %122 = load i64, i64* %d, align 8, !dbg !20983, !tbaa !3308
  %add121 = add i64 %122, %121, !dbg !20983
  store i64 %add121, i64* %d, align 8, !dbg !20983, !tbaa !3308
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !20983, !ctir !2528
  %124 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add123 = add nsw i32 %124, 4, !dbg !20983
  %idxprom124 = sext i32 %add123 to i64, !dbg !20983
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !20983, !ctir !2489
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !20983, !tbaa !3308
  %126 = load i64, i64* %e, align 8, !dbg !20983, !tbaa !3308
  %add126 = add i64 %126, %125, !dbg !20983
  store i64 %add126, i64* %e, align 8, !dbg !20983, !tbaa !3308
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !20983, !ctir !2528
  %128 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add128 = add nsw i32 %128, 5, !dbg !20983
  %idxprom129 = sext i32 %add128 to i64, !dbg !20983
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !20983, !ctir !2489
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !20983, !tbaa !3308
  %130 = load i64, i64* %f, align 8, !dbg !20983, !tbaa !3308
  %add131 = add i64 %130, %129, !dbg !20983
  store i64 %add131, i64* %f, align 8, !dbg !20983, !tbaa !3308
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !20983, !ctir !2528
  %132 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add133 = add nsw i32 %132, 6, !dbg !20983
  %idxprom134 = sext i32 %add133 to i64, !dbg !20983
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !20983, !ctir !2489
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !20983, !tbaa !3308
  %134 = load i64, i64* %g, align 8, !dbg !20983, !tbaa !3308
  %add136 = add i64 %134, %133, !dbg !20983
  store i64 %add136, i64* %g, align 8, !dbg !20983, !tbaa !3308
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !20983, !ctir !2528
  %136 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add138 = add nsw i32 %136, 7, !dbg !20983
  %idxprom139 = sext i32 %add138 to i64, !dbg !20983
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !20983, !ctir !2489
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !20983, !tbaa !3308
  %138 = load i64, i64* %h, align 8, !dbg !20983, !tbaa !3308
  %add141 = add i64 %138, %137, !dbg !20983
  store i64 %add141, i64* %h, align 8, !dbg !20983, !tbaa !3308
  %139 = load i64, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %140 = load i64, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %sub142 = sub i64 %140, %139, !dbg !20985
  store i64 %sub142, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %141 = load i64, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %call143 = call i64 @just(i64 %141), !dbg !20985
  %shr144 = lshr i64 %call143, 9, !dbg !20985
  %142 = load i64, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %xor145 = xor i64 %142, %shr144, !dbg !20985
  store i64 %xor145, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %143 = load i64, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %144 = load i64, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %add146 = add i64 %144, %143, !dbg !20985
  store i64 %add146, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %145 = load i64, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %146 = load i64, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %sub147 = sub i64 %146, %145, !dbg !20985
  store i64 %sub147, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %147 = load i64, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %shl148 = shl i64 %147, 9, !dbg !20985
  %148 = load i64, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %xor149 = xor i64 %148, %shl148, !dbg !20985
  store i64 %xor149, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %149 = load i64, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %150 = load i64, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %add150 = add i64 %150, %149, !dbg !20985
  store i64 %add150, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %151 = load i64, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %152 = load i64, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %sub151 = sub i64 %152, %151, !dbg !20985
  store i64 %sub151, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %153 = load i64, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %call152 = call i64 @just(i64 %153), !dbg !20985
  %shr153 = lshr i64 %call152, 23, !dbg !20985
  %154 = load i64, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %xor154 = xor i64 %154, %shr153, !dbg !20985
  store i64 %xor154, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %155 = load i64, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %156 = load i64, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %add155 = add i64 %156, %155, !dbg !20985
  store i64 %add155, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %157 = load i64, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %158 = load i64, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %sub156 = sub i64 %158, %157, !dbg !20985
  store i64 %sub156, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %159 = load i64, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %shl157 = shl i64 %159, 15, !dbg !20985
  %160 = load i64, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %xor158 = xor i64 %160, %shl157, !dbg !20985
  store i64 %xor158, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %161 = load i64, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %162 = load i64, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %add159 = add i64 %162, %161, !dbg !20985
  store i64 %add159, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %163 = load i64, i64* %a, align 8, !dbg !20985, !tbaa !3308
  %164 = load i64, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %sub160 = sub i64 %164, %163, !dbg !20985
  store i64 %sub160, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %165 = load i64, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %call161 = call i64 @just(i64 %165), !dbg !20985
  %shr162 = lshr i64 %call161, 14, !dbg !20985
  %166 = load i64, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %xor163 = xor i64 %166, %shr162, !dbg !20985
  store i64 %xor163, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %167 = load i64, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %168 = load i64, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %add164 = add i64 %168, %167, !dbg !20985
  store i64 %add164, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %169 = load i64, i64* %b, align 8, !dbg !20985, !tbaa !3308
  %170 = load i64, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %sub165 = sub i64 %170, %169, !dbg !20985
  store i64 %sub165, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %171 = load i64, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %shl166 = shl i64 %171, 20, !dbg !20985
  %172 = load i64, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %xor167 = xor i64 %172, %shl166, !dbg !20985
  store i64 %xor167, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %173 = load i64, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %174 = load i64, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %add168 = add i64 %174, %173, !dbg !20985
  store i64 %add168, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %175 = load i64, i64* %c, align 8, !dbg !20985, !tbaa !3308
  %176 = load i64, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %sub169 = sub i64 %176, %175, !dbg !20985
  store i64 %sub169, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %177 = load i64, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %call170 = call i64 @just(i64 %177), !dbg !20985
  %shr171 = lshr i64 %call170, 17, !dbg !20985
  %178 = load i64, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %xor172 = xor i64 %178, %shr171, !dbg !20985
  store i64 %xor172, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %179 = load i64, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %180 = load i64, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %add173 = add i64 %180, %179, !dbg !20985
  store i64 %add173, i64* %f, align 8, !dbg !20985, !tbaa !3308
  %181 = load i64, i64* %d, align 8, !dbg !20985, !tbaa !3308
  %182 = load i64, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %sub174 = sub i64 %182, %181, !dbg !20985
  store i64 %sub174, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %183 = load i64, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %shl175 = shl i64 %183, 14, !dbg !20985
  %184 = load i64, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %xor176 = xor i64 %184, %shl175, !dbg !20985
  store i64 %xor176, i64* %e, align 8, !dbg !20985, !tbaa !3308
  %185 = load i64, i64* %h, align 8, !dbg !20985, !tbaa !3308
  %186 = load i64, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %add177 = add i64 %186, %185, !dbg !20985
  store i64 %add177, i64* %g, align 8, !dbg !20985, !tbaa !3308
  %187 = load i64, i64* %a, align 8, !dbg !20983, !tbaa !3308
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !20983, !ctir !2528
  %189 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %idxprom179 = sext i32 %189 to i64, !dbg !20983
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !20983, !ctir !2489
  store i64 %187, i64* %arrayidx180, align 8, !dbg !20983, !tbaa !3308
  %190 = load i64, i64* %b, align 8, !dbg !20983, !tbaa !3308
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !20983, !ctir !2528
  %192 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add182 = add nsw i32 %192, 1, !dbg !20983
  %idxprom183 = sext i32 %add182 to i64, !dbg !20983
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !20983, !ctir !2489
  store i64 %190, i64* %arrayidx184, align 8, !dbg !20983, !tbaa !3308
  %193 = load i64, i64* %c, align 8, !dbg !20983, !tbaa !3308
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !20983, !ctir !2528
  %195 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add186 = add nsw i32 %195, 2, !dbg !20983
  %idxprom187 = sext i32 %add186 to i64, !dbg !20983
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !20983, !ctir !2489
  store i64 %193, i64* %arrayidx188, align 8, !dbg !20983, !tbaa !3308
  %196 = load i64, i64* %d, align 8, !dbg !20983, !tbaa !3308
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !20983, !ctir !2528
  %198 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add190 = add nsw i32 %198, 3, !dbg !20983
  %idxprom191 = sext i32 %add190 to i64, !dbg !20983
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !20983, !ctir !2489
  store i64 %196, i64* %arrayidx192, align 8, !dbg !20983, !tbaa !3308
  %199 = load i64, i64* %e, align 8, !dbg !20983, !tbaa !3308
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !20983, !ctir !2528
  %201 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add194 = add nsw i32 %201, 4, !dbg !20983
  %idxprom195 = sext i32 %add194 to i64, !dbg !20983
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !20983, !ctir !2489
  store i64 %199, i64* %arrayidx196, align 8, !dbg !20983, !tbaa !3308
  %202 = load i64, i64* %f, align 8, !dbg !20983, !tbaa !3308
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !20983, !ctir !2528
  %204 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add198 = add nsw i32 %204, 5, !dbg !20983
  %idxprom199 = sext i32 %add198 to i64, !dbg !20983
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !20983, !ctir !2489
  store i64 %202, i64* %arrayidx200, align 8, !dbg !20983, !tbaa !3308
  %205 = load i64, i64* %g, align 8, !dbg !20983, !tbaa !3308
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !20983, !ctir !2528
  %207 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add202 = add nsw i32 %207, 6, !dbg !20983
  %idxprom203 = sext i32 %add202 to i64, !dbg !20983
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !20983, !ctir !2489
  store i64 %205, i64* %arrayidx204, align 8, !dbg !20983, !tbaa !3308
  %208 = load i64, i64* %h, align 8, !dbg !20983, !tbaa !3308
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20983, !tbaa !2668
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !20983, !ctir !2528
  %210 = load i32, i32* %i99, align 4, !dbg !20983, !tbaa !2655
  %add206 = add nsw i32 %210, 7, !dbg !20983
  %idxprom207 = sext i32 %add206 to i64, !dbg !20983
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !20983, !ctir !2489
  store i64 %208, i64* %arrayidx208, align 8, !dbg !20983, !tbaa !3308
  br label %for.inc209, !dbg !20983

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !20981, !tbaa !2655
  %add210 = add nsw i32 %211, 8, !dbg !20981
  store i32 %add210, i32* %i99, align 4, !dbg !20981, !tbaa !2655
  br label %for.cond100, !dbg !20981, !llvm.loop !20987

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20988, !tbaa !2668
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !20989, !ctir !2528
  store i64 0, i64* %c212, align 8, !dbg !20990, !tbaa !20839, !ctir !2490
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20991, !tbaa !2668
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !20992, !ctir !2528
  store i64 0, i64* %b213, align 8, !dbg !20993, !tbaa !20835, !ctir !2490
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !20994, !tbaa !2668
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !20995, !ctir !2528
  store i64 0, i64* %a214, align 8, !dbg !20996, !tbaa !20830, !ctir !2490
  ret void, !dbg !20997
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !20998 !ctir !1798 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21000, metadata !DIExpression()), !dbg !21001
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21002, !tbaa !2655
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !21003
  ret i32 %call, !dbg !21004
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @explicit_bzero(i8* nonnull %s, i64 %len) #4 !dbg !21005 !ctir !2547 {
entry:
  %s.addr = alloca i8*, align 8, !ctir !47
  %len.addr = alloca i64, align 8, !ctir !52
  store i8* %s, i8** %s.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !21007, metadata !DIExpression()), !dbg !21008
  store i64 %len, i64* %len.addr, align 8, !tbaa !3308
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !21009, metadata !DIExpression()), !dbg !21010
  %0 = load i8*, i8** %s.addr, align 8, !dbg !21011, !tbaa !2668
  %1 = load i64, i64* %len.addr, align 8, !dbg !21012, !tbaa !3308
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 %1, i1 false), !dbg !21013
  ret void, !dbg !21014
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !21015 !ctir !2552 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %fp.addr = alloca %struct._IO_FILE*, align 8, !ctir !2554
  %saved_errno = alloca i32, align 4, !ctir !5
  %fd = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21017, metadata !DIExpression()), !dbg !21018
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21019, metadata !DIExpression()), !dbg !21020
  store i32 0, i32* %saved_errno, align 4, !dbg !21020, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21021, metadata !DIExpression()), !dbg !21022
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21023, metadata !DIExpression()), !dbg !21024
  store i32 0, i32* %result, align 4, !dbg !21024, !tbaa !2655
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21025, !tbaa !2668
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9, !dbg !21026
  store i32 %call, i32* %fd, align 4, !dbg !21027, !tbaa !2655
  %1 = load i32, i32* %fd, align 4, !dbg !21028, !tbaa !2655
  %cmp = icmp slt i32 %1, 0, !dbg !21030
  br i1 %cmp, label %if.then, label %if.end, !dbg !21031

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21032, !tbaa !2668
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21033
  store i32 %call1, i32* %retval, align 4, !dbg !21034
  br label %return, !dbg !21034

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21035, !tbaa !2668
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #9, !dbg !21035
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21035
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21037

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21038, !tbaa !2668
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #9, !dbg !21039
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #9, !dbg !21040
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21041
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21042

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21043, !tbaa !2668
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21044
  %tobool = icmp ne i32 %call7, 0, !dbg !21044
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21045

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #16, !dbg !21046
  %6 = load i32, i32* %call9, align 4, !dbg !21046, !tbaa !2655, !ctir !5
  store i32 %6, i32* %saved_errno, align 4, !dbg !21047, !tbaa !2655
  br label %if.end10, !dbg !21048

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21049, !tbaa !2668
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21050
  store i32 %call11, i32* %result, align 4, !dbg !21051, !tbaa !2655
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21052, !tbaa !2655
  %cmp12 = icmp ne i32 %8, 0, !dbg !21054
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21055

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21056, !tbaa !2655
  %call14 = call i32* @__errno_location() #16, !dbg !21058
  store i32 %9, i32* %call14, align 4, !dbg !21059, !tbaa !2655, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !21060, !tbaa !2655
  br label %if.end15, !dbg !21061

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21062, !tbaa !2655
  store i32 %10, i32* %retval, align 4, !dbg !21063
  br label %return, !dbg !21063

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21064
  ret i32 %11, !dbg !21064
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !21065 !ctir !517 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %action.addr = alloca i32, align 4, !ctir !5
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1398
  %result = alloca i32, align 4, !ctir !5
  %target = alloca i32, align 4, !ctir !5
  %target4 = alloca i32, align 4, !ctir !5
  %x = alloca i32, align 4, !ctir !5
  %p = alloca i8*, align 8, !ctir !47
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21068, metadata !DIExpression()), !dbg !21069
  store i32 %action, i32* %action.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !21070, metadata !DIExpression()), !dbg !21071
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !21072, metadata !DIExpression()), !dbg !21073
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21074, metadata !DIExpression()), !dbg !21075
  store i32 -1, i32* %result, align 4, !dbg !21075, !tbaa !2655
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21076
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !21076
  call void @llvm.va_start(i8* %arraydecay1), !dbg !21076
  %0 = load i32, i32* %action.addr, align 4, !dbg !21077, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !21078

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !21079, metadata !DIExpression()), !dbg !21082
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21083
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !21083
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !21083
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !21083
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !21083

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !21083
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !21083
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !21083
  %3 = bitcast i8* %2 to i32*, !dbg !21083
  %4 = add i32 %gp_offset, 8, !dbg !21083
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !21083
  br label %vaarg.end, !dbg !21083

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !21083
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !21083
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !21083
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !21083
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !21083
  br label %vaarg.end, !dbg !21083

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !21083
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !21083
  store i32 %6, i32* %target, align 4, !dbg !21082, !tbaa !2655
  %7 = load i32, i32* %fd.addr, align 4, !dbg !21084, !tbaa !2655
  %8 = load i32, i32* %target, align 4, !dbg !21085, !tbaa !2655
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !21086
  store i32 %call, i32* %result, align 4, !dbg !21087, !tbaa !2655
  br label %sw.epilog48, !dbg !21088

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !21089, metadata !DIExpression()), !dbg !21091
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21092
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !21092
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !21092
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !21092
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !21092

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !21092
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !21092
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !21092
  %11 = bitcast i8* %10 to i32*, !dbg !21092
  %12 = add i32 %gp_offset7, 8, !dbg !21092
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !21092
  br label %vaarg.end15, !dbg !21092

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !21092
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !21092
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !21092
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !21092
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !21092
  br label %vaarg.end15, !dbg !21092

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !21092
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !21092
  store i32 %14, i32* %target4, align 4, !dbg !21091, !tbaa !2655
  %15 = load i32, i32* %fd.addr, align 4, !dbg !21093, !tbaa !2655
  %16 = load i32, i32* %target4, align 4, !dbg !21094, !tbaa !2655
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !21095
  store i32 %call17, i32* %result, align 4, !dbg !21096, !tbaa !2655
  br label %sw.epilog48, !dbg !21097

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !21098, !tbaa !2655
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 11, label %sw.bb18
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !21100

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !21101, !tbaa !2655
  %19 = load i32, i32* %action.addr, align 4, !dbg !21103, !tbaa !2655
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !21104
  store i32 %call19, i32* %result, align 4, !dbg !21105, !tbaa !2655
  br label %sw.epilog, !dbg !21106

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21107, metadata !DIExpression()), !dbg !21109
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21110
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !21110
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !21110
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !21110
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !21110

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !21110
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !21110
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !21110
  %22 = bitcast i8* %21 to i32*, !dbg !21110
  %23 = add i32 %gp_offset23, 8, !dbg !21110
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !21110
  br label %vaarg.end31, !dbg !21110

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !21110
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !21110
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !21110
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !21110
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !21110
  br label %vaarg.end31, !dbg !21110

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !21110
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !21110
  store i32 %25, i32* %x, align 4, !dbg !21109, !tbaa !2655
  %26 = load i32, i32* %fd.addr, align 4, !dbg !21111, !tbaa !2655
  %27 = load i32, i32* %action.addr, align 4, !dbg !21112, !tbaa !2655
  %28 = load i32, i32* %x, align 4, !dbg !21113, !tbaa !2655
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !21114
  store i32 %call33, i32* %result, align 4, !dbg !21115, !tbaa !2655
  br label %sw.epilog, !dbg !21116

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !21117, metadata !DIExpression()), !dbg !21119
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21120
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !21120
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !21120
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !21120
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !21120

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !21120
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !21120
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !21120
  %31 = bitcast i8* %30 to i8**, !dbg !21120
  %32 = add i32 %gp_offset37, 8, !dbg !21120
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !21120
  br label %vaarg.end45, !dbg !21120

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !21120
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !21120
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !21120
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !21120
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !21120
  br label %vaarg.end45, !dbg !21120

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !21120
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !21120
  store i8* %34, i8** %p, align 8, !dbg !21119, !tbaa !2668
  %35 = load i32, i32* %fd.addr, align 4, !dbg !21121, !tbaa !2655
  %36 = load i32, i32* %action.addr, align 4, !dbg !21122, !tbaa !2655
  %37 = load i8*, i8** %p, align 8, !dbg !21123, !tbaa !2668
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !21124
  store i32 %call47, i32* %result, align 4, !dbg !21125, !tbaa !2655
  br label %sw.epilog, !dbg !21126

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !21127

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21128
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !21128
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !21128
  %38 = load i32, i32* %result, align 4, !dbg !21129, !tbaa !2655
  ret i32 %38, !dbg !21130
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !21131 !ctir !517 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %target.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21132, metadata !DIExpression()), !dbg !21133
  store i32 %target, i32* %target.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21134, metadata !DIExpression()), !dbg !21135
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21136, metadata !DIExpression()), !dbg !21137
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21138, !tbaa !2655
  %1 = load i32, i32* %target.addr, align 4, !dbg !21139, !tbaa !2655
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !21140
  store i32 %call, i32* %result, align 4, !dbg !21141, !tbaa !2655
  %2 = load i32, i32* %result, align 4, !dbg !21142, !tbaa !2655
  ret i32 %2, !dbg !21143
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1393 !ctir !517 {
entry:
  %fd.addr = alloca i32, align 4, !ctir !5
  %target.addr = alloca i32, align 4, !ctir !5
  %result = alloca i32, align 4, !ctir !5
  %flags = alloca i32, align 4, !ctir !5
  %saved_errno = alloca i32, align 4, !ctir !5
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21144, metadata !DIExpression()), !dbg !21145
  store i32 %target, i32* %target.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21146, metadata !DIExpression()), !dbg !21147
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21148, metadata !DIExpression()), !dbg !21149
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21150, !tbaa !2655
  %cmp = icmp sle i32 0, %0, !dbg !21152
  br i1 %cmp, label %if.then, label %if.else9, !dbg !21153

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !21154, !tbaa !2655
  %2 = load i32, i32* %target.addr, align 4, !dbg !21156, !tbaa !2655
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !21157
  store i32 %call, i32* %result, align 4, !dbg !21158, !tbaa !2655
  %3 = load i32, i32* %result, align 4, !dbg !21159, !tbaa !2655
  %cmp1 = icmp sle i32 0, %3, !dbg !21161
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !21162

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !21163
  %4 = load i32, i32* %call2, align 4, !dbg !21163, !tbaa !2655, !ctir !5
  %cmp3 = icmp ne i32 %4, 22, !dbg !21164
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !21165

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21166, !tbaa !2655
  br label %if.end8, !dbg !21168

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !21169, !tbaa !2655
  %6 = load i32, i32* %target.addr, align 4, !dbg !21171, !tbaa !2655
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !21172
  store i32 %call5, i32* %result, align 4, !dbg !21173, !tbaa !2655
  %7 = load i32, i32* %result, align 4, !dbg !21174, !tbaa !2655
  %cmp6 = icmp sge i32 %7, 0, !dbg !21176
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !21177

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21178, !tbaa !2655
  br label %if.end, !dbg !21179

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !21180

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !21181, !tbaa !2655
  %9 = load i32, i32* %target.addr, align 4, !dbg !21182, !tbaa !2655
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !21183
  store i32 %call10, i32* %result, align 4, !dbg !21184, !tbaa !2655
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !21185, !tbaa !2655
  %cmp12 = icmp sle i32 0, %10, !dbg !21187
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !21188

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21189, !tbaa !2655
  %cmp13 = icmp eq i32 %11, -1, !dbg !21190
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !21191

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !21192, metadata !DIExpression()), !dbg !21194
  %12 = load i32, i32* %result, align 4, !dbg !21195, !tbaa !2655
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !21196
  store i32 %call15, i32* %flags, align 4, !dbg !21194, !tbaa !2655
  %13 = load i32, i32* %flags, align 4, !dbg !21197, !tbaa !2655
  %cmp16 = icmp slt i32 %13, 0, !dbg !21199
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !21200

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !21201, !tbaa !2655
  %15 = load i32, i32* %flags, align 4, !dbg !21202, !tbaa !2655
  %or = or i32 %15, 1, !dbg !21203
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !21204
  %cmp19 = icmp eq i32 %call18, -1, !dbg !21205
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !21206

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21207, metadata !DIExpression()), !dbg !21209
  %call21 = call i32* @__errno_location() #16, !dbg !21210
  %16 = load i32, i32* %call21, align 4, !dbg !21210, !tbaa !2655, !ctir !5
  store i32 %16, i32* %saved_errno, align 4, !dbg !21209, !tbaa !2655
  %17 = load i32, i32* %result, align 4, !dbg !21211, !tbaa !2655
  %call22 = call i32 @close(i32 %17), !dbg !21212
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21213, !tbaa !2655
  %call23 = call i32* @__errno_location() #16, !dbg !21214
  store i32 %18, i32* %call23, align 4, !dbg !21215, !tbaa !2655, !ctir !5
  store i32 -1, i32* %result, align 4, !dbg !21216, !tbaa !2655
  br label %if.end24, !dbg !21217

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !21218

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !21219, !tbaa !2655
  ret i32 %19, !dbg !21220
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @rpl_nl_langinfo(i32 %item) #4 !dbg !21221 !ctir !2597 {
entry:
  %item.addr = alloca i32, align 4, !ctir !2599
  store i32 %item, i32* %item.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %item.addr, metadata !21223, metadata !DIExpression()), !dbg !21224
  %0 = load i32, i32* %item.addr, align 4, !dbg !21225, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 10200, label %sw.bb
    i32 10201, label %sw.bb
    i32 10202, label %sw.bb
    i32 10203, label %sw.bb
    i32 10204, label %sw.bb
    i32 10205, label %sw.bb
    i32 10206, label %sw.bb
    i32 10207, label %sw.bb
    i32 10208, label %sw.bb
    i32 10209, label %sw.bb
    i32 10210, label %sw.bb
    i32 10211, label %sw.bb
  ], !dbg !21226

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %item.addr, align 4, !dbg !21227, !tbaa !2655
  %sub = sub nsw i32 %1, 10200, !dbg !21229
  %add = add nsw i32 %sub, 131098, !dbg !21230
  store i32 %add, i32* %item.addr, align 4, !dbg !21231, !tbaa !2655
  br label %sw.epilog, !dbg !21232

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !21233

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  %2 = load i32, i32* %item.addr, align 4, !dbg !21234, !tbaa !2655
  %call = call i8* @nl_langinfo(i32 %2) #9, !dbg !21235
  ret i8* %call, !dbg !21236
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !21237 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21239, metadata !DIExpression()), !dbg !21240
  %0 = load i32, i32* %c.addr, align 4, !dbg !21241, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21242

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21243
  br label %return, !dbg !21243

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21245
  br label %return, !dbg !21245

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21246
  ret i1 %1, !dbg !21246
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !21247 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21248, metadata !DIExpression()), !dbg !21249
  %0 = load i32, i32* %c.addr, align 4, !dbg !21250, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21251

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21252
  br label %return, !dbg !21252

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21254
  br label %return, !dbg !21254

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21255
  ret i1 %1, !dbg !21255
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !21256 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21257, metadata !DIExpression()), !dbg !21258
  %0 = load i32, i32* %c.addr, align 4, !dbg !21259, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21260

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21261
  br label %return, !dbg !21261

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21263
  br label %return, !dbg !21263

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21264
  ret i1 %1, !dbg !21264
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !21265 !ctir !253 {
entry:
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21266, metadata !DIExpression()), !dbg !21267
  %0 = load i32, i32* %c.addr, align 4, !dbg !21268, !tbaa !2655
  %cmp = icmp eq i32 %0, 32, !dbg !21269
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !21270

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21271, !tbaa !2655
  %cmp1 = icmp eq i32 %1, 9, !dbg !21272
  br label %lor.end, !dbg !21270

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !21273
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !21274 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21275, metadata !DIExpression()), !dbg !21276
  %0 = load i32, i32* %c.addr, align 4, !dbg !21277, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !21278

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21279
  br label %return, !dbg !21279

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21281
  br label %return, !dbg !21281

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21282
  ret i1 %1, !dbg !21282
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !21283 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21284, metadata !DIExpression()), !dbg !21285
  %0 = load i32, i32* %c.addr, align 4, !dbg !21286, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !21287

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21288
  br label %return, !dbg !21288

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21290
  br label %return, !dbg !21290

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21291
  ret i1 %1, !dbg !21291
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !21292 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21293, metadata !DIExpression()), !dbg !21294
  %0 = load i32, i32* %c.addr, align 4, !dbg !21295, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21296

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21297
  br label %return, !dbg !21297

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21299
  br label %return, !dbg !21299

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21300
  ret i1 %1, !dbg !21300
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !21301 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21302, metadata !DIExpression()), !dbg !21303
  %0 = load i32, i32* %c.addr, align 4, !dbg !21304, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21305

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21306
  br label %return, !dbg !21306

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21308
  br label %return, !dbg !21308

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21309
  ret i1 %1, !dbg !21309
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !21310 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21311, metadata !DIExpression()), !dbg !21312
  %0 = load i32, i32* %c.addr, align 4, !dbg !21313, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21314

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21315
  br label %return, !dbg !21315

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21317
  br label %return, !dbg !21317

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21318
  ret i1 %1, !dbg !21318
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !21319 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21320, metadata !DIExpression()), !dbg !21321
  %0 = load i32, i32* %c.addr, align 4, !dbg !21322, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !21323

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21324
  br label %return, !dbg !21324

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21326
  br label %return, !dbg !21326

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21327
  ret i1 %1, !dbg !21327
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !21328 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21329, metadata !DIExpression()), !dbg !21330
  %0 = load i32, i32* %c.addr, align 4, !dbg !21331, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !21332

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21333
  br label %return, !dbg !21333

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21335
  br label %return, !dbg !21335

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21336
  ret i1 %1, !dbg !21336
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !21337 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21338, metadata !DIExpression()), !dbg !21339
  %0 = load i32, i32* %c.addr, align 4, !dbg !21340, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21341

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21342
  br label %return, !dbg !21342

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21344
  br label %return, !dbg !21344

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21345
  ret i1 %1, !dbg !21345
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !21346 !ctir !253 {
entry:
  %retval = alloca i1, align 1, !ctir !139
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21347, metadata !DIExpression()), !dbg !21348
  %0 = load i32, i32* %c.addr, align 4, !dbg !21349, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !21350

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21351
  br label %return, !dbg !21351

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21353
  br label %return, !dbg !21353

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21354
  ret i1 %1, !dbg !21354
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !21355 !ctir !1798 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21356, metadata !DIExpression()), !dbg !21357
  %0 = load i32, i32* %c.addr, align 4, !dbg !21358, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21359

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21360, !tbaa !2655
  %sub = sub nsw i32 %1, 65, !dbg !21362
  %add = add nsw i32 %sub, 97, !dbg !21363
  store i32 %add, i32* %retval, align 4, !dbg !21364
  br label %return, !dbg !21364

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21365, !tbaa !2655
  store i32 %2, i32* %retval, align 4, !dbg !21366
  br label %return, !dbg !21366

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21367
  ret i32 %3, !dbg !21367
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !21368 !ctir !1798 {
entry:
  %retval = alloca i32, align 4, !ctir !5
  %c.addr = alloca i32, align 4, !ctir !5
  store i32 %c, i32* %c.addr, align 4, !tbaa !2655
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21369, metadata !DIExpression()), !dbg !21370
  %0 = load i32, i32* %c.addr, align 4, !dbg !21371, !tbaa !2655
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21372

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21373, !tbaa !2655
  %sub = sub nsw i32 %1, 97, !dbg !21375
  %add = add nsw i32 %sub, 65, !dbg !21376
  store i32 %add, i32* %retval, align 4, !dbg !21377
  br label %return, !dbg !21377

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21378, !tbaa !2655
  store i32 %2, i32* %retval, align 4, !dbg !21379
  br label %return, !dbg !21379

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21380
  ret i32 %3, !dbg !21380
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !21381 !ctir !2607 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8, !ctir !2609
  %file.addr = alloca i8*, align 8, !ctir !177
  %mode.addr = alloca i8*, align 8, !ctir !177
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2609
  %fd = alloca i32, align 4, !ctir !5
  %f = alloca i32, align 4, !ctir !5
  %e = alloca i32, align 4, !ctir !5
  %e15 = alloca i32, align 4, !ctir !5
  store i8* %file, i8** %file.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21383, metadata !DIExpression()), !dbg !21384
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2668
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !21385, metadata !DIExpression()), !dbg !21386
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !21387, metadata !DIExpression()), !dbg !21388
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21389, !tbaa !2668
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !21390, !tbaa !2668
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !21391
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !21388, !tbaa !2668
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21392, !tbaa !2668
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !21392
  br i1 %tobool, label %if.then, label %if.end21, !dbg !21394

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21395, metadata !DIExpression()), !dbg !21397
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21398, !tbaa !2668
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #9, !dbg !21399
  store i32 %call1, i32* %fd, align 4, !dbg !21397, !tbaa !2655
  %4 = load i32, i32* %fd, align 4, !dbg !21400, !tbaa !2655
  %cmp = icmp sle i32 0, %4, !dbg !21402
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !21403

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !21404, !tbaa !2655
  %cmp2 = icmp sle i32 %5, 2, !dbg !21405
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !21406

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !21407, metadata !DIExpression()), !dbg !21409
  %6 = load i32, i32* %fd, align 4, !dbg !21410, !tbaa !2655
  %call4 = call i32 @dup_safer(i32 %6), !dbg !21411
  store i32 %call4, i32* %f, align 4, !dbg !21409, !tbaa !2655
  %7 = load i32, i32* %f, align 4, !dbg !21412, !tbaa !2655
  %cmp5 = icmp slt i32 %7, 0, !dbg !21414
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21415

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !21416, metadata !DIExpression()), !dbg !21418
  %call7 = call i32* @__errno_location() #16, !dbg !21419
  %8 = load i32, i32* %call7, align 4, !dbg !21419, !tbaa !2655, !ctir !5
  store i32 %8, i32* %e, align 4, !dbg !21418, !tbaa !2655
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21420, !tbaa !2668
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !21421
  %10 = load i32, i32* %e, align 4, !dbg !21422, !tbaa !2655
  %call9 = call i32* @__errno_location() #16, !dbg !21423
  store i32 %10, i32* %call9, align 4, !dbg !21424, !tbaa !2655, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !21425
  br label %return, !dbg !21425

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21426, !tbaa !2668
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !21428
  %cmp11 = icmp ne i32 %call10, 0, !dbg !21429
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !21430

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !21431, !tbaa !2655
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !21432, !tbaa !2668
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #9, !dbg !21433
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !21434, !tbaa !2668
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !21434
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !21435

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !21436, metadata !DIExpression()), !dbg !21438
  %call16 = call i32* @__errno_location() #16, !dbg !21439
  %14 = load i32, i32* %call16, align 4, !dbg !21439, !tbaa !2655, !ctir !5
  store i32 %14, i32* %e15, align 4, !dbg !21438, !tbaa !2655
  %15 = load i32, i32* %f, align 4, !dbg !21440, !tbaa !2655
  %call17 = call i32 @close(i32 %15), !dbg !21441
  %16 = load i32, i32* %e15, align 4, !dbg !21442, !tbaa !2655
  %call18 = call i32* @__errno_location() #16, !dbg !21443
  store i32 %16, i32* %call18, align 4, !dbg !21444, !tbaa !2655, !ctir !5
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !21445
  br label %return, !dbg !21445

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !21446

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !21447

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21448, !tbaa !2668
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !21449
  br label %return, !dbg !21449

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !21450
  ret %struct._IO_FILE* %18, !dbg !21450
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!62, !1409, !354, !596, !1464, !622, !1515, !655, !1517, !1522, !1527, !661, !1533, !698, !1536, !721, !767, !1541, !1544, !1549, !816, !1552, !1610, !1624, !1663, !1695, !1700, !1703, !1708, !823, !1713, !1724, !1742, !1761, !1784, !964, !1789, !1791, !1009, !1793, !1800, !1803, !1806, !1148, !1813, !1861, !1890, !1923, !1191, !1950, !1242, !1262, !1953, !1315, !1329, !2017, !2034, !2037, !2057, !2098, !2145, !2190, !2235, !2252, !2262, !2271, !1337, !2280, !2295, !2298, !2344, !2349, !2361, !2364, !2367, !2371, !2376, !2390, !2421, !2522, !2542, !2544, !2549, !1395, !2594, !2601, !2604}
!llvm.ident = !{}
!llvm.module.flags = !{!2650, !2651, !2652, !2653}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !3)
!2 = !DIFile(filename: "/usr/include/libio.h", directory: "")
!3 = !{!4, !6, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !26, !27, !28, !29, !33, !35, !37, !41, !44, !46, !48, !49, !50, !51, !55, !56}
!4 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1, file: !2, line: 242, baseType: !5, size: 32)
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1, file: !2, line: 260, baseType: !20, size: 64, offset: 768)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !22)
!22 = !{!23, !24, !25}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !21, file: !2, line: 157, baseType: !20, size: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !21, file: !2, line: 158, baseType: !0, size: 64, offset: 64)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !21, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1, file: !2, line: 262, baseType: !0, size: 64, offset: 832)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!30 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !31, line: 131, baseType: !32)
!31 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!32 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!34 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!36 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!38 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8, elements: !39)
!39 = !{!40}
!40 = !DISubrange(count: 1)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2, line: 150, baseType: null)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!45 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !31, line: 132, baseType: !32)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!47 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !53, line: 46, baseType: !54)
!53 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mohamad/clone")
!54 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!57 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 160, elements: !58)
!58 = !{!59}
!59 = !DISubrange(count: 20)
!60 = !DIGlobalVariableExpression(var: !61, expr: !DIExpression())
!61 = distinct !DIGlobalVariable(name: "selinux_enabled", scope: !62, file: !63, line: 53, type: !5, isLocal: true, isDefinition: true)
!62 = distinct !DICompileUnit(language: DW_LANG_C99, file: !63, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !64, retainedTypes: !118, globals: !314, nameTableKind: None)
!63 = !DIFile(filename: "src/install.c", directory: "/home/mohamad/clone/coreutils")
!64 = !{!65, !73, !80, !86, !92, !97}
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !66, line: 30, baseType: !67, size: 32, elements: !68)
!66 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mohamad/clone/coreutils")
!67 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!68 = !{!69, !70, !71, !72}
!69 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !74, line: 69, baseType: !67, size: 32, elements: !75)
!74 = !DIFile(filename: "src/copy.h", directory: "/home/mohamad/clone/coreutils")
!75 = !{!76, !77, !78, !79}
!76 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!79 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!80 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !74, line: 60, baseType: !67, size: 32, elements: !81)
!81 = !{!82, !83, !84, !85}
!82 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!85 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!86 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !74, line: 26, baseType: !67, size: 32, elements: !87)
!87 = !{!88, !89, !90, !91}
!88 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!92 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !74, line: 47, baseType: !67, size: 32, elements: !93)
!93 = !{!94, !95, !96}
!94 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!95 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !99, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!98 = !DIFile(filename: "./lib/savewd.h", directory: "/home/mohamad/clone/coreutils")
!99 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !100)
!100 = !{!101, !102}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !99, file: !98, line: 66, baseType: !97, size: 32)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !99, file: !98, line: 74, baseType: !103, size: 32, offset: 32)
!103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !99, file: !98, line: 69, size: 32, elements: !104)
!104 = !{!105, !106, !107}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !103, file: !98, line: 71, baseType: !5, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !103, file: !98, line: 72, baseType: !5, size: 32)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !103, file: !98, line: 73, baseType: !108, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !109, line: 98, baseType: !110)
!109 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/types.h", directory: "")
!110 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !31, line: 133, baseType: !5)
!111 = !{!112, !113, !114, !115, !116, !117}
!112 = !DIEnumerator(name: "INITIAL_STATE", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "FD_STATE", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "FD_POST_CHDIR_STATE", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "FORKING_STATE", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "ERROR_STATE", value: 4, isUnsigned: true)
!117 = !DIEnumerator(name: "FINAL_STATE", value: 5, isUnsigned: true)
!118 = !{!119, !7, !47, !124, !126, !128, !122, !5, !0, !177, !179, !181, !139, !182, !137, !194, !136, !197, !199, !201, !212, !213, !172, !215, !217, !52, !219, !221, !232, !54, !125, !127, !240, !242, !243, !245, !247, !249, !251, !253, !255, !257, !259, !30, !261, !108, !263, !268, !272, !274, !309, !178, !312}
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !120, line: 85, baseType: !121)
!120 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = !DISubroutineType(types: !123)
!123 = !{null, !5}
!124 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !109, line: 80, baseType: !125)
!125 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !31, line: 125, baseType: !67)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !109, line: 65, baseType: !127)
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !31, line: 126, baseType: !67)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !130)
!130 = !{!131, !132, !133, !134, !135, !138, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !176}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !129, file: !74, line: 100, baseType: !65, size: 32)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !129, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!133 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !129, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !129, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !129, file: !74, line: 115, baseType: !136, size: 32, offset: 128)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !109, line: 70, baseType: !137)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !31, line: 129, baseType: !67)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !129, file: !74, line: 119, baseType: !139, size: 8, offset: 160)
!139 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !129, file: !74, line: 123, baseType: !139, size: 8, offset: 168)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !129, file: !74, line: 130, baseType: !139, size: 8, offset: 176)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !129, file: !74, line: 134, baseType: !139, size: 8, offset: 184)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !129, file: !74, line: 138, baseType: !139, size: 8, offset: 192)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !129, file: !74, line: 141, baseType: !139, size: 8, offset: 200)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !129, file: !74, line: 145, baseType: !139, size: 8, offset: 208)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !129, file: !74, line: 152, baseType: !139, size: 8, offset: 216)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !129, file: !74, line: 156, baseType: !139, size: 8, offset: 224)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !129, file: !74, line: 160, baseType: !139, size: 8, offset: 232)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !129, file: !74, line: 161, baseType: !139, size: 8, offset: 240)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !129, file: !74, line: 162, baseType: !139, size: 8, offset: 248)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !129, file: !74, line: 163, baseType: !139, size: 8, offset: 256)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !129, file: !74, line: 166, baseType: !139, size: 8, offset: 264)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !129, file: !74, line: 178, baseType: !139, size: 8, offset: 272)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !129, file: !74, line: 182, baseType: !139, size: 8, offset: 280)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !129, file: !74, line: 188, baseType: !139, size: 8, offset: 288)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !129, file: !74, line: 192, baseType: !139, size: 8, offset: 296)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !129, file: !74, line: 201, baseType: !139, size: 8, offset: 304)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !129, file: !74, line: 205, baseType: !139, size: 8, offset: 312)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !129, file: !74, line: 214, baseType: !139, size: 8, offset: 320)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !129, file: !74, line: 223, baseType: !139, size: 8, offset: 328)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !129, file: !74, line: 227, baseType: !139, size: 8, offset: 336)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !129, file: !74, line: 231, baseType: !139, size: 8, offset: 344)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !129, file: !74, line: 235, baseType: !139, size: 8, offset: 352)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !129, file: !74, line: 239, baseType: !139, size: 8, offset: 360)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !129, file: !74, line: 242, baseType: !139, size: 8, offset: 368)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !129, file: !74, line: 245, baseType: !139, size: 8, offset: 376)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !129, file: !74, line: 250, baseType: !139, size: 8, offset: 384)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !129, file: !74, line: 254, baseType: !139, size: 8, offset: 392)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !129, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !129, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !129, file: !74, line: 273, baseType: !172, size: 64, offset: 512)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !174, line: 69, baseType: !175)
!174 = !DIFile(filename: "./lib/hash.h", directory: "/home/mohamad/clone/coreutils")
!175 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !174, line: 67, flags: DIFlagFwdDecl)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !129, file: !74, line: 276, baseType: !172, size: 64, offset: 576)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!179 = !DISubroutineType(types: !180)
!180 = !{!5, !5, !181}
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 4608, elements: !192)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !185, line: 104, size: 256, elements: !186)
!185 = !DIFile(filename: "/usr/include/getopt.h", directory: "")
!186 = !{!187, !188, !189, !191}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !184, file: !185, line: 106, baseType: !177, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !184, file: !185, line: 109, baseType: !5, size: 32, offset: 64)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !184, file: !185, line: 110, baseType: !190, size: 64, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !184, file: !185, line: 111, baseType: !5, size: 32, offset: 192)
!192 = !{!193}
!193 = !DISubrange(count: 18)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !196, line: 25, flags: DIFlagFwdDecl)
!196 = !DIFile(filename: "./lib/modechange.h", directory: "/home/mohamad/clone/coreutils")
!197 = !DISubroutineType(types: !198)
!198 = !{null}
!199 = !DISubroutineType(types: !200)
!200 = !{null, !177}
!201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !202, size: 896, elements: !210)
!202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !203)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !205, file: !204, line: 633, size: 128, elements: !207)
!204 = !DIFile(filename: "src/system.h", directory: "/home/mohamad/clone/coreutils")
!205 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !204, file: !204, line: 631, type: !199, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!206 = !{}
!207 = !{!208, !209}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !203, file: !204, line: 633, baseType: !177, size: 64)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !203, file: !204, line: 633, baseType: !177, size: 64, offset: 64)
!210 = !{!211}
!211 = !DISubrange(count: 7)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!213 = !DISubroutineType(types: !214)
!214 = !{null, !128}
!215 = !DISubroutineType(types: !216)
!216 = !{!7, !177}
!217 = !DISubroutineType(types: !218)
!218 = !{!139, !177}
!219 = !DISubroutineType(types: !220)
!220 = !{!139, !136}
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !223, line: 49, size: 384, elements: !224)
!223 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!224 = !{!225, !226, !227, !228, !229, !230, !231}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !222, file: !223, line: 51, baseType: !7, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !222, file: !223, line: 52, baseType: !7, size: 64, offset: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !222, file: !223, line: 53, baseType: !125, size: 32, offset: 128)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !222, file: !223, line: 54, baseType: !127, size: 32, offset: 160)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !222, file: !223, line: 55, baseType: !7, size: 64, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !222, file: !223, line: 56, baseType: !7, size: 64, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !222, file: !223, line: 57, baseType: !7, size: 64, offset: 320)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !234, line: 42, size: 256, elements: !235)
!234 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!235 = !{!236, !237, !238, !239}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !233, file: !234, line: 44, baseType: !7, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !233, file: !234, line: 45, baseType: !7, size: 64, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !233, file: !234, line: 46, baseType: !127, size: 32, offset: 128)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !233, file: !234, line: 47, baseType: !181, size: 64, offset: 192)
!240 = !DISubroutineType(types: !241)
!241 = !{!5, !7, !242, !47}
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !99, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !129)
!245 = !DISubroutineType(types: !246)
!246 = !{!5, !177, !177, !47}
!247 = !DISubroutineType(types: !248)
!248 = !{!5, !177, !136}
!249 = !DISubroutineType(types: !250)
!250 = !{null, !177, !47}
!251 = !DISubroutineType(types: !252)
!252 = !{!139, !177, !139, !139}
!253 = !DISubroutineType(types: !254)
!254 = !{!139, !5}
!255 = !DISubroutineType(types: !256)
!256 = !{!139, !177, !7, !243}
!257 = !DISubroutineType(types: !258)
!258 = !{!139, !177, !7, !128, !139}
!259 = !DISubroutineType(types: !260)
!260 = !{!139, !177, !177, !243}
!261 = !DISubroutineType(types: !262)
!262 = !{!139, !5, !5}
!263 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !63, line: 564, size: 32, elements: !265)
!264 = distinct !DISubprogram(name: "strip", scope: !63, file: !63, line: 547, type: !217, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!265 = !{!266, !267}
!266 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !263, file: !63, line: 564, baseType: !5, size: 32)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !263, file: !63, line: 564, baseType: !5, size: 32)
!268 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !264, file: !63, line: 564, size: 32, elements: !269)
!269 = !{!270, !271}
!270 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !268, file: !63, line: 564, baseType: !5, size: 32)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !268, file: !63, line: 564, baseType: !5, size: 32)
!272 = !DISubroutineType(types: !273)
!273 = !{!139, !274, !177}
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !278)
!277 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!278 = !{!279, !281, !283, !285, !286, !287, !288, !289, !290, !291, !293, !295, !303, !304, !305}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !276, file: !277, line: 48, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !31, line: 124, baseType: !54)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !276, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !31, line: 127, baseType: !54)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !276, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !31, line: 130, baseType: !54)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !276, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !276, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !276, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !276, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !276, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !276, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !276, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!292 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !31, line: 153, baseType: !32)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !276, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !31, line: 158, baseType: !32)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !276, file: !277, line: 91, baseType: !296, size: 128, offset: 576)
!296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !298)
!297 = !DIFile(filename: "/usr/include/time.h", directory: "")
!298 = !{!299, !301}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !296, file: !297, line: 122, baseType: !300, size: 64)
!300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !31, line: 139, baseType: !32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !296, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !31, line: 175, baseType: !32)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !276, file: !277, line: 92, baseType: !296, size: 128, offset: 704)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !276, file: !277, line: 93, baseType: !296, size: 128, offset: 832)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !276, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !302, size: 192, elements: !307)
!307 = !{!308}
!308 = !DISubrange(count: 3)
!309 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 256, elements: !310)
!310 = !{!311}
!311 = !DISubrange(count: 2)
!312 = !DISubroutineType(types: !313)
!313 = !{!139, !177, !177, !243, !139}
!314 = !{!315, !317, !319, !321, !323, !60, !325, !327, !329, !331, !333, !335, !337, !339, !341, !347, !349}
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "owner_name", scope: !62, file: !63, line: 74, type: !7, isLocal: true, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "group_name", scope: !62, file: !63, line: 81, type: !7, isLocal: true, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "copy_only_if_needed", scope: !62, file: !63, line: 102, type: !139, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "strip_files", scope: !62, file: !63, line: 105, type: !139, isLocal: true, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "dir_arg", scope: !62, file: !63, line: 108, type: !139, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "long_options", scope: !62, file: !63, line: 121, type: !182, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "strip_program", scope: !62, file: !63, line: 111, type: !177, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "use_default_selinux_context", scope: !62, file: !63, line: 54, type: !139, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "mode", scope: !62, file: !63, line: 90, type: !136, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "dir_mode_bits", scope: !62, file: !63, line: 99, type: !136, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "dir_mode", scope: !62, file: !63, line: 93, type: !136, isLocal: true, isDefinition: true)
!337 = !DIGlobalVariableExpression(var: !338, expr: !DIExpression())
!338 = distinct !DIGlobalVariable(name: "owner_id", scope: !62, file: !63, line: 77, type: !124, isLocal: true, isDefinition: true)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "group_id", scope: !62, file: !63, line: 84, type: !126, isLocal: true, isDefinition: true)
!341 = !DIGlobalVariableExpression(var: !342, expr: !DIExpression())
!342 = distinct !DIGlobalVariable(name: "a_buff", scope: !343, file: !63, line: 149, type: !344, isLocal: true, isDefinition: true)
!343 = distinct !DISubprogram(name: "have_same_content", scope: !63, file: !63, line: 146, type: !261, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32768, elements: !345)
!345 = !{!346}
!346 = !DISubrange(count: 4096)
!347 = !DIGlobalVariableExpression(var: !348, expr: !DIExpression())
!348 = distinct !DIGlobalVariable(name: "b_buff", scope: !343, file: !63, line: 150, type: !344, isLocal: true, isDefinition: true)
!349 = !DIGlobalVariableExpression(var: !350, expr: !DIExpression())
!350 = distinct !DIGlobalVariable(name: "first_call", scope: !351, file: !63, line: 318, type: !139, isLocal: true, isDefinition: true)
!351 = distinct !DISubprogram(name: "setdefaultfilecon", scope: !63, file: !63, line: 314, type: !199, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!352 = !DIGlobalVariableExpression(var: !353, expr: !DIExpression())
!353 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !354, file: !355, line: 147, type: !177, isLocal: true, isDefinition: true)
!354 = distinct !DICompileUnit(language: DW_LANG_C99, file: !355, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !356, retainedTypes: !357, globals: !578, nameTableKind: None)
!355 = !DIFile(filename: "src/copy.c", directory: "/home/mohamad/clone/coreutils")
!356 = !{!65, !73, !80, !86, !92}
!357 = !{!136, !47, !67, !7, !54, !52, !358, !360, !139, !177, !362, !5, !405, !407, !409, !172, !410, !412, !413, !415, !253, !247, !251, !417, !419, !442, !137, !280, !282, !284, !450, !447, !449, !178, !30, !125, !127, !451, !452, !454, !456, !458, !460, !462, !464, !467, !217, !8, !505, !507, !509, !511, !513, !515, !292, !517, !519, !521, !294, !523, !525, !527, !529, !536, !538, !548, !550, !552, !554, !556, !558, !559, !561, !563, !565, !564, !566, !197, !568, !570, !572, !124, !126, !574, !576}
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !359, line: 90, baseType: !30)
!359 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!360 = !DISubroutineType(types: !361)
!361 = !{!139, !177, !177, !136, !139, !362}
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !363, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !74, line: 98, size: 640, elements: !365)
!365 = !{!366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404}
!366 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !364, file: !74, line: 100, baseType: !65, size: 32)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !364, file: !74, line: 103, baseType: !73, size: 32, offset: 32)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !364, file: !74, line: 108, baseType: !80, size: 32, offset: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !364, file: !74, line: 111, baseType: !86, size: 32, offset: 96)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !364, file: !74, line: 115, baseType: !136, size: 32, offset: 128)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !364, file: !74, line: 119, baseType: !139, size: 8, offset: 160)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !364, file: !74, line: 123, baseType: !139, size: 8, offset: 168)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !364, file: !74, line: 130, baseType: !139, size: 8, offset: 176)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !364, file: !74, line: 134, baseType: !139, size: 8, offset: 184)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !364, file: !74, line: 138, baseType: !139, size: 8, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !364, file: !74, line: 141, baseType: !139, size: 8, offset: 200)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !364, file: !74, line: 145, baseType: !139, size: 8, offset: 208)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !364, file: !74, line: 152, baseType: !139, size: 8, offset: 216)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !364, file: !74, line: 156, baseType: !139, size: 8, offset: 224)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !364, file: !74, line: 160, baseType: !139, size: 8, offset: 232)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !364, file: !74, line: 161, baseType: !139, size: 8, offset: 240)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !364, file: !74, line: 162, baseType: !139, size: 8, offset: 248)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !364, file: !74, line: 163, baseType: !139, size: 8, offset: 256)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !364, file: !74, line: 166, baseType: !139, size: 8, offset: 264)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !364, file: !74, line: 178, baseType: !139, size: 8, offset: 272)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !364, file: !74, line: 182, baseType: !139, size: 8, offset: 280)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !364, file: !74, line: 188, baseType: !139, size: 8, offset: 288)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !364, file: !74, line: 192, baseType: !139, size: 8, offset: 296)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !364, file: !74, line: 201, baseType: !139, size: 8, offset: 304)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !364, file: !74, line: 205, baseType: !139, size: 8, offset: 312)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !364, file: !74, line: 214, baseType: !139, size: 8, offset: 320)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !364, file: !74, line: 223, baseType: !139, size: 8, offset: 328)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !364, file: !74, line: 227, baseType: !139, size: 8, offset: 336)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !364, file: !74, line: 231, baseType: !139, size: 8, offset: 344)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !364, file: !74, line: 235, baseType: !139, size: 8, offset: 352)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !364, file: !74, line: 239, baseType: !139, size: 8, offset: 360)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !364, file: !74, line: 242, baseType: !139, size: 8, offset: 368)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !364, file: !74, line: 245, baseType: !139, size: 8, offset: 376)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !364, file: !74, line: 250, baseType: !139, size: 8, offset: 384)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !364, file: !74, line: 254, baseType: !139, size: 8, offset: 392)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !364, file: !74, line: 259, baseType: !5, size: 32, offset: 416)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !364, file: !74, line: 262, baseType: !92, size: 32, offset: 448)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !364, file: !74, line: 273, baseType: !172, size: 64, offset: 512)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !364, file: !74, line: 276, baseType: !172, size: 64, offset: 576)
!405 = !DISubroutineType(types: !406)
!406 = !{!139, !177, !139, !139, !362}
!407 = !DISubroutineType(types: !408)
!408 = !{null, !409}
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{!139, !177, !177, !139, !362, !412, !412}
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!413 = !DISubroutineType(types: !414)
!414 = !{!139, !362}
!415 = !DISubroutineType(types: !416)
!416 = !{!136}
!417 = !DISubroutineType(types: !418)
!418 = !{!139, !177, !177, !139, !419, !442, !362, !139, !412, !412, !412}
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !439, !440, !441}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !421, file: !277, line: 48, baseType: !280, size: 64)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !421, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !421, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !421, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !421, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !421, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !421, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !421, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !421, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !421, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !421, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !421, file: !277, line: 91, baseType: !435, size: 128, offset: 576)
!435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !436)
!436 = !{!437, !438}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !435, file: !297, line: 122, baseType: !300, size: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !435, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !421, file: !277, line: 92, baseType: !435, size: 128, offset: 704)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !421, file: !277, line: 93, baseType: !435, size: 128, offset: 832)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !421, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !355, line: 125, size: 192, elements: !444)
!444 = !{!445, !446, !448}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !443, file: !355, line: 127, baseType: !442, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !443, file: !355, line: 128, baseType: !447, size: 64, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !109, line: 48, baseType: !282)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !443, file: !355, line: 129, baseType: !449, size: 64, offset: 128)
!449 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !109, line: 60, baseType: !280)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !435, size: 256, elements: !310)
!452 = !DISubroutineType(types: !453)
!453 = !{!5, !5, !177, !450, !5}
!454 = !DISubroutineType(types: !455)
!455 = !{!139, !362, !139}
!456 = !DISubroutineType(types: !457)
!457 = !{!139, !177, !419, !177, !419, !362, !412}
!458 = !DISubroutineType(types: !459)
!459 = !{!139, !177, !177, !139, !139, !139}
!460 = !DISubroutineType(types: !461)
!461 = !{!139, !362, !177, !419}
!462 = !DISubroutineType(types: !463)
!463 = !{!139, !177, !136}
!464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 96, elements: !465)
!465 = !{!466}
!466 = !DISubrange(count: 12)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !469)
!469 = !{!470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504}
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !468, file: !2, line: 242, baseType: !5, size: 32)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !468, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !468, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !468, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !468, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !468, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !468, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !468, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !468, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !468, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !468, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !468, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !468, file: !2, line: 260, baseType: !483, size: 64, offset: 768)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !485)
!485 = !{!486, !487, !488}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !484, file: !2, line: 157, baseType: !483, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !484, file: !2, line: 158, baseType: !467, size: 64, offset: 64)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !484, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !468, file: !2, line: 262, baseType: !467, size: 64, offset: 832)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !468, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !468, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !468, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !468, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !468, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !468, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !468, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !468, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !468, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !468, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !468, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !468, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !468, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !468, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !468, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!505 = !DISubroutineType(types: !506)
!506 = !{!139, !177, !419, !177}
!507 = !DISubroutineType(types: !508)
!508 = !{null, !177, !177, !177}
!509 = !DISubroutineType(types: !510)
!510 = !{!139, !419, !511}
!511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!512 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !443)
!513 = !DISubroutineType(types: !514)
!514 = !{!139, !177, !177, !139, !419, !442, !362, !412, !412}
!515 = !DISubroutineType(types: !516)
!516 = !{!139, !177, !177, !362, !136, !136, !412, !419}
!517 = !DISubroutineType(types: !518)
!518 = !{!5, !5, !5}
!519 = !DISubroutineType(types: !520)
!520 = !{!52, !421}
!521 = !DISubroutineType(types: !522)
!522 = !{!139, !419}
!523 = !DISubroutineType(types: !524)
!524 = !{!47, !525, !52}
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!527 = !DISubroutineType(types: !528)
!528 = !{!139, !5, !5, !7, !52, !52, !358, !86, !177, !177, !412}
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !531, line: 23, size: 192, elements: !532)
!531 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mohamad/clone/coreutils")
!532 = !{!533, !534, !535}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !530, file: !531, line: 26, baseType: !358, size: 64)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !530, file: !531, line: 29, baseType: !358, size: 64, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !530, file: !531, line: 32, baseType: !67, size: 32, offset: 128)
!536 = !DISubroutineType(types: !537)
!537 = !{null, !538}
!538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !531, line: 36, size: 384, elements: !540)
!540 = !{!541, !542, !543, !544, !545, !546, !547}
!541 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !539, file: !531, line: 39, baseType: !5, size: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !539, file: !531, line: 42, baseType: !358, size: 64, offset: 64)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !539, file: !531, line: 45, baseType: !67, size: 32, offset: 128)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !539, file: !531, line: 48, baseType: !52, size: 64, offset: 192)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !539, file: !531, line: 52, baseType: !139, size: 8, offset: 256)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !539, file: !531, line: 55, baseType: !139, size: 8, offset: 264)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !539, file: !531, line: 58, baseType: !529, size: 64, offset: 320)
!548 = !DISubroutineType(types: !549)
!549 = !{!139, !5, !177, !139, !358}
!550 = !DISubroutineType(types: !551)
!551 = !{!139, !5, !358}
!552 = !DISubroutineType(types: !553)
!553 = !{!5, !5, !358, !358}
!554 = !DISubroutineType(types: !555)
!555 = !{!139, !5, !5, !7, !52, !52, !139, !177, !177, !556, !558, !412}
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !557, line: 135, baseType: !54)
!557 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !359, line: 102, baseType: !560)
!560 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !31, line: 172, baseType: !32)
!561 = !DISubroutineType(types: !562)
!562 = !{!139, !525, !52}
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !565)
!565 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!566 = !DISubroutineType(types: !567)
!567 = !{!5, !5, !177, !136}
!568 = !DISubroutineType(types: !569)
!569 = !{!5, !177, !570}
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !435)
!572 = !DISubroutineType(types: !573)
!573 = !{!5, !362, !177, !5, !419, !139, !419}
!574 = !DISubroutineType(types: !575)
!575 = !{!139, !177, !5, !177, !5, !362}
!576 = !DISubroutineType(types: !577)
!577 = !{null, !177, !5, !419}
!578 = !{!579, !352, !582, !584, !587, !589}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "mask", scope: !581, file: !355, line: 3089, type: !136, isLocal: true, isDefinition: true)
!581 = distinct !DISubprogram(name: "cached_umask", scope: !355, file: !355, line: 3087, type: !415, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!582 = !DIGlobalVariableExpression(var: !583, expr: !DIExpression())
!583 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !354, file: !355, line: 148, type: !177, isLocal: true, isDefinition: true)
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "zeros", scope: !586, file: !355, line: 387, type: !7, isLocal: true, isDefinition: true)
!586 = distinct !DISubprogram(name: "write_zeros", scope: !355, file: !355, line: 385, type: !550, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!587 = !DIGlobalVariableExpression(var: !588, expr: !DIExpression())
!588 = distinct !DIGlobalVariable(name: "nz", scope: !586, file: !355, line: 388, type: !52, isLocal: true, isDefinition: true)
!589 = !DIGlobalVariableExpression(var: !590, expr: !DIExpression())
!590 = distinct !DIGlobalVariable(name: "fallback", scope: !586, file: !355, line: 395, type: !591, isLocal: true, isDefinition: true)
!591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 8192, elements: !592)
!592 = !{!593}
!593 = !DISubrange(count: 1024)
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !596, file: !597, line: 45, type: !172, isLocal: true, isDefinition: true)
!596 = distinct !DICompileUnit(language: DW_LANG_C99, file: !597, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !598, globals: !619, nameTableKind: None)
!597 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mohamad/clone/coreutils")
!598 = !{!47, !7, !556, !599, !447, !449, !601, !172, !607, !609, !611, !177, !197, !613, !615, !52, !525, !617, !139}
!599 = !DISubroutineType(types: !600)
!600 = !{null, !447, !449}
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !597, line: 33, size: 192, elements: !603)
!603 = !{!604, !605, !606}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !602, file: !597, line: 35, baseType: !447, size: 64)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !602, file: !597, line: 36, baseType: !449, size: 64, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !602, file: !597, line: 40, baseType: !7, size: 64, offset: 128)
!607 = !DISubroutineType(types: !608)
!608 = !{!7, !447, !449}
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !602)
!611 = !DISubroutineType(types: !612)
!612 = !{!7, !177, !447, !449}
!613 = !DISubroutineType(types: !614)
!614 = !{null, !47}
!615 = !DISubroutineType(types: !616)
!616 = !{!52, !525, !52}
!617 = !DISubroutineType(types: !618)
!618 = !{!139, !525, !525}
!619 = !{!594}
!620 = !DIGlobalVariableExpression(var: !621, expr: !DIExpression())
!621 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !622, file: !623, line: 38, type: !635, isLocal: true, isDefinition: true)
!622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !623, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !624, globals: !652, nameTableKind: None)
!623 = !DIFile(filename: "src/force-link.c", directory: "/home/mohamad/clone/coreutils")
!624 = !{!625, !5, !177, !139, !627, !7, !630, !632, !634, !52, !635, !638, !47, !640, !647}
!625 = !DISubroutineType(types: !626)
!626 = !{!5, !5, !177, !5, !177, !5, !139, !5}
!627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 2048, elements: !628)
!628 = !{!629}
!629 = !DISubrange(count: 256)
!630 = !DISubroutineType(types: !631)
!631 = !{!5, !177, !5, !177, !139, !5}
!632 = !DISubroutineType(types: !633)
!633 = !{!7, !177, !7}
!634 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !53, line: 35, baseType: !32)
!635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 72, elements: !636)
!636 = !{!637}
!637 = !DISubrange(count: 9)
!638 = !DISubroutineType(types: !639)
!639 = !{!5, !7, !47}
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !623, line: 71, size: 192, elements: !642)
!642 = !{!643, !644, !645, !646}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !641, file: !623, line: 73, baseType: !5, size: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !641, file: !623, line: 74, baseType: !177, size: 64, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !641, file: !623, line: 75, baseType: !5, size: 32, offset: 128)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !641, file: !623, line: 76, baseType: !5, size: 32, offset: 160)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !623, line: 131, size: 128, elements: !649)
!649 = !{!650, !651}
!650 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !648, file: !623, line: 133, baseType: !177, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !648, file: !623, line: 134, baseType: !5, size: 32, offset: 64)
!652 = !{!620}
!653 = !DIGlobalVariableExpression(var: !654, expr: !DIExpression())
!654 = distinct !DIGlobalVariable(name: "Version", scope: !655, file: !656, line: 2, type: !177, isLocal: false, isDefinition: true)
!655 = distinct !DICompileUnit(language: DW_LANG_C99, file: !656, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !657, globals: !658, nameTableKind: None)
!656 = !DIFile(filename: "src/version.c", directory: "/home/mohamad/clone/coreutils")
!657 = !{!177}
!658 = !{!653}
!659 = !DIGlobalVariableExpression(var: !660, expr: !DIExpression())
!660 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !661, file: !665, line: 82, type: !177, isLocal: false, isDefinition: true)
!661 = distinct !DICompileUnit(language: DW_LANG_C99, file: !662, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !663, retainedTypes: !671, globals: !695, nameTableKind: None)
!662 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!663 = !{!65, !664}
!664 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !665, line: 172, baseType: !67, size: 32, elements: !666)
!665 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mohamad/clone/coreutils")
!666 = !{!667, !668, !669, !670}
!667 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!668 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!669 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!670 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!671 = !{!47, !67, !52, !177, !199, !178, !672, !7, !5, !139, !634, !674, !675, !679, !181, !681, !190, !682, !691, !8, !692, !694, !32}
!672 = !DISubroutineType(types: !673)
!673 = !{!7, !5, !177, !65, !139}
!674 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !109, line: 109, baseType: !560)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !677, line: 127, baseType: !678)
!677 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!678 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !677, line: 127, flags: DIFlagFwdDecl)
!679 = !DISubroutineType(types: !680)
!680 = !{!664, !5, !181, !52, !52, !634, !681, !190}
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !684, line: 22, size: 2240, elements: !685)
!684 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/dirent.h", directory: "")
!685 = !{!686, !687, !688, !689, !690}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !683, file: !684, line: 25, baseType: !282, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !683, file: !684, line: 26, baseType: !30, size: 64, offset: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !683, file: !684, line: 31, baseType: !34, size: 16, offset: 128)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !683, file: !684, line: 32, baseType: !565, size: 8, offset: 144)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !683, file: !684, line: 33, baseType: !627, size: 2048, offset: 152)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 16, elements: !310)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !7, !52, !8, !5, !694}
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64)
!695 = !{!659}
!696 = !DIGlobalVariableExpression(var: !697, expr: !DIExpression())
!697 = distinct !DIGlobalVariable(name: "backup_args", scope: !698, file: !718, line: 42, type: !710, isLocal: true, isDefinition: true)
!698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !699, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !700, retainedTypes: !701, globals: !715, nameTableKind: None)
!699 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!700 = !{!65}
!701 = !{!525, !702, !7, !5, !177, !704, !178, !706, !710, !712}
!702 = !DISubroutineType(types: !703)
!703 = !{!7, !5, !177, !65}
!704 = !DISubroutineType(types: !705)
!705 = !{!65, !177, !177}
!706 = !DICompositeType(tag: DW_TAG_array_type, baseType: !707, size: 256, elements: !708)
!707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !65)
!708 = !{!709}
!709 = !DISubrange(count: 8)
!710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 576, elements: !636)
!711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !177)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !713, line: 61, baseType: !714)
!713 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mohamad/clone/coreutils")
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 64)
!715 = !{!716, !696}
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "backup_types", scope: !698, file: !718, line: 53, type: !706, isLocal: true, isDefinition: true)
!718 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mohamad/clone/coreutils")
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "file_name", scope: !721, file: !764, line: 37, type: !177, isLocal: true, isDefinition: true)
!721 = distinct !DICompileUnit(language: DW_LANG_C99, file: !722, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !723, globals: !763, nameTableKind: None)
!722 = !DIFile(filename: "./lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!723 = !{!199, !177, !197, !139, !724, !5, !762}
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !725, file: !2, line: 242, baseType: !5, size: 32)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !725, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !725, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !725, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !725, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !725, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !725, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !725, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !725, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !725, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !725, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !725, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !725, file: !2, line: 260, baseType: !740, size: 64, offset: 768)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !742)
!742 = !{!743, !744, !745}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !741, file: !2, line: 157, baseType: !740, size: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !741, file: !2, line: 158, baseType: !724, size: 64, offset: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !741, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !725, file: !2, line: 262, baseType: !724, size: 64, offset: 832)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !725, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !725, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !725, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !725, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !725, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !725, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !725, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !725, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !725, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !725, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !725, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !725, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !725, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !725, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !725, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!762 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !5)
!763 = !{!719}
!764 = !DIFile(filename: "lib/closein.c", directory: "/home/mohamad/clone/coreutils")
!765 = !DIGlobalVariableExpression(var: !766, expr: !DIExpression())
!766 = distinct !DIGlobalVariable(name: "file_name", scope: !767, file: !813, line: 46, type: !177, isLocal: true, isDefinition: true)
!767 = distinct !DICompileUnit(language: DW_LANG_C99, file: !768, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !769, globals: !810, nameTableKind: None)
!768 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!769 = !{!199, !177, !770, !139, !197, !772, !5, !762}
!770 = !DISubroutineType(types: !771)
!771 = !{null, !139}
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !774)
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !773, file: !2, line: 242, baseType: !5, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !773, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !773, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !773, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !773, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !773, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !773, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !773, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !773, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !773, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !773, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !773, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !773, file: !2, line: 260, baseType: !788, size: 64, offset: 768)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !790)
!790 = !{!791, !792, !793}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !789, file: !2, line: 157, baseType: !788, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !789, file: !2, line: 158, baseType: !772, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !789, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !773, file: !2, line: 262, baseType: !772, size: 64, offset: 832)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !773, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !773, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !773, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !773, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !773, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !773, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !773, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !773, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !773, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !773, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !773, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !773, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !773, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !773, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !773, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!810 = !{!765, !811}
!811 = !DIGlobalVariableExpression(var: !812, expr: !DIExpression())
!812 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !767, file: !813, line: 56, type: !139, isLocal: true, isDefinition: true)
!813 = !DIFile(filename: "lib/closeout.c", directory: "/home/mohamad/clone/coreutils")
!814 = !DIGlobalVariableExpression(var: !815, expr: !DIExpression())
!815 = distinct !DIGlobalVariable(name: "exit_failure", scope: !816, file: !820, line: 24, type: !762, isLocal: false, isDefinition: true)
!816 = distinct !DICompileUnit(language: DW_LANG_C99, file: !817, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !818, globals: !819, nameTableKind: None)
!817 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!818 = !{!762}
!819 = !{!814}
!820 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mohamad/clone/coreutils")
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "default_tuning", scope: !823, file: !832, line: 130, type: !848, isLocal: true, isDefinition: true)
!823 = distinct !DICompileUnit(language: DW_LANG_C99, file: !824, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !825, globals: !961, nameTableKind: None)
!824 = !DIFile(filename: "./lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!825 = !{!54, !47, !52, !826, !828, !829, !841, !835, !868, !139, !870, !872, !912, !525, !862, !914, !916, !918, !919, !921, !925, !177, !565, !178, !927, !929, !848, !930, !932, !847, !859, !865, !830, !933, !935, !937, !5, !939, !853, !940, !942, !615, !617, !944, !946, !948, !950, !952, !954, !956, !958, !959}
!826 = !DISubroutineType(types: !827)
!827 = !{!52, !828}
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !174, line: 69, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !832, line: 52, size: 640, elements: !833)
!832 = !DIFile(filename: "lib/hash.c", directory: "/home/mohamad/clone/coreutils")
!833 = !{!834, !840, !843, !844, !845, !846, !858, !861, !864, !867}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !831, file: !832, line: 57, baseType: !835, size: 64)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !832, line: 46, size: 128, elements: !837)
!837 = !{!838, !839}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !836, file: !832, line: 48, baseType: !47, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !836, file: !832, line: 49, baseType: !835, size: 64, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !831, file: !832, line: 58, baseType: !841, size: 64, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !836)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !831, file: !832, line: 59, baseType: !52, size: 64, offset: 128)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !831, file: !832, line: 60, baseType: !52, size: 64, offset: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !831, file: !832, line: 61, baseType: !52, size: 64, offset: 256)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !831, file: !832, line: 64, baseType: !847, size: 64, offset: 320)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !174, line: 65, baseType: !850)
!850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !174, line: 53, size: 160, elements: !851)
!851 = !{!852, !854, !855, !856, !857}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !850, file: !174, line: 58, baseType: !853, size: 32)
!853 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !850, file: !174, line: 59, baseType: !853, size: 32, offset: 32)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !850, file: !174, line: 60, baseType: !853, size: 32, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !850, file: !174, line: 61, baseType: !853, size: 32, offset: 96)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !850, file: !174, line: 62, baseType: !139, size: 8, offset: 128)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !831, file: !832, line: 71, baseType: !859, size: 64, offset: 384)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !174, line: 48, baseType: !860)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !831, file: !832, line: 72, baseType: !862, size: 64, offset: 448)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !174, line: 49, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !617, size: 64)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !831, file: !832, line: 73, baseType: !865, size: 64, offset: 512)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !174, line: 50, baseType: !866)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !831, file: !832, line: 76, baseType: !835, size: 64, offset: 576)
!868 = !DISubroutineType(types: !869)
!869 = !{!139, !828}
!870 = !DISubroutineType(types: !871)
!871 = !{null, !828, !872}
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !874)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !874, file: !2, line: 242, baseType: !5, size: 32)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !874, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !874, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !874, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !874, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !874, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !874, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !874, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !874, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !874, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !874, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !874, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !874, file: !2, line: 260, baseType: !889, size: 64, offset: 768)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !891)
!891 = !{!892, !893, !895}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !890, file: !2, line: 157, baseType: !889, size: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !890, file: !2, line: 158, baseType: !894, size: 64, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !890, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !874, file: !2, line: 262, baseType: !894, size: 64, offset: 832)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !874, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !874, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !874, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !874, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !874, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !874, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !874, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !874, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !874, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !874, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !874, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !874, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !874, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !874, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !874, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!912 = !DISubroutineType(types: !913)
!913 = !{!47, !828, !525}
!914 = !DISubroutineType(types: !915)
!915 = !{!47, !828}
!916 = !DISubroutineType(types: !917)
!917 = !{!52, !828, !918, !52}
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{!52, !828, !921, !47}
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !174, line: 51, baseType: !922)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!139, !47, !47}
!925 = !DISubroutineType(types: !926)
!926 = !{!52, !177, !52}
!927 = !DISubroutineType(types: !928)
!928 = !{null, !929}
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!930 = !DISubroutineType(types: !931)
!931 = !{!932, !52, !847, !859, !862, !865}
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{null, !932}
!935 = !DISubroutineType(types: !936)
!936 = !{!139, !932, !52}
!937 = !DISubroutineType(types: !938)
!938 = !{!5, !932, !525, !939}
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{!47, !932, !525}
!942 = !DISubroutineType(types: !943)
!943 = !{!835, !828, !525}
!944 = !DISubroutineType(types: !945)
!945 = !{!139, !932}
!946 = !DISubroutineType(types: !947)
!947 = !{!52, !52, !847}
!948 = !DISubroutineType(types: !949)
!949 = !{!52, !52}
!950 = !DISubroutineType(types: !951)
!951 = !{!139, !52}
!952 = !DISubroutineType(types: !953)
!953 = !{!139, !932, !932, !139}
!954 = !DISubroutineType(types: !955)
!955 = !{null, !932, !835}
!956 = !DISubroutineType(types: !957)
!957 = !{!47, !932, !525, !958, !139}
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!959 = !DISubroutineType(types: !960)
!960 = !{!835, !932}
!961 = !{!821}
!962 = !DIGlobalVariableExpression(var: !963, expr: !DIExpression())
!963 = distinct !DIGlobalVariable(name: "program_name", scope: !964, file: !1006, line: 33, type: !177, isLocal: false, isDefinition: true)
!964 = distinct !DICompileUnit(language: DW_LANG_C99, file: !965, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !966, globals: !1005, nameTableKind: None)
!965 = !DIFile(filename: "./lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!966 = !{!47, !7, !177, !199, !967}
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !969)
!969 = !{!970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !968, file: !2, line: 242, baseType: !5, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !968, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !968, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !968, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !968, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !968, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !968, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !968, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !968, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !968, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !968, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !968, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !968, file: !2, line: 260, baseType: !983, size: 64, offset: 768)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !985)
!985 = !{!986, !987, !988}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !984, file: !2, line: 157, baseType: !983, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !984, file: !2, line: 158, baseType: !967, size: 64, offset: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !984, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !968, file: !2, line: 262, baseType: !967, size: 64, offset: 832)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !968, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !968, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !968, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !968, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !968, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !968, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !968, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !968, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !968, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !968, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !968, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !968, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !968, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !968, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !968, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1005 = !{!962}
!1006 = !DIFile(filename: "lib/progname.c", directory: "/home/mohamad/clone/coreutils")
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1009, file: !1038, line: 85, type: !1027, isLocal: false, isDefinition: true)
!1009 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1010, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1011, retainedTypes: !1026, globals: !1131, nameTableKind: None)
!1010 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1011 = !{!1012}
!1012 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !1013, line: 32, baseType: !67, size: 32, elements: !1014)
!1013 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mohamad/clone/coreutils")
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025}
!1015 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!1016 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!1017 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!1018 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!1019 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!1020 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!1021 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!1022 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!1023 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!1024 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!1025 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!1026 = !{!5, !34, !52, !1027, !1030, !1034, !1036, !1046, !1048, !1050, !1052, !8, !565, !1054, !67, !1055, !1057, !177, !1059, !7, !1061, !1063, !694, !197, !1065, !627, !1070, !1072, !215, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !1106, !139, !178, !1108, !1110, !1124, !1125, !1127, !1129}
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !711, size: 704, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 11)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 320, elements: !1032)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1032 = !{!1033}
!1033 = !DISubrange(count: 10)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!1036, !1036}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1038, line: 65, size: 448, elements: !1039)
!1038 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mohamad/clone/coreutils")
!1039 = !{!1040, !1041, !1042, !1044, !1045}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1037, file: !1038, line: 68, baseType: !1012, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1037, file: !1038, line: 71, baseType: !5, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1037, file: !1038, line: 75, baseType: !1043, size: 256, offset: 64)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !67, size: 256, elements: !708)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1037, file: !1038, line: 78, baseType: !177, size: 64, offset: 320)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1037, file: !1038, line: 81, baseType: !177, size: 64, offset: 384)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!1012, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{null, !1036, !1012}
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!5, !1036, !8, !5}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !67, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!5, !1036, !5}
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1036, !177, !177}
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!52, !7, !52, !177, !52, !1048}
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!7, !177, !52, !1048}
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!7, !177, !52, !694, !1048}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1038, line: 834, size: 128, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1066, file: !1038, line: 836, baseType: !52, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1066, file: !1038, line: 837, baseType: !7, size: 64, offset: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!7, !5, !177}
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!7, !5, !177, !52}
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!7, !177, !52}
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!7, !5, !1012, !177}
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!7, !5, !1012, !177, !52}
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!7, !1012, !177}
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!7, !1012, !177, !52}
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!7, !177, !52, !8}
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!7, !177, !8}
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!7, !5, !177, !177, !177}
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!7, !5, !177, !177, !177, !52}
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!7, !177, !177, !177}
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!7, !177, !177, !177, !52}
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!177, !5, !177, !52}
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!177, !177, !52}
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!177, !5, !177}
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!177, !177}
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!52, !7, !52, !177, !52, !1012, !5, !1106, !177, !177}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1111, line: 106, baseType: !1112)
!1111 = !DIFile(filename: "/usr/include/wchar.h", directory: "")
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1111, line: 94, baseType: !1113)
!1113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1111, line: 82, size: 64, elements: !1114)
!1114 = !{!1115, !1116}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1113, file: !1111, line: 84, baseType: !5, size: 32)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1113, file: !1111, line: 93, baseType: !1117, size: 32, offset: 32)
!1117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1113, file: !1111, line: 85, size: 32, elements: !1118)
!1118 = !{!1119, !1120}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1117, file: !1111, line: 88, baseType: !67, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1117, file: !1111, line: 92, baseType: !1121, size: 32)
!1121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 32, elements: !1122)
!1122 = !{!1123}
!1123 = !DISubrange(count: 4)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !53, line: 74, baseType: !5)
!1125 = !DISubroutineType(types: !1126)
!1126 = !{!177, !177, !1012}
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!7, !5, !177, !52, !1048}
!1129 = !DISubroutineType(types: !1130)
!1130 = !{!1037, !1012}
!1131 = !{!1007, !1132, !1134, !1136, !1138, !1140, !1142, !1144}
!1132 = !DIGlobalVariableExpression(var: !1133, expr: !DIExpression())
!1133 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1009, file: !1038, line: 101, type: !1030, isLocal: false, isDefinition: true)
!1134 = !DIGlobalVariableExpression(var: !1135, expr: !DIExpression())
!1135 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1009, file: !1038, line: 1052, type: !1037, isLocal: false, isDefinition: true)
!1136 = !DIGlobalVariableExpression(var: !1137, expr: !DIExpression())
!1137 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1009, file: !1038, line: 116, type: !1037, isLocal: true, isDefinition: true)
!1138 = !DIGlobalVariableExpression(var: !1139, expr: !DIExpression())
!1139 = distinct !DIGlobalVariable(name: "slot0", scope: !1009, file: !1038, line: 842, type: !627, isLocal: true, isDefinition: true)
!1140 = !DIGlobalVariableExpression(var: !1141, expr: !DIExpression())
!1141 = distinct !DIGlobalVariable(name: "slotvec", scope: !1009, file: !1038, line: 845, type: !1065, isLocal: true, isDefinition: true)
!1142 = !DIGlobalVariableExpression(var: !1143, expr: !DIExpression())
!1143 = distinct !DIGlobalVariable(name: "nslots", scope: !1009, file: !1038, line: 843, type: !5, isLocal: true, isDefinition: true)
!1144 = !DIGlobalVariableExpression(var: !1145, expr: !DIExpression())
!1145 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1009, file: !1038, line: 844, type: !1066, isLocal: true, isDefinition: true)
!1146 = !DIGlobalVariableExpression(var: !1147, expr: !DIExpression())
!1147 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !1148, file: !1163, line: 74, type: !1173, isLocal: true, isDefinition: true)
!1148 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1149, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1150, retainedTypes: !1158, globals: !1188, nameTableKind: None)
!1149 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!1150 = !{!1151}
!1151 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !1152, line: 26, baseType: !67, size: 32, elements: !1153)
!1152 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mohamad/clone/coreutils")
!1153 = !{!1154, !1155, !1156, !1157}
!1154 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!1155 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!1156 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!1157 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!1158 = !{!47, !1159, !7, !675, !52, !1161, !5, !1169, !1173, !1175, !177, !1162, !282, !1168, !1184, !1171, !525, !1186, !1187}
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!7, !675, !1151}
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !1163, line: 46, baseType: !1164)
!1163 = !DIFile(filename: "lib/savedir.c", directory: "/home/mohamad/clone/coreutils")
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1163, line: 40, size: 128, elements: !1165)
!1165 = !{!1166, !1167}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1164, file: !1163, line: 42, baseType: !7, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1164, file: !1163, line: 44, baseType: !1168, size: 64, offset: 64)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !677, line: 34, baseType: !282)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1163, line: 72, baseType: !1170)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!5, !525, !525}
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1174, size: 192, elements: !307)
!1174 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1177)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !684, line: 22, size: 2240, elements: !1178)
!1178 = !{!1179, !1180, !1181, !1182, !1183}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1177, file: !684, line: 25, baseType: !282, size: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1177, file: !684, line: 26, baseType: !30, size: 64, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1177, file: !684, line: 31, baseType: !34, size: 16, offset: 128)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1177, file: !684, line: 32, baseType: !565, size: 8, offset: 144)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1177, file: !684, line: 33, baseType: !627, size: 2048, offset: 152)
!1184 = !DISubroutineType(types: !1185)
!1185 = !{!7, !177, !1151}
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1162)
!1188 = !{!1146}
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "letters", scope: !1191, file: !1212, line: 184, type: !1200, isLocal: true, isDefinition: true)
!1191 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1192, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1193, globals: !1211, nameTableKind: None)
!1192 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!1193 = !{!1194, !5, !7, !47, !1196, !52, !67, !1197, !1200, !1203, !1205, !1207, !1209, !139, !177, !638, !190}
!1194 = !DISubroutineType(types: !1195)
!1195 = !{!5, !7, !5, !47, !1196, !52}
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1199, line: 33, flags: DIFlagFwdDecl)
!1199 = !DIFile(filename: "./lib/randint.h", directory: "/home/mohamad/clone/coreutils")
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 504, elements: !1201)
!1201 = !{!1202}
!1202 = !DISubrange(count: 63)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!5, !7, !5, !5, !5, !52}
!1205 = !DISubroutineType(types: !1206)
!1206 = !{!5, !7, !5, !5, !5}
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!5, !7, !5, !47, !1196}
!1209 = !DISubroutineType(types: !1210)
!1210 = !{!139, !177, !52}
!1211 = !{!1189}
!1212 = !DIFile(filename: "lib/tempname.c", directory: "/home/mohamad/clone/coreutils")
!1213 = !DIGlobalVariableExpression(var: !1214, expr: !DIExpression())
!1214 = distinct !DIGlobalVariable(name: "ht", scope: !1215, file: !1216, line: 163, type: !172, isLocal: true, isDefinition: true)
!1215 = distinct !DISubprogram(name: "utimecmpat", scope: !1216, file: !1216, line: 132, type: !1217, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1242, retainedNodes: !206)
!1216 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!1217 = !DISubroutineType(types: !1218)
!1218 = !{!5, !5, !177, !1219, !1219, !5}
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !1222)
!1222 = !{!1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1239, !1240, !1241}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1221, file: !277, line: 48, baseType: !280, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1221, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1221, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1221, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1221, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1221, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1221, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1221, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1221, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1221, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1221, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1221, file: !277, line: 91, baseType: !1235, size: 128, offset: 576)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !1236)
!1236 = !{!1237, !1238}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1235, file: !297, line: 122, baseType: !300, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1235, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1221, file: !277, line: 92, baseType: !1235, size: 128, offset: 704)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1221, file: !277, line: 93, baseType: !1235, size: 128, offset: 832)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1221, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!1242 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1243, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1244, globals: !1257, nameTableKind: None)
!1243 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mohamad/clone/coreutils")
!1244 = !{!1245, !5, !177, !1219, !1217, !1247, !300, !1248, !139, !280, !449, !1254, !302, !615, !52, !525, !1255, !617}
!1245 = !DISubroutineType(types: !1246)
!1246 = !{!5, !177, !1219, !1219, !5}
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !297, line: 75, baseType: !300)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1216, line: 66, size: 128, elements: !1250)
!1250 = !{!1251, !1252, !1253}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1249, file: !1216, line: 69, baseType: !449, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1249, file: !1216, line: 76, baseType: !5, size: 32, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1249, file: !1216, line: 80, baseType: !139, size: 8, offset: 96)
!1254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1235, size: 256, elements: !310)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!1257 = !{!1213, !1258}
!1258 = !DIGlobalVariableExpression(var: !1259, expr: !DIExpression())
!1259 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1215, file: !1216, line: 166, type: !1248, isLocal: true, isDefinition: true)
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1262, file: !1312, line: 75, type: !5, isLocal: true, isDefinition: true)
!1262 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1263, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1264, globals: !1309, nameTableKind: None)
!1263 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!1264 = !{!1265, !5, !177, !1273, !1274, !302, !1275, !1282, !300, !1281, !139, !1247, !1283, !137, !1285, !1287, !1289}
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!5, !5, !177, !1267}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1269)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !1270)
!1270 = !{!1271, !1272}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1269, file: !297, line: 122, baseType: !300, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1269, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!1273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1269, size: 256, elements: !310)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1276, size: 256, elements: !310)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1277, line: 30, size: 128, elements: !1278)
!1277 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "")
!1278 = !{!1279, !1280}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1276, file: !1277, line: 32, baseType: !300, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1276, file: !1277, line: 33, baseType: !1281, size: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !31, line: 141, baseType: !32)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!5, !177, !1267}
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!5, !1274}
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!139, !1289, !1308}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !1292)
!1292 = !{!1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1291, file: !277, line: 48, baseType: !280, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1291, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1291, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1291, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1291, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1291, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1291, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1291, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1291, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1291, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1291, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1291, file: !277, line: 91, baseType: !1269, size: 128, offset: 576)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1291, file: !277, line: 92, baseType: !1269, size: 128, offset: 704)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1291, file: !277, line: 93, baseType: !1269, size: 128, offset: 832)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1291, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1309 = !{!1260, !1310}
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1262, file: !1312, line: 76, type: !5, isLocal: true, isDefinition: true)
!1312 = !DIFile(filename: "lib/utimens.c", directory: "/home/mohamad/clone/coreutils")
!1313 = !DIGlobalVariableExpression(var: !1314, expr: !DIExpression())
!1314 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1315, file: !1322, line: 26, type: !1318, isLocal: false, isDefinition: true)
!1315 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1316, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1317, globals: !1321, nameTableKind: None)
!1316 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1317 = !{!1318}
!1318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 376, elements: !1319)
!1319 = !{!1320}
!1320 = !DISubrange(count: 47)
!1321 = !{!1313}
!1322 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mohamad/clone/coreutils")
!1323 = !DIGlobalVariableExpression(var: !1324, expr: !DIExpression())
!1324 = distinct !DIGlobalVariable(name: "initialized", scope: !1325, file: !1326, line: 34, type: !139, isLocal: true, isDefinition: true)
!1325 = distinct !DISubprogram(name: "can_write_any_file", scope: !1326, file: !1326, line: 32, type: !1327, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1329, retainedNodes: !206)
!1326 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!1327 = !DISubroutineType(types: !1328)
!1328 = !{!139}
!1329 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1330, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1331, globals: !1332, nameTableKind: None)
!1330 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mohamad/clone/coreutils")
!1331 = !{!1327, !139}
!1332 = !{!1323, !1333}
!1333 = !DIGlobalVariableExpression(var: !1334, expr: !DIExpression())
!1334 = distinct !DIGlobalVariable(name: "can_write", scope: !1325, file: !1326, line: 35, type: !139, isLocal: true, isDefinition: true)
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1337, file: !1390, line: 67, type: !712, isLocal: false, isDefinition: true)
!1337 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1338, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1339, globals: !1389, nameTableKind: None)
!1338 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1339 = !{!47, !177, !712, !1340, !634, !1342, !525, !52, !139, !1343, !1345, !1347, !1385, !1387, !197}
!1340 = !DISubroutineType(types: !1341)
!1341 = !{!634, !177, !1342, !525, !52}
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!1343 = !DISubroutineType(types: !1344)
!1344 = !{null, !177, !177, !634}
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !1342, !525, !52}
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1349)
!1349 = !{!1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1348, file: !2, line: 242, baseType: !5, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1348, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1348, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1348, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1348, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1348, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1348, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1348, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1348, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1348, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1348, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1348, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1348, file: !2, line: 260, baseType: !1363, size: 64, offset: 768)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1365)
!1365 = !{!1366, !1367, !1368}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1364, file: !2, line: 157, baseType: !1363, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1364, file: !2, line: 158, baseType: !1347, size: 64, offset: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1364, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1348, file: !2, line: 262, baseType: !1347, size: 64, offset: 832)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1348, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1348, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1348, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1348, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1348, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1348, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1348, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1348, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1348, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1348, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1348, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1348, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1348, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1348, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1348, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!634, !177, !177, !1342, !525, !52, !712}
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!177, !525, !1342, !525, !52}
!1389 = !{!1335}
!1390 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mohamad/clone/coreutils")
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1393, file: !1394, line: 507, type: !5, isLocal: true, isDefinition: true)
!1393 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1394, file: !1394, line: 488, type: !517, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1395, retainedNodes: !206)
!1394 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1396, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1397, globals: !1408, nameTableKind: None)
!1396 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mohamad/clone/coreutils")
!1397 = !{!517, !5, !1398, !47}
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1399, line: 14, baseType: !1400)
!1399 = !DIFile(filename: "llvm/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mohamad/clone")
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1396, line: 208, baseType: !1401)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1402, size: 192, elements: !39)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1396, line: 208, size: 192, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1407}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1402, file: !1396, line: 208, baseType: !67, size: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1402, file: !1396, line: 208, baseType: !67, size: 32, offset: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1402, file: !1396, line: 208, baseType: !47, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1402, file: !1396, line: 208, baseType: !47, size: 64, offset: 128)
!1408 = !{!1391}
!1409 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1410, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1411, nameTableKind: None)
!1410 = !DIFile(filename: "src/prog-fprintf.c", directory: "/home/mohamad/clone/coreutils")
!1411 = !{!1412, !1414, !177, !1454}
!1412 = !DISubroutineType(types: !1413)
!1413 = !{null, !1414, !177}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !1416)
!1416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1417)
!1417 = !{!1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453}
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1416, file: !2, line: 242, baseType: !5, size: 32)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1416, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1416, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1416, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1416, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1416, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1416, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1416, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1416, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1416, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1416, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1416, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1416, file: !2, line: 260, baseType: !1431, size: 64, offset: 768)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1432, size: 64)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1433)
!1433 = !{!1434, !1435, !1437}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1432, file: !2, line: 157, baseType: !1431, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1432, file: !2, line: 158, baseType: !1436, size: 64, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1432, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1416, file: !2, line: 262, baseType: !1436, size: 64, offset: 832)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1416, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1416, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1416, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1416, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1416, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1416, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1416, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1416, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1416, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1416, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1416, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1416, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1416, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1416, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1416, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1454 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !359, line: 79, baseType: !1455)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1399, line: 32, baseType: !1456)
!1456 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1410, line: 30, baseType: !1457)
!1457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1458, size: 192, elements: !39)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1410, line: 30, size: 192, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1458, file: !1410, line: 30, baseType: !67, size: 32)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1458, file: !1410, line: 30, baseType: !67, size: 32, offset: 32)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1458, file: !1410, line: 30, baseType: !47, size: 64, offset: 64)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1458, file: !1410, line: 30, baseType: !47, size: 64, offset: 128)
!1464 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1465, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1466, nameTableKind: None)
!1465 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mohamad/clone/coreutils")
!1466 = !{!1467, !1468, !5, !1470, !52, !1480, !139, !67, !1486, !1488, !1514, !1501, !1493, !1496, !1327}
!1467 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !109, line: 86, baseType: !30)
!1468 = !DISubroutineType(types: !1469)
!1469 = !{null, !5, !1470}
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !531, line: 36, size: 384, elements: !1472)
!1472 = !{!1473, !1474, !1475, !1476, !1477, !1478, !1479}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1471, file: !531, line: 39, baseType: !5, size: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !1471, file: !531, line: 42, baseType: !1467, size: 64, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1471, file: !531, line: 45, baseType: !67, size: 32, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !1471, file: !531, line: 48, baseType: !52, size: 64, offset: 192)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !1471, file: !531, line: 52, baseType: !139, size: 8, offset: 256)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !1471, file: !531, line: 55, baseType: !139, size: 8, offset: 264)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !1471, file: !531, line: 58, baseType: !1480, size: 64, offset: 320)
!1480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !531, line: 23, size: 192, elements: !1482)
!1482 = !{!1483, !1484, !1485}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1481, file: !531, line: 26, baseType: !1467, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1481, file: !531, line: 29, baseType: !1467, size: 64, offset: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1481, file: !531, line: 32, baseType: !67, size: 32, offset: 128)
!1486 = !DISubroutineType(types: !1487)
!1487 = !{!139, !1470}
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1490, line: 35, size: 256, elements: !1491)
!1490 = !DIFile(filename: "src/fiemap.h", directory: "/home/mohamad/clone/coreutils")
!1491 = !{!1492, !1494, !1495, !1497, !1498, !1499, !1500}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1489, file: !1490, line: 38, baseType: !1493, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !557, line: 55, baseType: !54)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1489, file: !1490, line: 41, baseType: !1493, size: 64, offset: 64)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1489, file: !1490, line: 44, baseType: !1496, size: 32, offset: 128)
!1496 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !557, line: 51, baseType: !67)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1489, file: !1490, line: 47, baseType: !1496, size: 32, offset: 160)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1489, file: !1490, line: 50, baseType: !1496, size: 32, offset: 192)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1489, file: !1490, line: 52, baseType: !1496, size: 32, offset: 224)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1489, file: !1490, line: 55, baseType: !1501, offset: 256)
!1501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1502, elements: !1512)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1490, line: 14, size: 448, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1507, !1509, !1510}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1502, file: !1490, line: 18, baseType: !1493, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1502, file: !1490, line: 22, baseType: !1493, size: 64, offset: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1502, file: !1490, line: 25, baseType: !1493, size: 64, offset: 128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1502, file: !1490, line: 27, baseType: !1508, size: 128, offset: 192)
!1508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 128, elements: !310)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1502, file: !1490, line: 30, baseType: !1496, size: 32, offset: 320)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1502, file: !1490, line: 32, baseType: !1511, size: 96, offset: 352)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, size: 96, elements: !307)
!1512 = !{!1513}
!1513 = !DISubrange(count: -1)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1516, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, nameTableKind: None)
!1516 = !DIFile(filename: "src/selinux.c", directory: "/home/mohamad/clone/coreutils")
!1517 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1518, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1519, nameTableKind: None)
!1518 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1519 = !{!1520, !5, !177, !136}
!1520 = !DISubroutineType(types: !1521)
!1521 = !{!5, !177, !5, !177, !5, !136}
!1522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1523, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1524, nameTableKind: None)
!1523 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!1524 = !{!1525, !5, !177, !136}
!1525 = !DISubroutineType(types: !1526)
!1526 = !{!5, !177, !5, !136}
!1527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1528, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1529, nameTableKind: None)
!1528 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!1529 = !{!47, !1074, !7, !177, !52, !674, !1530, !5}
!1530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8, size: 1024, elements: !1531)
!1531 = !{!1532}
!1532 = !DISubrange(count: 128)
!1533 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1534, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !700, retainedTypes: !1535, nameTableKind: None)
!1534 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!1535 = !{!702, !7, !5, !177}
!1536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1537, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1538, nameTableKind: None)
!1537 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!1538 = !{!1539, !52}
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!52, !52, !52, !52}
!1541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1542, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1543, nameTableKind: None)
!1542 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!1543 = !{!215, !7, !177}
!1544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1545, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1546, nameTableKind: None)
!1545 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1546 = !{!1547, !52, !177, !215, !7, !139}
!1547 = !DISubroutineType(types: !1548)
!1548 = !{!52, !177}
!1549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1550, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1551, nameTableKind: None)
!1550 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1551 = !{!7, !215, !177, !139, !178, !1547, !52}
!1552 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1553, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1554, retainedTypes: !1564, nameTableKind: None)
!1553 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!1554 = !{!1555}
!1555 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1556, line: 45, baseType: !67, size: 32, elements: !1557)
!1556 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mohamad/clone/coreutils")
!1557 = !{!1558, !1559, !1560, !1561, !1562, !1563}
!1558 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1559 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1560 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1561 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1562 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1563 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1564 = !{!1565, !5, !358, !1567, !1568, !1570}
!1565 = !DISubroutineType(types: !1566)
!1566 = !{null, !5, !358, !358, !1567}
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1556, line: 52, baseType: !1555)
!1568 = !DISubroutineType(types: !1569)
!1569 = !{null, !1570, !1567}
!1570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !1572)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1572, file: !2, line: 242, baseType: !5, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1572, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1572, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1572, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1572, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1572, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1572, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1572, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1572, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1572, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1572, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1572, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1572, file: !2, line: 260, baseType: !1587, size: 64, offset: 768)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1589)
!1589 = !{!1590, !1591, !1593}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1588, file: !2, line: 157, baseType: !1587, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1588, file: !2, line: 158, baseType: !1592, size: 64, offset: 64)
!1592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1588, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1572, file: !2, line: 262, baseType: !1592, size: 64, offset: 832)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1572, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1572, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1572, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1572, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1572, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1572, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1572, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1572, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1572, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1572, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1572, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1572, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1572, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1572, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1572, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1610 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1611, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1612, nameTableKind: None)
!1611 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!1612 = !{!1613, !5, !177, !136, !1615}
!1613 = !DISubroutineType(types: !1614)
!1614 = !{!5, !177, !5}
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1399, line: 14, baseType: !1616)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1611, line: 35, baseType: !1617)
!1617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1618, size: 192, elements: !39)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1611, line: 35, size: 192, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1618, file: !1611, line: 35, baseType: !67, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1618, file: !1611, line: 35, baseType: !67, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1618, file: !1611, line: 35, baseType: !47, size: 64, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1618, file: !1611, line: 35, baseType: !47, size: 64, offset: 128)
!1624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1625, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1626, nameTableKind: None)
!1625 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!1626 = !{!47, !7, !1627, !172, !177, !1629, !1652, !282, !447, !280, !449, !1659, !139, !1661}
!1627 = !DISubroutineType(types: !1628)
!1628 = !{null, !172, !177, !1629}
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !1632)
!1632 = !{!1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1649, !1650, !1651}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1631, file: !277, line: 48, baseType: !280, size: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1631, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1631, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1631, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1631, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1631, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1631, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1631, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1631, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1631, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1631, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1631, file: !277, line: 91, baseType: !1645, size: 128, offset: 576)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1645, file: !297, line: 122, baseType: !300, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1645, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1631, file: !277, line: 92, baseType: !1645, size: 128, offset: 704)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1631, file: !277, line: 93, baseType: !1645, size: 128, offset: 832)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1631, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1654, line: 9, size: 192, elements: !1655)
!1654 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mohamad/clone/coreutils")
!1655 = !{!1656, !1657, !1658}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1653, file: !1654, line: 11, baseType: !7, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1653, file: !1654, line: 12, baseType: !447, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1653, file: !1654, line: 13, baseType: !449, size: 64, offset: 128)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!139, !1661, !177, !1629}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !173)
!1663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1664, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1665, nameTableKind: None)
!1664 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!1665 = !{!1666, !136, !7, !1668, !1670, !137, !1693, !8}
!1666 = !DISubroutineType(types: !1667)
!1667 = !{null, !136, !7}
!1668 = !DISubroutineType(types: !1669)
!1669 = !{null, !1670, !7}
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !1673)
!1673 = !{!1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1690, !1691, !1692}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1672, file: !277, line: 48, baseType: !280, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1672, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1672, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1672, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1672, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1672, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1672, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1672, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1672, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1672, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1672, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1672, file: !277, line: 91, baseType: !1686, size: 128, offset: 576)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !1687)
!1687 = !{!1688, !1689}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1686, file: !297, line: 122, baseType: !300, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1686, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1672, file: !277, line: 92, baseType: !1686, size: 128, offset: 704)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1672, file: !277, line: 93, baseType: !1686, size: 128, offset: 832)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1672, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!8, !136}
!1695 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1696, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1697, nameTableKind: None)
!1696 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!1697 = !{!47, !1698, !7, !177, !181}
!1698 = !DISubroutineType(types: !1699)
!1699 = !{!7, !177, !177, !181}
!1700 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1701, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1702, nameTableKind: None)
!1701 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!1702 = !{!47, !1698, !7, !177, !181, !52, !8, !178}
!1703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1704, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1705, nameTableKind: None)
!1704 = !DIFile(filename: "./lib/full-read.c", directory: "/home/mohamad/clone/coreutils")
!1705 = !{!7, !52, !1706, !5, !47}
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!52, !5, !47, !52}
!1708 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1709, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1710, nameTableKind: None)
!1709 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!1710 = !{!177, !52, !1711, !5, !525}
!1711 = !DISubroutineType(types: !1712)
!1712 = !{!52, !5, !525, !52}
!1713 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1714, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1715, nameTableKind: None)
!1714 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!1715 = !{!615, !52, !525, !1716, !7, !447, !617, !139, !449, !613, !47, !1723}
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1717, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1718)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1654, line: 9, size: 192, elements: !1719)
!1719 = !{!1720, !1721, !1722}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1718, file: !1654, line: 11, baseType: !7, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1718, file: !1654, line: 12, baseType: !447, size: 64, offset: 64)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1718, file: !1654, line: 13, baseType: !449, size: 64, offset: 128)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1724 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1725, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1726, retainedTypes: !1737, nameTableKind: None)
!1725 = !DIFile(filename: "./lib/mkancesdirs.c", directory: "/home/mohamad/clone/coreutils")
!1726 = !{!1727}
!1727 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1728, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !1729)
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1728, file: !98, line: 66, baseType: !1727, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1728, file: !98, line: 74, baseType: !1732, size: 32, offset: 32)
!1732 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1728, file: !98, line: 69, size: 32, elements: !1733)
!1733 = !{!1734, !1735, !1736}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1732, file: !98, line: 71, baseType: !5, size: 32)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1732, file: !98, line: 72, baseType: !5, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1732, file: !98, line: 73, baseType: !108, size: 32)
!1737 = !{!1738, !634, !7, !1740, !1741, !47, !8, !139, !5}
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!634, !7, !1740, !1741, !47}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!1742 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1743, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1744, retainedTypes: !1755, nameTableKind: None)
!1743 = !DIFile(filename: "./lib/mkdir-p.c", directory: "/home/mohamad/clone/coreutils")
!1744 = !{!1745}
!1745 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1746, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !1747)
!1747 = !{!1748, !1749}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1746, file: !98, line: 66, baseType: !1745, size: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1746, file: !98, line: 74, baseType: !1750, size: 32, offset: 32)
!1750 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1746, file: !98, line: 69, size: 32, elements: !1751)
!1751 = !{!1752, !1753, !1754}
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1750, file: !98, line: 71, baseType: !5, size: 32)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1750, file: !98, line: 72, baseType: !5, size: 32)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1750, file: !98, line: 73, baseType: !108, size: 32)
!1755 = !{!124, !126, !1756, !139, !7, !1758, !1741, !47, !136, !1759, !5, !634, !137, !1760, !177}
!1756 = !DISubroutineType(types: !1757)
!1757 = !{!139, !7, !1758, !1741, !47, !136, !1759, !136, !124, !126, !139}
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1746, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!1760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !310)
!1761 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1762, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1763, nameTableKind: None)
!1762 = !DIFile(filename: "./lib/modechange.c", directory: "/home/mohamad/clone/coreutils")
!1763 = !{!1764, !1766, !177, !52, !178, !67, !136, !8, !137, !1775, !139, !1777, !1779, !1780, !1782}
!1764 = !DISubroutineType(types: !1765)
!1765 = !{!1766, !177}
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !1768, line: 98, size: 128, elements: !1769)
!1768 = !DIFile(filename: "lib/modechange.c", directory: "/home/mohamad/clone/coreutils")
!1769 = !{!1770, !1771, !1772, !1773, !1774}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1767, file: !1768, line: 100, baseType: !8, size: 8)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1767, file: !1768, line: 101, baseType: !8, size: 8, offset: 8)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "affected", scope: !1767, file: !1768, line: 102, baseType: !136, size: 32, offset: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1767, file: !1768, line: 103, baseType: !136, size: 32, offset: 64)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "mentioned", scope: !1767, file: !1768, line: 104, baseType: !136, size: 32, offset: 96)
!1775 = !DISubroutineType(types: !1776)
!1776 = !{!136, !136, !139, !136, !1777, !1779}
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 64)
!1778 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1767)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !136, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!136, !67}
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!1766, !136, !136}
!1784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1785, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1786, nameTableKind: None)
!1785 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!1786 = !{!1787, !675, !5, !177, !190}
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!675, !5, !177, !5, !190}
!1789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1790, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1519, nameTableKind: None)
!1790 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1524, nameTableKind: None)
!1792 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!1793 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1794, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1795, nameTableKind: None)
!1794 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!1795 = !{!7, !1796, !5, !177, !67, !52, !139, !137, !1798}
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!5, !5, !177, !5, !177, !67}
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!5, !5}
!1800 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1801, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1802, nameTableKind: None)
!1801 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mohamad/clone/coreutils")
!1802 = !{!1706, !52, !5, !47, !674}
!1803 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1804, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1805, nameTableKind: None)
!1804 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mohamad/clone/coreutils")
!1805 = !{!1711, !52, !5, !525, !674}
!1806 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1807, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1808, nameTableKind: None)
!1807 = !DIFile(filename: "./lib/same.c", directory: "/home/mohamad/clone/coreutils")
!1808 = !{!1809, !139, !177, !1811, !5, !52, !7, !282, !280}
!1809 = !DISubroutineType(types: !1810)
!1810 = !{!139, !177, !177}
!1811 = !DISubroutineType(types: !1812)
!1812 = !{!139, !5, !177, !5, !177}
!1813 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1814, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1815, retainedTypes: !1826, nameTableKind: None)
!1814 = !DIFile(filename: "./lib/savewd.c", directory: "/home/mohamad/clone/coreutils")
!1815 = !{!1816}
!1816 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1817, file: !98, line: 39, baseType: !67, size: 32, elements: !111)
!1817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !98, line: 36, size: 64, elements: !1818)
!1818 = !{!1819, !1820}
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1817, file: !98, line: 66, baseType: !1816, size: 32)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1817, file: !98, line: 74, baseType: !1821, size: 32, offset: 32)
!1821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1817, file: !98, line: 69, size: 32, elements: !1822)
!1822 = !{!1823, !1824, !1825}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1821, file: !98, line: 71, baseType: !5, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1821, file: !98, line: 72, baseType: !5, size: 32)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1821, file: !98, line: 73, baseType: !108, size: 32)
!1826 = !{!1827, !1829, !1830, !5, !1832, !1821, !1834, !177, !1836, !108, !1838, !1844, !1848, !1852, !181, !1854, !47, !7, !1857, !139, !1859}
!1827 = !DISubroutineType(types: !1828)
!1828 = !{null, !1829}
!1829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1817, size: 64)
!1830 = !DISubroutineType(types: !1831)
!1831 = !{!5, !1832}
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1817)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!5, !1829, !177, !5, !190}
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!5, !1829, !5}
!1838 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1840, file: !1839, line: 218, size: 32, elements: !1841)
!1839 = !DIFile(filename: "lib/savewd.c", directory: "/home/mohamad/clone/coreutils")
!1840 = distinct !DISubprogram(name: "savewd_restore", scope: !1839, file: !1839, line: 175, type: !1836, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !1838, file: !1839, line: 218, baseType: !5, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !1838, file: !1839, line: 218, baseType: !5, size: 32)
!1844 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1840, file: !1839, line: 219, size: 32, elements: !1845)
!1845 = !{!1846, !1847}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !1844, file: !1839, line: 219, baseType: !5, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !1844, file: !1839, line: 219, baseType: !5, size: 32)
!1848 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1840, file: !1839, line: 220, size: 32, elements: !1849)
!1849 = !{!1850, !1851}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "__in", scope: !1848, file: !1839, line: 220, baseType: !5, size: 32)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "__i", scope: !1848, file: !1839, line: 220, baseType: !5, size: 32)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!5, !5, !181, !1854, !47}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!5, !7, !1829, !47}
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!139, !1829}
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!139, !1832}
!1861 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1862, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1863, nameTableKind: None)
!1862 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mohamad/clone/coreutils")
!1863 = !{!1864, !5, !1866, !1869, !1867, !1871, !1873, !177, !136, !1875, !1877, !1879, !1881, !1883, !1885, !1886, !1888}
!1864 = !DISubroutineType(types: !1865)
!1865 = !{!5, !1866}
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1868, line: 83, baseType: !7)
!1868 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mohamad/clone/coreutils")
!1869 = !DISubroutineType(types: !1870)
!1870 = !{null, !1867}
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!5, !1867}
!1873 = !DISubroutineType(types: !1874)
!1874 = !{!5, !177, !136, !1866}
!1875 = !DISubroutineType(types: !1876)
!1876 = !{!5, !177, !1866}
!1877 = !DISubroutineType(types: !1878)
!1878 = !{!5, !5, !1866}
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!5, !177, !1867}
!1881 = !DISubroutineType(types: !1882)
!1882 = !{!5, !5, !1867}
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!5, !1867, !1867, !1885, !1866}
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1868, line: 82, baseType: !34)
!1886 = !DISubroutineType(types: !1887)
!1887 = !{!1885, !177}
!1888 = !DISubroutineType(types: !1889)
!1889 = !{!5, !177, !177}
!1890 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1891, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1892, nameTableKind: None)
!1891 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mohamad/clone/coreutils")
!1892 = !{!1893, !32, !1895, !302, !1918, !300, !1920, !5, !1922}
!1893 = !DISubroutineType(types: !1894)
!1894 = !{!32, !1895}
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !1898)
!1898 = !{!1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1915, !1916, !1917}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1897, file: !277, line: 48, baseType: !280, size: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1897, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1897, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1897, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1897, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1897, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1897, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1897, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1897, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1897, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1897, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1897, file: !277, line: 91, baseType: !1911, size: 128, offset: 576)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1911, file: !297, line: 122, baseType: !300, size: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1911, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1897, file: !277, line: 92, baseType: !1911, size: 128, offset: 704)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1897, file: !277, line: 93, baseType: !1911, size: 128, offset: 832)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1897, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!1911, !1895}
!1920 = !DISubroutineType(types: !1921)
!1921 = !{!5, !5, !1922}
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1923 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1924, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1925, nameTableKind: None)
!1924 = !DIFile(filename: "./lib/statat.c", directory: "/home/mohamad/clone/coreutils")
!1925 = !{!1926, !5, !177, !1928}
!1926 = !DISubroutineType(types: !1927)
!1927 = !{!5, !5, !177, !1928}
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !1930)
!1930 = !{!1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1947, !1948, !1949}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1929, file: !277, line: 48, baseType: !280, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1929, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1929, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1929, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1929, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1929, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1929, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1929, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1929, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1929, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1929, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1929, file: !277, line: 91, baseType: !1943, size: 128, offset: 576)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !1944)
!1944 = !{!1945, !1946}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1943, file: !297, line: 122, baseType: !300, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1943, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1929, file: !277, line: 92, baseType: !1943, size: 128, offset: 704)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1929, file: !277, line: 93, baseType: !1943, size: 128, offset: 832)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1929, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!1950 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1951, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1952, nameTableKind: None)
!1951 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!1952 = !{!1798, !5}
!1953 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1954, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1955, nameTableKind: None)
!1954 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!1955 = !{!47, !1956, !1958, !177, !1342, !52, !1998, !1999, !2001, !2010, !2011, !2013, !197, !1980}
!1956 = !DISubroutineType(types: !1957)
!1957 = !{null, !1958, !177, !177, !177, !1342, !52}
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !1960)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !1961)
!1961 = !{!1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1960, file: !2, line: 242, baseType: !5, size: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1960, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1960, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1960, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1960, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1960, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1960, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1960, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1960, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1960, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1960, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1960, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1960, file: !2, line: 260, baseType: !1975, size: 64, offset: 768)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !1977)
!1977 = !{!1978, !1979, !1981}
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1976, file: !2, line: 157, baseType: !1975, size: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1976, file: !2, line: 158, baseType: !1980, size: 64, offset: 64)
!1980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1976, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1960, file: !2, line: 262, baseType: !1980, size: 64, offset: 832)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1960, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1960, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1960, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1960, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1960, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1960, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1960, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1960, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1960, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1960, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1960, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1960, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1960, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1960, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1960, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, elements: !1512)
!1999 = !DISubroutineType(types: !2000)
!2000 = !{null, !1958, !177, !177, !177, !1342}
!2001 = !DISubroutineType(types: !2002)
!2002 = !{null, !1958, !177, !177, !177, !2003}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1954, line: 192, size: 192, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2009}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2004, file: !1954, line: 192, baseType: !67, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2004, file: !1954, line: 192, baseType: !67, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2004, file: !1954, line: 192, baseType: !47, size: 64, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2004, file: !1954, line: 192, baseType: !47, size: 64, offset: 128)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !177, size: 640, elements: !1032)
!2011 = !DISubroutineType(types: !2012)
!2012 = !{null, !1958, !177, !177, !177}
!2013 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !359, line: 79, baseType: !2014)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !1399, line: 32, baseType: !2015)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1954, line: 234, baseType: !2016)
!2016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2004, size: 192, elements: !39)
!2017 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2018, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2019, nameTableKind: None)
!2018 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!2019 = !{!52, !7, !47, !2020, !2022, !2024, !694, !2026, !2028, !2030, !2032, !523, !525, !215, !177}
!2020 = !DISubroutineType(types: !2021)
!2021 = !{!47, !52, !52}
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!47, !47, !52, !52}
!2024 = !DISubroutineType(types: !2025)
!2025 = !{!47, !47, !694, !52}
!2026 = !DISubroutineType(types: !2027)
!2027 = !{!7, !52}
!2028 = !DISubroutineType(types: !2029)
!2029 = !{!47, !52}
!2030 = !DISubroutineType(types: !2031)
!2031 = !{!47, !47, !52}
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!47, !47, !694}
!2034 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2035, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2036, nameTableKind: None)
!2035 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!2036 = !{!197, !762}
!2037 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2038, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2039, retainedTypes: !2048, nameTableKind: None)
!2038 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mohamad/clone/coreutils")
!2039 = !{!2040}
!2040 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !2041, line: 26, baseType: !67, size: 32, elements: !2042)
!2041 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mohamad/clone/coreutils")
!2042 = !{!2043, !2044, !2045, !2046, !2047}
!2043 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!2044 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!2045 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!2046 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!2047 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!2048 = !{!5, !34, !2049, !2051, !177, !181, !2052, !7, !54, !565, !178, !1108, !8, !2053, !2055}
!2049 = !DISubroutineType(types: !2050)
!2050 = !{!2051, !177, !181, !5, !2052, !177}
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !2041, line: 39, baseType: !2040)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!2053 = !DISubroutineType(types: !2054)
!2054 = !{!2051, !2052, !5}
!2055 = !DISubroutineType(types: !2056)
!2056 = !{!2051, !2052, !5, !5}
!2057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2058, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2059, nameTableKind: None)
!2058 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!2059 = !{!1327, !139, !7, !52, !674, !2060}
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2062)
!2062 = !{!2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2061, file: !2, line: 242, baseType: !5, size: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2061, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2061, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2061, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2061, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2061, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2061, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2061, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2061, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2061, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2061, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2061, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2061, file: !2, line: 260, baseType: !2076, size: 64, offset: 768)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2078)
!2078 = !{!2079, !2080, !2081}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2077, file: !2, line: 157, baseType: !2076, size: 64)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2077, file: !2, line: 158, baseType: !2060, size: 64, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2077, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2061, file: !2, line: 262, baseType: !2060, size: 64, offset: 832)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2061, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2061, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2061, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2061, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2061, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2061, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2061, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2061, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2061, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2061, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2061, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2061, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2061, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2061, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2061, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2098 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2099, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2100, nameTableKind: None)
!2099 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!2100 = !{!47, !2101, !5, !2103, !2143, !2104}
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!5, !2103}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2106)
!2106 = !{!2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2105, file: !2, line: 242, baseType: !5, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2105, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2105, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2105, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2105, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2105, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2105, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2105, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2105, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2105, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2105, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2105, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2105, file: !2, line: 260, baseType: !2120, size: 64, offset: 768)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 64)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2122)
!2122 = !{!2123, !2124, !2126}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2121, file: !2, line: 157, baseType: !2120, size: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2121, file: !2, line: 158, baseType: !2125, size: 64, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2121, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2105, file: !2, line: 262, baseType: !2125, size: 64, offset: 832)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2105, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2105, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2105, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2105, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2105, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2105, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2105, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2105, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2105, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2105, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2105, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2105, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2105, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2105, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2105, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2143 = !DISubroutineType(types: !2144)
!2144 = !{null, !2103}
!2145 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2146, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2147, nameTableKind: None)
!2146 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!2147 = !{!2148, !52, !2150, !2151, !7, !5}
!2148 = !DISubroutineType(types: !2149)
!2149 = !{!52, !2150}
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !2152)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2153)
!2153 = !{!2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2152, file: !2, line: 242, baseType: !5, size: 32)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2152, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2152, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2152, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2152, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2152, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2152, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2152, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2152, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2152, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2152, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2152, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2152, file: !2, line: 260, baseType: !2167, size: 64, offset: 768)
!2167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2168, size: 64)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2169)
!2169 = !{!2170, !2171, !2173}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2168, file: !2, line: 157, baseType: !2167, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2168, file: !2, line: 158, baseType: !2172, size: 64, offset: 64)
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2168, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2152, file: !2, line: 262, baseType: !2172, size: 64, offset: 832)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2152, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2152, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2152, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2152, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2152, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2152, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2152, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2152, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2152, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2152, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2152, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2152, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2152, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2152, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2152, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2190 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2191, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2192, nameTableKind: None)
!2191 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!2192 = !{!47, !2193, !5, !2195, !358, !2196, !7, !45}
!2193 = !DISubroutineType(types: !2194)
!2194 = !{!5, !2195, !358, !5}
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !2197)
!2197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2198)
!2198 = !{!2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2197, file: !2, line: 242, baseType: !5, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2197, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2197, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2197, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2197, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2197, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2197, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2197, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2197, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2197, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2197, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2197, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2197, file: !2, line: 260, baseType: !2212, size: 64, offset: 768)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2214)
!2214 = !{!2215, !2216, !2218}
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2213, file: !2, line: 157, baseType: !2212, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2213, file: !2, line: 158, baseType: !2217, size: 64, offset: 64)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2213, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2197, file: !2, line: 262, baseType: !2217, size: 64, offset: 832)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2197, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2197, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2197, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2197, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2197, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2197, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2197, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2197, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2197, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2197, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2197, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2197, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2197, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2197, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2197, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2236, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2237, nameTableKind: None)
!2236 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!2237 = !{!52, !2238, !2240, !177, !2241, !1124, !565, !178}
!2238 = !DISubroutineType(types: !2239)
!2239 = !{!52, !2240, !177, !52, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1111, line: 106, baseType: !2243)
!2243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1111, line: 94, baseType: !2244)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1111, line: 82, size: 64, elements: !2245)
!2245 = !{!2246, !2247}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2244, file: !1111, line: 84, baseType: !5, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2244, file: !1111, line: 93, baseType: !2248, size: 32, offset: 32)
!2248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2244, file: !1111, line: 85, size: 32, elements: !2249)
!2249 = !{!2250, !2251}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2248, file: !1111, line: 88, baseType: !67, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2248, file: !1111, line: 92, baseType: !1121, size: 32)
!2252 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2253, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2254, nameTableKind: None)
!2253 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!2254 = !{!2255, !2257}
!2255 = !DISubroutineType(types: !2256)
!2256 = !{null, !2257}
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2259, line: 260, size: 32, elements: !2260)
!2259 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mohamad/clone/coreutils")
!2260 = !{!2261}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2258, file: !2259, line: 261, baseType: !136, size: 32)
!2262 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2263, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2264, nameTableKind: None)
!2263 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!2264 = !{!2265, !5, !177, !136, !2267}
!2265 = !DISubroutineType(types: !2266)
!2266 = !{!5, !177, !5, !136, !2267}
!2267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2268, size: 64)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2259, line: 260, size: 32, elements: !2269)
!2269 = !{!2270}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2268, file: !2259, line: 261, baseType: !136, size: 32)
!2271 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2272, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2273, nameTableKind: None)
!2272 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!2273 = !{!1525, !5, !177, !136, !2274, !2276, !139}
!2274 = !DISubroutineType(types: !2275)
!2275 = !{!5, !2276, !177, !5}
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2277, size: 64)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2259, line: 260, size: 32, elements: !2278)
!2278 = !{!2279}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2277, file: !2259, line: 261, baseType: !136, size: 32)
!2280 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2281, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2282, nameTableKind: None)
!2281 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mohamad/clone/coreutils")
!2282 = !{!67, !2283, !1493, !5, !2285, !1496, !2287, !52, !2289, !2291, !2292, !2294}
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!1493, !1493, !5}
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!1496, !1496, !5}
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!52, !52, !5}
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!2291, !2291, !5}
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !557, line: 49, baseType: !34)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!2294, !2294, !5}
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !557, line: 48, baseType: !565)
!2295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2296, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2297, nameTableKind: None)
!2296 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!2297 = !{!563, !1888, !5, !177, !565, !564}
!2298 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2299, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2300, nameTableKind: None)
!2299 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!2300 = !{!2301, !5, !2303, !2343}
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!5, !2303}
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !2305)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2306)
!2306 = !{!2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2305, file: !2, line: 242, baseType: !5, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2305, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2305, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2305, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2305, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2305, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2305, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2305, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2305, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2305, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2305, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2305, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2305, file: !2, line: 260, baseType: !2320, size: 64, offset: 768)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2322)
!2322 = !{!2323, !2324, !2326}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2321, file: !2, line: 157, baseType: !2320, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2321, file: !2, line: 158, baseType: !2325, size: 64, offset: 64)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2321, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2305, file: !2, line: 262, baseType: !2325, size: 64, offset: 832)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2305, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2305, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2305, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2305, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2305, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2305, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2305, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2305, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2305, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2305, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2305, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2305, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2305, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2305, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2305, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2343 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !139)
!2344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2345, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2346, nameTableKind: None)
!2345 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!2346 = !{!2347, !675, !177, !5}
!2347 = !DISubroutineType(types: !2348)
!2348 = !{!675, !177}
!2349 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2350, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2351, nameTableKind: None)
!2350 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!2351 = !{!2352, !2354, !2359}
!2352 = !DISubroutineType(types: !2353)
!2353 = !{null, !2354}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2355, size: 64)
!2355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !2356)
!2356 = !{!2357, !2358}
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2355, file: !297, line: 122, baseType: !300, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2355, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!2355}
!2361 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2362, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2363, nameTableKind: None)
!2362 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!2363 = !{!253, !139, !5, !177}
!2364 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2365, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2366, nameTableKind: None)
!2365 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!2366 = !{!615, !52, !525, !177, !178}
!2367 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2368, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2369, nameTableKind: None)
!2368 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!2369 = !{!47, !2370, !177}
!2370 = !DISubroutineType(types: !657)
!2371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2372, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2373, nameTableKind: None)
!2372 = !DIFile(filename: "./lib/dirchownmod.c", directory: "/home/mohamad/clone/coreutils")
!2373 = !{!124, !126, !136, !2374, !5, !177, !137, !125, !127}
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!5, !5, !177, !136, !124, !126, !136, !136}
!2376 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2377, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2378, nameTableKind: None)
!2377 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!2378 = !{!2379, !5, !177, !136, !2381}
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!5, !5, !177, !5}
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !1399, line: 14, baseType: !2382)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2377, line: 35, baseType: !2383)
!2383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2384, size: 192, elements: !39)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2377, line: 35, size: 192, elements: !2385)
!2385 = !{!2386, !2387, !2388, !2389}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2384, file: !2377, line: 35, baseType: !67, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2384, file: !2377, line: 35, baseType: !67, size: 32, offset: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2384, file: !2377, line: 35, baseType: !47, size: 64, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2384, file: !2377, line: 35, baseType: !47, size: 64, offset: 128)
!2390 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2391, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2392, nameTableKind: None)
!2391 = !DIFile(filename: "./lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!2392 = !{!47, !2393, !2395, !2400, !2404, !2406, !177, !52, !2408, !2410, !2412, !2414, !2415, !2417, !5, !2419}
!2393 = !DISubroutineType(types: !2394)
!2394 = !{!2395, !2400}
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !2397, line: 54, size: 192, elements: !2398)
!2397 = !DIFile(filename: "lib/randint.c", directory: "/home/mohamad/clone/coreutils")
!2398 = !{!2399, !2403, !2405}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2396, file: !2397, line: 57, baseType: !2400, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2402, line: 25, flags: DIFlagFwdDecl)
!2402 = !DIFile(filename: "./lib/randread.h", directory: "/home/mohamad/clone/coreutils")
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !2396, file: !2397, line: 64, baseType: !2404, size: 64, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1199, line: 30, baseType: !556)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !2396, file: !2397, line: 65, baseType: !2404, size: 64, offset: 128)
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!2395, !177, !52}
!2408 = !DISubroutineType(types: !2409)
!2409 = !{!2400, !2410}
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2396)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!2404, !2395, !2404}
!2414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 64, elements: !708)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !2395}
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!5, !2395}
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!2404, !2404}
!2421 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2422, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2423, nameTableKind: None)
!2422 = !DIFile(filename: "./lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!2423 = !{!52, !2424, !2426, !177, !2431, !2503, !2472, !2505, !525, !2507, !47, !2509, !5, !2511, !2473, !762, !2513, !7, !674, !108, !124, !2515, !2517, !2518, !2520, !2521}
!2424 = !DISubroutineType(types: !2425)
!2425 = !{!2426, !177, !52}
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2428, line: 79, size: 33216, elements: !2429)
!2428 = !DIFile(filename: "lib/randread.c", directory: "/home/mohamad/clone/coreutils")
!2429 = !{!2430, !2471, !2475, !2476}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2427, file: !2428, line: 83, baseType: !2431, size: 64)
!2431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2432, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !2433)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2434)
!2434 = !{!2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2433, file: !2, line: 242, baseType: !5, size: 32)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2433, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2433, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2433, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2433, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2433, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2433, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2433, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2433, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2433, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2433, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2433, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2433, file: !2, line: 260, baseType: !2448, size: 64, offset: 768)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2449, size: 64)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2450)
!2450 = !{!2451, !2452, !2454}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2449, file: !2, line: 157, baseType: !2448, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2449, file: !2, line: 158, baseType: !2453, size: 64, offset: 64)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2449, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2433, file: !2, line: 262, baseType: !2453, size: 64, offset: 832)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2433, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2433, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2433, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2433, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2433, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2433, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2433, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2433, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2433, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2433, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2433, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2433, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2433, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2433, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2433, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2427, file: !2428, line: 90, baseType: !2472, size: 64, offset: 64)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{null, !525}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !2427, file: !2428, line: 91, baseType: !525, size: 64, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2427, file: !2428, line: 117, baseType: !2477, size: 33024, offset: 192)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2427, file: !2428, line: 96, size: 33024, elements: !2478)
!2478 = !{!2479, !2480}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2477, file: !2428, line: 99, baseType: !344, size: 32768)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !2477, file: !2428, line: 116, baseType: !2481, size: 33024)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !2428, line: 102, size: 33024, elements: !2482)
!2482 = !{!2483, !2484, !2495}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !2481, file: !2428, line: 105, baseType: !52, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2481, file: !2428, line: 108, baseType: !2485, size: 16576, offset: 64)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2486, line: 56, size: 16576, elements: !2487)
!2486 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mohamad/clone/coreutils")
!2487 = !{!2488, !2492, !2493, !2494}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2485, file: !2486, line: 58, baseType: !2489, size: 16384)
!2489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2490, size: 16384, elements: !628)
!2490 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2486, line: 44, baseType: !2491)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !557, line: 80, baseType: !54)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2485, file: !2486, line: 59, baseType: !2490, size: 64, offset: 16384)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2485, file: !2486, line: 59, baseType: !2490, size: 64, offset: 16448)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2485, file: !2486, line: 59, baseType: !2490, size: 64, offset: 16512)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2481, file: !2428, line: 115, baseType: !2496, size: 16384, offset: 16640)
!2496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2481, file: !2428, line: 111, size: 16384, elements: !2497)
!2497 = !{!2498, !2499}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2496, file: !2428, line: 113, baseType: !2489, size: 16384)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2496, file: !2428, line: 114, baseType: !2500, size: 16384)
!2500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !565, size: 16384, elements: !2501)
!2501 = !{!2502}
!2502 = !DISubrange(count: 2048)
!2503 = !DISubroutineType(types: !2504)
!2504 = !{null, !2426, !2472}
!2505 = !DISubroutineType(types: !2506)
!2506 = !{null, !2426, !525}
!2507 = !DISubroutineType(types: !2508)
!2508 = !{null, !2426, !47, !52}
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!5, !2426}
!2511 = !DISubroutineType(types: !2512)
!2512 = !{!2426, !2431, !525}
!2513 = !DISubroutineType(types: !2514)
!2514 = !{null, !47, !52, !52}
!2515 = !DISubroutineType(types: !2516)
!2516 = !{null, !2426, !2517, !52}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!2518 = !DISubroutineType(types: !2519)
!2519 = !{null, !2520, !47, !52}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2522 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2523, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2524, nameTableKind: None)
!2523 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!2524 = !{!2490, !2525, !2527, !2521, !2534, !5, !2489, !2536, !2538, !525, !177, !2539, !2540}
!2525 = !DISubroutineType(types: !2526)
!2526 = !{null, !2527, !2521}
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2486, line: 56, size: 16576, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2528, file: !2486, line: 58, baseType: !2489, size: 16384)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2528, file: !2486, line: 59, baseType: !2490, size: 64, offset: 16384)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2528, file: !2486, line: 59, baseType: !2490, size: 64, offset: 16448)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2528, file: !2486, line: 59, baseType: !2490, size: 64, offset: 16512)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{null, !2527}
!2536 = !DISubroutineType(types: !2537)
!2537 = !{!2490, !2538, !2490}
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2490)
!2540 = !DISubroutineType(types: !2541)
!2541 = !{!2490, !2490}
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !1952, nameTableKind: None)
!2543 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!2544 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2545, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2546, nameTableKind: None)
!2545 = !DIFile(filename: "./lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!2546 = !{!2547, !47, !52}
!2547 = !DISubroutineType(types: !2548)
!2548 = !{null, !47, !52}
!2549 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2550, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2551, nameTableKind: None)
!2550 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!2551 = !{!2552, !5, !2554}
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!5, !2554}
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !2556)
!2556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2557)
!2557 = !{!2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2556, file: !2, line: 242, baseType: !5, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2556, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2556, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2556, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2556, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2556, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2556, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2556, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2556, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2556, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2556, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2556, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2556, file: !2, line: 260, baseType: !2571, size: 64, offset: 768)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2573)
!2573 = !{!2574, !2575, !2577}
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2572, file: !2, line: 157, baseType: !2571, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2572, file: !2, line: 158, baseType: !2576, size: 64, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2572, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2556, file: !2, line: 262, baseType: !2576, size: 64, offset: 832)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2556, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2556, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2556, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2556, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2556, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2556, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2556, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2556, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2556, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2556, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2556, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2556, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2556, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2556, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2556, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2594 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2595, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2596, nameTableKind: None)
!2595 = !DIFile(filename: "./lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!2596 = !{!2597, !7, !2599}
!2597 = !DISubroutineType(types: !2598)
!2598 = !{!7, !2599}
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "nl_item", file: !2600, line: 36, baseType: !5)
!2600 = !DIFile(filename: "/usr/include/nl_types.h", directory: "")
!2601 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2602, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2603, nameTableKind: None)
!2602 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mohamad/clone/coreutils")
!2603 = !{!253, !139, !5, !1798}
!2604 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2605, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !206, retainedTypes: !2606, nameTableKind: None)
!2605 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!2606 = !{!2607, !2609, !177, !5}
!2607 = !DISubroutineType(types: !2608)
!2608 = !{!2609, !177, !177}
!2609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2610, size: 64)
!2610 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !359, line: 48, baseType: !2611)
!2611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2, line: 241, size: 1728, elements: !2612)
!2612 = !{!2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648}
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2611, file: !2, line: 242, baseType: !5, size: 32)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2611, file: !2, line: 247, baseType: !7, size: 64, offset: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2611, file: !2, line: 248, baseType: !7, size: 64, offset: 128)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2611, file: !2, line: 249, baseType: !7, size: 64, offset: 192)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2611, file: !2, line: 250, baseType: !7, size: 64, offset: 256)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2611, file: !2, line: 251, baseType: !7, size: 64, offset: 320)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2611, file: !2, line: 252, baseType: !7, size: 64, offset: 384)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2611, file: !2, line: 253, baseType: !7, size: 64, offset: 448)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2611, file: !2, line: 254, baseType: !7, size: 64, offset: 512)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2611, file: !2, line: 256, baseType: !7, size: 64, offset: 576)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2611, file: !2, line: 257, baseType: !7, size: 64, offset: 640)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2611, file: !2, line: 258, baseType: !7, size: 64, offset: 704)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2611, file: !2, line: 260, baseType: !2626, size: 64, offset: 768)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2, line: 156, size: 192, elements: !2628)
!2628 = !{!2629, !2630, !2632}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2627, file: !2, line: 157, baseType: !2626, size: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !2627, file: !2, line: 158, baseType: !2631, size: 64, offset: 64)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !2627, file: !2, line: 162, baseType: !5, size: 32, offset: 128)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2611, file: !2, line: 262, baseType: !2631, size: 64, offset: 832)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2611, file: !2, line: 264, baseType: !5, size: 32, offset: 896)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2611, file: !2, line: 268, baseType: !5, size: 32, offset: 928)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2611, file: !2, line: 270, baseType: !30, size: 64, offset: 960)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2611, file: !2, line: 274, baseType: !34, size: 16, offset: 1024)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2611, file: !2, line: 275, baseType: !36, size: 8, offset: 1040)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2611, file: !2, line: 276, baseType: !38, size: 8, offset: 1048)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2611, file: !2, line: 280, baseType: !42, size: 64, offset: 1088)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2611, file: !2, line: 289, baseType: !45, size: 64, offset: 1152)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2611, file: !2, line: 297, baseType: !47, size: 64, offset: 1216)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !2611, file: !2, line: 298, baseType: !47, size: 64, offset: 1280)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !2611, file: !2, line: 299, baseType: !47, size: 64, offset: 1344)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !2611, file: !2, line: 300, baseType: !47, size: 64, offset: 1408)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2611, file: !2, line: 302, baseType: !52, size: 64, offset: 1472)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2611, file: !2, line: 303, baseType: !5, size: 32, offset: 1536)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2611, file: !2, line: 305, baseType: !57, size: 160, offset: 1568)
!2649 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480) (llvm/llvm-project 0399d5a9682b3cef71c653373e38890c63c4c365)"}
!2650 = !{i32 2, !"ctir", i32 1}
!2651 = !{i32 2, !"Dwarf Version", i32 4}
!2652 = !{i32 2, !"Debug Info Version", i32 3}
!2653 = !{i32 1, !"wchar_size", i32 4}
!2654 = distinct !DISubprogram(name: "usage", scope: !63, file: !63, line: 621, type: !122, scopeLine: 622, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !206)
!2655 = !{!2656, !2656, i64 0}
!2656 = !{!"int", !2657, i64 0}
!2657 = !{!"omnipotent char", !2658, i64 0}
!2658 = !{!"Simple C/C++ TBAA"}
!2659 = !DILocalVariable(name: "status", arg: 1, scope: !2654, file: !63, line: 621, type: !5)
!2660 = !DILocation(line: 621, column: 12, scope: !2654)
!2661 = !DILocation(line: 623, column: 7, scope: !2662)
!2662 = distinct !DILexicalBlock(scope: !2654, file: !63, line: 623, column: 7)
!2663 = !DILocation(line: 623, column: 14, scope: !2662)
!2664 = !DILocation(line: 623, column: 7, scope: !2654)
!2665 = !DILocation(line: 624, column: 5, scope: !2662)
!2666 = !DILocation(line: 624, column: 5, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2662, file: !63, line: 624, column: 5)
!2668 = !{!2669, !2669, i64 0}
!2669 = !{!"any pointer", !2657, i64 0}
!2670 = !DILocation(line: 627, column: 15, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2662, file: !63, line: 626, column: 5)
!2672 = !DILocation(line: 633, column: 15, scope: !2671)
!2673 = !DILocation(line: 633, column: 29, scope: !2671)
!2674 = !DILocation(line: 633, column: 43, scope: !2671)
!2675 = !DILocation(line: 633, column: 57, scope: !2671)
!2676 = !DILocation(line: 627, column: 7, scope: !2671)
!2677 = !DILocation(line: 634, column: 7, scope: !2671)
!2678 = !DILocation(line: 646, column: 7, scope: !2671)
!2679 = !DILocation(line: 648, column: 7, scope: !2671)
!2680 = !DILocation(line: 657, column: 7, scope: !2671)
!2681 = !DILocation(line: 665, column: 7, scope: !2671)
!2682 = !DILocation(line: 675, column: 7, scope: !2671)
!2683 = !DILocation(line: 683, column: 7, scope: !2671)
!2684 = !DILocation(line: 684, column: 7, scope: !2671)
!2685 = !DILocation(line: 685, column: 7, scope: !2671)
!2686 = !DILocation(line: 686, column: 7, scope: !2671)
!2687 = !DILocation(line: 688, column: 9, scope: !2654)
!2688 = !DILocation(line: 688, column: 3, scope: !2654)
!2689 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !204, file: !204, line: 585, type: !197, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!2690 = !DILocation(line: 587, column: 3, scope: !2689)
!2691 = !DILocation(line: 590, column: 1, scope: !2689)
!2692 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !204, file: !204, line: 613, type: !197, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!2693 = !DILocation(line: 615, column: 3, scope: !2692)
!2694 = !DILocation(line: 622, column: 3, scope: !2692)
!2695 = !DILocation(line: 628, column: 1, scope: !2692)
!2696 = !DILocalVariable(name: "program", arg: 1, scope: !205, file: !204, line: 631, type: !177)
!2697 = !DILocation(line: 631, column: 34, scope: !205)
!2698 = !DILocalVariable(name: "infomap", scope: !205, file: !204, line: 633, type: !201)
!2699 = !DILocation(line: 633, column: 67, scope: !205)
!2700 = !DILocalVariable(name: "node", scope: !205, file: !204, line: 643, type: !177)
!2701 = !DILocation(line: 643, column: 15, scope: !205)
!2702 = !DILocation(line: 643, column: 22, scope: !205)
!2703 = !DILocalVariable(name: "map_prog", scope: !205, file: !204, line: 644, type: !212)
!2704 = !DILocation(line: 644, column: 25, scope: !205)
!2705 = !DILocation(line: 644, column: 36, scope: !205)
!2706 = !DILocation(line: 646, column: 3, scope: !205)
!2707 = !DILocation(line: 646, column: 10, scope: !205)
!2708 = !DILocation(line: 646, column: 20, scope: !205)
!2709 = !{!2710, !2669, i64 0}
!2710 = !{!"infomap", !2669, i64 0, !2669, i64 8}
!2711 = !DILocation(line: 646, column: 28, scope: !205)
!2712 = !DILocation(line: 646, column: 33, scope: !205)
!2713 = !DILocation(line: 646, column: 31, scope: !205)
!2714 = !DILocation(line: 0, scope: !205)
!2715 = !DILocation(line: 647, column: 13, scope: !205)
!2716 = distinct !{!2716, !2706, !2715}
!2717 = !DILocation(line: 649, column: 7, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !205, file: !204, line: 649, column: 7)
!2719 = !DILocation(line: 649, column: 17, scope: !2718)
!2720 = !{!2710, !2669, i64 8}
!2721 = !DILocation(line: 649, column: 7, scope: !205)
!2722 = !DILocation(line: 650, column: 12, scope: !2718)
!2723 = !DILocation(line: 650, column: 22, scope: !2718)
!2724 = !DILocation(line: 650, column: 10, scope: !2718)
!2725 = !DILocation(line: 650, column: 5, scope: !2718)
!2726 = !DILocation(line: 652, column: 11, scope: !205)
!2727 = !DILocation(line: 652, column: 3, scope: !205)
!2728 = !DILocalVariable(name: "lc_messages", scope: !205, file: !204, line: 656, type: !177)
!2729 = !DILocation(line: 656, column: 15, scope: !205)
!2730 = !DILocation(line: 656, column: 29, scope: !205)
!2731 = !DILocation(line: 657, column: 7, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !205, file: !204, line: 657, column: 7)
!2733 = !DILocation(line: 657, column: 19, scope: !2732)
!2734 = !DILocation(line: 657, column: 22, scope: !2732)
!2735 = !DILocation(line: 657, column: 7, scope: !205)
!2736 = !DILocation(line: 663, column: 7, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2732, file: !204, line: 658, column: 5)
!2738 = !DILocation(line: 665, column: 5, scope: !2737)
!2739 = !DILocation(line: 666, column: 11, scope: !205)
!2740 = !DILocation(line: 667, column: 24, scope: !205)
!2741 = !DILocation(line: 666, column: 3, scope: !205)
!2742 = !DILocation(line: 668, column: 11, scope: !205)
!2743 = !DILocation(line: 669, column: 11, scope: !205)
!2744 = !DILocation(line: 669, column: 17, scope: !205)
!2745 = !DILocation(line: 669, column: 25, scope: !205)
!2746 = !DILocation(line: 669, column: 22, scope: !205)
!2747 = !DILocation(line: 668, column: 3, scope: !205)
!2748 = !DILocation(line: 670, column: 1, scope: !205)
!2749 = distinct !DISubprogram(name: "main", scope: !63, file: !63, line: 793, type: !179, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !62, retainedNodes: !206)
!2750 = !DILocalVariable(name: "argc", arg: 1, scope: !2749, file: !63, line: 793, type: !5)
!2751 = !DILocation(line: 793, column: 11, scope: !2749)
!2752 = !DILocalVariable(name: "argv", arg: 2, scope: !2749, file: !63, line: 793, type: !181)
!2753 = !DILocation(line: 793, column: 24, scope: !2749)
!2754 = !DILocalVariable(name: "optc", scope: !2749, file: !63, line: 795, type: !5)
!2755 = !DILocation(line: 795, column: 7, scope: !2749)
!2756 = !DILocalVariable(name: "exit_status", scope: !2749, file: !63, line: 796, type: !5)
!2757 = !DILocation(line: 796, column: 7, scope: !2749)
!2758 = !DILocalVariable(name: "specified_mode", scope: !2749, file: !63, line: 797, type: !177)
!2759 = !DILocation(line: 797, column: 15, scope: !2749)
!2760 = !DILocalVariable(name: "make_backups", scope: !2749, file: !63, line: 798, type: !139)
!2761 = !DILocation(line: 798, column: 8, scope: !2749)
!2762 = !{!2763, !2763, i64 0}
!2763 = !{!"_Bool", !2657, i64 0}
!2764 = !DILocalVariable(name: "backup_suffix", scope: !2749, file: !63, line: 799, type: !177)
!2765 = !DILocation(line: 799, column: 15, scope: !2749)
!2766 = !DILocalVariable(name: "version_control_string", scope: !2749, file: !63, line: 800, type: !7)
!2767 = !DILocation(line: 800, column: 9, scope: !2749)
!2768 = !DILocalVariable(name: "mkdir_and_install", scope: !2749, file: !63, line: 801, type: !139)
!2769 = !DILocation(line: 801, column: 8, scope: !2749)
!2770 = !DILocalVariable(name: "x", scope: !2749, file: !63, line: 802, type: !129)
!2771 = !DILocation(line: 802, column: 21, scope: !2749)
!2772 = !DILocalVariable(name: "target_directory", scope: !2749, file: !63, line: 803, type: !177)
!2773 = !DILocation(line: 803, column: 15, scope: !2749)
!2774 = !DILocalVariable(name: "no_target_directory", scope: !2749, file: !63, line: 804, type: !139)
!2775 = !DILocation(line: 804, column: 8, scope: !2749)
!2776 = !DILocalVariable(name: "n_files", scope: !2749, file: !63, line: 805, type: !5)
!2777 = !DILocation(line: 805, column: 7, scope: !2749)
!2778 = !DILocalVariable(name: "file", scope: !2749, file: !63, line: 806, type: !181)
!2779 = !DILocation(line: 806, column: 10, scope: !2749)
!2780 = !DILocalVariable(name: "strip_program_specified", scope: !2749, file: !63, line: 807, type: !139)
!2781 = !DILocation(line: 807, column: 8, scope: !2749)
!2782 = !DILocalVariable(name: "scontext", scope: !2749, file: !63, line: 808, type: !177)
!2783 = !DILocation(line: 808, column: 15, scope: !2749)
!2784 = !DILocation(line: 810, column: 19, scope: !2749)
!2785 = !DILocation(line: 813, column: 21, scope: !2749)
!2786 = !DILocation(line: 813, column: 3, scope: !2749)
!2787 = !DILocation(line: 814, column: 3, scope: !2749)
!2788 = !DILocation(line: 815, column: 3, scope: !2749)
!2789 = !DILocation(line: 816, column: 3, scope: !2749)
!2790 = !DILocation(line: 818, column: 3, scope: !2749)
!2791 = !DILocation(line: 820, column: 3, scope: !2749)
!2792 = !DILocation(line: 822, column: 14, scope: !2749)
!2793 = !DILocation(line: 823, column: 14, scope: !2749)
!2794 = !DILocation(line: 824, column: 15, scope: !2749)
!2795 = !DILocation(line: 825, column: 11, scope: !2749)
!2796 = !DILocation(line: 826, column: 3, scope: !2749)
!2797 = !DILocation(line: 828, column: 3, scope: !2749)
!2798 = !DILocation(line: 828, column: 31, scope: !2749)
!2799 = !DILocation(line: 828, column: 37, scope: !2749)
!2800 = !DILocation(line: 828, column: 18, scope: !2749)
!2801 = !DILocation(line: 828, column: 16, scope: !2749)
!2802 = !DILocation(line: 829, column: 38, scope: !2749)
!2803 = !DILocation(line: 831, column: 15, scope: !2804)
!2804 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 830, column: 5)
!2805 = !DILocation(line: 831, column: 7, scope: !2804)
!2806 = !DILocation(line: 834, column: 24, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2804, file: !63, line: 832, column: 9)
!2808 = !DILocation(line: 835, column: 15, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2807, file: !63, line: 835, column: 15)
!2810 = !DILocation(line: 835, column: 15, scope: !2807)
!2811 = !DILocation(line: 836, column: 38, scope: !2809)
!2812 = !DILocation(line: 836, column: 36, scope: !2809)
!2813 = !DILocation(line: 836, column: 13, scope: !2809)
!2814 = !DILocation(line: 837, column: 11, scope: !2807)
!2815 = !DILocation(line: 839, column: 11, scope: !2807)
!2816 = !DILocation(line: 841, column: 31, scope: !2807)
!2817 = !DILocation(line: 842, column: 11, scope: !2807)
!2818 = !DILocation(line: 844, column: 23, scope: !2807)
!2819 = !DILocation(line: 847, column: 11, scope: !2807)
!2820 = !DILocation(line: 849, column: 11, scope: !2807)
!2821 = !DILocation(line: 851, column: 36, scope: !2807)
!2822 = !DILocation(line: 851, column: 27, scope: !2807)
!2823 = !DILocation(line: 851, column: 25, scope: !2807)
!2824 = !DILocation(line: 852, column: 35, scope: !2807)
!2825 = !DILocation(line: 853, column: 11, scope: !2807)
!2826 = !DILocation(line: 855, column: 19, scope: !2807)
!2827 = !DILocation(line: 856, column: 11, scope: !2807)
!2828 = !DILocation(line: 858, column: 29, scope: !2807)
!2829 = !DILocation(line: 859, column: 11, scope: !2807)
!2830 = !DILocation(line: 861, column: 13, scope: !2807)
!2831 = !DILocation(line: 861, column: 21, scope: !2807)
!2832 = !{!2833, !2763, i64 46}
!2833 = !{!"cp_options", !2657, i64 0, !2657, i64 4, !2657, i64 8, !2657, i64 12, !2656, i64 16, !2763, i64 20, !2763, i64 21, !2763, i64 22, !2763, i64 23, !2763, i64 24, !2763, i64 25, !2763, i64 26, !2763, i64 27, !2763, i64 28, !2763, i64 29, !2763, i64 30, !2763, i64 31, !2763, i64 32, !2763, i64 33, !2763, i64 34, !2763, i64 35, !2763, i64 36, !2763, i64 37, !2763, i64 38, !2763, i64 39, !2763, i64 40, !2763, i64 41, !2763, i64 42, !2763, i64 43, !2763, i64 44, !2763, i64 45, !2763, i64 46, !2763, i64 47, !2763, i64 48, !2763, i64 49, !2656, i64 52, !2657, i64 56, !2669, i64 64, !2669, i64 72}
!2834 = !DILocation(line: 862, column: 11, scope: !2807)
!2835 = !DILocation(line: 864, column: 24, scope: !2807)
!2836 = !DILocation(line: 864, column: 22, scope: !2807)
!2837 = !DILocation(line: 865, column: 11, scope: !2807)
!2838 = !DILocation(line: 867, column: 28, scope: !2807)
!2839 = !DILocation(line: 867, column: 26, scope: !2807)
!2840 = !DILocation(line: 868, column: 11, scope: !2807)
!2841 = !DILocation(line: 870, column: 24, scope: !2807)
!2842 = !DILocation(line: 870, column: 22, scope: !2807)
!2843 = !DILocation(line: 871, column: 11, scope: !2807)
!2844 = !DILocation(line: 873, column: 13, scope: !2807)
!2845 = !DILocation(line: 873, column: 33, scope: !2807)
!2846 = !{!2833, !2763, i64 31}
!2847 = !DILocation(line: 874, column: 11, scope: !2807)
!2848 = !DILocation(line: 876, column: 24, scope: !2807)
!2849 = !DILocation(line: 877, column: 27, scope: !2807)
!2850 = !DILocation(line: 877, column: 25, scope: !2807)
!2851 = !DILocation(line: 878, column: 11, scope: !2807)
!2852 = !DILocation(line: 880, column: 15, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2807, file: !63, line: 880, column: 15)
!2854 = !DILocation(line: 880, column: 15, scope: !2807)
!2855 = !DILocation(line: 881, column: 13, scope: !2853)
!2856 = !DILocation(line: 883, column: 30, scope: !2807)
!2857 = !DILocation(line: 883, column: 28, scope: !2807)
!2858 = !DILocation(line: 884, column: 11, scope: !2807)
!2859 = !DILocation(line: 886, column: 31, scope: !2807)
!2860 = !DILocation(line: 887, column: 11, scope: !2807)
!2861 = !DILocation(line: 890, column: 17, scope: !2862)
!2862 = distinct !DILexicalBlock(scope: !2807, file: !63, line: 890, column: 15)
!2863 = !DILocation(line: 890, column: 15, scope: !2807)
!2864 = !DILocation(line: 892, column: 28, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2862, file: !63, line: 891, column: 13)
!2866 = !DILocation(line: 892, column: 15, scope: !2865)
!2867 = !DILocation(line: 894, column: 15, scope: !2865)
!2868 = !DILocation(line: 896, column: 13, scope: !2807)
!2869 = !DILocation(line: 896, column: 39, scope: !2807)
!2870 = !{!2833, !2763, i64 37}
!2871 = !DILocation(line: 897, column: 39, scope: !2807)
!2872 = !DILocation(line: 898, column: 11, scope: !2807)
!2873 = !DILocation(line: 900, column: 15, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2807, file: !63, line: 900, column: 15)
!2875 = !DILocation(line: 900, column: 15, scope: !2807)
!2876 = !DILocation(line: 908, column: 43, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2874, file: !63, line: 901, column: 13)
!2878 = !DILocation(line: 910, column: 19, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2877, file: !63, line: 910, column: 19)
!2880 = !DILocation(line: 910, column: 19, scope: !2877)
!2881 = !DILocation(line: 911, column: 28, scope: !2879)
!2882 = !DILocation(line: 911, column: 26, scope: !2879)
!2883 = !DILocation(line: 911, column: 17, scope: !2879)
!2884 = !DILocation(line: 913, column: 19, scope: !2879)
!2885 = !DILocation(line: 913, column: 40, scope: !2879)
!2886 = !{!2833, !2763, i64 33}
!2887 = !DILocation(line: 914, column: 13, scope: !2877)
!2888 = !DILocation(line: 915, column: 20, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2874, file: !63, line: 915, column: 20)
!2890 = !DILocation(line: 915, column: 20, scope: !2874)
!2891 = !DILocation(line: 918, column: 22, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2889, file: !63, line: 916, column: 13)
!2893 = !DILocation(line: 917, column: 15, scope: !2892)
!2894 = !DILocation(line: 920, column: 13, scope: !2892)
!2895 = !DILocation(line: 921, column: 11, scope: !2807)
!2896 = !DILocation(line: 922, column: 9, scope: !2807)
!2897 = !DILocation(line: 923, column: 9, scope: !2807)
!2898 = !DILocation(line: 925, column: 11, scope: !2807)
!2899 = distinct !{!2899, !2797, !2900}
!2900 = !DILocation(line: 927, column: 5, scope: !2749)
!2901 = !DILocation(line: 930, column: 7, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 930, column: 7)
!2903 = !DILocation(line: 930, column: 15, scope: !2902)
!2904 = !DILocation(line: 930, column: 18, scope: !2902)
!2905 = !DILocation(line: 930, column: 7, scope: !2749)
!2906 = !DILocation(line: 931, column: 5, scope: !2902)
!2907 = !DILocation(line: 933, column: 7, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 933, column: 7)
!2909 = !DILocation(line: 933, column: 15, scope: !2908)
!2910 = !DILocation(line: 933, column: 18, scope: !2908)
!2911 = !DILocation(line: 933, column: 7, scope: !2749)
!2912 = !DILocation(line: 934, column: 5, scope: !2908)
!2913 = !DILocation(line: 937, column: 7, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 937, column: 7)
!2915 = !DILocation(line: 937, column: 7, scope: !2749)
!2916 = !DILocalVariable(name: "st", scope: !2917, file: !63, line: 939, type: !276)
!2917 = distinct !DILexicalBlock(scope: !2914, file: !63, line: 938, column: 5)
!2918 = !DILocation(line: 939, column: 19, scope: !2917)
!2919 = !DILocalVariable(name: "stat_success", scope: !2917, file: !63, line: 940, type: !139)
!2920 = !DILocation(line: 940, column: 12, scope: !2917)
!2921 = !DILocation(line: 940, column: 33, scope: !2917)
!2922 = !DILocation(line: 940, column: 27, scope: !2917)
!2923 = !DILocation(line: 940, column: 56, scope: !2917)
!2924 = !DILocation(line: 941, column: 13, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2917, file: !63, line: 941, column: 11)
!2926 = !DILocation(line: 941, column: 31, scope: !2925)
!2927 = !DILocation(line: 941, column: 36, scope: !2925)
!2928 = !DILocation(line: 941, column: 11, scope: !2917)
!2929 = !DILocation(line: 942, column: 9, scope: !2925)
!2930 = !DILocation(line: 944, column: 11, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2917, file: !63, line: 944, column: 11)
!2932 = !DILocation(line: 944, column: 24, scope: !2931)
!2933 = !DILocation(line: 944, column: 29, scope: !2931)
!2934 = !{!2935, !2656, i64 24}
!2935 = !{!"stat", !2936, i64 0, !2936, i64 8, !2936, i64 16, !2656, i64 24, !2656, i64 28, !2656, i64 32, !2656, i64 36, !2936, i64 40, !2936, i64 48, !2936, i64 56, !2936, i64 64, !2937, i64 72, !2937, i64 88, !2937, i64 104, !2657, i64 120}
!2936 = !{!"long", !2657, i64 0}
!2937 = !{!"timespec", !2936, i64 0, !2936, i64 8}
!2938 = !DILocation(line: 944, column: 11, scope: !2917)
!2939 = !DILocation(line: 945, column: 9, scope: !2931)
!2940 = !DILocation(line: 947, column: 5, scope: !2917)
!2941 = !DILocation(line: 949, column: 20, scope: !2749)
!2942 = !DILocation(line: 950, column: 36, scope: !2749)
!2943 = !DILocation(line: 951, column: 36, scope: !2749)
!2944 = !DILocation(line: 950, column: 22, scope: !2749)
!2945 = !DILocation(line: 949, column: 5, scope: !2749)
!2946 = !DILocation(line: 949, column: 17, scope: !2749)
!2947 = !{!2833, !2657, i64 0}
!2948 = !DILocation(line: 953, column: 29, scope: !2749)
!2949 = !DILocation(line: 953, column: 3, scope: !2749)
!2950 = !DILocation(line: 955, column: 9, scope: !2951)
!2951 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 955, column: 7)
!2952 = !DILocation(line: 955, column: 35, scope: !2951)
!2953 = !DILocation(line: 955, column: 41, scope: !2951)
!2954 = !DILocation(line: 955, column: 62, scope: !2951)
!2955 = !DILocation(line: 955, column: 65, scope: !2951)
!2956 = !DILocation(line: 955, column: 7, scope: !2749)
!2957 = !DILocation(line: 956, column: 5, scope: !2951)
!2958 = !DILocation(line: 959, column: 7, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 959, column: 7)
!2960 = !DILocation(line: 959, column: 16, scope: !2959)
!2961 = !DILocation(line: 959, column: 45, scope: !2959)
!2962 = !DILocation(line: 959, column: 35, scope: !2959)
!2963 = !DILocation(line: 959, column: 19, scope: !2959)
!2964 = !DILocation(line: 959, column: 56, scope: !2959)
!2965 = !DILocation(line: 959, column: 7, scope: !2749)
!2966 = !DILocation(line: 960, column: 5, scope: !2959)
!2967 = !DILocation(line: 964, column: 13, scope: !2749)
!2968 = !DILocation(line: 964, column: 20, scope: !2749)
!2969 = !DILocation(line: 964, column: 18, scope: !2749)
!2970 = !DILocation(line: 964, column: 11, scope: !2749)
!2971 = !DILocation(line: 965, column: 10, scope: !2749)
!2972 = !DILocation(line: 965, column: 17, scope: !2749)
!2973 = !DILocation(line: 965, column: 15, scope: !2749)
!2974 = !DILocation(line: 965, column: 8, scope: !2749)
!2975 = !DILocation(line: 967, column: 7, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 967, column: 7)
!2977 = !DILocation(line: 967, column: 21, scope: !2976)
!2978 = !DILocation(line: 967, column: 29, scope: !2976)
!2979 = !DILocation(line: 967, column: 32, scope: !2976)
!2980 = !DILocation(line: 967, column: 18, scope: !2976)
!2981 = !DILocation(line: 967, column: 15, scope: !2976)
!2982 = !DILocation(line: 967, column: 7, scope: !2749)
!2983 = !DILocation(line: 969, column: 11, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !63, line: 969, column: 11)
!2985 = distinct !DILexicalBlock(scope: !2976, file: !63, line: 968, column: 5)
!2986 = !DILocation(line: 969, column: 19, scope: !2984)
!2987 = !DILocation(line: 969, column: 11, scope: !2985)
!2988 = !DILocation(line: 970, column: 22, scope: !2984)
!2989 = !DILocation(line: 970, column: 9, scope: !2984)
!2990 = !DILocation(line: 972, column: 22, scope: !2984)
!2991 = !DILocation(line: 973, column: 16, scope: !2984)
!2992 = !DILocation(line: 972, column: 9, scope: !2984)
!2993 = !DILocation(line: 974, column: 7, scope: !2985)
!2994 = !DILocation(line: 977, column: 7, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 977, column: 7)
!2996 = !DILocation(line: 977, column: 7, scope: !2749)
!2997 = !DILocation(line: 979, column: 11, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !63, line: 979, column: 11)
!2999 = distinct !DILexicalBlock(scope: !2995, file: !63, line: 978, column: 5)
!3000 = !DILocation(line: 979, column: 11, scope: !2999)
!3001 = !DILocation(line: 980, column: 9, scope: !2998)
!3002 = !DILocation(line: 983, column: 15, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2999, file: !63, line: 983, column: 11)
!3004 = !DILocation(line: 983, column: 13, scope: !3003)
!3005 = !DILocation(line: 983, column: 11, scope: !2999)
!3006 = !DILocation(line: 985, column: 24, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !3003, file: !63, line: 984, column: 9)
!3008 = !DILocation(line: 985, column: 47, scope: !3007)
!3009 = !DILocation(line: 985, column: 11, scope: !3007)
!3010 = !DILocation(line: 986, column: 11, scope: !3007)
!3011 = !DILocation(line: 988, column: 5, scope: !2999)
!3012 = !DILocation(line: 989, column: 15, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2995, file: !63, line: 989, column: 12)
!3014 = !DILocation(line: 989, column: 23, scope: !3013)
!3015 = !DILocation(line: 989, column: 26, scope: !3013)
!3016 = !DILocation(line: 989, column: 12, scope: !2995)
!3017 = !DILocation(line: 991, column: 16, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !3019, file: !63, line: 991, column: 11)
!3019 = distinct !DILexicalBlock(scope: !3013, file: !63, line: 990, column: 5)
!3020 = !DILocation(line: 991, column: 13, scope: !3018)
!3021 = !DILocation(line: 991, column: 24, scope: !3018)
!3022 = !DILocation(line: 991, column: 53, scope: !3018)
!3023 = !DILocation(line: 991, column: 58, scope: !3018)
!3024 = !DILocation(line: 991, column: 66, scope: !3018)
!3025 = !DILocation(line: 991, column: 27, scope: !3018)
!3026 = !DILocation(line: 991, column: 11, scope: !3019)
!3027 = !DILocation(line: 992, column: 28, scope: !3018)
!3028 = !DILocation(line: 992, column: 33, scope: !3018)
!3029 = !DILocation(line: 992, column: 26, scope: !3018)
!3030 = !DILocation(line: 992, column: 9, scope: !3018)
!3031 = !DILocation(line: 993, column: 20, scope: !3032)
!3032 = distinct !DILexicalBlock(scope: !3018, file: !63, line: 993, column: 16)
!3033 = !DILocation(line: 993, column: 18, scope: !3032)
!3034 = !DILocation(line: 993, column: 16, scope: !3018)
!3035 = !DILocation(line: 994, column: 9, scope: !3032)
!3036 = !DILocation(line: 996, column: 5, scope: !3019)
!3037 = !DILocation(line: 998, column: 7, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 998, column: 7)
!3039 = !DILocation(line: 998, column: 7, scope: !2749)
!3040 = !DILocalVariable(name: "change", scope: !3041, file: !63, line: 1000, type: !194)
!3041 = distinct !DILexicalBlock(scope: !3038, file: !63, line: 999, column: 5)
!3042 = !DILocation(line: 1000, column: 27, scope: !3041)
!3043 = !DILocation(line: 1000, column: 50, scope: !3041)
!3044 = !DILocation(line: 1000, column: 36, scope: !3041)
!3045 = !DILocation(line: 1001, column: 12, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !3041, file: !63, line: 1001, column: 11)
!3047 = !DILocation(line: 1001, column: 11, scope: !3041)
!3048 = !DILocation(line: 1002, column: 9, scope: !3046)
!3049 = !DILocation(line: 1003, column: 40, scope: !3041)
!3050 = !DILocation(line: 1003, column: 14, scope: !3041)
!3051 = !DILocation(line: 1003, column: 12, scope: !3041)
!3052 = !DILocation(line: 1004, column: 43, scope: !3041)
!3053 = !DILocation(line: 1004, column: 18, scope: !3041)
!3054 = !DILocation(line: 1004, column: 16, scope: !3041)
!3055 = !DILocation(line: 1005, column: 13, scope: !3041)
!3056 = !DILocation(line: 1005, column: 7, scope: !3041)
!3057 = !DILocation(line: 1006, column: 5, scope: !3041)
!3058 = !DILocation(line: 1008, column: 7, scope: !3059)
!3059 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 1008, column: 7)
!3060 = !DILocation(line: 1008, column: 31, scope: !3059)
!3061 = !DILocation(line: 1008, column: 35, scope: !3059)
!3062 = !DILocation(line: 1008, column: 7, scope: !2749)
!3063 = !DILocation(line: 1009, column: 18, scope: !3059)
!3064 = !DILocation(line: 1009, column: 5, scope: !3059)
!3065 = !DILocation(line: 1012, column: 7, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 1012, column: 7)
!3067 = !DILocation(line: 1012, column: 27, scope: !3066)
!3068 = !DILocation(line: 1012, column: 32, scope: !3066)
!3069 = !DILocation(line: 1012, column: 7, scope: !2749)
!3070 = !DILocation(line: 1014, column: 20, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3066, file: !63, line: 1013, column: 5)
!3072 = !DILocation(line: 1014, column: 7, scope: !3071)
!3073 = !DILocation(line: 1016, column: 7, scope: !3071)
!3074 = !DILocation(line: 1019, column: 7, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 1019, column: 7)
!3076 = !DILocation(line: 1019, column: 27, scope: !3075)
!3077 = !DILocation(line: 1019, column: 30, scope: !3075)
!3078 = !DILocation(line: 1019, column: 7, scope: !2749)
!3079 = !DILocation(line: 1021, column: 20, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !3075, file: !63, line: 1020, column: 5)
!3081 = !DILocation(line: 1021, column: 7, scope: !3080)
!3082 = !DILocation(line: 1023, column: 7, scope: !3080)
!3083 = !DILocation(line: 1026, column: 7, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 1026, column: 7)
!3085 = !DILocation(line: 1026, column: 27, scope: !3084)
!3086 = !DILocation(line: 1026, column: 42, scope: !3084)
!3087 = !DILocation(line: 1026, column: 30, scope: !3084)
!3088 = !DILocation(line: 1026, column: 7, scope: !2749)
!3089 = !DILocation(line: 1027, column: 18, scope: !3084)
!3090 = !DILocation(line: 1027, column: 5, scope: !3084)
!3091 = !DILocation(line: 1030, column: 3, scope: !2749)
!3092 = !DILocation(line: 1032, column: 7, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !2749, file: !63, line: 1032, column: 7)
!3094 = !DILocation(line: 1032, column: 7, scope: !2749)
!3095 = !DILocation(line: 1033, column: 41, scope: !3093)
!3096 = !DILocation(line: 1033, column: 50, scope: !3093)
!3097 = !DILocation(line: 1033, column: 69, scope: !3093)
!3098 = !DILocation(line: 1033, column: 19, scope: !3093)
!3099 = !DILocation(line: 1033, column: 17, scope: !3093)
!3100 = !DILocation(line: 1033, column: 5, scope: !3093)
!3101 = !DILocation(line: 1038, column: 7, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3093, file: !63, line: 1035, column: 5)
!3103 = !DILocation(line: 1040, column: 12, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3102, file: !63, line: 1040, column: 11)
!3105 = !DILocation(line: 1040, column: 11, scope: !3102)
!3106 = !DILocation(line: 1042, column: 18, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3108, file: !63, line: 1042, column: 15)
!3108 = distinct !DILexicalBlock(scope: !3104, file: !63, line: 1041, column: 9)
!3109 = !DILocation(line: 1042, column: 15, scope: !3108)
!3110 = !DILocation(line: 1043, column: 50, scope: !3107)
!3111 = !DILocation(line: 1043, column: 59, scope: !3107)
!3112 = !DILocation(line: 1043, column: 20, scope: !3107)
!3113 = !DILocation(line: 1044, column: 42, scope: !3107)
!3114 = !DILocation(line: 1044, column: 51, scope: !3107)
!3115 = !DILocation(line: 1044, column: 20, scope: !3107)
!3116 = !DILocation(line: 1045, column: 25, scope: !3107)
!3117 = !DILocation(line: 1045, column: 13, scope: !3107)
!3118 = !DILocation(line: 1046, column: 9, scope: !3108)
!3119 = !DILocalVariable(name: "i", scope: !3120, file: !63, line: 1049, type: !5)
!3120 = distinct !DILexicalBlock(scope: !3104, file: !63, line: 1048, column: 9)
!3121 = !DILocation(line: 1049, column: 15, scope: !3120)
!3122 = !DILocation(line: 1050, column: 11, scope: !3120)
!3123 = !DILocation(line: 1051, column: 18, scope: !3124)
!3124 = distinct !DILexicalBlock(scope: !3120, file: !63, line: 1051, column: 11)
!3125 = !DILocation(line: 1051, column: 16, scope: !3124)
!3126 = !DILocation(line: 1051, column: 23, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3124, file: !63, line: 1051, column: 11)
!3128 = !DILocation(line: 1051, column: 27, scope: !3127)
!3129 = !DILocation(line: 1051, column: 25, scope: !3127)
!3130 = !DILocation(line: 1051, column: 11, scope: !3124)
!3131 = !DILocation(line: 1052, column: 40, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3127, file: !63, line: 1052, column: 17)
!3133 = !DILocation(line: 1052, column: 45, scope: !3132)
!3134 = !DILocation(line: 1052, column: 49, scope: !3132)
!3135 = !DILocation(line: 1053, column: 40, scope: !3132)
!3136 = !DILocation(line: 1053, column: 42, scope: !3132)
!3137 = !DILocation(line: 1053, column: 47, scope: !3132)
!3138 = !DILocation(line: 1053, column: 50, scope: !3132)
!3139 = !DILocation(line: 0, scope: !3132)
!3140 = !DILocation(line: 1052, column: 19, scope: !3132)
!3141 = !DILocation(line: 1052, column: 17, scope: !3127)
!3142 = !DILocation(line: 1054, column: 27, scope: !3132)
!3143 = !DILocation(line: 1054, column: 15, scope: !3132)
!3144 = !DILocation(line: 1053, column: 67, scope: !3132)
!3145 = !DILocation(line: 1051, column: 37, scope: !3127)
!3146 = !DILocation(line: 1051, column: 11, scope: !3127)
!3147 = distinct !{!3147, !3130, !3148}
!3148 = !DILocation(line: 1054, column: 29, scope: !3124)
!3149 = !DILocation(line: 1058, column: 10, scope: !2749)
!3150 = !DILocation(line: 1058, column: 3, scope: !2749)
!3151 = distinct !DISubprogram(name: "cp_option_init", scope: !63, file: !63, line: 263, type: !213, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3152 = !DILocalVariable(name: "x", arg: 1, scope: !3151, file: !63, line: 263, type: !128)
!3153 = !DILocation(line: 263, column: 36, scope: !3151)
!3154 = !DILocation(line: 265, column: 23, scope: !3151)
!3155 = !DILocation(line: 265, column: 3, scope: !3151)
!3156 = !DILocation(line: 266, column: 3, scope: !3151)
!3157 = !DILocation(line: 266, column: 6, scope: !3151)
!3158 = !DILocation(line: 266, column: 22, scope: !3151)
!3159 = !{!2833, !2763, i64 20}
!3160 = !DILocation(line: 267, column: 3, scope: !3151)
!3161 = !DILocation(line: 267, column: 6, scope: !3151)
!3162 = !DILocation(line: 267, column: 19, scope: !3151)
!3163 = !{!2833, !2657, i64 56}
!3164 = !DILocation(line: 268, column: 3, scope: !3151)
!3165 = !DILocation(line: 268, column: 6, scope: !3151)
!3166 = !DILocation(line: 268, column: 18, scope: !3151)
!3167 = !{!2833, !2657, i64 4}
!3168 = !DILocation(line: 269, column: 3, scope: !3151)
!3169 = !DILocation(line: 269, column: 6, scope: !3151)
!3170 = !DILocation(line: 269, column: 33, scope: !3151)
!3171 = !{!2833, !2763, i64 21}
!3172 = !DILocation(line: 270, column: 3, scope: !3151)
!3173 = !DILocation(line: 270, column: 6, scope: !3151)
!3174 = !DILocation(line: 270, column: 36, scope: !3151)
!3175 = !{!2833, !2763, i64 22}
!3176 = !DILocation(line: 271, column: 3, scope: !3151)
!3177 = !DILocation(line: 271, column: 6, scope: !3151)
!3178 = !DILocation(line: 271, column: 16, scope: !3151)
!3179 = !{!2833, !2763, i64 23}
!3180 = !DILocation(line: 272, column: 3, scope: !3151)
!3181 = !DILocation(line: 272, column: 6, scope: !3151)
!3182 = !DILocation(line: 272, column: 18, scope: !3151)
!3183 = !{!2833, !2657, i64 8}
!3184 = !DILocation(line: 273, column: 3, scope: !3151)
!3185 = !DILocation(line: 273, column: 6, scope: !3151)
!3186 = !DILocation(line: 273, column: 16, scope: !3151)
!3187 = !{!2833, !2763, i64 24}
!3188 = !DILocation(line: 274, column: 3, scope: !3151)
!3189 = !DILocation(line: 274, column: 6, scope: !3151)
!3190 = !DILocation(line: 274, column: 19, scope: !3151)
!3191 = !{!2833, !2763, i64 25}
!3192 = !DILocation(line: 275, column: 3, scope: !3151)
!3193 = !DILocation(line: 275, column: 6, scope: !3151)
!3194 = !DILocation(line: 275, column: 22, scope: !3151)
!3195 = !{!2833, !2763, i64 28}
!3196 = !DILocation(line: 276, column: 3, scope: !3151)
!3197 = !DILocation(line: 276, column: 6, scope: !3151)
!3198 = !DILocation(line: 276, column: 25, scope: !3151)
!3199 = !{!2833, !2763, i64 29}
!3200 = !DILocation(line: 277, column: 3, scope: !3151)
!3201 = !DILocation(line: 277, column: 6, scope: !3151)
!3202 = !DILocation(line: 277, column: 21, scope: !3151)
!3203 = !{!2833, !2763, i64 34}
!3204 = !DILocation(line: 278, column: 3, scope: !3151)
!3205 = !DILocation(line: 278, column: 6, scope: !3151)
!3206 = !DILocation(line: 278, column: 20, scope: !3151)
!3207 = !{!2833, !2763, i64 30}
!3208 = !DILocation(line: 279, column: 3, scope: !3151)
!3209 = !DILocation(line: 279, column: 6, scope: !3151)
!3210 = !DILocation(line: 279, column: 26, scope: !3151)
!3211 = !DILocation(line: 280, column: 3, scope: !3151)
!3212 = !DILocation(line: 280, column: 6, scope: !3151)
!3213 = !DILocation(line: 280, column: 32, scope: !3151)
!3214 = !{!2833, !2763, i64 32}
!3215 = !DILocation(line: 281, column: 3, scope: !3151)
!3216 = !DILocation(line: 281, column: 6, scope: !3151)
!3217 = !DILocation(line: 281, column: 24, scope: !3151)
!3218 = !{!2833, !2763, i64 41}
!3219 = !DILocation(line: 282, column: 3, scope: !3151)
!3220 = !DILocation(line: 282, column: 6, scope: !3151)
!3221 = !DILocation(line: 282, column: 25, scope: !3151)
!3222 = !{!2833, !2763, i64 35}
!3223 = !DILocation(line: 283, column: 3, scope: !3151)
!3224 = !DILocation(line: 283, column: 6, scope: !3151)
!3225 = !DILocation(line: 283, column: 23, scope: !3151)
!3226 = !{!2833, !2763, i64 36}
!3227 = !DILocation(line: 284, column: 3, scope: !3151)
!3228 = !DILocation(line: 284, column: 6, scope: !3151)
!3229 = !DILocation(line: 284, column: 29, scope: !3151)
!3230 = !{!2833, !2763, i64 40}
!3231 = !DILocation(line: 285, column: 3, scope: !3151)
!3232 = !DILocation(line: 285, column: 6, scope: !3151)
!3233 = !DILocation(line: 285, column: 16, scope: !3151)
!3234 = !{!2833, !2763, i64 42}
!3235 = !DILocation(line: 286, column: 3, scope: !3151)
!3236 = !DILocation(line: 286, column: 6, scope: !3151)
!3237 = !DILocation(line: 286, column: 18, scope: !3151)
!3238 = !{!2833, !2657, i64 12}
!3239 = !DILocation(line: 287, column: 3, scope: !3151)
!3240 = !DILocation(line: 287, column: 6, scope: !3151)
!3241 = !DILocation(line: 287, column: 20, scope: !3151)
!3242 = !{!2833, !2763, i64 44}
!3243 = !DILocation(line: 288, column: 3, scope: !3151)
!3244 = !DILocation(line: 288, column: 6, scope: !3151)
!3245 = !DILocation(line: 288, column: 18, scope: !3151)
!3246 = !DILocation(line: 293, column: 3, scope: !3151)
!3247 = !DILocation(line: 293, column: 6, scope: !3151)
!3248 = !DILocation(line: 293, column: 15, scope: !3151)
!3249 = !{!2833, !2763, i64 43}
!3250 = !DILocation(line: 294, column: 3, scope: !3151)
!3251 = !DILocation(line: 294, column: 6, scope: !3151)
!3252 = !DILocation(line: 294, column: 11, scope: !3151)
!3253 = !{!2833, !2656, i64 16}
!3254 = !DILocation(line: 295, column: 3, scope: !3151)
!3255 = !DILocation(line: 295, column: 6, scope: !3151)
!3256 = !DILocation(line: 295, column: 16, scope: !3151)
!3257 = !{!2833, !2763, i64 47}
!3258 = !DILocation(line: 297, column: 3, scope: !3151)
!3259 = !DILocation(line: 297, column: 6, scope: !3151)
!3260 = !DILocation(line: 297, column: 33, scope: !3151)
!3261 = !{!2833, !2763, i64 48}
!3262 = !DILocation(line: 298, column: 3, scope: !3151)
!3263 = !DILocation(line: 298, column: 6, scope: !3151)
!3264 = !DILocation(line: 298, column: 13, scope: !3151)
!3265 = !{!2833, !2763, i64 45}
!3266 = !DILocation(line: 299, column: 3, scope: !3151)
!3267 = !DILocation(line: 299, column: 6, scope: !3151)
!3268 = !DILocation(line: 299, column: 31, scope: !3151)
!3269 = !{!2833, !2763, i64 38}
!3270 = !DILocation(line: 300, column: 3, scope: !3151)
!3271 = !DILocation(line: 300, column: 6, scope: !3151)
!3272 = !DILocation(line: 300, column: 32, scope: !3151)
!3273 = !DILocation(line: 301, column: 3, scope: !3151)
!3274 = !DILocation(line: 301, column: 6, scope: !3151)
!3275 = !DILocation(line: 301, column: 27, scope: !3151)
!3276 = !DILocation(line: 302, column: 3, scope: !3151)
!3277 = !DILocation(line: 302, column: 6, scope: !3151)
!3278 = !DILocation(line: 302, column: 21, scope: !3151)
!3279 = !{!2833, !2763, i64 39}
!3280 = !DILocation(line: 303, column: 3, scope: !3151)
!3281 = !DILocation(line: 303, column: 6, scope: !3151)
!3282 = !DILocation(line: 303, column: 14, scope: !3151)
!3283 = !DILocation(line: 304, column: 3, scope: !3151)
!3284 = !DILocation(line: 304, column: 6, scope: !3151)
!3285 = !DILocation(line: 304, column: 16, scope: !3151)
!3286 = !{!2833, !2669, i64 64}
!3287 = !DILocation(line: 305, column: 3, scope: !3151)
!3288 = !DILocation(line: 305, column: 6, scope: !3151)
!3289 = !DILocation(line: 305, column: 15, scope: !3151)
!3290 = !{!2833, !2669, i64 72}
!3291 = !DILocation(line: 306, column: 1, scope: !3151)
!3292 = distinct !DISubprogram(name: "se_const", scope: !204, file: !204, line: 755, type: !215, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3293 = !DILocalVariable(name: "sctx", arg: 1, scope: !3292, file: !204, line: 755, type: !177)
!3294 = !DILocation(line: 755, column: 45, scope: !3292)
!3295 = !DILocation(line: 755, column: 69, scope: !3292)
!3296 = !DILocation(line: 755, column: 53, scope: !3292)
!3297 = distinct !DISubprogram(name: "target_directory_operand", scope: !63, file: !63, line: 398, type: !217, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3298 = !DILocalVariable(name: "file", arg: 1, scope: !3297, file: !63, line: 398, type: !177)
!3299 = !DILocation(line: 398, column: 39, scope: !3297)
!3300 = !DILocalVariable(name: "b", scope: !3297, file: !63, line: 400, type: !177)
!3301 = !DILocation(line: 400, column: 15, scope: !3297)
!3302 = !DILocation(line: 400, column: 35, scope: !3297)
!3303 = !DILocation(line: 400, column: 19, scope: !3297)
!3304 = !DILocalVariable(name: "blen", scope: !3297, file: !63, line: 401, type: !52)
!3305 = !DILocation(line: 401, column: 10, scope: !3297)
!3306 = !DILocation(line: 401, column: 25, scope: !3297)
!3307 = !DILocation(line: 401, column: 17, scope: !3297)
!3308 = !{!2936, !2936, i64 0}
!3309 = !DILocalVariable(name: "looks_like_a_dir", scope: !3297, file: !63, line: 402, type: !139)
!3310 = !DILocation(line: 402, column: 8, scope: !3297)
!3311 = !DILocation(line: 402, column: 28, scope: !3297)
!3312 = !DILocation(line: 402, column: 33, scope: !3297)
!3313 = !DILocation(line: 402, column: 38, scope: !3297)
!3314 = !DILocation(line: 402, column: 41, scope: !3297)
!3315 = !{!2657, !2657, i64 0}
!3316 = !DILocalVariable(name: "st", scope: !3297, file: !63, line: 403, type: !276)
!3317 = !DILocation(line: 403, column: 15, scope: !3297)
!3318 = !DILocalVariable(name: "err", scope: !3297, file: !63, line: 404, type: !5)
!3319 = !DILocation(line: 404, column: 7, scope: !3297)
!3320 = !DILocation(line: 404, column: 20, scope: !3297)
!3321 = !DILocation(line: 404, column: 14, scope: !3297)
!3322 = !DILocation(line: 404, column: 31, scope: !3297)
!3323 = !DILocation(line: 404, column: 42, scope: !3297)
!3324 = !DILocalVariable(name: "is_a_dir", scope: !3297, file: !63, line: 405, type: !139)
!3325 = !DILocation(line: 405, column: 8, scope: !3297)
!3326 = !DILocation(line: 405, column: 20, scope: !3297)
!3327 = !DILocation(line: 405, column: 24, scope: !3297)
!3328 = !DILocation(line: 405, column: 27, scope: !3297)
!3329 = !DILocation(line: 0, scope: !3297)
!3330 = !DILocation(line: 406, column: 7, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3297, file: !63, line: 406, column: 7)
!3332 = !DILocation(line: 406, column: 11, scope: !3331)
!3333 = !DILocation(line: 406, column: 14, scope: !3331)
!3334 = !DILocation(line: 406, column: 18, scope: !3331)
!3335 = !DILocation(line: 406, column: 7, scope: !3297)
!3336 = !DILocation(line: 407, column: 5, scope: !3331)
!3337 = !DILocation(line: 408, column: 7, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3297, file: !63, line: 408, column: 7)
!3339 = !DILocation(line: 408, column: 18, scope: !3338)
!3340 = !DILocation(line: 408, column: 16, scope: !3338)
!3341 = !DILocation(line: 408, column: 7, scope: !3297)
!3342 = !DILocation(line: 409, column: 5, scope: !3338)
!3343 = !DILocation(line: 411, column: 10, scope: !3297)
!3344 = !DILocation(line: 411, column: 3, scope: !3297)
!3345 = distinct !DISubprogram(name: "extra_mode", scope: !63, file: !63, line: 166, type: !219, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3346 = !DILocalVariable(name: "input", arg: 1, scope: !3345, file: !63, line: 166, type: !136)
!3347 = !DILocation(line: 166, column: 20, scope: !3345)
!3348 = !DILocalVariable(name: "mask", scope: !3345, file: !63, line: 168, type: !136)
!3349 = !DILocation(line: 168, column: 10, scope: !3345)
!3350 = !DILocation(line: 169, column: 14, scope: !3345)
!3351 = !DILocation(line: 169, column: 24, scope: !3345)
!3352 = !DILocation(line: 169, column: 22, scope: !3345)
!3353 = !DILocation(line: 169, column: 20, scope: !3345)
!3354 = !DILocation(line: 169, column: 11, scope: !3345)
!3355 = !DILocation(line: 169, column: 10, scope: !3345)
!3356 = !DILocation(line: 169, column: 3, scope: !3345)
!3357 = distinct !DISubprogram(name: "get_ids", scope: !63, file: !63, line: 576, type: !197, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3358 = !DILocalVariable(name: "pw", scope: !3357, file: !63, line: 578, type: !221)
!3359 = !DILocation(line: 578, column: 18, scope: !3357)
!3360 = !DILocalVariable(name: "gr", scope: !3357, file: !63, line: 579, type: !232)
!3361 = !DILocation(line: 579, column: 17, scope: !3357)
!3362 = !DILocation(line: 581, column: 7, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3357, file: !63, line: 581, column: 7)
!3364 = !DILocation(line: 581, column: 7, scope: !3357)
!3365 = !DILocation(line: 583, column: 22, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3363, file: !63, line: 582, column: 5)
!3367 = !DILocation(line: 583, column: 12, scope: !3366)
!3368 = !DILocation(line: 583, column: 10, scope: !3366)
!3369 = !DILocation(line: 584, column: 11, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3366, file: !63, line: 584, column: 11)
!3371 = !DILocation(line: 584, column: 14, scope: !3370)
!3372 = !DILocation(line: 584, column: 11, scope: !3366)
!3373 = !DILocalVariable(name: "tmp", scope: !3374, file: !63, line: 586, type: !54)
!3374 = distinct !DILexicalBlock(scope: !3370, file: !63, line: 585, column: 9)
!3375 = !DILocation(line: 586, column: 29, scope: !3374)
!3376 = !DILocation(line: 587, column: 25, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3374, file: !63, line: 587, column: 15)
!3378 = !DILocation(line: 587, column: 15, scope: !3377)
!3379 = !DILocation(line: 587, column: 58, scope: !3377)
!3380 = !DILocation(line: 588, column: 15, scope: !3377)
!3381 = !DILocation(line: 588, column: 30, scope: !3377)
!3382 = !DILocation(line: 588, column: 28, scope: !3377)
!3383 = !DILocation(line: 587, column: 15, scope: !3374)
!3384 = !DILocation(line: 589, column: 13, scope: !3377)
!3385 = !DILocation(line: 591, column: 22, scope: !3374)
!3386 = !DILocation(line: 591, column: 20, scope: !3374)
!3387 = !DILocation(line: 592, column: 9, scope: !3374)
!3388 = !DILocation(line: 594, column: 20, scope: !3370)
!3389 = !DILocation(line: 594, column: 24, scope: !3370)
!3390 = !{!3391, !2656, i64 16}
!3391 = !{!"passwd", !2669, i64 0, !2669, i64 8, !2656, i64 16, !2656, i64 20, !2669, i64 24, !2669, i64 32, !2669, i64 40}
!3392 = !DILocation(line: 594, column: 18, scope: !3370)
!3393 = !DILocation(line: 595, column: 7, scope: !3366)
!3394 = !DILocation(line: 596, column: 5, scope: !3366)
!3395 = !DILocation(line: 598, column: 14, scope: !3363)
!3396 = !DILocation(line: 600, column: 7, scope: !3397)
!3397 = distinct !DILexicalBlock(scope: !3357, file: !63, line: 600, column: 7)
!3398 = !DILocation(line: 600, column: 7, scope: !3357)
!3399 = !DILocation(line: 602, column: 22, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3397, file: !63, line: 601, column: 5)
!3401 = !DILocation(line: 602, column: 12, scope: !3400)
!3402 = !DILocation(line: 602, column: 10, scope: !3400)
!3403 = !DILocation(line: 603, column: 11, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3400, file: !63, line: 603, column: 11)
!3405 = !DILocation(line: 603, column: 14, scope: !3404)
!3406 = !DILocation(line: 603, column: 11, scope: !3400)
!3407 = !DILocalVariable(name: "tmp", scope: !3408, file: !63, line: 605, type: !54)
!3408 = distinct !DILexicalBlock(scope: !3404, file: !63, line: 604, column: 9)
!3409 = !DILocation(line: 605, column: 29, scope: !3408)
!3410 = !DILocation(line: 606, column: 25, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3408, file: !63, line: 606, column: 15)
!3412 = !DILocation(line: 606, column: 15, scope: !3411)
!3413 = !DILocation(line: 606, column: 58, scope: !3411)
!3414 = !DILocation(line: 607, column: 15, scope: !3411)
!3415 = !DILocation(line: 607, column: 30, scope: !3411)
!3416 = !DILocation(line: 607, column: 28, scope: !3411)
!3417 = !DILocation(line: 606, column: 15, scope: !3408)
!3418 = !DILocation(line: 608, column: 13, scope: !3411)
!3419 = !DILocation(line: 610, column: 22, scope: !3408)
!3420 = !DILocation(line: 610, column: 20, scope: !3408)
!3421 = !DILocation(line: 611, column: 9, scope: !3408)
!3422 = !DILocation(line: 613, column: 20, scope: !3404)
!3423 = !DILocation(line: 613, column: 24, scope: !3404)
!3424 = !{!3425, !2656, i64 16}
!3425 = !{!"group", !2669, i64 0, !2669, i64 8, !2656, i64 16, !2669, i64 24}
!3426 = !DILocation(line: 613, column: 18, scope: !3404)
!3427 = !DILocation(line: 614, column: 7, scope: !3400)
!3428 = !DILocation(line: 615, column: 5, scope: !3400)
!3429 = !DILocation(line: 617, column: 14, scope: !3397)
!3430 = !DILocation(line: 618, column: 1, scope: !3357)
!3431 = distinct !DISubprogram(name: "process_dir", scope: !63, file: !63, line: 443, type: !240, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3432 = !DILocalVariable(name: "dir", arg: 1, scope: !3431, file: !63, line: 443, type: !7)
!3433 = !DILocation(line: 443, column: 20, scope: !3431)
!3434 = !DILocalVariable(name: "wd", arg: 2, scope: !3431, file: !63, line: 443, type: !242)
!3435 = !DILocation(line: 443, column: 40, scope: !3431)
!3436 = !DILocalVariable(name: "options", arg: 3, scope: !3431, file: !63, line: 443, type: !47)
!3437 = !DILocation(line: 443, column: 50, scope: !3431)
!3438 = !DILocalVariable(name: "x", scope: !3431, file: !63, line: 445, type: !243)
!3439 = !DILocation(line: 445, column: 28, scope: !3431)
!3440 = !DILocation(line: 445, column: 32, scope: !3431)
!3441 = !DILocalVariable(name: "ret", scope: !3431, file: !63, line: 447, type: !5)
!3442 = !DILocation(line: 447, column: 7, scope: !3431)
!3443 = !DILocation(line: 447, column: 32, scope: !3431)
!3444 = !DILocation(line: 447, column: 37, scope: !3431)
!3445 = !DILocation(line: 447, column: 56, scope: !3431)
!3446 = !DILocation(line: 448, column: 32, scope: !3431)
!3447 = !DILocation(line: 449, column: 32, scope: !3431)
!3448 = !DILocation(line: 449, column: 47, scope: !3431)
!3449 = !DILocation(line: 449, column: 57, scope: !3431)
!3450 = !DILocation(line: 447, column: 14, scope: !3431)
!3451 = !DILocation(line: 458, column: 7, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3431, file: !63, line: 458, column: 7)
!3453 = !DILocation(line: 458, column: 11, scope: !3452)
!3454 = !DILocation(line: 458, column: 27, scope: !3452)
!3455 = !DILocation(line: 458, column: 30, scope: !3452)
!3456 = !DILocation(line: 458, column: 33, scope: !3452)
!3457 = !DILocation(line: 458, column: 7, scope: !3431)
!3458 = !DILocation(line: 460, column: 41, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !63, line: 460, column: 11)
!3460 = distinct !DILexicalBlock(scope: !3452, file: !63, line: 459, column: 5)
!3461 = !DILocation(line: 460, column: 25, scope: !3459)
!3462 = !DILocation(line: 460, column: 13, scope: !3459)
!3463 = !DILocation(line: 461, column: 11, scope: !3459)
!3464 = !DILocation(line: 461, column: 35, scope: !3459)
!3465 = !DILocation(line: 461, column: 16, scope: !3459)
!3466 = !DILocation(line: 460, column: 11, scope: !3460)
!3467 = !DILocation(line: 462, column: 19, scope: !3459)
!3468 = !DILocation(line: 462, column: 26, scope: !3459)
!3469 = !DILocation(line: 463, column: 16, scope: !3459)
!3470 = !DILocation(line: 462, column: 9, scope: !3459)
!3471 = !DILocation(line: 464, column: 5, scope: !3460)
!3472 = !DILocation(line: 466, column: 10, scope: !3431)
!3473 = !DILocation(line: 466, column: 3, scope: !3431)
!3474 = distinct !DISubprogram(name: "install_file_in_file_parents", scope: !63, file: !63, line: 765, type: !255, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3475 = !DILocalVariable(name: "from", arg: 1, scope: !3474, file: !63, line: 765, type: !177)
!3476 = !DILocation(line: 765, column: 43, scope: !3474)
!3477 = !DILocalVariable(name: "to", arg: 2, scope: !3474, file: !63, line: 765, type: !7)
!3478 = !DILocation(line: 765, column: 55, scope: !3474)
!3479 = !DILocalVariable(name: "x", arg: 3, scope: !3474, file: !63, line: 766, type: !243)
!3480 = !DILocation(line: 766, column: 56, scope: !3474)
!3481 = !DILocation(line: 768, column: 32, scope: !3474)
!3482 = !DILocation(line: 768, column: 38, scope: !3474)
!3483 = !DILocation(line: 768, column: 63, scope: !3474)
!3484 = !DILocation(line: 768, column: 11, scope: !3474)
!3485 = !DILocation(line: 769, column: 11, scope: !3474)
!3486 = !DILocation(line: 769, column: 36, scope: !3474)
!3487 = !DILocation(line: 769, column: 42, scope: !3474)
!3488 = !DILocation(line: 769, column: 46, scope: !3474)
!3489 = !DILocation(line: 769, column: 14, scope: !3474)
!3490 = !DILocation(line: 0, scope: !3474)
!3491 = !DILocation(line: 768, column: 3, scope: !3474)
!3492 = distinct !DISubprogram(name: "install_file_in_file", scope: !63, file: !63, line: 696, type: !259, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3493 = !DILocalVariable(name: "from", arg: 1, scope: !3492, file: !63, line: 696, type: !177)
!3494 = !DILocation(line: 696, column: 35, scope: !3492)
!3495 = !DILocalVariable(name: "to", arg: 2, scope: !3492, file: !63, line: 696, type: !177)
!3496 = !DILocation(line: 696, column: 53, scope: !3492)
!3497 = !DILocalVariable(name: "x", arg: 3, scope: !3492, file: !63, line: 697, type: !243)
!3498 = !DILocation(line: 697, column: 48, scope: !3492)
!3499 = !DILocalVariable(name: "from_sb", scope: !3492, file: !63, line: 699, type: !276)
!3500 = !DILocation(line: 699, column: 15, scope: !3492)
!3501 = !DILocation(line: 700, column: 7, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3492, file: !63, line: 700, column: 7)
!3503 = !DILocation(line: 700, column: 10, scope: !3502)
!3504 = !DILocation(line: 700, column: 30, scope: !3502)
!3505 = !DILocation(line: 700, column: 39, scope: !3502)
!3506 = !DILocation(line: 700, column: 33, scope: !3502)
!3507 = !DILocation(line: 700, column: 55, scope: !3502)
!3508 = !DILocation(line: 700, column: 7, scope: !3492)
!3509 = !DILocation(line: 702, column: 17, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3502, file: !63, line: 701, column: 5)
!3511 = !DILocation(line: 702, column: 24, scope: !3510)
!3512 = !DILocation(line: 702, column: 45, scope: !3510)
!3513 = !DILocation(line: 702, column: 7, scope: !3510)
!3514 = !DILocation(line: 703, column: 7, scope: !3510)
!3515 = !DILocation(line: 705, column: 20, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3492, file: !63, line: 705, column: 7)
!3517 = !DILocation(line: 705, column: 26, scope: !3516)
!3518 = !DILocation(line: 705, column: 30, scope: !3516)
!3519 = !DILocation(line: 705, column: 9, scope: !3516)
!3520 = !DILocation(line: 705, column: 7, scope: !3492)
!3521 = !DILocation(line: 706, column: 5, scope: !3516)
!3522 = !DILocation(line: 707, column: 7, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3492, file: !63, line: 707, column: 7)
!3524 = !DILocation(line: 707, column: 7, scope: !3492)
!3525 = !DILocation(line: 708, column: 18, scope: !3526)
!3526 = distinct !DILexicalBlock(scope: !3523, file: !63, line: 708, column: 9)
!3527 = !DILocation(line: 708, column: 11, scope: !3526)
!3528 = !DILocation(line: 708, column: 9, scope: !3523)
!3529 = !DILocation(line: 710, column: 21, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3531, file: !63, line: 710, column: 13)
!3531 = distinct !DILexicalBlock(scope: !3526, file: !63, line: 709, column: 7)
!3532 = !DILocation(line: 710, column: 13, scope: !3530)
!3533 = !DILocation(line: 710, column: 25, scope: !3530)
!3534 = !DILocation(line: 710, column: 13, scope: !3531)
!3535 = !DILocation(line: 711, column: 11, scope: !3530)
!3536 = !DILocation(line: 712, column: 9, scope: !3531)
!3537 = !DILocation(line: 708, column: 20, scope: !3526)
!3538 = !DILocation(line: 714, column: 7, scope: !3539)
!3539 = distinct !DILexicalBlock(scope: !3492, file: !63, line: 714, column: 7)
!3540 = !DILocation(line: 714, column: 10, scope: !3539)
!3541 = !DILocation(line: 714, column: 30, scope: !3539)
!3542 = !DILocation(line: 714, column: 34, scope: !3539)
!3543 = !DILocation(line: 714, column: 46, scope: !3539)
!3544 = !DILocation(line: 714, column: 51, scope: !3539)
!3545 = !DILocation(line: 715, column: 7, scope: !3539)
!3546 = !DILocation(line: 715, column: 41, scope: !3539)
!3547 = !DILocation(line: 715, column: 12, scope: !3539)
!3548 = !DILocation(line: 714, column: 7, scope: !3492)
!3549 = !DILocation(line: 716, column: 5, scope: !3539)
!3550 = !DILocation(line: 717, column: 29, scope: !3492)
!3551 = !DILocation(line: 717, column: 10, scope: !3492)
!3552 = !DILocation(line: 717, column: 3, scope: !3492)
!3553 = !DILocation(line: 718, column: 1, scope: !3492)
!3554 = distinct !DISubprogram(name: "install_file_in_dir", scope: !63, file: !63, line: 777, type: !312, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3555 = !DILocalVariable(name: "from", arg: 1, scope: !3554, file: !63, line: 777, type: !177)
!3556 = !DILocation(line: 777, column: 34, scope: !3554)
!3557 = !DILocalVariable(name: "to_dir", arg: 2, scope: !3554, file: !63, line: 777, type: !177)
!3558 = !DILocation(line: 777, column: 52, scope: !3554)
!3559 = !DILocalVariable(name: "x", arg: 3, scope: !3554, file: !63, line: 778, type: !243)
!3560 = !DILocation(line: 778, column: 47, scope: !3554)
!3561 = !DILocalVariable(name: "mkdir_and_install", arg: 4, scope: !3554, file: !63, line: 778, type: !139)
!3562 = !DILocation(line: 778, column: 55, scope: !3554)
!3563 = !DILocalVariable(name: "from_base", scope: !3554, file: !63, line: 780, type: !177)
!3564 = !DILocation(line: 780, column: 15, scope: !3554)
!3565 = !DILocation(line: 780, column: 43, scope: !3554)
!3566 = !DILocation(line: 780, column: 27, scope: !3554)
!3567 = !DILocalVariable(name: "to", scope: !3554, file: !63, line: 781, type: !7)
!3568 = !DILocation(line: 781, column: 9, scope: !3554)
!3569 = !DILocation(line: 781, column: 32, scope: !3554)
!3570 = !DILocation(line: 781, column: 40, scope: !3554)
!3571 = !DILocation(line: 781, column: 14, scope: !3554)
!3572 = !DILocalVariable(name: "ret", scope: !3554, file: !63, line: 782, type: !139)
!3573 = !DILocation(line: 782, column: 8, scope: !3554)
!3574 = !DILocation(line: 784, column: 7, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3554, file: !63, line: 784, column: 7)
!3576 = !DILocation(line: 784, column: 7, scope: !3554)
!3577 = !DILocation(line: 785, column: 32, scope: !3575)
!3578 = !DILocation(line: 785, column: 38, scope: !3575)
!3579 = !DILocation(line: 785, column: 63, scope: !3575)
!3580 = !DILocation(line: 785, column: 11, scope: !3575)
!3581 = !DILocation(line: 785, column: 9, scope: !3575)
!3582 = !DILocation(line: 785, column: 5, scope: !3575)
!3583 = !DILocation(line: 787, column: 9, scope: !3554)
!3584 = !DILocation(line: 787, column: 13, scope: !3554)
!3585 = !DILocation(line: 787, column: 38, scope: !3554)
!3586 = !DILocation(line: 787, column: 44, scope: !3554)
!3587 = !DILocation(line: 787, column: 48, scope: !3554)
!3588 = !DILocation(line: 787, column: 16, scope: !3554)
!3589 = !DILocation(line: 0, scope: !3554)
!3590 = !DILocation(line: 787, column: 7, scope: !3554)
!3591 = !DILocation(line: 788, column: 9, scope: !3554)
!3592 = !DILocation(line: 788, column: 3, scope: !3554)
!3593 = !DILocation(line: 789, column: 10, scope: !3554)
!3594 = !DILocation(line: 789, column: 3, scope: !3554)
!3595 = distinct !DISubprogram(name: "mkancesdirs_safe_wd", scope: !63, file: !63, line: 725, type: !257, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3596 = !DILocalVariable(name: "from", arg: 1, scope: !3595, file: !63, line: 725, type: !177)
!3597 = !DILocation(line: 725, column: 34, scope: !3595)
!3598 = !DILocalVariable(name: "to", arg: 2, scope: !3595, file: !63, line: 725, type: !7)
!3599 = !DILocation(line: 725, column: 46, scope: !3595)
!3600 = !DILocalVariable(name: "x", arg: 3, scope: !3595, file: !63, line: 725, type: !128)
!3601 = !DILocation(line: 725, column: 69, scope: !3595)
!3602 = !DILocalVariable(name: "save_always", arg: 4, scope: !3595, file: !63, line: 726, type: !139)
!3603 = !DILocation(line: 726, column: 27, scope: !3595)
!3604 = !DILocalVariable(name: "save_working_directory", scope: !3595, file: !63, line: 728, type: !139)
!3605 = !DILocation(line: 728, column: 8, scope: !3595)
!3606 = !DILocation(line: 729, column: 5, scope: !3595)
!3607 = !DILocation(line: 730, column: 5, scope: !3595)
!3608 = !DILocation(line: 730, column: 11, scope: !3595)
!3609 = !DILocation(line: 730, column: 40, scope: !3595)
!3610 = !DILocation(line: 730, column: 43, scope: !3595)
!3611 = !DILocation(line: 0, scope: !3595)
!3612 = !DILocation(line: 730, column: 8, scope: !3595)
!3613 = !DILocalVariable(name: "status", scope: !3595, file: !63, line: 731, type: !5)
!3614 = !DILocation(line: 731, column: 7, scope: !3595)
!3615 = !DILocalVariable(name: "wd", scope: !3595, file: !63, line: 733, type: !99)
!3616 = !DILocation(line: 733, column: 17, scope: !3595)
!3617 = !DILocation(line: 734, column: 3, scope: !3595)
!3618 = !DILocation(line: 735, column: 9, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3595, file: !63, line: 735, column: 7)
!3620 = !DILocation(line: 735, column: 7, scope: !3595)
!3621 = !DILocation(line: 736, column: 5, scope: !3619)
!3622 = !DILocation(line: 738, column: 20, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3595, file: !63, line: 738, column: 7)
!3624 = !DILocation(line: 738, column: 44, scope: !3623)
!3625 = !DILocation(line: 738, column: 7, scope: !3623)
!3626 = !DILocation(line: 738, column: 47, scope: !3623)
!3627 = !DILocation(line: 738, column: 7, scope: !3595)
!3628 = !DILocation(line: 740, column: 17, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3623, file: !63, line: 739, column: 5)
!3630 = !DILocation(line: 740, column: 24, scope: !3629)
!3631 = !DILocation(line: 740, column: 57, scope: !3629)
!3632 = !DILocation(line: 740, column: 7, scope: !3629)
!3633 = !DILocation(line: 741, column: 14, scope: !3629)
!3634 = !DILocation(line: 742, column: 5, scope: !3629)
!3635 = !DILocation(line: 744, column: 7, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3595, file: !63, line: 744, column: 7)
!3637 = !DILocation(line: 744, column: 7, scope: !3595)
!3638 = !DILocalVariable(name: "restore_result", scope: !3639, file: !63, line: 746, type: !5)
!3639 = distinct !DILexicalBlock(scope: !3636, file: !63, line: 745, column: 5)
!3640 = !DILocation(line: 746, column: 11, scope: !3639)
!3641 = !DILocation(line: 746, column: 49, scope: !3639)
!3642 = !DILocation(line: 746, column: 28, scope: !3639)
!3643 = !DILocalVariable(name: "restore_errno", scope: !3639, file: !63, line: 747, type: !5)
!3644 = !DILocation(line: 747, column: 11, scope: !3639)
!3645 = !DILocation(line: 747, column: 27, scope: !3639)
!3646 = !DILocation(line: 748, column: 7, scope: !3639)
!3647 = !DILocation(line: 749, column: 26, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3639, file: !63, line: 749, column: 11)
!3649 = !DILocation(line: 749, column: 24, scope: !3648)
!3650 = !DILocation(line: 749, column: 11, scope: !3639)
!3651 = !DILocation(line: 750, column: 9, scope: !3648)
!3652 = !DILocation(line: 751, column: 11, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3639, file: !63, line: 751, column: 11)
!3654 = !DILocation(line: 751, column: 26, scope: !3653)
!3655 = !DILocation(line: 751, column: 30, scope: !3653)
!3656 = !DILocation(line: 751, column: 33, scope: !3653)
!3657 = !DILocation(line: 751, column: 40, scope: !3653)
!3658 = !DILocation(line: 751, column: 11, scope: !3639)
!3659 = !DILocation(line: 753, column: 21, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3653, file: !63, line: 752, column: 9)
!3661 = !DILocation(line: 753, column: 36, scope: !3660)
!3662 = !DILocation(line: 754, column: 18, scope: !3660)
!3663 = !DILocation(line: 753, column: 11, scope: !3660)
!3664 = !DILocation(line: 755, column: 11, scope: !3660)
!3665 = !DILocation(line: 757, column: 5, scope: !3639)
!3666 = !DILocation(line: 758, column: 10, scope: !3595)
!3667 = !DILocation(line: 758, column: 17, scope: !3595)
!3668 = !DILocation(line: 758, column: 3, scope: !3595)
!3669 = !DILocation(line: 759, column: 1, scope: !3595)
!3670 = distinct !DISubprogram(name: "make_ancestor", scope: !63, file: !63, line: 427, type: !245, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3671 = !DILocalVariable(name: "dir", arg: 1, scope: !3670, file: !63, line: 427, type: !177)
!3672 = !DILocation(line: 427, column: 28, scope: !3670)
!3673 = !DILocalVariable(name: "component", arg: 2, scope: !3670, file: !63, line: 427, type: !177)
!3674 = !DILocation(line: 427, column: 45, scope: !3670)
!3675 = !DILocalVariable(name: "options", arg: 3, scope: !3670, file: !63, line: 427, type: !47)
!3676 = !DILocation(line: 427, column: 62, scope: !3670)
!3677 = !DILocalVariable(name: "x", scope: !3670, file: !63, line: 429, type: !243)
!3678 = !DILocation(line: 429, column: 28, scope: !3670)
!3679 = !DILocation(line: 429, column: 32, scope: !3670)
!3680 = !DILocation(line: 430, column: 7, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3670, file: !63, line: 430, column: 7)
!3682 = !DILocation(line: 430, column: 10, scope: !3681)
!3683 = !DILocation(line: 430, column: 31, scope: !3681)
!3684 = !DILocation(line: 430, column: 46, scope: !3681)
!3685 = !DILocation(line: 430, column: 34, scope: !3681)
!3686 = !DILocation(line: 430, column: 66, scope: !3681)
!3687 = !DILocation(line: 431, column: 7, scope: !3681)
!3688 = !DILocation(line: 431, column: 31, scope: !3681)
!3689 = !DILocation(line: 431, column: 12, scope: !3681)
!3690 = !DILocation(line: 430, column: 7, scope: !3670)
!3691 = !DILocation(line: 432, column: 15, scope: !3681)
!3692 = !DILocation(line: 432, column: 22, scope: !3681)
!3693 = !DILocation(line: 433, column: 12, scope: !3681)
!3694 = !DILocation(line: 432, column: 5, scope: !3681)
!3695 = !DILocalVariable(name: "r", scope: !3670, file: !63, line: 435, type: !5)
!3696 = !DILocation(line: 435, column: 7, scope: !3670)
!3697 = !DILocation(line: 435, column: 18, scope: !3670)
!3698 = !DILocation(line: 435, column: 11, scope: !3670)
!3699 = !DILocation(line: 436, column: 7, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3670, file: !63, line: 436, column: 7)
!3701 = !DILocation(line: 436, column: 9, scope: !3700)
!3702 = !DILocation(line: 436, column: 7, scope: !3670)
!3703 = !DILocation(line: 437, column: 21, scope: !3700)
!3704 = !DILocation(line: 437, column: 26, scope: !3700)
!3705 = !DILocation(line: 437, column: 5, scope: !3700)
!3706 = !DILocation(line: 438, column: 10, scope: !3670)
!3707 = !DILocation(line: 438, column: 3, scope: !3670)
!3708 = distinct !DISubprogram(name: "defaultcon", scope: !3709, file: !3709, line: 44, type: !247, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3709 = !DIFile(filename: "src/selinux.h", directory: "/home/mohamad/clone/coreutils")
!3710 = !DILocalVariable(name: "path", arg: 1, scope: !3708, file: !3709, line: 44, type: !177)
!3711 = !DILocation(line: 44, column: 25, scope: !3708)
!3712 = !DILocalVariable(name: "mode", arg: 2, scope: !3708, file: !3709, line: 44, type: !136)
!3713 = !DILocation(line: 44, column: 38, scope: !3708)
!3714 = !DILocation(line: 45, column: 3, scope: !3708)
!3715 = !DILocation(line: 45, column: 9, scope: !3708)
!3716 = !DILocation(line: 45, column: 20, scope: !3708)
!3717 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3709, file: !3709, line: 25, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3718 = !DILocalVariable(name: "err", arg: 1, scope: !3717, file: !3709, line: 25, type: !5)
!3719 = !DILocation(line: 25, column: 24, scope: !3717)
!3720 = !DILocation(line: 27, column: 10, scope: !3717)
!3721 = !DILocation(line: 27, column: 14, scope: !3717)
!3722 = !DILocation(line: 27, column: 25, scope: !3717)
!3723 = !DILocation(line: 27, column: 28, scope: !3717)
!3724 = !DILocation(line: 27, column: 32, scope: !3717)
!3725 = !DILocation(line: 27, column: 3, scope: !3717)
!3726 = distinct !DISubprogram(name: "announce_mkdir", scope: !63, file: !63, line: 416, type: !249, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3727 = !DILocalVariable(name: "dir", arg: 1, scope: !3726, file: !63, line: 416, type: !177)
!3728 = !DILocation(line: 416, column: 29, scope: !3726)
!3729 = !DILocalVariable(name: "options", arg: 2, scope: !3726, file: !63, line: 416, type: !47)
!3730 = !DILocation(line: 416, column: 40, scope: !3726)
!3731 = !DILocalVariable(name: "x", scope: !3726, file: !63, line: 418, type: !243)
!3732 = !DILocation(line: 418, column: 28, scope: !3726)
!3733 = !DILocation(line: 418, column: 32, scope: !3726)
!3734 = !DILocation(line: 419, column: 7, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3726, file: !63, line: 419, column: 7)
!3736 = !DILocation(line: 419, column: 10, scope: !3735)
!3737 = !DILocation(line: 419, column: 7, scope: !3726)
!3738 = !DILocation(line: 420, column: 19, scope: !3735)
!3739 = !DILocation(line: 420, column: 27, scope: !3735)
!3740 = !DILocation(line: 420, column: 55, scope: !3735)
!3741 = !DILocation(line: 420, column: 5, scope: !3735)
!3742 = !DILocation(line: 421, column: 1, scope: !3726)
!3743 = distinct !DISubprogram(name: "copy_file", scope: !63, file: !63, line: 473, type: !259, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3744 = !DILocalVariable(name: "from", arg: 1, scope: !3743, file: !63, line: 473, type: !177)
!3745 = !DILocation(line: 473, column: 24, scope: !3743)
!3746 = !DILocalVariable(name: "to", arg: 2, scope: !3743, file: !63, line: 473, type: !177)
!3747 = !DILocation(line: 473, column: 42, scope: !3743)
!3748 = !DILocalVariable(name: "x", arg: 3, scope: !3743, file: !63, line: 473, type: !243)
!3749 = !DILocation(line: 473, column: 71, scope: !3743)
!3750 = !DILocalVariable(name: "copy_into_self", scope: !3743, file: !63, line: 475, type: !139)
!3751 = !DILocation(line: 475, column: 8, scope: !3743)
!3752 = !DILocation(line: 477, column: 7, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3743, file: !63, line: 477, column: 7)
!3754 = !DILocation(line: 477, column: 27, scope: !3753)
!3755 = !DILocation(line: 477, column: 42, scope: !3753)
!3756 = !DILocation(line: 477, column: 48, scope: !3753)
!3757 = !DILocation(line: 477, column: 52, scope: !3753)
!3758 = !DILocation(line: 477, column: 31, scope: !3753)
!3759 = !DILocation(line: 477, column: 7, scope: !3743)
!3760 = !DILocation(line: 478, column: 5, scope: !3753)
!3761 = !DILocation(line: 486, column: 16, scope: !3743)
!3762 = !DILocation(line: 486, column: 22, scope: !3743)
!3763 = !DILocation(line: 486, column: 33, scope: !3743)
!3764 = !DILocation(line: 486, column: 10, scope: !3743)
!3765 = !DILocation(line: 486, column: 3, scope: !3743)
!3766 = !DILocation(line: 487, column: 1, scope: !3743)
!3767 = !DILocalVariable(name: "name", arg: 1, scope: !264, file: !63, line: 547, type: !177)
!3768 = !DILocation(line: 547, column: 20, scope: !264)
!3769 = !DILocalVariable(name: "status", scope: !264, file: !63, line: 549, type: !5)
!3770 = !DILocation(line: 549, column: 7, scope: !264)
!3771 = !DILocalVariable(name: "ok", scope: !264, file: !63, line: 550, type: !139)
!3772 = !DILocation(line: 550, column: 8, scope: !264)
!3773 = !DILocalVariable(name: "pid", scope: !264, file: !63, line: 551, type: !108)
!3774 = !DILocation(line: 551, column: 9, scope: !264)
!3775 = !DILocation(line: 551, column: 15, scope: !264)
!3776 = !DILocation(line: 553, column: 11, scope: !264)
!3777 = !DILocation(line: 553, column: 3, scope: !264)
!3778 = !DILocation(line: 556, column: 17, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !264, file: !63, line: 554, column: 5)
!3780 = !DILocation(line: 556, column: 24, scope: !3779)
!3781 = !DILocation(line: 556, column: 7, scope: !3779)
!3782 = !DILocation(line: 557, column: 7, scope: !3779)
!3783 = !DILocation(line: 559, column: 15, scope: !3779)
!3784 = !DILocation(line: 559, column: 30, scope: !3779)
!3785 = !DILocation(line: 559, column: 45, scope: !3779)
!3786 = !DILocation(line: 559, column: 7, scope: !3779)
!3787 = !DILocation(line: 560, column: 7, scope: !3779)
!3788 = !DILocation(line: 562, column: 20, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3779, file: !63, line: 562, column: 11)
!3790 = !DILocation(line: 562, column: 11, scope: !3789)
!3791 = !DILocation(line: 562, column: 37, scope: !3789)
!3792 = !DILocation(line: 562, column: 11, scope: !3779)
!3793 = !DILocation(line: 563, column: 19, scope: !3789)
!3794 = !DILocation(line: 563, column: 26, scope: !3789)
!3795 = !DILocation(line: 563, column: 9, scope: !3789)
!3796 = !DILocation(line: 564, column: 18, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3789, file: !63, line: 564, column: 16)
!3798 = !DILocation(line: 564, column: 37, scope: !3797)
!3799 = !DILocation(line: 564, column: 40, scope: !3797)
!3800 = !DILocation(line: 564, column: 16, scope: !3789)
!3801 = !DILocation(line: 565, column: 22, scope: !3797)
!3802 = !DILocation(line: 565, column: 9, scope: !3797)
!3803 = !DILocation(line: 567, column: 12, scope: !3797)
!3804 = !DILocation(line: 568, column: 7, scope: !3779)
!3805 = !DILocation(line: 570, column: 10, scope: !264)
!3806 = !DILocation(line: 570, column: 3, scope: !264)
!3807 = distinct !DISubprogram(name: "change_timestamps", scope: !63, file: !63, line: 526, type: !272, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3808 = !DILocalVariable(name: "src_sb", arg: 1, scope: !3807, file: !63, line: 526, type: !274)
!3809 = !DILocation(line: 526, column: 39, scope: !3807)
!3810 = !DILocalVariable(name: "dest", arg: 2, scope: !3807, file: !63, line: 526, type: !177)
!3811 = !DILocation(line: 526, column: 59, scope: !3807)
!3812 = !DILocalVariable(name: "timespec", scope: !3807, file: !63, line: 528, type: !309)
!3813 = !DILocation(line: 528, column: 19, scope: !3807)
!3814 = !DILocation(line: 529, column: 3, scope: !3807)
!3815 = !DILocation(line: 529, column: 33, scope: !3807)
!3816 = !DILocation(line: 529, column: 17, scope: !3807)
!3817 = !{i64 0, i64 8, !3308, i64 8, i64 8, !3308}
!3818 = !DILocation(line: 530, column: 3, scope: !3807)
!3819 = !DILocation(line: 530, column: 33, scope: !3807)
!3820 = !DILocation(line: 530, column: 17, scope: !3807)
!3821 = !DILocation(line: 532, column: 16, scope: !3822)
!3822 = distinct !DILexicalBlock(scope: !3807, file: !63, line: 532, column: 7)
!3823 = !DILocation(line: 532, column: 22, scope: !3822)
!3824 = !DILocation(line: 532, column: 7, scope: !3822)
!3825 = !DILocation(line: 532, column: 7, scope: !3807)
!3826 = !DILocation(line: 534, column: 17, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3822, file: !63, line: 533, column: 5)
!3828 = !DILocation(line: 534, column: 24, scope: !3827)
!3829 = !DILocation(line: 534, column: 59, scope: !3827)
!3830 = !DILocation(line: 534, column: 7, scope: !3827)
!3831 = !DILocation(line: 535, column: 7, scope: !3827)
!3832 = !DILocation(line: 537, column: 3, scope: !3807)
!3833 = !DILocation(line: 538, column: 1, scope: !3807)
!3834 = distinct !DISubprogram(name: "change_attributes", scope: !63, file: !63, line: 493, type: !217, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3835 = !DILocalVariable(name: "name", arg: 1, scope: !3834, file: !63, line: 493, type: !177)
!3836 = !DILocation(line: 493, column: 32, scope: !3834)
!3837 = !DILocalVariable(name: "ok", scope: !3834, file: !63, line: 495, type: !139)
!3838 = !DILocation(line: 495, column: 8, scope: !3834)
!3839 = !DILocation(line: 508, column: 10, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3834, file: !63, line: 508, column: 7)
!3841 = !DILocation(line: 508, column: 19, scope: !3840)
!3842 = !DILocation(line: 508, column: 33, scope: !3840)
!3843 = !DILocation(line: 508, column: 36, scope: !3840)
!3844 = !DILocation(line: 508, column: 45, scope: !3840)
!3845 = !DILocation(line: 509, column: 7, scope: !3840)
!3846 = !DILocation(line: 509, column: 18, scope: !3840)
!3847 = !DILocation(line: 509, column: 24, scope: !3840)
!3848 = !DILocation(line: 509, column: 34, scope: !3840)
!3849 = !DILocation(line: 509, column: 10, scope: !3840)
!3850 = !DILocation(line: 509, column: 44, scope: !3840)
!3851 = !DILocation(line: 508, column: 7, scope: !3834)
!3852 = !DILocation(line: 510, column: 15, scope: !3840)
!3853 = !DILocation(line: 510, column: 22, scope: !3840)
!3854 = !DILocation(line: 510, column: 58, scope: !3840)
!3855 = !DILocation(line: 510, column: 5, scope: !3840)
!3856 = !DILocation(line: 511, column: 19, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3840, file: !63, line: 511, column: 12)
!3858 = !DILocation(line: 511, column: 25, scope: !3857)
!3859 = !DILocation(line: 511, column: 12, scope: !3857)
!3860 = !DILocation(line: 511, column: 31, scope: !3857)
!3861 = !DILocation(line: 511, column: 12, scope: !3840)
!3862 = !DILocation(line: 512, column: 15, scope: !3857)
!3863 = !DILocation(line: 512, column: 22, scope: !3857)
!3864 = !DILocation(line: 512, column: 60, scope: !3857)
!3865 = !DILocation(line: 512, column: 5, scope: !3857)
!3866 = !DILocation(line: 514, column: 8, scope: !3857)
!3867 = !DILocation(line: 516, column: 7, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3834, file: !63, line: 516, column: 7)
!3869 = !DILocation(line: 516, column: 7, scope: !3834)
!3870 = !DILocation(line: 517, column: 24, scope: !3868)
!3871 = !DILocation(line: 517, column: 5, scope: !3868)
!3872 = !DILocation(line: 519, column: 10, scope: !3834)
!3873 = !DILocation(line: 519, column: 3, scope: !3834)
!3874 = !DILocalVariable(name: "file", arg: 1, scope: !351, file: !63, line: 314, type: !177)
!3875 = !DILocation(line: 314, column: 32, scope: !351)
!3876 = !DILocalVariable(name: "st", scope: !351, file: !63, line: 316, type: !276)
!3877 = !DILocation(line: 316, column: 15, scope: !351)
!3878 = !DILocalVariable(name: "scontext", scope: !351, file: !63, line: 317, type: !7)
!3879 = !DILocation(line: 317, column: 9, scope: !351)
!3880 = !DILocation(line: 320, column: 7, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !351, file: !63, line: 320, column: 7)
!3882 = !DILocation(line: 320, column: 23, scope: !3881)
!3883 = !DILocation(line: 320, column: 7, scope: !351)
!3884 = !DILocation(line: 323, column: 7, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3881, file: !63, line: 321, column: 5)
!3886 = !DILocation(line: 325, column: 14, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !351, file: !63, line: 325, column: 7)
!3888 = !DILocation(line: 325, column: 7, scope: !3887)
!3889 = !DILocation(line: 325, column: 25, scope: !3887)
!3890 = !DILocation(line: 325, column: 7, scope: !351)
!3891 = !DILocation(line: 326, column: 5, scope: !3887)
!3892 = !DILocation(line: 328, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !351, file: !63, line: 328, column: 7)
!3894 = !DILocation(line: 328, column: 18, scope: !3893)
!3895 = !DILocation(line: 328, column: 21, scope: !3893)
!3896 = !DILocation(line: 328, column: 7, scope: !351)
!3897 = !DILocalVariable(name: "p0", scope: !3898, file: !63, line: 337, type: !177)
!3898 = distinct !DILexicalBlock(scope: !3893, file: !63, line: 329, column: 5)
!3899 = !DILocation(line: 337, column: 19, scope: !3898)
!3900 = !DILocalVariable(name: "p", scope: !3898, file: !63, line: 338, type: !177)
!3901 = !DILocation(line: 338, column: 19, scope: !3898)
!3902 = !DILocation(line: 338, column: 23, scope: !3898)
!3903 = !DILocation(line: 338, column: 28, scope: !3898)
!3904 = !DILocation(line: 339, column: 7, scope: !3898)
!3905 = !DILocation(line: 339, column: 14, scope: !3898)
!3906 = !DILocation(line: 340, column: 9, scope: !3898)
!3907 = distinct !{!3907, !3904, !3908}
!3908 = !DILocation(line: 340, column: 11, scope: !3898)
!3909 = !DILocation(line: 343, column: 12, scope: !3898)
!3910 = !DILocation(line: 343, column: 14, scope: !3898)
!3911 = !DILocation(line: 343, column: 10, scope: !3898)
!3912 = !DILocation(line: 345, column: 12, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3898, file: !63, line: 345, column: 11)
!3914 = !DILocation(line: 345, column: 11, scope: !3913)
!3915 = !DILocation(line: 345, column: 11, scope: !3898)
!3916 = !DILocalVariable(name: "prefix", scope: !3917, file: !63, line: 347, type: !7)
!3917 = distinct !DILexicalBlock(scope: !3913, file: !63, line: 346, column: 9)
!3918 = !DILocation(line: 347, column: 17, scope: !3917)
!3919 = !DILocation(line: 348, column: 11, scope: !3917)
!3920 = !DILocation(line: 350, column: 15, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3917, file: !63, line: 349, column: 13)
!3922 = !DILocation(line: 351, column: 13, scope: !3921)
!3923 = !DILocation(line: 352, column: 19, scope: !3917)
!3924 = !DILocation(line: 352, column: 18, scope: !3917)
!3925 = !DILocation(line: 352, column: 21, scope: !3917)
!3926 = !DILocation(line: 352, column: 25, scope: !3917)
!3927 = !DILocation(line: 352, column: 24, scope: !3917)
!3928 = !DILocation(line: 0, scope: !3917)
!3929 = distinct !{!3929, !3919, !3930}
!3930 = !DILocation(line: 352, column: 37, scope: !3917)
!3931 = !DILocation(line: 354, column: 28, scope: !3917)
!3932 = !DILocation(line: 354, column: 32, scope: !3917)
!3933 = !DILocation(line: 354, column: 30, scope: !3917)
!3934 = !DILocation(line: 354, column: 35, scope: !3917)
!3935 = !DILocation(line: 354, column: 20, scope: !3917)
!3936 = !DILocation(line: 354, column: 18, scope: !3917)
!3937 = !DILocation(line: 355, column: 15, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3917, file: !63, line: 355, column: 15)
!3939 = !DILocation(line: 355, column: 15, scope: !3917)
!3940 = !DILocation(line: 357, column: 32, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3938, file: !63, line: 356, column: 13)
!3942 = !DILocation(line: 357, column: 40, scope: !3941)
!3943 = !DILocation(line: 357, column: 44, scope: !3941)
!3944 = !DILocation(line: 357, column: 48, scope: !3941)
!3945 = !DILocation(line: 357, column: 46, scope: !3941)
!3946 = !DILocation(line: 357, column: 23, scope: !3941)
!3947 = !DILocation(line: 357, column: 15, scope: !3941)
!3948 = !DILocation(line: 359, column: 21, scope: !3941)
!3949 = !DILocation(line: 359, column: 15, scope: !3941)
!3950 = !DILocation(line: 360, column: 13, scope: !3941)
!3951 = !DILocation(line: 361, column: 9, scope: !3917)
!3952 = !DILocation(line: 362, column: 5, scope: !3898)
!3953 = !DILocation(line: 363, column: 14, scope: !351)
!3954 = !DILocation(line: 368, column: 22, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !351, file: !63, line: 368, column: 7)
!3956 = !DILocation(line: 368, column: 31, scope: !3955)
!3957 = !DILocation(line: 368, column: 8, scope: !3955)
!3958 = !DILocation(line: 368, column: 51, scope: !3955)
!3959 = !DILocation(line: 369, column: 7, scope: !3955)
!3960 = !DILocation(line: 369, column: 10, scope: !3955)
!3961 = !DILocation(line: 368, column: 7, scope: !351)
!3962 = !DILocation(line: 371, column: 11, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3964, file: !63, line: 371, column: 11)
!3964 = distinct !DILexicalBlock(scope: !3955, file: !63, line: 370, column: 5)
!3965 = !DILocation(line: 371, column: 20, scope: !3963)
!3966 = !DILocation(line: 371, column: 11, scope: !3964)
!3967 = !DILocation(line: 372, column: 18, scope: !3963)
!3968 = !DILocation(line: 372, column: 9, scope: !3963)
!3969 = !DILocation(line: 373, column: 7, scope: !3964)
!3970 = !DILocation(line: 376, column: 20, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !351, file: !63, line: 376, column: 7)
!3972 = !DILocation(line: 376, column: 26, scope: !3971)
!3973 = !DILocation(line: 376, column: 7, scope: !3971)
!3974 = !DILocation(line: 376, column: 36, scope: !3971)
!3975 = !DILocation(line: 376, column: 40, scope: !3971)
!3976 = !DILocation(line: 376, column: 43, scope: !3971)
!3977 = !DILocation(line: 376, column: 49, scope: !3971)
!3978 = !DILocation(line: 376, column: 7, scope: !351)
!3979 = !DILocation(line: 377, column: 15, scope: !3971)
!3980 = !DILocation(line: 378, column: 12, scope: !3971)
!3981 = !DILocation(line: 379, column: 12, scope: !3971)
!3982 = !DILocation(line: 379, column: 44, scope: !3971)
!3983 = !DILocation(line: 379, column: 32, scope: !3971)
!3984 = !DILocation(line: 377, column: 5, scope: !3971)
!3985 = !DILocation(line: 381, column: 12, scope: !351)
!3986 = !DILocation(line: 381, column: 3, scope: !351)
!3987 = !DILocation(line: 382, column: 3, scope: !351)
!3988 = !DILocation(line: 383, column: 1, scope: !351)
!3989 = distinct !DISubprogram(name: "need_copy", scope: !63, file: !63, line: 174, type: !259, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!3990 = !DILocalVariable(name: "src_name", arg: 1, scope: !3989, file: !63, line: 174, type: !177)
!3991 = !DILocation(line: 174, column: 24, scope: !3989)
!3992 = !DILocalVariable(name: "dest_name", arg: 2, scope: !3989, file: !63, line: 174, type: !177)
!3993 = !DILocation(line: 174, column: 46, scope: !3989)
!3994 = !DILocalVariable(name: "x", arg: 3, scope: !3989, file: !63, line: 175, type: !243)
!3995 = !DILocation(line: 175, column: 37, scope: !3989)
!3996 = !DILocalVariable(name: "src_sb", scope: !3989, file: !63, line: 177, type: !276)
!3997 = !DILocation(line: 177, column: 15, scope: !3989)
!3998 = !DILocalVariable(name: "dest_sb", scope: !3989, file: !63, line: 177, type: !276)
!3999 = !DILocation(line: 177, column: 23, scope: !3989)
!4000 = !DILocalVariable(name: "src_fd", scope: !3989, file: !63, line: 178, type: !5)
!4001 = !DILocation(line: 178, column: 7, scope: !3989)
!4002 = !DILocalVariable(name: "dest_fd", scope: !3989, file: !63, line: 178, type: !5)
!4003 = !DILocation(line: 178, column: 15, scope: !3989)
!4004 = !DILocalVariable(name: "content_match", scope: !3989, file: !63, line: 179, type: !139)
!4005 = !DILocation(line: 179, column: 8, scope: !3989)
!4006 = !DILocation(line: 181, column: 19, scope: !4007)
!4007 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 181, column: 7)
!4008 = !DILocation(line: 181, column: 7, scope: !4007)
!4009 = !DILocation(line: 181, column: 7, scope: !3989)
!4010 = !DILocation(line: 182, column: 5, scope: !4007)
!4011 = !DILocation(line: 185, column: 14, scope: !4012)
!4012 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 185, column: 7)
!4013 = !DILocation(line: 185, column: 7, scope: !4012)
!4014 = !DILocation(line: 185, column: 33, scope: !4012)
!4015 = !DILocation(line: 185, column: 7, scope: !3989)
!4016 = !DILocation(line: 186, column: 5, scope: !4012)
!4017 = !DILocation(line: 188, column: 14, scope: !4018)
!4018 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 188, column: 7)
!4019 = !DILocation(line: 188, column: 7, scope: !4018)
!4020 = !DILocation(line: 188, column: 35, scope: !4018)
!4021 = !DILocation(line: 188, column: 7, scope: !3989)
!4022 = !DILocation(line: 189, column: 5, scope: !4018)
!4023 = !DILocation(line: 191, column: 8, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 191, column: 7)
!4025 = !DILocation(line: 191, column: 33, scope: !4024)
!4026 = !DILocation(line: 191, column: 37, scope: !4024)
!4027 = !DILocation(line: 192, column: 7, scope: !4024)
!4028 = !DILocation(line: 192, column: 29, scope: !4024)
!4029 = !DILocation(line: 192, column: 10, scope: !4024)
!4030 = !DILocation(line: 192, column: 38, scope: !4024)
!4031 = !DILocation(line: 192, column: 61, scope: !4024)
!4032 = !DILocation(line: 192, column: 41, scope: !4024)
!4033 = !DILocation(line: 191, column: 7, scope: !3989)
!4034 = !DILocation(line: 193, column: 5, scope: !4024)
!4035 = !DILocation(line: 195, column: 14, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 195, column: 7)
!4037 = !{!2935, !2936, i64 48}
!4038 = !DILocation(line: 195, column: 33, scope: !4036)
!4039 = !DILocation(line: 195, column: 22, scope: !4036)
!4040 = !DILocation(line: 196, column: 7, scope: !4036)
!4041 = !DILocation(line: 196, column: 19, scope: !4036)
!4042 = !DILocation(line: 196, column: 27, scope: !4036)
!4043 = !DILocation(line: 196, column: 49, scope: !4036)
!4044 = !DILocation(line: 196, column: 46, scope: !4036)
!4045 = !DILocation(line: 195, column: 7, scope: !3989)
!4046 = !DILocation(line: 197, column: 5, scope: !4036)
!4047 = !DILocation(line: 199, column: 7, scope: !4048)
!4048 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 199, column: 7)
!4049 = !DILocation(line: 199, column: 16, scope: !4048)
!4050 = !DILocation(line: 199, column: 7, scope: !3989)
!4051 = !DILocation(line: 201, column: 7, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4048, file: !63, line: 200, column: 5)
!4053 = !DILocation(line: 201, column: 13, scope: !4052)
!4054 = !DILocalVariable(name: "ruid", scope: !4052, file: !63, line: 202, type: !124)
!4055 = !DILocation(line: 202, column: 13, scope: !4052)
!4056 = !DILocation(line: 202, column: 20, scope: !4052)
!4057 = !DILocation(line: 203, column: 12, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4052, file: !63, line: 203, column: 11)
!4059 = !DILocation(line: 203, column: 17, scope: !4058)
!4060 = !DILocation(line: 203, column: 31, scope: !4058)
!4061 = !DILocation(line: 203, column: 34, scope: !4058)
!4062 = !DILocation(line: 203, column: 41, scope: !4058)
!4063 = !DILocation(line: 203, column: 52, scope: !4058)
!4064 = !{!2935, !2656, i64 28}
!4065 = !DILocation(line: 203, column: 62, scope: !4058)
!4066 = !DILocation(line: 203, column: 59, scope: !4058)
!4067 = !DILocation(line: 203, column: 11, scope: !4052)
!4068 = !DILocation(line: 204, column: 9, scope: !4058)
!4069 = !DILocation(line: 205, column: 5, scope: !4052)
!4070 = !DILocation(line: 206, column: 20, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4048, file: !63, line: 206, column: 12)
!4072 = !DILocation(line: 206, column: 30, scope: !4071)
!4073 = !DILocation(line: 206, column: 27, scope: !4071)
!4074 = !DILocation(line: 206, column: 12, scope: !4048)
!4075 = !DILocation(line: 207, column: 5, scope: !4071)
!4076 = !DILocation(line: 209, column: 7, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 209, column: 7)
!4078 = !DILocation(line: 209, column: 16, scope: !4077)
!4079 = !DILocation(line: 209, column: 7, scope: !3989)
!4080 = !DILocation(line: 211, column: 7, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4077, file: !63, line: 210, column: 5)
!4082 = !DILocation(line: 211, column: 13, scope: !4081)
!4083 = !DILocalVariable(name: "rgid", scope: !4081, file: !63, line: 212, type: !126)
!4084 = !DILocation(line: 212, column: 13, scope: !4081)
!4085 = !DILocation(line: 212, column: 20, scope: !4081)
!4086 = !DILocation(line: 213, column: 12, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4081, file: !63, line: 213, column: 11)
!4088 = !DILocation(line: 213, column: 17, scope: !4087)
!4089 = !DILocation(line: 213, column: 31, scope: !4087)
!4090 = !DILocation(line: 213, column: 34, scope: !4087)
!4091 = !DILocation(line: 213, column: 41, scope: !4087)
!4092 = !DILocation(line: 213, column: 52, scope: !4087)
!4093 = !{!2935, !2656, i64 32}
!4094 = !DILocation(line: 213, column: 62, scope: !4087)
!4095 = !DILocation(line: 213, column: 59, scope: !4087)
!4096 = !DILocation(line: 213, column: 11, scope: !4081)
!4097 = !DILocation(line: 214, column: 9, scope: !4087)
!4098 = !DILocation(line: 215, column: 5, scope: !4081)
!4099 = !DILocation(line: 216, column: 20, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4077, file: !63, line: 216, column: 12)
!4101 = !DILocation(line: 216, column: 30, scope: !4100)
!4102 = !DILocation(line: 216, column: 27, scope: !4100)
!4103 = !DILocation(line: 216, column: 12, scope: !4077)
!4104 = !DILocation(line: 217, column: 5, scope: !4100)
!4105 = !DILocation(line: 220, column: 7, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 220, column: 7)
!4107 = !DILocation(line: 220, column: 23, scope: !4106)
!4108 = !DILocation(line: 220, column: 26, scope: !4106)
!4109 = !DILocation(line: 220, column: 29, scope: !4106)
!4110 = !DILocation(line: 220, column: 7, scope: !3989)
!4111 = !DILocalVariable(name: "file_scontext", scope: !4112, file: !63, line: 222, type: !7)
!4112 = distinct !DILexicalBlock(scope: !4106, file: !63, line: 221, column: 5)
!4113 = !DILocation(line: 222, column: 13, scope: !4112)
!4114 = !DILocalVariable(name: "to_scontext", scope: !4112, file: !63, line: 223, type: !7)
!4115 = !DILocation(line: 223, column: 13, scope: !4112)
!4116 = !DILocalVariable(name: "scontext_match", scope: !4112, file: !63, line: 224, type: !139)
!4117 = !DILocation(line: 224, column: 12, scope: !4112)
!4118 = !DILocation(line: 226, column: 23, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4112, file: !63, line: 226, column: 11)
!4120 = !DILocation(line: 226, column: 11, scope: !4119)
!4121 = !DILocation(line: 226, column: 49, scope: !4119)
!4122 = !DILocation(line: 226, column: 11, scope: !4112)
!4123 = !DILocation(line: 227, column: 9, scope: !4119)
!4124 = !DILocation(line: 229, column: 23, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4112, file: !63, line: 229, column: 11)
!4126 = !DILocation(line: 229, column: 11, scope: !4125)
!4127 = !DILocation(line: 229, column: 48, scope: !4125)
!4128 = !DILocation(line: 229, column: 11, scope: !4112)
!4129 = !DILocation(line: 231, column: 20, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4125, file: !63, line: 230, column: 9)
!4131 = !DILocation(line: 231, column: 11, scope: !4130)
!4132 = !DILocation(line: 232, column: 11, scope: !4130)
!4133 = !DILocation(line: 235, column: 24, scope: !4112)
!4134 = !DILocation(line: 235, column: 22, scope: !4112)
!4135 = !DILocation(line: 237, column: 16, scope: !4112)
!4136 = !DILocation(line: 237, column: 7, scope: !4112)
!4137 = !DILocation(line: 238, column: 16, scope: !4112)
!4138 = !DILocation(line: 238, column: 7, scope: !4112)
!4139 = !DILocation(line: 239, column: 12, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4112, file: !63, line: 239, column: 11)
!4141 = !DILocation(line: 239, column: 11, scope: !4112)
!4142 = !DILocation(line: 240, column: 9, scope: !4140)
!4143 = !DILocation(line: 241, column: 5, scope: !4112)
!4144 = !DILocation(line: 244, column: 18, scope: !3989)
!4145 = !DILocation(line: 244, column: 12, scope: !3989)
!4146 = !DILocation(line: 244, column: 10, scope: !3989)
!4147 = !DILocation(line: 245, column: 7, scope: !4148)
!4148 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 245, column: 7)
!4149 = !DILocation(line: 245, column: 14, scope: !4148)
!4150 = !DILocation(line: 245, column: 7, scope: !3989)
!4151 = !DILocation(line: 246, column: 5, scope: !4148)
!4152 = !DILocation(line: 248, column: 19, scope: !3989)
!4153 = !DILocation(line: 248, column: 13, scope: !3989)
!4154 = !DILocation(line: 248, column: 11, scope: !3989)
!4155 = !DILocation(line: 249, column: 7, scope: !4156)
!4156 = distinct !DILexicalBlock(scope: !3989, file: !63, line: 249, column: 7)
!4157 = !DILocation(line: 249, column: 15, scope: !4156)
!4158 = !DILocation(line: 249, column: 7, scope: !3989)
!4159 = !DILocation(line: 251, column: 14, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4156, file: !63, line: 250, column: 5)
!4161 = !DILocation(line: 251, column: 7, scope: !4160)
!4162 = !DILocation(line: 252, column: 7, scope: !4160)
!4163 = !DILocation(line: 255, column: 38, scope: !3989)
!4164 = !DILocation(line: 255, column: 46, scope: !3989)
!4165 = !DILocation(line: 255, column: 19, scope: !3989)
!4166 = !DILocation(line: 255, column: 17, scope: !3989)
!4167 = !DILocation(line: 257, column: 10, scope: !3989)
!4168 = !DILocation(line: 257, column: 3, scope: !3989)
!4169 = !DILocation(line: 258, column: 10, scope: !3989)
!4170 = !DILocation(line: 258, column: 3, scope: !3989)
!4171 = !DILocation(line: 259, column: 11, scope: !3989)
!4172 = !DILocation(line: 259, column: 10, scope: !3989)
!4173 = !DILocation(line: 259, column: 3, scope: !3989)
!4174 = !DILocation(line: 260, column: 1, scope: !3989)
!4175 = !DILocalVariable(name: "a_fd", arg: 1, scope: !343, file: !63, line: 146, type: !5)
!4176 = !DILocation(line: 146, column: 24, scope: !343)
!4177 = !DILocalVariable(name: "b_fd", arg: 2, scope: !343, file: !63, line: 146, type: !5)
!4178 = !DILocation(line: 146, column: 34, scope: !343)
!4179 = !DILocalVariable(name: "size", scope: !343, file: !63, line: 152, type: !52)
!4180 = !DILocation(line: 152, column: 10, scope: !343)
!4181 = !DILocation(line: 153, column: 3, scope: !343)
!4182 = !DILocation(line: 153, column: 33, scope: !343)
!4183 = !DILocation(line: 153, column: 22, scope: !343)
!4184 = !DILocation(line: 153, column: 20, scope: !343)
!4185 = !DILocation(line: 153, column: 12, scope: !343)
!4186 = !DILocation(line: 154, column: 9, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4188, file: !63, line: 154, column: 9)
!4188 = distinct !DILexicalBlock(scope: !343, file: !63, line: 153, column: 64)
!4189 = !DILocation(line: 154, column: 28, scope: !4187)
!4190 = !DILocation(line: 154, column: 17, scope: !4187)
!4191 = !DILocation(line: 154, column: 14, scope: !4187)
!4192 = !DILocation(line: 154, column: 9, scope: !4188)
!4193 = !DILocation(line: 155, column: 7, scope: !4187)
!4194 = !DILocation(line: 157, column: 33, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4188, file: !63, line: 157, column: 9)
!4196 = !DILocation(line: 157, column: 9, scope: !4195)
!4197 = !DILocation(line: 157, column: 39, scope: !4195)
!4198 = !DILocation(line: 157, column: 9, scope: !4188)
!4199 = !DILocation(line: 158, column: 7, scope: !4195)
!4200 = distinct !{!4200, !4181, !4201}
!4201 = !DILocation(line: 159, column: 3, scope: !343)
!4202 = !DILocation(line: 161, column: 10, scope: !343)
!4203 = !DILocation(line: 161, column: 15, scope: !343)
!4204 = !DILocation(line: 161, column: 3, scope: !343)
!4205 = !DILocation(line: 162, column: 1, scope: !343)
!4206 = distinct !DISubprogram(name: "restorecon", scope: !3709, file: !3709, line: 40, type: !251, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !62, retainedNodes: !206)
!4207 = !DILocalVariable(name: "path", arg: 1, scope: !4206, file: !3709, line: 40, type: !177)
!4208 = !DILocation(line: 40, column: 25, scope: !4206)
!4209 = !DILocalVariable(name: "recurse", arg: 2, scope: !4206, file: !3709, line: 40, type: !139)
!4210 = !DILocation(line: 40, column: 36, scope: !4206)
!4211 = !DILocalVariable(name: "preserve", arg: 3, scope: !4206, file: !3709, line: 40, type: !139)
!4212 = !DILocation(line: 40, column: 50, scope: !4206)
!4213 = !DILocation(line: 41, column: 3, scope: !4206)
!4214 = !DILocation(line: 41, column: 9, scope: !4206)
!4215 = !DILocation(line: 41, column: 20, scope: !4206)
!4216 = distinct !DISubprogram(name: "prog_fprintf", scope: !1410, file: !1410, line: 28, type: !4217, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1409, retainedNodes: !206)
!4217 = !DISubroutineType(types: !4218)
!4218 = !{null, !1414, !177, null}
!4219 = !DILocalVariable(name: "fp", arg: 1, scope: !4216, file: !1410, line: 28, type: !1414)
!4220 = !DILocation(line: 28, column: 21, scope: !4216)
!4221 = !DILocalVariable(name: "fmt", arg: 2, scope: !4216, file: !1410, line: 28, type: !177)
!4222 = !DILocation(line: 28, column: 37, scope: !4216)
!4223 = !DILocalVariable(name: "ap", scope: !4216, file: !1410, line: 30, type: !1454)
!4224 = !DILocation(line: 30, column: 11, scope: !4216)
!4225 = !DILocation(line: 31, column: 3, scope: !4216)
!4226 = !DILocation(line: 32, column: 3, scope: !4216)
!4227 = !DILocation(line: 33, column: 3, scope: !4216)
!4228 = !DILocation(line: 34, column: 13, scope: !4216)
!4229 = !DILocation(line: 34, column: 17, scope: !4216)
!4230 = !DILocation(line: 34, column: 22, scope: !4216)
!4231 = !DILocation(line: 34, column: 3, scope: !4216)
!4232 = !DILocation(line: 35, column: 3, scope: !4216)
!4233 = !DILocation(line: 36, column: 3, scope: !4216)
!4234 = !DILocation(line: 37, column: 1, scope: !4216)
!4235 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !355, file: !355, line: 929, type: !360, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4236 = !DILocalVariable(name: "src_name", arg: 1, scope: !4235, file: !355, line: 929, type: !177)
!4237 = !DILocation(line: 929, column: 39, scope: !4235)
!4238 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4235, file: !355, line: 929, type: !177)
!4239 = !DILocation(line: 929, column: 61, scope: !4235)
!4240 = !DILocalVariable(name: "mode", arg: 3, scope: !4235, file: !355, line: 930, type: !136)
!4241 = !DILocation(line: 930, column: 34, scope: !4235)
!4242 = !DILocalVariable(name: "new_dst", arg: 4, scope: !4235, file: !355, line: 930, type: !139)
!4243 = !DILocation(line: 930, column: 45, scope: !4235)
!4244 = !DILocalVariable(name: "x", arg: 5, scope: !4235, file: !355, line: 930, type: !362)
!4245 = !DILocation(line: 930, column: 79, scope: !4235)
!4246 = !DILocation(line: 932, column: 7, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4235, file: !355, line: 932, column: 7)
!4248 = !DILocation(line: 932, column: 10, scope: !4247)
!4249 = !DILocation(line: 932, column: 7, scope: !4235)
!4250 = !DILocalVariable(name: "all_errors", scope: !4251, file: !355, line: 935, type: !139)
!4251 = distinct !DILexicalBlock(scope: !4247, file: !355, line: 933, column: 5)
!4252 = !DILocation(line: 935, column: 12, scope: !4251)
!4253 = !DILocation(line: 935, column: 26, scope: !4251)
!4254 = !DILocation(line: 935, column: 29, scope: !4251)
!4255 = !DILocation(line: 935, column: 48, scope: !4251)
!4256 = !DILocation(line: 935, column: 51, scope: !4251)
!4257 = !DILocation(line: 935, column: 54, scope: !4251)
!4258 = !DILocalVariable(name: "some_errors", scope: !4251, file: !355, line: 936, type: !139)
!4259 = !DILocation(line: 936, column: 12, scope: !4251)
!4260 = !DILocation(line: 936, column: 27, scope: !4251)
!4261 = !DILocation(line: 936, column: 38, scope: !4251)
!4262 = !DILocation(line: 936, column: 42, scope: !4251)
!4263 = !DILocation(line: 936, column: 45, scope: !4251)
!4264 = !DILocation(line: 936, column: 41, scope: !4251)
!4265 = !DILocation(line: 0, scope: !4251)
!4266 = !DILocalVariable(name: "con", scope: !4251, file: !355, line: 937, type: !7)
!4267 = !DILocation(line: 937, column: 13, scope: !4251)
!4268 = !DILocation(line: 939, column: 29, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4251, file: !355, line: 939, column: 11)
!4270 = !DILocation(line: 939, column: 16, scope: !4269)
!4271 = !DILocation(line: 939, column: 13, scope: !4269)
!4272 = !DILocation(line: 939, column: 11, scope: !4251)
!4273 = !DILocation(line: 941, column: 31, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4275, file: !355, line: 941, column: 15)
!4275 = distinct !DILexicalBlock(scope: !4269, file: !355, line: 940, column: 9)
!4276 = !DILocation(line: 941, column: 15, scope: !4274)
!4277 = !DILocation(line: 941, column: 36, scope: !4274)
!4278 = !DILocation(line: 941, column: 15, scope: !4275)
!4279 = !DILocation(line: 943, column: 19, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4281, file: !355, line: 943, column: 19)
!4281 = distinct !DILexicalBlock(scope: !4274, file: !355, line: 942, column: 13)
!4282 = !DILocation(line: 943, column: 30, scope: !4280)
!4283 = !DILocation(line: 943, column: 34, scope: !4280)
!4284 = !DILocation(line: 943, column: 46, scope: !4280)
!4285 = !DILocation(line: 943, column: 69, scope: !4280)
!4286 = !DILocation(line: 943, column: 50, scope: !4280)
!4287 = !DILocation(line: 943, column: 19, scope: !4281)
!4288 = !DILocation(line: 944, column: 27, scope: !4280)
!4289 = !DILocation(line: 945, column: 24, scope: !4280)
!4290 = !DILocation(line: 946, column: 31, scope: !4280)
!4291 = !DILocation(line: 946, column: 24, scope: !4280)
!4292 = !DILocation(line: 944, column: 17, scope: !4280)
!4293 = !DILocation(line: 947, column: 19, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4281, file: !355, line: 947, column: 19)
!4295 = !DILocation(line: 947, column: 22, scope: !4294)
!4296 = !DILocation(line: 947, column: 19, scope: !4281)
!4297 = !DILocation(line: 949, column: 28, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4294, file: !355, line: 948, column: 17)
!4299 = !DILocation(line: 949, column: 19, scope: !4298)
!4300 = !DILocation(line: 950, column: 19, scope: !4298)
!4301 = !DILocation(line: 952, column: 13, scope: !4281)
!4302 = !DILocation(line: 953, column: 20, scope: !4275)
!4303 = !DILocation(line: 953, column: 11, scope: !4275)
!4304 = !DILocation(line: 954, column: 9, scope: !4275)
!4305 = !DILocation(line: 957, column: 15, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !355, line: 957, column: 15)
!4307 = distinct !DILexicalBlock(scope: !4269, file: !355, line: 956, column: 9)
!4308 = !DILocation(line: 957, column: 26, scope: !4306)
!4309 = !DILocation(line: 957, column: 30, scope: !4306)
!4310 = !DILocation(line: 957, column: 42, scope: !4306)
!4311 = !DILocation(line: 957, column: 65, scope: !4306)
!4312 = !DILocation(line: 957, column: 46, scope: !4306)
!4313 = !DILocation(line: 957, column: 15, scope: !4307)
!4314 = !DILocation(line: 959, column: 25, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4306, file: !355, line: 958, column: 13)
!4316 = !DILocation(line: 960, column: 22, scope: !4315)
!4317 = !DILocation(line: 961, column: 22, scope: !4315)
!4318 = !DILocation(line: 959, column: 15, scope: !4315)
!4319 = !DILocation(line: 962, column: 13, scope: !4315)
!4320 = !DILocation(line: 963, column: 15, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4307, file: !355, line: 963, column: 15)
!4322 = !DILocation(line: 963, column: 18, scope: !4321)
!4323 = !DILocation(line: 963, column: 15, scope: !4307)
!4324 = !DILocation(line: 964, column: 13, scope: !4321)
!4325 = !DILocation(line: 966, column: 5, scope: !4251)
!4326 = !DILocation(line: 967, column: 12, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4247, file: !355, line: 967, column: 12)
!4328 = !DILocation(line: 967, column: 15, scope: !4327)
!4329 = !DILocation(line: 967, column: 12, scope: !4247)
!4330 = !DILocation(line: 971, column: 11, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4332, file: !355, line: 971, column: 11)
!4332 = distinct !DILexicalBlock(scope: !4327, file: !355, line: 968, column: 5)
!4333 = !DILocation(line: 971, column: 19, scope: !4331)
!4334 = !DILocation(line: 971, column: 34, scope: !4331)
!4335 = !DILocation(line: 971, column: 44, scope: !4331)
!4336 = !DILocation(line: 971, column: 22, scope: !4331)
!4337 = !DILocation(line: 971, column: 50, scope: !4331)
!4338 = !DILocation(line: 972, column: 11, scope: !4331)
!4339 = !DILocation(line: 972, column: 35, scope: !4331)
!4340 = !DILocation(line: 972, column: 16, scope: !4331)
!4341 = !DILocation(line: 971, column: 11, scope: !4332)
!4342 = !DILocation(line: 974, column: 21, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4331, file: !355, line: 973, column: 9)
!4344 = !DILocation(line: 975, column: 18, scope: !4343)
!4345 = !DILocation(line: 976, column: 18, scope: !4343)
!4346 = !DILocation(line: 974, column: 11, scope: !4343)
!4347 = !DILocation(line: 977, column: 9, scope: !4343)
!4348 = !DILocation(line: 978, column: 5, scope: !4332)
!4349 = !DILocation(line: 980, column: 3, scope: !4235)
!4350 = !DILocation(line: 981, column: 1, scope: !4235)
!4351 = distinct !DISubprogram(name: "errno_unsupported", scope: !355, file: !355, line: 632, type: !253, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4352 = !DILocalVariable(name: "err", arg: 1, scope: !4351, file: !355, line: 632, type: !5)
!4353 = !DILocation(line: 632, column: 24, scope: !4351)
!4354 = !DILocation(line: 634, column: 10, scope: !4351)
!4355 = !DILocation(line: 634, column: 14, scope: !4351)
!4356 = !DILocation(line: 634, column: 25, scope: !4351)
!4357 = !DILocation(line: 634, column: 28, scope: !4351)
!4358 = !DILocation(line: 634, column: 32, scope: !4351)
!4359 = !DILocation(line: 634, column: 3, scope: !4351)
!4360 = distinct !DISubprogram(name: "defaultcon", scope: !3709, file: !3709, line: 44, type: !247, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4361 = !DILocalVariable(name: "path", arg: 1, scope: !4360, file: !3709, line: 44, type: !177)
!4362 = !DILocation(line: 44, column: 25, scope: !4360)
!4363 = !DILocalVariable(name: "mode", arg: 2, scope: !4360, file: !3709, line: 44, type: !136)
!4364 = !DILocation(line: 44, column: 38, scope: !4360)
!4365 = !DILocation(line: 45, column: 3, scope: !4360)
!4366 = !DILocation(line: 45, column: 9, scope: !4360)
!4367 = !DILocation(line: 45, column: 20, scope: !4360)
!4368 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3709, file: !3709, line: 25, type: !253, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4369 = !DILocalVariable(name: "err", arg: 1, scope: !4368, file: !3709, line: 25, type: !5)
!4370 = !DILocation(line: 25, column: 24, scope: !4368)
!4371 = !DILocation(line: 27, column: 10, scope: !4368)
!4372 = !DILocation(line: 27, column: 14, scope: !4368)
!4373 = !DILocation(line: 27, column: 25, scope: !4368)
!4374 = !DILocation(line: 27, column: 28, scope: !4368)
!4375 = !DILocation(line: 27, column: 32, scope: !4368)
!4376 = !DILocation(line: 27, column: 3, scope: !4368)
!4377 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !355, file: !355, line: 991, type: !405, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4378 = !DILocalVariable(name: "dst_name", arg: 1, scope: !4377, file: !355, line: 991, type: !177)
!4379 = !DILocation(line: 991, column: 36, scope: !4377)
!4380 = !DILocalVariable(name: "process_local", arg: 2, scope: !4377, file: !355, line: 991, type: !139)
!4381 = !DILocation(line: 991, column: 51, scope: !4377)
!4382 = !DILocalVariable(name: "recurse", arg: 3, scope: !4377, file: !355, line: 992, type: !139)
!4383 = !DILocation(line: 992, column: 29, scope: !4377)
!4384 = !DILocalVariable(name: "x", arg: 4, scope: !4377, file: !355, line: 992, type: !362)
!4385 = !DILocation(line: 992, column: 63, scope: !4377)
!4386 = !DILocalVariable(name: "all_errors", scope: !4377, file: !355, line: 994, type: !139)
!4387 = !DILocation(line: 994, column: 8, scope: !4377)
!4388 = !DILocation(line: 994, column: 23, scope: !4377)
!4389 = !DILocation(line: 994, column: 26, scope: !4377)
!4390 = !DILocation(line: 995, column: 22, scope: !4377)
!4391 = !DILocation(line: 995, column: 25, scope: !4377)
!4392 = !DILocation(line: 995, column: 28, scope: !4377)
!4393 = !DILocalVariable(name: "some_errors", scope: !4377, file: !355, line: 996, type: !139)
!4394 = !DILocation(line: 996, column: 8, scope: !4377)
!4395 = !DILocation(line: 996, column: 23, scope: !4377)
!4396 = !DILocation(line: 996, column: 34, scope: !4377)
!4397 = !DILocation(line: 996, column: 38, scope: !4377)
!4398 = !DILocation(line: 996, column: 41, scope: !4377)
!4399 = !DILocation(line: 996, column: 37, scope: !4377)
!4400 = !DILocation(line: 0, scope: !4377)
!4401 = !DILocation(line: 998, column: 21, scope: !4402)
!4402 = distinct !DILexicalBlock(scope: !4377, file: !355, line: 998, column: 7)
!4403 = !DILocation(line: 998, column: 31, scope: !4402)
!4404 = !DILocation(line: 998, column: 40, scope: !4402)
!4405 = !DILocation(line: 998, column: 9, scope: !4402)
!4406 = !DILocation(line: 998, column: 7, scope: !4377)
!4407 = !DILocation(line: 1000, column: 11, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4409, file: !355, line: 1000, column: 11)
!4409 = distinct !DILexicalBlock(scope: !4402, file: !355, line: 999, column: 5)
!4410 = !DILocation(line: 1000, column: 22, scope: !4408)
!4411 = !DILocation(line: 1000, column: 26, scope: !4408)
!4412 = !DILocation(line: 1000, column: 38, scope: !4408)
!4413 = !DILocation(line: 1000, column: 61, scope: !4408)
!4414 = !DILocation(line: 1000, column: 42, scope: !4408)
!4415 = !DILocation(line: 1000, column: 11, scope: !4409)
!4416 = !DILocation(line: 1001, column: 19, scope: !4408)
!4417 = !DILocation(line: 1001, column: 26, scope: !4408)
!4418 = !DILocation(line: 1002, column: 16, scope: !4408)
!4419 = !DILocation(line: 1001, column: 9, scope: !4408)
!4420 = !DILocation(line: 1003, column: 7, scope: !4409)
!4421 = !DILocation(line: 1006, column: 3, scope: !4377)
!4422 = !DILocation(line: 1007, column: 1, scope: !4377)
!4423 = distinct !DISubprogram(name: "restorecon", scope: !3709, file: !3709, line: 40, type: !251, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4424 = !DILocalVariable(name: "path", arg: 1, scope: !4423, file: !3709, line: 40, type: !177)
!4425 = !DILocation(line: 40, column: 25, scope: !4423)
!4426 = !DILocalVariable(name: "recurse", arg: 2, scope: !4423, file: !3709, line: 40, type: !139)
!4427 = !DILocation(line: 40, column: 36, scope: !4423)
!4428 = !DILocalVariable(name: "preserve", arg: 3, scope: !4423, file: !3709, line: 40, type: !139)
!4429 = !DILocation(line: 40, column: 50, scope: !4423)
!4430 = !DILocation(line: 41, column: 3, scope: !4423)
!4431 = !DILocation(line: 41, column: 9, scope: !4423)
!4432 = !DILocation(line: 41, column: 20, scope: !4423)
!4433 = distinct !DISubprogram(name: "dest_info_init", scope: !355, file: !355, line: 1739, type: !407, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4434 = !DILocalVariable(name: "x", arg: 1, scope: !4433, file: !355, line: 1739, type: !409)
!4435 = !DILocation(line: 1739, column: 36, scope: !4433)
!4436 = !DILocation(line: 1742, column: 7, scope: !4433)
!4437 = !DILocation(line: 1741, column: 3, scope: !4433)
!4438 = !DILocation(line: 1741, column: 6, scope: !4433)
!4439 = !DILocation(line: 1742, column: 5, scope: !4433)
!4440 = !DILocation(line: 1747, column: 1, scope: !4433)
!4441 = distinct !DISubprogram(name: "src_info_init", scope: !355, file: !355, line: 1752, type: !407, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4442 = !DILocalVariable(name: "x", arg: 1, scope: !4441, file: !355, line: 1752, type: !409)
!4443 = !DILocation(line: 1752, column: 35, scope: !4441)
!4444 = !DILocation(line: 1764, column: 7, scope: !4441)
!4445 = !DILocation(line: 1763, column: 3, scope: !4441)
!4446 = !DILocation(line: 1763, column: 6, scope: !4441)
!4447 = !DILocation(line: 1764, column: 5, scope: !4441)
!4448 = !DILocation(line: 1769, column: 1, scope: !4441)
!4449 = distinct !DISubprogram(name: "copy", scope: !355, file: !355, line: 3009, type: !410, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4450 = !DILocalVariable(name: "src_name", arg: 1, scope: !4449, file: !355, line: 3009, type: !177)
!4451 = !DILocation(line: 3009, column: 19, scope: !4449)
!4452 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4449, file: !355, line: 3009, type: !177)
!4453 = !DILocation(line: 3009, column: 41, scope: !4449)
!4454 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4449, file: !355, line: 3010, type: !139)
!4455 = !DILocation(line: 3010, column: 12, scope: !4449)
!4456 = !DILocalVariable(name: "options", arg: 4, scope: !4449, file: !355, line: 3010, type: !362)
!4457 = !DILocation(line: 3010, column: 54, scope: !4449)
!4458 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4449, file: !355, line: 3011, type: !412)
!4459 = !DILocation(line: 3011, column: 13, scope: !4449)
!4460 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4449, file: !355, line: 3011, type: !412)
!4461 = !DILocation(line: 3011, column: 35, scope: !4449)
!4462 = !DILocation(line: 3013, column: 3, scope: !4449)
!4463 = !DILocation(line: 3022, column: 24, scope: !4449)
!4464 = !DILocation(line: 3022, column: 22, scope: !4449)
!4465 = !DILocation(line: 3023, column: 24, scope: !4449)
!4466 = !DILocation(line: 3023, column: 22, scope: !4449)
!4467 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4449, file: !355, line: 3025, type: !139)
!4468 = !DILocation(line: 3025, column: 8, scope: !4449)
!4469 = !DILocation(line: 3026, column: 25, scope: !4449)
!4470 = !DILocation(line: 3026, column: 35, scope: !4449)
!4471 = !DILocation(line: 3026, column: 45, scope: !4449)
!4472 = !DILocation(line: 3027, column: 25, scope: !4449)
!4473 = !DILocation(line: 3029, column: 25, scope: !4449)
!4474 = !DILocation(line: 3029, column: 41, scope: !4449)
!4475 = !DILocation(line: 3026, column: 10, scope: !4449)
!4476 = !DILocation(line: 3026, column: 3, scope: !4449)
!4477 = distinct !DISubprogram(name: "valid_options", scope: !355, file: !355, line: 2986, type: !413, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4478 = !DILocalVariable(name: "co", arg: 1, scope: !4477, file: !355, line: 2986, type: !362)
!4479 = !DILocation(line: 2986, column: 41, scope: !4477)
!4480 = !DILocation(line: 2988, column: 3, scope: !4477)
!4481 = !DILocation(line: 2989, column: 3, scope: !4477)
!4482 = !DILocation(line: 2990, column: 3, scope: !4477)
!4483 = !DILocation(line: 2991, column: 3, scope: !4477)
!4484 = !DILocation(line: 2992, column: 3, scope: !4477)
!4485 = !DILocation(line: 2993, column: 3, scope: !4477)
!4486 = !DILocation(line: 2996, column: 3, scope: !4477)
!4487 = distinct !DISubprogram(name: "copy_internal", scope: !355, file: !355, line: 1882, type: !417, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!4488 = !DILocalVariable(name: "src_name", arg: 1, scope: !4487, file: !355, line: 1882, type: !177)
!4489 = !DILocation(line: 1882, column: 28, scope: !4487)
!4490 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4487, file: !355, line: 1882, type: !177)
!4491 = !DILocation(line: 1882, column: 50, scope: !4487)
!4492 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4487, file: !355, line: 1883, type: !139)
!4493 = !DILocation(line: 1883, column: 21, scope: !4487)
!4494 = !DILocalVariable(name: "parent", arg: 4, scope: !4487, file: !355, line: 1884, type: !419)
!4495 = !DILocation(line: 1884, column: 35, scope: !4487)
!4496 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4487, file: !355, line: 1885, type: !442)
!4497 = !DILocation(line: 1885, column: 33, scope: !4487)
!4498 = !DILocalVariable(name: "x", arg: 6, scope: !4487, file: !355, line: 1886, type: !362)
!4499 = !DILocation(line: 1886, column: 41, scope: !4487)
!4500 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4487, file: !355, line: 1887, type: !139)
!4501 = !DILocation(line: 1887, column: 21, scope: !4487)
!4502 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4487, file: !355, line: 1888, type: !412)
!4503 = !DILocation(line: 1888, column: 22, scope: !4487)
!4504 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4487, file: !355, line: 1889, type: !412)
!4505 = !DILocation(line: 1889, column: 22, scope: !4487)
!4506 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4487, file: !355, line: 1890, type: !412)
!4507 = !DILocation(line: 1890, column: 22, scope: !4487)
!4508 = !DILocalVariable(name: "src_sb", scope: !4487, file: !355, line: 1892, type: !421)
!4509 = !DILocation(line: 1892, column: 15, scope: !4487)
!4510 = !DILocalVariable(name: "dst_sb", scope: !4487, file: !355, line: 1893, type: !421)
!4511 = !DILocation(line: 1893, column: 15, scope: !4487)
!4512 = !DILocalVariable(name: "src_mode", scope: !4487, file: !355, line: 1894, type: !136)
!4513 = !DILocation(line: 1894, column: 10, scope: !4487)
!4514 = !DILocalVariable(name: "dst_mode", scope: !4487, file: !355, line: 1895, type: !136)
!4515 = !DILocation(line: 1895, column: 10, scope: !4487)
!4516 = !DILocalVariable(name: "dst_mode_bits", scope: !4487, file: !355, line: 1896, type: !136)
!4517 = !DILocation(line: 1896, column: 10, scope: !4487)
!4518 = !DILocalVariable(name: "omitted_permissions", scope: !4487, file: !355, line: 1897, type: !136)
!4519 = !DILocation(line: 1897, column: 10, scope: !4487)
!4520 = !DILocalVariable(name: "restore_dst_mode", scope: !4487, file: !355, line: 1898, type: !139)
!4521 = !DILocation(line: 1898, column: 8, scope: !4487)
!4522 = !DILocalVariable(name: "earlier_file", scope: !4487, file: !355, line: 1899, type: !7)
!4523 = !DILocation(line: 1899, column: 9, scope: !4487)
!4524 = !DILocalVariable(name: "dst_backup", scope: !4487, file: !355, line: 1900, type: !7)
!4525 = !DILocation(line: 1900, column: 9, scope: !4487)
!4526 = !DILocalVariable(name: "delayed_ok", scope: !4487, file: !355, line: 1901, type: !139)
!4527 = !DILocation(line: 1901, column: 8, scope: !4487)
!4528 = !DILocalVariable(name: "copied_as_regular", scope: !4487, file: !355, line: 1902, type: !139)
!4529 = !DILocation(line: 1902, column: 8, scope: !4487)
!4530 = !DILocalVariable(name: "dest_is_symlink", scope: !4487, file: !355, line: 1903, type: !139)
!4531 = !DILocation(line: 1903, column: 8, scope: !4487)
!4532 = !DILocalVariable(name: "have_dst_lstat", scope: !4487, file: !355, line: 1904, type: !139)
!4533 = !DILocation(line: 1904, column: 8, scope: !4487)
!4534 = !DILocation(line: 1906, column: 4, scope: !4487)
!4535 = !DILocation(line: 1906, column: 19, scope: !4487)
!4536 = !DILocalVariable(name: "rename_errno", scope: !4487, file: !355, line: 1908, type: !5)
!4537 = !DILocation(line: 1908, column: 7, scope: !4487)
!4538 = !DILocation(line: 1908, column: 22, scope: !4487)
!4539 = !DILocation(line: 1908, column: 25, scope: !4487)
!4540 = !{!2833, !2656, i64 52}
!4541 = !DILocation(line: 1909, column: 7, scope: !4542)
!4542 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 1909, column: 7)
!4543 = !DILocation(line: 1909, column: 10, scope: !4542)
!4544 = !DILocation(line: 1909, column: 7, scope: !4487)
!4545 = !DILocation(line: 1911, column: 11, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4547, file: !355, line: 1911, column: 11)
!4547 = distinct !DILexicalBlock(scope: !4542, file: !355, line: 1910, column: 5)
!4548 = !DILocation(line: 1911, column: 24, scope: !4546)
!4549 = !DILocation(line: 1911, column: 11, scope: !4547)
!4550 = !DILocation(line: 1912, column: 46, scope: !4546)
!4551 = !DILocation(line: 1912, column: 66, scope: !4546)
!4552 = !DILocation(line: 1912, column: 25, scope: !4546)
!4553 = !DILocation(line: 1914, column: 27, scope: !4546)
!4554 = !DILocation(line: 1912, column: 22, scope: !4546)
!4555 = !DILocation(line: 1912, column: 9, scope: !4546)
!4556 = !DILocation(line: 1915, column: 17, scope: !4547)
!4557 = !DILocation(line: 1915, column: 30, scope: !4547)
!4558 = !DILocation(line: 1915, column: 15, scope: !4547)
!4559 = !DILocation(line: 1916, column: 11, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4547, file: !355, line: 1916, column: 11)
!4561 = !DILocation(line: 1916, column: 11, scope: !4547)
!4562 = !DILocation(line: 1917, column: 29, scope: !4560)
!4563 = !DILocation(line: 1917, column: 10, scope: !4560)
!4564 = !DILocation(line: 1917, column: 27, scope: !4560)
!4565 = !DILocation(line: 1917, column: 9, scope: !4560)
!4566 = !DILocation(line: 1918, column: 5, scope: !4547)
!4567 = !DILocation(line: 1920, column: 7, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 1920, column: 7)
!4569 = !DILocation(line: 1920, column: 20, scope: !4568)
!4570 = !DILocation(line: 1920, column: 7, scope: !4487)
!4571 = !DILocation(line: 1921, column: 10, scope: !4568)
!4572 = !DILocation(line: 1921, column: 13, scope: !4568)
!4573 = !{!2833, !2763, i64 49}
!4574 = !DILocation(line: 1922, column: 9, scope: !4568)
!4575 = !DILocation(line: 1922, column: 22, scope: !4568)
!4576 = !DILocation(line: 1922, column: 32, scope: !4568)
!4577 = !DILocation(line: 1922, column: 35, scope: !4568)
!4578 = !DILocation(line: 1922, column: 38, scope: !4568)
!4579 = !DILocation(line: 1922, column: 50, scope: !4568)
!4580 = !DILocalVariable(name: "name", scope: !4581, file: !355, line: 1924, type: !177)
!4581 = distinct !DILexicalBlock(scope: !4568, file: !355, line: 1923, column: 5)
!4582 = !DILocation(line: 1924, column: 19, scope: !4581)
!4583 = !DILocation(line: 1924, column: 26, scope: !4581)
!4584 = !DILocation(line: 1924, column: 39, scope: !4581)
!4585 = !DILocation(line: 1924, column: 46, scope: !4581)
!4586 = !DILocation(line: 1924, column: 57, scope: !4581)
!4587 = !DILocalVariable(name: "fstatat_flags", scope: !4581, file: !355, line: 1925, type: !5)
!4588 = !DILocation(line: 1925, column: 11, scope: !4581)
!4589 = !DILocation(line: 1926, column: 11, scope: !4581)
!4590 = !DILocation(line: 1926, column: 14, scope: !4581)
!4591 = !DILocation(line: 1926, column: 26, scope: !4581)
!4592 = !DILocation(line: 1927, column: 37, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4581, file: !355, line: 1927, column: 11)
!4594 = !DILocation(line: 1927, column: 52, scope: !4593)
!4595 = !DILocation(line: 1927, column: 11, scope: !4593)
!4596 = !DILocation(line: 1927, column: 67, scope: !4593)
!4597 = !DILocation(line: 1927, column: 11, scope: !4581)
!4598 = !DILocation(line: 1929, column: 21, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4593, file: !355, line: 1928, column: 9)
!4600 = !DILocation(line: 1929, column: 28, scope: !4599)
!4601 = !DILocation(line: 1929, column: 49, scope: !4599)
!4602 = !DILocation(line: 1929, column: 11, scope: !4599)
!4603 = !DILocation(line: 1930, column: 11, scope: !4599)
!4604 = !DILocation(line: 1933, column: 25, scope: !4581)
!4605 = !DILocation(line: 1933, column: 16, scope: !4581)
!4606 = !DILocation(line: 1935, column: 11, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4581, file: !355, line: 1935, column: 11)
!4608 = !DILocation(line: 1935, column: 30, scope: !4607)
!4609 = !DILocation(line: 1935, column: 34, scope: !4607)
!4610 = !DILocation(line: 1935, column: 37, scope: !4607)
!4611 = !DILocation(line: 1935, column: 11, scope: !4581)
!4612 = !DILocation(line: 1937, column: 26, scope: !4613)
!4613 = distinct !DILexicalBlock(scope: !4607, file: !355, line: 1936, column: 9)
!4614 = !DILocation(line: 1937, column: 29, scope: !4613)
!4615 = !DILocation(line: 1937, column: 24, scope: !4613)
!4616 = !DILocation(line: 1938, column: 20, scope: !4613)
!4617 = !DILocation(line: 1939, column: 20, scope: !4613)
!4618 = !DILocation(line: 1940, column: 18, scope: !4613)
!4619 = !DILocation(line: 1937, column: 11, scope: !4613)
!4620 = !DILocation(line: 1941, column: 11, scope: !4613)
!4621 = !DILocation(line: 1943, column: 5, scope: !4581)
!4622 = !DILocation(line: 1956, column: 7, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 1956, column: 7)
!4624 = !DILocation(line: 1956, column: 24, scope: !4623)
!4625 = !DILocation(line: 1956, column: 27, scope: !4623)
!4626 = !DILocation(line: 1956, column: 30, scope: !4623)
!4627 = !DILocation(line: 1956, column: 7, scope: !4487)
!4628 = !DILocation(line: 1958, column: 14, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4630, file: !355, line: 1958, column: 12)
!4630 = distinct !DILexicalBlock(scope: !4623, file: !355, line: 1957, column: 5)
!4631 = !DILocation(line: 1959, column: 12, scope: !4629)
!4632 = !DILocation(line: 1959, column: 15, scope: !4629)
!4633 = !DILocation(line: 1959, column: 18, scope: !4629)
!4634 = !DILocation(line: 1959, column: 30, scope: !4629)
!4635 = !DILocation(line: 1960, column: 12, scope: !4629)
!4636 = !DILocation(line: 1960, column: 26, scope: !4629)
!4637 = !DILocation(line: 1960, column: 29, scope: !4629)
!4638 = !DILocation(line: 1960, column: 39, scope: !4629)
!4639 = !DILocation(line: 1960, column: 15, scope: !4629)
!4640 = !DILocation(line: 1958, column: 12, scope: !4630)
!4641 = !DILocation(line: 1962, column: 24, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4629, file: !355, line: 1961, column: 9)
!4643 = !DILocation(line: 1963, column: 18, scope: !4642)
!4644 = !DILocation(line: 1962, column: 11, scope: !4642)
!4645 = !DILocation(line: 1964, column: 11, scope: !4642)
!4646 = !DILocation(line: 1967, column: 20, scope: !4630)
!4647 = !DILocation(line: 1967, column: 23, scope: !4630)
!4648 = !DILocation(line: 1967, column: 33, scope: !4630)
!4649 = !DILocation(line: 1967, column: 7, scope: !4630)
!4650 = !DILocation(line: 1968, column: 5, scope: !4630)
!4651 = !DILocalVariable(name: "dereference", scope: !4487, file: !355, line: 1970, type: !139)
!4652 = !DILocation(line: 1970, column: 8, scope: !4487)
!4653 = !DILocation(line: 1970, column: 42, scope: !4487)
!4654 = !DILocation(line: 1970, column: 45, scope: !4487)
!4655 = !DILocation(line: 1970, column: 22, scope: !4487)
!4656 = !DILocation(line: 1972, column: 8, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 1972, column: 7)
!4658 = !DILocation(line: 1972, column: 7, scope: !4487)
!4659 = !DILocation(line: 1974, column: 14, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4661, file: !355, line: 1974, column: 11)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !355, line: 1973, column: 5)
!4662 = !DILocation(line: 1974, column: 27, scope: !4660)
!4663 = !DILocation(line: 1974, column: 37, scope: !4660)
!4664 = !DILocation(line: 1974, column: 40, scope: !4660)
!4665 = !DILocation(line: 1974, column: 43, scope: !4660)
!4666 = !DILocation(line: 1974, column: 55, scope: !4660)
!4667 = !DILocation(line: 1974, column: 11, scope: !4661)
!4668 = !DILocalVariable(name: "use_lstat", scope: !4669, file: !355, line: 1982, type: !139)
!4669 = distinct !DILexicalBlock(scope: !4660, file: !355, line: 1975, column: 9)
!4670 = !DILocation(line: 1982, column: 16, scope: !4669)
!4671 = !DILocation(line: 1983, column: 19, scope: !4669)
!4672 = !DILocation(line: 1984, column: 17, scope: !4669)
!4673 = !DILocation(line: 1984, column: 23, scope: !4669)
!4674 = !DILocation(line: 1984, column: 26, scope: !4669)
!4675 = !DILocation(line: 1985, column: 21, scope: !4669)
!4676 = !DILocation(line: 1985, column: 24, scope: !4669)
!4677 = !DILocation(line: 1985, column: 43, scope: !4669)
!4678 = !DILocation(line: 1985, column: 46, scope: !4669)
!4679 = !DILocation(line: 1986, column: 16, scope: !4669)
!4680 = !DILocation(line: 1986, column: 19, scope: !4669)
!4681 = !DILocation(line: 1986, column: 22, scope: !4669)
!4682 = !DILocation(line: 1986, column: 32, scope: !4669)
!4683 = !DILocation(line: 1986, column: 35, scope: !4669)
!4684 = !DILocation(line: 1986, column: 38, scope: !4669)
!4685 = !DILocation(line: 1986, column: 52, scope: !4669)
!4686 = !DILocation(line: 1986, column: 55, scope: !4669)
!4687 = !DILocation(line: 1986, column: 58, scope: !4669)
!4688 = !DILocation(line: 1987, column: 16, scope: !4669)
!4689 = !DILocation(line: 1987, column: 19, scope: !4669)
!4690 = !DILocation(line: 1987, column: 22, scope: !4669)
!4691 = !DILocation(line: 1987, column: 34, scope: !4669)
!4692 = !DILocation(line: 1988, column: 16, scope: !4669)
!4693 = !DILocation(line: 1988, column: 19, scope: !4669)
!4694 = !DILocation(line: 1988, column: 22, scope: !4669)
!4695 = !DILocalVariable(name: "fstatat_flags", scope: !4669, file: !355, line: 1989, type: !5)
!4696 = !DILocation(line: 1989, column: 15, scope: !4669)
!4697 = !DILocation(line: 1989, column: 31, scope: !4669)
!4698 = !DILocation(line: 1990, column: 41, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4669, file: !355, line: 1990, column: 15)
!4700 = !DILocation(line: 1990, column: 60, scope: !4699)
!4701 = !DILocation(line: 1990, column: 15, scope: !4699)
!4702 = !DILocation(line: 1990, column: 75, scope: !4699)
!4703 = !DILocation(line: 1990, column: 15, scope: !4669)
!4704 = !DILocation(line: 1992, column: 32, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4699, file: !355, line: 1991, column: 13)
!4706 = !DILocation(line: 1992, column: 30, scope: !4705)
!4707 = !DILocation(line: 1993, column: 28, scope: !4705)
!4708 = !DILocation(line: 1994, column: 13, scope: !4705)
!4709 = !DILocation(line: 1997, column: 19, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4711, file: !355, line: 1997, column: 19)
!4711 = distinct !DILexicalBlock(scope: !4699, file: !355, line: 1996, column: 13)
!4712 = !DILocation(line: 1997, column: 25, scope: !4710)
!4713 = !DILocation(line: 1997, column: 34, scope: !4710)
!4714 = !DILocation(line: 1997, column: 37, scope: !4710)
!4715 = !DILocation(line: 1997, column: 40, scope: !4710)
!4716 = !DILocation(line: 1997, column: 19, scope: !4711)
!4717 = !DILocation(line: 1999, column: 24, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4710, file: !355, line: 1999, column: 24)
!4719 = !DILocation(line: 1999, column: 30, scope: !4718)
!4720 = !DILocation(line: 1999, column: 24, scope: !4710)
!4721 = !DILocation(line: 2001, column: 29, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4718, file: !355, line: 2000, column: 17)
!4723 = !DILocation(line: 2001, column: 36, scope: !4722)
!4724 = !DILocation(line: 2001, column: 57, scope: !4722)
!4725 = !DILocation(line: 2001, column: 19, scope: !4722)
!4726 = !DILocation(line: 2002, column: 19, scope: !4722)
!4727 = !DILocation(line: 2005, column: 25, scope: !4718)
!4728 = !DILocation(line: 2007, column: 9, scope: !4669)
!4729 = !DILocation(line: 2009, column: 11, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4661, file: !355, line: 2009, column: 11)
!4731 = !DILocation(line: 2009, column: 24, scope: !4730)
!4732 = !DILocation(line: 2009, column: 11, scope: !4661)
!4733 = !DILocalVariable(name: "return_now", scope: !4734, file: !355, line: 2011, type: !139)
!4734 = distinct !DILexicalBlock(scope: !4730, file: !355, line: 2010, column: 9)
!4735 = !DILocation(line: 2011, column: 16, scope: !4734)
!4736 = !DILocation(line: 2013, column: 15, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2013, column: 15)
!4738 = !DILocation(line: 2013, column: 18, scope: !4737)
!4739 = !DILocation(line: 2013, column: 30, scope: !4737)
!4740 = !DILocation(line: 2014, column: 15, scope: !4737)
!4741 = !DILocation(line: 2014, column: 34, scope: !4737)
!4742 = !DILocation(line: 2014, column: 53, scope: !4737)
!4743 = !DILocation(line: 2015, column: 34, scope: !4737)
!4744 = !DILocation(line: 2014, column: 20, scope: !4737)
!4745 = !DILocation(line: 2013, column: 15, scope: !4734)
!4746 = !DILocation(line: 2017, column: 28, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4737, file: !355, line: 2016, column: 13)
!4748 = !DILocation(line: 2018, column: 22, scope: !4747)
!4749 = !DILocation(line: 2018, column: 47, scope: !4747)
!4750 = !DILocation(line: 2017, column: 15, scope: !4747)
!4751 = !DILocation(line: 2019, column: 15, scope: !4747)
!4752 = !DILocation(line: 2022, column: 15, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2022, column: 15)
!4754 = !DILocation(line: 2022, column: 18, scope: !4753)
!4755 = !DILocation(line: 2022, column: 25, scope: !4753)
!4756 = !DILocation(line: 2022, column: 29, scope: !4753)
!4757 = !DILocation(line: 2022, column: 15, scope: !4734)
!4758 = !DILocalVariable(name: "options", scope: !4759, file: !355, line: 2028, type: !5)
!4759 = distinct !DILexicalBlock(scope: !4753, file: !355, line: 2023, column: 13)
!4760 = !DILocation(line: 2028, column: 19, scope: !4759)
!4761 = !DILocation(line: 2028, column: 31, scope: !4759)
!4762 = !DILocation(line: 2028, column: 34, scope: !4759)
!4763 = !DILocation(line: 2029, column: 31, scope: !4759)
!4764 = !DILocation(line: 2029, column: 37, scope: !4759)
!4765 = !DILocation(line: 2029, column: 40, scope: !4759)
!4766 = !DILocation(line: 2030, column: 37, scope: !4759)
!4767 = !DILocation(line: 2030, column: 47, scope: !4759)
!4768 = !{!2935, !2936, i64 0}
!4769 = !DILocation(line: 2030, column: 64, scope: !4759)
!4770 = !DILocation(line: 2030, column: 54, scope: !4759)
!4771 = !DILocation(line: 0, scope: !4759)
!4772 = !DILocation(line: 2029, column: 34, scope: !4759)
!4773 = !DILocation(line: 2028, column: 30, scope: !4759)
!4774 = !DILocation(line: 2034, column: 34, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4759, file: !355, line: 2034, column: 19)
!4776 = !DILocation(line: 2034, column: 62, scope: !4775)
!4777 = !DILocation(line: 2034, column: 24, scope: !4775)
!4778 = !DILocation(line: 2034, column: 21, scope: !4775)
!4779 = !DILocation(line: 2034, column: 19, scope: !4759)
!4780 = !DILocation(line: 2040, column: 23, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !355, line: 2040, column: 23)
!4782 = distinct !DILexicalBlock(scope: !4775, file: !355, line: 2035, column: 17)
!4783 = !DILocation(line: 2040, column: 23, scope: !4782)
!4784 = !DILocation(line: 2041, column: 22, scope: !4781)
!4785 = !DILocation(line: 2041, column: 39, scope: !4781)
!4786 = !DILocation(line: 2041, column: 21, scope: !4781)
!4787 = !DILocation(line: 2048, column: 51, scope: !4782)
!4788 = !DILocation(line: 2048, column: 68, scope: !4782)
!4789 = !{!2935, !2936, i64 8}
!4790 = !DILocation(line: 2049, column: 58, scope: !4782)
!4791 = !DILocation(line: 2048, column: 34, scope: !4782)
!4792 = !DILocation(line: 2048, column: 32, scope: !4782)
!4793 = !DILocation(line: 2050, column: 23, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4782, file: !355, line: 2050, column: 23)
!4795 = !DILocation(line: 2050, column: 23, scope: !4782)
!4796 = !DILocation(line: 2054, column: 47, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4798, file: !355, line: 2054, column: 27)
!4798 = distinct !DILexicalBlock(scope: !4794, file: !355, line: 2051, column: 21)
!4799 = !DILocation(line: 2054, column: 61, scope: !4797)
!4800 = !DILocation(line: 2055, column: 47, scope: !4797)
!4801 = !DILocation(line: 2055, column: 50, scope: !4797)
!4802 = !DILocation(line: 2055, column: 59, scope: !4797)
!4803 = !DILocation(line: 2054, column: 29, scope: !4797)
!4804 = !DILocation(line: 2054, column: 27, scope: !4798)
!4805 = !DILocation(line: 2057, column: 27, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4797, file: !355, line: 2056, column: 25)
!4807 = !DILocation(line: 2059, column: 21, scope: !4798)
!4808 = !DILocation(line: 2061, column: 19, scope: !4782)
!4809 = !DILocation(line: 2063, column: 13, scope: !4759)
!4810 = !DILocation(line: 2072, column: 15, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2072, column: 15)
!4812 = !DILocation(line: 2072, column: 18, scope: !4811)
!4813 = !DILocation(line: 2072, column: 15, scope: !4734)
!4814 = !DILocation(line: 2074, column: 33, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4816, file: !355, line: 2074, column: 19)
!4816 = distinct !DILexicalBlock(scope: !4811, file: !355, line: 2073, column: 13)
!4817 = !DILocation(line: 2074, column: 36, scope: !4815)
!4818 = !DILocation(line: 2074, column: 19, scope: !4815)
!4819 = !DILocation(line: 2074, column: 19, scope: !4816)
!4820 = !DILocation(line: 2078, column: 23, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4822, file: !355, line: 2078, column: 23)
!4822 = distinct !DILexicalBlock(scope: !4815, file: !355, line: 2075, column: 17)
!4823 = !DILocation(line: 2078, column: 23, scope: !4822)
!4824 = !DILocation(line: 2079, column: 22, scope: !4821)
!4825 = !DILocation(line: 2079, column: 39, scope: !4821)
!4826 = !DILocation(line: 2079, column: 21, scope: !4821)
!4827 = !DILocation(line: 2080, column: 19, scope: !4822)
!4828 = !DILocation(line: 2082, column: 13, scope: !4816)
!4829 = !DILocation(line: 2085, column: 21, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4831, file: !355, line: 2085, column: 19)
!4831 = distinct !DILexicalBlock(scope: !4811, file: !355, line: 2084, column: 13)
!4832 = !DILocation(line: 2086, column: 19, scope: !4830)
!4833 = !DILocation(line: 2086, column: 23, scope: !4830)
!4834 = !DILocation(line: 2086, column: 26, scope: !4830)
!4835 = !DILocation(line: 2086, column: 38, scope: !4830)
!4836 = !DILocation(line: 2087, column: 23, scope: !4830)
!4837 = !DILocation(line: 2087, column: 27, scope: !4830)
!4838 = !DILocation(line: 2087, column: 30, scope: !4830)
!4839 = !DILocation(line: 2087, column: 42, scope: !4830)
!4840 = !DILocation(line: 2088, column: 27, scope: !4830)
!4841 = !DILocation(line: 2088, column: 46, scope: !4830)
!4842 = !DILocation(line: 2088, column: 49, scope: !4830)
!4843 = !DILocation(line: 2088, column: 32, scope: !4830)
!4844 = !DILocation(line: 2085, column: 19, scope: !4831)
!4845 = !DILocation(line: 2089, column: 17, scope: !4830)
!4846 = !DILocation(line: 2092, column: 15, scope: !4847)
!4847 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2092, column: 15)
!4848 = !DILocation(line: 2092, column: 15, scope: !4734)
!4849 = !DILocation(line: 2093, column: 13, scope: !4847)
!4850 = !DILocation(line: 2095, column: 16, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2095, column: 15)
!4852 = !DILocation(line: 2095, column: 15, scope: !4734)
!4853 = !DILocation(line: 2097, column: 19, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4855, file: !355, line: 2097, column: 19)
!4855 = distinct !DILexicalBlock(scope: !4851, file: !355, line: 2096, column: 13)
!4856 = !DILocation(line: 2097, column: 19, scope: !4855)
!4857 = !DILocation(line: 2099, column: 23, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4859, file: !355, line: 2099, column: 23)
!4859 = distinct !DILexicalBlock(scope: !4854, file: !355, line: 2098, column: 17)
!4860 = !DILocation(line: 2099, column: 26, scope: !4858)
!4861 = !DILocation(line: 2099, column: 36, scope: !4858)
!4862 = !DILocation(line: 2099, column: 39, scope: !4858)
!4863 = !DILocation(line: 2099, column: 42, scope: !4858)
!4864 = !DILocation(line: 2099, column: 54, scope: !4858)
!4865 = !DILocation(line: 2099, column: 23, scope: !4859)
!4866 = !DILocation(line: 2103, column: 21, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4858, file: !355, line: 2100, column: 21)
!4868 = !DILocation(line: 2107, column: 24, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4858, file: !355, line: 2105, column: 21)
!4870 = !DILocation(line: 2108, column: 30, scope: !4869)
!4871 = !DILocation(line: 2108, column: 55, scope: !4869)
!4872 = !DILocation(line: 2106, column: 23, scope: !4869)
!4873 = !DILocation(line: 2109, column: 23, scope: !4869)
!4874 = !DILocation(line: 2111, column: 17, scope: !4859)
!4875 = !DILocation(line: 2120, column: 19, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4855, file: !355, line: 2120, column: 19)
!4877 = !DILocation(line: 2121, column: 19, scope: !4876)
!4878 = !DILocation(line: 2121, column: 22, scope: !4876)
!4879 = !DILocation(line: 2121, column: 25, scope: !4876)
!4880 = !DILocation(line: 2121, column: 37, scope: !4876)
!4881 = !DILocation(line: 2122, column: 19, scope: !4876)
!4882 = !DILocation(line: 2122, column: 33, scope: !4876)
!4883 = !DILocation(line: 2122, column: 36, scope: !4876)
!4884 = !DILocation(line: 2122, column: 47, scope: !4876)
!4885 = !DILocation(line: 2122, column: 22, scope: !4876)
!4886 = !DILocation(line: 2120, column: 19, scope: !4855)
!4887 = !DILocation(line: 2125, column: 26, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4876, file: !355, line: 2123, column: 17)
!4889 = !DILocation(line: 2126, column: 26, scope: !4888)
!4890 = !DILocation(line: 2126, column: 51, scope: !4888)
!4891 = !DILocation(line: 2124, column: 19, scope: !4888)
!4892 = !DILocation(line: 2127, column: 19, scope: !4888)
!4893 = !DILocation(line: 2129, column: 13, scope: !4855)
!4894 = !DILocation(line: 2131, column: 16, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2131, column: 15)
!4896 = !DILocation(line: 2131, column: 15, scope: !4734)
!4897 = !DILocation(line: 2133, column: 19, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4899, file: !355, line: 2133, column: 19)
!4899 = distinct !DILexicalBlock(scope: !4895, file: !355, line: 2132, column: 13)
!4900 = !DILocation(line: 2133, column: 19, scope: !4899)
!4901 = !DILocation(line: 2135, column: 23, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4903, file: !355, line: 2135, column: 23)
!4903 = distinct !DILexicalBlock(scope: !4898, file: !355, line: 2134, column: 17)
!4904 = !DILocation(line: 2135, column: 26, scope: !4902)
!4905 = !DILocation(line: 2135, column: 36, scope: !4902)
!4906 = !DILocation(line: 2135, column: 39, scope: !4902)
!4907 = !DILocation(line: 2135, column: 42, scope: !4902)
!4908 = !DILocation(line: 2135, column: 54, scope: !4902)
!4909 = !DILocation(line: 2135, column: 23, scope: !4903)
!4910 = !DILocation(line: 2139, column: 21, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4902, file: !355, line: 2136, column: 21)
!4912 = !DILocation(line: 2143, column: 26, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4902, file: !355, line: 2141, column: 21)
!4914 = !DILocation(line: 2144, column: 30, scope: !4913)
!4915 = !DILocation(line: 2142, column: 23, scope: !4913)
!4916 = !DILocation(line: 2145, column: 23, scope: !4913)
!4917 = !DILocation(line: 2147, column: 17, scope: !4903)
!4918 = !DILocation(line: 2148, column: 13, scope: !4899)
!4919 = !DILocation(line: 2150, column: 15, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2150, column: 15)
!4921 = !DILocation(line: 2150, column: 18, scope: !4920)
!4922 = !DILocation(line: 2150, column: 15, scope: !4734)
!4923 = !DILocation(line: 2153, column: 19, scope: !4924)
!4924 = distinct !DILexicalBlock(scope: !4925, file: !355, line: 2153, column: 19)
!4925 = distinct !DILexicalBlock(scope: !4920, file: !355, line: 2151, column: 13)
!4926 = !DILocation(line: 2153, column: 44, scope: !4924)
!4927 = !DILocation(line: 2153, column: 48, scope: !4924)
!4928 = !DILocation(line: 2154, column: 19, scope: !4924)
!4929 = !DILocation(line: 2154, column: 22, scope: !4924)
!4930 = !DILocation(line: 2154, column: 25, scope: !4924)
!4931 = !DILocation(line: 2154, column: 37, scope: !4924)
!4932 = !DILocation(line: 2153, column: 19, scope: !4925)
!4933 = !DILocation(line: 2157, column: 24, scope: !4934)
!4934 = distinct !DILexicalBlock(scope: !4924, file: !355, line: 2155, column: 17)
!4935 = !DILocation(line: 2158, column: 26, scope: !4934)
!4936 = !DILocation(line: 2158, column: 50, scope: !4934)
!4937 = !DILocation(line: 2156, column: 19, scope: !4934)
!4938 = !DILocation(line: 2159, column: 19, scope: !4934)
!4939 = !DILocation(line: 2161, column: 13, scope: !4925)
!4940 = !DILocalVariable(name: "srcbase", scope: !4734, file: !355, line: 2163, type: !177)
!4941 = !DILocation(line: 2163, column: 23, scope: !4734)
!4942 = !DILocation(line: 2164, column: 15, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4734, file: !355, line: 2164, column: 15)
!4944 = !DILocation(line: 2164, column: 18, scope: !4943)
!4945 = !DILocation(line: 2164, column: 30, scope: !4943)
!4946 = !DILocation(line: 2167, column: 15, scope: !4943)
!4947 = !DILocation(line: 2167, column: 61, scope: !4943)
!4948 = !DILocation(line: 2167, column: 45, scope: !4943)
!4949 = !DILocation(line: 2167, column: 43, scope: !4943)
!4950 = !DILocation(line: 2167, column: 20, scope: !4943)
!4951 = !DILocation(line: 2173, column: 15, scope: !4943)
!4952 = !DILocation(line: 2173, column: 19, scope: !4943)
!4953 = !DILocation(line: 2173, column: 22, scope: !4943)
!4954 = !DILocation(line: 2173, column: 32, scope: !4943)
!4955 = !DILocation(line: 2173, column: 37, scope: !4943)
!4956 = !DILocation(line: 2164, column: 15, scope: !4734)
!4957 = !DILocation(line: 2179, column: 19, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !355, line: 2179, column: 19)
!4959 = distinct !DILexicalBlock(scope: !4943, file: !355, line: 2174, column: 13)
!4960 = !DILocation(line: 2179, column: 22, scope: !4958)
!4961 = !DILocation(line: 2179, column: 34, scope: !4958)
!4962 = !DILocation(line: 2180, column: 19, scope: !4958)
!4963 = !DILocation(line: 2180, column: 44, scope: !4958)
!4964 = !DILocation(line: 2180, column: 62, scope: !4958)
!4965 = !DILocation(line: 2180, column: 22, scope: !4958)
!4966 = !DILocation(line: 2179, column: 19, scope: !4959)
!4967 = !DILocalVariable(name: "fmt", scope: !4968, file: !355, line: 2182, type: !177)
!4968 = distinct !DILexicalBlock(scope: !4958, file: !355, line: 2181, column: 17)
!4969 = !DILocation(line: 2182, column: 31, scope: !4968)
!4970 = !DILocation(line: 2183, column: 26, scope: !4968)
!4971 = !DILocation(line: 2183, column: 29, scope: !4968)
!4972 = !DILocation(line: 2184, column: 20, scope: !4968)
!4973 = !DILocation(line: 2185, column: 20, scope: !4968)
!4974 = !DILocation(line: 2183, column: 23, scope: !4968)
!4975 = !DILocation(line: 2186, column: 32, scope: !4968)
!4976 = !DILocation(line: 2187, column: 26, scope: !4968)
!4977 = !DILocation(line: 2188, column: 26, scope: !4968)
!4978 = !DILocation(line: 2186, column: 19, scope: !4968)
!4979 = !DILocation(line: 2189, column: 19, scope: !4968)
!4980 = !DILocalVariable(name: "tmp_backup", scope: !4959, file: !355, line: 2192, type: !7)
!4981 = !DILocation(line: 2192, column: 21, scope: !4959)
!4982 = !DILocation(line: 2192, column: 64, scope: !4959)
!4983 = !DILocation(line: 2193, column: 54, scope: !4959)
!4984 = !DILocation(line: 2193, column: 57, scope: !4959)
!4985 = !DILocation(line: 2192, column: 34, scope: !4959)
!4986 = !DILocation(line: 2200, column: 19, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4959, file: !355, line: 2200, column: 19)
!4988 = !DILocation(line: 2200, column: 19, scope: !4959)
!4989 = !DILocation(line: 2202, column: 19, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4987, file: !355, line: 2201, column: 17)
!4991 = !DILocalVariable(name: "__old", scope: !4992, file: !355, line: 2202, type: !177)
!4992 = distinct !DILexicalBlock(scope: !4993, file: !355, line: 2202, column: 19)
!4993 = distinct !DILexicalBlock(scope: !4990, file: !355, line: 2202, column: 19)
!4994 = !DILocation(line: 2202, column: 19, scope: !4992)
!4995 = !DILocalVariable(name: "__len", scope: !4992, file: !355, line: 2202, type: !52)
!4996 = !DILocalVariable(name: "__new", scope: !4992, file: !355, line: 2202, type: !7)
!4997 = !DILocation(line: 2202, column: 19, scope: !4993)
!4998 = !DILocation(line: 2203, column: 25, scope: !4990)
!4999 = !DILocation(line: 2203, column: 19, scope: !4990)
!5000 = !DILocation(line: 2204, column: 17, scope: !4990)
!5001 = !DILocation(line: 2205, column: 24, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !4987, file: !355, line: 2205, column: 24)
!5003 = !DILocation(line: 2205, column: 30, scope: !5002)
!5004 = !DILocation(line: 2205, column: 24, scope: !4987)
!5005 = !DILocation(line: 2207, column: 29, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !355, line: 2206, column: 17)
!5007 = !DILocation(line: 2207, column: 36, scope: !5006)
!5008 = !DILocation(line: 2207, column: 59, scope: !5006)
!5009 = !DILocation(line: 2207, column: 19, scope: !5006)
!5010 = !DILocation(line: 2208, column: 19, scope: !5006)
!5011 = !DILocation(line: 2210, column: 23, scope: !4959)
!5012 = !DILocation(line: 2211, column: 13, scope: !4959)
!5013 = !DILocation(line: 2212, column: 22, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !4943, file: !355, line: 2212, column: 20)
!5015 = !DILocation(line: 2214, column: 20, scope: !5014)
!5016 = !DILocation(line: 2214, column: 25, scope: !5014)
!5017 = !DILocation(line: 2214, column: 28, scope: !5014)
!5018 = !DILocation(line: 2215, column: 20, scope: !5014)
!5019 = !DILocation(line: 2215, column: 24, scope: !5014)
!5020 = !DILocation(line: 2215, column: 27, scope: !5014)
!5021 = !DILocation(line: 2216, column: 24, scope: !5014)
!5022 = !DILocation(line: 2216, column: 28, scope: !5014)
!5023 = !DILocation(line: 2216, column: 31, scope: !5014)
!5024 = !DILocation(line: 2216, column: 46, scope: !5014)
!5025 = !DILocation(line: 2216, column: 60, scope: !5014)
!5026 = !{!2935, !2936, i64 16}
!5027 = !DILocation(line: 2216, column: 51, scope: !5014)
!5028 = !DILocation(line: 2217, column: 24, scope: !5014)
!5029 = !DILocation(line: 2217, column: 28, scope: !5014)
!5030 = !DILocation(line: 2217, column: 31, scope: !5014)
!5031 = !DILocation(line: 2217, column: 43, scope: !5014)
!5032 = !DILocation(line: 2218, column: 28, scope: !5014)
!5033 = !DILocation(line: 2218, column: 33, scope: !5014)
!5034 = !DILocation(line: 2212, column: 20, scope: !4943)
!5035 = !DILocation(line: 2221, column: 27, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5037, file: !355, line: 2221, column: 19)
!5037 = distinct !DILexicalBlock(scope: !5014, file: !355, line: 2220, column: 13)
!5038 = !DILocation(line: 2221, column: 19, scope: !5036)
!5039 = !DILocation(line: 2221, column: 37, scope: !5036)
!5040 = !DILocation(line: 2221, column: 42, scope: !5036)
!5041 = !DILocation(line: 2221, column: 45, scope: !5036)
!5042 = !DILocation(line: 2221, column: 51, scope: !5036)
!5043 = !DILocation(line: 2221, column: 19, scope: !5037)
!5044 = !DILocation(line: 2223, column: 29, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5036, file: !355, line: 2222, column: 17)
!5046 = !DILocation(line: 2223, column: 36, scope: !5045)
!5047 = !DILocation(line: 2223, column: 59, scope: !5045)
!5048 = !DILocation(line: 2223, column: 19, scope: !5045)
!5049 = !DILocation(line: 2224, column: 19, scope: !5045)
!5050 = !DILocation(line: 2226, column: 23, scope: !5037)
!5051 = !DILocation(line: 2227, column: 19, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5037, file: !355, line: 2227, column: 19)
!5053 = !DILocation(line: 2227, column: 22, scope: !5052)
!5054 = !DILocation(line: 2227, column: 19, scope: !5037)
!5055 = !DILocation(line: 2228, column: 25, scope: !5052)
!5056 = !DILocation(line: 2228, column: 44, scope: !5052)
!5057 = !DILocation(line: 2228, column: 17, scope: !5052)
!5058 = !DILocation(line: 2229, column: 13, scope: !5037)
!5059 = !DILocation(line: 2230, column: 9, scope: !4734)
!5060 = !DILocation(line: 2231, column: 5, scope: !4661)
!5061 = !DILocation(line: 2235, column: 7, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2235, column: 7)
!5063 = !DILocation(line: 2236, column: 7, scope: !5062)
!5064 = !DILocation(line: 2236, column: 10, scope: !5062)
!5065 = !DILocation(line: 2236, column: 13, scope: !5062)
!5066 = !DILocation(line: 2237, column: 7, scope: !5062)
!5067 = !DILocation(line: 2237, column: 12, scope: !5062)
!5068 = !DILocation(line: 2237, column: 15, scope: !5062)
!5069 = !DILocation(line: 2238, column: 7, scope: !5062)
!5070 = !DILocation(line: 2238, column: 10, scope: !5062)
!5071 = !DILocation(line: 2238, column: 13, scope: !5062)
!5072 = !DILocation(line: 2238, column: 25, scope: !5062)
!5073 = !DILocation(line: 2235, column: 7, scope: !4487)
!5074 = !DILocalVariable(name: "lstat_ok", scope: !5075, file: !355, line: 2240, type: !139)
!5075 = distinct !DILexicalBlock(scope: !5062, file: !355, line: 2239, column: 5)
!5076 = !DILocation(line: 2240, column: 12, scope: !5075)
!5077 = !DILocalVariable(name: "tmp_buf", scope: !5075, file: !355, line: 2241, type: !421)
!5078 = !DILocation(line: 2241, column: 19, scope: !5075)
!5079 = !DILocalVariable(name: "dst_lstat_sb", scope: !5075, file: !355, line: 2242, type: !450)
!5080 = !DILocation(line: 2242, column: 20, scope: !5075)
!5081 = !DILocation(line: 2246, column: 11, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5075, file: !355, line: 2246, column: 11)
!5083 = !DILocation(line: 2246, column: 11, scope: !5075)
!5084 = !DILocation(line: 2247, column: 22, scope: !5082)
!5085 = !DILocation(line: 2247, column: 9, scope: !5082)
!5086 = !DILocation(line: 2250, column: 22, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5088, file: !355, line: 2250, column: 15)
!5088 = distinct !DILexicalBlock(scope: !5082, file: !355, line: 2249, column: 9)
!5089 = !DILocation(line: 2250, column: 15, scope: !5087)
!5090 = !DILocation(line: 2250, column: 42, scope: !5087)
!5091 = !DILocation(line: 2250, column: 15, scope: !5088)
!5092 = !DILocation(line: 2251, column: 26, scope: !5087)
!5093 = !DILocation(line: 2251, column: 13, scope: !5087)
!5094 = !DILocation(line: 2253, column: 22, scope: !5087)
!5095 = !DILocation(line: 2257, column: 11, scope: !5096)
!5096 = distinct !DILexicalBlock(scope: !5075, file: !355, line: 2257, column: 11)
!5097 = !DILocation(line: 2258, column: 11, scope: !5096)
!5098 = !DILocation(line: 2258, column: 14, scope: !5096)
!5099 = !DILocation(line: 2259, column: 11, scope: !5096)
!5100 = !DILocation(line: 2259, column: 25, scope: !5096)
!5101 = !DILocation(line: 2259, column: 28, scope: !5096)
!5102 = !DILocation(line: 2259, column: 39, scope: !5096)
!5103 = !DILocation(line: 2259, column: 49, scope: !5096)
!5104 = !DILocation(line: 2259, column: 14, scope: !5096)
!5105 = !DILocation(line: 2257, column: 11, scope: !5075)
!5106 = !DILocation(line: 2262, column: 18, scope: !5107)
!5107 = distinct !DILexicalBlock(scope: !5096, file: !355, line: 2260, column: 9)
!5108 = !DILocation(line: 2263, column: 18, scope: !5107)
!5109 = !DILocation(line: 2263, column: 43, scope: !5107)
!5110 = !DILocation(line: 2261, column: 11, scope: !5107)
!5111 = !DILocation(line: 2264, column: 11, scope: !5107)
!5112 = !DILocation(line: 2266, column: 5, scope: !5075)
!5113 = !DILocation(line: 2272, column: 7, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2272, column: 7)
!5115 = !DILocation(line: 2272, column: 10, scope: !5114)
!5116 = !DILocation(line: 2272, column: 18, scope: !5114)
!5117 = !DILocation(line: 2272, column: 22, scope: !5114)
!5118 = !DILocation(line: 2272, column: 25, scope: !5114)
!5119 = !DILocation(line: 2272, column: 35, scope: !5114)
!5120 = !DILocation(line: 2272, column: 39, scope: !5114)
!5121 = !DILocation(line: 2272, column: 7, scope: !4487)
!5122 = !DILocation(line: 2273, column: 19, scope: !5114)
!5123 = !DILocation(line: 2273, column: 29, scope: !5114)
!5124 = !DILocation(line: 2273, column: 39, scope: !5114)
!5125 = !DILocation(line: 2273, column: 5, scope: !5114)
!5126 = !DILocation(line: 2305, column: 7, scope: !5127)
!5127 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2305, column: 7)
!5128 = !DILocation(line: 2305, column: 20, scope: !5127)
!5129 = !DILocation(line: 2305, column: 7, scope: !4487)
!5130 = !DILocation(line: 2306, column: 18, scope: !5127)
!5131 = !DILocation(line: 2306, column: 5, scope: !5127)
!5132 = !DILocation(line: 2307, column: 12, scope: !5133)
!5133 = distinct !DILexicalBlock(scope: !5127, file: !355, line: 2307, column: 12)
!5134 = !DILocation(line: 2307, column: 15, scope: !5133)
!5135 = !DILocation(line: 2307, column: 25, scope: !5133)
!5136 = !DILocation(line: 2307, column: 28, scope: !5133)
!5137 = !DILocation(line: 2307, column: 12, scope: !5127)
!5138 = !DILocation(line: 2309, column: 11, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !355, line: 2309, column: 11)
!5140 = distinct !DILexicalBlock(scope: !5133, file: !355, line: 2308, column: 5)
!5141 = !DILocation(line: 2309, column: 11, scope: !5140)
!5142 = !DILocation(line: 2310, column: 41, scope: !5139)
!5143 = !DILocation(line: 2310, column: 58, scope: !5139)
!5144 = !DILocation(line: 2310, column: 73, scope: !5139)
!5145 = !DILocation(line: 2310, column: 24, scope: !5139)
!5146 = !DILocation(line: 2310, column: 22, scope: !5139)
!5147 = !DILocation(line: 2310, column: 9, scope: !5139)
!5148 = !DILocation(line: 2312, column: 51, scope: !5139)
!5149 = !DILocation(line: 2312, column: 66, scope: !5139)
!5150 = !DILocation(line: 2312, column: 24, scope: !5139)
!5151 = !DILocation(line: 2312, column: 22, scope: !5139)
!5152 = !DILocation(line: 2313, column: 5, scope: !5140)
!5153 = !DILocation(line: 2314, column: 12, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5133, file: !355, line: 2314, column: 12)
!5155 = !DILocation(line: 2314, column: 15, scope: !5154)
!5156 = !DILocation(line: 2314, column: 25, scope: !5154)
!5157 = !DILocation(line: 2314, column: 35, scope: !5154)
!5158 = !DILocation(line: 2314, column: 44, scope: !5154)
!5159 = !DILocation(line: 2314, column: 12, scope: !5133)
!5160 = !DILocation(line: 2316, column: 49, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5154, file: !355, line: 2315, column: 5)
!5162 = !DILocation(line: 2316, column: 64, scope: !5161)
!5163 = !DILocation(line: 2316, column: 22, scope: !5161)
!5164 = !DILocation(line: 2316, column: 20, scope: !5161)
!5165 = !DILocation(line: 2317, column: 5, scope: !5161)
!5166 = !DILocation(line: 2318, column: 12, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5154, file: !355, line: 2318, column: 12)
!5168 = !DILocation(line: 2318, column: 15, scope: !5167)
!5169 = !DILocation(line: 2319, column: 12, scope: !5167)
!5170 = !DILocation(line: 2319, column: 16, scope: !5167)
!5171 = !DILocation(line: 2319, column: 19, scope: !5167)
!5172 = !DILocation(line: 2320, column: 12, scope: !5167)
!5173 = !DILocation(line: 2320, column: 27, scope: !5167)
!5174 = !DILocation(line: 2320, column: 18, scope: !5167)
!5175 = !DILocation(line: 2321, column: 16, scope: !5167)
!5176 = !DILocation(line: 2321, column: 20, scope: !5167)
!5177 = !DILocation(line: 2322, column: 20, scope: !5167)
!5178 = !DILocation(line: 2322, column: 23, scope: !5167)
!5179 = !DILocation(line: 2322, column: 26, scope: !5167)
!5180 = !DILocation(line: 2322, column: 38, scope: !5167)
!5181 = !DILocation(line: 2323, column: 16, scope: !5167)
!5182 = !DILocation(line: 2323, column: 19, scope: !5167)
!5183 = !DILocation(line: 2323, column: 22, scope: !5167)
!5184 = !DILocation(line: 2323, column: 34, scope: !5167)
!5185 = !DILocation(line: 2318, column: 12, scope: !5154)
!5186 = !DILocation(line: 2325, column: 39, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !5167, file: !355, line: 2324, column: 5)
!5188 = !DILocation(line: 2325, column: 56, scope: !5187)
!5189 = !DILocation(line: 2325, column: 71, scope: !5187)
!5190 = !DILocation(line: 2325, column: 22, scope: !5187)
!5191 = !DILocation(line: 2325, column: 20, scope: !5187)
!5192 = !DILocation(line: 2326, column: 5, scope: !5187)
!5193 = !DILocation(line: 2331, column: 7, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2331, column: 7)
!5195 = !DILocation(line: 2331, column: 7, scope: !4487)
!5196 = !DILocation(line: 2336, column: 11, scope: !5197)
!5197 = distinct !DILexicalBlock(scope: !5198, file: !355, line: 2336, column: 11)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !355, line: 2332, column: 5)
!5199 = !DILocation(line: 2336, column: 11, scope: !5198)
!5200 = !DILocation(line: 2340, column: 26, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5202, file: !355, line: 2340, column: 15)
!5202 = distinct !DILexicalBlock(scope: !5197, file: !355, line: 2337, column: 9)
!5203 = !DILocation(line: 2340, column: 36, scope: !5201)
!5204 = !DILocation(line: 2340, column: 15, scope: !5201)
!5205 = !DILocation(line: 2340, column: 15, scope: !5202)
!5206 = !DILocation(line: 2342, column: 28, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5201, file: !355, line: 2341, column: 13)
!5208 = !DILocation(line: 2343, column: 22, scope: !5207)
!5209 = !DILocation(line: 2344, column: 22, scope: !5207)
!5210 = !DILocation(line: 2342, column: 15, scope: !5207)
!5211 = !DILocation(line: 2345, column: 16, scope: !5207)
!5212 = !DILocation(line: 2345, column: 31, scope: !5207)
!5213 = !DILocation(line: 2346, column: 15, scope: !5207)
!5214 = !DILocation(line: 2348, column: 31, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5201, file: !355, line: 2348, column: 20)
!5216 = !DILocation(line: 2348, column: 41, scope: !5215)
!5217 = !DILocation(line: 2348, column: 20, scope: !5215)
!5218 = !DILocation(line: 2348, column: 20, scope: !5201)
!5219 = !DILocation(line: 2350, column: 28, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5215, file: !355, line: 2349, column: 13)
!5221 = !DILocation(line: 2352, column: 22, scope: !5220)
!5222 = !DILocation(line: 2350, column: 15, scope: !5220)
!5223 = !DILocation(line: 2357, column: 19, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5220, file: !355, line: 2357, column: 19)
!5225 = !DILocation(line: 2357, column: 22, scope: !5224)
!5226 = !DILocation(line: 2357, column: 32, scope: !5224)
!5227 = !DILocation(line: 2357, column: 35, scope: !5224)
!5228 = !DILocation(line: 2357, column: 19, scope: !5220)
!5229 = !DILocation(line: 2358, column: 18, scope: !5224)
!5230 = !DILocation(line: 2358, column: 35, scope: !5224)
!5231 = !DILocation(line: 2358, column: 17, scope: !5224)
!5232 = !DILocation(line: 2361, column: 15, scope: !5220)
!5233 = !DILocation(line: 2363, column: 20, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5215, file: !355, line: 2363, column: 20)
!5235 = !DILocation(line: 2363, column: 23, scope: !5234)
!5236 = !DILocation(line: 2363, column: 35, scope: !5234)
!5237 = !DILocation(line: 2364, column: 20, scope: !5234)
!5238 = !DILocation(line: 2364, column: 24, scope: !5234)
!5239 = !DILocation(line: 2365, column: 24, scope: !5234)
!5240 = !DILocation(line: 2365, column: 27, scope: !5234)
!5241 = !DILocation(line: 2365, column: 30, scope: !5234)
!5242 = !DILocation(line: 2365, column: 42, scope: !5234)
!5243 = !DILocation(line: 2363, column: 20, scope: !5215)
!5244 = !DILocation(line: 2373, column: 13, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5234, file: !355, line: 2366, column: 13)
!5246 = !DILocation(line: 2376, column: 28, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5234, file: !355, line: 2375, column: 13)
!5248 = !DILocation(line: 2377, column: 22, scope: !5247)
!5249 = !DILocation(line: 2377, column: 47, scope: !5247)
!5250 = !DILocation(line: 2376, column: 15, scope: !5247)
!5251 = !DILocation(line: 2378, column: 15, scope: !5247)
!5252 = !DILocation(line: 2380, column: 9, scope: !5202)
!5253 = !DILocation(line: 2383, column: 35, scope: !5254)
!5254 = distinct !DILexicalBlock(scope: !5255, file: !355, line: 2383, column: 15)
!5255 = distinct !DILexicalBlock(scope: !5197, file: !355, line: 2382, column: 9)
!5256 = !DILocation(line: 2383, column: 49, scope: !5254)
!5257 = !DILocation(line: 2383, column: 65, scope: !5254)
!5258 = !DILocation(line: 2383, column: 68, scope: !5254)
!5259 = !DILocation(line: 2384, column: 35, scope: !5254)
!5260 = !DILocation(line: 2383, column: 17, scope: !5254)
!5261 = !DILocation(line: 2383, column: 15, scope: !5255)
!5262 = !DILocation(line: 2385, column: 13, scope: !5254)
!5263 = !DILocation(line: 2387, column: 11, scope: !5255)
!5264 = !DILocation(line: 2389, column: 5, scope: !5198)
!5265 = !DILocation(line: 2391, column: 7, scope: !5266)
!5266 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2391, column: 7)
!5267 = !DILocation(line: 2391, column: 10, scope: !5266)
!5268 = !DILocation(line: 2391, column: 7, scope: !4487)
!5269 = !DILocation(line: 2393, column: 11, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5271, file: !355, line: 2393, column: 11)
!5271 = distinct !DILexicalBlock(scope: !5266, file: !355, line: 2392, column: 5)
!5272 = !DILocation(line: 2393, column: 24, scope: !5270)
!5273 = !DILocation(line: 2393, column: 11, scope: !5271)
!5274 = !DILocation(line: 2394, column: 32, scope: !5270)
!5275 = !DILocation(line: 2394, column: 42, scope: !5270)
!5276 = !DILocation(line: 2394, column: 24, scope: !5270)
!5277 = !DILocation(line: 2394, column: 52, scope: !5270)
!5278 = !DILocation(line: 2394, column: 63, scope: !5270)
!5279 = !DILocation(line: 2394, column: 22, scope: !5270)
!5280 = !DILocation(line: 2394, column: 9, scope: !5270)
!5281 = !DILocation(line: 2396, column: 11, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5271, file: !355, line: 2396, column: 11)
!5283 = !DILocation(line: 2396, column: 24, scope: !5282)
!5284 = !DILocation(line: 2396, column: 11, scope: !5271)
!5285 = !DILocation(line: 2398, column: 15, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5287, file: !355, line: 2398, column: 15)
!5287 = distinct !DILexicalBlock(scope: !5282, file: !355, line: 2397, column: 9)
!5288 = !DILocation(line: 2398, column: 18, scope: !5286)
!5289 = !DILocation(line: 2398, column: 15, scope: !5287)
!5290 = !DILocation(line: 2400, column: 23, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5286, file: !355, line: 2399, column: 13)
!5292 = !DILocation(line: 2400, column: 15, scope: !5291)
!5293 = !DILocation(line: 2401, column: 29, scope: !5291)
!5294 = !DILocation(line: 2401, column: 39, scope: !5291)
!5295 = !DILocation(line: 2401, column: 49, scope: !5291)
!5296 = !DILocation(line: 2401, column: 15, scope: !5291)
!5297 = !DILocation(line: 2402, column: 13, scope: !5291)
!5298 = !DILocation(line: 2404, column: 15, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5287, file: !355, line: 2404, column: 15)
!5300 = !DILocation(line: 2404, column: 18, scope: !5299)
!5301 = !DILocation(line: 2404, column: 15, scope: !5287)
!5302 = !DILocation(line: 2407, column: 45, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5299, file: !355, line: 2405, column: 13)
!5304 = !DILocation(line: 2407, column: 68, scope: !5303)
!5305 = !DILocation(line: 2407, column: 22, scope: !5303)
!5306 = !DILocation(line: 2408, column: 13, scope: !5303)
!5307 = !DILocation(line: 2410, column: 15, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5287, file: !355, line: 2410, column: 15)
!5309 = !DILocation(line: 2410, column: 15, scope: !5287)
!5310 = !DILocation(line: 2411, column: 14, scope: !5308)
!5311 = !DILocation(line: 2411, column: 31, scope: !5308)
!5312 = !DILocation(line: 2411, column: 13, scope: !5308)
!5313 = !DILocation(line: 2413, column: 15, scope: !5314)
!5314 = distinct !DILexicalBlock(scope: !5287, file: !355, line: 2413, column: 15)
!5315 = !DILocation(line: 2413, column: 32, scope: !5314)
!5316 = !DILocation(line: 2413, column: 36, scope: !5314)
!5317 = !DILocation(line: 2413, column: 39, scope: !5314)
!5318 = !DILocation(line: 2413, column: 15, scope: !5287)
!5319 = !DILocation(line: 2422, column: 28, scope: !5320)
!5320 = distinct !DILexicalBlock(scope: !5314, file: !355, line: 2414, column: 13)
!5321 = !DILocation(line: 2422, column: 31, scope: !5320)
!5322 = !DILocation(line: 2422, column: 42, scope: !5320)
!5323 = !DILocation(line: 2422, column: 15, scope: !5320)
!5324 = !DILocation(line: 2423, column: 13, scope: !5320)
!5325 = !DILocation(line: 2425, column: 11, scope: !5287)
!5326 = !DILocation(line: 2433, column: 11, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5271, file: !355, line: 2433, column: 11)
!5328 = !DILocation(line: 2433, column: 24, scope: !5327)
!5329 = !DILocation(line: 2433, column: 11, scope: !5271)
!5330 = !DILocation(line: 2438, column: 24, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5327, file: !355, line: 2434, column: 9)
!5332 = !DILocation(line: 2439, column: 18, scope: !5331)
!5333 = !DILocation(line: 2440, column: 18, scope: !5331)
!5334 = !DILocation(line: 2438, column: 11, scope: !5331)
!5335 = !DILocation(line: 2446, column: 12, scope: !5331)
!5336 = !DILocation(line: 2446, column: 27, scope: !5331)
!5337 = !DILocation(line: 2450, column: 11, scope: !5331)
!5338 = !DILocation(line: 2468, column: 11, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !5271, file: !355, line: 2468, column: 11)
!5340 = !DILocation(line: 2468, column: 24, scope: !5339)
!5341 = !DILocation(line: 2468, column: 11, scope: !5271)
!5342 = !DILocation(line: 2480, column: 21, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5339, file: !355, line: 2469, column: 9)
!5344 = !DILocation(line: 2481, column: 18, scope: !5343)
!5345 = !DILocation(line: 2482, column: 18, scope: !5343)
!5346 = !DILocation(line: 2482, column: 43, scope: !5343)
!5347 = !DILocation(line: 2480, column: 11, scope: !5343)
!5348 = !DILocation(line: 2483, column: 34, scope: !5343)
!5349 = !DILocation(line: 2483, column: 49, scope: !5343)
!5350 = !DILocation(line: 2483, column: 11, scope: !5343)
!5351 = !DILocation(line: 2484, column: 11, scope: !5343)
!5352 = !DILocation(line: 2493, column: 12, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5271, file: !355, line: 2493, column: 11)
!5354 = !DILocation(line: 2493, column: 40, scope: !5353)
!5355 = !DILocation(line: 2493, column: 33, scope: !5353)
!5356 = !DILocation(line: 2493, column: 60, scope: !5353)
!5357 = !DILocation(line: 2493, column: 52, scope: !5353)
!5358 = !DILocation(line: 2493, column: 71, scope: !5353)
!5359 = !DILocation(line: 2494, column: 11, scope: !5353)
!5360 = !DILocation(line: 2494, column: 14, scope: !5353)
!5361 = !DILocation(line: 2494, column: 20, scope: !5353)
!5362 = !DILocation(line: 2493, column: 11, scope: !5271)
!5363 = !DILocation(line: 2496, column: 21, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5353, file: !355, line: 2495, column: 9)
!5365 = !DILocation(line: 2497, column: 14, scope: !5364)
!5366 = !DILocation(line: 2498, column: 18, scope: !5364)
!5367 = !DILocation(line: 2498, column: 43, scope: !5364)
!5368 = !DILocation(line: 2496, column: 11, scope: !5364)
!5369 = !DILocation(line: 2499, column: 34, scope: !5364)
!5370 = !DILocation(line: 2499, column: 49, scope: !5364)
!5371 = !DILocation(line: 2499, column: 11, scope: !5364)
!5372 = !DILocation(line: 2500, column: 11, scope: !5364)
!5373 = !DILocation(line: 2503, column: 11, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5271, file: !355, line: 2503, column: 11)
!5375 = !DILocation(line: 2503, column: 14, scope: !5374)
!5376 = !DILocation(line: 2503, column: 22, scope: !5374)
!5377 = !DILocation(line: 2503, column: 26, scope: !5374)
!5378 = !DILocation(line: 2503, column: 11, scope: !5271)
!5379 = !DILocation(line: 2505, column: 19, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5374, file: !355, line: 2504, column: 9)
!5381 = !DILocation(line: 2505, column: 11, scope: !5380)
!5382 = !DILocation(line: 2506, column: 25, scope: !5380)
!5383 = !DILocation(line: 2506, column: 35, scope: !5380)
!5384 = !DILocation(line: 2506, column: 45, scope: !5380)
!5385 = !DILocation(line: 2506, column: 11, scope: !5380)
!5386 = !DILocation(line: 2507, column: 9, scope: !5380)
!5387 = !DILocation(line: 2508, column: 15, scope: !5271)
!5388 = !DILocation(line: 2509, column: 5, scope: !5271)
!5389 = !DILocation(line: 2515, column: 20, scope: !4487)
!5390 = !DILocation(line: 2515, column: 23, scope: !4487)
!5391 = !DILocation(line: 2515, column: 34, scope: !4487)
!5392 = !DILocation(line: 2515, column: 37, scope: !4487)
!5393 = !DILocation(line: 2515, column: 44, scope: !4487)
!5394 = !DILocation(line: 2515, column: 54, scope: !4487)
!5395 = !DILocation(line: 2515, column: 17, scope: !4487)
!5396 = !DILocation(line: 2517, column: 6, scope: !4487)
!5397 = !DILocation(line: 2518, column: 9, scope: !4487)
!5398 = !DILocation(line: 2518, column: 12, scope: !4487)
!5399 = !DILocation(line: 2519, column: 11, scope: !4487)
!5400 = !DILocation(line: 2518, column: 6, scope: !4487)
!5401 = !DILocation(line: 2516, column: 23, scope: !4487)
!5402 = !DILocation(line: 2522, column: 14, scope: !4487)
!5403 = !DILocation(line: 2528, column: 35, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2528, column: 7)
!5405 = !DILocation(line: 2528, column: 45, scope: !5404)
!5406 = !DILocation(line: 2528, column: 55, scope: !5404)
!5407 = !DILocation(line: 2528, column: 65, scope: !5404)
!5408 = !DILocation(line: 2528, column: 74, scope: !5404)
!5409 = !DILocation(line: 2528, column: 9, scope: !5404)
!5410 = !DILocation(line: 2528, column: 7, scope: !4487)
!5411 = !DILocation(line: 2529, column: 5, scope: !5404)
!5412 = !DILocation(line: 2531, column: 7, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2531, column: 7)
!5414 = !DILocation(line: 2531, column: 7, scope: !4487)
!5415 = !DILocalVariable(name: "dir", scope: !5416, file: !355, line: 2533, type: !442)
!5416 = distinct !DILexicalBlock(scope: !5413, file: !355, line: 2532, column: 5)
!5417 = !DILocation(line: 2533, column: 24, scope: !5416)
!5418 = !DILocation(line: 2540, column: 33, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5416, file: !355, line: 2540, column: 11)
!5420 = !DILocation(line: 2540, column: 11, scope: !5419)
!5421 = !DILocation(line: 2540, column: 11, scope: !5416)
!5422 = !DILocation(line: 2542, column: 24, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5419, file: !355, line: 2541, column: 9)
!5424 = !DILocation(line: 2543, column: 18, scope: !5423)
!5425 = !DILocation(line: 2542, column: 11, scope: !5423)
!5426 = !DILocation(line: 2544, column: 11, scope: !5423)
!5427 = !DILocation(line: 2549, column: 13, scope: !5416)
!5428 = !DILocation(line: 2549, column: 11, scope: !5416)
!5429 = !DILocation(line: 2550, column: 21, scope: !5416)
!5430 = !DILocation(line: 2550, column: 7, scope: !5416)
!5431 = !DILocation(line: 2550, column: 12, scope: !5416)
!5432 = !DILocation(line: 2550, column: 19, scope: !5416)
!5433 = !{!5434, !2669, i64 0}
!5434 = !{!"dir_list", !2669, i64 0, !2936, i64 8, !2936, i64 16}
!5435 = !DILocation(line: 2551, column: 25, scope: !5416)
!5436 = !DILocation(line: 2551, column: 7, scope: !5416)
!5437 = !DILocation(line: 2551, column: 12, scope: !5416)
!5438 = !DILocation(line: 2551, column: 16, scope: !5416)
!5439 = !{!5434, !2936, i64 8}
!5440 = !DILocation(line: 2552, column: 25, scope: !5416)
!5441 = !DILocation(line: 2552, column: 7, scope: !5416)
!5442 = !DILocation(line: 2552, column: 12, scope: !5416)
!5443 = !DILocation(line: 2552, column: 16, scope: !5416)
!5444 = !{!5434, !2936, i64 16}
!5445 = !DILocation(line: 2554, column: 11, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5416, file: !355, line: 2554, column: 11)
!5447 = !DILocation(line: 2554, column: 19, scope: !5446)
!5448 = !DILocation(line: 2554, column: 23, scope: !5446)
!5449 = !DILocation(line: 2554, column: 11, scope: !5416)
!5450 = !DILocation(line: 2560, column: 22, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5452, file: !355, line: 2560, column: 15)
!5452 = distinct !DILexicalBlock(scope: !5446, file: !355, line: 2555, column: 9)
!5453 = !DILocation(line: 2560, column: 32, scope: !5451)
!5454 = !DILocation(line: 2560, column: 49, scope: !5451)
!5455 = !DILocation(line: 2560, column: 48, scope: !5451)
!5456 = !DILocation(line: 2560, column: 46, scope: !5451)
!5457 = !DILocation(line: 2560, column: 15, scope: !5451)
!5458 = !DILocation(line: 2560, column: 70, scope: !5451)
!5459 = !DILocation(line: 2560, column: 15, scope: !5452)
!5460 = !DILocation(line: 2562, column: 25, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5451, file: !355, line: 2561, column: 13)
!5462 = !DILocation(line: 2562, column: 32, scope: !5461)
!5463 = !DILocation(line: 2563, column: 22, scope: !5461)
!5464 = !DILocation(line: 2562, column: 15, scope: !5461)
!5465 = !DILocation(line: 2564, column: 15, scope: !5461)
!5466 = !DILocation(line: 2571, column: 22, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5452, file: !355, line: 2571, column: 15)
!5468 = !DILocation(line: 2571, column: 15, scope: !5467)
!5469 = !DILocation(line: 2571, column: 41, scope: !5467)
!5470 = !DILocation(line: 2571, column: 15, scope: !5452)
!5471 = !DILocation(line: 2573, column: 25, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5467, file: !355, line: 2572, column: 13)
!5473 = !DILocation(line: 2573, column: 32, scope: !5472)
!5474 = !DILocation(line: 2573, column: 53, scope: !5472)
!5475 = !DILocation(line: 2573, column: 15, scope: !5472)
!5476 = !DILocation(line: 2574, column: 15, scope: !5472)
!5477 = !DILocation(line: 2576, column: 28, scope: !5478)
!5478 = distinct !DILexicalBlock(scope: !5467, file: !355, line: 2576, column: 20)
!5479 = !DILocation(line: 2576, column: 36, scope: !5478)
!5480 = !DILocation(line: 2576, column: 47, scope: !5478)
!5481 = !DILocation(line: 2576, column: 20, scope: !5467)
!5482 = !DILocation(line: 2580, column: 33, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5478, file: !355, line: 2577, column: 13)
!5484 = !DILocation(line: 2580, column: 24, scope: !5483)
!5485 = !DILocation(line: 2581, column: 32, scope: !5483)
!5486 = !DILocation(line: 2583, column: 27, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5483, file: !355, line: 2583, column: 19)
!5488 = !DILocation(line: 2583, column: 37, scope: !5487)
!5489 = !DILocation(line: 2583, column: 46, scope: !5487)
!5490 = !DILocation(line: 2583, column: 19, scope: !5487)
!5491 = !DILocation(line: 2583, column: 57, scope: !5487)
!5492 = !DILocation(line: 2583, column: 19, scope: !5483)
!5493 = !DILocation(line: 2585, column: 29, scope: !5494)
!5494 = distinct !DILexicalBlock(scope: !5487, file: !355, line: 2584, column: 17)
!5495 = !DILocation(line: 2585, column: 36, scope: !5494)
!5496 = !DILocation(line: 2586, column: 26, scope: !5494)
!5497 = !DILocation(line: 2585, column: 19, scope: !5494)
!5498 = !DILocation(line: 2587, column: 19, scope: !5494)
!5499 = !DILocation(line: 2589, column: 13, scope: !5483)
!5500 = !DILocation(line: 2595, column: 17, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5452, file: !355, line: 2595, column: 15)
!5502 = !DILocation(line: 2595, column: 16, scope: !5501)
!5503 = !DILocation(line: 2595, column: 15, scope: !5452)
!5504 = !DILocation(line: 2597, column: 32, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5501, file: !355, line: 2596, column: 13)
!5506 = !DILocation(line: 2597, column: 49, scope: !5505)
!5507 = !DILocation(line: 2597, column: 64, scope: !5505)
!5508 = !DILocation(line: 2597, column: 15, scope: !5505)
!5509 = !DILocation(line: 2598, column: 16, scope: !5505)
!5510 = !DILocation(line: 2598, column: 55, scope: !5505)
!5511 = !DILocation(line: 2599, column: 13, scope: !5505)
!5512 = !DILocation(line: 2601, column: 15, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5452, file: !355, line: 2601, column: 15)
!5514 = !DILocation(line: 2601, column: 18, scope: !5513)
!5515 = !DILocation(line: 2601, column: 15, scope: !5452)
!5516 = !DILocation(line: 2603, column: 19, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5518, file: !355, line: 2603, column: 19)
!5518 = distinct !DILexicalBlock(scope: !5513, file: !355, line: 2602, column: 13)
!5519 = !DILocation(line: 2603, column: 22, scope: !5517)
!5520 = !DILocation(line: 2603, column: 19, scope: !5518)
!5521 = !DILocation(line: 2604, column: 25, scope: !5517)
!5522 = !DILocation(line: 2604, column: 54, scope: !5517)
!5523 = !DILocation(line: 2604, column: 17, scope: !5517)
!5524 = !DILocation(line: 2606, column: 31, scope: !5517)
!5525 = !DILocation(line: 2606, column: 41, scope: !5517)
!5526 = !DILocation(line: 2606, column: 17, scope: !5517)
!5527 = !DILocation(line: 2607, column: 13, scope: !5518)
!5528 = !DILocation(line: 2608, column: 9, scope: !5452)
!5529 = !DILocation(line: 2611, column: 31, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5446, file: !355, line: 2610, column: 9)
!5531 = !DILocation(line: 2616, column: 15, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5530, file: !355, line: 2616, column: 15)
!5533 = !DILocation(line: 2616, column: 18, scope: !5532)
!5534 = !DILocation(line: 2616, column: 39, scope: !5532)
!5535 = !DILocation(line: 2616, column: 42, scope: !5532)
!5536 = !DILocation(line: 2616, column: 45, scope: !5532)
!5537 = !DILocation(line: 2616, column: 15, scope: !5530)
!5538 = !DILocation(line: 2617, column: 42, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5532, file: !355, line: 2617, column: 17)
!5540 = !DILocation(line: 2617, column: 52, scope: !5539)
!5541 = !DILocation(line: 2617, column: 55, scope: !5539)
!5542 = !DILocation(line: 2618, column: 49, scope: !5539)
!5543 = !DILocation(line: 2617, column: 19, scope: !5539)
!5544 = !DILocation(line: 2617, column: 17, scope: !5532)
!5545 = !DILocation(line: 2620, column: 21, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5547, file: !355, line: 2620, column: 21)
!5547 = distinct !DILexicalBlock(scope: !5539, file: !355, line: 2619, column: 15)
!5548 = !DILocation(line: 2620, column: 24, scope: !5546)
!5549 = !DILocation(line: 2620, column: 21, scope: !5547)
!5550 = !DILocation(line: 2621, column: 19, scope: !5546)
!5551 = !DILocation(line: 2622, column: 15, scope: !5547)
!5552 = !DILocation(line: 2618, column: 50, scope: !5539)
!5553 = !DILocation(line: 2626, column: 11, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5416, file: !355, line: 2626, column: 11)
!5555 = !DILocation(line: 2626, column: 14, scope: !5554)
!5556 = !DILocation(line: 2626, column: 30, scope: !5554)
!5557 = !DILocation(line: 2626, column: 33, scope: !5554)
!5558 = !DILocation(line: 2626, column: 40, scope: !5554)
!5559 = !DILocation(line: 2626, column: 43, scope: !5554)
!5560 = !DILocation(line: 2626, column: 51, scope: !5554)
!5561 = !DILocation(line: 2626, column: 68, scope: !5554)
!5562 = !DILocation(line: 2626, column: 58, scope: !5554)
!5563 = !DILocation(line: 2626, column: 11, scope: !5416)
!5564 = !DILocation(line: 2630, column: 9, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5554, file: !355, line: 2627, column: 9)
!5566 = !DILocation(line: 2637, column: 34, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5554, file: !355, line: 2632, column: 9)
!5568 = !DILocation(line: 2637, column: 44, scope: !5567)
!5569 = !DILocation(line: 2637, column: 54, scope: !5567)
!5570 = !DILocation(line: 2637, column: 72, scope: !5567)
!5571 = !DILocation(line: 2637, column: 77, scope: !5567)
!5572 = !DILocation(line: 2638, column: 34, scope: !5567)
!5573 = !DILocation(line: 2639, column: 34, scope: !5567)
!5574 = !DILocation(line: 2637, column: 24, scope: !5567)
!5575 = !DILocation(line: 2637, column: 22, scope: !5567)
!5576 = !DILocation(line: 2641, column: 5, scope: !5416)
!5577 = !DILocation(line: 2642, column: 12, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5413, file: !355, line: 2642, column: 12)
!5579 = !DILocation(line: 2642, column: 15, scope: !5578)
!5580 = !DILocation(line: 2642, column: 12, scope: !5413)
!5581 = !DILocation(line: 2644, column: 23, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5578, file: !355, line: 2643, column: 5)
!5583 = !DILocation(line: 2645, column: 12, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5582, file: !355, line: 2645, column: 11)
!5585 = !DILocation(line: 2645, column: 11, scope: !5584)
!5586 = !DILocation(line: 2645, column: 21, scope: !5584)
!5587 = !DILocation(line: 2645, column: 11, scope: !5582)
!5588 = !DILocalVariable(name: "dot_sb", scope: !5589, file: !355, line: 2648, type: !421)
!5589 = distinct !DILexicalBlock(scope: !5584, file: !355, line: 2646, column: 9)
!5590 = !DILocation(line: 2648, column: 23, scope: !5589)
!5591 = !DILocalVariable(name: "dst_parent_sb", scope: !5589, file: !355, line: 2649, type: !421)
!5592 = !DILocation(line: 2649, column: 23, scope: !5589)
!5593 = !DILocalVariable(name: "dst_parent", scope: !5589, file: !355, line: 2650, type: !7)
!5594 = !DILocation(line: 2650, column: 17, scope: !5589)
!5595 = !DILocalVariable(name: "in_current_dir", scope: !5589, file: !355, line: 2651, type: !139)
!5596 = !DILocation(line: 2651, column: 16, scope: !5589)
!5597 = !DILocation(line: 2653, column: 34, scope: !5589)
!5598 = !DILocation(line: 2653, column: 24, scope: !5589)
!5599 = !DILocation(line: 2653, column: 22, scope: !5589)
!5600 = !DILocation(line: 2655, column: 29, scope: !5589)
!5601 = !DILocation(line: 2659, column: 29, scope: !5589)
!5602 = !DILocation(line: 2659, column: 32, scope: !5589)
!5603 = !DILocation(line: 2659, column: 52, scope: !5589)
!5604 = !DILocation(line: 2660, column: 29, scope: !5589)
!5605 = !DILocation(line: 2660, column: 38, scope: !5589)
!5606 = !DILocation(line: 2660, column: 32, scope: !5589)
!5607 = !DILocation(line: 2660, column: 66, scope: !5589)
!5608 = !DILocation(line: 2661, column: 29, scope: !5589)
!5609 = !DILocation(line: 2661, column: 32, scope: !5589)
!5610 = !DILocation(line: 0, scope: !5589)
!5611 = !DILocation(line: 2655, column: 26, scope: !5589)
!5612 = !DILocation(line: 2662, column: 17, scope: !5589)
!5613 = !DILocation(line: 2662, column: 11, scope: !5589)
!5614 = !DILocation(line: 2664, column: 17, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5589, file: !355, line: 2664, column: 15)
!5616 = !DILocation(line: 2664, column: 15, scope: !5589)
!5617 = !DILocation(line: 2667, column: 12, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5615, file: !355, line: 2665, column: 13)
!5619 = !DILocation(line: 2668, column: 22, scope: !5618)
!5620 = !DILocation(line: 2666, column: 15, scope: !5618)
!5621 = !DILocation(line: 2669, column: 15, scope: !5618)
!5622 = !DILocation(line: 2671, column: 9, scope: !5589)
!5623 = !DILocalVariable(name: "err", scope: !5582, file: !355, line: 2673, type: !5)
!5624 = !DILocation(line: 2673, column: 11, scope: !5582)
!5625 = !DILocation(line: 2673, column: 34, scope: !5582)
!5626 = !DILocation(line: 2673, column: 54, scope: !5582)
!5627 = !DILocation(line: 2674, column: 34, scope: !5582)
!5628 = !DILocation(line: 2674, column: 37, scope: !5582)
!5629 = !DILocation(line: 2673, column: 17, scope: !5582)
!5630 = !DILocation(line: 2675, column: 15, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5582, file: !355, line: 2675, column: 11)
!5632 = !DILocation(line: 2675, column: 13, scope: !5631)
!5633 = !DILocation(line: 2675, column: 11, scope: !5582)
!5634 = !DILocation(line: 2677, column: 21, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5631, file: !355, line: 2676, column: 9)
!5636 = !DILocation(line: 2677, column: 26, scope: !5635)
!5637 = !DILocation(line: 2678, column: 18, scope: !5635)
!5638 = !DILocation(line: 2678, column: 43, scope: !5635)
!5639 = !DILocation(line: 2677, column: 11, scope: !5635)
!5640 = !DILocation(line: 2679, column: 11, scope: !5635)
!5641 = !DILocation(line: 2681, column: 5, scope: !5582)
!5642 = !DILocation(line: 2696, column: 12, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5578, file: !355, line: 2696, column: 12)
!5644 = !DILocation(line: 2696, column: 15, scope: !5643)
!5645 = !DILocation(line: 2696, column: 12, scope: !5578)
!5646 = !DILocalVariable(name: "replace", scope: !5647, file: !355, line: 2700, type: !139)
!5647 = distinct !DILexicalBlock(scope: !5643, file: !355, line: 2699, column: 5)
!5648 = !DILocation(line: 2700, column: 12, scope: !5647)
!5649 = !DILocation(line: 2700, column: 23, scope: !5647)
!5650 = !DILocation(line: 2700, column: 26, scope: !5647)
!5651 = !DILocation(line: 2701, column: 23, scope: !5647)
!5652 = !DILocation(line: 2701, column: 26, scope: !5647)
!5653 = !DILocation(line: 2701, column: 29, scope: !5647)
!5654 = !DILocation(line: 2701, column: 41, scope: !5647)
!5655 = !DILocation(line: 2702, column: 31, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5647, file: !355, line: 2702, column: 11)
!5657 = !DILocation(line: 2702, column: 41, scope: !5656)
!5658 = !DILocation(line: 2702, column: 51, scope: !5656)
!5659 = !DILocation(line: 2702, column: 67, scope: !5656)
!5660 = !DILocation(line: 2702, column: 13, scope: !5656)
!5661 = !DILocation(line: 2702, column: 11, scope: !5647)
!5662 = !DILocation(line: 2703, column: 9, scope: !5656)
!5663 = !DILocation(line: 2704, column: 5, scope: !5647)
!5664 = !DILocation(line: 2705, column: 12, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5643, file: !355, line: 2705, column: 12)
!5666 = !DILocation(line: 2706, column: 12, scope: !5665)
!5667 = !DILocation(line: 2706, column: 16, scope: !5665)
!5668 = !DILocation(line: 2706, column: 19, scope: !5665)
!5669 = !DILocation(line: 2706, column: 35, scope: !5665)
!5670 = !DILocation(line: 2706, column: 39, scope: !5665)
!5671 = !DILocation(line: 2705, column: 12, scope: !5643)
!5672 = !DILocation(line: 2708, column: 25, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5665, file: !355, line: 2707, column: 5)
!5674 = !DILocation(line: 2718, column: 23, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5673, file: !355, line: 2718, column: 11)
!5676 = !DILocation(line: 2718, column: 33, scope: !5675)
!5677 = !DILocation(line: 2718, column: 43, scope: !5675)
!5678 = !DILocation(line: 2718, column: 46, scope: !5675)
!5679 = !DILocation(line: 2718, column: 60, scope: !5675)
!5680 = !DILocation(line: 2719, column: 23, scope: !5675)
!5681 = !DILocation(line: 2718, column: 13, scope: !5675)
!5682 = !DILocation(line: 2718, column: 11, scope: !5673)
!5683 = !DILocation(line: 2720, column: 9, scope: !5675)
!5684 = !DILocation(line: 2721, column: 5, scope: !5673)
!5685 = !DILocation(line: 2722, column: 12, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5665, file: !355, line: 2722, column: 12)
!5687 = !DILocation(line: 2722, column: 12, scope: !5665)
!5688 = !DILocation(line: 2728, column: 18, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5690, file: !355, line: 2728, column: 11)
!5690 = distinct !DILexicalBlock(scope: !5686, file: !355, line: 2723, column: 5)
!5691 = !DILocation(line: 2728, column: 28, scope: !5689)
!5692 = !DILocation(line: 2728, column: 40, scope: !5689)
!5693 = !DILocation(line: 2728, column: 39, scope: !5689)
!5694 = !DILocation(line: 2728, column: 37, scope: !5689)
!5695 = !DILocation(line: 2728, column: 11, scope: !5689)
!5696 = !DILocation(line: 2728, column: 64, scope: !5689)
!5697 = !DILocation(line: 2728, column: 11, scope: !5690)
!5698 = !DILocation(line: 2729, column: 21, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5689, file: !355, line: 2729, column: 13)
!5700 = !DILocation(line: 2729, column: 31, scope: !5699)
!5701 = !DILocation(line: 2729, column: 40, scope: !5699)
!5702 = !DILocation(line: 2729, column: 54, scope: !5699)
!5703 = !DILocation(line: 2729, column: 53, scope: !5699)
!5704 = !DILocation(line: 2729, column: 51, scope: !5699)
!5705 = !DILocation(line: 2729, column: 13, scope: !5699)
!5706 = !DILocation(line: 2729, column: 75, scope: !5699)
!5707 = !DILocation(line: 2729, column: 13, scope: !5689)
!5708 = !DILocation(line: 2731, column: 23, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5699, file: !355, line: 2730, column: 11)
!5710 = !DILocation(line: 2731, column: 30, scope: !5709)
!5711 = !DILocation(line: 2731, column: 58, scope: !5709)
!5712 = !DILocation(line: 2731, column: 13, scope: !5709)
!5713 = !DILocation(line: 2732, column: 13, scope: !5709)
!5714 = !DILocation(line: 2729, column: 78, scope: !5699)
!5715 = !DILocation(line: 2734, column: 5, scope: !5690)
!5716 = !DILocation(line: 2735, column: 12, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5686, file: !355, line: 2735, column: 12)
!5718 = !DILocation(line: 2735, column: 31, scope: !5717)
!5719 = !DILocation(line: 2735, column: 34, scope: !5717)
!5720 = !DILocation(line: 2735, column: 53, scope: !5717)
!5721 = !DILocation(line: 2735, column: 56, scope: !5717)
!5722 = !DILocation(line: 2735, column: 12, scope: !5686)
!5723 = !DILocation(line: 2737, column: 18, scope: !5724)
!5724 = distinct !DILexicalBlock(scope: !5725, file: !355, line: 2737, column: 11)
!5725 = distinct !DILexicalBlock(scope: !5717, file: !355, line: 2736, column: 5)
!5726 = !DILocation(line: 2737, column: 28, scope: !5724)
!5727 = !DILocation(line: 2737, column: 40, scope: !5724)
!5728 = !DILocation(line: 2737, column: 39, scope: !5724)
!5729 = !DILocation(line: 2737, column: 37, scope: !5724)
!5730 = !DILocation(line: 2737, column: 68, scope: !5724)
!5731 = !{!2935, !2936, i64 40}
!5732 = !DILocation(line: 2737, column: 11, scope: !5724)
!5733 = !DILocation(line: 2738, column: 11, scope: !5724)
!5734 = !DILocation(line: 2737, column: 11, scope: !5725)
!5735 = !DILocation(line: 2740, column: 21, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5724, file: !355, line: 2739, column: 9)
!5737 = !DILocation(line: 2740, column: 28, scope: !5736)
!5738 = !DILocation(line: 2741, column: 18, scope: !5736)
!5739 = !DILocation(line: 2740, column: 11, scope: !5736)
!5740 = !DILocation(line: 2742, column: 11, scope: !5736)
!5741 = !DILocation(line: 2744, column: 5, scope: !5725)
!5742 = !DILocation(line: 2745, column: 12, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5717, file: !355, line: 2745, column: 12)
!5744 = !DILocation(line: 2745, column: 12, scope: !5717)
!5745 = !DILocalVariable(name: "src_link_val", scope: !5746, file: !355, line: 2747, type: !7)
!5746 = distinct !DILexicalBlock(scope: !5743, file: !355, line: 2746, column: 5)
!5747 = !DILocation(line: 2747, column: 13, scope: !5746)
!5748 = !DILocation(line: 2747, column: 49, scope: !5746)
!5749 = !DILocation(line: 2747, column: 66, scope: !5746)
!5750 = !DILocation(line: 2747, column: 28, scope: !5746)
!5751 = !DILocation(line: 2748, column: 23, scope: !5746)
!5752 = !DILocation(line: 2749, column: 11, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5746, file: !355, line: 2749, column: 11)
!5754 = !DILocation(line: 2749, column: 24, scope: !5753)
!5755 = !DILocation(line: 2749, column: 11, scope: !5746)
!5756 = !DILocation(line: 2751, column: 21, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !5753, file: !355, line: 2750, column: 9)
!5758 = !DILocation(line: 2751, column: 28, scope: !5757)
!5759 = !DILocation(line: 2752, column: 18, scope: !5757)
!5760 = !DILocation(line: 2751, column: 11, scope: !5757)
!5761 = !DILocation(line: 2753, column: 11, scope: !5757)
!5762 = !DILocalVariable(name: "symlink_err", scope: !5746, file: !355, line: 2756, type: !5)
!5763 = !DILocation(line: 2756, column: 11, scope: !5746)
!5764 = !DILocation(line: 2756, column: 42, scope: !5746)
!5765 = !DILocation(line: 2756, column: 66, scope: !5746)
!5766 = !DILocation(line: 2757, column: 42, scope: !5746)
!5767 = !DILocation(line: 2757, column: 45, scope: !5746)
!5768 = !DILocation(line: 2756, column: 25, scope: !5746)
!5769 = !DILocation(line: 2758, column: 15, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5746, file: !355, line: 2758, column: 11)
!5771 = !DILocation(line: 2758, column: 13, scope: !5770)
!5772 = !DILocation(line: 2758, column: 27, scope: !5770)
!5773 = !DILocation(line: 2758, column: 30, scope: !5770)
!5774 = !DILocation(line: 2758, column: 33, scope: !5770)
!5775 = !DILocation(line: 2758, column: 40, scope: !5770)
!5776 = !DILocation(line: 2758, column: 44, scope: !5770)
!5777 = !DILocation(line: 2758, column: 52, scope: !5770)
!5778 = !DILocation(line: 2758, column: 55, scope: !5770)
!5779 = !DILocation(line: 2759, column: 11, scope: !5770)
!5780 = !DILocation(line: 2759, column: 21, scope: !5770)
!5781 = !DILocation(line: 2759, column: 40, scope: !5770)
!5782 = !DILocation(line: 2759, column: 32, scope: !5770)
!5783 = !DILocation(line: 2759, column: 29, scope: !5770)
!5784 = !DILocation(line: 2758, column: 11, scope: !5746)
!5785 = !DILocalVariable(name: "dest_link_val", scope: !5786, file: !355, line: 2765, type: !7)
!5786 = distinct !DILexicalBlock(scope: !5770, file: !355, line: 2760, column: 9)
!5787 = !DILocation(line: 2765, column: 17, scope: !5786)
!5788 = !DILocation(line: 2766, column: 34, scope: !5786)
!5789 = !DILocation(line: 2766, column: 51, scope: !5786)
!5790 = !DILocation(line: 2766, column: 13, scope: !5786)
!5791 = !DILocation(line: 2767, column: 15, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5786, file: !355, line: 2767, column: 15)
!5793 = !DILocation(line: 2767, column: 15, scope: !5786)
!5794 = !DILocation(line: 2769, column: 19, scope: !5795)
!5795 = distinct !DILexicalBlock(scope: !5796, file: !355, line: 2769, column: 19)
!5796 = distinct !DILexicalBlock(scope: !5792, file: !355, line: 2768, column: 13)
!5797 = !DILocation(line: 2769, column: 19, scope: !5796)
!5798 = !DILocation(line: 2770, column: 29, scope: !5795)
!5799 = !DILocation(line: 2770, column: 17, scope: !5795)
!5800 = !DILocation(line: 2771, column: 21, scope: !5796)
!5801 = !DILocation(line: 2771, column: 15, scope: !5796)
!5802 = !DILocation(line: 2772, column: 13, scope: !5796)
!5803 = !DILocation(line: 2773, column: 9, scope: !5786)
!5804 = !DILocation(line: 2774, column: 13, scope: !5746)
!5805 = !DILocation(line: 2774, column: 7, scope: !5746)
!5806 = !DILocation(line: 2775, column: 15, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5746, file: !355, line: 2775, column: 11)
!5808 = !DILocation(line: 2775, column: 13, scope: !5807)
!5809 = !DILocation(line: 2775, column: 11, scope: !5746)
!5810 = !DILocation(line: 2777, column: 21, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5807, file: !355, line: 2776, column: 9)
!5812 = !DILocation(line: 2777, column: 34, scope: !5811)
!5813 = !DILocation(line: 2778, column: 18, scope: !5811)
!5814 = !DILocation(line: 2777, column: 11, scope: !5811)
!5815 = !DILocation(line: 2779, column: 11, scope: !5811)
!5816 = !DILocation(line: 2782, column: 11, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5746, file: !355, line: 2782, column: 11)
!5818 = !DILocation(line: 2782, column: 14, scope: !5817)
!5819 = !DILocation(line: 2782, column: 11, scope: !5746)
!5820 = !DILocation(line: 2783, column: 9, scope: !5817)
!5821 = !DILocation(line: 2785, column: 11, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5746, file: !355, line: 2785, column: 11)
!5823 = !DILocation(line: 2785, column: 14, scope: !5822)
!5824 = !DILocation(line: 2785, column: 11, scope: !5746)
!5825 = !DILocation(line: 2790, column: 26, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5827, file: !355, line: 2789, column: 15)
!5827 = distinct !DILexicalBlock(scope: !5822, file: !355, line: 2786, column: 9)
!5828 = !DILocation(line: 2790, column: 43, scope: !5826)
!5829 = !DILocation(line: 2790, column: 58, scope: !5826)
!5830 = !DILocation(line: 2790, column: 18, scope: !5826)
!5831 = !DILocation(line: 2790, column: 66, scope: !5826)
!5832 = !DILocation(line: 2791, column: 15, scope: !5826)
!5833 = !DILocation(line: 2791, column: 38, scope: !5826)
!5834 = !DILocation(line: 2791, column: 20, scope: !5826)
!5835 = !DILocation(line: 2789, column: 15, scope: !5827)
!5836 = !DILocation(line: 2793, column: 25, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5826, file: !355, line: 2792, column: 13)
!5838 = !DILocation(line: 2793, column: 32, scope: !5837)
!5839 = !DILocation(line: 2794, column: 22, scope: !5837)
!5840 = !DILocation(line: 2793, column: 15, scope: !5837)
!5841 = !DILocation(line: 2795, column: 19, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5837, file: !355, line: 2795, column: 19)
!5843 = !DILocation(line: 2795, column: 22, scope: !5842)
!5844 = !DILocation(line: 2795, column: 19, scope: !5837)
!5845 = !DILocation(line: 2796, column: 17, scope: !5842)
!5846 = !DILocation(line: 2797, column: 13, scope: !5837)
!5847 = !DILocation(line: 2805, column: 9, scope: !5827)
!5848 = !DILocation(line: 2806, column: 5, scope: !5746)
!5849 = !DILocation(line: 2809, column: 20, scope: !5850)
!5850 = distinct !DILexicalBlock(scope: !5743, file: !355, line: 2808, column: 5)
!5851 = !DILocation(line: 2809, column: 51, scope: !5850)
!5852 = !DILocation(line: 2809, column: 7, scope: !5850)
!5853 = !DILocation(line: 2810, column: 7, scope: !5850)
!5854 = !DILocation(line: 2815, column: 8, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2815, column: 7)
!5856 = !DILocation(line: 2815, column: 16, scope: !5855)
!5857 = !DILocation(line: 2815, column: 20, scope: !5855)
!5858 = !DILocation(line: 2815, column: 23, scope: !5855)
!5859 = !DILocation(line: 2815, column: 39, scope: !5855)
!5860 = !DILocation(line: 2815, column: 43, scope: !5855)
!5861 = !DILocation(line: 2816, column: 7, scope: !5855)
!5862 = !DILocation(line: 2816, column: 11, scope: !5855)
!5863 = !DILocation(line: 2816, column: 14, scope: !5855)
!5864 = !DILocation(line: 2816, column: 35, scope: !5855)
!5865 = !DILocation(line: 2816, column: 38, scope: !5855)
!5866 = !DILocation(line: 2816, column: 41, scope: !5855)
!5867 = !DILocation(line: 2815, column: 7, scope: !4487)
!5868 = !DILocation(line: 2818, column: 36, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !355, line: 2818, column: 11)
!5870 = distinct !DILexicalBlock(scope: !5855, file: !355, line: 2817, column: 5)
!5871 = !DILocation(line: 2818, column: 46, scope: !5869)
!5872 = !DILocation(line: 2818, column: 49, scope: !5869)
!5873 = !DILocation(line: 2819, column: 43, scope: !5869)
!5874 = !DILocation(line: 2818, column: 13, scope: !5869)
!5875 = !DILocation(line: 2818, column: 11, scope: !5870)
!5876 = !DILocation(line: 2821, column: 16, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !5878, file: !355, line: 2821, column: 16)
!5878 = distinct !DILexicalBlock(scope: !5869, file: !355, line: 2820, column: 9)
!5879 = !DILocation(line: 2821, column: 19, scope: !5877)
!5880 = !DILocation(line: 2821, column: 16, scope: !5878)
!5881 = !DILocation(line: 2822, column: 14, scope: !5877)
!5882 = !DILocation(line: 2823, column: 9, scope: !5878)
!5883 = !DILocation(line: 2824, column: 5, scope: !5870)
!5884 = !DILocation(line: 2826, column: 7, scope: !5885)
!5885 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2826, column: 7)
!5886 = !DILocation(line: 2826, column: 24, scope: !5885)
!5887 = !DILocation(line: 2826, column: 27, scope: !5885)
!5888 = !DILocation(line: 2826, column: 30, scope: !5885)
!5889 = !DILocation(line: 2826, column: 7, scope: !4487)
!5890 = !DILocalVariable(name: "sb", scope: !5891, file: !355, line: 2830, type: !421)
!5891 = distinct !DILexicalBlock(scope: !5885, file: !355, line: 2827, column: 5)
!5892 = !DILocation(line: 2830, column: 19, scope: !5891)
!5893 = !DILocation(line: 2831, column: 18, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5891, file: !355, line: 2831, column: 11)
!5895 = !DILocation(line: 2831, column: 11, scope: !5894)
!5896 = !DILocation(line: 2831, column: 33, scope: !5894)
!5897 = !DILocation(line: 2831, column: 11, scope: !5891)
!5898 = !DILocation(line: 2832, column: 22, scope: !5894)
!5899 = !DILocation(line: 2832, column: 25, scope: !5894)
!5900 = !DILocation(line: 2832, column: 36, scope: !5894)
!5901 = !DILocation(line: 2832, column: 9, scope: !5894)
!5902 = !DILocation(line: 2833, column: 5, scope: !5891)
!5903 = !DILocation(line: 2837, column: 7, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2837, column: 7)
!5905 = !DILocation(line: 2837, column: 10, scope: !5904)
!5906 = !DILocation(line: 2837, column: 20, scope: !5904)
!5907 = !DILocation(line: 2837, column: 25, scope: !5904)
!5908 = !DILocation(line: 2837, column: 7, scope: !4487)
!5909 = !DILocation(line: 2840, column: 12, scope: !5904)
!5910 = !DILocation(line: 2840, column: 5, scope: !5904)
!5911 = !DILocation(line: 2842, column: 7, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2842, column: 7)
!5913 = !DILocation(line: 2842, column: 7, scope: !4487)
!5914 = !DILocation(line: 2843, column: 12, scope: !5912)
!5915 = !DILocation(line: 2843, column: 5, scope: !5912)
!5916 = !DILocation(line: 2857, column: 7, scope: !5917)
!5917 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2857, column: 7)
!5918 = !DILocation(line: 2857, column: 10, scope: !5917)
!5919 = !DILocation(line: 2857, column: 7, scope: !4487)
!5920 = !DILocalVariable(name: "timespec", scope: !5921, file: !355, line: 2859, type: !451)
!5921 = distinct !DILexicalBlock(scope: !5917, file: !355, line: 2858, column: 5)
!5922 = !DILocation(line: 2859, column: 23, scope: !5921)
!5923 = !DILocation(line: 2860, column: 7, scope: !5921)
!5924 = !DILocation(line: 2860, column: 21, scope: !5921)
!5925 = !DILocation(line: 2861, column: 7, scope: !5921)
!5926 = !DILocation(line: 2861, column: 21, scope: !5921)
!5927 = !DILocation(line: 2863, column: 12, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5921, file: !355, line: 2863, column: 11)
!5929 = !DILocation(line: 2864, column: 31, scope: !5928)
!5930 = !DILocation(line: 2864, column: 41, scope: !5928)
!5931 = !DILocation(line: 2864, column: 14, scope: !5928)
!5932 = !DILocation(line: 2865, column: 23, scope: !5928)
!5933 = !DILocation(line: 2865, column: 33, scope: !5928)
!5934 = !DILocation(line: 2865, column: 14, scope: !5928)
!5935 = !DILocation(line: 2866, column: 11, scope: !5928)
!5936 = !DILocation(line: 2863, column: 11, scope: !5921)
!5937 = !DILocation(line: 2868, column: 21, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5928, file: !355, line: 2867, column: 9)
!5939 = !DILocation(line: 2868, column: 28, scope: !5938)
!5940 = !DILocation(line: 2868, column: 58, scope: !5938)
!5941 = !DILocation(line: 2868, column: 11, scope: !5938)
!5942 = !DILocation(line: 2869, column: 15, scope: !5943)
!5943 = distinct !DILexicalBlock(scope: !5938, file: !355, line: 2869, column: 15)
!5944 = !DILocation(line: 2869, column: 18, scope: !5943)
!5945 = !DILocation(line: 2869, column: 15, scope: !5938)
!5946 = !DILocation(line: 2870, column: 13, scope: !5943)
!5947 = !DILocation(line: 2871, column: 9, scope: !5938)
!5948 = !DILocation(line: 2872, column: 5, scope: !5921)
!5949 = !DILocation(line: 2875, column: 8, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2875, column: 7)
!5951 = !DILocation(line: 2875, column: 24, scope: !5950)
!5952 = !DILocation(line: 2875, column: 27, scope: !5950)
!5953 = !DILocation(line: 2875, column: 30, scope: !5950)
!5954 = !DILocation(line: 2876, column: 7, scope: !5950)
!5955 = !DILocation(line: 2876, column: 11, scope: !5950)
!5956 = !DILocation(line: 2876, column: 19, scope: !5950)
!5957 = !DILocation(line: 2876, column: 23, scope: !5950)
!5958 = !DILocation(line: 2875, column: 7, scope: !4487)
!5959 = !DILocation(line: 2878, column: 26, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5950, file: !355, line: 2877, column: 5)
!5961 = !DILocation(line: 2878, column: 29, scope: !5960)
!5962 = !DILocation(line: 2878, column: 52, scope: !5960)
!5963 = !DILocation(line: 2878, column: 15, scope: !5960)
!5964 = !DILocation(line: 2878, column: 7, scope: !5960)
!5965 = !DILocation(line: 2881, column: 11, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5960, file: !355, line: 2879, column: 9)
!5967 = !DILocation(line: 2884, column: 20, scope: !5966)
!5968 = !DILocation(line: 2885, column: 11, scope: !5966)
!5969 = !DILocation(line: 2887, column: 5, scope: !5960)
!5970 = !DILocation(line: 2890, column: 7, scope: !5971)
!5971 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2890, column: 7)
!5972 = !DILocation(line: 2890, column: 10, scope: !5971)
!5973 = !DILocation(line: 2890, column: 25, scope: !5971)
!5974 = !DILocation(line: 2890, column: 41, scope: !5971)
!5975 = !DILocation(line: 2890, column: 55, scope: !5971)
!5976 = !DILocation(line: 2890, column: 69, scope: !5971)
!5977 = !DILocation(line: 2890, column: 30, scope: !5971)
!5978 = !DILocation(line: 2891, column: 7, scope: !5971)
!5979 = !DILocation(line: 2891, column: 10, scope: !5971)
!5980 = !DILocation(line: 2891, column: 13, scope: !5971)
!5981 = !DILocation(line: 2890, column: 7, scope: !4487)
!5982 = !DILocation(line: 2892, column: 5, scope: !5971)
!5983 = !DILocation(line: 2895, column: 7, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2895, column: 7)
!5985 = !DILocation(line: 2895, column: 7, scope: !4487)
!5986 = !DILocation(line: 2896, column: 12, scope: !5984)
!5987 = !DILocation(line: 2896, column: 5, scope: !5984)
!5988 = !DILocation(line: 2898, column: 15, scope: !4487)
!5989 = !DILocation(line: 2898, column: 3, scope: !4487)
!5990 = !DILocation(line: 2900, column: 7, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2900, column: 7)
!5992 = !DILocation(line: 2900, column: 10, scope: !5991)
!5993 = !DILocation(line: 2900, column: 24, scope: !5991)
!5994 = !DILocation(line: 2900, column: 27, scope: !5991)
!5995 = !DILocation(line: 2900, column: 30, scope: !5991)
!5996 = !DILocation(line: 2900, column: 7, scope: !4487)
!5997 = !DILocation(line: 2902, column: 21, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5999, file: !355, line: 2902, column: 11)
!5999 = distinct !DILexicalBlock(scope: !5991, file: !355, line: 2901, column: 5)
!6000 = !DILocation(line: 2902, column: 35, scope: !5998)
!6001 = !DILocation(line: 2902, column: 49, scope: !5998)
!6002 = !DILocation(line: 2902, column: 11, scope: !5998)
!6003 = !DILocation(line: 2902, column: 59, scope: !5998)
!6004 = !DILocation(line: 2903, column: 11, scope: !5998)
!6005 = !DILocation(line: 2903, column: 14, scope: !5998)
!6006 = !DILocation(line: 2903, column: 17, scope: !5998)
!6007 = !DILocation(line: 2902, column: 11, scope: !5999)
!6008 = !DILocation(line: 2904, column: 9, scope: !5998)
!6009 = !DILocation(line: 2905, column: 5, scope: !5999)
!6010 = !DILocation(line: 2906, column: 12, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5991, file: !355, line: 2906, column: 12)
!6012 = !DILocation(line: 2906, column: 15, scope: !6011)
!6013 = !DILocation(line: 2906, column: 12, scope: !5991)
!6014 = !DILocation(line: 2908, column: 20, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6016, file: !355, line: 2908, column: 11)
!6016 = distinct !DILexicalBlock(scope: !6011, file: !355, line: 2907, column: 5)
!6017 = !DILocation(line: 2908, column: 34, scope: !6015)
!6018 = !DILocation(line: 2908, column: 37, scope: !6015)
!6019 = !DILocation(line: 2908, column: 11, scope: !6015)
!6020 = !DILocation(line: 2908, column: 43, scope: !6015)
!6021 = !DILocation(line: 2908, column: 11, scope: !6016)
!6022 = !DILocation(line: 2909, column: 9, scope: !6015)
!6023 = !DILocation(line: 2910, column: 5, scope: !6016)
!6024 = !DILocation(line: 2911, column: 12, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6011, file: !355, line: 2911, column: 12)
!6026 = !DILocation(line: 2911, column: 15, scope: !6025)
!6027 = !DILocation(line: 2911, column: 41, scope: !6025)
!6028 = !DILocation(line: 2911, column: 44, scope: !6025)
!6029 = !DILocation(line: 2911, column: 12, scope: !6011)
!6030 = !DILocalVariable(name: "default_permissions", scope: !6031, file: !355, line: 2913, type: !5)
!6031 = distinct !DILexicalBlock(scope: !6025, file: !355, line: 2912, column: 5)
!6032 = !DILocation(line: 2913, column: 11, scope: !6031)
!6033 = !DILocation(line: 2913, column: 33, scope: !6031)
!6034 = !DILocation(line: 2913, column: 52, scope: !6031)
!6035 = !DILocation(line: 2913, column: 55, scope: !6031)
!6036 = !DILocation(line: 2915, column: 20, scope: !6037)
!6037 = distinct !DILexicalBlock(scope: !6031, file: !355, line: 2915, column: 11)
!6038 = !DILocation(line: 2915, column: 34, scope: !6037)
!6039 = !DILocation(line: 2915, column: 57, scope: !6037)
!6040 = !DILocation(line: 2915, column: 56, scope: !6037)
!6041 = !DILocation(line: 2915, column: 54, scope: !6037)
!6042 = !DILocation(line: 2915, column: 11, scope: !6037)
!6043 = !DILocation(line: 2915, column: 74, scope: !6037)
!6044 = !DILocation(line: 2915, column: 11, scope: !6031)
!6045 = !DILocation(line: 2916, column: 9, scope: !6037)
!6046 = !DILocation(line: 2917, column: 5, scope: !6031)
!6047 = !DILocation(line: 2920, column: 11, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6049, file: !355, line: 2920, column: 11)
!6049 = distinct !DILexicalBlock(scope: !6025, file: !355, line: 2919, column: 5)
!6050 = !DILocation(line: 2920, column: 11, scope: !6049)
!6051 = !DILocation(line: 2922, column: 36, scope: !6052)
!6052 = distinct !DILexicalBlock(scope: !6048, file: !355, line: 2921, column: 9)
!6053 = !DILocation(line: 2922, column: 34, scope: !6052)
!6054 = !DILocation(line: 2922, column: 31, scope: !6052)
!6055 = !DILocation(line: 2924, column: 15, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6052, file: !355, line: 2924, column: 15)
!6057 = !DILocation(line: 2924, column: 35, scope: !6056)
!6058 = !DILocation(line: 2924, column: 39, scope: !6056)
!6059 = !DILocation(line: 2924, column: 15, scope: !6052)
!6060 = !DILocation(line: 2932, column: 19, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6062, file: !355, line: 2932, column: 19)
!6062 = distinct !DILexicalBlock(scope: !6056, file: !355, line: 2925, column: 13)
!6063 = !DILocation(line: 2932, column: 27, scope: !6061)
!6064 = !DILocation(line: 2932, column: 37, scope: !6061)
!6065 = !DILocation(line: 2932, column: 30, scope: !6061)
!6066 = !DILocation(line: 2932, column: 56, scope: !6061)
!6067 = !DILocation(line: 2932, column: 19, scope: !6062)
!6068 = !DILocation(line: 2934, column: 29, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6061, file: !355, line: 2933, column: 17)
!6070 = !DILocation(line: 2934, column: 36, scope: !6069)
!6071 = !DILocation(line: 2934, column: 57, scope: !6069)
!6072 = !DILocation(line: 2934, column: 19, scope: !6069)
!6073 = !DILocation(line: 2935, column: 19, scope: !6069)
!6074 = !DILocation(line: 2937, column: 33, scope: !6062)
!6075 = !DILocation(line: 2937, column: 24, scope: !6062)
!6076 = !DILocation(line: 2938, column: 19, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6062, file: !355, line: 2938, column: 19)
!6078 = !DILocation(line: 2938, column: 42, scope: !6077)
!6079 = !DILocation(line: 2938, column: 41, scope: !6077)
!6080 = !DILocation(line: 2938, column: 39, scope: !6077)
!6081 = !DILocation(line: 2938, column: 19, scope: !6062)
!6082 = !DILocation(line: 2939, column: 34, scope: !6077)
!6083 = !DILocation(line: 2939, column: 17, scope: !6077)
!6084 = !DILocation(line: 2940, column: 13, scope: !6062)
!6085 = !DILocation(line: 2941, column: 9, scope: !6052)
!6086 = !DILocation(line: 2943, column: 11, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6049, file: !355, line: 2943, column: 11)
!6088 = !DILocation(line: 2943, column: 11, scope: !6049)
!6089 = !DILocation(line: 2945, column: 23, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !355, line: 2945, column: 15)
!6091 = distinct !DILexicalBlock(scope: !6087, file: !355, line: 2944, column: 9)
!6092 = !DILocation(line: 2945, column: 33, scope: !6090)
!6093 = !DILocation(line: 2945, column: 44, scope: !6090)
!6094 = !DILocation(line: 2945, column: 42, scope: !6090)
!6095 = !DILocation(line: 2945, column: 15, scope: !6090)
!6096 = !DILocation(line: 2945, column: 65, scope: !6090)
!6097 = !DILocation(line: 2945, column: 15, scope: !6091)
!6098 = !DILocation(line: 2947, column: 25, scope: !6099)
!6099 = distinct !DILexicalBlock(scope: !6090, file: !355, line: 2946, column: 13)
!6100 = !DILocation(line: 2947, column: 32, scope: !6099)
!6101 = !DILocation(line: 2948, column: 22, scope: !6099)
!6102 = !DILocation(line: 2947, column: 15, scope: !6099)
!6103 = !DILocation(line: 2949, column: 19, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6099, file: !355, line: 2949, column: 19)
!6105 = !DILocation(line: 2949, column: 22, scope: !6104)
!6106 = !DILocation(line: 2949, column: 19, scope: !6099)
!6107 = !DILocation(line: 2950, column: 17, scope: !6104)
!6108 = !DILocation(line: 2951, column: 13, scope: !6099)
!6109 = !DILocation(line: 2952, column: 9, scope: !6091)
!6110 = !DILocation(line: 2955, column: 10, scope: !4487)
!6111 = !DILocation(line: 2955, column: 3, scope: !4487)
!6112 = !DILabel(scope: !4487, name: "un_backup", file: !355, line: 2957)
!6113 = !DILocation(line: 2957, column: 1, scope: !4487)
!6114 = !DILocation(line: 2959, column: 7, scope: !6115)
!6115 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2959, column: 7)
!6116 = !DILocation(line: 2959, column: 10, scope: !6115)
!6117 = !DILocation(line: 2959, column: 7, scope: !4487)
!6118 = !DILocation(line: 2960, column: 5, scope: !6115)
!6119 = !DILocation(line: 2968, column: 7, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2968, column: 7)
!6121 = !DILocation(line: 2968, column: 20, scope: !6120)
!6122 = !DILocation(line: 2968, column: 7, scope: !4487)
!6123 = !DILocation(line: 2969, column: 28, scope: !6120)
!6124 = !DILocation(line: 2969, column: 43, scope: !6120)
!6125 = !DILocation(line: 2969, column: 5, scope: !6120)
!6126 = !DILocation(line: 2971, column: 7, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !4487, file: !355, line: 2971, column: 7)
!6128 = !DILocation(line: 2971, column: 7, scope: !4487)
!6129 = !DILocation(line: 2973, column: 19, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6131, file: !355, line: 2973, column: 11)
!6131 = distinct !DILexicalBlock(scope: !6127, file: !355, line: 2972, column: 5)
!6132 = !DILocation(line: 2973, column: 31, scope: !6130)
!6133 = !DILocation(line: 2973, column: 11, scope: !6130)
!6134 = !DILocation(line: 2973, column: 41, scope: !6130)
!6135 = !DILocation(line: 2973, column: 11, scope: !6131)
!6136 = !DILocation(line: 2974, column: 19, scope: !6130)
!6137 = !DILocation(line: 2974, column: 26, scope: !6130)
!6138 = !DILocation(line: 2974, column: 52, scope: !6130)
!6139 = !DILocation(line: 2974, column: 9, scope: !6130)
!6140 = !DILocation(line: 2977, column: 15, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !355, line: 2977, column: 15)
!6142 = distinct !DILexicalBlock(scope: !6130, file: !355, line: 2976, column: 9)
!6143 = !DILocation(line: 2977, column: 18, scope: !6141)
!6144 = !DILocation(line: 2977, column: 15, scope: !6142)
!6145 = !DILocation(line: 2978, column: 21, scope: !6141)
!6146 = !DILocation(line: 2979, column: 21, scope: !6141)
!6147 = !DILocation(line: 2979, column: 48, scope: !6141)
!6148 = !DILocation(line: 2978, column: 13, scope: !6141)
!6149 = !DILocation(line: 2981, column: 5, scope: !6131)
!6150 = !DILocation(line: 2982, column: 3, scope: !4487)
!6151 = !DILocation(line: 2983, column: 1, scope: !4487)
!6152 = distinct !DISubprogram(name: "follow_fstatat", scope: !355, file: !355, line: 158, type: !452, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6153 = !DILocalVariable(name: "dirfd", arg: 1, scope: !6152, file: !355, line: 158, type: !5)
!6154 = !DILocation(line: 158, column: 21, scope: !6152)
!6155 = !DILocalVariable(name: "filename", arg: 2, scope: !6152, file: !355, line: 158, type: !177)
!6156 = !DILocation(line: 158, column: 40, scope: !6152)
!6157 = !DILocalVariable(name: "st", arg: 3, scope: !6152, file: !355, line: 158, type: !450)
!6158 = !DILocation(line: 158, column: 63, scope: !6152)
!6159 = !DILocalVariable(name: "flags", arg: 4, scope: !6152, file: !355, line: 158, type: !5)
!6160 = !DILocation(line: 158, column: 71, scope: !6152)
!6161 = !DILocalVariable(name: "result", scope: !6152, file: !355, line: 160, type: !5)
!6162 = !DILocation(line: 160, column: 7, scope: !6152)
!6163 = !DILocation(line: 160, column: 25, scope: !6152)
!6164 = !DILocation(line: 160, column: 32, scope: !6152)
!6165 = !DILocation(line: 160, column: 42, scope: !6152)
!6166 = !DILocation(line: 160, column: 46, scope: !6152)
!6167 = !DILocation(line: 160, column: 16, scope: !6152)
!6168 = !DILocation(line: 183, column: 10, scope: !6152)
!6169 = !DILocation(line: 183, column: 3, scope: !6152)
!6170 = distinct !DISubprogram(name: "should_dereference", scope: !355, file: !355, line: 1840, type: !454, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6171 = !DILocalVariable(name: "x", arg: 1, scope: !6170, file: !355, line: 1840, type: !362)
!6172 = !DILocation(line: 1840, column: 46, scope: !6170)
!6173 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !6170, file: !355, line: 1840, type: !139)
!6174 = !DILocation(line: 1840, column: 54, scope: !6170)
!6175 = !DILocation(line: 1842, column: 10, scope: !6170)
!6176 = !DILocation(line: 1842, column: 13, scope: !6170)
!6177 = !DILocation(line: 1842, column: 25, scope: !6170)
!6178 = !DILocation(line: 1843, column: 10, scope: !6170)
!6179 = !DILocation(line: 1843, column: 14, scope: !6170)
!6180 = !DILocation(line: 1843, column: 17, scope: !6170)
!6181 = !DILocation(line: 1843, column: 29, scope: !6170)
!6182 = !DILocation(line: 1844, column: 14, scope: !6170)
!6183 = !DILocation(line: 1844, column: 17, scope: !6170)
!6184 = !DILocation(line: 0, scope: !6170)
!6185 = !DILocation(line: 1842, column: 3, scope: !6170)
!6186 = distinct !DISubprogram(name: "same_file_ok", scope: !355, file: !355, line: 1464, type: !456, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6187 = !DILocalVariable(name: "src_name", arg: 1, scope: !6186, file: !355, line: 1464, type: !177)
!6188 = !DILocation(line: 1464, column: 27, scope: !6186)
!6189 = !DILocalVariable(name: "src_sb", arg: 2, scope: !6186, file: !355, line: 1464, type: !419)
!6190 = !DILocation(line: 1464, column: 56, scope: !6186)
!6191 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6186, file: !355, line: 1465, type: !177)
!6192 = !DILocation(line: 1465, column: 27, scope: !6186)
!6193 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !6186, file: !355, line: 1465, type: !419)
!6194 = !DILocation(line: 1465, column: 56, scope: !6186)
!6195 = !DILocalVariable(name: "x", arg: 5, scope: !6186, file: !355, line: 1466, type: !362)
!6196 = !DILocation(line: 1466, column: 40, scope: !6186)
!6197 = !DILocalVariable(name: "return_now", arg: 6, scope: !6186, file: !355, line: 1466, type: !412)
!6198 = !DILocation(line: 1466, column: 49, scope: !6186)
!6199 = !DILocalVariable(name: "src_sb_link", scope: !6186, file: !355, line: 1468, type: !419)
!6200 = !DILocation(line: 1468, column: 22, scope: !6186)
!6201 = !DILocalVariable(name: "dst_sb_link", scope: !6186, file: !355, line: 1469, type: !419)
!6202 = !DILocation(line: 1469, column: 22, scope: !6186)
!6203 = !DILocalVariable(name: "tmp_dst_sb", scope: !6186, file: !355, line: 1470, type: !421)
!6204 = !DILocation(line: 1470, column: 15, scope: !6186)
!6205 = !DILocalVariable(name: "tmp_src_sb", scope: !6186, file: !355, line: 1471, type: !421)
!6206 = !DILocation(line: 1471, column: 15, scope: !6186)
!6207 = !DILocalVariable(name: "same_link", scope: !6186, file: !355, line: 1473, type: !139)
!6208 = !DILocation(line: 1473, column: 8, scope: !6186)
!6209 = !DILocalVariable(name: "same", scope: !6186, file: !355, line: 1474, type: !139)
!6210 = !DILocation(line: 1474, column: 8, scope: !6186)
!6211 = !DILocation(line: 1474, column: 15, scope: !6186)
!6212 = !DILocation(line: 0, scope: !6186)
!6213 = !DILocation(line: 1476, column: 4, scope: !6186)
!6214 = !DILocation(line: 1476, column: 15, scope: !6186)
!6215 = !DILocation(line: 1483, column: 7, scope: !6216)
!6216 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1483, column: 7)
!6217 = !DILocation(line: 1483, column: 12, scope: !6216)
!6218 = !DILocation(line: 1483, column: 15, scope: !6216)
!6219 = !DILocation(line: 1483, column: 18, scope: !6216)
!6220 = !DILocation(line: 1483, column: 7, scope: !6186)
!6221 = !DILocation(line: 1485, column: 8, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6216, file: !355, line: 1484, column: 5)
!6223 = !DILocation(line: 1485, column: 19, scope: !6222)
!6224 = !DILocation(line: 1486, column: 7, scope: !6222)
!6225 = !DILocation(line: 1489, column: 7, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1489, column: 7)
!6227 = !DILocation(line: 1489, column: 10, scope: !6226)
!6228 = !DILocation(line: 1489, column: 22, scope: !6226)
!6229 = !DILocation(line: 1489, column: 7, scope: !6186)
!6230 = !DILocation(line: 1491, column: 19, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6226, file: !355, line: 1490, column: 5)
!6232 = !DILocation(line: 1491, column: 17, scope: !6231)
!6233 = !DILocation(line: 1496, column: 11, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6231, file: !355, line: 1496, column: 11)
!6235 = !DILocation(line: 1496, column: 37, scope: !6234)
!6236 = !DILocation(line: 1496, column: 40, scope: !6234)
!6237 = !DILocation(line: 1496, column: 11, scope: !6231)
!6238 = !DILocalVariable(name: "sn", scope: !6239, file: !355, line: 1498, type: !139)
!6239 = distinct !DILexicalBlock(scope: !6234, file: !355, line: 1497, column: 9)
!6240 = !DILocation(line: 1498, column: 16, scope: !6239)
!6241 = !DILocation(line: 1498, column: 32, scope: !6239)
!6242 = !DILocation(line: 1498, column: 42, scope: !6239)
!6243 = !DILocation(line: 1498, column: 21, scope: !6239)
!6244 = !DILocation(line: 1499, column: 18, scope: !6245)
!6245 = distinct !DILexicalBlock(scope: !6239, file: !355, line: 1499, column: 16)
!6246 = !DILocation(line: 1499, column: 16, scope: !6239)
!6247 = !DILocation(line: 1502, column: 19, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !355, line: 1502, column: 19)
!6249 = distinct !DILexicalBlock(scope: !6245, file: !355, line: 1500, column: 13)
!6250 = !DILocation(line: 1502, column: 22, scope: !6248)
!6251 = !DILocation(line: 1502, column: 34, scope: !6248)
!6252 = !DILocation(line: 1502, column: 19, scope: !6249)
!6253 = !DILocation(line: 1503, column: 17, scope: !6248)
!6254 = !DILocation(line: 1509, column: 19, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6249, file: !355, line: 1509, column: 19)
!6256 = !DILocation(line: 1509, column: 19, scope: !6249)
!6257 = !DILocation(line: 1511, column: 20, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6255, file: !355, line: 1510, column: 17)
!6259 = !DILocation(line: 1511, column: 31, scope: !6258)
!6260 = !DILocation(line: 1512, column: 28, scope: !6258)
!6261 = !DILocation(line: 1512, column: 31, scope: !6258)
!6262 = !DILocation(line: 1512, column: 26, scope: !6258)
!6263 = !DILocation(line: 1512, column: 19, scope: !6258)
!6264 = !DILocation(line: 1514, column: 13, scope: !6249)
!6265 = !DILocation(line: 1516, column: 20, scope: !6239)
!6266 = !DILocation(line: 1516, column: 18, scope: !6239)
!6267 = !DILocation(line: 1516, column: 11, scope: !6239)
!6268 = !DILocation(line: 1519, column: 21, scope: !6231)
!6269 = !DILocation(line: 1519, column: 19, scope: !6231)
!6270 = !DILocation(line: 1520, column: 21, scope: !6231)
!6271 = !DILocation(line: 1520, column: 19, scope: !6231)
!6272 = !DILocation(line: 1521, column: 5, scope: !6231)
!6273 = !DILocation(line: 1524, column: 12, scope: !6274)
!6274 = distinct !DILexicalBlock(scope: !6275, file: !355, line: 1524, column: 11)
!6275 = distinct !DILexicalBlock(scope: !6226, file: !355, line: 1523, column: 5)
!6276 = !DILocation(line: 1524, column: 11, scope: !6275)
!6277 = !DILocation(line: 1525, column: 9, scope: !6274)
!6278 = !DILocation(line: 1527, column: 18, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6275, file: !355, line: 1527, column: 11)
!6280 = !DILocation(line: 1527, column: 11, scope: !6279)
!6281 = !DILocation(line: 1527, column: 41, scope: !6279)
!6282 = !DILocation(line: 1528, column: 11, scope: !6279)
!6283 = !DILocation(line: 1528, column: 21, scope: !6279)
!6284 = !DILocation(line: 1528, column: 14, scope: !6279)
!6285 = !DILocation(line: 1528, column: 44, scope: !6279)
!6286 = !DILocation(line: 1527, column: 11, scope: !6275)
!6287 = !DILocation(line: 1529, column: 9, scope: !6279)
!6288 = !DILocation(line: 1531, column: 19, scope: !6275)
!6289 = !DILocation(line: 1532, column: 19, scope: !6275)
!6290 = !DILocation(line: 1534, column: 19, scope: !6275)
!6291 = !DILocation(line: 0, scope: !6275)
!6292 = !DILocation(line: 1534, column: 17, scope: !6275)
!6293 = !DILocation(line: 1541, column: 11, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6275, file: !355, line: 1541, column: 11)
!6295 = !DILocation(line: 1541, column: 42, scope: !6294)
!6296 = !DILocation(line: 1541, column: 45, scope: !6294)
!6297 = !DILocation(line: 1542, column: 11, scope: !6294)
!6298 = !DILocation(line: 1542, column: 14, scope: !6294)
!6299 = !DILocation(line: 1542, column: 17, scope: !6294)
!6300 = !DILocation(line: 1541, column: 11, scope: !6275)
!6301 = !DILocation(line: 1543, column: 9, scope: !6294)
!6302 = !DILocation(line: 1551, column: 7, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1551, column: 7)
!6304 = !DILocation(line: 1551, column: 10, scope: !6303)
!6305 = !DILocation(line: 1551, column: 22, scope: !6303)
!6306 = !DILocation(line: 1551, column: 7, scope: !6186)
!6307 = !DILocation(line: 1553, column: 12, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !355, line: 1553, column: 11)
!6309 = distinct !DILexicalBlock(scope: !6303, file: !355, line: 1552, column: 5)
!6310 = !DILocation(line: 1553, column: 11, scope: !6309)
!6311 = !DILocation(line: 1571, column: 18, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6313, file: !355, line: 1571, column: 16)
!6313 = distinct !DILexicalBlock(scope: !6308, file: !355, line: 1554, column: 9)
!6314 = !DILocation(line: 1571, column: 21, scope: !6312)
!6315 = !DILocation(line: 1572, column: 16, scope: !6312)
!6316 = !DILocation(line: 1572, column: 19, scope: !6312)
!6317 = !DILocation(line: 1572, column: 22, scope: !6312)
!6318 = !DILocation(line: 1572, column: 34, scope: !6312)
!6319 = !DILocation(line: 1573, column: 16, scope: !6312)
!6320 = !DILocation(line: 1573, column: 19, scope: !6312)
!6321 = !DILocation(line: 1574, column: 16, scope: !6312)
!6322 = !DILocation(line: 1574, column: 21, scope: !6312)
!6323 = !DILocation(line: 1571, column: 16, scope: !6313)
!6324 = !DILocation(line: 1575, column: 13, scope: !6312)
!6325 = !DILocation(line: 1577, column: 11, scope: !6313)
!6326 = !DILocation(line: 1581, column: 27, scope: !6309)
!6327 = !DILocation(line: 1581, column: 37, scope: !6309)
!6328 = !DILocation(line: 1581, column: 16, scope: !6309)
!6329 = !DILocation(line: 1581, column: 14, scope: !6309)
!6330 = !DILocation(line: 1581, column: 7, scope: !6309)
!6331 = !DILocation(line: 1601, column: 7, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1601, column: 7)
!6333 = !DILocation(line: 1601, column: 10, scope: !6332)
!6334 = !DILocation(line: 1601, column: 20, scope: !6332)
!6335 = !DILocation(line: 1601, column: 23, scope: !6332)
!6336 = !DILocation(line: 1601, column: 26, scope: !6332)
!6337 = !DILocation(line: 1601, column: 7, scope: !6186)
!6338 = !DILocation(line: 1607, column: 11, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !355, line: 1607, column: 11)
!6340 = distinct !DILexicalBlock(scope: !6332, file: !355, line: 1602, column: 5)
!6341 = !DILocation(line: 1607, column: 11, scope: !6340)
!6342 = !DILocation(line: 1608, column: 9, scope: !6339)
!6343 = !DILocation(line: 1612, column: 11, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6340, file: !355, line: 1612, column: 11)
!6345 = !DILocation(line: 1613, column: 11, scope: !6344)
!6346 = !DILocation(line: 1613, column: 18, scope: !6344)
!6347 = !DILocation(line: 1613, column: 31, scope: !6344)
!6348 = !DILocation(line: 1613, column: 16, scope: !6344)
!6349 = !DILocation(line: 1614, column: 11, scope: !6344)
!6350 = !DILocation(line: 1614, column: 27, scope: !6344)
!6351 = !DILocation(line: 1614, column: 37, scope: !6344)
!6352 = !DILocation(line: 1614, column: 16, scope: !6344)
!6353 = !DILocation(line: 1612, column: 11, scope: !6340)
!6354 = !DILocation(line: 1615, column: 18, scope: !6344)
!6355 = !DILocation(line: 1615, column: 21, scope: !6344)
!6356 = !DILocation(line: 1615, column: 16, scope: !6344)
!6357 = !DILocation(line: 1615, column: 9, scope: !6344)
!6358 = !DILocation(line: 1616, column: 5, scope: !6340)
!6359 = !DILocation(line: 1620, column: 8, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1620, column: 7)
!6361 = !DILocation(line: 1620, column: 39, scope: !6360)
!6362 = !DILocation(line: 1620, column: 43, scope: !6360)
!6363 = !DILocation(line: 1620, column: 7, scope: !6186)
!6364 = !DILocation(line: 1622, column: 12, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6366, file: !355, line: 1622, column: 11)
!6366 = distinct !DILexicalBlock(scope: !6360, file: !355, line: 1621, column: 5)
!6367 = !DILocation(line: 1622, column: 11, scope: !6366)
!6368 = !DILocation(line: 1623, column: 9, scope: !6365)
!6369 = !DILocation(line: 1626, column: 11, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6366, file: !355, line: 1626, column: 11)
!6371 = !DILocation(line: 1626, column: 14, scope: !6370)
!6372 = !DILocation(line: 1626, column: 11, scope: !6366)
!6373 = !DILocation(line: 1628, column: 12, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6370, file: !355, line: 1627, column: 9)
!6375 = !DILocation(line: 1628, column: 23, scope: !6374)
!6376 = !DILocation(line: 1629, column: 11, scope: !6374)
!6377 = !DILocation(line: 1631, column: 5, scope: !6366)
!6378 = !DILocation(line: 1653, column: 7, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1653, column: 7)
!6380 = !DILocation(line: 1653, column: 10, scope: !6379)
!6381 = !DILocation(line: 1654, column: 7, scope: !6379)
!6382 = !DILocation(line: 1654, column: 10, scope: !6379)
!6383 = !DILocation(line: 1655, column: 7, scope: !6379)
!6384 = !DILocation(line: 1655, column: 14, scope: !6379)
!6385 = !DILocation(line: 1655, column: 27, scope: !6379)
!6386 = !DILocation(line: 1655, column: 12, scope: !6379)
!6387 = !DILocation(line: 1653, column: 7, scope: !6186)
!6388 = !DILocalVariable(name: "abs_src", scope: !6389, file: !355, line: 1657, type: !7)
!6389 = distinct !DILexicalBlock(scope: !6379, file: !355, line: 1656, column: 5)
!6390 = !DILocation(line: 1657, column: 13, scope: !6389)
!6391 = !DILocation(line: 1657, column: 47, scope: !6389)
!6392 = !DILocation(line: 1657, column: 23, scope: !6389)
!6393 = !DILocation(line: 1658, column: 11, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6389, file: !355, line: 1658, column: 11)
!6395 = !DILocation(line: 1658, column: 11, scope: !6389)
!6396 = !DILocalVariable(name: "result", scope: !6397, file: !355, line: 1660, type: !139)
!6397 = distinct !DILexicalBlock(scope: !6394, file: !355, line: 1659, column: 9)
!6398 = !DILocation(line: 1660, column: 16, scope: !6397)
!6399 = !DILocation(line: 1660, column: 38, scope: !6397)
!6400 = !DILocation(line: 1660, column: 47, scope: !6397)
!6401 = !DILocation(line: 1660, column: 27, scope: !6397)
!6402 = !DILocation(line: 1660, column: 25, scope: !6397)
!6403 = !DILocation(line: 1661, column: 17, scope: !6397)
!6404 = !DILocation(line: 1661, column: 11, scope: !6397)
!6405 = !DILocation(line: 1662, column: 18, scope: !6397)
!6406 = !DILocation(line: 1662, column: 11, scope: !6397)
!6407 = !DILocation(line: 1664, column: 5, scope: !6389)
!6408 = !DILocation(line: 1667, column: 7, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1667, column: 7)
!6410 = !DILocation(line: 1667, column: 10, scope: !6409)
!6411 = !DILocation(line: 1667, column: 24, scope: !6409)
!6412 = !DILocation(line: 1667, column: 27, scope: !6409)
!6413 = !DILocation(line: 1667, column: 7, scope: !6186)
!6414 = !DILocation(line: 1668, column: 5, scope: !6409)
!6415 = !DILocation(line: 1670, column: 7, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6186, file: !355, line: 1670, column: 7)
!6417 = !DILocation(line: 1670, column: 10, scope: !6416)
!6418 = !DILocation(line: 1670, column: 22, scope: !6416)
!6419 = !DILocation(line: 1670, column: 7, scope: !6186)
!6420 = !DILocation(line: 1672, column: 14, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6422, file: !355, line: 1672, column: 12)
!6422 = distinct !DILexicalBlock(scope: !6416, file: !355, line: 1671, column: 5)
!6423 = !DILocation(line: 1672, column: 12, scope: !6422)
!6424 = !DILocation(line: 1673, column: 23, scope: !6421)
!6425 = !DILocation(line: 1673, column: 22, scope: !6421)
!6426 = !{i64 0, i64 8, !3308, i64 8, i64 8, !3308, i64 16, i64 8, !3308, i64 24, i64 4, !2655, i64 28, i64 4, !2655, i64 32, i64 4, !2655, i64 36, i64 4, !2655, i64 40, i64 8, !3308, i64 48, i64 8, !3308, i64 56, i64 8, !3308, i64 64, i64 8, !3308, i64 72, i64 8, !3308, i64 80, i64 8, !3308, i64 88, i64 8, !3308, i64 96, i64 8, !3308, i64 104, i64 8, !3308, i64 112, i64 8, !3308, i64 120, i64 24, !3315}
!6427 = !DILocation(line: 1673, column: 9, scope: !6421)
!6428 = !DILocation(line: 1674, column: 22, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6421, file: !355, line: 1674, column: 16)
!6430 = !DILocation(line: 1674, column: 16, scope: !6429)
!6431 = !DILocation(line: 1674, column: 45, scope: !6429)
!6432 = !DILocation(line: 1674, column: 16, scope: !6421)
!6433 = !DILocation(line: 1675, column: 9, scope: !6429)
!6434 = !DILocation(line: 1677, column: 14, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6422, file: !355, line: 1677, column: 12)
!6436 = !DILocation(line: 1677, column: 12, scope: !6422)
!6437 = !DILocation(line: 1678, column: 23, scope: !6435)
!6438 = !DILocation(line: 1678, column: 22, scope: !6435)
!6439 = !DILocation(line: 1678, column: 9, scope: !6435)
!6440 = !DILocation(line: 1679, column: 22, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6435, file: !355, line: 1679, column: 16)
!6442 = !DILocation(line: 1679, column: 16, scope: !6441)
!6443 = !DILocation(line: 1679, column: 45, scope: !6441)
!6444 = !DILocation(line: 1679, column: 16, scope: !6435)
!6445 = !DILocation(line: 1680, column: 9, scope: !6441)
!6446 = !DILocation(line: 1682, column: 14, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6422, file: !355, line: 1682, column: 12)
!6448 = !DILocation(line: 1682, column: 12, scope: !6422)
!6449 = !DILocation(line: 1683, column: 9, scope: !6447)
!6450 = !DILocation(line: 1685, column: 11, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6422, file: !355, line: 1685, column: 11)
!6452 = !DILocation(line: 1685, column: 14, scope: !6451)
!6453 = !DILocation(line: 1685, column: 11, scope: !6422)
!6454 = !DILocation(line: 1691, column: 27, scope: !6455)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !355, line: 1686, column: 9)
!6456 = !DILocation(line: 1691, column: 25, scope: !6455)
!6457 = !DILocation(line: 1691, column: 12, scope: !6455)
!6458 = !DILocation(line: 1691, column: 23, scope: !6455)
!6459 = !DILocation(line: 1692, column: 11, scope: !6455)
!6460 = !DILocation(line: 1694, column: 5, scope: !6422)
!6461 = !DILocation(line: 1696, column: 3, scope: !6186)
!6462 = !DILocation(line: 1697, column: 1, scope: !6186)
!6463 = distinct !DISubprogram(name: "create_hard_link", scope: !355, file: !355, line: 1819, type: !458, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6464 = !DILocalVariable(name: "src_name", arg: 1, scope: !6463, file: !355, line: 1819, type: !177)
!6465 = !DILocation(line: 1819, column: 31, scope: !6463)
!6466 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6463, file: !355, line: 1819, type: !177)
!6467 = !DILocation(line: 1819, column: 53, scope: !6463)
!6468 = !DILocalVariable(name: "replace", arg: 3, scope: !6463, file: !355, line: 1820, type: !139)
!6469 = !DILocation(line: 1820, column: 24, scope: !6463)
!6470 = !DILocalVariable(name: "verbose", arg: 4, scope: !6463, file: !355, line: 1820, type: !139)
!6471 = !DILocation(line: 1820, column: 38, scope: !6463)
!6472 = !DILocalVariable(name: "dereference", arg: 5, scope: !6463, file: !355, line: 1820, type: !139)
!6473 = !DILocation(line: 1820, column: 52, scope: !6463)
!6474 = !DILocalVariable(name: "err", scope: !6463, file: !355, line: 1822, type: !5)
!6475 = !DILocation(line: 1822, column: 7, scope: !6463)
!6476 = !DILocation(line: 1822, column: 37, scope: !6463)
!6477 = !DILocation(line: 1822, column: 57, scope: !6463)
!6478 = !DILocation(line: 1823, column: 27, scope: !6463)
!6479 = !DILocation(line: 1824, column: 27, scope: !6463)
!6480 = !DILocation(line: 1822, column: 13, scope: !6463)
!6481 = !DILocation(line: 1825, column: 11, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6463, file: !355, line: 1825, column: 7)
!6483 = !DILocation(line: 1825, column: 9, scope: !6482)
!6484 = !DILocation(line: 1825, column: 7, scope: !6463)
!6485 = !DILocation(line: 1827, column: 17, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6482, file: !355, line: 1826, column: 5)
!6487 = !DILocation(line: 1827, column: 22, scope: !6486)
!6488 = !DILocation(line: 1828, column: 14, scope: !6486)
!6489 = !DILocation(line: 1828, column: 39, scope: !6486)
!6490 = !DILocation(line: 1827, column: 7, scope: !6486)
!6491 = !DILocation(line: 1829, column: 7, scope: !6486)
!6492 = !DILocation(line: 1831, column: 7, scope: !6493)
!6493 = distinct !DILexicalBlock(scope: !6463, file: !355, line: 1831, column: 7)
!6494 = !DILocation(line: 1831, column: 11, scope: !6493)
!6495 = !DILocation(line: 1831, column: 15, scope: !6493)
!6496 = !DILocation(line: 1831, column: 18, scope: !6493)
!6497 = !DILocation(line: 1831, column: 7, scope: !6463)
!6498 = !DILocation(line: 1832, column: 13, scope: !6493)
!6499 = !DILocation(line: 1832, column: 32, scope: !6493)
!6500 = !DILocation(line: 1832, column: 5, scope: !6493)
!6501 = !DILocation(line: 1833, column: 3, scope: !6463)
!6502 = !DILocation(line: 1834, column: 1, scope: !6463)
!6503 = distinct !DISubprogram(name: "abandon_move", scope: !355, file: !355, line: 1778, type: !460, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6504 = !DILocalVariable(name: "x", arg: 1, scope: !6503, file: !355, line: 1778, type: !362)
!6505 = !DILocation(line: 1778, column: 40, scope: !6503)
!6506 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6503, file: !355, line: 1779, type: !177)
!6507 = !DILocation(line: 1779, column: 27, scope: !6503)
!6508 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6503, file: !355, line: 1780, type: !419)
!6509 = !DILocation(line: 1780, column: 34, scope: !6503)
!6510 = !DILocation(line: 1782, column: 3, scope: !6503)
!6511 = !DILocation(line: 1783, column: 11, scope: !6503)
!6512 = !DILocation(line: 1783, column: 14, scope: !6503)
!6513 = !DILocation(line: 1783, column: 26, scope: !6503)
!6514 = !DILocation(line: 1784, column: 11, scope: !6503)
!6515 = !DILocation(line: 1784, column: 16, scope: !6503)
!6516 = !DILocation(line: 1784, column: 19, scope: !6503)
!6517 = !DILocation(line: 1784, column: 31, scope: !6503)
!6518 = !DILocation(line: 1785, column: 16, scope: !6503)
!6519 = !DILocation(line: 1785, column: 20, scope: !6503)
!6520 = !DILocation(line: 1785, column: 23, scope: !6503)
!6521 = !DILocation(line: 1785, column: 35, scope: !6503)
!6522 = !DILocation(line: 1786, column: 20, scope: !6503)
!6523 = !DILocation(line: 1786, column: 23, scope: !6503)
!6524 = !DILocation(line: 1786, column: 26, scope: !6503)
!6525 = !DILocation(line: 1787, column: 20, scope: !6503)
!6526 = !DILocation(line: 1787, column: 47, scope: !6503)
!6527 = !DILocation(line: 1787, column: 57, scope: !6503)
!6528 = !DILocation(line: 1787, column: 65, scope: !6503)
!6529 = !DILocation(line: 1787, column: 25, scope: !6503)
!6530 = !DILocation(line: 1788, column: 15, scope: !6503)
!6531 = !DILocation(line: 1788, column: 34, scope: !6503)
!6532 = !DILocation(line: 1788, column: 37, scope: !6503)
!6533 = !DILocation(line: 1788, column: 47, scope: !6503)
!6534 = !DILocation(line: 1788, column: 20, scope: !6503)
!6535 = !DILocation(line: 1788, column: 18, scope: !6503)
!6536 = !DILocation(line: 0, scope: !6503)
!6537 = !DILocation(line: 1783, column: 3, scope: !6503)
!6538 = distinct !DISubprogram(name: "overwrite_ok", scope: !355, file: !355, line: 1710, type: !460, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6539 = !DILocalVariable(name: "x", arg: 1, scope: !6538, file: !355, line: 1710, type: !362)
!6540 = !DILocation(line: 1710, column: 40, scope: !6538)
!6541 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6538, file: !355, line: 1710, type: !177)
!6542 = !DILocation(line: 1710, column: 55, scope: !6538)
!6543 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6538, file: !355, line: 1711, type: !419)
!6544 = !DILocation(line: 1711, column: 34, scope: !6538)
!6545 = !DILocation(line: 1713, column: 31, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6538, file: !355, line: 1713, column: 7)
!6547 = !DILocation(line: 1713, column: 41, scope: !6546)
!6548 = !DILocation(line: 1713, column: 49, scope: !6546)
!6549 = !DILocation(line: 1713, column: 9, scope: !6546)
!6550 = !DILocation(line: 1713, column: 7, scope: !6538)
!6551 = !DILocalVariable(name: "perms", scope: !6552, file: !355, line: 1715, type: !464)
!6552 = distinct !DILexicalBlock(scope: !6546, file: !355, line: 1714, column: 5)
!6553 = !DILocation(line: 1715, column: 12, scope: !6552)
!6554 = !DILocation(line: 1716, column: 16, scope: !6552)
!6555 = !DILocation(line: 1716, column: 24, scope: !6552)
!6556 = !DILocation(line: 1716, column: 33, scope: !6552)
!6557 = !DILocation(line: 1716, column: 7, scope: !6552)
!6558 = !DILocation(line: 1717, column: 7, scope: !6552)
!6559 = !DILocation(line: 1717, column: 17, scope: !6552)
!6560 = !DILocation(line: 1718, column: 16, scope: !6552)
!6561 = !DILocation(line: 1719, column: 17, scope: !6552)
!6562 = !DILocation(line: 1719, column: 20, scope: !6552)
!6563 = !DILocation(line: 1719, column: 30, scope: !6552)
!6564 = !DILocation(line: 1719, column: 33, scope: !6552)
!6565 = !DILocation(line: 1719, column: 36, scope: !6552)
!6566 = !DILocation(line: 1720, column: 17, scope: !6552)
!6567 = !DILocation(line: 1720, column: 20, scope: !6552)
!6568 = !DILocation(line: 1720, column: 23, scope: !6552)
!6569 = !DILocation(line: 1719, column: 16, scope: !6552)
!6570 = !DILocation(line: 1721, column: 18, scope: !6552)
!6571 = !DILocation(line: 1722, column: 18, scope: !6552)
!6572 = !DILocation(line: 1723, column: 16, scope: !6552)
!6573 = !DILocation(line: 1723, column: 30, scope: !6552)
!6574 = !DILocation(line: 1724, column: 37, scope: !6552)
!6575 = !DILocation(line: 1724, column: 45, scope: !6552)
!6576 = !DILocation(line: 1724, column: 53, scope: !6552)
!6577 = !DILocation(line: 1724, column: 16, scope: !6552)
!6578 = !DILocation(line: 1725, column: 17, scope: !6552)
!6579 = !DILocation(line: 1718, column: 7, scope: !6552)
!6580 = !DILocation(line: 1726, column: 5, scope: !6552)
!6581 = !DILocation(line: 1729, column: 16, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6546, file: !355, line: 1728, column: 5)
!6583 = !DILocation(line: 1729, column: 24, scope: !6582)
!6584 = !DILocation(line: 1730, column: 16, scope: !6582)
!6585 = !DILocation(line: 1730, column: 30, scope: !6582)
!6586 = !DILocation(line: 1729, column: 7, scope: !6582)
!6587 = !DILocation(line: 1733, column: 10, scope: !6538)
!6588 = !DILocation(line: 1733, column: 3, scope: !6538)
!6589 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !204, file: !204, line: 265, type: !217, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6590 = !DILocalVariable(name: "file_name", arg: 1, scope: !6589, file: !204, line: 265, type: !177)
!6591 = !DILocation(line: 265, column: 28, scope: !6589)
!6592 = !DILocation(line: 267, column: 7, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6589, file: !204, line: 267, column: 7)
!6594 = !DILocation(line: 267, column: 20, scope: !6593)
!6595 = !DILocation(line: 267, column: 7, scope: !6589)
!6596 = !DILocalVariable(name: "sep", scope: !6597, file: !204, line: 269, type: !8)
!6597 = distinct !DILexicalBlock(scope: !6593, file: !204, line: 268, column: 5)
!6598 = !DILocation(line: 269, column: 12, scope: !6597)
!6599 = !DILocation(line: 269, column: 18, scope: !6597)
!6600 = !DILocation(line: 269, column: 29, scope: !6597)
!6601 = !DILocation(line: 269, column: 42, scope: !6597)
!6602 = !DILocation(line: 269, column: 50, scope: !6597)
!6603 = !DILocation(line: 270, column: 17, scope: !6597)
!6604 = !DILocation(line: 270, column: 21, scope: !6597)
!6605 = !DILocation(line: 270, column: 24, scope: !6597)
!6606 = !DILocation(line: 270, column: 7, scope: !6597)
!6607 = !DILocation(line: 273, column: 5, scope: !6593)
!6608 = !DILocation(line: 274, column: 1, scope: !6589)
!6609 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !355, file: !355, line: 1850, type: !505, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6610 = !DILocalVariable(name: "srcbase", arg: 1, scope: !6609, file: !355, line: 1850, type: !177)
!6611 = !DILocation(line: 1850, column: 35, scope: !6609)
!6612 = !DILocalVariable(name: "src_st", arg: 2, scope: !6609, file: !355, line: 1850, type: !419)
!6613 = !DILocation(line: 1850, column: 63, scope: !6609)
!6614 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6609, file: !355, line: 1851, type: !177)
!6615 = !DILocation(line: 1851, column: 35, scope: !6609)
!6616 = !DILocalVariable(name: "srcbaselen", scope: !6609, file: !355, line: 1853, type: !52)
!6617 = !DILocation(line: 1853, column: 10, scope: !6609)
!6618 = !DILocation(line: 1853, column: 31, scope: !6609)
!6619 = !DILocation(line: 1853, column: 23, scope: !6609)
!6620 = !DILocalVariable(name: "dstbase", scope: !6609, file: !355, line: 1854, type: !177)
!6621 = !DILocation(line: 1854, column: 15, scope: !6609)
!6622 = !DILocation(line: 1854, column: 41, scope: !6609)
!6623 = !DILocation(line: 1854, column: 25, scope: !6609)
!6624 = !DILocalVariable(name: "dstbaselen", scope: !6609, file: !355, line: 1855, type: !52)
!6625 = !DILocation(line: 1855, column: 10, scope: !6609)
!6626 = !DILocation(line: 1855, column: 31, scope: !6609)
!6627 = !DILocation(line: 1855, column: 23, scope: !6609)
!6628 = !DILocalVariable(name: "suffixlen", scope: !6609, file: !355, line: 1856, type: !52)
!6629 = !DILocation(line: 1856, column: 10, scope: !6609)
!6630 = !DILocation(line: 1856, column: 30, scope: !6609)
!6631 = !DILocation(line: 1856, column: 22, scope: !6609)
!6632 = !DILocation(line: 1857, column: 10, scope: !6633)
!6633 = distinct !DILexicalBlock(scope: !6609, file: !355, line: 1857, column: 7)
!6634 = !DILocation(line: 1857, column: 24, scope: !6633)
!6635 = !DILocation(line: 1857, column: 37, scope: !6633)
!6636 = !DILocation(line: 1857, column: 35, scope: !6633)
!6637 = !DILocation(line: 1857, column: 21, scope: !6633)
!6638 = !DILocation(line: 1858, column: 10, scope: !6633)
!6639 = !DILocation(line: 1858, column: 21, scope: !6633)
!6640 = !DILocation(line: 1858, column: 30, scope: !6633)
!6641 = !DILocation(line: 1858, column: 39, scope: !6633)
!6642 = !DILocation(line: 1858, column: 13, scope: !6633)
!6643 = !DILocation(line: 1858, column: 51, scope: !6633)
!6644 = !DILocation(line: 1859, column: 10, scope: !6633)
!6645 = !DILocation(line: 1859, column: 13, scope: !6633)
!6646 = !DILocation(line: 1857, column: 7, scope: !6609)
!6647 = !DILocation(line: 1860, column: 5, scope: !6633)
!6648 = !DILocalVariable(name: "dstlen", scope: !6609, file: !355, line: 1861, type: !52)
!6649 = !DILocation(line: 1861, column: 10, scope: !6609)
!6650 = !DILocation(line: 1861, column: 27, scope: !6609)
!6651 = !DILocation(line: 1861, column: 19, scope: !6609)
!6652 = !DILocalVariable(name: "dst_back", scope: !6609, file: !355, line: 1862, type: !7)
!6653 = !DILocation(line: 1862, column: 9, scope: !6609)
!6654 = !DILocation(line: 1862, column: 29, scope: !6609)
!6655 = !DILocation(line: 1862, column: 38, scope: !6609)
!6656 = !DILocation(line: 1862, column: 36, scope: !6609)
!6657 = !DILocation(line: 1862, column: 48, scope: !6609)
!6658 = !DILocation(line: 1862, column: 20, scope: !6609)
!6659 = !DILocation(line: 1863, column: 20, scope: !6609)
!6660 = !DILocation(line: 1863, column: 30, scope: !6609)
!6661 = !DILocation(line: 1863, column: 40, scope: !6609)
!6662 = !DILocation(line: 1863, column: 11, scope: !6609)
!6663 = !DILocation(line: 1863, column: 49, scope: !6609)
!6664 = !DILocation(line: 1863, column: 3, scope: !6609)
!6665 = !DILocalVariable(name: "dst_back_sb", scope: !6609, file: !355, line: 1864, type: !421)
!6666 = !DILocation(line: 1864, column: 15, scope: !6609)
!6667 = !DILocalVariable(name: "dst_back_status", scope: !6609, file: !355, line: 1865, type: !5)
!6668 = !DILocation(line: 1865, column: 7, scope: !6609)
!6669 = !DILocation(line: 1865, column: 31, scope: !6609)
!6670 = !DILocation(line: 1865, column: 25, scope: !6609)
!6671 = !DILocation(line: 1866, column: 9, scope: !6609)
!6672 = !DILocation(line: 1866, column: 3, scope: !6609)
!6673 = !DILocation(line: 1867, column: 10, scope: !6609)
!6674 = !DILocation(line: 1867, column: 26, scope: !6609)
!6675 = !DILocation(line: 1867, column: 31, scope: !6609)
!6676 = !DILocation(line: 1867, column: 34, scope: !6609)
!6677 = !DILocation(line: 0, scope: !6609)
!6678 = !DILocation(line: 1867, column: 3, scope: !6609)
!6679 = !DILocation(line: 1868, column: 1, scope: !6609)
!6680 = distinct !DISubprogram(name: "emit_verbose", scope: !355, file: !355, line: 1795, type: !507, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6681 = !DILocalVariable(name: "src", arg: 1, scope: !6680, file: !355, line: 1795, type: !177)
!6682 = !DILocation(line: 1795, column: 27, scope: !6680)
!6683 = !DILocalVariable(name: "dst", arg: 2, scope: !6680, file: !355, line: 1795, type: !177)
!6684 = !DILocation(line: 1795, column: 44, scope: !6680)
!6685 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !6680, file: !355, line: 1795, type: !177)
!6686 = !DILocation(line: 1795, column: 61, scope: !6680)
!6687 = !DILocation(line: 1797, column: 23, scope: !6680)
!6688 = !DILocation(line: 1797, column: 43, scope: !6680)
!6689 = !DILocation(line: 1797, column: 3, scope: !6680)
!6690 = !DILocation(line: 1798, column: 7, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6680, file: !355, line: 1798, column: 7)
!6692 = !DILocation(line: 1798, column: 7, scope: !6680)
!6693 = !DILocation(line: 1799, column: 13, scope: !6691)
!6694 = !DILocation(line: 1799, column: 33, scope: !6691)
!6695 = !DILocation(line: 1799, column: 5, scope: !6691)
!6696 = !DILocation(line: 1800, column: 3, scope: !6680)
!6697 = !DILocation(line: 1801, column: 1, scope: !6680)
!6698 = distinct !DISubprogram(name: "is_ancestor", scope: !355, file: !355, line: 620, type: !509, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6699 = !DILocalVariable(name: "sb", arg: 1, scope: !6698, file: !355, line: 620, type: !419)
!6700 = !DILocation(line: 620, column: 33, scope: !6698)
!6701 = !DILocalVariable(name: "ancestors", arg: 2, scope: !6698, file: !355, line: 620, type: !511)
!6702 = !DILocation(line: 620, column: 60, scope: !6698)
!6703 = !DILocation(line: 622, column: 3, scope: !6698)
!6704 = !DILocation(line: 622, column: 10, scope: !6698)
!6705 = !DILocation(line: 622, column: 20, scope: !6698)
!6706 = !DILocation(line: 624, column: 11, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !355, line: 624, column: 11)
!6708 = distinct !DILexicalBlock(scope: !6698, file: !355, line: 623, column: 5)
!6709 = !DILocation(line: 624, column: 22, scope: !6707)
!6710 = !DILocation(line: 624, column: 29, scope: !6707)
!6711 = !DILocation(line: 624, column: 33, scope: !6707)
!6712 = !DILocation(line: 624, column: 26, scope: !6707)
!6713 = !DILocation(line: 624, column: 40, scope: !6707)
!6714 = !DILocation(line: 624, column: 43, scope: !6707)
!6715 = !DILocation(line: 624, column: 54, scope: !6707)
!6716 = !DILocation(line: 624, column: 61, scope: !6707)
!6717 = !DILocation(line: 624, column: 65, scope: !6707)
!6718 = !DILocation(line: 624, column: 58, scope: !6707)
!6719 = !DILocation(line: 624, column: 11, scope: !6708)
!6720 = !DILocation(line: 625, column: 9, scope: !6707)
!6721 = !DILocation(line: 626, column: 19, scope: !6708)
!6722 = !DILocation(line: 626, column: 30, scope: !6708)
!6723 = !DILocation(line: 626, column: 17, scope: !6708)
!6724 = distinct !{!6724, !6703, !6725}
!6725 = !DILocation(line: 627, column: 5, scope: !6698)
!6726 = !DILocation(line: 628, column: 3, scope: !6698)
!6727 = !DILocation(line: 629, column: 1, scope: !6698)
!6728 = distinct !DISubprogram(name: "copy_dir", scope: !355, file: !355, line: 745, type: !513, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6729 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !6728, file: !355, line: 745, type: !177)
!6730 = !DILocation(line: 745, column: 23, scope: !6728)
!6731 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !6728, file: !355, line: 745, type: !177)
!6732 = !DILocation(line: 745, column: 48, scope: !6728)
!6733 = !DILocalVariable(name: "new_dst", arg: 3, scope: !6728, file: !355, line: 745, type: !139)
!6734 = !DILocation(line: 745, column: 66, scope: !6728)
!6735 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6728, file: !355, line: 746, type: !419)
!6736 = !DILocation(line: 746, column: 30, scope: !6728)
!6737 = !DILocalVariable(name: "ancestors", arg: 5, scope: !6728, file: !355, line: 746, type: !442)
!6738 = !DILocation(line: 746, column: 55, scope: !6728)
!6739 = !DILocalVariable(name: "x", arg: 6, scope: !6728, file: !355, line: 747, type: !362)
!6740 = !DILocation(line: 747, column: 36, scope: !6728)
!6741 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !6728, file: !355, line: 748, type: !412)
!6742 = !DILocation(line: 748, column: 17, scope: !6728)
!6743 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !6728, file: !355, line: 749, type: !412)
!6744 = !DILocation(line: 749, column: 17, scope: !6728)
!6745 = !DILocalVariable(name: "name_space", scope: !6728, file: !355, line: 751, type: !7)
!6746 = !DILocation(line: 751, column: 9, scope: !6728)
!6747 = !DILocalVariable(name: "namep", scope: !6728, file: !355, line: 752, type: !7)
!6748 = !DILocation(line: 752, column: 9, scope: !6728)
!6749 = !DILocalVariable(name: "non_command_line_options", scope: !6728, file: !355, line: 753, type: !364)
!6750 = !DILocation(line: 753, column: 21, scope: !6728)
!6751 = !DILocation(line: 753, column: 49, scope: !6728)
!6752 = !DILocation(line: 753, column: 48, scope: !6728)
!6753 = !{i64 0, i64 4, !3315, i64 4, i64 4, !3315, i64 8, i64 4, !3315, i64 12, i64 4, !3315, i64 16, i64 4, !2655, i64 20, i64 1, !2762, i64 21, i64 1, !2762, i64 22, i64 1, !2762, i64 23, i64 1, !2762, i64 24, i64 1, !2762, i64 25, i64 1, !2762, i64 26, i64 1, !2762, i64 27, i64 1, !2762, i64 28, i64 1, !2762, i64 29, i64 1, !2762, i64 30, i64 1, !2762, i64 31, i64 1, !2762, i64 32, i64 1, !2762, i64 33, i64 1, !2762, i64 34, i64 1, !2762, i64 35, i64 1, !2762, i64 36, i64 1, !2762, i64 37, i64 1, !2762, i64 38, i64 1, !2762, i64 39, i64 1, !2762, i64 40, i64 1, !2762, i64 41, i64 1, !2762, i64 42, i64 1, !2762, i64 43, i64 1, !2762, i64 44, i64 1, !2762, i64 45, i64 1, !2762, i64 46, i64 1, !2762, i64 47, i64 1, !2762, i64 48, i64 1, !2762, i64 49, i64 1, !2762, i64 52, i64 4, !2655, i64 56, i64 4, !3315, i64 64, i64 8, !2668, i64 72, i64 8, !2668}
!6754 = !DILocalVariable(name: "ok", scope: !6728, file: !355, line: 754, type: !139)
!6755 = !DILocation(line: 754, column: 8, scope: !6728)
!6756 = !DILocation(line: 756, column: 25, scope: !6728)
!6757 = !DILocation(line: 756, column: 16, scope: !6728)
!6758 = !DILocation(line: 756, column: 14, scope: !6728)
!6759 = !DILocation(line: 757, column: 7, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6728, file: !355, line: 757, column: 7)
!6761 = !DILocation(line: 757, column: 18, scope: !6760)
!6762 = !DILocation(line: 757, column: 7, scope: !6728)
!6763 = !DILocation(line: 761, column: 17, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6760, file: !355, line: 758, column: 5)
!6765 = !DILocation(line: 761, column: 24, scope: !6764)
!6766 = !DILocation(line: 761, column: 47, scope: !6764)
!6767 = !DILocation(line: 761, column: 7, scope: !6764)
!6768 = !DILocation(line: 762, column: 7, scope: !6764)
!6769 = !DILocation(line: 767, column: 7, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6728, file: !355, line: 767, column: 7)
!6771 = !DILocation(line: 767, column: 10, scope: !6770)
!6772 = !DILocation(line: 767, column: 22, scope: !6770)
!6773 = !DILocation(line: 767, column: 7, scope: !6728)
!6774 = !DILocation(line: 768, column: 30, scope: !6770)
!6775 = !DILocation(line: 768, column: 42, scope: !6770)
!6776 = !DILocation(line: 768, column: 5, scope: !6770)
!6777 = !DILocalVariable(name: "new_first_dir_created", scope: !6728, file: !355, line: 770, type: !139)
!6778 = !DILocation(line: 770, column: 8, scope: !6728)
!6779 = !DILocation(line: 771, column: 11, scope: !6728)
!6780 = !DILocation(line: 771, column: 9, scope: !6728)
!6781 = !DILocation(line: 772, column: 3, scope: !6728)
!6782 = !DILocation(line: 772, column: 11, scope: !6728)
!6783 = !DILocation(line: 772, column: 10, scope: !6728)
!6784 = !DILocation(line: 772, column: 17, scope: !6728)
!6785 = !DILocalVariable(name: "local_copy_into_self", scope: !6786, file: !355, line: 774, type: !139)
!6786 = distinct !DILexicalBlock(scope: !6728, file: !355, line: 773, column: 5)
!6787 = !DILocation(line: 774, column: 12, scope: !6786)
!6788 = !DILocalVariable(name: "src_name", scope: !6786, file: !355, line: 775, type: !7)
!6789 = !DILocation(line: 775, column: 13, scope: !6786)
!6790 = !DILocation(line: 775, column: 42, scope: !6786)
!6791 = !DILocation(line: 775, column: 55, scope: !6786)
!6792 = !DILocation(line: 775, column: 24, scope: !6786)
!6793 = !DILocalVariable(name: "dst_name", scope: !6786, file: !355, line: 776, type: !7)
!6794 = !DILocation(line: 776, column: 13, scope: !6786)
!6795 = !DILocation(line: 776, column: 42, scope: !6786)
!6796 = !DILocation(line: 776, column: 55, scope: !6786)
!6797 = !DILocation(line: 776, column: 24, scope: !6786)
!6798 = !DILocalVariable(name: "first_dir_created", scope: !6786, file: !355, line: 777, type: !139)
!6799 = !DILocation(line: 777, column: 12, scope: !6786)
!6800 = !DILocation(line: 777, column: 33, scope: !6786)
!6801 = !DILocation(line: 777, column: 32, scope: !6786)
!6802 = !DILocation(line: 779, column: 28, scope: !6786)
!6803 = !DILocation(line: 779, column: 38, scope: !6786)
!6804 = !DILocation(line: 779, column: 48, scope: !6786)
!6805 = !DILocation(line: 779, column: 57, scope: !6786)
!6806 = !DILocation(line: 780, column: 28, scope: !6786)
!6807 = !DILocation(line: 779, column: 13, scope: !6786)
!6808 = !DILocation(line: 779, column: 10, scope: !6786)
!6809 = !DILocation(line: 783, column: 26, scope: !6786)
!6810 = !DILocation(line: 783, column: 8, scope: !6786)
!6811 = !DILocation(line: 783, column: 23, scope: !6786)
!6812 = !DILocation(line: 785, column: 13, scope: !6786)
!6813 = !DILocation(line: 785, column: 7, scope: !6786)
!6814 = !DILocation(line: 786, column: 13, scope: !6786)
!6815 = !DILocation(line: 786, column: 7, scope: !6786)
!6816 = !DILocation(line: 791, column: 11, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6786, file: !355, line: 791, column: 11)
!6818 = !DILocation(line: 791, column: 11, scope: !6786)
!6819 = !DILocation(line: 792, column: 9, scope: !6817)
!6820 = !DILocation(line: 794, column: 32, scope: !6786)
!6821 = !DILocation(line: 794, column: 29, scope: !6786)
!6822 = !DILocation(line: 795, column: 24, scope: !6786)
!6823 = !DILocation(line: 795, column: 16, scope: !6786)
!6824 = !DILocation(line: 795, column: 31, scope: !6786)
!6825 = !DILocation(line: 795, column: 13, scope: !6786)
!6826 = distinct !{!6826, !6781, !6827}
!6827 = !DILocation(line: 796, column: 5, scope: !6728)
!6828 = !DILocation(line: 797, column: 9, scope: !6728)
!6829 = !DILocation(line: 797, column: 3, scope: !6728)
!6830 = !DILocation(line: 798, column: 45, scope: !6728)
!6831 = !DILocation(line: 798, column: 4, scope: !6728)
!6832 = !DILocation(line: 798, column: 43, scope: !6728)
!6833 = !DILocation(line: 800, column: 10, scope: !6728)
!6834 = !DILocation(line: 800, column: 3, scope: !6728)
!6835 = !DILocation(line: 801, column: 1, scope: !6728)
!6836 = distinct !DISubprogram(name: "copy_reg", scope: !355, file: !355, line: 1052, type: !515, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!6837 = !DILocalVariable(name: "src_name", arg: 1, scope: !6836, file: !355, line: 1052, type: !177)
!6838 = !DILocation(line: 1052, column: 23, scope: !6836)
!6839 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6836, file: !355, line: 1052, type: !177)
!6840 = !DILocation(line: 1052, column: 45, scope: !6836)
!6841 = !DILocalVariable(name: "x", arg: 3, scope: !6836, file: !355, line: 1053, type: !362)
!6842 = !DILocation(line: 1053, column: 36, scope: !6836)
!6843 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !6836, file: !355, line: 1054, type: !136)
!6844 = !DILocation(line: 1054, column: 18, scope: !6836)
!6845 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !6836, file: !355, line: 1054, type: !136)
!6846 = !DILocation(line: 1054, column: 35, scope: !6836)
!6847 = !DILocalVariable(name: "new_dst", arg: 6, scope: !6836, file: !355, line: 1054, type: !412)
!6848 = !DILocation(line: 1054, column: 62, scope: !6836)
!6849 = !DILocalVariable(name: "src_sb", arg: 7, scope: !6836, file: !355, line: 1055, type: !419)
!6850 = !DILocation(line: 1055, column: 30, scope: !6836)
!6851 = !DILocalVariable(name: "buf", scope: !6836, file: !355, line: 1057, type: !7)
!6852 = !DILocation(line: 1057, column: 9, scope: !6836)
!6853 = !DILocalVariable(name: "buf_alloc", scope: !6836, file: !355, line: 1058, type: !7)
!6854 = !DILocation(line: 1058, column: 9, scope: !6836)
!6855 = !DILocalVariable(name: "name_alloc", scope: !6836, file: !355, line: 1059, type: !7)
!6856 = !DILocation(line: 1059, column: 9, scope: !6836)
!6857 = !DILocalVariable(name: "dest_desc", scope: !6836, file: !355, line: 1060, type: !5)
!6858 = !DILocation(line: 1060, column: 7, scope: !6836)
!6859 = !DILocalVariable(name: "dest_errno", scope: !6836, file: !355, line: 1061, type: !5)
!6860 = !DILocation(line: 1061, column: 7, scope: !6836)
!6861 = !DILocalVariable(name: "source_desc", scope: !6836, file: !355, line: 1062, type: !5)
!6862 = !DILocation(line: 1062, column: 7, scope: !6836)
!6863 = !DILocalVariable(name: "src_mode", scope: !6836, file: !355, line: 1063, type: !136)
!6864 = !DILocation(line: 1063, column: 10, scope: !6836)
!6865 = !DILocation(line: 1063, column: 21, scope: !6836)
!6866 = !DILocation(line: 1063, column: 29, scope: !6836)
!6867 = !DILocalVariable(name: "sb", scope: !6836, file: !355, line: 1064, type: !421)
!6868 = !DILocation(line: 1064, column: 15, scope: !6836)
!6869 = !DILocalVariable(name: "src_open_sb", scope: !6836, file: !355, line: 1065, type: !421)
!6870 = !DILocation(line: 1065, column: 15, scope: !6836)
!6871 = !DILocalVariable(name: "return_val", scope: !6836, file: !355, line: 1066, type: !139)
!6872 = !DILocation(line: 1066, column: 8, scope: !6836)
!6873 = !DILocalVariable(name: "data_copy_required", scope: !6836, file: !355, line: 1067, type: !139)
!6874 = !DILocation(line: 1067, column: 8, scope: !6836)
!6875 = !DILocation(line: 1067, column: 29, scope: !6836)
!6876 = !DILocation(line: 1067, column: 32, scope: !6836)
!6877 = !DILocation(line: 1069, column: 23, scope: !6836)
!6878 = !DILocation(line: 1071, column: 27, scope: !6836)
!6879 = !DILocation(line: 1071, column: 30, scope: !6836)
!6880 = !DILocation(line: 1071, column: 42, scope: !6836)
!6881 = !DILocation(line: 1071, column: 24, scope: !6836)
!6882 = !DILocation(line: 1069, column: 17, scope: !6836)
!6883 = !DILocation(line: 1069, column: 15, scope: !6836)
!6884 = !DILocation(line: 1072, column: 7, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1072, column: 7)
!6886 = !DILocation(line: 1072, column: 19, scope: !6885)
!6887 = !DILocation(line: 1072, column: 7, scope: !6836)
!6888 = !DILocation(line: 1074, column: 17, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !355, line: 1073, column: 5)
!6890 = !DILocation(line: 1074, column: 24, scope: !6889)
!6891 = !DILocation(line: 1074, column: 57, scope: !6889)
!6892 = !DILocation(line: 1074, column: 7, scope: !6889)
!6893 = !DILocation(line: 1075, column: 7, scope: !6889)
!6894 = !DILocation(line: 1078, column: 14, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1078, column: 7)
!6896 = !DILocation(line: 1078, column: 7, scope: !6895)
!6897 = !DILocation(line: 1078, column: 41, scope: !6895)
!6898 = !DILocation(line: 1078, column: 7, scope: !6836)
!6899 = !DILocation(line: 1080, column: 17, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6895, file: !355, line: 1079, column: 5)
!6901 = !DILocation(line: 1080, column: 24, scope: !6900)
!6902 = !DILocation(line: 1080, column: 46, scope: !6900)
!6903 = !DILocation(line: 1080, column: 7, scope: !6900)
!6904 = !DILocation(line: 1081, column: 18, scope: !6900)
!6905 = !DILocation(line: 1082, column: 7, scope: !6900)
!6906 = !DILocation(line: 1087, column: 9, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1087, column: 7)
!6908 = !DILocation(line: 1087, column: 7, scope: !6836)
!6909 = !DILocation(line: 1090, column: 14, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6907, file: !355, line: 1088, column: 5)
!6911 = !DILocation(line: 1091, column: 14, scope: !6910)
!6912 = !DILocation(line: 1089, column: 7, scope: !6910)
!6913 = !DILocation(line: 1092, column: 18, scope: !6910)
!6914 = !DILocation(line: 1093, column: 7, scope: !6910)
!6915 = !DILocation(line: 1098, column: 10, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1098, column: 7)
!6917 = !DILocation(line: 1098, column: 9, scope: !6916)
!6918 = !DILocation(line: 1098, column: 7, scope: !6836)
!6919 = !DILocalVariable(name: "open_flags", scope: !6920, file: !355, line: 1100, type: !5)
!6920 = distinct !DILexicalBlock(scope: !6916, file: !355, line: 1099, column: 5)
!6921 = !DILocation(line: 1100, column: 11, scope: !6920)
!6922 = !DILocation(line: 1101, column: 32, scope: !6920)
!6923 = !DILocation(line: 1101, column: 35, scope: !6920)
!6924 = !DILocation(line: 1101, column: 29, scope: !6920)
!6925 = !DILocation(line: 1102, column: 25, scope: !6920)
!6926 = !DILocation(line: 1102, column: 35, scope: !6920)
!6927 = !DILocation(line: 1102, column: 19, scope: !6920)
!6928 = !DILocation(line: 1102, column: 17, scope: !6920)
!6929 = !DILocation(line: 1103, column: 20, scope: !6920)
!6930 = !DILocation(line: 1103, column: 18, scope: !6920)
!6931 = !DILocation(line: 1112, column: 12, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6920, file: !355, line: 1112, column: 11)
!6933 = !DILocation(line: 1112, column: 15, scope: !6932)
!6934 = !DILocation(line: 1112, column: 36, scope: !6932)
!6935 = !DILocation(line: 1112, column: 39, scope: !6932)
!6936 = !DILocation(line: 1112, column: 42, scope: !6932)
!6937 = !DILocation(line: 1113, column: 11, scope: !6932)
!6938 = !DILocation(line: 1113, column: 19, scope: !6932)
!6939 = !DILocation(line: 1113, column: 16, scope: !6932)
!6940 = !DILocation(line: 1112, column: 11, scope: !6920)
!6941 = !DILocation(line: 1115, column: 40, scope: !6942)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !355, line: 1115, column: 15)
!6943 = distinct !DILexicalBlock(scope: !6932, file: !355, line: 1114, column: 9)
!6944 = !DILocation(line: 1115, column: 50, scope: !6942)
!6945 = !DILocation(line: 1115, column: 53, scope: !6942)
!6946 = !DILocation(line: 1116, column: 47, scope: !6942)
!6947 = !DILocation(line: 1115, column: 17, scope: !6942)
!6948 = !DILocation(line: 1115, column: 15, scope: !6943)
!6949 = !DILocation(line: 1118, column: 19, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6951, file: !355, line: 1118, column: 19)
!6951 = distinct !DILexicalBlock(scope: !6942, file: !355, line: 1117, column: 13)
!6952 = !DILocation(line: 1118, column: 22, scope: !6950)
!6953 = !DILocation(line: 1118, column: 19, scope: !6951)
!6954 = !DILocation(line: 1120, column: 30, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6950, file: !355, line: 1119, column: 17)
!6956 = !DILocation(line: 1121, column: 19, scope: !6955)
!6957 = !DILocation(line: 1123, column: 13, scope: !6951)
!6958 = !DILocation(line: 1124, column: 9, scope: !6943)
!6959 = !DILocation(line: 1126, column: 11, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6920, file: !355, line: 1126, column: 11)
!6961 = !DILocation(line: 1126, column: 21, scope: !6960)
!6962 = !DILocation(line: 1126, column: 25, scope: !6960)
!6963 = !DILocation(line: 1126, column: 28, scope: !6960)
!6964 = !DILocation(line: 1126, column: 31, scope: !6960)
!6965 = !DILocation(line: 1126, column: 11, scope: !6920)
!6966 = !DILocation(line: 1128, column: 23, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6968, file: !355, line: 1128, column: 15)
!6968 = distinct !DILexicalBlock(scope: !6960, file: !355, line: 1127, column: 9)
!6969 = !DILocation(line: 1128, column: 15, scope: !6967)
!6970 = !DILocation(line: 1128, column: 33, scope: !6967)
!6971 = !DILocation(line: 1128, column: 15, scope: !6968)
!6972 = !DILocation(line: 1130, column: 25, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6967, file: !355, line: 1129, column: 13)
!6974 = !DILocation(line: 1130, column: 32, scope: !6973)
!6975 = !DILocation(line: 1130, column: 55, scope: !6973)
!6976 = !DILocation(line: 1130, column: 15, scope: !6973)
!6977 = !DILocation(line: 1131, column: 26, scope: !6973)
!6978 = !DILocation(line: 1132, column: 15, scope: !6973)
!6979 = !DILocation(line: 1134, column: 15, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6968, file: !355, line: 1134, column: 15)
!6981 = !DILocation(line: 1134, column: 18, scope: !6980)
!6982 = !DILocation(line: 1134, column: 15, scope: !6968)
!6983 = !DILocation(line: 1135, column: 21, scope: !6980)
!6984 = !DILocation(line: 1135, column: 40, scope: !6980)
!6985 = !DILocation(line: 1135, column: 13, scope: !6980)
!6986 = !DILocation(line: 1138, column: 12, scope: !6968)
!6987 = !DILocation(line: 1138, column: 20, scope: !6968)
!6988 = !DILocation(line: 1142, column: 15, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6968, file: !355, line: 1142, column: 15)
!6990 = !DILocation(line: 1142, column: 18, scope: !6989)
!6991 = !DILocation(line: 1142, column: 15, scope: !6968)
!6992 = !DILocation(line: 1144, column: 47, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !355, line: 1144, column: 19)
!6994 = distinct !DILexicalBlock(scope: !6989, file: !355, line: 1143, column: 13)
!6995 = !DILocation(line: 1144, column: 57, scope: !6993)
!6996 = !DILocation(line: 1144, column: 67, scope: !6993)
!6997 = !DILocation(line: 1145, column: 48, scope: !6993)
!6998 = !DILocation(line: 1145, column: 47, scope: !6993)
!6999 = !DILocation(line: 1145, column: 57, scope: !6993)
!7000 = !DILocation(line: 1144, column: 21, scope: !6993)
!7001 = !DILocation(line: 1144, column: 19, scope: !6994)
!7002 = !DILocation(line: 1147, column: 30, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6993, file: !355, line: 1146, column: 17)
!7004 = !DILocation(line: 1148, column: 19, scope: !7003)
!7005 = !DILocation(line: 1150, column: 13, scope: !6994)
!7006 = !DILocation(line: 1151, column: 9, scope: !6968)
!7007 = !DILocation(line: 1152, column: 5, scope: !6920)
!7008 = !DILocation(line: 1154, column: 8, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1154, column: 7)
!7010 = !DILocation(line: 1154, column: 7, scope: !7009)
!7011 = !DILocation(line: 1154, column: 7, scope: !6836)
!7012 = !DILocation(line: 1155, column: 5, scope: !7009)
!7013 = !DILabel(scope: !7014, name: "open_with_O_CREAT", file: !355, line: 1156)
!7014 = distinct !DILexicalBlock(scope: !7009, file: !355, line: 1155, column: 5)
!7015 = !DILocation(line: 1156, column: 5, scope: !7014)
!7016 = !DILocalVariable(name: "open_flags", scope: !7014, file: !355, line: 1158, type: !5)
!7017 = !DILocation(line: 1158, column: 11, scope: !7014)
!7018 = !DILocation(line: 1159, column: 25, scope: !7014)
!7019 = !DILocation(line: 1159, column: 35, scope: !7014)
!7020 = !DILocation(line: 1159, column: 46, scope: !7014)
!7021 = !DILocation(line: 1160, column: 25, scope: !7014)
!7022 = !DILocation(line: 1160, column: 37, scope: !7014)
!7023 = !DILocation(line: 1160, column: 36, scope: !7014)
!7024 = !DILocation(line: 1160, column: 34, scope: !7014)
!7025 = !DILocation(line: 1159, column: 19, scope: !7014)
!7026 = !DILocation(line: 1159, column: 17, scope: !7014)
!7027 = !DILocation(line: 1161, column: 20, scope: !7014)
!7028 = !DILocation(line: 1161, column: 18, scope: !7014)
!7029 = !DILocation(line: 1173, column: 11, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7014, file: !355, line: 1173, column: 11)
!7031 = !DILocation(line: 1173, column: 21, scope: !7030)
!7032 = !DILocation(line: 1173, column: 25, scope: !7030)
!7033 = !DILocation(line: 1173, column: 28, scope: !7030)
!7034 = !DILocation(line: 1173, column: 39, scope: !7030)
!7035 = !DILocation(line: 1173, column: 49, scope: !7030)
!7036 = !DILocation(line: 1173, column: 54, scope: !7030)
!7037 = !DILocation(line: 1173, column: 57, scope: !7030)
!7038 = !DILocation(line: 1173, column: 11, scope: !7014)
!7039 = !DILocalVariable(name: "dangling_link_sb", scope: !7040, file: !355, line: 1175, type: !421)
!7040 = distinct !DILexicalBlock(scope: !7030, file: !355, line: 1174, column: 9)
!7041 = !DILocation(line: 1175, column: 23, scope: !7040)
!7042 = !DILocation(line: 1176, column: 22, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7040, file: !355, line: 1176, column: 15)
!7044 = !DILocation(line: 1176, column: 15, scope: !7043)
!7045 = !DILocation(line: 1176, column: 51, scope: !7043)
!7046 = !DILocation(line: 1177, column: 15, scope: !7043)
!7047 = !DILocation(line: 1177, column: 18, scope: !7043)
!7048 = !DILocation(line: 1176, column: 15, scope: !7040)
!7049 = !DILocation(line: 1179, column: 19, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !355, line: 1179, column: 19)
!7051 = distinct !DILexicalBlock(scope: !7043, file: !355, line: 1178, column: 13)
!7052 = !DILocation(line: 1179, column: 22, scope: !7050)
!7053 = !DILocation(line: 1179, column: 19, scope: !7051)
!7054 = !DILocation(line: 1181, column: 37, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7050, file: !355, line: 1180, column: 17)
!7056 = !DILocation(line: 1181, column: 47, scope: !7055)
!7057 = !DILocation(line: 1182, column: 37, scope: !7055)
!7058 = !DILocation(line: 1182, column: 49, scope: !7055)
!7059 = !DILocation(line: 1182, column: 48, scope: !7055)
!7060 = !DILocation(line: 1182, column: 46, scope: !7055)
!7061 = !DILocation(line: 1181, column: 31, scope: !7055)
!7062 = !DILocation(line: 1181, column: 29, scope: !7055)
!7063 = !DILocation(line: 1183, column: 32, scope: !7055)
!7064 = !DILocation(line: 1183, column: 30, scope: !7055)
!7065 = !DILocation(line: 1184, column: 17, scope: !7055)
!7066 = !DILocation(line: 1187, column: 32, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7050, file: !355, line: 1186, column: 17)
!7068 = !DILocation(line: 1188, column: 26, scope: !7067)
!7069 = !DILocation(line: 1187, column: 19, scope: !7067)
!7070 = !DILocation(line: 1189, column: 30, scope: !7067)
!7071 = !DILocation(line: 1190, column: 19, scope: !7067)
!7072 = !DILocation(line: 1192, column: 13, scope: !7051)
!7073 = !DILocation(line: 1193, column: 9, scope: !7040)
!7074 = !DILocation(line: 1197, column: 11, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7014, file: !355, line: 1197, column: 11)
!7076 = !DILocation(line: 1197, column: 21, scope: !7075)
!7077 = !DILocation(line: 1197, column: 25, scope: !7075)
!7078 = !DILocation(line: 1197, column: 28, scope: !7075)
!7079 = !DILocation(line: 1197, column: 39, scope: !7075)
!7080 = !DILocation(line: 1198, column: 11, scope: !7075)
!7081 = !DILocation(line: 1198, column: 15, scope: !7075)
!7082 = !DILocation(line: 1198, column: 14, scope: !7075)
!7083 = !DILocation(line: 1198, column: 24, scope: !7075)
!7084 = !DILocation(line: 1198, column: 27, scope: !7075)
!7085 = !DILocation(line: 1198, column: 44, scope: !7075)
!7086 = !DILocation(line: 1198, column: 36, scope: !7075)
!7087 = !DILocation(line: 1198, column: 54, scope: !7075)
!7088 = !DILocation(line: 1198, column: 59, scope: !7075)
!7089 = !DILocation(line: 1197, column: 11, scope: !7014)
!7090 = !DILocation(line: 1199, column: 20, scope: !7075)
!7091 = !DILocation(line: 1199, column: 9, scope: !7075)
!7092 = !DILocation(line: 1200, column: 5, scope: !7014)
!7093 = !DILocation(line: 1203, column: 27, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7009, file: !355, line: 1202, column: 5)
!7095 = !DILocation(line: 1206, column: 7, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1206, column: 7)
!7097 = !DILocation(line: 1206, column: 17, scope: !7096)
!7098 = !DILocation(line: 1206, column: 7, scope: !6836)
!7099 = !DILocation(line: 1218, column: 11, scope: !7100)
!7100 = distinct !DILexicalBlock(scope: !7101, file: !355, line: 1218, column: 11)
!7101 = distinct !DILexicalBlock(scope: !7096, file: !355, line: 1207, column: 5)
!7102 = !DILocation(line: 1218, column: 22, scope: !7100)
!7103 = !DILocation(line: 1218, column: 32, scope: !7100)
!7104 = !DILocation(line: 1218, column: 38, scope: !7100)
!7105 = !DILocation(line: 1218, column: 37, scope: !7100)
!7106 = !DILocation(line: 1218, column: 46, scope: !7100)
!7107 = !DILocation(line: 1218, column: 51, scope: !7100)
!7108 = !DILocation(line: 1218, column: 54, scope: !7100)
!7109 = !DILocation(line: 1218, column: 11, scope: !7101)
!7110 = !DILocation(line: 1220, column: 12, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7100, file: !355, line: 1219, column: 9)
!7112 = !DILocation(line: 1220, column: 20, scope: !7111)
!7113 = !DILocation(line: 1221, column: 11, scope: !7111)
!7114 = !DILocation(line: 1225, column: 17, scope: !7101)
!7115 = !DILocation(line: 1225, column: 29, scope: !7101)
!7116 = !DILocation(line: 1226, column: 14, scope: !7101)
!7117 = !DILocation(line: 1225, column: 7, scope: !7101)
!7118 = !DILocation(line: 1227, column: 18, scope: !7101)
!7119 = !DILocation(line: 1228, column: 7, scope: !7101)
!7120 = !DILocation(line: 1231, column: 14, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1231, column: 7)
!7122 = !DILocation(line: 1231, column: 7, scope: !7121)
!7123 = !DILocation(line: 1231, column: 30, scope: !7121)
!7124 = !DILocation(line: 1231, column: 7, scope: !6836)
!7125 = !DILocation(line: 1233, column: 17, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7121, file: !355, line: 1232, column: 5)
!7127 = !DILocation(line: 1233, column: 24, scope: !7126)
!7128 = !DILocation(line: 1233, column: 46, scope: !7126)
!7129 = !DILocation(line: 1233, column: 7, scope: !7126)
!7130 = !DILocation(line: 1234, column: 18, scope: !7126)
!7131 = !DILocation(line: 1235, column: 7, scope: !7126)
!7132 = !DILocation(line: 1239, column: 7, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1239, column: 7)
!7134 = !DILocation(line: 1239, column: 26, scope: !7133)
!7135 = !DILocation(line: 1239, column: 29, scope: !7133)
!7136 = !DILocation(line: 1239, column: 32, scope: !7133)
!7137 = !DILocation(line: 1239, column: 7, scope: !6836)
!7138 = !DILocalVariable(name: "clone_ok", scope: !7139, file: !355, line: 1241, type: !139)
!7139 = distinct !DILexicalBlock(scope: !7133, file: !355, line: 1240, column: 5)
!7140 = !DILocation(line: 1241, column: 12, scope: !7139)
!7141 = !DILocation(line: 1241, column: 35, scope: !7139)
!7142 = !DILocation(line: 1241, column: 46, scope: !7139)
!7143 = !DILocation(line: 1241, column: 23, scope: !7139)
!7144 = !DILocation(line: 1241, column: 59, scope: !7139)
!7145 = !DILocation(line: 1242, column: 11, scope: !7146)
!7146 = distinct !DILexicalBlock(scope: !7139, file: !355, line: 1242, column: 11)
!7147 = !DILocation(line: 1242, column: 20, scope: !7146)
!7148 = !DILocation(line: 1242, column: 23, scope: !7146)
!7149 = !DILocation(line: 1242, column: 26, scope: !7146)
!7150 = !DILocation(line: 1242, column: 39, scope: !7146)
!7151 = !DILocation(line: 1242, column: 11, scope: !7139)
!7152 = !DILocation(line: 1244, column: 16, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !7154, file: !355, line: 1244, column: 15)
!7154 = distinct !DILexicalBlock(scope: !7146, file: !355, line: 1243, column: 9)
!7155 = !DILocation(line: 1244, column: 15, scope: !7154)
!7156 = !DILocation(line: 1246, column: 25, scope: !7157)
!7157 = distinct !DILexicalBlock(scope: !7153, file: !355, line: 1245, column: 13)
!7158 = !DILocation(line: 1246, column: 32, scope: !7157)
!7159 = !DILocation(line: 1247, column: 22, scope: !7157)
!7160 = !DILocation(line: 1247, column: 47, scope: !7157)
!7161 = !DILocation(line: 1246, column: 15, scope: !7157)
!7162 = !DILocation(line: 1248, column: 26, scope: !7157)
!7163 = !DILocation(line: 1249, column: 15, scope: !7157)
!7164 = !DILocation(line: 1251, column: 30, scope: !7154)
!7165 = !DILocation(line: 1252, column: 9, scope: !7154)
!7166 = !DILocation(line: 1253, column: 5, scope: !7139)
!7167 = !DILocation(line: 1255, column: 7, scope: !7168)
!7168 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1255, column: 7)
!7169 = !DILocation(line: 1255, column: 7, scope: !6836)
!7170 = !DILocalVariable(name: "buf_alignment", scope: !7171, file: !355, line: 1258, type: !52)
!7171 = distinct !DILexicalBlock(scope: !7168, file: !355, line: 1256, column: 5)
!7172 = !DILocation(line: 1258, column: 14, scope: !7171)
!7173 = !DILocation(line: 1258, column: 30, scope: !7171)
!7174 = !DILocalVariable(name: "buf_size", scope: !7171, file: !355, line: 1259, type: !52)
!7175 = !DILocation(line: 1259, column: 14, scope: !7171)
!7176 = !DILocation(line: 1259, column: 25, scope: !7171)
!7177 = !DILocalVariable(name: "hole_size", scope: !7171, file: !355, line: 1260, type: !52)
!7178 = !DILocation(line: 1260, column: 14, scope: !7171)
!7179 = !DILocation(line: 1260, column: 26, scope: !7171)
!7180 = !{!2935, !2936, i64 56}
!7181 = !DILocation(line: 1262, column: 17, scope: !7171)
!7182 = !DILocation(line: 1262, column: 7, scope: !7171)
!7183 = !DILocalVariable(name: "make_holes", scope: !7171, file: !355, line: 1265, type: !139)
!7184 = !DILocation(line: 1265, column: 12, scope: !7171)
!7185 = !DILocalVariable(name: "sparse_src", scope: !7171, file: !355, line: 1266, type: !139)
!7186 = !DILocation(line: 1266, column: 12, scope: !7171)
!7187 = !DILocation(line: 1266, column: 25, scope: !7171)
!7188 = !DILocation(line: 1268, column: 11, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7171, file: !355, line: 1268, column: 11)
!7190 = !DILocation(line: 1268, column: 11, scope: !7171)
!7191 = !DILocation(line: 1272, column: 15, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !355, line: 1272, column: 15)
!7193 = distinct !DILexicalBlock(scope: !7189, file: !355, line: 1269, column: 9)
!7194 = !DILocation(line: 1272, column: 18, scope: !7192)
!7195 = !DILocation(line: 1272, column: 30, scope: !7192)
!7196 = !DILocation(line: 1272, column: 15, scope: !7193)
!7197 = !DILocation(line: 1273, column: 24, scope: !7192)
!7198 = !DILocation(line: 1273, column: 13, scope: !7192)
!7199 = !DILocation(line: 1279, column: 15, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7193, file: !355, line: 1279, column: 15)
!7201 = !DILocation(line: 1279, column: 18, scope: !7200)
!7202 = !DILocation(line: 1279, column: 30, scope: !7200)
!7203 = !DILocation(line: 1279, column: 45, scope: !7200)
!7204 = !DILocation(line: 1279, column: 48, scope: !7200)
!7205 = !DILocation(line: 1279, column: 15, scope: !7193)
!7206 = !DILocation(line: 1280, column: 24, scope: !7200)
!7207 = !DILocation(line: 1280, column: 13, scope: !7200)
!7208 = !DILocation(line: 1281, column: 9, scope: !7193)
!7209 = !DILocation(line: 1285, column: 13, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7171, file: !355, line: 1285, column: 11)
!7211 = !DILocation(line: 1285, column: 11, scope: !7171)
!7212 = !DILocalVariable(name: "blcm_max", scope: !7213, file: !355, line: 1289, type: !52)
!7213 = distinct !DILexicalBlock(scope: !7210, file: !355, line: 1286, column: 9)
!7214 = !DILocation(line: 1289, column: 18, scope: !7213)
!7215 = !DILocation(line: 1289, column: 57, scope: !7213)
!7216 = !DILocation(line: 1289, column: 55, scope: !7213)
!7217 = !DILocalVariable(name: "blcm", scope: !7213, file: !355, line: 1290, type: !52)
!7218 = !DILocation(line: 1290, column: 18, scope: !7213)
!7219 = !DILocation(line: 1290, column: 37, scope: !7213)
!7220 = !DILocation(line: 1290, column: 63, scope: !7213)
!7221 = !DILocation(line: 1291, column: 37, scope: !7213)
!7222 = !DILocation(line: 1290, column: 25, scope: !7213)
!7223 = !DILocation(line: 1295, column: 15, scope: !7224)
!7224 = distinct !DILexicalBlock(scope: !7213, file: !355, line: 1295, column: 15)
!7225 = !DILocation(line: 1295, column: 45, scope: !7224)
!7226 = !DILocation(line: 1295, column: 60, scope: !7224)
!7227 = !DILocation(line: 1295, column: 70, scope: !7224)
!7228 = !DILocation(line: 1295, column: 68, scope: !7224)
!7229 = !DILocation(line: 1295, column: 15, scope: !7213)
!7230 = !DILocation(line: 1296, column: 36, scope: !7224)
!7231 = !DILocation(line: 1296, column: 44, scope: !7224)
!7232 = !DILocation(line: 1296, column: 22, scope: !7224)
!7233 = !DILocation(line: 1296, column: 13, scope: !7224)
!7234 = !DILocation(line: 1301, column: 23, scope: !7213)
!7235 = !DILocation(line: 1301, column: 28, scope: !7213)
!7236 = !DILocation(line: 1301, column: 20, scope: !7213)
!7237 = !DILocation(line: 1302, column: 23, scope: !7213)
!7238 = !DILocation(line: 1302, column: 34, scope: !7213)
!7239 = !DILocation(line: 1302, column: 32, scope: !7213)
!7240 = !DILocation(line: 1302, column: 20, scope: !7213)
!7241 = !DILocation(line: 1303, column: 15, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7213, file: !355, line: 1303, column: 15)
!7243 = !DILocation(line: 1303, column: 24, scope: !7242)
!7244 = !DILocation(line: 1303, column: 29, scope: !7242)
!7245 = !DILocation(line: 1303, column: 32, scope: !7242)
!7246 = !DILocation(line: 1303, column: 43, scope: !7242)
!7247 = !DILocation(line: 1303, column: 41, scope: !7242)
!7248 = !DILocation(line: 1303, column: 15, scope: !7213)
!7249 = !DILocation(line: 1304, column: 24, scope: !7242)
!7250 = !DILocation(line: 1304, column: 22, scope: !7242)
!7251 = !DILocation(line: 1304, column: 13, scope: !7242)
!7252 = !DILocation(line: 1305, column: 9, scope: !7213)
!7253 = !DILocation(line: 1307, column: 28, scope: !7171)
!7254 = !DILocation(line: 1307, column: 39, scope: !7171)
!7255 = !DILocation(line: 1307, column: 37, scope: !7171)
!7256 = !DILocation(line: 1307, column: 19, scope: !7171)
!7257 = !DILocation(line: 1307, column: 17, scope: !7171)
!7258 = !DILocation(line: 1308, column: 24, scope: !7171)
!7259 = !DILocation(line: 1308, column: 35, scope: !7171)
!7260 = !DILocation(line: 1308, column: 13, scope: !7171)
!7261 = !DILocation(line: 1308, column: 11, scope: !7171)
!7262 = !DILocation(line: 1310, column: 11, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7171, file: !355, line: 1310, column: 11)
!7264 = !DILocation(line: 1310, column: 11, scope: !7171)
!7265 = !DILocalVariable(name: "normal_copy_required", scope: !7266, file: !355, line: 1312, type: !139)
!7266 = distinct !DILexicalBlock(scope: !7263, file: !355, line: 1311, column: 9)
!7267 = !DILocation(line: 1312, column: 16, scope: !7266)
!7268 = !DILocation(line: 1318, column: 28, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7266, file: !355, line: 1318, column: 15)
!7270 = !DILocation(line: 1318, column: 41, scope: !7269)
!7271 = !DILocation(line: 1318, column: 52, scope: !7269)
!7272 = !DILocation(line: 1318, column: 57, scope: !7269)
!7273 = !DILocation(line: 1318, column: 67, scope: !7269)
!7274 = !DILocation(line: 1319, column: 40, scope: !7269)
!7275 = !DILocation(line: 1320, column: 28, scope: !7269)
!7276 = !DILocation(line: 1320, column: 41, scope: !7269)
!7277 = !DILocation(line: 1320, column: 44, scope: !7269)
!7278 = !DILocation(line: 1321, column: 28, scope: !7269)
!7279 = !DILocation(line: 1321, column: 38, scope: !7269)
!7280 = !DILocation(line: 1318, column: 15, scope: !7269)
!7281 = !DILocation(line: 1318, column: 15, scope: !7266)
!7282 = !DILocation(line: 1322, column: 13, scope: !7269)
!7283 = !DILocation(line: 1324, column: 17, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7266, file: !355, line: 1324, column: 15)
!7285 = !DILocation(line: 1324, column: 15, scope: !7266)
!7286 = !DILocation(line: 1326, column: 26, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7284, file: !355, line: 1325, column: 13)
!7288 = !DILocation(line: 1327, column: 15, scope: !7287)
!7289 = !DILocation(line: 1329, column: 9, scope: !7266)
!7290 = !DILocalVariable(name: "n_read", scope: !7171, file: !355, line: 1331, type: !358)
!7291 = !DILocation(line: 1331, column: 13, scope: !7171)
!7292 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7171, file: !355, line: 1332, type: !139)
!7293 = !DILocation(line: 1332, column: 12, scope: !7171)
!7294 = !DILocation(line: 1333, column: 26, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7171, file: !355, line: 1333, column: 11)
!7296 = !DILocation(line: 1333, column: 39, scope: !7295)
!7297 = !DILocation(line: 1333, column: 50, scope: !7295)
!7298 = !DILocation(line: 1333, column: 55, scope: !7295)
!7299 = !DILocation(line: 1334, column: 26, scope: !7295)
!7300 = !DILocation(line: 1334, column: 39, scope: !7295)
!7301 = !DILocation(line: 1335, column: 26, scope: !7295)
!7302 = !DILocation(line: 1335, column: 29, scope: !7295)
!7303 = !DILocation(line: 1335, column: 41, scope: !7295)
!7304 = !DILocation(line: 1335, column: 59, scope: !7295)
!7305 = !DILocation(line: 1335, column: 69, scope: !7295)
!7306 = !DILocation(line: 1333, column: 13, scope: !7295)
!7307 = !DILocation(line: 1333, column: 11, scope: !7171)
!7308 = !DILocation(line: 1339, column: 22, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7295, file: !355, line: 1338, column: 9)
!7310 = !DILocation(line: 1340, column: 11, scope: !7309)
!7311 = !DILocation(line: 1342, column: 16, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7295, file: !355, line: 1342, column: 16)
!7313 = !DILocation(line: 1342, column: 34, scope: !7312)
!7314 = !DILocation(line: 1342, column: 48, scope: !7312)
!7315 = !DILocation(line: 1342, column: 59, scope: !7312)
!7316 = !DILocation(line: 1342, column: 37, scope: !7312)
!7317 = !DILocation(line: 1342, column: 67, scope: !7312)
!7318 = !DILocation(line: 1342, column: 16, scope: !7295)
!7319 = !DILocation(line: 1344, column: 21, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7312, file: !355, line: 1343, column: 9)
!7321 = !DILocation(line: 1344, column: 28, scope: !7320)
!7322 = !DILocation(line: 1344, column: 54, scope: !7320)
!7323 = !DILocation(line: 1344, column: 11, scope: !7320)
!7324 = !DILocation(line: 1345, column: 22, scope: !7320)
!7325 = !DILocation(line: 1346, column: 11, scope: !7320)
!7326 = !DILocation(line: 1348, column: 5, scope: !7171)
!7327 = !DILabel(scope: !6836, name: "preserve_metadata", file: !355, line: 1350)
!7328 = !DILocation(line: 1350, column: 1, scope: !6836)
!7329 = !DILocation(line: 1351, column: 7, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1351, column: 7)
!7331 = !DILocation(line: 1351, column: 10, scope: !7330)
!7332 = !DILocation(line: 1351, column: 7, scope: !6836)
!7333 = !DILocalVariable(name: "timespec", scope: !7334, file: !355, line: 1353, type: !451)
!7334 = distinct !DILexicalBlock(scope: !7330, file: !355, line: 1352, column: 5)
!7335 = !DILocation(line: 1353, column: 23, scope: !7334)
!7336 = !DILocation(line: 1354, column: 7, scope: !7334)
!7337 = !DILocation(line: 1354, column: 37, scope: !7334)
!7338 = !DILocation(line: 1354, column: 21, scope: !7334)
!7339 = !DILocation(line: 1355, column: 7, scope: !7334)
!7340 = !DILocation(line: 1355, column: 37, scope: !7334)
!7341 = !DILocation(line: 1355, column: 21, scope: !7334)
!7342 = !DILocation(line: 1357, column: 22, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7334, file: !355, line: 1357, column: 11)
!7344 = !DILocation(line: 1357, column: 33, scope: !7343)
!7345 = !DILocation(line: 1357, column: 43, scope: !7343)
!7346 = !DILocation(line: 1357, column: 11, scope: !7343)
!7347 = !DILocation(line: 1357, column: 53, scope: !7343)
!7348 = !DILocation(line: 1357, column: 11, scope: !7334)
!7349 = !DILocation(line: 1359, column: 21, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7343, file: !355, line: 1358, column: 9)
!7351 = !DILocation(line: 1359, column: 28, scope: !7350)
!7352 = !DILocation(line: 1359, column: 58, scope: !7350)
!7353 = !DILocation(line: 1359, column: 11, scope: !7350)
!7354 = !DILocation(line: 1360, column: 15, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7350, file: !355, line: 1360, column: 15)
!7356 = !DILocation(line: 1360, column: 18, scope: !7355)
!7357 = !DILocation(line: 1360, column: 15, scope: !7350)
!7358 = !DILocation(line: 1362, column: 26, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7355, file: !355, line: 1361, column: 13)
!7360 = !DILocation(line: 1363, column: 15, scope: !7359)
!7361 = !DILocation(line: 1365, column: 9, scope: !7350)
!7362 = !DILocation(line: 1366, column: 5, scope: !7334)
!7363 = !DILocation(line: 1370, column: 7, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1370, column: 7)
!7365 = !DILocation(line: 1370, column: 10, scope: !7364)
!7366 = !DILocation(line: 1370, column: 29, scope: !7364)
!7367 = !DILocation(line: 1370, column: 34, scope: !7364)
!7368 = !DILocation(line: 1370, column: 7, scope: !6836)
!7369 = !DILocation(line: 1372, column: 26, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7364, file: !355, line: 1371, column: 5)
!7371 = !DILocation(line: 1372, column: 29, scope: !7370)
!7372 = !DILocation(line: 1372, column: 39, scope: !7370)
!7373 = !DILocation(line: 1372, column: 50, scope: !7370)
!7374 = !DILocation(line: 1372, column: 59, scope: !7370)
!7375 = !DILocation(line: 1372, column: 58, scope: !7370)
!7376 = !DILocation(line: 1372, column: 15, scope: !7370)
!7377 = !DILocation(line: 1372, column: 7, scope: !7370)
!7378 = !DILocation(line: 1375, column: 22, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7370, file: !355, line: 1373, column: 9)
!7380 = !DILocation(line: 1376, column: 11, scope: !7379)
!7381 = !DILocation(line: 1379, column: 20, scope: !7379)
!7382 = !DILocation(line: 1380, column: 11, scope: !7379)
!7383 = !DILocation(line: 1382, column: 5, scope: !7370)
!7384 = !DILocation(line: 1387, column: 7, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1387, column: 7)
!7386 = !DILocation(line: 1387, column: 10, scope: !7385)
!7387 = !DILocation(line: 1387, column: 7, scope: !6836)
!7388 = !DILocalVariable(name: "access_changed", scope: !7389, file: !355, line: 1389, type: !139)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !355, line: 1388, column: 5)
!7390 = !DILocation(line: 1389, column: 12, scope: !7389)
!7391 = !DILocation(line: 1391, column: 16, scope: !7392)
!7392 = distinct !DILexicalBlock(scope: !7389, file: !355, line: 1391, column: 11)
!7393 = !DILocation(line: 1391, column: 24, scope: !7392)
!7394 = !DILocation(line: 1391, column: 35, scope: !7392)
!7395 = !DILocation(line: 1391, column: 38, scope: !7392)
!7396 = !DILocation(line: 1391, column: 49, scope: !7392)
!7397 = !DILocation(line: 1391, column: 11, scope: !7389)
!7398 = !DILocation(line: 1393, column: 46, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7392, file: !355, line: 1392, column: 9)
!7400 = !DILocation(line: 1393, column: 57, scope: !7399)
!7401 = !DILocation(line: 1393, column: 28, scope: !7399)
!7402 = !DILocation(line: 1394, column: 65, scope: !7399)
!7403 = !DILocation(line: 1393, column: 26, scope: !7399)
!7404 = !DILocation(line: 1395, column: 9, scope: !7399)
!7405 = !DILocation(line: 1397, column: 23, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7389, file: !355, line: 1397, column: 11)
!7407 = !DILocation(line: 1397, column: 33, scope: !7406)
!7408 = !DILocation(line: 1397, column: 46, scope: !7406)
!7409 = !DILocation(line: 1397, column: 56, scope: !7406)
!7410 = !DILocation(line: 1397, column: 67, scope: !7406)
!7411 = !DILocation(line: 1397, column: 12, scope: !7406)
!7412 = !DILocation(line: 1398, column: 11, scope: !7406)
!7413 = !DILocation(line: 1398, column: 14, scope: !7406)
!7414 = !DILocation(line: 1398, column: 17, scope: !7406)
!7415 = !DILocation(line: 1397, column: 11, scope: !7389)
!7416 = !DILocation(line: 1399, column: 20, scope: !7406)
!7417 = !DILocation(line: 1399, column: 9, scope: !7406)
!7418 = !DILocation(line: 1401, column: 11, scope: !7419)
!7419 = distinct !DILexicalBlock(scope: !7389, file: !355, line: 1401, column: 11)
!7420 = !DILocation(line: 1401, column: 11, scope: !7389)
!7421 = !DILocation(line: 1402, column: 27, scope: !7419)
!7422 = !DILocation(line: 1402, column: 38, scope: !7419)
!7423 = !DILocation(line: 1402, column: 48, scope: !7419)
!7424 = !DILocation(line: 1402, column: 60, scope: !7419)
!7425 = !DILocation(line: 1402, column: 59, scope: !7419)
!7426 = !DILocation(line: 1402, column: 57, scope: !7419)
!7427 = !DILocation(line: 1402, column: 9, scope: !7419)
!7428 = !DILocation(line: 1403, column: 5, scope: !7389)
!7429 = !DILocation(line: 1405, column: 15, scope: !6836)
!7430 = !DILocation(line: 1405, column: 25, scope: !6836)
!7431 = !DILocation(line: 1405, column: 36, scope: !6836)
!7432 = !DILocation(line: 1405, column: 3, scope: !6836)
!7433 = !DILocation(line: 1407, column: 7, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1407, column: 7)
!7435 = !DILocation(line: 1407, column: 10, scope: !7434)
!7436 = !DILocation(line: 1407, column: 24, scope: !7434)
!7437 = !DILocation(line: 1407, column: 27, scope: !7434)
!7438 = !DILocation(line: 1407, column: 30, scope: !7434)
!7439 = !DILocation(line: 1407, column: 7, scope: !6836)
!7440 = !DILocation(line: 1409, column: 21, scope: !7441)
!7441 = distinct !DILexicalBlock(scope: !7442, file: !355, line: 1409, column: 11)
!7442 = distinct !DILexicalBlock(scope: !7434, file: !355, line: 1408, column: 5)
!7443 = !DILocation(line: 1409, column: 31, scope: !7441)
!7444 = !DILocation(line: 1409, column: 44, scope: !7441)
!7445 = !DILocation(line: 1409, column: 54, scope: !7441)
!7446 = !DILocation(line: 1409, column: 65, scope: !7441)
!7447 = !DILocation(line: 1409, column: 11, scope: !7441)
!7448 = !DILocation(line: 1409, column: 75, scope: !7441)
!7449 = !DILocation(line: 1410, column: 11, scope: !7441)
!7450 = !DILocation(line: 1410, column: 14, scope: !7441)
!7451 = !DILocation(line: 1410, column: 17, scope: !7441)
!7452 = !DILocation(line: 1409, column: 11, scope: !7442)
!7453 = !DILocation(line: 1411, column: 20, scope: !7441)
!7454 = !DILocation(line: 1411, column: 9, scope: !7441)
!7455 = !DILocation(line: 1412, column: 5, scope: !7442)
!7456 = !DILocation(line: 1413, column: 12, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7434, file: !355, line: 1413, column: 12)
!7458 = !DILocation(line: 1413, column: 15, scope: !7457)
!7459 = !DILocation(line: 1413, column: 12, scope: !7434)
!7460 = !DILocation(line: 1415, column: 20, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7462, file: !355, line: 1415, column: 11)
!7462 = distinct !DILexicalBlock(scope: !7457, file: !355, line: 1414, column: 5)
!7463 = !DILocation(line: 1415, column: 30, scope: !7461)
!7464 = !DILocation(line: 1415, column: 41, scope: !7461)
!7465 = !DILocation(line: 1415, column: 44, scope: !7461)
!7466 = !DILocation(line: 1415, column: 11, scope: !7461)
!7467 = !DILocation(line: 1415, column: 50, scope: !7461)
!7468 = !DILocation(line: 1415, column: 11, scope: !7462)
!7469 = !DILocation(line: 1416, column: 20, scope: !7461)
!7470 = !DILocation(line: 1416, column: 9, scope: !7461)
!7471 = !DILocation(line: 1417, column: 5, scope: !7462)
!7472 = !DILocation(line: 1418, column: 12, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7457, file: !355, line: 1418, column: 12)
!7474 = !DILocation(line: 1418, column: 15, scope: !7473)
!7475 = !DILocation(line: 1418, column: 41, scope: !7473)
!7476 = !DILocation(line: 1418, column: 45, scope: !7473)
!7477 = !DILocation(line: 1418, column: 44, scope: !7473)
!7478 = !DILocation(line: 1418, column: 12, scope: !7457)
!7479 = !DILocation(line: 1420, column: 20, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !355, line: 1420, column: 11)
!7481 = distinct !DILexicalBlock(scope: !7473, file: !355, line: 1419, column: 5)
!7482 = !DILocation(line: 1420, column: 30, scope: !7480)
!7483 = !DILocation(line: 1420, column: 56, scope: !7480)
!7484 = !DILocation(line: 1420, column: 55, scope: !7480)
!7485 = !DILocation(line: 1420, column: 53, scope: !7480)
!7486 = !DILocation(line: 1420, column: 11, scope: !7480)
!7487 = !DILocation(line: 1420, column: 73, scope: !7480)
!7488 = !DILocation(line: 1420, column: 11, scope: !7481)
!7489 = !DILocation(line: 1421, column: 20, scope: !7480)
!7490 = !DILocation(line: 1421, column: 9, scope: !7480)
!7491 = !DILocation(line: 1422, column: 5, scope: !7481)
!7492 = !DILocation(line: 1423, column: 12, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7473, file: !355, line: 1423, column: 12)
!7494 = !DILocation(line: 1423, column: 12, scope: !7473)
!7495 = !DILocation(line: 1425, column: 32, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7493, file: !355, line: 1424, column: 5)
!7497 = !DILocation(line: 1425, column: 30, scope: !7496)
!7498 = !DILocation(line: 1425, column: 27, scope: !7496)
!7499 = !DILocation(line: 1426, column: 11, scope: !7500)
!7500 = distinct !DILexicalBlock(scope: !7496, file: !355, line: 1426, column: 11)
!7501 = !DILocation(line: 1427, column: 11, scope: !7500)
!7502 = !DILocation(line: 1427, column: 32, scope: !7500)
!7503 = !DILocation(line: 1427, column: 43, scope: !7500)
!7504 = !DILocation(line: 1427, column: 53, scope: !7500)
!7505 = !DILocation(line: 1427, column: 14, scope: !7500)
!7506 = !DILocation(line: 1427, column: 63, scope: !7500)
!7507 = !DILocation(line: 1426, column: 11, scope: !7496)
!7508 = !DILocation(line: 1429, column: 21, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7500, file: !355, line: 1428, column: 9)
!7510 = !DILocation(line: 1429, column: 28, scope: !7509)
!7511 = !DILocation(line: 1430, column: 18, scope: !7509)
!7512 = !DILocation(line: 1429, column: 11, scope: !7509)
!7513 = !DILocation(line: 1431, column: 15, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7509, file: !355, line: 1431, column: 15)
!7515 = !DILocation(line: 1431, column: 18, scope: !7514)
!7516 = !DILocation(line: 1431, column: 15, scope: !7509)
!7517 = !DILocation(line: 1432, column: 24, scope: !7514)
!7518 = !DILocation(line: 1432, column: 13, scope: !7514)
!7519 = !DILocation(line: 1433, column: 9, scope: !7509)
!7520 = !DILocation(line: 1434, column: 5, scope: !7496)
!7521 = !DILabel(scope: !6836, name: "close_src_and_dst_desc", file: !355, line: 1436)
!7522 = !DILocation(line: 1436, column: 1, scope: !6836)
!7523 = !DILocation(line: 1437, column: 14, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1437, column: 7)
!7525 = !DILocation(line: 1437, column: 7, scope: !7524)
!7526 = !DILocation(line: 1437, column: 25, scope: !7524)
!7527 = !DILocation(line: 1437, column: 7, scope: !6836)
!7528 = !DILocation(line: 1439, column: 17, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7524, file: !355, line: 1438, column: 5)
!7530 = !DILocation(line: 1439, column: 24, scope: !7529)
!7531 = !DILocation(line: 1439, column: 49, scope: !7529)
!7532 = !DILocation(line: 1439, column: 7, scope: !7529)
!7533 = !DILocation(line: 1440, column: 18, scope: !7529)
!7534 = !DILocation(line: 1441, column: 5, scope: !7529)
!7535 = !DILocation(line: 1437, column: 27, scope: !7524)
!7536 = !DILabel(scope: !6836, name: "close_src_desc", file: !355, line: 1442)
!7537 = !DILocation(line: 1442, column: 1, scope: !6836)
!7538 = !DILocation(line: 1443, column: 14, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !6836, file: !355, line: 1443, column: 7)
!7540 = !DILocation(line: 1443, column: 7, scope: !7539)
!7541 = !DILocation(line: 1443, column: 27, scope: !7539)
!7542 = !DILocation(line: 1443, column: 7, scope: !6836)
!7543 = !DILocation(line: 1445, column: 17, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7539, file: !355, line: 1444, column: 5)
!7545 = !DILocation(line: 1445, column: 24, scope: !7544)
!7546 = !DILocation(line: 1445, column: 49, scope: !7544)
!7547 = !DILocation(line: 1445, column: 7, scope: !7544)
!7548 = !DILocation(line: 1446, column: 18, scope: !7544)
!7549 = !DILocation(line: 1447, column: 5, scope: !7544)
!7550 = !DILocation(line: 1449, column: 9, scope: !6836)
!7551 = !DILocation(line: 1449, column: 3, scope: !6836)
!7552 = !DILocation(line: 1450, column: 9, scope: !6836)
!7553 = !DILocation(line: 1450, column: 3, scope: !6836)
!7554 = !DILocation(line: 1451, column: 10, scope: !6836)
!7555 = !DILocation(line: 1451, column: 3, scope: !6836)
!7556 = !DILocation(line: 1452, column: 1, scope: !6836)
!7557 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !355, file: !355, line: 1805, type: !197, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7558 = !DILocation(line: 1807, column: 7, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7557, file: !355, line: 1807, column: 7)
!7560 = !DILocation(line: 1807, column: 29, scope: !7559)
!7561 = !DILocation(line: 1807, column: 7, scope: !7557)
!7562 = !DILocation(line: 1808, column: 5, scope: !7559)
!7563 = !DILocation(line: 1810, column: 1, scope: !7557)
!7564 = distinct !DISubprogram(name: "chown_failure_ok", scope: !355, file: !355, line: 3061, type: !413, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7565 = !DILocalVariable(name: "x", arg: 1, scope: !7564, file: !355, line: 3061, type: !362)
!7566 = !DILocation(line: 3061, column: 44, scope: !7564)
!7567 = !DILocation(line: 3067, column: 12, scope: !7564)
!7568 = !DILocation(line: 3067, column: 18, scope: !7564)
!7569 = !DILocation(line: 3067, column: 27, scope: !7564)
!7570 = !DILocation(line: 3067, column: 30, scope: !7564)
!7571 = !DILocation(line: 3067, column: 36, scope: !7564)
!7572 = !DILocation(line: 3067, column: 47, scope: !7564)
!7573 = !DILocation(line: 3067, column: 51, scope: !7564)
!7574 = !DILocation(line: 3067, column: 54, scope: !7564)
!7575 = !{!2833, !2763, i64 26}
!7576 = !DILocation(line: 3067, column: 50, scope: !7564)
!7577 = !DILocation(line: 0, scope: !7564)
!7578 = !DILocation(line: 3067, column: 3, scope: !7564)
!7579 = distinct !DISubprogram(name: "utimens_symlink", scope: !355, file: !355, line: 189, type: !568, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7580 = !DILocalVariable(name: "file", arg: 1, scope: !7579, file: !355, line: 189, type: !177)
!7581 = !DILocation(line: 189, column: 30, scope: !7579)
!7582 = !DILocalVariable(name: "timespec", arg: 2, scope: !7579, file: !355, line: 189, type: !570)
!7583 = !DILocation(line: 189, column: 59, scope: !7579)
!7584 = !DILocalVariable(name: "err", scope: !7579, file: !355, line: 191, type: !5)
!7585 = !DILocation(line: 191, column: 7, scope: !7579)
!7586 = !DILocation(line: 191, column: 23, scope: !7579)
!7587 = !DILocation(line: 191, column: 29, scope: !7579)
!7588 = !DILocation(line: 191, column: 13, scope: !7579)
!7589 = !DILocation(line: 195, column: 7, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7579, file: !355, line: 195, column: 7)
!7591 = !DILocation(line: 195, column: 11, scope: !7590)
!7592 = !DILocation(line: 195, column: 14, scope: !7590)
!7593 = !DILocation(line: 195, column: 20, scope: !7590)
!7594 = !DILocation(line: 195, column: 7, scope: !7579)
!7595 = !DILocation(line: 196, column: 9, scope: !7590)
!7596 = !DILocation(line: 196, column: 5, scope: !7590)
!7597 = !DILocation(line: 197, column: 10, scope: !7579)
!7598 = !DILocation(line: 197, column: 3, scope: !7579)
!7599 = distinct !DISubprogram(name: "set_owner", scope: !355, file: !355, line: 816, type: !572, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7600 = !DILocalVariable(name: "x", arg: 1, scope: !7599, file: !355, line: 816, type: !362)
!7601 = !DILocation(line: 816, column: 37, scope: !7599)
!7602 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7599, file: !355, line: 816, type: !177)
!7603 = !DILocation(line: 816, column: 52, scope: !7599)
!7604 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !7599, file: !355, line: 816, type: !5)
!7605 = !DILocation(line: 816, column: 66, scope: !7599)
!7606 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7599, file: !355, line: 817, type: !419)
!7607 = !DILocation(line: 817, column: 31, scope: !7599)
!7608 = !DILocalVariable(name: "new_dst", arg: 5, scope: !7599, file: !355, line: 817, type: !139)
!7609 = !DILocation(line: 817, column: 44, scope: !7599)
!7610 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !7599, file: !355, line: 818, type: !419)
!7611 = !DILocation(line: 818, column: 31, scope: !7599)
!7612 = !DILocalVariable(name: "uid", scope: !7599, file: !355, line: 820, type: !124)
!7613 = !DILocation(line: 820, column: 9, scope: !7599)
!7614 = !DILocation(line: 820, column: 15, scope: !7599)
!7615 = !DILocation(line: 820, column: 23, scope: !7599)
!7616 = !DILocalVariable(name: "gid", scope: !7599, file: !355, line: 821, type: !126)
!7617 = !DILocation(line: 821, column: 9, scope: !7599)
!7618 = !DILocation(line: 821, column: 15, scope: !7599)
!7619 = !DILocation(line: 821, column: 23, scope: !7599)
!7620 = !DILocation(line: 829, column: 8, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7599, file: !355, line: 829, column: 7)
!7622 = !DILocation(line: 829, column: 16, scope: !7621)
!7623 = !DILocation(line: 829, column: 20, scope: !7621)
!7624 = !DILocation(line: 829, column: 23, scope: !7621)
!7625 = !DILocation(line: 829, column: 37, scope: !7621)
!7626 = !DILocation(line: 829, column: 40, scope: !7621)
!7627 = !DILocation(line: 829, column: 43, scope: !7621)
!7628 = !DILocation(line: 829, column: 53, scope: !7621)
!7629 = !DILocation(line: 829, column: 56, scope: !7621)
!7630 = !DILocation(line: 829, column: 59, scope: !7621)
!7631 = !DILocation(line: 829, column: 7, scope: !7599)
!7632 = !DILocalVariable(name: "old_mode", scope: !7633, file: !355, line: 831, type: !136)
!7633 = distinct !DILexicalBlock(scope: !7621, file: !355, line: 830, column: 5)
!7634 = !DILocation(line: 831, column: 14, scope: !7633)
!7635 = !DILocation(line: 831, column: 25, scope: !7633)
!7636 = !DILocation(line: 831, column: 33, scope: !7633)
!7637 = !DILocalVariable(name: "new_mode", scope: !7633, file: !355, line: 832, type: !136)
!7638 = !DILocation(line: 832, column: 14, scope: !7633)
!7639 = !DILocation(line: 833, column: 10, scope: !7633)
!7640 = !DILocation(line: 833, column: 13, scope: !7633)
!7641 = !DILocation(line: 833, column: 27, scope: !7633)
!7642 = !DILocation(line: 833, column: 30, scope: !7633)
!7643 = !DILocation(line: 833, column: 33, scope: !7633)
!7644 = !DILocation(line: 833, column: 45, scope: !7633)
!7645 = !DILocation(line: 833, column: 53, scope: !7633)
!7646 = !DILocation(line: 833, column: 63, scope: !7633)
!7647 = !DILocation(line: 833, column: 66, scope: !7633)
!7648 = !DILocalVariable(name: "restrictive_temp_mode", scope: !7633, file: !355, line: 834, type: !136)
!7649 = !DILocation(line: 834, column: 14, scope: !7633)
!7650 = !DILocation(line: 834, column: 38, scope: !7633)
!7651 = !DILocation(line: 834, column: 49, scope: !7633)
!7652 = !DILocation(line: 834, column: 47, scope: !7633)
!7653 = !DILocation(line: 834, column: 58, scope: !7633)
!7654 = !DILocation(line: 837, column: 16, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7633, file: !355, line: 836, column: 11)
!7656 = !DILocation(line: 837, column: 25, scope: !7655)
!7657 = !DILocation(line: 838, column: 20, scope: !7655)
!7658 = !DILocation(line: 838, column: 19, scope: !7655)
!7659 = !DILocation(line: 838, column: 29, scope: !7655)
!7660 = !DILocation(line: 838, column: 39, scope: !7655)
!7661 = !DILocation(line: 838, column: 49, scope: !7655)
!7662 = !DILocation(line: 838, column: 16, scope: !7655)
!7663 = !DILocation(line: 839, column: 11, scope: !7655)
!7664 = !DILocation(line: 839, column: 24, scope: !7655)
!7665 = !DILocation(line: 839, column: 34, scope: !7655)
!7666 = !DILocation(line: 839, column: 45, scope: !7655)
!7667 = !DILocation(line: 839, column: 14, scope: !7655)
!7668 = !DILocation(line: 839, column: 68, scope: !7655)
!7669 = !DILocation(line: 836, column: 11, scope: !7633)
!7670 = !DILocation(line: 841, column: 35, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7672, file: !355, line: 841, column: 15)
!7672 = distinct !DILexicalBlock(scope: !7655, file: !355, line: 840, column: 9)
!7673 = !DILocation(line: 841, column: 17, scope: !7671)
!7674 = !DILocation(line: 841, column: 15, scope: !7672)
!7675 = !DILocation(line: 842, column: 23, scope: !7671)
!7676 = !DILocation(line: 842, column: 30, scope: !7671)
!7677 = !DILocation(line: 843, column: 20, scope: !7671)
!7678 = !DILocation(line: 842, column: 13, scope: !7671)
!7679 = !DILocation(line: 844, column: 19, scope: !7672)
!7680 = !DILocation(line: 844, column: 22, scope: !7672)
!7681 = !DILocation(line: 844, column: 18, scope: !7672)
!7682 = !DILocation(line: 844, column: 11, scope: !7672)
!7683 = !DILocation(line: 846, column: 5, scope: !7633)
!7684 = !DILocation(line: 848, column: 22, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7599, file: !355, line: 848, column: 7)
!7686 = !DILocation(line: 848, column: 32, scope: !7685)
!7687 = !DILocation(line: 848, column: 7, scope: !7599)
!7688 = !DILocation(line: 850, column: 19, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !355, line: 850, column: 11)
!7690 = distinct !DILexicalBlock(scope: !7685, file: !355, line: 849, column: 5)
!7691 = !DILocation(line: 850, column: 30, scope: !7689)
!7692 = !DILocation(line: 850, column: 35, scope: !7689)
!7693 = !DILocation(line: 850, column: 11, scope: !7689)
!7694 = !DILocation(line: 850, column: 40, scope: !7689)
!7695 = !DILocation(line: 850, column: 11, scope: !7690)
!7696 = !DILocation(line: 851, column: 9, scope: !7689)
!7697 = !DILocation(line: 852, column: 11, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7690, file: !355, line: 852, column: 11)
!7699 = !DILocation(line: 852, column: 17, scope: !7698)
!7700 = !DILocation(line: 852, column: 26, scope: !7698)
!7701 = !DILocation(line: 852, column: 29, scope: !7698)
!7702 = !DILocation(line: 852, column: 35, scope: !7698)
!7703 = !DILocation(line: 852, column: 11, scope: !7690)
!7704 = !DILocalVariable(name: "saved_errno", scope: !7705, file: !355, line: 856, type: !5)
!7705 = distinct !DILexicalBlock(scope: !7698, file: !355, line: 853, column: 9)
!7706 = !DILocation(line: 856, column: 15, scope: !7705)
!7707 = !DILocation(line: 856, column: 29, scope: !7705)
!7708 = !DILocalVariable(name: "__x", scope: !7709, file: !355, line: 857, type: !5)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !355, line: 857, column: 11)
!7710 = !DILocation(line: 857, column: 11, scope: !7709)
!7711 = !DILocation(line: 858, column: 19, scope: !7705)
!7712 = !DILocation(line: 858, column: 11, scope: !7705)
!7713 = !DILocation(line: 858, column: 17, scope: !7705)
!7714 = !DILocation(line: 859, column: 9, scope: !7705)
!7715 = !DILocation(line: 860, column: 5, scope: !7690)
!7716 = !DILocation(line: 863, column: 19, scope: !7717)
!7717 = distinct !DILexicalBlock(scope: !7718, file: !355, line: 863, column: 11)
!7718 = distinct !DILexicalBlock(scope: !7685, file: !355, line: 862, column: 5)
!7719 = !DILocation(line: 863, column: 29, scope: !7717)
!7720 = !DILocation(line: 863, column: 34, scope: !7717)
!7721 = !DILocation(line: 863, column: 11, scope: !7717)
!7722 = !DILocation(line: 863, column: 39, scope: !7717)
!7723 = !DILocation(line: 863, column: 11, scope: !7718)
!7724 = !DILocation(line: 864, column: 9, scope: !7717)
!7725 = !DILocation(line: 865, column: 11, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7718, file: !355, line: 865, column: 11)
!7727 = !DILocation(line: 865, column: 17, scope: !7726)
!7728 = !DILocation(line: 865, column: 26, scope: !7726)
!7729 = !DILocation(line: 865, column: 29, scope: !7726)
!7730 = !DILocation(line: 865, column: 35, scope: !7726)
!7731 = !DILocation(line: 865, column: 11, scope: !7718)
!7732 = !DILocalVariable(name: "saved_errno", scope: !7733, file: !355, line: 869, type: !5)
!7733 = distinct !DILexicalBlock(scope: !7726, file: !355, line: 866, column: 9)
!7734 = !DILocation(line: 869, column: 15, scope: !7733)
!7735 = !DILocation(line: 869, column: 29, scope: !7733)
!7736 = !DILocalVariable(name: "__x", scope: !7737, file: !355, line: 870, type: !5)
!7737 = distinct !DILexicalBlock(scope: !7733, file: !355, line: 870, column: 11)
!7738 = !DILocation(line: 870, column: 11, scope: !7737)
!7739 = !DILocation(line: 871, column: 19, scope: !7733)
!7740 = !DILocation(line: 871, column: 11, scope: !7733)
!7741 = !DILocation(line: 871, column: 17, scope: !7733)
!7742 = !DILocation(line: 872, column: 9, scope: !7733)
!7743 = !DILocation(line: 875, column: 27, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7599, file: !355, line: 875, column: 7)
!7745 = !DILocation(line: 875, column: 9, scope: !7744)
!7746 = !DILocation(line: 875, column: 7, scope: !7599)
!7747 = !DILocation(line: 877, column: 17, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7744, file: !355, line: 876, column: 5)
!7749 = !DILocation(line: 877, column: 24, scope: !7748)
!7750 = !DILocation(line: 878, column: 14, scope: !7748)
!7751 = !DILocation(line: 877, column: 7, scope: !7748)
!7752 = !DILocation(line: 879, column: 11, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7748, file: !355, line: 879, column: 11)
!7754 = !DILocation(line: 879, column: 14, scope: !7753)
!7755 = !DILocation(line: 879, column: 11, scope: !7748)
!7756 = !DILocation(line: 880, column: 9, scope: !7753)
!7757 = !DILocation(line: 881, column: 5, scope: !7748)
!7758 = !DILocation(line: 883, column: 3, scope: !7599)
!7759 = !DILocation(line: 884, column: 1, scope: !7599)
!7760 = distinct !DISubprogram(name: "copy_attr", scope: !355, file: !355, line: 722, type: !574, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7761 = !DILocalVariable(name: "src_path", arg: 1, scope: !7760, file: !355, line: 722, type: !177)
!7762 = !DILocation(line: 722, column: 24, scope: !7760)
!7763 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7760, file: !355, line: 723, type: !5)
!7764 = !DILocation(line: 723, column: 16, scope: !7760)
!7765 = !DILocalVariable(name: "dst_path", arg: 3, scope: !7760, file: !355, line: 724, type: !177)
!7766 = !DILocation(line: 724, column: 24, scope: !7760)
!7767 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !7760, file: !355, line: 725, type: !5)
!7768 = !DILocation(line: 725, column: 16, scope: !7760)
!7769 = !DILocalVariable(name: "x", arg: 5, scope: !7760, file: !355, line: 726, type: !362)
!7770 = !DILocation(line: 726, column: 37, scope: !7760)
!7771 = !DILocation(line: 728, column: 3, scope: !7760)
!7772 = distinct !DISubprogram(name: "set_author", scope: !355, file: !355, line: 892, type: !576, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7773 = !DILocalVariable(name: "dst_name", arg: 1, scope: !7772, file: !355, line: 892, type: !177)
!7774 = !DILocation(line: 892, column: 25, scope: !7772)
!7775 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !7772, file: !355, line: 892, type: !5)
!7776 = !DILocation(line: 892, column: 39, scope: !7772)
!7777 = !DILocalVariable(name: "src_sb", arg: 3, scope: !7772, file: !355, line: 892, type: !419)
!7778 = !DILocation(line: 892, column: 69, scope: !7772)
!7779 = !DILocation(line: 913, column: 10, scope: !7772)
!7780 = !DILocation(line: 914, column: 10, scope: !7772)
!7781 = !DILocation(line: 915, column: 10, scope: !7772)
!7782 = !DILocation(line: 917, column: 1, scope: !7772)
!7783 = !DILocation(line: 3090, column: 7, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !581, file: !355, line: 3090, column: 7)
!7785 = !DILocation(line: 3090, column: 12, scope: !7784)
!7786 = !DILocation(line: 3090, column: 7, scope: !581)
!7787 = !DILocation(line: 3092, column: 14, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7784, file: !355, line: 3091, column: 5)
!7789 = !DILocation(line: 3092, column: 12, scope: !7788)
!7790 = !DILocation(line: 3093, column: 14, scope: !7788)
!7791 = !DILocation(line: 3093, column: 7, scope: !7788)
!7792 = !DILocation(line: 3094, column: 5, scope: !7788)
!7793 = !DILocation(line: 3095, column: 10, scope: !581)
!7794 = !DILocation(line: 3095, column: 3, scope: !581)
!7795 = distinct !DISubprogram(name: "owner_failure_ok", scope: !355, file: !355, line: 3075, type: !413, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7796 = !DILocalVariable(name: "x", arg: 1, scope: !7795, file: !355, line: 3075, type: !362)
!7797 = !DILocation(line: 3075, column: 44, scope: !7795)
!7798 = !DILocation(line: 3077, column: 12, scope: !7795)
!7799 = !DILocation(line: 3077, column: 18, scope: !7795)
!7800 = !DILocation(line: 3077, column: 27, scope: !7795)
!7801 = !DILocation(line: 3077, column: 30, scope: !7795)
!7802 = !DILocation(line: 3077, column: 36, scope: !7795)
!7803 = !DILocation(line: 3077, column: 47, scope: !7795)
!7804 = !DILocation(line: 3077, column: 51, scope: !7795)
!7805 = !DILocation(line: 3077, column: 54, scope: !7795)
!7806 = !{!2833, !2763, i64 27}
!7807 = !DILocation(line: 3077, column: 50, scope: !7795)
!7808 = !DILocation(line: 0, scope: !7795)
!7809 = !DILocation(line: 3077, column: 3, scope: !7795)
!7810 = distinct !DISubprogram(name: "clone_file", scope: !355, file: !355, line: 370, type: !517, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7811 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !7810, file: !355, line: 370, type: !5)
!7812 = !DILocation(line: 370, column: 17, scope: !7810)
!7813 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7810, file: !355, line: 370, type: !5)
!7814 = !DILocation(line: 370, column: 30, scope: !7810)
!7815 = !DILocation(line: 373, column: 17, scope: !7810)
!7816 = !DILocation(line: 373, column: 35, scope: !7810)
!7817 = !DILocation(line: 373, column: 10, scope: !7810)
!7818 = !DILocation(line: 373, column: 3, scope: !7810)
!7819 = distinct !DISubprogram(name: "io_blksize", scope: !7820, file: !7820, line: 75, type: !519, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7820 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mohamad/clone/coreutils")
!7821 = !DILocalVariable(name: "sb", arg: 1, scope: !7819, file: !7820, line: 75, type: !421)
!7822 = !DILocation(line: 75, column: 25, scope: !7819)
!7823 = !DILocation(line: 77, column: 10, scope: !7819)
!7824 = !DILocation(line: 77, column: 3, scope: !7819)
!7825 = distinct !DISubprogram(name: "is_probably_sparse", scope: !355, file: !355, line: 1031, type: !521, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7826 = !DILocalVariable(name: "sb", arg: 1, scope: !7825, file: !355, line: 1031, type: !419)
!7827 = !DILocation(line: 1031, column: 40, scope: !7825)
!7828 = !DILocation(line: 1034, column: 14, scope: !7825)
!7829 = !DILocation(line: 1035, column: 11, scope: !7825)
!7830 = !DILocation(line: 1035, column: 14, scope: !7825)
!7831 = !{!2935, !2936, i64 64}
!7832 = !DILocation(line: 1035, column: 33, scope: !7825)
!7833 = !DILocation(line: 1035, column: 37, scope: !7825)
!7834 = !DILocation(line: 1035, column: 45, scope: !7825)
!7835 = !DILocation(line: 1035, column: 31, scope: !7825)
!7836 = !DILocation(line: 0, scope: !7825)
!7837 = !DILocation(line: 1033, column: 3, scope: !7825)
!7838 = distinct !DISubprogram(name: "ptr_align", scope: !204, file: !204, line: 498, type: !523, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7839 = !DILocalVariable(name: "ptr", arg: 1, scope: !7838, file: !204, line: 498, type: !525)
!7840 = !DILocation(line: 498, column: 24, scope: !7838)
!7841 = !DILocalVariable(name: "alignment", arg: 2, scope: !7838, file: !204, line: 498, type: !52)
!7842 = !DILocation(line: 498, column: 36, scope: !7838)
!7843 = !DILocalVariable(name: "p0", scope: !7838, file: !204, line: 500, type: !177)
!7844 = !DILocation(line: 500, column: 15, scope: !7838)
!7845 = !DILocation(line: 500, column: 20, scope: !7838)
!7846 = !DILocalVariable(name: "p1", scope: !7838, file: !204, line: 501, type: !177)
!7847 = !DILocation(line: 501, column: 15, scope: !7838)
!7848 = !DILocation(line: 501, column: 20, scope: !7838)
!7849 = !DILocation(line: 501, column: 25, scope: !7838)
!7850 = !DILocation(line: 501, column: 23, scope: !7838)
!7851 = !DILocation(line: 501, column: 35, scope: !7838)
!7852 = !DILocation(line: 502, column: 20, scope: !7838)
!7853 = !DILocation(line: 502, column: 34, scope: !7838)
!7854 = !DILocation(line: 502, column: 25, scope: !7838)
!7855 = !DILocation(line: 502, column: 39, scope: !7838)
!7856 = !DILocation(line: 502, column: 37, scope: !7838)
!7857 = !DILocation(line: 502, column: 23, scope: !7838)
!7858 = !DILocation(line: 502, column: 3, scope: !7838)
!7859 = distinct !DISubprogram(name: "extent_copy", scope: !355, file: !355, line: 423, type: !527, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!7860 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7859, file: !355, line: 423, type: !5)
!7861 = !DILocation(line: 423, column: 18, scope: !7859)
!7862 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7859, file: !355, line: 423, type: !5)
!7863 = !DILocation(line: 423, column: 30, scope: !7859)
!7864 = !DILocalVariable(name: "buf", arg: 3, scope: !7859, file: !355, line: 423, type: !7)
!7865 = !DILocation(line: 423, column: 45, scope: !7859)
!7866 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7859, file: !355, line: 423, type: !52)
!7867 = !DILocation(line: 423, column: 57, scope: !7859)
!7868 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7859, file: !355, line: 424, type: !52)
!7869 = !DILocation(line: 424, column: 21, scope: !7859)
!7870 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !7859, file: !355, line: 424, type: !358)
!7871 = !DILocation(line: 424, column: 38, scope: !7859)
!7872 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !7859, file: !355, line: 425, type: !86)
!7873 = !DILocation(line: 425, column: 31, scope: !7859)
!7874 = !DILocalVariable(name: "src_name", arg: 8, scope: !7859, file: !355, line: 426, type: !177)
!7875 = !DILocation(line: 426, column: 26, scope: !7859)
!7876 = !DILocalVariable(name: "dst_name", arg: 9, scope: !7859, file: !355, line: 426, type: !177)
!7877 = !DILocation(line: 426, column: 48, scope: !7859)
!7878 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !7859, file: !355, line: 427, type: !412)
!7879 = !DILocation(line: 427, column: 20, scope: !7859)
!7880 = !DILocalVariable(name: "scan", scope: !7859, file: !355, line: 429, type: !539)
!7881 = !DILocation(line: 429, column: 22, scope: !7859)
!7882 = !DILocalVariable(name: "last_ext_start", scope: !7859, file: !355, line: 430, type: !358)
!7883 = !DILocation(line: 430, column: 9, scope: !7859)
!7884 = !DILocalVariable(name: "last_ext_len", scope: !7859, file: !355, line: 431, type: !358)
!7885 = !DILocation(line: 431, column: 9, scope: !7859)
!7886 = !DILocalVariable(name: "dest_pos", scope: !7859, file: !355, line: 435, type: !358)
!7887 = !DILocation(line: 435, column: 9, scope: !7859)
!7888 = !DILocation(line: 437, column: 21, scope: !7859)
!7889 = !DILocation(line: 437, column: 3, scope: !7859)
!7890 = !DILocation(line: 439, column: 4, scope: !7859)
!7891 = !DILocation(line: 439, column: 24, scope: !7859)
!7892 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7859, file: !355, line: 440, type: !139)
!7893 = !DILocation(line: 440, column: 8, scope: !7859)
!7894 = !DILocation(line: 441, column: 3, scope: !7859)
!7895 = !DILocalVariable(name: "ok", scope: !7896, file: !355, line: 443, type: !139)
!7896 = distinct !DILexicalBlock(scope: !7859, file: !355, line: 442, column: 5)
!7897 = !DILocation(line: 443, column: 12, scope: !7896)
!7898 = !DILocation(line: 443, column: 17, scope: !7896)
!7899 = !DILocation(line: 444, column: 13, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7896, file: !355, line: 444, column: 11)
!7901 = !DILocation(line: 444, column: 11, scope: !7896)
!7902 = !DILocation(line: 446, column: 20, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7904, file: !355, line: 446, column: 15)
!7904 = distinct !DILexicalBlock(scope: !7900, file: !355, line: 445, column: 9)
!7905 = !{!7906, !2763, i64 33}
!7906 = !{!"extent_scan", !2656, i64 0, !2936, i64 8, !2656, i64 16, !2936, i64 24, !2763, i64 32, !2763, i64 33, !2669, i64 40}
!7907 = !DILocation(line: 446, column: 15, scope: !7904)
!7908 = !DILocation(line: 447, column: 13, scope: !7903)
!7909 = !DILocation(line: 449, column: 20, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7904, file: !355, line: 449, column: 15)
!7911 = !{!7906, !2763, i64 32}
!7912 = !DILocation(line: 449, column: 15, scope: !7904)
!7913 = !DILocation(line: 451, column: 16, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7910, file: !355, line: 450, column: 13)
!7915 = !DILocation(line: 451, column: 36, scope: !7914)
!7916 = !DILocation(line: 452, column: 15, scope: !7914)
!7917 = !DILocation(line: 455, column: 21, scope: !7904)
!7918 = !DILocation(line: 455, column: 28, scope: !7904)
!7919 = !DILocation(line: 456, column: 18, scope: !7904)
!7920 = !DILocation(line: 455, column: 11, scope: !7904)
!7921 = !DILocation(line: 457, column: 11, scope: !7904)
!7922 = !DILocalVariable(name: "empty_extent", scope: !7896, file: !355, line: 460, type: !139)
!7923 = !DILocation(line: 460, column: 12, scope: !7896)
!7924 = !DILocalVariable(name: "i", scope: !7925, file: !355, line: 461, type: !67)
!7925 = distinct !DILexicalBlock(scope: !7896, file: !355, line: 461, column: 7)
!7926 = !DILocation(line: 461, column: 25, scope: !7925)
!7927 = !DILocation(line: 461, column: 12, scope: !7925)
!7928 = !DILocation(line: 461, column: 32, scope: !7929)
!7929 = distinct !DILexicalBlock(scope: !7925, file: !355, line: 461, column: 7)
!7930 = !DILocation(line: 461, column: 41, scope: !7929)
!7931 = !{!7906, !2936, i64 24}
!7932 = !DILocation(line: 461, column: 34, scope: !7929)
!7933 = !DILocation(line: 461, column: 50, scope: !7929)
!7934 = !DILocation(line: 461, column: 53, scope: !7929)
!7935 = !DILocation(line: 461, column: 7, scope: !7925)
!7936 = !DILocalVariable(name: "ext_start", scope: !7937, file: !355, line: 463, type: !358)
!7937 = distinct !DILexicalBlock(scope: !7929, file: !355, line: 462, column: 9)
!7938 = !DILocation(line: 463, column: 17, scope: !7937)
!7939 = !DILocalVariable(name: "ext_len", scope: !7937, file: !355, line: 464, type: !358)
!7940 = !DILocation(line: 464, column: 17, scope: !7937)
!7941 = !DILocalVariable(name: "ext_hole_size", scope: !7937, file: !355, line: 465, type: !358)
!7942 = !DILocation(line: 465, column: 17, scope: !7937)
!7943 = !DILocation(line: 467, column: 15, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7937, file: !355, line: 467, column: 15)
!7945 = !DILocation(line: 467, column: 24, scope: !7944)
!7946 = !DILocation(line: 467, column: 17, scope: !7944)
!7947 = !DILocation(line: 467, column: 15, scope: !7937)
!7948 = !DILocation(line: 469, column: 32, scope: !7949)
!7949 = distinct !DILexicalBlock(scope: !7944, file: !355, line: 468, column: 13)
!7950 = !{!7906, !2669, i64 40}
!7951 = !DILocation(line: 469, column: 41, scope: !7949)
!7952 = !DILocation(line: 469, column: 27, scope: !7949)
!7953 = !DILocation(line: 469, column: 44, scope: !7949)
!7954 = !{!7955, !2936, i64 0}
!7955 = !{!"extent_info", !2936, i64 0, !2936, i64 8, !2656, i64 16}
!7956 = !DILocation(line: 469, column: 25, scope: !7949)
!7957 = !DILocation(line: 470, column: 30, scope: !7949)
!7958 = !DILocation(line: 470, column: 39, scope: !7949)
!7959 = !DILocation(line: 470, column: 25, scope: !7949)
!7960 = !DILocation(line: 470, column: 42, scope: !7949)
!7961 = !{!7955, !2936, i64 8}
!7962 = !DILocation(line: 470, column: 23, scope: !7949)
!7963 = !DILocation(line: 471, column: 13, scope: !7949)
!7964 = !DILocation(line: 474, column: 16, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7944, file: !355, line: 473, column: 13)
!7966 = !DILocation(line: 475, column: 27, scope: !7965)
!7967 = !DILocation(line: 475, column: 49, scope: !7965)
!7968 = !DILocation(line: 475, column: 58, scope: !7965)
!7969 = !DILocation(line: 475, column: 44, scope: !7965)
!7970 = !DILocation(line: 475, column: 61, scope: !7965)
!7971 = !DILocation(line: 475, column: 42, scope: !7965)
!7972 = !DILocation(line: 475, column: 25, scope: !7965)
!7973 = !DILocation(line: 476, column: 23, scope: !7965)
!7974 = !DILocation(line: 486, column: 15, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7937, file: !355, line: 486, column: 15)
!7976 = !DILocation(line: 486, column: 32, scope: !7975)
!7977 = !DILocation(line: 486, column: 44, scope: !7975)
!7978 = !DILocation(line: 486, column: 42, scope: !7975)
!7979 = !DILocation(line: 486, column: 30, scope: !7975)
!7980 = !DILocation(line: 486, column: 15, scope: !7937)
!7981 = !DILocation(line: 488, column: 19, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7983, file: !355, line: 488, column: 19)
!7983 = distinct !DILexicalBlock(scope: !7975, file: !355, line: 487, column: 13)
!7984 = !DILocation(line: 488, column: 36, scope: !7982)
!7985 = !DILocation(line: 488, column: 34, scope: !7982)
!7986 = !DILocation(line: 488, column: 19, scope: !7983)
!7987 = !DILocation(line: 489, column: 29, scope: !7982)
!7988 = !DILocation(line: 489, column: 27, scope: !7982)
!7989 = !DILocation(line: 489, column: 17, scope: !7982)
!7990 = !DILocation(line: 490, column: 25, scope: !7983)
!7991 = !DILocation(line: 490, column: 42, scope: !7983)
!7992 = !DILocation(line: 490, column: 40, scope: !7983)
!7993 = !DILocation(line: 490, column: 23, scope: !7983)
!7994 = !DILocation(line: 491, column: 13, scope: !7983)
!7995 = !DILocation(line: 493, column: 27, scope: !7937)
!7996 = !DILocation(line: 493, column: 39, scope: !7937)
!7997 = !DILocation(line: 493, column: 37, scope: !7937)
!7998 = !DILocation(line: 493, column: 56, scope: !7937)
!7999 = !DILocation(line: 493, column: 54, scope: !7937)
!8000 = !DILocation(line: 493, column: 25, scope: !7937)
!8001 = !DILocation(line: 495, column: 29, scope: !7937)
!8002 = !DILocation(line: 497, column: 15, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7937, file: !355, line: 497, column: 15)
!8004 = !DILocation(line: 497, column: 15, scope: !7937)
!8005 = !DILocation(line: 499, column: 26, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8007, file: !355, line: 499, column: 19)
!8007 = distinct !DILexicalBlock(scope: !8003, file: !355, line: 498, column: 13)
!8008 = !DILocation(line: 499, column: 34, scope: !8006)
!8009 = !DILocation(line: 499, column: 19, scope: !8006)
!8010 = !DILocation(line: 499, column: 55, scope: !8006)
!8011 = !DILocation(line: 499, column: 19, scope: !8007)
!8012 = !DILocation(line: 501, column: 29, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !8006, file: !355, line: 500, column: 17)
!8014 = !DILocation(line: 501, column: 36, scope: !8013)
!8015 = !DILocation(line: 501, column: 58, scope: !8013)
!8016 = !DILocation(line: 501, column: 19, scope: !8013)
!8017 = !DILabel(scope: !8013, name: "fail", file: !355, line: 502)
!8018 = !DILocation(line: 502, column: 17, scope: !8013)
!8019 = !DILocation(line: 503, column: 19, scope: !8013)
!8020 = !DILocation(line: 504, column: 19, scope: !8013)
!8021 = !DILocation(line: 507, column: 20, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8007, file: !355, line: 507, column: 19)
!8023 = !DILocation(line: 507, column: 33, scope: !8022)
!8024 = !DILocation(line: 507, column: 36, scope: !8022)
!8025 = !DILocation(line: 507, column: 48, scope: !8022)
!8026 = !DILocation(line: 508, column: 19, scope: !8022)
!8027 = !DILocation(line: 508, column: 24, scope: !8022)
!8028 = !DILocation(line: 508, column: 37, scope: !8022)
!8029 = !DILocation(line: 508, column: 40, scope: !8022)
!8030 = !DILocation(line: 508, column: 52, scope: !8022)
!8031 = !DILocation(line: 507, column: 19, scope: !8007)
!8032 = !DILocation(line: 510, column: 38, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8034, file: !355, line: 510, column: 23)
!8034 = distinct !DILexicalBlock(scope: !8022, file: !355, line: 509, column: 17)
!8035 = !DILocation(line: 510, column: 47, scope: !8033)
!8036 = !DILocation(line: 511, column: 38, scope: !8033)
!8037 = !DILocation(line: 511, column: 50, scope: !8033)
!8038 = !DILocation(line: 512, column: 38, scope: !8033)
!8039 = !DILocation(line: 510, column: 25, scope: !8033)
!8040 = !DILocation(line: 510, column: 23, scope: !8034)
!8041 = !DILocation(line: 513, column: 21, scope: !8033)
!8042 = !DILocation(line: 514, column: 37, scope: !8034)
!8043 = !DILocation(line: 515, column: 17, scope: !8034)
!8044 = !DILocalVariable(name: "nzeros", scope: !8045, file: !355, line: 521, type: !358)
!8045 = distinct !DILexicalBlock(scope: !8022, file: !355, line: 517, column: 17)
!8046 = !DILocation(line: 521, column: 25, scope: !8045)
!8047 = !DILocation(line: 521, column: 34, scope: !8045)
!8048 = !DILocation(line: 522, column: 23, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8045, file: !355, line: 522, column: 23)
!8050 = !DILocation(line: 522, column: 23, scope: !8045)
!8051 = !DILocation(line: 523, column: 30, scope: !8049)
!8052 = !DILocation(line: 523, column: 28, scope: !8049)
!8053 = !DILocation(line: 523, column: 21, scope: !8049)
!8054 = !DILocation(line: 525, column: 38, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8045, file: !355, line: 525, column: 23)
!8056 = !DILocation(line: 525, column: 47, scope: !8055)
!8057 = !DILocation(line: 525, column: 25, scope: !8055)
!8058 = !DILocation(line: 525, column: 23, scope: !8045)
!8059 = !DILocation(line: 527, column: 33, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8055, file: !355, line: 526, column: 21)
!8061 = !DILocation(line: 527, column: 40, scope: !8060)
!8062 = !DILocation(line: 528, column: 30, scope: !8060)
!8063 = !DILocation(line: 527, column: 23, scope: !8060)
!8064 = !DILocation(line: 529, column: 23, scope: !8060)
!8065 = !DILocation(line: 532, column: 30, scope: !8045)
!8066 = !DILocation(line: 532, column: 28, scope: !8045)
!8067 = !DILocation(line: 534, column: 13, scope: !8007)
!8068 = !DILocation(line: 536, column: 28, scope: !7937)
!8069 = !DILocation(line: 536, column: 26, scope: !7937)
!8070 = !DILocalVariable(name: "n_read", scope: !8071, file: !355, line: 553, type: !358)
!8071 = distinct !DILexicalBlock(scope: !8072, file: !355, line: 552, column: 13)
!8072 = distinct !DILexicalBlock(scope: !7937, file: !355, line: 544, column: 15)
!8073 = !DILocation(line: 553, column: 21, scope: !8071)
!8074 = !DILocation(line: 554, column: 28, scope: !8071)
!8075 = !DILocation(line: 555, column: 30, scope: !8071)
!8076 = !DILocation(line: 555, column: 28, scope: !8071)
!8077 = !DILocalVariable(name: "read_hole", scope: !8071, file: !355, line: 556, type: !139)
!8078 = !DILocation(line: 556, column: 20, scope: !8071)
!8079 = !DILocation(line: 558, column: 35, scope: !8080)
!8080 = distinct !DILexicalBlock(scope: !8071, file: !355, line: 558, column: 20)
!8081 = !DILocation(line: 558, column: 43, scope: !8080)
!8082 = !DILocation(line: 558, column: 52, scope: !8080)
!8083 = !DILocation(line: 558, column: 57, scope: !8080)
!8084 = !DILocation(line: 559, column: 35, scope: !8080)
!8085 = !DILocation(line: 559, column: 47, scope: !8080)
!8086 = !DILocation(line: 559, column: 66, scope: !8080)
!8087 = !DILocation(line: 560, column: 41, scope: !8080)
!8088 = !DILocation(line: 560, column: 51, scope: !8080)
!8089 = !DILocation(line: 560, column: 61, scope: !8080)
!8090 = !DILocation(line: 558, column: 22, scope: !8080)
!8091 = !DILocation(line: 558, column: 20, scope: !8071)
!8092 = !DILocation(line: 562, column: 17, scope: !8080)
!8093 = !DILocation(line: 564, column: 26, scope: !8071)
!8094 = !DILocation(line: 564, column: 38, scope: !8071)
!8095 = !DILocation(line: 564, column: 36, scope: !8071)
!8096 = !DILocation(line: 564, column: 24, scope: !8071)
!8097 = !DILocation(line: 565, column: 19, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8071, file: !355, line: 565, column: 19)
!8099 = !DILocation(line: 565, column: 19, scope: !8071)
!8100 = !DILocation(line: 566, column: 37, scope: !8098)
!8101 = !DILocation(line: 566, column: 35, scope: !8098)
!8102 = !DILocation(line: 566, column: 17, scope: !8098)
!8103 = !DILocation(line: 574, column: 15, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !7937, file: !355, line: 574, column: 15)
!8105 = !DILocation(line: 574, column: 27, scope: !8104)
!8106 = !DILocation(line: 574, column: 24, scope: !8104)
!8107 = !DILocation(line: 574, column: 15, scope: !7937)
!8108 = !DILocation(line: 576, column: 20, scope: !8109)
!8109 = distinct !DILexicalBlock(scope: !8104, file: !355, line: 575, column: 13)
!8110 = !DILocation(line: 576, column: 37, scope: !8109)
!8111 = !DILocation(line: 577, column: 15, scope: !8109)
!8112 = !DILocation(line: 579, column: 9, scope: !7937)
!8113 = !DILocation(line: 461, column: 68, scope: !7929)
!8114 = !DILocation(line: 461, column: 7, scope: !7929)
!8115 = distinct !{!8115, !7935, !8116}
!8116 = !DILocation(line: 579, column: 9, scope: !7925)
!8117 = !DILocation(line: 582, column: 7, scope: !7896)
!8118 = !DILocation(line: 584, column: 5, scope: !7896)
!8119 = !DILocation(line: 585, column: 17, scope: !7859)
!8120 = !DILocation(line: 585, column: 10, scope: !7859)
!8121 = distinct !{!8121, !7894, !8122}
!8122 = !DILocation(line: 585, column: 33, scope: !7859)
!8123 = !DILocation(line: 595, column: 8, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !7859, file: !355, line: 595, column: 7)
!8125 = !DILocation(line: 595, column: 19, scope: !8124)
!8126 = !DILocation(line: 595, column: 17, scope: !8124)
!8127 = !DILocation(line: 595, column: 34, scope: !8124)
!8128 = !DILocation(line: 595, column: 37, scope: !8124)
!8129 = !DILocation(line: 596, column: 7, scope: !8124)
!8130 = !DILocation(line: 596, column: 11, scope: !8124)
!8131 = !DILocation(line: 596, column: 23, scope: !8124)
!8132 = !DILocation(line: 595, column: 7, scope: !7859)
!8133 = !DILocation(line: 597, column: 24, scope: !8124)
!8134 = !DILocation(line: 597, column: 33, scope: !8124)
!8135 = !DILocation(line: 597, column: 13, scope: !8124)
!8136 = !DILocation(line: 598, column: 28, scope: !8124)
!8137 = !DILocation(line: 598, column: 37, scope: !8124)
!8138 = !DILocation(line: 598, column: 54, scope: !8124)
!8139 = !DILocation(line: 598, column: 52, scope: !8124)
!8140 = !DILocation(line: 598, column: 15, scope: !8124)
!8141 = !DILocation(line: 600, column: 17, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8124, file: !355, line: 599, column: 5)
!8143 = !DILocation(line: 600, column: 24, scope: !8142)
!8144 = !DILocation(line: 600, column: 50, scope: !8142)
!8145 = !DILocation(line: 600, column: 7, scope: !8142)
!8146 = !DILocation(line: 601, column: 7, scope: !8142)
!8147 = !DILocation(line: 604, column: 7, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !7859, file: !355, line: 604, column: 7)
!8149 = !DILocation(line: 604, column: 19, scope: !8148)
!8150 = !DILocation(line: 604, column: 36, scope: !8148)
!8151 = !DILocation(line: 604, column: 39, scope: !8148)
!8152 = !DILocation(line: 604, column: 50, scope: !8148)
!8153 = !DILocation(line: 604, column: 48, scope: !8148)
!8154 = !DILocation(line: 605, column: 7, scope: !8148)
!8155 = !DILocation(line: 605, column: 22, scope: !8148)
!8156 = !DILocation(line: 605, column: 31, scope: !8148)
!8157 = !DILocation(line: 605, column: 41, scope: !8148)
!8158 = !DILocation(line: 605, column: 58, scope: !8148)
!8159 = !DILocation(line: 605, column: 56, scope: !8148)
!8160 = !DILocation(line: 605, column: 10, scope: !8148)
!8161 = !DILocation(line: 605, column: 68, scope: !8148)
!8162 = !DILocation(line: 604, column: 7, scope: !7859)
!8163 = !DILocation(line: 607, column: 17, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8148, file: !355, line: 606, column: 5)
!8165 = !DILocation(line: 607, column: 24, scope: !8164)
!8166 = !DILocation(line: 607, column: 52, scope: !8164)
!8167 = !DILocation(line: 607, column: 7, scope: !8164)
!8168 = !DILocation(line: 608, column: 7, scope: !8164)
!8169 = !DILocation(line: 611, column: 3, scope: !7859)
!8170 = !DILocation(line: 612, column: 1, scope: !7859)
!8171 = distinct !DISubprogram(name: "sparse_copy", scope: !355, file: !355, line: 260, type: !554, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8172 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8171, file: !355, line: 260, type: !5)
!8173 = !DILocation(line: 260, column: 18, scope: !8171)
!8174 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8171, file: !355, line: 260, type: !5)
!8175 = !DILocation(line: 260, column: 30, scope: !8171)
!8176 = !DILocalVariable(name: "buf", arg: 3, scope: !8171, file: !355, line: 260, type: !7)
!8177 = !DILocation(line: 260, column: 45, scope: !8171)
!8178 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8171, file: !355, line: 260, type: !52)
!8179 = !DILocation(line: 260, column: 57, scope: !8171)
!8180 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8171, file: !355, line: 261, type: !52)
!8181 = !DILocation(line: 261, column: 21, scope: !8171)
!8182 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !8171, file: !355, line: 261, type: !139)
!8183 = !DILocation(line: 261, column: 37, scope: !8171)
!8184 = !DILocalVariable(name: "src_name", arg: 7, scope: !8171, file: !355, line: 262, type: !177)
!8185 = !DILocation(line: 262, column: 26, scope: !8171)
!8186 = !DILocalVariable(name: "dst_name", arg: 8, scope: !8171, file: !355, line: 262, type: !177)
!8187 = !DILocation(line: 262, column: 48, scope: !8171)
!8188 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !8171, file: !355, line: 263, type: !556)
!8189 = !DILocation(line: 263, column: 24, scope: !8171)
!8190 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !8171, file: !355, line: 263, type: !558)
!8191 = !DILocation(line: 263, column: 43, scope: !8171)
!8192 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !8171, file: !355, line: 264, type: !412)
!8193 = !DILocation(line: 264, column: 20, scope: !8171)
!8194 = !DILocation(line: 266, column: 4, scope: !8171)
!8195 = !DILocation(line: 266, column: 25, scope: !8171)
!8196 = !DILocation(line: 267, column: 4, scope: !8171)
!8197 = !DILocation(line: 267, column: 17, scope: !8171)
!8198 = !DILocalVariable(name: "make_hole", scope: !8171, file: !355, line: 268, type: !139)
!8199 = !DILocation(line: 268, column: 8, scope: !8171)
!8200 = !DILocalVariable(name: "psize", scope: !8171, file: !355, line: 269, type: !358)
!8201 = !DILocation(line: 269, column: 9, scope: !8171)
!8202 = !DILocation(line: 271, column: 3, scope: !8171)
!8203 = !DILocation(line: 271, column: 10, scope: !8171)
!8204 = !DILocalVariable(name: "n_read", scope: !8205, file: !355, line: 273, type: !559)
!8205 = distinct !DILexicalBlock(scope: !8171, file: !355, line: 272, column: 5)
!8206 = !DILocation(line: 273, column: 15, scope: !8205)
!8207 = !DILocation(line: 273, column: 30, scope: !8205)
!8208 = !DILocation(line: 273, column: 38, scope: !8205)
!8209 = !DILocation(line: 273, column: 43, scope: !8205)
!8210 = !DILocation(line: 273, column: 24, scope: !8205)
!8211 = !DILocation(line: 274, column: 11, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8205, file: !355, line: 274, column: 11)
!8213 = !DILocation(line: 274, column: 18, scope: !8212)
!8214 = !DILocation(line: 274, column: 11, scope: !8205)
!8215 = !DILocation(line: 276, column: 15, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8217, file: !355, line: 276, column: 15)
!8217 = distinct !DILexicalBlock(scope: !8212, file: !355, line: 275, column: 9)
!8218 = !DILocation(line: 276, column: 21, scope: !8216)
!8219 = !DILocation(line: 276, column: 15, scope: !8217)
!8220 = !DILocation(line: 277, column: 13, scope: !8216)
!8221 = distinct !{!8221, !8202, !8222}
!8222 = !DILocation(line: 357, column: 5, scope: !8171)
!8223 = !DILocation(line: 278, column: 21, scope: !8217)
!8224 = !DILocation(line: 278, column: 28, scope: !8217)
!8225 = !DILocation(line: 278, column: 51, scope: !8217)
!8226 = !DILocation(line: 278, column: 11, scope: !8217)
!8227 = !DILocation(line: 279, column: 11, scope: !8217)
!8228 = !DILocation(line: 281, column: 11, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8205, file: !355, line: 281, column: 11)
!8230 = !DILocation(line: 281, column: 18, scope: !8229)
!8231 = !DILocation(line: 281, column: 11, scope: !8205)
!8232 = !DILocation(line: 282, column: 9, scope: !8229)
!8233 = !DILocation(line: 283, column: 21, scope: !8205)
!8234 = !DILocation(line: 283, column: 18, scope: !8205)
!8235 = !DILocation(line: 284, column: 24, scope: !8205)
!8236 = !DILocation(line: 284, column: 8, scope: !8205)
!8237 = !DILocation(line: 284, column: 21, scope: !8205)
!8238 = !DILocalVariable(name: "csize", scope: !8205, file: !355, line: 287, type: !52)
!8239 = !DILocation(line: 287, column: 14, scope: !8205)
!8240 = !DILocation(line: 287, column: 22, scope: !8205)
!8241 = !DILocation(line: 287, column: 34, scope: !8205)
!8242 = !DILocation(line: 287, column: 46, scope: !8205)
!8243 = !DILocalVariable(name: "cbuf", scope: !8205, file: !355, line: 288, type: !7)
!8244 = !DILocation(line: 288, column: 13, scope: !8205)
!8245 = !DILocation(line: 288, column: 20, scope: !8205)
!8246 = !DILocalVariable(name: "pbuf", scope: !8205, file: !355, line: 289, type: !7)
!8247 = !DILocation(line: 289, column: 13, scope: !8205)
!8248 = !DILocation(line: 289, column: 20, scope: !8205)
!8249 = !DILocation(line: 291, column: 7, scope: !8205)
!8250 = !DILocation(line: 291, column: 14, scope: !8205)
!8251 = !DILocalVariable(name: "prev_hole", scope: !8252, file: !355, line: 293, type: !139)
!8252 = distinct !DILexicalBlock(scope: !8205, file: !355, line: 292, column: 9)
!8253 = !DILocation(line: 293, column: 16, scope: !8252)
!8254 = !DILocation(line: 293, column: 28, scope: !8252)
!8255 = !DILocation(line: 294, column: 19, scope: !8252)
!8256 = !DILocation(line: 294, column: 17, scope: !8252)
!8257 = !DILocation(line: 296, column: 15, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8252, file: !355, line: 296, column: 15)
!8259 = !DILocation(line: 296, column: 25, scope: !8258)
!8260 = !DILocation(line: 296, column: 28, scope: !8258)
!8261 = !DILocation(line: 296, column: 15, scope: !8252)
!8262 = !DILocation(line: 297, column: 33, scope: !8258)
!8263 = !DILocation(line: 297, column: 39, scope: !8258)
!8264 = !DILocation(line: 297, column: 25, scope: !8258)
!8265 = !DILocation(line: 297, column: 23, scope: !8258)
!8266 = !DILocation(line: 297, column: 13, scope: !8258)
!8267 = !DILocalVariable(name: "transition", scope: !8252, file: !355, line: 299, type: !139)
!8268 = !DILocation(line: 299, column: 16, scope: !8252)
!8269 = !DILocation(line: 299, column: 30, scope: !8252)
!8270 = !DILocation(line: 299, column: 43, scope: !8252)
!8271 = !DILocation(line: 299, column: 40, scope: !8252)
!8272 = !DILocation(line: 299, column: 54, scope: !8252)
!8273 = !DILocation(line: 299, column: 57, scope: !8252)
!8274 = !DILocation(line: 0, scope: !8252)
!8275 = !DILocalVariable(name: "last_chunk", scope: !8252, file: !355, line: 300, type: !139)
!8276 = !DILocation(line: 300, column: 16, scope: !8252)
!8277 = !DILocation(line: 300, column: 30, scope: !8252)
!8278 = !DILocation(line: 300, column: 40, scope: !8252)
!8279 = !DILocation(line: 300, column: 37, scope: !8252)
!8280 = !DILocation(line: 300, column: 46, scope: !8252)
!8281 = !DILocation(line: 300, column: 51, scope: !8252)
!8282 = !DILocation(line: 300, column: 62, scope: !8252)
!8283 = !DILocation(line: 300, column: 67, scope: !8252)
!8284 = !DILocation(line: 300, column: 65, scope: !8252)
!8285 = !DILocation(line: 302, column: 15, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8252, file: !355, line: 302, column: 15)
!8287 = !DILocation(line: 302, column: 26, scope: !8286)
!8288 = !DILocation(line: 302, column: 29, scope: !8286)
!8289 = !DILocation(line: 302, column: 15, scope: !8252)
!8290 = !DILocation(line: 304, column: 21, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8292, file: !355, line: 304, column: 19)
!8292 = distinct !DILexicalBlock(scope: !8286, file: !355, line: 303, column: 13)
!8293 = !DILocation(line: 304, column: 19, scope: !8292)
!8294 = !DILocation(line: 305, column: 26, scope: !8291)
!8295 = !DILocation(line: 305, column: 23, scope: !8291)
!8296 = !DILocation(line: 305, column: 17, scope: !8291)
!8297 = !DILocation(line: 307, column: 21, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8292, file: !355, line: 307, column: 19)
!8299 = !DILocation(line: 307, column: 19, scope: !8292)
!8300 = !DILocation(line: 309, column: 35, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8302, file: !355, line: 309, column: 23)
!8302 = distinct !DILexicalBlock(scope: !8298, file: !355, line: 308, column: 17)
!8303 = !DILocation(line: 309, column: 44, scope: !8301)
!8304 = !DILocation(line: 309, column: 50, scope: !8301)
!8305 = !DILocation(line: 309, column: 23, scope: !8301)
!8306 = !DILocation(line: 309, column: 60, scope: !8301)
!8307 = !DILocation(line: 309, column: 57, scope: !8301)
!8308 = !DILocation(line: 309, column: 23, scope: !8302)
!8309 = !DILocation(line: 311, column: 33, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8301, file: !355, line: 310, column: 21)
!8311 = !DILocation(line: 311, column: 40, scope: !8310)
!8312 = !DILocation(line: 312, column: 30, scope: !8310)
!8313 = !DILocation(line: 311, column: 23, scope: !8310)
!8314 = !DILocation(line: 313, column: 23, scope: !8310)
!8315 = !DILocation(line: 315, column: 17, scope: !8302)
!8316 = !DILocation(line: 318, column: 38, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8318, file: !355, line: 318, column: 23)
!8318 = distinct !DILexicalBlock(scope: !8298, file: !355, line: 317, column: 17)
!8319 = !DILocation(line: 318, column: 47, scope: !8317)
!8320 = !DILocation(line: 318, column: 57, scope: !8317)
!8321 = !DILocation(line: 318, column: 70, scope: !8317)
!8322 = !DILocation(line: 318, column: 25, scope: !8317)
!8323 = !DILocation(line: 318, column: 23, scope: !8318)
!8324 = !DILocation(line: 319, column: 21, scope: !8317)
!8325 = !DILocation(line: 322, column: 22, scope: !8292)
!8326 = !DILocation(line: 322, column: 20, scope: !8292)
!8327 = !DILocation(line: 323, column: 23, scope: !8292)
!8328 = !DILocation(line: 323, column: 21, scope: !8292)
!8329 = !DILocation(line: 325, column: 19, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8292, file: !355, line: 325, column: 19)
!8331 = !DILocation(line: 325, column: 19, scope: !8292)
!8332 = !DILocation(line: 327, column: 25, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8334, file: !355, line: 327, column: 23)
!8334 = distinct !DILexicalBlock(scope: !8330, file: !355, line: 326, column: 17)
!8335 = !DILocation(line: 327, column: 23, scope: !8334)
!8336 = !DILocation(line: 328, column: 28, scope: !8333)
!8337 = !DILocation(line: 328, column: 21, scope: !8333)
!8338 = !DILocation(line: 330, column: 23, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8334, file: !355, line: 330, column: 23)
!8340 = !DILocation(line: 330, column: 23, scope: !8334)
!8341 = !DILocation(line: 331, column: 27, scope: !8339)
!8342 = !DILocation(line: 331, column: 21, scope: !8339)
!8343 = !DILocation(line: 333, column: 27, scope: !8339)
!8344 = !DILocation(line: 334, column: 17, scope: !8334)
!8345 = !DILocation(line: 335, column: 13, scope: !8292)
!8346 = !DILocation(line: 338, column: 19, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8348, file: !355, line: 338, column: 19)
!8348 = distinct !DILexicalBlock(scope: !8286, file: !355, line: 337, column: 13)
!8349 = !DILocation(line: 338, column: 40, scope: !8347)
!8350 = !DILocation(line: 338, column: 38, scope: !8347)
!8351 = !DILocation(line: 338, column: 25, scope: !8347)
!8352 = !DILocation(line: 338, column: 19, scope: !8348)
!8353 = !DILocation(line: 339, column: 26, scope: !8347)
!8354 = !DILocation(line: 339, column: 23, scope: !8347)
!8355 = !DILocation(line: 339, column: 17, scope: !8347)
!8356 = !DILocation(line: 342, column: 32, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8347, file: !355, line: 341, column: 17)
!8358 = !DILocation(line: 342, column: 58, scope: !8357)
!8359 = !DILocation(line: 342, column: 19, scope: !8357)
!8360 = !DILocation(line: 343, column: 19, scope: !8357)
!8361 = !DILocation(line: 347, column: 21, scope: !8252)
!8362 = !DILocation(line: 347, column: 18, scope: !8252)
!8363 = !DILocation(line: 348, column: 19, scope: !8252)
!8364 = !DILocation(line: 348, column: 16, scope: !8252)
!8365 = distinct !{!8365, !8249, !8366}
!8366 = !DILocation(line: 349, column: 9, scope: !8205)
!8367 = !DILocation(line: 351, column: 31, scope: !8205)
!8368 = !DILocation(line: 351, column: 8, scope: !8205)
!8369 = !DILocation(line: 351, column: 29, scope: !8205)
!8370 = !DILocation(line: 361, column: 7, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8171, file: !355, line: 361, column: 7)
!8372 = !DILocation(line: 361, column: 17, scope: !8371)
!8373 = !DILocation(line: 361, column: 35, scope: !8371)
!8374 = !DILocation(line: 361, column: 44, scope: !8371)
!8375 = !DILocation(line: 361, column: 54, scope: !8371)
!8376 = !DILocation(line: 361, column: 67, scope: !8371)
!8377 = !DILocation(line: 361, column: 22, scope: !8371)
!8378 = !DILocation(line: 361, column: 7, scope: !8171)
!8379 = !DILocation(line: 362, column: 5, scope: !8371)
!8380 = !DILocation(line: 364, column: 5, scope: !8371)
!8381 = !DILocation(line: 365, column: 1, scope: !8171)
!8382 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !355, file: !355, line: 1013, type: !566, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8383 = !DILocalVariable(name: "desc", arg: 1, scope: !8382, file: !355, line: 1013, type: !5)
!8384 = !DILocation(line: 1013, column: 23, scope: !8382)
!8385 = !DILocalVariable(name: "name", arg: 2, scope: !8382, file: !355, line: 1013, type: !177)
!8386 = !DILocation(line: 1013, column: 41, scope: !8382)
!8387 = !DILocalVariable(name: "mode", arg: 3, scope: !8382, file: !355, line: 1013, type: !136)
!8388 = !DILocation(line: 1013, column: 54, scope: !8382)
!8389 = !DILocation(line: 1016, column: 12, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8382, file: !355, line: 1016, column: 7)
!8391 = !DILocation(line: 1016, column: 9, scope: !8390)
!8392 = !DILocation(line: 1016, column: 7, scope: !8382)
!8393 = !DILocation(line: 1017, column: 20, scope: !8390)
!8394 = !DILocation(line: 1017, column: 26, scope: !8390)
!8395 = !DILocation(line: 1017, column: 12, scope: !8390)
!8396 = !DILocation(line: 1017, column: 5, scope: !8390)
!8397 = !DILocation(line: 1019, column: 18, scope: !8382)
!8398 = !DILocation(line: 1019, column: 24, scope: !8382)
!8399 = !DILocation(line: 1019, column: 10, scope: !8382)
!8400 = !DILocation(line: 1019, column: 3, scope: !8382)
!8401 = !DILocation(line: 1020, column: 1, scope: !8382)
!8402 = distinct !DISubprogram(name: "is_nul", scope: !204, file: !204, line: 509, type: !561, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8403 = !DILocalVariable(name: "buf", arg: 1, scope: !8402, file: !204, line: 509, type: !525)
!8404 = !DILocation(line: 509, column: 21, scope: !8402)
!8405 = !DILocalVariable(name: "length", arg: 2, scope: !8402, file: !204, line: 509, type: !52)
!8406 = !DILocation(line: 509, column: 33, scope: !8402)
!8407 = !DILocalVariable(name: "p", scope: !8402, file: !204, line: 511, type: !563)
!8408 = !DILocation(line: 511, column: 24, scope: !8402)
!8409 = !DILocation(line: 511, column: 28, scope: !8402)
!8410 = !DILocalVariable(name: "word", scope: !8402, file: !204, line: 521, type: !565)
!8411 = !DILocation(line: 521, column: 17, scope: !8402)
!8412 = !DILocation(line: 524, column: 9, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8402, file: !204, line: 524, column: 7)
!8414 = !DILocation(line: 524, column: 7, scope: !8402)
!8415 = !DILocation(line: 525, column: 7, scope: !8413)
!8416 = !DILocation(line: 528, column: 3, scope: !8402)
!8417 = !DILocation(line: 528, column: 10, scope: !8402)
!8418 = !DILocation(line: 530, column: 12, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8420, file: !204, line: 530, column: 11)
!8420 = distinct !DILexicalBlock(scope: !8402, file: !204, line: 529, column: 5)
!8421 = !DILocation(line: 530, column: 11, scope: !8419)
!8422 = !DILocation(line: 530, column: 11, scope: !8420)
!8423 = !DILocation(line: 531, column: 9, scope: !8419)
!8424 = !DILocation(line: 532, column: 8, scope: !8420)
!8425 = !DILocation(line: 533, column: 13, scope: !8420)
!8426 = !DILocation(line: 534, column: 13, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8420, file: !204, line: 534, column: 11)
!8428 = !DILocation(line: 534, column: 11, scope: !8420)
!8429 = !DILocation(line: 535, column: 9, scope: !8427)
!8430 = distinct !{!8430, !8416, !8431}
!8431 = !DILocation(line: 536, column: 4, scope: !8402)
!8432 = !DILocation(line: 539, column: 3, scope: !8402)
!8433 = !DILocation(line: 541, column: 22, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8435, file: !204, line: 540, column: 5)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !204, line: 539, column: 3)
!8436 = distinct !DILexicalBlock(scope: !8402, file: !204, line: 539, column: 3)
!8437 = !DILocation(line: 541, column: 7, scope: !8434)
!8438 = !DILocation(line: 542, column: 11, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8434, file: !204, line: 542, column: 11)
!8440 = !DILocation(line: 542, column: 11, scope: !8434)
!8441 = !DILocation(line: 543, column: 9, scope: !8439)
!8442 = !DILocation(line: 544, column: 9, scope: !8434)
!8443 = !DILocation(line: 545, column: 14, scope: !8434)
!8444 = !DILocation(line: 546, column: 13, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8434, file: !204, line: 546, column: 11)
!8446 = !DILocation(line: 546, column: 11, scope: !8434)
!8447 = !DILocation(line: 547, column: 9, scope: !8445)
!8448 = !DILocation(line: 548, column: 11, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8434, file: !204, line: 548, column: 11)
!8450 = !DILocation(line: 548, column: 34, scope: !8449)
!8451 = !DILocation(line: 548, column: 11, scope: !8434)
!8452 = !DILocation(line: 549, column: 9, scope: !8449)
!8453 = !DILocation(line: 539, column: 3, scope: !8435)
!8454 = distinct !{!8454, !8455, !8456}
!8455 = !DILocation(line: 539, column: 3, scope: !8436)
!8456 = !DILocation(line: 550, column: 4, scope: !8436)
!8457 = !DILocation(line: 553, column: 19, scope: !8402)
!8458 = !DILocation(line: 553, column: 24, scope: !8402)
!8459 = !DILocation(line: 553, column: 27, scope: !8402)
!8460 = !DILocation(line: 553, column: 11, scope: !8402)
!8461 = !DILocation(line: 553, column: 35, scope: !8402)
!8462 = !DILocation(line: 553, column: 4, scope: !8402)
!8463 = !DILocation(line: 554, column: 1, scope: !8402)
!8464 = distinct !DISubprogram(name: "create_hole", scope: !355, file: !355, line: 224, type: !548, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8465 = !DILocalVariable(name: "fd", arg: 1, scope: !8464, file: !355, line: 224, type: !5)
!8466 = !DILocation(line: 224, column: 18, scope: !8464)
!8467 = !DILocalVariable(name: "name", arg: 2, scope: !8464, file: !355, line: 224, type: !177)
!8468 = !DILocation(line: 224, column: 34, scope: !8464)
!8469 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8464, file: !355, line: 224, type: !139)
!8470 = !DILocation(line: 224, column: 45, scope: !8464)
!8471 = !DILocalVariable(name: "size", arg: 4, scope: !8464, file: !355, line: 224, type: !358)
!8472 = !DILocation(line: 224, column: 64, scope: !8464)
!8473 = !DILocalVariable(name: "file_end", scope: !8464, file: !355, line: 226, type: !358)
!8474 = !DILocation(line: 226, column: 9, scope: !8464)
!8475 = !DILocation(line: 226, column: 27, scope: !8464)
!8476 = !DILocation(line: 226, column: 31, scope: !8464)
!8477 = !DILocation(line: 226, column: 20, scope: !8464)
!8478 = !DILocation(line: 228, column: 7, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8464, file: !355, line: 228, column: 7)
!8480 = !DILocation(line: 228, column: 16, scope: !8479)
!8481 = !DILocation(line: 228, column: 7, scope: !8464)
!8482 = !DILocation(line: 230, column: 17, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8479, file: !355, line: 229, column: 5)
!8484 = !DILocation(line: 230, column: 24, scope: !8483)
!8485 = !DILocation(line: 230, column: 46, scope: !8483)
!8486 = !DILocation(line: 230, column: 7, scope: !8483)
!8487 = !DILocation(line: 231, column: 7, scope: !8483)
!8488 = !DILocation(line: 238, column: 7, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8464, file: !355, line: 238, column: 7)
!8490 = !DILocation(line: 238, column: 19, scope: !8489)
!8491 = !DILocation(line: 238, column: 34, scope: !8489)
!8492 = !DILocation(line: 238, column: 38, scope: !8489)
!8493 = !DILocation(line: 238, column: 49, scope: !8489)
!8494 = !DILocation(line: 238, column: 47, scope: !8489)
!8495 = !DILocation(line: 238, column: 55, scope: !8489)
!8496 = !DILocation(line: 238, column: 22, scope: !8489)
!8497 = !DILocation(line: 238, column: 61, scope: !8489)
!8498 = !DILocation(line: 238, column: 7, scope: !8464)
!8499 = !DILocation(line: 240, column: 17, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8489, file: !355, line: 239, column: 5)
!8501 = !DILocation(line: 240, column: 24, scope: !8500)
!8502 = !DILocation(line: 240, column: 52, scope: !8500)
!8503 = !DILocation(line: 240, column: 7, scope: !8500)
!8504 = !DILocation(line: 241, column: 7, scope: !8500)
!8505 = !DILocation(line: 244, column: 3, scope: !8464)
!8506 = !DILocation(line: 245, column: 1, scope: !8464)
!8507 = distinct !DISubprogram(name: "punch_hole", scope: !355, file: !355, line: 205, type: !552, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8508 = !DILocalVariable(name: "fd", arg: 1, scope: !8507, file: !355, line: 205, type: !5)
!8509 = !DILocation(line: 205, column: 17, scope: !8507)
!8510 = !DILocalVariable(name: "offset", arg: 2, scope: !8507, file: !355, line: 205, type: !358)
!8511 = !DILocation(line: 205, column: 27, scope: !8507)
!8512 = !DILocalVariable(name: "length", arg: 3, scope: !8507, file: !355, line: 205, type: !358)
!8513 = !DILocation(line: 205, column: 41, scope: !8507)
!8514 = !DILocalVariable(name: "ret", scope: !8507, file: !355, line: 207, type: !5)
!8515 = !DILocation(line: 207, column: 7, scope: !8507)
!8516 = !DILocation(line: 211, column: 20, scope: !8507)
!8517 = !DILocation(line: 212, column: 20, scope: !8507)
!8518 = !DILocation(line: 212, column: 28, scope: !8507)
!8519 = !DILocation(line: 211, column: 9, scope: !8507)
!8520 = !DILocation(line: 211, column: 7, scope: !8507)
!8521 = !DILocation(line: 213, column: 7, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8507, file: !355, line: 213, column: 7)
!8523 = !DILocation(line: 213, column: 11, scope: !8522)
!8524 = !DILocation(line: 213, column: 15, scope: !8522)
!8525 = !DILocation(line: 213, column: 31, scope: !8522)
!8526 = !DILocation(line: 213, column: 19, scope: !8522)
!8527 = !DILocation(line: 213, column: 38, scope: !8522)
!8528 = !DILocation(line: 213, column: 41, scope: !8522)
!8529 = !DILocation(line: 213, column: 47, scope: !8522)
!8530 = !DILocation(line: 213, column: 7, scope: !8507)
!8531 = !DILocation(line: 214, column: 9, scope: !8522)
!8532 = !DILocation(line: 214, column: 5, scope: !8522)
!8533 = !DILocation(line: 217, column: 10, scope: !8507)
!8534 = !DILocation(line: 217, column: 3, scope: !8507)
!8535 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !204, file: !204, line: 762, type: !253, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8536 = !DILocalVariable(name: "err", arg: 1, scope: !8535, file: !204, line: 762, type: !5)
!8537 = !DILocation(line: 762, column: 17, scope: !8535)
!8538 = !DILocation(line: 764, column: 10, scope: !8535)
!8539 = !DILocation(line: 764, column: 14, scope: !8535)
!8540 = !DILocation(line: 764, column: 28, scope: !8535)
!8541 = !DILocation(line: 764, column: 3, scope: !8535)
!8542 = distinct !DISubprogram(name: "extent_scan_free", scope: !531, file: !531, line: 66, type: !536, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8543 = !DILocalVariable(name: "scan", arg: 1, scope: !8542, file: !531, line: 66, type: !538)
!8544 = !DILocation(line: 66, column: 39, scope: !8542)
!8545 = !DILocation(line: 68, column: 9, scope: !8542)
!8546 = !DILocation(line: 68, column: 15, scope: !8542)
!8547 = !DILocation(line: 68, column: 3, scope: !8542)
!8548 = !DILocation(line: 69, column: 3, scope: !8542)
!8549 = !DILocation(line: 69, column: 9, scope: !8542)
!8550 = !DILocation(line: 69, column: 18, scope: !8542)
!8551 = !DILocation(line: 70, column: 3, scope: !8542)
!8552 = !DILocation(line: 70, column: 9, scope: !8542)
!8553 = !DILocation(line: 70, column: 18, scope: !8542)
!8554 = !DILocation(line: 71, column: 1, scope: !8542)
!8555 = !DILocalVariable(name: "fd", arg: 1, scope: !586, file: !355, line: 385, type: !5)
!8556 = !DILocation(line: 385, column: 18, scope: !586)
!8557 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !586, file: !355, line: 385, type: !358)
!8558 = !DILocation(line: 385, column: 28, scope: !586)
!8559 = !DILocation(line: 393, column: 7, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !586, file: !355, line: 393, column: 7)
!8561 = !DILocation(line: 393, column: 13, scope: !8560)
!8562 = !DILocation(line: 393, column: 7, scope: !586)
!8563 = !DILocation(line: 396, column: 23, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8560, file: !355, line: 394, column: 5)
!8565 = !DILocation(line: 396, column: 15, scope: !8564)
!8566 = !DILocation(line: 396, column: 13, scope: !8564)
!8567 = !DILocation(line: 397, column: 11, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8564, file: !355, line: 397, column: 11)
!8569 = !DILocation(line: 397, column: 17, scope: !8568)
!8570 = !DILocation(line: 397, column: 11, scope: !8564)
!8571 = !DILocation(line: 399, column: 17, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8568, file: !355, line: 398, column: 9)
!8573 = !DILocation(line: 400, column: 14, scope: !8572)
!8574 = !DILocation(line: 401, column: 9, scope: !8572)
!8575 = !DILocation(line: 402, column: 5, scope: !8564)
!8576 = !DILocation(line: 404, column: 3, scope: !586)
!8577 = !DILocation(line: 404, column: 10, scope: !586)
!8578 = !DILocalVariable(name: "n", scope: !8579, file: !355, line: 406, type: !52)
!8579 = distinct !DILexicalBlock(scope: !586, file: !355, line: 405, column: 5)
!8580 = !DILocation(line: 406, column: 14, scope: !8579)
!8581 = !DILocation(line: 406, column: 18, scope: !8579)
!8582 = !DILocation(line: 407, column: 24, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8579, file: !355, line: 407, column: 11)
!8584 = !DILocation(line: 407, column: 28, scope: !8583)
!8585 = !DILocation(line: 407, column: 35, scope: !8583)
!8586 = !DILocation(line: 407, column: 12, scope: !8583)
!8587 = !DILocation(line: 407, column: 42, scope: !8583)
!8588 = !DILocation(line: 407, column: 39, scope: !8583)
!8589 = !DILocation(line: 407, column: 11, scope: !8579)
!8590 = !DILocation(line: 408, column: 9, scope: !8583)
!8591 = !DILocation(line: 409, column: 18, scope: !8579)
!8592 = !DILocation(line: 409, column: 15, scope: !8579)
!8593 = distinct !{!8593, !8576, !8594}
!8594 = !DILocation(line: 410, column: 5, scope: !586)
!8595 = !DILocation(line: 412, column: 3, scope: !586)
!8596 = !DILocation(line: 413, column: 1, scope: !586)
!8597 = distinct !DISubprogram(name: "writable_destination", scope: !355, file: !355, line: 1702, type: !462, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8598 = !DILocalVariable(name: "file", arg: 1, scope: !8597, file: !355, line: 1702, type: !177)
!8599 = !DILocation(line: 1702, column: 35, scope: !8597)
!8600 = !DILocalVariable(name: "mode", arg: 2, scope: !8597, file: !355, line: 1702, type: !136)
!8601 = !DILocation(line: 1702, column: 48, scope: !8597)
!8602 = !DILocation(line: 1704, column: 11, scope: !8597)
!8603 = !DILocation(line: 1705, column: 11, scope: !8597)
!8604 = !DILocation(line: 1705, column: 14, scope: !8597)
!8605 = !DILocation(line: 1706, column: 11, scope: !8597)
!8606 = !DILocation(line: 1706, column: 26, scope: !8597)
!8607 = !DILocation(line: 1706, column: 14, scope: !8597)
!8608 = !DILocation(line: 1706, column: 38, scope: !8597)
!8609 = !DILocation(line: 1704, column: 3, scope: !8597)
!8610 = distinct !DISubprogram(name: "cp_options_default", scope: !355, file: !355, line: 3035, type: !407, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !354, retainedNodes: !206)
!8611 = !DILocalVariable(name: "x", arg: 1, scope: !8610, file: !355, line: 3035, type: !409)
!8612 = !DILocation(line: 3035, column: 40, scope: !8610)
!8613 = !DILocation(line: 3037, column: 11, scope: !8610)
!8614 = !DILocation(line: 3037, column: 3, scope: !8610)
!8615 = !DILocation(line: 3051, column: 48, scope: !8610)
!8616 = !DILocation(line: 3051, column: 59, scope: !8610)
!8617 = !DILocation(line: 3051, column: 25, scope: !8610)
!8618 = !DILocation(line: 3051, column: 28, scope: !8610)
!8619 = !DILocation(line: 3051, column: 45, scope: !8610)
!8620 = !DILocation(line: 3051, column: 3, scope: !8610)
!8621 = !DILocation(line: 3051, column: 6, scope: !8610)
!8622 = !DILocation(line: 3051, column: 23, scope: !8610)
!8623 = !DILocation(line: 3053, column: 3, scope: !8610)
!8624 = !DILocation(line: 3053, column: 6, scope: !8610)
!8625 = !DILocation(line: 3053, column: 19, scope: !8610)
!8626 = !DILocation(line: 3054, column: 1, scope: !8610)
!8627 = distinct !DISubprogram(name: "forget_created", scope: !597, file: !597, line: 82, type: !599, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8628 = !DILocalVariable(name: "ino", arg: 1, scope: !8627, file: !597, line: 82, type: !447)
!8629 = !DILocation(line: 82, column: 23, scope: !8627)
!8630 = !DILocalVariable(name: "dev", arg: 2, scope: !8627, file: !597, line: 82, type: !449)
!8631 = !DILocation(line: 82, column: 34, scope: !8627)
!8632 = !DILocalVariable(name: "probe", scope: !8627, file: !597, line: 84, type: !602)
!8633 = !DILocation(line: 84, column: 22, scope: !8627)
!8634 = !DILocalVariable(name: "ent", scope: !8627, file: !597, line: 85, type: !601)
!8635 = !DILocation(line: 85, column: 23, scope: !8627)
!8636 = !DILocation(line: 87, column: 18, scope: !8627)
!8637 = !DILocation(line: 87, column: 9, scope: !8627)
!8638 = !DILocation(line: 87, column: 16, scope: !8627)
!8639 = !{!8640, !2936, i64 0}
!8640 = !{!"Src_to_dest", !2936, i64 0, !2936, i64 8, !2669, i64 16}
!8641 = !DILocation(line: 88, column: 18, scope: !8627)
!8642 = !DILocation(line: 88, column: 9, scope: !8627)
!8643 = !DILocation(line: 88, column: 16, scope: !8627)
!8644 = !{!8640, !2936, i64 8}
!8645 = !DILocation(line: 89, column: 9, scope: !8627)
!8646 = !DILocation(line: 89, column: 14, scope: !8627)
!8647 = !{!8640, !2669, i64 16}
!8648 = !DILocation(line: 91, column: 22, scope: !8627)
!8649 = !DILocation(line: 91, column: 35, scope: !8627)
!8650 = !DILocation(line: 91, column: 9, scope: !8627)
!8651 = !DILocation(line: 91, column: 7, scope: !8627)
!8652 = !DILocation(line: 92, column: 7, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8627, file: !597, line: 92, column: 7)
!8654 = !DILocation(line: 92, column: 7, scope: !8627)
!8655 = !DILocation(line: 93, column: 23, scope: !8653)
!8656 = !DILocation(line: 93, column: 5, scope: !8653)
!8657 = !DILocation(line: 94, column: 1, scope: !8627)
!8658 = distinct !DISubprogram(name: "src_to_dest_free", scope: !597, file: !597, line: 72, type: !613, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8659 = !DILocalVariable(name: "x", arg: 1, scope: !8658, file: !597, line: 72, type: !47)
!8660 = !DILocation(line: 72, column: 25, scope: !8658)
!8661 = !DILocalVariable(name: "a", scope: !8658, file: !597, line: 74, type: !601)
!8662 = !DILocation(line: 74, column: 23, scope: !8658)
!8663 = !DILocation(line: 74, column: 27, scope: !8658)
!8664 = !DILocation(line: 75, column: 9, scope: !8658)
!8665 = !DILocation(line: 75, column: 12, scope: !8658)
!8666 = !DILocation(line: 75, column: 3, scope: !8658)
!8667 = !DILocation(line: 76, column: 9, scope: !8658)
!8668 = !DILocation(line: 76, column: 3, scope: !8658)
!8669 = !DILocation(line: 77, column: 1, scope: !8658)
!8670 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !597, file: !597, line: 100, type: !607, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8671 = !DILocalVariable(name: "ino", arg: 1, scope: !8670, file: !597, line: 100, type: !447)
!8672 = !DILocation(line: 100, column: 27, scope: !8670)
!8673 = !DILocalVariable(name: "dev", arg: 2, scope: !8670, file: !597, line: 100, type: !449)
!8674 = !DILocation(line: 100, column: 38, scope: !8670)
!8675 = !DILocalVariable(name: "ent", scope: !8670, file: !597, line: 102, type: !602)
!8676 = !DILocation(line: 102, column: 22, scope: !8670)
!8677 = !DILocalVariable(name: "e", scope: !8670, file: !597, line: 103, type: !609)
!8678 = !DILocation(line: 103, column: 29, scope: !8670)
!8679 = !DILocation(line: 104, column: 16, scope: !8670)
!8680 = !DILocation(line: 104, column: 7, scope: !8670)
!8681 = !DILocation(line: 104, column: 14, scope: !8670)
!8682 = !DILocation(line: 105, column: 16, scope: !8670)
!8683 = !DILocation(line: 105, column: 7, scope: !8670)
!8684 = !DILocation(line: 105, column: 14, scope: !8670)
!8685 = !DILocation(line: 106, column: 20, scope: !8670)
!8686 = !DILocation(line: 106, column: 33, scope: !8670)
!8687 = !DILocation(line: 106, column: 7, scope: !8670)
!8688 = !DILocation(line: 106, column: 5, scope: !8670)
!8689 = !DILocation(line: 107, column: 10, scope: !8670)
!8690 = !DILocation(line: 107, column: 14, scope: !8670)
!8691 = !DILocation(line: 107, column: 17, scope: !8670)
!8692 = !DILocation(line: 107, column: 3, scope: !8670)
!8693 = distinct !DISubprogram(name: "remember_copied", scope: !597, file: !597, line: 115, type: !611, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8694 = !DILocalVariable(name: "name", arg: 1, scope: !8693, file: !597, line: 115, type: !177)
!8695 = !DILocation(line: 115, column: 30, scope: !8693)
!8696 = !DILocalVariable(name: "ino", arg: 2, scope: !8693, file: !597, line: 115, type: !447)
!8697 = !DILocation(line: 115, column: 42, scope: !8693)
!8698 = !DILocalVariable(name: "dev", arg: 3, scope: !8693, file: !597, line: 115, type: !449)
!8699 = !DILocation(line: 115, column: 53, scope: !8693)
!8700 = !DILocalVariable(name: "ent", scope: !8693, file: !597, line: 117, type: !601)
!8701 = !DILocation(line: 117, column: 23, scope: !8693)
!8702 = !DILocalVariable(name: "ent_from_table", scope: !8693, file: !597, line: 118, type: !601)
!8703 = !DILocation(line: 118, column: 23, scope: !8693)
!8704 = !DILocation(line: 120, column: 9, scope: !8693)
!8705 = !DILocation(line: 120, column: 7, scope: !8693)
!8706 = !DILocation(line: 121, column: 24, scope: !8693)
!8707 = !DILocation(line: 121, column: 15, scope: !8693)
!8708 = !DILocation(line: 121, column: 3, scope: !8693)
!8709 = !DILocation(line: 121, column: 8, scope: !8693)
!8710 = !DILocation(line: 121, column: 13, scope: !8693)
!8711 = !DILocation(line: 122, column: 17, scope: !8693)
!8712 = !DILocation(line: 122, column: 3, scope: !8693)
!8713 = !DILocation(line: 122, column: 8, scope: !8693)
!8714 = !DILocation(line: 122, column: 15, scope: !8693)
!8715 = !DILocation(line: 123, column: 17, scope: !8693)
!8716 = !DILocation(line: 123, column: 3, scope: !8693)
!8717 = !DILocation(line: 123, column: 8, scope: !8693)
!8718 = !DILocation(line: 123, column: 15, scope: !8693)
!8719 = !DILocation(line: 125, column: 33, scope: !8693)
!8720 = !DILocation(line: 125, column: 46, scope: !8693)
!8721 = !DILocation(line: 125, column: 20, scope: !8693)
!8722 = !DILocation(line: 125, column: 18, scope: !8693)
!8723 = !DILocation(line: 126, column: 7, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8693, file: !597, line: 126, column: 7)
!8725 = !DILocation(line: 126, column: 22, scope: !8724)
!8726 = !DILocation(line: 126, column: 7, scope: !8693)
!8727 = !DILocation(line: 129, column: 7, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8724, file: !597, line: 127, column: 5)
!8729 = !DILocation(line: 135, column: 7, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8693, file: !597, line: 135, column: 7)
!8731 = !DILocation(line: 135, column: 25, scope: !8730)
!8732 = !DILocation(line: 135, column: 22, scope: !8730)
!8733 = !DILocation(line: 135, column: 7, scope: !8693)
!8734 = !DILocation(line: 137, column: 25, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8730, file: !597, line: 136, column: 5)
!8736 = !DILocation(line: 137, column: 7, scope: !8735)
!8737 = !DILocation(line: 138, column: 23, scope: !8735)
!8738 = !DILocation(line: 138, column: 39, scope: !8735)
!8739 = !DILocation(line: 138, column: 7, scope: !8735)
!8740 = !DILocation(line: 142, column: 3, scope: !8693)
!8741 = !DILocation(line: 143, column: 1, scope: !8693)
!8742 = distinct !DISubprogram(name: "hash_init", scope: !597, file: !597, line: 147, type: !197, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8743 = !DILocation(line: 149, column: 17, scope: !8742)
!8744 = !DILocation(line: 149, column: 15, scope: !8742)
!8745 = !DILocation(line: 153, column: 7, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8742, file: !597, line: 153, column: 7)
!8747 = !DILocation(line: 153, column: 19, scope: !8746)
!8748 = !DILocation(line: 153, column: 7, scope: !8742)
!8749 = !DILocation(line: 154, column: 5, scope: !8746)
!8750 = !DILocation(line: 155, column: 1, scope: !8742)
!8751 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !597, file: !597, line: 51, type: !615, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8752 = !DILocalVariable(name: "x", arg: 1, scope: !8751, file: !597, line: 51, type: !525)
!8753 = !DILocation(line: 51, column: 31, scope: !8751)
!8754 = !DILocalVariable(name: "table_size", arg: 2, scope: !8751, file: !597, line: 51, type: !52)
!8755 = !DILocation(line: 51, column: 41, scope: !8751)
!8756 = !DILocalVariable(name: "p", scope: !8751, file: !597, line: 53, type: !609)
!8757 = !DILocation(line: 53, column: 29, scope: !8751)
!8758 = !DILocation(line: 53, column: 33, scope: !8751)
!8759 = !DILocation(line: 58, column: 22, scope: !8751)
!8760 = !DILocation(line: 58, column: 25, scope: !8751)
!8761 = !DILocation(line: 58, column: 34, scope: !8751)
!8762 = !DILocation(line: 58, column: 32, scope: !8751)
!8763 = !DILocation(line: 58, column: 3, scope: !8751)
!8764 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !597, file: !597, line: 64, type: !617, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8765 = !DILocalVariable(name: "x", arg: 1, scope: !8764, file: !597, line: 64, type: !525)
!8766 = !DILocation(line: 64, column: 34, scope: !8764)
!8767 = !DILocalVariable(name: "y", arg: 2, scope: !8764, file: !597, line: 64, type: !525)
!8768 = !DILocation(line: 64, column: 49, scope: !8764)
!8769 = !DILocalVariable(name: "a", scope: !8764, file: !597, line: 66, type: !609)
!8770 = !DILocation(line: 66, column: 29, scope: !8764)
!8771 = !DILocation(line: 66, column: 33, scope: !8764)
!8772 = !DILocalVariable(name: "b", scope: !8764, file: !597, line: 67, type: !609)
!8773 = !DILocation(line: 67, column: 29, scope: !8764)
!8774 = !DILocation(line: 67, column: 33, scope: !8764)
!8775 = !DILocation(line: 68, column: 10, scope: !8764)
!8776 = !DILocation(line: 0, scope: !8764)
!8777 = !DILocation(line: 68, column: 3, scope: !8764)
!8778 = distinct !DISubprogram(name: "forget_all", scope: !597, file: !597, line: 161, type: !197, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !596, retainedNodes: !206)
!8779 = !DILocation(line: 163, column: 14, scope: !8778)
!8780 = !DILocation(line: 163, column: 3, scope: !8778)
!8781 = !DILocation(line: 164, column: 1, scope: !8778)
!8782 = distinct !DISubprogram(name: "extent_scan_init", scope: !1465, file: !1465, line: 69, type: !1468, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !206)
!8783 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8782, file: !1465, line: 69, type: !5)
!8784 = !DILocation(line: 69, column: 23, scope: !8782)
!8785 = !DILocalVariable(name: "scan", arg: 2, scope: !8782, file: !1465, line: 69, type: !1470)
!8786 = !DILocation(line: 69, column: 51, scope: !8782)
!8787 = !DILocation(line: 71, column: 14, scope: !8782)
!8788 = !DILocation(line: 71, column: 3, scope: !8782)
!8789 = !DILocation(line: 71, column: 9, scope: !8782)
!8790 = !DILocation(line: 71, column: 12, scope: !8782)
!8791 = !{!7906, !2656, i64 0}
!8792 = !DILocation(line: 72, column: 3, scope: !8782)
!8793 = !DILocation(line: 72, column: 9, scope: !8782)
!8794 = !DILocation(line: 72, column: 18, scope: !8782)
!8795 = !DILocation(line: 73, column: 3, scope: !8782)
!8796 = !DILocation(line: 73, column: 9, scope: !8782)
!8797 = !DILocation(line: 73, column: 18, scope: !8782)
!8798 = !DILocation(line: 74, column: 3, scope: !8782)
!8799 = !DILocation(line: 74, column: 9, scope: !8782)
!8800 = !DILocation(line: 74, column: 20, scope: !8782)
!8801 = !{!7906, !2936, i64 8}
!8802 = !DILocation(line: 75, column: 3, scope: !8782)
!8803 = !DILocation(line: 75, column: 9, scope: !8782)
!8804 = !DILocation(line: 75, column: 29, scope: !8782)
!8805 = !DILocation(line: 76, column: 3, scope: !8782)
!8806 = !DILocation(line: 76, column: 9, scope: !8782)
!8807 = !DILocation(line: 76, column: 26, scope: !8782)
!8808 = !DILocation(line: 77, column: 20, scope: !8782)
!8809 = !DILocation(line: 77, column: 3, scope: !8782)
!8810 = !DILocation(line: 77, column: 9, scope: !8782)
!8811 = !DILocation(line: 77, column: 18, scope: !8782)
!8812 = !{!7906, !2656, i64 16}
!8813 = !DILocation(line: 78, column: 1, scope: !8782)
!8814 = distinct !DISubprogram(name: "extent_need_sync", scope: !1465, file: !1465, line: 33, type: !1327, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1464, retainedNodes: !206)
!8815 = !DILocation(line: 39, column: 3, scope: !8814)
!8816 = distinct !DISubprogram(name: "extent_scan_read", scope: !1465, file: !1465, line: 87, type: !1486, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1464, retainedNodes: !206)
!8817 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8816, file: !1465, line: 94, size: 32768, elements: !8818)
!8818 = !{!8819, !8820}
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !8817, file: !1465, line: 94, baseType: !1489, size: 256)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !8817, file: !1465, line: 94, baseType: !344, size: 32768)
!8821 = !DILocalVariable(name: "scan", arg: 1, scope: !8816, file: !1465, line: 87, type: !1470)
!8822 = !DILocation(line: 87, column: 39, scope: !8816)
!8823 = !DILocalVariable(name: "si", scope: !8816, file: !1465, line: 89, type: !67)
!8824 = !DILocation(line: 89, column: 16, scope: !8816)
!8825 = !DILocalVariable(name: "last_ei", scope: !8816, file: !1465, line: 90, type: !1480)
!8826 = !DILocation(line: 90, column: 23, scope: !8816)
!8827 = !DILocation(line: 90, column: 33, scope: !8816)
!8828 = !DILocation(line: 90, column: 39, scope: !8816)
!8829 = !DILocation(line: 92, column: 3, scope: !8816)
!8830 = !DILocalVariable(name: "fiemap_buf", scope: !8831, file: !1465, line: 94, type: !8817)
!8831 = distinct !DILexicalBlock(scope: !8816, file: !1465, line: 93, column: 5)
!8832 = !DILocation(line: 94, column: 48, scope: !8831)
!8833 = !DILocalVariable(name: "fiemap", scope: !8831, file: !1465, line: 95, type: !1488)
!8834 = !DILocation(line: 95, column: 22, scope: !8831)
!8835 = !DILocation(line: 95, column: 43, scope: !8831)
!8836 = !DILocalVariable(name: "fm_extents", scope: !8831, file: !1465, line: 96, type: !1514)
!8837 = !DILocation(line: 96, column: 29, scope: !8831)
!8838 = !DILocation(line: 96, column: 43, scope: !8831)
!8839 = !DILocation(line: 96, column: 51, scope: !8831)
!8840 = !DILocation(line: 104, column: 7, scope: !8831)
!8841 = !DILocation(line: 106, column: 26, scope: !8831)
!8842 = !DILocation(line: 106, column: 32, scope: !8831)
!8843 = !DILocation(line: 106, column: 7, scope: !8831)
!8844 = !DILocation(line: 106, column: 15, scope: !8831)
!8845 = !DILocation(line: 106, column: 24, scope: !8831)
!8846 = !DILocation(line: 107, column: 26, scope: !8831)
!8847 = !DILocation(line: 107, column: 32, scope: !8831)
!8848 = !DILocation(line: 107, column: 7, scope: !8831)
!8849 = !DILocation(line: 107, column: 15, scope: !8831)
!8850 = !DILocation(line: 107, column: 24, scope: !8831)
!8851 = !DILocation(line: 108, column: 7, scope: !8831)
!8852 = !DILocation(line: 108, column: 15, scope: !8831)
!8853 = !DILocation(line: 108, column: 31, scope: !8831)
!8854 = !DILocation(line: 109, column: 47, scope: !8831)
!8855 = !DILocation(line: 109, column: 53, scope: !8831)
!8856 = !DILocation(line: 109, column: 45, scope: !8831)
!8857 = !DILocation(line: 109, column: 7, scope: !8831)
!8858 = !DILocation(line: 109, column: 15, scope: !8831)
!8859 = !DILocation(line: 109, column: 25, scope: !8831)
!8860 = !DILocation(line: 113, column: 18, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 113, column: 11)
!8862 = !DILocation(line: 113, column: 24, scope: !8861)
!8863 = !DILocation(line: 113, column: 43, scope: !8861)
!8864 = !DILocation(line: 113, column: 11, scope: !8861)
!8865 = !DILocation(line: 113, column: 51, scope: !8861)
!8866 = !DILocation(line: 113, column: 11, scope: !8831)
!8867 = !DILocation(line: 115, column: 15, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8869, file: !1465, line: 115, column: 15)
!8869 = distinct !DILexicalBlock(scope: !8861, file: !1465, line: 114, column: 9)
!8870 = !DILocation(line: 115, column: 21, scope: !8868)
!8871 = !DILocation(line: 115, column: 32, scope: !8868)
!8872 = !DILocation(line: 115, column: 15, scope: !8869)
!8873 = !DILocation(line: 116, column: 13, scope: !8868)
!8874 = !DILocation(line: 116, column: 19, scope: !8868)
!8875 = !DILocation(line: 116, column: 39, scope: !8868)
!8876 = !DILocation(line: 117, column: 11, scope: !8869)
!8877 = !DILocation(line: 121, column: 11, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 121, column: 11)
!8879 = !DILocation(line: 121, column: 19, scope: !8878)
!8880 = !DILocation(line: 121, column: 37, scope: !8878)
!8881 = !DILocation(line: 121, column: 11, scope: !8831)
!8882 = !DILocation(line: 123, column: 11, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8878, file: !1465, line: 122, column: 9)
!8884 = !DILocation(line: 123, column: 17, scope: !8883)
!8885 = !DILocation(line: 123, column: 34, scope: !8883)
!8886 = !DILocation(line: 124, column: 18, scope: !8883)
!8887 = !DILocation(line: 124, column: 24, scope: !8883)
!8888 = !DILocation(line: 124, column: 35, scope: !8883)
!8889 = !DILocation(line: 124, column: 11, scope: !8883)
!8890 = !DILocation(line: 127, column: 7, scope: !8831)
!8891 = !DILocation(line: 128, column: 25, scope: !8831)
!8892 = !DILocation(line: 128, column: 33, scope: !8831)
!8893 = !DILocation(line: 128, column: 7, scope: !8831)
!8894 = !DILocation(line: 128, column: 13, scope: !8831)
!8895 = !DILocation(line: 128, column: 22, scope: !8831)
!8896 = !DILocalVariable(name: "prev_idx", scope: !8897, file: !1465, line: 132, type: !52)
!8897 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 129, column: 7)
!8898 = !DILocation(line: 132, column: 16, scope: !8897)
!8899 = !DILocation(line: 132, column: 27, scope: !8897)
!8900 = !DILocation(line: 132, column: 37, scope: !8897)
!8901 = !DILocation(line: 132, column: 43, scope: !8897)
!8902 = !DILocation(line: 132, column: 35, scope: !8897)
!8903 = !DILocation(line: 133, column: 37, scope: !8897)
!8904 = !DILocation(line: 133, column: 43, scope: !8897)
!8905 = !DILocation(line: 133, column: 53, scope: !8897)
!8906 = !DILocation(line: 133, column: 59, scope: !8897)
!8907 = !DILocation(line: 133, column: 26, scope: !8897)
!8908 = !DILocation(line: 133, column: 9, scope: !8897)
!8909 = !DILocation(line: 133, column: 15, scope: !8897)
!8910 = !DILocation(line: 133, column: 24, scope: !8897)
!8911 = !DILocation(line: 135, column: 19, scope: !8897)
!8912 = !DILocation(line: 135, column: 25, scope: !8897)
!8913 = !DILocation(line: 135, column: 36, scope: !8897)
!8914 = !DILocation(line: 135, column: 34, scope: !8897)
!8915 = !DILocation(line: 135, column: 17, scope: !8897)
!8916 = !DILocalVariable(name: "i", scope: !8831, file: !1465, line: 138, type: !67)
!8917 = !DILocation(line: 138, column: 20, scope: !8831)
!8918 = !DILocation(line: 139, column: 14, scope: !8919)
!8919 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 139, column: 7)
!8920 = !DILocation(line: 139, column: 12, scope: !8919)
!8921 = !DILocation(line: 139, column: 19, scope: !8922)
!8922 = distinct !DILexicalBlock(scope: !8919, file: !1465, line: 139, column: 7)
!8923 = !DILocation(line: 139, column: 23, scope: !8922)
!8924 = !DILocation(line: 139, column: 31, scope: !8922)
!8925 = !DILocation(line: 139, column: 21, scope: !8922)
!8926 = !DILocation(line: 139, column: 7, scope: !8919)
!8927 = !DILocation(line: 141, column: 11, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8922, file: !1465, line: 140, column: 9)
!8929 = !{!8930, !2936, i64 0}
!8930 = !{!"fiemap_extent", !2936, i64 0, !2936, i64 8, !2936, i64 16, !2657, i64 24, !2656, i64 40, !2657, i64 44}
!8931 = !{!8930, !2936, i64 16}
!8932 = !DILocation(line: 146, column: 15, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8928, file: !1465, line: 146, column: 15)
!8934 = !DILocation(line: 146, column: 18, scope: !8933)
!8935 = !DILocation(line: 146, column: 21, scope: !8933)
!8936 = !DILocation(line: 146, column: 30, scope: !8933)
!8937 = !{!7955, !2656, i64 16}
!8938 = !DILocation(line: 147, column: 19, scope: !8933)
!8939 = !DILocation(line: 147, column: 30, scope: !8933)
!8940 = !DILocation(line: 147, column: 33, scope: !8933)
!8941 = !{!8930, !2656, i64 40}
!8942 = !DILocation(line: 147, column: 42, scope: !8933)
!8943 = !DILocation(line: 147, column: 15, scope: !8933)
!8944 = !DILocation(line: 148, column: 15, scope: !8933)
!8945 = !DILocation(line: 148, column: 19, scope: !8933)
!8946 = !DILocation(line: 148, column: 28, scope: !8933)
!8947 = !DILocation(line: 148, column: 42, scope: !8933)
!8948 = !DILocation(line: 148, column: 51, scope: !8933)
!8949 = !DILocation(line: 148, column: 40, scope: !8933)
!8950 = !DILocation(line: 149, column: 22, scope: !8933)
!8951 = !DILocation(line: 149, column: 33, scope: !8933)
!8952 = !DILocation(line: 149, column: 36, scope: !8933)
!8953 = !DILocation(line: 149, column: 19, scope: !8933)
!8954 = !DILocation(line: 146, column: 15, scope: !8928)
!8955 = !DILocation(line: 152, column: 38, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8933, file: !1465, line: 150, column: 13)
!8957 = !DILocation(line: 152, column: 49, scope: !8956)
!8958 = !DILocation(line: 152, column: 52, scope: !8956)
!8959 = !DILocation(line: 152, column: 15, scope: !8956)
!8960 = !DILocation(line: 152, column: 24, scope: !8956)
!8961 = !DILocation(line: 152, column: 35, scope: !8956)
!8962 = !DILocation(line: 154, column: 36, scope: !8956)
!8963 = !DILocation(line: 154, column: 47, scope: !8956)
!8964 = !DILocation(line: 154, column: 50, scope: !8956)
!8965 = !DILocation(line: 154, column: 15, scope: !8956)
!8966 = !DILocation(line: 154, column: 24, scope: !8956)
!8967 = !DILocation(line: 154, column: 34, scope: !8956)
!8968 = !DILocation(line: 155, column: 13, scope: !8956)
!8969 = !DILocation(line: 156, column: 21, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8933, file: !1465, line: 156, column: 20)
!8971 = !DILocation(line: 156, column: 24, scope: !8970)
!8972 = !DILocation(line: 156, column: 29, scope: !8970)
!8973 = !DILocation(line: 156, column: 32, scope: !8970)
!8974 = !DILocation(line: 156, column: 38, scope: !8970)
!8975 = !DILocation(line: 156, column: 51, scope: !8970)
!8976 = !DILocation(line: 156, column: 62, scope: !8970)
!8977 = !DILocation(line: 156, column: 65, scope: !8970)
!8978 = !DILocation(line: 156, column: 49, scope: !8970)
!8979 = !DILocation(line: 157, column: 20, scope: !8970)
!8980 = !DILocation(line: 157, column: 24, scope: !8970)
!8981 = !DILocation(line: 157, column: 27, scope: !8970)
!8982 = !DILocation(line: 157, column: 31, scope: !8970)
!8983 = !DILocation(line: 157, column: 40, scope: !8970)
!8984 = !DILocation(line: 157, column: 54, scope: !8970)
!8985 = !DILocation(line: 157, column: 63, scope: !8970)
!8986 = !DILocation(line: 157, column: 52, scope: !8970)
!8987 = !DILocation(line: 158, column: 33, scope: !8970)
!8988 = !DILocation(line: 158, column: 44, scope: !8970)
!8989 = !DILocation(line: 158, column: 47, scope: !8970)
!8990 = !DILocation(line: 158, column: 31, scope: !8970)
!8991 = !DILocation(line: 156, column: 20, scope: !8933)
!8992 = !DILocalVariable(name: "new_logical", scope: !8993, file: !1465, line: 164, type: !1493)
!8993 = distinct !DILexicalBlock(scope: !8970, file: !1465, line: 159, column: 13)
!8994 = !DILocation(line: 164, column: 24, scope: !8993)
!8995 = !DILocalVariable(name: "length_adjust", scope: !8993, file: !1465, line: 165, type: !1493)
!8996 = !DILocation(line: 165, column: 24, scope: !8993)
!8997 = !DILocation(line: 166, column: 19, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8993, file: !1465, line: 166, column: 19)
!8999 = !DILocation(line: 166, column: 22, scope: !8998)
!9000 = !DILocation(line: 166, column: 19, scope: !8993)
!9001 = !DILocation(line: 167, column: 31, scope: !8998)
!9002 = !DILocation(line: 167, column: 37, scope: !8998)
!9003 = !DILocation(line: 167, column: 29, scope: !8998)
!9004 = !DILocation(line: 167, column: 17, scope: !8998)
!9005 = !DILocation(line: 172, column: 33, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8998, file: !1465, line: 169, column: 17)
!9007 = !DILocation(line: 172, column: 42, scope: !9006)
!9008 = !DILocation(line: 172, column: 56, scope: !9006)
!9009 = !DILocation(line: 172, column: 65, scope: !9006)
!9010 = !DILocation(line: 172, column: 54, scope: !9006)
!9011 = !DILocation(line: 172, column: 31, scope: !9006)
!9012 = !DILocation(line: 174, column: 31, scope: !8993)
!9013 = !DILocation(line: 174, column: 45, scope: !8993)
!9014 = !DILocation(line: 174, column: 56, scope: !8993)
!9015 = !DILocation(line: 174, column: 59, scope: !8993)
!9016 = !DILocation(line: 174, column: 43, scope: !8993)
!9017 = !DILocation(line: 174, column: 29, scope: !8993)
!9018 = !DILocation(line: 176, column: 19, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !8993, file: !1465, line: 176, column: 19)
!9020 = !DILocation(line: 176, column: 35, scope: !9019)
!9021 = !DILocation(line: 176, column: 46, scope: !9019)
!9022 = !DILocation(line: 176, column: 49, scope: !9019)
!9023 = !DILocation(line: 176, column: 33, scope: !9019)
!9024 = !DILocation(line: 176, column: 19, scope: !8993)
!9025 = !DILocation(line: 178, column: 23, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9027, file: !1465, line: 178, column: 23)
!9027 = distinct !DILexicalBlock(scope: !9019, file: !1465, line: 177, column: 17)
!9028 = !DILocation(line: 178, column: 29, scope: !9026)
!9029 = !DILocation(line: 178, column: 40, scope: !9026)
!9030 = !DILocation(line: 178, column: 23, scope: !9027)
!9031 = !DILocation(line: 179, column: 21, scope: !9026)
!9032 = !DILocation(line: 179, column: 27, scope: !9026)
!9033 = !DILocation(line: 179, column: 47, scope: !9026)
!9034 = !DILocation(line: 180, column: 19, scope: !9027)
!9035 = !DILocation(line: 182, column: 42, scope: !8993)
!9036 = !DILocation(line: 182, column: 15, scope: !8993)
!9037 = !DILocation(line: 182, column: 26, scope: !8993)
!9038 = !DILocation(line: 182, column: 29, scope: !8993)
!9039 = !DILocation(line: 182, column: 40, scope: !8993)
!9040 = !DILocation(line: 183, column: 42, scope: !8993)
!9041 = !DILocation(line: 183, column: 15, scope: !8993)
!9042 = !DILocation(line: 183, column: 26, scope: !8993)
!9043 = !DILocation(line: 183, column: 29, scope: !8993)
!9044 = !DILocation(line: 183, column: 39, scope: !8993)
!9045 = !DILocation(line: 185, column: 16, scope: !8993)
!9046 = !DILocation(line: 186, column: 15, scope: !8993)
!9047 = !DILocation(line: 190, column: 25, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !8970, file: !1465, line: 189, column: 13)
!9049 = !DILocation(line: 190, column: 31, scope: !9048)
!9050 = !DILocation(line: 190, column: 42, scope: !9048)
!9051 = !DILocation(line: 190, column: 40, scope: !9048)
!9052 = !DILocation(line: 190, column: 23, scope: !9048)
!9053 = !DILocation(line: 191, column: 38, scope: !9048)
!9054 = !DILocation(line: 191, column: 49, scope: !9048)
!9055 = !DILocation(line: 191, column: 52, scope: !9048)
!9056 = !DILocation(line: 191, column: 15, scope: !9048)
!9057 = !DILocation(line: 191, column: 24, scope: !9048)
!9058 = !DILocation(line: 191, column: 36, scope: !9048)
!9059 = !DILocation(line: 192, column: 37, scope: !9048)
!9060 = !DILocation(line: 192, column: 48, scope: !9048)
!9061 = !DILocation(line: 192, column: 51, scope: !9048)
!9062 = !DILocation(line: 192, column: 15, scope: !9048)
!9063 = !DILocation(line: 192, column: 24, scope: !9048)
!9064 = !DILocation(line: 192, column: 35, scope: !9048)
!9065 = !DILocation(line: 193, column: 36, scope: !9048)
!9066 = !DILocation(line: 193, column: 47, scope: !9048)
!9067 = !DILocation(line: 193, column: 50, scope: !9048)
!9068 = !DILocation(line: 193, column: 15, scope: !9048)
!9069 = !DILocation(line: 193, column: 24, scope: !9048)
!9070 = !DILocation(line: 193, column: 34, scope: !9048)
!9071 = !DILocation(line: 194, column: 17, scope: !9048)
!9072 = !DILocation(line: 196, column: 9, scope: !8928)
!9073 = !DILocation(line: 139, column: 51, scope: !8922)
!9074 = !DILocation(line: 139, column: 7, scope: !8922)
!9075 = distinct !{!9075, !8926, !9076}
!9076 = !DILocation(line: 196, column: 9, scope: !8919)
!9077 = !DILocation(line: 198, column: 11, scope: !9078)
!9078 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 198, column: 11)
!9079 = !DILocation(line: 198, column: 20, scope: !9078)
!9080 = !DILocation(line: 198, column: 30, scope: !9078)
!9081 = !DILocation(line: 198, column: 11, scope: !8831)
!9082 = !DILocation(line: 199, column: 9, scope: !9078)
!9083 = !DILocation(line: 199, column: 15, scope: !9078)
!9084 = !DILocation(line: 199, column: 32, scope: !9078)
!9085 = !DILocation(line: 203, column: 11, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 203, column: 11)
!9087 = !DILocation(line: 203, column: 14, scope: !9086)
!9088 = !DILocation(line: 203, column: 22, scope: !9086)
!9089 = !DILocation(line: 203, column: 26, scope: !9086)
!9090 = !DILocation(line: 203, column: 32, scope: !9086)
!9091 = !DILocation(line: 203, column: 11, scope: !8831)
!9092 = !DILocation(line: 204, column: 19, scope: !9086)
!9093 = !DILocation(line: 204, column: 25, scope: !9086)
!9094 = !DILocation(line: 204, column: 36, scope: !9086)
!9095 = !DILocation(line: 204, column: 34, scope: !9086)
!9096 = !DILocation(line: 204, column: 41, scope: !9086)
!9097 = !DILocation(line: 204, column: 17, scope: !9086)
!9098 = !DILocation(line: 204, column: 9, scope: !9086)
!9099 = !DILocation(line: 207, column: 24, scope: !8831)
!9100 = !DILocation(line: 207, column: 7, scope: !8831)
!9101 = !DILocation(line: 207, column: 13, scope: !8831)
!9102 = !DILocation(line: 207, column: 22, scope: !8831)
!9103 = !DILocation(line: 209, column: 11, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 209, column: 11)
!9105 = !DILocation(line: 209, column: 17, scope: !9104)
!9106 = !DILocation(line: 209, column: 11, scope: !8831)
!9107 = !DILocation(line: 210, column: 9, scope: !9104)
!9108 = !DILocation(line: 212, column: 28, scope: !9104)
!9109 = !DILocation(line: 212, column: 37, scope: !9104)
!9110 = !DILocation(line: 212, column: 51, scope: !9104)
!9111 = !DILocation(line: 212, column: 60, scope: !9104)
!9112 = !DILocation(line: 212, column: 49, scope: !9104)
!9113 = !DILocation(line: 212, column: 9, scope: !9104)
!9114 = !DILocation(line: 212, column: 15, scope: !9104)
!9115 = !DILocation(line: 212, column: 26, scope: !9104)
!9116 = !DILocation(line: 214, column: 11, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !8831, file: !1465, line: 214, column: 11)
!9118 = !DILocation(line: 214, column: 14, scope: !9117)
!9119 = !DILocation(line: 214, column: 11, scope: !8831)
!9120 = !DILocation(line: 215, column: 9, scope: !9117)
!9121 = distinct !{!9121, !8829, !9122}
!9122 = !DILocation(line: 216, column: 5, scope: !8816)
!9123 = !DILocation(line: 218, column: 3, scope: !8816)
!9124 = !DILocation(line: 219, column: 1, scope: !8816)
!9125 = distinct !DISubprogram(name: "force_linkat", scope: !623, file: !623, line: 95, type: !625, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !622, retainedNodes: !206)
!9126 = !DILocalVariable(name: "srcdir", arg: 1, scope: !9125, file: !623, line: 95, type: !5)
!9127 = !DILocation(line: 95, column: 19, scope: !9125)
!9128 = !DILocalVariable(name: "srcname", arg: 2, scope: !9125, file: !623, line: 95, type: !177)
!9129 = !DILocation(line: 95, column: 39, scope: !9125)
!9130 = !DILocalVariable(name: "dstdir", arg: 3, scope: !9125, file: !623, line: 96, type: !5)
!9131 = !DILocation(line: 96, column: 19, scope: !9125)
!9132 = !DILocalVariable(name: "dstname", arg: 4, scope: !9125, file: !623, line: 96, type: !177)
!9133 = !DILocation(line: 96, column: 39, scope: !9125)
!9134 = !DILocalVariable(name: "flags", arg: 5, scope: !9125, file: !623, line: 96, type: !5)
!9135 = !DILocation(line: 96, column: 52, scope: !9125)
!9136 = !DILocalVariable(name: "force", arg: 6, scope: !9125, file: !623, line: 96, type: !139)
!9137 = !DILocation(line: 96, column: 64, scope: !9125)
!9138 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !9125, file: !623, line: 97, type: !5)
!9139 = !DILocation(line: 97, column: 19, scope: !9125)
!9140 = !DILocation(line: 99, column: 7, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9125, file: !623, line: 99, column: 7)
!9142 = !DILocation(line: 99, column: 20, scope: !9141)
!9143 = !DILocation(line: 99, column: 7, scope: !9125)
!9144 = !DILocation(line: 100, column: 29, scope: !9141)
!9145 = !DILocation(line: 100, column: 37, scope: !9141)
!9146 = !DILocation(line: 100, column: 46, scope: !9141)
!9147 = !DILocation(line: 100, column: 54, scope: !9141)
!9148 = !DILocation(line: 100, column: 63, scope: !9141)
!9149 = !DILocation(line: 100, column: 21, scope: !9141)
!9150 = !DILocation(line: 100, column: 70, scope: !9141)
!9151 = !DILocation(line: 101, column: 27, scope: !9141)
!9152 = !DILocation(line: 100, column: 18, scope: !9141)
!9153 = !DILocation(line: 100, column: 5, scope: !9141)
!9154 = !DILocation(line: 102, column: 8, scope: !9155)
!9155 = distinct !DILexicalBlock(scope: !9125, file: !623, line: 102, column: 7)
!9156 = !DILocation(line: 102, column: 14, scope: !9155)
!9157 = !DILocation(line: 102, column: 17, scope: !9155)
!9158 = !DILocation(line: 102, column: 30, scope: !9155)
!9159 = !DILocation(line: 102, column: 7, scope: !9125)
!9160 = !DILocation(line: 103, column: 12, scope: !9155)
!9161 = !DILocation(line: 103, column: 5, scope: !9155)
!9162 = !DILocalVariable(name: "buf", scope: !9125, file: !623, line: 105, type: !627)
!9163 = !DILocation(line: 105, column: 8, scope: !9125)
!9164 = !DILocalVariable(name: "dsttmp", scope: !9125, file: !623, line: 106, type: !7)
!9165 = !DILocation(line: 106, column: 9, scope: !9125)
!9166 = !DILocation(line: 106, column: 36, scope: !9125)
!9167 = !DILocation(line: 106, column: 45, scope: !9125)
!9168 = !DILocation(line: 106, column: 18, scope: !9125)
!9169 = !DILocation(line: 107, column: 9, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9125, file: !623, line: 107, column: 7)
!9171 = !DILocation(line: 107, column: 7, scope: !9125)
!9172 = !DILocation(line: 108, column: 12, scope: !9170)
!9173 = !DILocation(line: 108, column: 5, scope: !9170)
!9174 = !DILocalVariable(name: "arg", scope: !9125, file: !623, line: 109, type: !641)
!9175 = !DILocation(line: 109, column: 19, scope: !9125)
!9176 = !DILocation(line: 109, column: 25, scope: !9125)
!9177 = !DILocation(line: 109, column: 27, scope: !9125)
!9178 = !{!9179, !2656, i64 0}
!9179 = !{!"link_arg", !2656, i64 0, !2669, i64 8, !2656, i64 16, !2656, i64 20}
!9180 = !DILocation(line: 109, column: 35, scope: !9125)
!9181 = !{!9179, !2669, i64 8}
!9182 = !DILocation(line: 109, column: 44, scope: !9125)
!9183 = !{!9179, !2656, i64 16}
!9184 = !DILocation(line: 109, column: 52, scope: !9125)
!9185 = !{!9179, !2656, i64 20}
!9186 = !DILocalVariable(name: "err", scope: !9125, file: !623, line: 110, type: !5)
!9187 = !DILocation(line: 110, column: 7, scope: !9125)
!9188 = !DILocation(line: 112, column: 25, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9125, file: !623, line: 112, column: 7)
!9190 = !DILocation(line: 112, column: 36, scope: !9189)
!9191 = !DILocation(line: 112, column: 7, scope: !9189)
!9192 = !DILocation(line: 112, column: 66, scope: !9189)
!9193 = !DILocation(line: 112, column: 7, scope: !9125)
!9194 = !DILocation(line: 113, column: 11, scope: !9189)
!9195 = !DILocation(line: 113, column: 9, scope: !9189)
!9196 = !DILocation(line: 113, column: 5, scope: !9189)
!9197 = !DILocation(line: 116, column: 23, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9189, file: !623, line: 115, column: 5)
!9199 = !DILocation(line: 116, column: 31, scope: !9198)
!9200 = !DILocation(line: 116, column: 39, scope: !9198)
!9201 = !DILocation(line: 116, column: 47, scope: !9198)
!9202 = !DILocation(line: 116, column: 13, scope: !9198)
!9203 = !DILocation(line: 116, column: 56, scope: !9198)
!9204 = !DILocation(line: 116, column: 68, scope: !9198)
!9205 = !DILocation(line: 116, column: 11, scope: !9198)
!9206 = !DILocation(line: 120, column: 17, scope: !9198)
!9207 = !DILocation(line: 120, column: 25, scope: !9198)
!9208 = !DILocation(line: 120, column: 7, scope: !9198)
!9209 = !DILocation(line: 123, column: 7, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9125, file: !623, line: 123, column: 7)
!9211 = !DILocation(line: 123, column: 17, scope: !9210)
!9212 = !DILocation(line: 123, column: 14, scope: !9210)
!9213 = !DILocation(line: 123, column: 7, scope: !9125)
!9214 = !DILocation(line: 124, column: 11, scope: !9210)
!9215 = !DILocation(line: 124, column: 5, scope: !9210)
!9216 = !DILocation(line: 125, column: 10, scope: !9125)
!9217 = !DILocation(line: 125, column: 3, scope: !9125)
!9218 = !DILocation(line: 126, column: 1, scope: !9125)
!9219 = distinct !DISubprogram(name: "samedir_template", scope: !623, file: !623, line: 51, type: !632, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !622, retainedNodes: !206)
!9220 = !DILocalVariable(name: "dstname", arg: 1, scope: !9219, file: !623, line: 51, type: !177)
!9221 = !DILocation(line: 51, column: 31, scope: !9219)
!9222 = !DILocalVariable(name: "buf", arg: 2, scope: !9219, file: !623, line: 51, type: !7)
!9223 = !DILocation(line: 51, column: 45, scope: !9219)
!9224 = !DILocalVariable(name: "dstdirlen", scope: !9219, file: !623, line: 53, type: !634)
!9225 = !DILocation(line: 53, column: 13, scope: !9219)
!9226 = !DILocation(line: 53, column: 41, scope: !9219)
!9227 = !DILocation(line: 53, column: 25, scope: !9219)
!9228 = !DILocation(line: 53, column: 52, scope: !9219)
!9229 = !DILocation(line: 53, column: 50, scope: !9219)
!9230 = !DILocalVariable(name: "dsttmpsize", scope: !9219, file: !623, line: 54, type: !52)
!9231 = !DILocation(line: 54, column: 10, scope: !9219)
!9232 = !DILocation(line: 54, column: 23, scope: !9219)
!9233 = !DILocation(line: 54, column: 33, scope: !9219)
!9234 = !DILocalVariable(name: "dsttmp", scope: !9219, file: !623, line: 55, type: !7)
!9235 = !DILocation(line: 55, column: 9, scope: !9219)
!9236 = !DILocation(line: 56, column: 7, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9219, file: !623, line: 56, column: 7)
!9238 = !DILocation(line: 56, column: 18, scope: !9237)
!9239 = !DILocation(line: 56, column: 7, scope: !9219)
!9240 = !DILocation(line: 57, column: 14, scope: !9237)
!9241 = !DILocation(line: 57, column: 12, scope: !9237)
!9242 = !DILocation(line: 57, column: 5, scope: !9237)
!9243 = !DILocation(line: 60, column: 24, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9237, file: !623, line: 59, column: 5)
!9245 = !DILocation(line: 60, column: 16, scope: !9244)
!9246 = !DILocation(line: 60, column: 14, scope: !9244)
!9247 = !DILocation(line: 61, column: 12, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9244, file: !623, line: 61, column: 11)
!9249 = !DILocation(line: 61, column: 11, scope: !9244)
!9250 = !DILocation(line: 62, column: 16, scope: !9248)
!9251 = !DILocation(line: 62, column: 9, scope: !9248)
!9252 = !DILocation(line: 64, column: 20, scope: !9219)
!9253 = !DILocation(line: 64, column: 28, scope: !9219)
!9254 = !DILocation(line: 64, column: 37, scope: !9219)
!9255 = !DILocation(line: 64, column: 11, scope: !9219)
!9256 = !DILocation(line: 64, column: 3, scope: !9219)
!9257 = !DILocation(line: 65, column: 10, scope: !9219)
!9258 = !DILocation(line: 65, column: 3, scope: !9219)
!9259 = !DILocation(line: 66, column: 1, scope: !9219)
!9260 = distinct !DISubprogram(name: "try_link", scope: !623, file: !623, line: 80, type: !638, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !622, retainedNodes: !206)
!9261 = !DILocalVariable(name: "dest", arg: 1, scope: !9260, file: !623, line: 80, type: !7)
!9262 = !DILocation(line: 80, column: 17, scope: !9260)
!9263 = !DILocalVariable(name: "arg", arg: 2, scope: !9260, file: !623, line: 80, type: !47)
!9264 = !DILocation(line: 80, column: 29, scope: !9260)
!9265 = !DILocalVariable(name: "a", scope: !9260, file: !623, line: 82, type: !640)
!9266 = !DILocation(line: 82, column: 20, scope: !9260)
!9267 = !DILocation(line: 82, column: 24, scope: !9260)
!9268 = !DILocation(line: 83, column: 18, scope: !9260)
!9269 = !DILocation(line: 83, column: 21, scope: !9260)
!9270 = !DILocation(line: 83, column: 29, scope: !9260)
!9271 = !DILocation(line: 83, column: 32, scope: !9260)
!9272 = !DILocation(line: 83, column: 41, scope: !9260)
!9273 = !DILocation(line: 83, column: 44, scope: !9260)
!9274 = !DILocation(line: 83, column: 52, scope: !9260)
!9275 = !DILocation(line: 83, column: 58, scope: !9260)
!9276 = !DILocation(line: 83, column: 61, scope: !9260)
!9277 = !DILocation(line: 83, column: 10, scope: !9260)
!9278 = !DILocation(line: 83, column: 3, scope: !9260)
!9279 = distinct !DISubprogram(name: "force_symlinkat", scope: !623, file: !623, line: 152, type: !630, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !622, retainedNodes: !206)
!9280 = !DILocalVariable(name: "srcname", arg: 1, scope: !9279, file: !623, line: 152, type: !177)
!9281 = !DILocation(line: 152, column: 30, scope: !9279)
!9282 = !DILocalVariable(name: "dstdir", arg: 2, scope: !9279, file: !623, line: 152, type: !5)
!9283 = !DILocation(line: 152, column: 43, scope: !9279)
!9284 = !DILocalVariable(name: "dstname", arg: 3, scope: !9279, file: !623, line: 152, type: !177)
!9285 = !DILocation(line: 152, column: 63, scope: !9279)
!9286 = !DILocalVariable(name: "force", arg: 4, scope: !9279, file: !623, line: 153, type: !139)
!9287 = !DILocation(line: 153, column: 23, scope: !9279)
!9288 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !9279, file: !623, line: 153, type: !5)
!9289 = !DILocation(line: 153, column: 34, scope: !9279)
!9290 = !DILocation(line: 155, column: 7, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9279, file: !623, line: 155, column: 7)
!9292 = !DILocation(line: 155, column: 23, scope: !9291)
!9293 = !DILocation(line: 155, column: 7, scope: !9279)
!9294 = !DILocation(line: 156, column: 34, scope: !9291)
!9295 = !DILocation(line: 156, column: 43, scope: !9291)
!9296 = !DILocation(line: 156, column: 51, scope: !9291)
!9297 = !DILocation(line: 156, column: 23, scope: !9291)
!9298 = !DILocation(line: 156, column: 60, scope: !9291)
!9299 = !DILocation(line: 156, column: 71, scope: !9291)
!9300 = !DILocation(line: 156, column: 21, scope: !9291)
!9301 = !DILocation(line: 156, column: 5, scope: !9291)
!9302 = !DILocation(line: 157, column: 8, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9279, file: !623, line: 157, column: 7)
!9304 = !DILocation(line: 157, column: 14, scope: !9303)
!9305 = !DILocation(line: 157, column: 17, scope: !9303)
!9306 = !DILocation(line: 157, column: 33, scope: !9303)
!9307 = !DILocation(line: 157, column: 7, scope: !9279)
!9308 = !DILocation(line: 158, column: 12, scope: !9303)
!9309 = !DILocation(line: 158, column: 5, scope: !9303)
!9310 = !DILocalVariable(name: "buf", scope: !9279, file: !623, line: 160, type: !627)
!9311 = !DILocation(line: 160, column: 8, scope: !9279)
!9312 = !DILocalVariable(name: "dsttmp", scope: !9279, file: !623, line: 161, type: !7)
!9313 = !DILocation(line: 161, column: 9, scope: !9279)
!9314 = !DILocation(line: 161, column: 36, scope: !9279)
!9315 = !DILocation(line: 161, column: 45, scope: !9279)
!9316 = !DILocation(line: 161, column: 18, scope: !9279)
!9317 = !DILocation(line: 162, column: 8, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9279, file: !623, line: 162, column: 7)
!9319 = !DILocation(line: 162, column: 7, scope: !9279)
!9320 = !DILocation(line: 163, column: 12, scope: !9318)
!9321 = !DILocation(line: 163, column: 5, scope: !9318)
!9322 = !DILocalVariable(name: "arg", scope: !9279, file: !623, line: 164, type: !648)
!9323 = !DILocation(line: 164, column: 22, scope: !9279)
!9324 = !DILocation(line: 164, column: 28, scope: !9279)
!9325 = !DILocation(line: 164, column: 30, scope: !9279)
!9326 = !{!9327, !2669, i64 0}
!9327 = !{!"symlink_arg", !2669, i64 0, !2656, i64 8}
!9328 = !DILocation(line: 164, column: 39, scope: !9279)
!9329 = !{!9327, !2656, i64 8}
!9330 = !DILocalVariable(name: "err", scope: !9279, file: !623, line: 165, type: !5)
!9331 = !DILocation(line: 165, column: 7, scope: !9279)
!9332 = !DILocation(line: 167, column: 25, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9279, file: !623, line: 167, column: 7)
!9334 = !DILocation(line: 167, column: 36, scope: !9333)
!9335 = !DILocation(line: 167, column: 7, scope: !9333)
!9336 = !DILocation(line: 167, column: 69, scope: !9333)
!9337 = !DILocation(line: 167, column: 7, scope: !9279)
!9338 = !DILocation(line: 168, column: 11, scope: !9333)
!9339 = !DILocation(line: 168, column: 9, scope: !9333)
!9340 = !DILocation(line: 168, column: 5, scope: !9333)
!9341 = !DILocation(line: 169, column: 22, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9333, file: !623, line: 169, column: 12)
!9343 = !DILocation(line: 169, column: 30, scope: !9342)
!9344 = !DILocation(line: 169, column: 38, scope: !9342)
!9345 = !DILocation(line: 169, column: 46, scope: !9342)
!9346 = !DILocation(line: 169, column: 12, scope: !9342)
!9347 = !DILocation(line: 169, column: 55, scope: !9342)
!9348 = !DILocation(line: 169, column: 12, scope: !9333)
!9349 = !DILocation(line: 171, column: 13, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9342, file: !623, line: 170, column: 5)
!9351 = !DILocation(line: 171, column: 11, scope: !9350)
!9352 = !DILocation(line: 172, column: 17, scope: !9350)
!9353 = !DILocation(line: 172, column: 25, scope: !9350)
!9354 = !DILocation(line: 172, column: 7, scope: !9350)
!9355 = !DILocation(line: 173, column: 5, scope: !9350)
!9356 = !DILocation(line: 178, column: 11, scope: !9357)
!9357 = distinct !DILexicalBlock(scope: !9342, file: !623, line: 175, column: 5)
!9358 = !DILocation(line: 181, column: 7, scope: !9359)
!9359 = distinct !DILexicalBlock(scope: !9279, file: !623, line: 181, column: 7)
!9360 = !DILocation(line: 181, column: 17, scope: !9359)
!9361 = !DILocation(line: 181, column: 14, scope: !9359)
!9362 = !DILocation(line: 181, column: 7, scope: !9279)
!9363 = !DILocation(line: 182, column: 11, scope: !9359)
!9364 = !DILocation(line: 182, column: 5, scope: !9359)
!9365 = !DILocation(line: 183, column: 10, scope: !9279)
!9366 = !DILocation(line: 183, column: 3, scope: !9279)
!9367 = !DILocation(line: 184, column: 1, scope: !9279)
!9368 = distinct !DISubprogram(name: "try_symlink", scope: !623, file: !623, line: 138, type: !638, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !622, retainedNodes: !206)
!9369 = !DILocalVariable(name: "dest", arg: 1, scope: !9368, file: !623, line: 138, type: !7)
!9370 = !DILocation(line: 138, column: 20, scope: !9368)
!9371 = !DILocalVariable(name: "arg", arg: 2, scope: !9368, file: !623, line: 138, type: !47)
!9372 = !DILocation(line: 138, column: 32, scope: !9368)
!9373 = !DILocalVariable(name: "a", scope: !9368, file: !623, line: 140, type: !647)
!9374 = !DILocation(line: 140, column: 23, scope: !9368)
!9375 = !DILocation(line: 140, column: 27, scope: !9368)
!9376 = !DILocation(line: 141, column: 21, scope: !9368)
!9377 = !DILocation(line: 141, column: 24, scope: !9368)
!9378 = !DILocation(line: 141, column: 33, scope: !9368)
!9379 = !DILocation(line: 141, column: 36, scope: !9368)
!9380 = !DILocation(line: 141, column: 44, scope: !9368)
!9381 = !DILocation(line: 141, column: 10, scope: !9368)
!9382 = !DILocation(line: 141, column: 3, scope: !9368)
!9383 = distinct !DISubprogram(name: "copy_acl", scope: !9384, file: !9384, line: 43, type: !1520, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1517, retainedNodes: !206)
!9384 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mohamad/clone/coreutils")
!9385 = !DILocalVariable(name: "src_name", arg: 1, scope: !9383, file: !9384, line: 43, type: !177)
!9386 = !DILocation(line: 43, column: 23, scope: !9383)
!9387 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9383, file: !9384, line: 43, type: !5)
!9388 = !DILocation(line: 43, column: 37, scope: !9383)
!9389 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9383, file: !9384, line: 43, type: !177)
!9390 = !DILocation(line: 43, column: 62, scope: !9383)
!9391 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9383, file: !9384, line: 44, type: !5)
!9392 = !DILocation(line: 44, column: 15, scope: !9383)
!9393 = !DILocalVariable(name: "mode", arg: 5, scope: !9383, file: !9384, line: 44, type: !136)
!9394 = !DILocation(line: 44, column: 33, scope: !9383)
!9395 = !DILocalVariable(name: "ret", scope: !9383, file: !9384, line: 46, type: !5)
!9396 = !DILocation(line: 46, column: 7, scope: !9383)
!9397 = !DILocation(line: 46, column: 24, scope: !9383)
!9398 = !DILocation(line: 46, column: 34, scope: !9383)
!9399 = !DILocation(line: 46, column: 47, scope: !9383)
!9400 = !DILocation(line: 46, column: 57, scope: !9383)
!9401 = !DILocation(line: 46, column: 68, scope: !9383)
!9402 = !DILocation(line: 46, column: 13, scope: !9383)
!9403 = !DILocation(line: 47, column: 11, scope: !9383)
!9404 = !DILocation(line: 47, column: 3, scope: !9383)
!9405 = !DILocation(line: 50, column: 17, scope: !9406)
!9406 = distinct !DILexicalBlock(scope: !9383, file: !9384, line: 48, column: 5)
!9407 = !DILocation(line: 50, column: 37, scope: !9406)
!9408 = !DILocation(line: 50, column: 30, scope: !9406)
!9409 = !DILocation(line: 50, column: 7, scope: !9406)
!9410 = !DILocation(line: 51, column: 7, scope: !9406)
!9411 = !DILocation(line: 54, column: 17, scope: !9406)
!9412 = !DILocation(line: 54, column: 24, scope: !9406)
!9413 = !DILocation(line: 54, column: 67, scope: !9406)
!9414 = !DILocation(line: 54, column: 60, scope: !9406)
!9415 = !DILocation(line: 54, column: 7, scope: !9406)
!9416 = !DILocation(line: 55, column: 7, scope: !9406)
!9417 = !DILocation(line: 58, column: 7, scope: !9406)
!9418 = !DILocation(line: 60, column: 10, scope: !9383)
!9419 = !DILocation(line: 60, column: 3, scope: !9383)
!9420 = distinct !DISubprogram(name: "set_acl", scope: !9421, file: !9421, line: 42, type: !1525, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1522, retainedNodes: !206)
!9421 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mohamad/clone/coreutils")
!9422 = !DILocalVariable(name: "name", arg: 1, scope: !9420, file: !9421, line: 42, type: !177)
!9423 = !DILocation(line: 42, column: 22, scope: !9420)
!9424 = !DILocalVariable(name: "desc", arg: 2, scope: !9420, file: !9421, line: 42, type: !5)
!9425 = !DILocation(line: 42, column: 32, scope: !9420)
!9426 = !DILocalVariable(name: "mode", arg: 3, scope: !9420, file: !9421, line: 42, type: !136)
!9427 = !DILocation(line: 42, column: 45, scope: !9420)
!9428 = !DILocalVariable(name: "ret", scope: !9420, file: !9421, line: 44, type: !5)
!9429 = !DILocation(line: 44, column: 7, scope: !9420)
!9430 = !DILocation(line: 44, column: 23, scope: !9420)
!9431 = !DILocation(line: 44, column: 29, scope: !9420)
!9432 = !DILocation(line: 44, column: 35, scope: !9420)
!9433 = !DILocation(line: 44, column: 13, scope: !9420)
!9434 = !DILocation(line: 45, column: 7, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9420, file: !9421, line: 45, column: 7)
!9436 = !DILocation(line: 45, column: 11, scope: !9435)
!9437 = !DILocation(line: 45, column: 7, scope: !9420)
!9438 = !DILocation(line: 46, column: 15, scope: !9435)
!9439 = !DILocation(line: 46, column: 22, scope: !9435)
!9440 = !DILocation(line: 46, column: 62, scope: !9435)
!9441 = !DILocation(line: 46, column: 55, scope: !9435)
!9442 = !DILocation(line: 46, column: 5, scope: !9435)
!9443 = !DILocation(line: 47, column: 10, scope: !9420)
!9444 = !DILocation(line: 47, column: 3, scope: !9420)
!9445 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9446, file: !9446, line: 53, type: !1074, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1527, retainedNodes: !206)
!9446 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mohamad/clone/coreutils")
!9447 = !DILocalVariable(name: "file", arg: 1, scope: !9445, file: !9446, line: 53, type: !177)
!9448 = !DILocation(line: 53, column: 34, scope: !9445)
!9449 = !DILocalVariable(name: "size", arg: 2, scope: !9445, file: !9446, line: 53, type: !52)
!9450 = !DILocation(line: 53, column: 47, scope: !9445)
!9451 = !DILocalVariable(name: "symlink_max", scope: !9445, file: !9446, line: 58, type: !52)
!9452 = !DILocation(line: 58, column: 10, scope: !9445)
!9453 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9445, file: !9446, line: 59, type: !52)
!9454 = !DILocation(line: 59, column: 10, scope: !9445)
!9455 = !DILocalVariable(name: "initial_limit", scope: !9445, file: !9446, line: 60, type: !52)
!9456 = !DILocation(line: 60, column: 10, scope: !9445)
!9457 = !DILocation(line: 60, column: 27, scope: !9445)
!9458 = !DILocation(line: 60, column: 41, scope: !9445)
!9459 = !DILocation(line: 60, column: 39, scope: !9445)
!9460 = !DILocation(line: 61, column: 29, scope: !9445)
!9461 = !DILocation(line: 61, column: 41, scope: !9445)
!9462 = !DILocation(line: 62, column: 29, scope: !9445)
!9463 = !DILocalVariable(name: "buf_size", scope: !9445, file: !9446, line: 67, type: !52)
!9464 = !DILocation(line: 67, column: 10, scope: !9445)
!9465 = !DILocation(line: 67, column: 22, scope: !9445)
!9466 = !DILocation(line: 67, column: 27, scope: !9445)
!9467 = !DILocation(line: 68, column: 24, scope: !9445)
!9468 = !DILocation(line: 68, column: 31, scope: !9445)
!9469 = !DILocation(line: 68, column: 29, scope: !9445)
!9470 = !DILocation(line: 68, column: 47, scope: !9445)
!9471 = !DILocation(line: 68, column: 52, scope: !9445)
!9472 = !DILocation(line: 68, column: 58, scope: !9445)
!9473 = !DILocation(line: 70, column: 3, scope: !9445)
!9474 = !DILocalVariable(name: "r", scope: !9475, file: !9446, line: 72, type: !674)
!9475 = distinct !DILexicalBlock(scope: !9445, file: !9446, line: 71, column: 5)
!9476 = !DILocation(line: 72, column: 15, scope: !9475)
!9477 = !DILocalVariable(name: "link_length", scope: !9475, file: !9446, line: 73, type: !52)
!9478 = !DILocation(line: 73, column: 14, scope: !9475)
!9479 = !DILocalVariable(name: "stackbuf", scope: !9475, file: !9446, line: 74, type: !1530)
!9480 = !DILocation(line: 74, column: 12, scope: !9475)
!9481 = !DILocalVariable(name: "buf", scope: !9475, file: !9446, line: 75, type: !7)
!9482 = !DILocation(line: 75, column: 13, scope: !9475)
!9483 = !DILocation(line: 75, column: 19, scope: !9475)
!9484 = !DILocalVariable(name: "buffer", scope: !9475, file: !9446, line: 76, type: !7)
!9485 = !DILocation(line: 76, column: 13, scope: !9475)
!9486 = !DILocation(line: 78, column: 14, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9475, file: !9446, line: 78, column: 11)
!9488 = !DILocation(line: 78, column: 19, scope: !9487)
!9489 = !DILocation(line: 78, column: 24, scope: !9487)
!9490 = !DILocation(line: 78, column: 27, scope: !9487)
!9491 = !DILocation(line: 78, column: 36, scope: !9487)
!9492 = !DILocation(line: 78, column: 11, scope: !9475)
!9493 = !DILocation(line: 80, column: 34, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9487, file: !9446, line: 79, column: 9)
!9495 = !DILocation(line: 80, column: 26, scope: !9494)
!9496 = !DILocation(line: 80, column: 24, scope: !9494)
!9497 = !DILocation(line: 80, column: 15, scope: !9494)
!9498 = !DILocation(line: 81, column: 16, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9494, file: !9446, line: 81, column: 15)
!9500 = !DILocation(line: 81, column: 15, scope: !9494)
!9501 = !DILocation(line: 82, column: 13, scope: !9499)
!9502 = !DILocation(line: 83, column: 9, scope: !9494)
!9503 = !DILocation(line: 85, column: 21, scope: !9475)
!9504 = !DILocation(line: 85, column: 27, scope: !9475)
!9505 = !DILocation(line: 85, column: 32, scope: !9475)
!9506 = !DILocation(line: 85, column: 11, scope: !9475)
!9507 = !DILocation(line: 85, column: 9, scope: !9475)
!9508 = !DILocation(line: 86, column: 21, scope: !9475)
!9509 = !DILocation(line: 86, column: 19, scope: !9475)
!9510 = !DILocation(line: 90, column: 11, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9475, file: !9446, line: 90, column: 11)
!9512 = !DILocation(line: 90, column: 13, scope: !9511)
!9513 = !DILocation(line: 90, column: 17, scope: !9511)
!9514 = !DILocation(line: 90, column: 20, scope: !9511)
!9515 = !DILocation(line: 90, column: 26, scope: !9511)
!9516 = !DILocation(line: 90, column: 11, scope: !9475)
!9517 = !DILocalVariable(name: "saved_errno", scope: !9518, file: !9446, line: 92, type: !5)
!9518 = distinct !DILexicalBlock(scope: !9511, file: !9446, line: 91, column: 9)
!9519 = !DILocation(line: 92, column: 15, scope: !9518)
!9520 = !DILocation(line: 92, column: 29, scope: !9518)
!9521 = !DILocation(line: 93, column: 17, scope: !9518)
!9522 = !DILocation(line: 93, column: 11, scope: !9518)
!9523 = !DILocation(line: 94, column: 19, scope: !9518)
!9524 = !DILocation(line: 94, column: 11, scope: !9518)
!9525 = !DILocation(line: 94, column: 17, scope: !9518)
!9526 = !DILocation(line: 95, column: 11, scope: !9518)
!9527 = !DILocation(line: 98, column: 11, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9475, file: !9446, line: 98, column: 11)
!9529 = !DILocation(line: 98, column: 25, scope: !9528)
!9530 = !DILocation(line: 98, column: 23, scope: !9528)
!9531 = !DILocation(line: 98, column: 11, scope: !9475)
!9532 = !DILocation(line: 100, column: 11, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9528, file: !9446, line: 99, column: 9)
!9534 = !DILocation(line: 100, column: 15, scope: !9533)
!9535 = !DILocation(line: 100, column: 28, scope: !9533)
!9536 = !DILocation(line: 101, column: 16, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9533, file: !9446, line: 101, column: 15)
!9538 = !DILocation(line: 101, column: 15, scope: !9533)
!9539 = !DILocation(line: 103, column: 32, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9537, file: !9446, line: 102, column: 13)
!9541 = !DILocation(line: 103, column: 44, scope: !9540)
!9542 = !DILocation(line: 103, column: 24, scope: !9540)
!9543 = !DILocation(line: 103, column: 22, scope: !9540)
!9544 = !DILocation(line: 104, column: 19, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9540, file: !9446, line: 104, column: 19)
!9546 = !DILocation(line: 104, column: 19, scope: !9540)
!9547 = !DILocation(line: 105, column: 32, scope: !9545)
!9548 = !DILocation(line: 105, column: 40, scope: !9545)
!9549 = !DILocation(line: 105, column: 45, scope: !9545)
!9550 = !DILocation(line: 105, column: 57, scope: !9545)
!9551 = !DILocation(line: 105, column: 24, scope: !9545)
!9552 = !DILocation(line: 105, column: 17, scope: !9545)
!9553 = !DILocation(line: 106, column: 13, scope: !9540)
!9554 = !DILocation(line: 107, column: 20, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9537, file: !9446, line: 107, column: 20)
!9556 = !DILocation(line: 107, column: 32, scope: !9555)
!9557 = !DILocation(line: 107, column: 38, scope: !9555)
!9558 = !DILocation(line: 107, column: 36, scope: !9555)
!9559 = !DILocation(line: 107, column: 20, scope: !9537)
!9560 = !DILocalVariable(name: "shrinked_buffer", scope: !9561, file: !9446, line: 110, type: !7)
!9561 = distinct !DILexicalBlock(scope: !9555, file: !9446, line: 108, column: 13)
!9562 = !DILocation(line: 110, column: 21, scope: !9561)
!9563 = !DILocation(line: 110, column: 48, scope: !9561)
!9564 = !DILocation(line: 110, column: 56, scope: !9561)
!9565 = !DILocation(line: 110, column: 68, scope: !9561)
!9566 = !DILocation(line: 110, column: 39, scope: !9561)
!9567 = !DILocation(line: 111, column: 19, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9561, file: !9446, line: 111, column: 19)
!9569 = !DILocation(line: 111, column: 35, scope: !9568)
!9570 = !DILocation(line: 111, column: 19, scope: !9561)
!9571 = !DILocation(line: 112, column: 26, scope: !9568)
!9572 = !DILocation(line: 112, column: 24, scope: !9568)
!9573 = !DILocation(line: 112, column: 17, scope: !9568)
!9574 = !DILocation(line: 113, column: 13, scope: !9561)
!9575 = !DILocation(line: 114, column: 18, scope: !9533)
!9576 = !DILocation(line: 114, column: 11, scope: !9533)
!9577 = !DILocation(line: 117, column: 13, scope: !9475)
!9578 = !DILocation(line: 117, column: 7, scope: !9475)
!9579 = !DILocation(line: 118, column: 11, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9475, file: !9446, line: 118, column: 11)
!9581 = !DILocation(line: 118, column: 20, scope: !9580)
!9582 = !DILocation(line: 118, column: 11, scope: !9475)
!9583 = !DILocation(line: 119, column: 18, scope: !9580)
!9584 = !DILocation(line: 119, column: 9, scope: !9580)
!9585 = !DILocation(line: 120, column: 16, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9580, file: !9446, line: 120, column: 16)
!9587 = !DILocation(line: 120, column: 25, scope: !9586)
!9588 = !DILocation(line: 120, column: 16, scope: !9580)
!9589 = !DILocation(line: 121, column: 18, scope: !9586)
!9590 = !DILocation(line: 121, column: 9, scope: !9586)
!9591 = !DILocation(line: 124, column: 11, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9586, file: !9446, line: 123, column: 9)
!9593 = !DILocation(line: 124, column: 17, scope: !9592)
!9594 = !DILocation(line: 125, column: 11, scope: !9592)
!9595 = distinct !{!9595, !9473, !9596}
!9596 = !DILocation(line: 127, column: 5, scope: !9445)
!9597 = !DILocation(line: 128, column: 1, scope: !9445)
!9598 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !665, file: !665, line: 88, type: !199, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !661, retainedNodes: !206)
!9599 = !DILocalVariable(name: "s", arg: 1, scope: !9598, file: !665, line: 88, type: !177)
!9600 = !DILocation(line: 88, column: 39, scope: !9598)
!9601 = !DILocation(line: 90, column: 8, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9598, file: !665, line: 90, column: 7)
!9603 = !DILocation(line: 90, column: 7, scope: !9598)
!9604 = !DILocation(line: 91, column: 9, scope: !9602)
!9605 = !DILocation(line: 91, column: 7, scope: !9602)
!9606 = !DILocation(line: 91, column: 5, scope: !9602)
!9607 = !DILocation(line: 92, column: 26, scope: !9598)
!9608 = !DILocation(line: 92, column: 28, scope: !9598)
!9609 = !DILocation(line: 92, column: 32, scope: !9598)
!9610 = !DILocation(line: 92, column: 31, scope: !9598)
!9611 = !DILocation(line: 92, column: 34, scope: !9598)
!9612 = !DILocation(line: 92, column: 37, scope: !9598)
!9613 = !DILocation(line: 92, column: 58, scope: !9598)
!9614 = !DILocation(line: 92, column: 42, scope: !9598)
!9615 = !DILocation(line: 92, column: 39, scope: !9598)
!9616 = !DILocation(line: 92, column: 63, scope: !9598)
!9617 = !DILocation(line: 92, column: 24, scope: !9598)
!9618 = !DILocation(line: 93, column: 1, scope: !9598)
!9619 = distinct !DISubprogram(name: "backupfile_internal", scope: !665, file: !665, line: 314, type: !672, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !661, retainedNodes: !206)
!9620 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9619, file: !665, line: 314, type: !5)
!9621 = !DILocation(line: 314, column: 26, scope: !9619)
!9622 = !DILocalVariable(name: "file", arg: 2, scope: !9619, file: !665, line: 314, type: !177)
!9623 = !DILocation(line: 314, column: 46, scope: !9619)
!9624 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9619, file: !665, line: 315, type: !65)
!9625 = !DILocation(line: 315, column: 39, scope: !9619)
!9626 = !DILocalVariable(name: "rename", arg: 4, scope: !9619, file: !665, line: 315, type: !139)
!9627 = !DILocation(line: 315, column: 57, scope: !9619)
!9628 = !DILocalVariable(name: "base_offset", scope: !9619, file: !665, line: 317, type: !634)
!9629 = !DILocation(line: 317, column: 13, scope: !9619)
!9630 = !DILocation(line: 317, column: 43, scope: !9619)
!9631 = !DILocation(line: 317, column: 27, scope: !9619)
!9632 = !DILocation(line: 317, column: 51, scope: !9619)
!9633 = !DILocation(line: 317, column: 49, scope: !9619)
!9634 = !DILocalVariable(name: "filelen", scope: !9619, file: !665, line: 318, type: !52)
!9635 = !DILocation(line: 318, column: 10, scope: !9619)
!9636 = !DILocation(line: 318, column: 20, scope: !9619)
!9637 = !DILocation(line: 318, column: 42, scope: !9619)
!9638 = !DILocation(line: 318, column: 49, scope: !9619)
!9639 = !DILocation(line: 318, column: 47, scope: !9619)
!9640 = !DILocation(line: 318, column: 34, scope: !9619)
!9641 = !DILocation(line: 318, column: 32, scope: !9619)
!9642 = !DILocation(line: 320, column: 9, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9619, file: !665, line: 320, column: 7)
!9644 = !DILocation(line: 320, column: 7, scope: !9619)
!9645 = !DILocation(line: 321, column: 5, scope: !9643)
!9646 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !9619, file: !665, line: 325, type: !52)
!9647 = !DILocation(line: 325, column: 10, scope: !9619)
!9648 = !DILocation(line: 325, column: 46, scope: !9619)
!9649 = !DILocation(line: 325, column: 38, scope: !9619)
!9650 = !DILocation(line: 325, column: 68, scope: !9619)
!9651 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !9619, file: !665, line: 326, type: !52)
!9652 = !DILocation(line: 326, column: 10, scope: !9619)
!9653 = !DILocation(line: 326, column: 37, scope: !9619)
!9654 = !DILocation(line: 328, column: 7, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9619, file: !665, line: 328, column: 7)
!9656 = !DILocation(line: 328, column: 32, scope: !9655)
!9657 = !DILocation(line: 328, column: 7, scope: !9619)
!9658 = !DILocation(line: 329, column: 30, scope: !9655)
!9659 = !DILocation(line: 329, column: 5, scope: !9655)
!9660 = !DILocalVariable(name: "ssize", scope: !9619, file: !665, line: 331, type: !674)
!9661 = !DILocation(line: 331, column: 11, scope: !9619)
!9662 = !DILocation(line: 331, column: 19, scope: !9619)
!9663 = !DILocation(line: 331, column: 29, scope: !9619)
!9664 = !DILocation(line: 331, column: 27, scope: !9619)
!9665 = !DILocation(line: 331, column: 54, scope: !9619)
!9666 = !DILocalVariable(name: "s", scope: !9619, file: !665, line: 332, type: !7)
!9667 = !DILocation(line: 332, column: 9, scope: !9619)
!9668 = !DILocation(line: 332, column: 21, scope: !9619)
!9669 = !DILocation(line: 332, column: 13, scope: !9619)
!9670 = !DILocation(line: 333, column: 8, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9619, file: !665, line: 333, column: 7)
!9672 = !DILocation(line: 333, column: 7, scope: !9619)
!9673 = !DILocation(line: 334, column: 12, scope: !9671)
!9674 = !DILocation(line: 334, column: 5, scope: !9671)
!9675 = !DILocalVariable(name: "dirp", scope: !9619, file: !665, line: 336, type: !675)
!9676 = !DILocation(line: 336, column: 8, scope: !9619)
!9677 = !DILocalVariable(name: "sdir", scope: !9619, file: !665, line: 337, type: !5)
!9678 = !DILocation(line: 337, column: 7, scope: !9619)
!9679 = !DILocalVariable(name: "base_max", scope: !9619, file: !665, line: 338, type: !52)
!9680 = !DILocation(line: 338, column: 10, scope: !9619)
!9681 = !DILocation(line: 339, column: 3, scope: !9619)
!9682 = !DILocation(line: 341, column: 15, scope: !9683)
!9683 = distinct !DILexicalBlock(scope: !9619, file: !665, line: 340, column: 5)
!9684 = !DILocation(line: 341, column: 18, scope: !9683)
!9685 = !DILocation(line: 341, column: 24, scope: !9683)
!9686 = !DILocation(line: 341, column: 32, scope: !9683)
!9687 = !DILocation(line: 341, column: 7, scope: !9683)
!9688 = !DILocation(line: 343, column: 11, scope: !9689)
!9689 = distinct !DILexicalBlock(scope: !9683, file: !665, line: 343, column: 11)
!9690 = !DILocation(line: 343, column: 23, scope: !9689)
!9691 = !DILocation(line: 343, column: 11, scope: !9683)
!9692 = !DILocation(line: 344, column: 17, scope: !9689)
!9693 = !DILocation(line: 344, column: 21, scope: !9689)
!9694 = !DILocation(line: 344, column: 19, scope: !9689)
!9695 = !DILocation(line: 344, column: 30, scope: !9689)
!9696 = !DILocation(line: 344, column: 52, scope: !9689)
!9697 = !DILocation(line: 344, column: 9, scope: !9689)
!9698 = !DILocation(line: 346, column: 34, scope: !9689)
!9699 = !DILocation(line: 346, column: 46, scope: !9689)
!9700 = !DILocation(line: 346, column: 53, scope: !9689)
!9701 = !DILocation(line: 346, column: 62, scope: !9689)
!9702 = !DILocation(line: 346, column: 17, scope: !9689)
!9703 = !DILocation(line: 346, column: 9, scope: !9689)
!9704 = !DILocation(line: 350, column: 13, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9689, file: !665, line: 348, column: 11)
!9706 = !DILocation(line: 353, column: 17, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9705, file: !665, line: 353, column: 17)
!9708 = !DILocation(line: 353, column: 29, scope: !9707)
!9709 = !DILocation(line: 353, column: 17, scope: !9705)
!9710 = !DILocation(line: 355, column: 29, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9707, file: !665, line: 354, column: 15)
!9712 = !DILocation(line: 356, column: 25, scope: !9711)
!9713 = !DILocation(line: 356, column: 29, scope: !9711)
!9714 = !DILocation(line: 356, column: 27, scope: !9711)
!9715 = !DILocation(line: 356, column: 38, scope: !9711)
!9716 = !DILocation(line: 357, column: 25, scope: !9711)
!9717 = !DILocation(line: 356, column: 17, scope: !9711)
!9718 = !DILocation(line: 358, column: 15, scope: !9711)
!9719 = !DILocation(line: 359, column: 13, scope: !9705)
!9720 = !DILocation(line: 361, column: 30, scope: !9705)
!9721 = !DILocation(line: 361, column: 33, scope: !9705)
!9722 = !DILocation(line: 361, column: 47, scope: !9705)
!9723 = !DILocation(line: 361, column: 13, scope: !9705)
!9724 = !DILocation(line: 362, column: 13, scope: !9705)
!9725 = !DILocation(line: 365, column: 17, scope: !9726)
!9726 = distinct !DILexicalBlock(scope: !9705, file: !665, line: 365, column: 17)
!9727 = !DILocation(line: 365, column: 17, scope: !9705)
!9728 = !DILocation(line: 366, column: 25, scope: !9726)
!9729 = !DILocation(line: 366, column: 15, scope: !9726)
!9730 = !DILocation(line: 367, column: 19, scope: !9705)
!9731 = !DILocation(line: 367, column: 13, scope: !9705)
!9732 = !DILocation(line: 368, column: 13, scope: !9705)
!9733 = !DILocation(line: 368, column: 19, scope: !9705)
!9734 = !DILocation(line: 369, column: 13, scope: !9705)
!9735 = !DILocation(line: 372, column: 13, scope: !9736)
!9736 = distinct !DILexicalBlock(scope: !9683, file: !665, line: 372, column: 11)
!9737 = !DILocation(line: 372, column: 11, scope: !9683)
!9738 = !DILocation(line: 373, column: 9, scope: !9736)
!9739 = !DILocation(line: 375, column: 11, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9683, file: !665, line: 375, column: 11)
!9741 = !DILocation(line: 375, column: 16, scope: !9740)
!9742 = !DILocation(line: 375, column: 11, scope: !9683)
!9743 = !DILocation(line: 377, column: 16, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9740, file: !665, line: 376, column: 9)
!9745 = !DILocation(line: 378, column: 23, scope: !9744)
!9746 = !DILocation(line: 379, column: 9, scope: !9744)
!9747 = !DILocalVariable(name: "flags", scope: !9683, file: !665, line: 380, type: !67)
!9748 = !DILocation(line: 380, column: 16, scope: !9683)
!9749 = !DILocation(line: 380, column: 24, scope: !9683)
!9750 = !DILocation(line: 380, column: 36, scope: !9683)
!9751 = !DILocation(line: 381, column: 32, scope: !9752)
!9752 = distinct !DILexicalBlock(scope: !9683, file: !665, line: 381, column: 11)
!9753 = !DILocation(line: 381, column: 38, scope: !9752)
!9754 = !DILocation(line: 381, column: 44, scope: !9752)
!9755 = !DILocation(line: 381, column: 48, scope: !9752)
!9756 = !DILocation(line: 381, column: 46, scope: !9752)
!9757 = !DILocation(line: 381, column: 61, scope: !9752)
!9758 = !DILocation(line: 381, column: 11, scope: !9752)
!9759 = !DILocation(line: 381, column: 68, scope: !9752)
!9760 = !DILocation(line: 381, column: 11, scope: !9683)
!9761 = !DILocation(line: 382, column: 9, scope: !9752)
!9762 = !DILocalVariable(name: "e", scope: !9683, file: !665, line: 383, type: !5)
!9763 = !DILocation(line: 383, column: 11, scope: !9683)
!9764 = !DILocation(line: 383, column: 15, scope: !9683)
!9765 = !DILocation(line: 384, column: 11, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9683, file: !665, line: 384, column: 11)
!9767 = !DILocation(line: 384, column: 13, scope: !9766)
!9768 = !DILocation(line: 384, column: 11, scope: !9683)
!9769 = !DILocation(line: 386, column: 15, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9771, file: !665, line: 386, column: 15)
!9771 = distinct !DILexicalBlock(scope: !9766, file: !665, line: 385, column: 9)
!9772 = !DILocation(line: 386, column: 15, scope: !9771)
!9773 = !DILocation(line: 387, column: 23, scope: !9770)
!9774 = !DILocation(line: 387, column: 13, scope: !9770)
!9775 = !DILocation(line: 388, column: 17, scope: !9771)
!9776 = !DILocation(line: 388, column: 11, scope: !9771)
!9777 = !DILocation(line: 389, column: 19, scope: !9771)
!9778 = !DILocation(line: 389, column: 11, scope: !9771)
!9779 = !DILocation(line: 389, column: 17, scope: !9771)
!9780 = !DILocation(line: 390, column: 11, scope: !9771)
!9781 = distinct !{!9781, !9681, !9782}
!9782 = !DILocation(line: 392, column: 5, scope: !9619)
!9783 = !DILocation(line: 394, column: 7, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9619, file: !665, line: 394, column: 7)
!9785 = !DILocation(line: 394, column: 7, scope: !9619)
!9786 = !DILocation(line: 395, column: 15, scope: !9784)
!9787 = !DILocation(line: 395, column: 5, scope: !9784)
!9788 = !DILocation(line: 396, column: 10, scope: !9619)
!9789 = !DILocation(line: 396, column: 3, scope: !9619)
!9790 = !DILocation(line: 397, column: 1, scope: !9619)
!9791 = distinct !DISubprogram(name: "numbered_backup", scope: !665, file: !665, line: 207, type: !679, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !661, retainedNodes: !206)
!9792 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9791, file: !665, line: 207, type: !5)
!9793 = !DILocation(line: 207, column: 22, scope: !9791)
!9794 = !DILocalVariable(name: "buffer", arg: 2, scope: !9791, file: !665, line: 207, type: !181)
!9795 = !DILocation(line: 207, column: 37, scope: !9791)
!9796 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !9791, file: !665, line: 207, type: !52)
!9797 = !DILocation(line: 207, column: 52, scope: !9791)
!9798 = !DILocalVariable(name: "filelen", arg: 4, scope: !9791, file: !665, line: 207, type: !52)
!9799 = !DILocation(line: 207, column: 72, scope: !9791)
!9800 = !DILocalVariable(name: "base_offset", arg: 5, scope: !9791, file: !665, line: 208, type: !634)
!9801 = !DILocation(line: 208, column: 28, scope: !9791)
!9802 = !DILocalVariable(name: "dirpp", arg: 6, scope: !9791, file: !665, line: 208, type: !681)
!9803 = !DILocation(line: 208, column: 47, scope: !9791)
!9804 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !9791, file: !665, line: 208, type: !190)
!9805 = !DILocation(line: 208, column: 59, scope: !9791)
!9806 = !DILocalVariable(name: "result", scope: !9791, file: !665, line: 210, type: !664)
!9807 = !DILocation(line: 210, column: 31, scope: !9791)
!9808 = !DILocalVariable(name: "dirp", scope: !9791, file: !665, line: 211, type: !675)
!9809 = !DILocation(line: 211, column: 8, scope: !9791)
!9810 = !DILocation(line: 211, column: 16, scope: !9791)
!9811 = !DILocation(line: 211, column: 15, scope: !9791)
!9812 = !DILocalVariable(name: "dp", scope: !9791, file: !665, line: 212, type: !682)
!9813 = !DILocation(line: 212, column: 18, scope: !9791)
!9814 = !DILocalVariable(name: "buf", scope: !9791, file: !665, line: 213, type: !7)
!9815 = !DILocation(line: 213, column: 9, scope: !9791)
!9816 = !DILocation(line: 213, column: 16, scope: !9791)
!9817 = !DILocation(line: 213, column: 15, scope: !9791)
!9818 = !DILocalVariable(name: "versionlenmax", scope: !9791, file: !665, line: 214, type: !52)
!9819 = !DILocation(line: 214, column: 10, scope: !9791)
!9820 = !DILocalVariable(name: "base", scope: !9791, file: !665, line: 215, type: !7)
!9821 = !DILocation(line: 215, column: 9, scope: !9791)
!9822 = !DILocation(line: 215, column: 16, scope: !9791)
!9823 = !DILocation(line: 215, column: 22, scope: !9791)
!9824 = !DILocation(line: 215, column: 20, scope: !9791)
!9825 = !DILocalVariable(name: "baselen", scope: !9791, file: !665, line: 216, type: !52)
!9826 = !DILocation(line: 216, column: 10, scope: !9791)
!9827 = !DILocation(line: 216, column: 30, scope: !9791)
!9828 = !DILocation(line: 216, column: 20, scope: !9791)
!9829 = !DILocation(line: 218, column: 7, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9791, file: !665, line: 218, column: 7)
!9831 = !DILocation(line: 218, column: 7, scope: !9791)
!9832 = !DILocation(line: 219, column: 16, scope: !9830)
!9833 = !DILocation(line: 219, column: 5, scope: !9830)
!9834 = !DILocalVariable(name: "tmp", scope: !9835, file: !665, line: 224, type: !691)
!9835 = distinct !DILexicalBlock(scope: !9830, file: !665, line: 221, column: 5)
!9836 = !DILocation(line: 224, column: 12, scope: !9835)
!9837 = !DILocation(line: 225, column: 7, scope: !9835)
!9838 = !DILocation(line: 225, column: 20, scope: !9835)
!9839 = !DILocation(line: 226, column: 15, scope: !9835)
!9840 = !DILocation(line: 226, column: 7, scope: !9835)
!9841 = !DILocation(line: 227, column: 25, scope: !9835)
!9842 = !DILocation(line: 227, column: 33, scope: !9835)
!9843 = !DILocation(line: 227, column: 41, scope: !9835)
!9844 = !DILocation(line: 227, column: 14, scope: !9835)
!9845 = !DILocation(line: 227, column: 12, scope: !9835)
!9846 = !DILocation(line: 228, column: 12, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9835, file: !665, line: 228, column: 11)
!9848 = !DILocation(line: 228, column: 17, scope: !9847)
!9849 = !DILocation(line: 228, column: 20, scope: !9847)
!9850 = !DILocation(line: 228, column: 26, scope: !9847)
!9851 = !DILocation(line: 228, column: 11, scope: !9835)
!9852 = !DILocation(line: 229, column: 16, scope: !9847)
!9853 = !DILocation(line: 229, column: 9, scope: !9847)
!9854 = !DILocation(line: 230, column: 15, scope: !9835)
!9855 = !DILocation(line: 230, column: 7, scope: !9835)
!9856 = !DILocation(line: 231, column: 15, scope: !9835)
!9857 = !DILocation(line: 231, column: 22, scope: !9835)
!9858 = !DILocation(line: 231, column: 20, scope: !9835)
!9859 = !DILocation(line: 231, column: 7, scope: !9835)
!9860 = !DILocation(line: 232, column: 12, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9835, file: !665, line: 232, column: 11)
!9862 = !DILocation(line: 232, column: 11, scope: !9835)
!9863 = !DILocation(line: 233, column: 16, scope: !9861)
!9864 = !DILocation(line: 233, column: 9, scope: !9861)
!9865 = !DILocation(line: 234, column: 16, scope: !9835)
!9866 = !DILocation(line: 234, column: 8, scope: !9835)
!9867 = !DILocation(line: 234, column: 14, scope: !9835)
!9868 = !DILocation(line: 237, column: 3, scope: !9791)
!9869 = !DILocation(line: 237, column: 25, scope: !9791)
!9870 = !DILocation(line: 237, column: 16, scope: !9791)
!9871 = !DILocation(line: 237, column: 14, scope: !9791)
!9872 = !DILocation(line: 237, column: 32, scope: !9791)
!9873 = !DILocalVariable(name: "p", scope: !9874, file: !665, line: 239, type: !177)
!9874 = distinct !DILexicalBlock(scope: !9791, file: !665, line: 238, column: 5)
!9875 = !DILocation(line: 239, column: 19, scope: !9874)
!9876 = !DILocalVariable(name: "q", scope: !9874, file: !665, line: 240, type: !7)
!9877 = !DILocation(line: 240, column: 13, scope: !9874)
!9878 = !DILocalVariable(name: "all_9s", scope: !9874, file: !665, line: 241, type: !139)
!9879 = !DILocation(line: 241, column: 12, scope: !9874)
!9880 = !DILocalVariable(name: "versionlen", scope: !9874, file: !665, line: 242, type: !52)
!9881 = !DILocation(line: 242, column: 14, scope: !9874)
!9882 = !DILocation(line: 244, column: 11, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9874, file: !665, line: 244, column: 11)
!9884 = !DILocation(line: 244, column: 34, scope: !9883)
!9885 = !DILocation(line: 244, column: 42, scope: !9883)
!9886 = !DILocation(line: 244, column: 32, scope: !9883)
!9887 = !DILocation(line: 244, column: 11, scope: !9874)
!9888 = !DILocation(line: 245, column: 9, scope: !9883)
!9889 = distinct !{!9889, !9868, !9890}
!9890 = !DILocation(line: 301, column: 5, scope: !9791)
!9891 = !DILocation(line: 247, column: 19, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9874, file: !665, line: 247, column: 11)
!9893 = !DILocation(line: 247, column: 25, scope: !9892)
!9894 = !DILocation(line: 247, column: 23, scope: !9892)
!9895 = !DILocation(line: 247, column: 38, scope: !9892)
!9896 = !DILocation(line: 247, column: 42, scope: !9892)
!9897 = !DILocation(line: 247, column: 50, scope: !9892)
!9898 = !DILocation(line: 247, column: 58, scope: !9892)
!9899 = !DILocation(line: 247, column: 11, scope: !9892)
!9900 = !DILocation(line: 247, column: 63, scope: !9892)
!9901 = !DILocation(line: 247, column: 11, scope: !9874)
!9902 = !DILocation(line: 248, column: 9, scope: !9892)
!9903 = !DILocation(line: 250, column: 11, scope: !9874)
!9904 = !DILocation(line: 250, column: 15, scope: !9874)
!9905 = !DILocation(line: 250, column: 24, scope: !9874)
!9906 = !DILocation(line: 250, column: 22, scope: !9874)
!9907 = !DILocation(line: 250, column: 32, scope: !9874)
!9908 = !DILocation(line: 250, column: 9, scope: !9874)
!9909 = !DILocation(line: 256, column: 22, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9874, file: !665, line: 256, column: 11)
!9911 = !DILocation(line: 256, column: 21, scope: !9910)
!9912 = !DILocation(line: 256, column: 18, scope: !9910)
!9913 = !DILocation(line: 256, column: 24, scope: !9910)
!9914 = !DILocation(line: 256, column: 28, scope: !9910)
!9915 = !DILocation(line: 256, column: 27, scope: !9910)
!9916 = !DILocation(line: 256, column: 30, scope: !9910)
!9917 = !DILocation(line: 256, column: 11, scope: !9874)
!9918 = !DILocation(line: 257, column: 9, scope: !9910)
!9919 = !DILocation(line: 258, column: 18, scope: !9874)
!9920 = !DILocation(line: 258, column: 17, scope: !9874)
!9921 = !DILocation(line: 258, column: 20, scope: !9874)
!9922 = !DILocation(line: 258, column: 14, scope: !9874)
!9923 = !DILocation(line: 259, column: 23, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9874, file: !665, line: 259, column: 7)
!9925 = !DILocation(line: 259, column: 12, scope: !9924)
!9926 = !DILocation(line: 259, column: 28, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9924, file: !665, line: 259, column: 7)
!9928 = !DILocation(line: 259, column: 7, scope: !9924)
!9929 = !DILocation(line: 260, column: 20, scope: !9927)
!9930 = !DILocation(line: 260, column: 22, scope: !9927)
!9931 = !DILocation(line: 260, column: 34, scope: !9927)
!9932 = !DILocation(line: 260, column: 16, scope: !9927)
!9933 = !DILocation(line: 260, column: 9, scope: !9927)
!9934 = !DILocation(line: 259, column: 63, scope: !9927)
!9935 = !DILocation(line: 259, column: 7, scope: !9927)
!9936 = distinct !{!9936, !9928, !9937}
!9937 = !DILocation(line: 260, column: 40, scope: !9924)
!9938 = !DILocation(line: 262, column: 14, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9874, file: !665, line: 262, column: 11)
!9940 = !DILocation(line: 262, column: 16, scope: !9939)
!9941 = !DILocation(line: 262, column: 28, scope: !9939)
!9942 = !DILocation(line: 262, column: 35, scope: !9939)
!9943 = !DILocation(line: 262, column: 39, scope: !9939)
!9944 = !DILocation(line: 262, column: 41, scope: !9939)
!9945 = !DILocation(line: 262, column: 52, scope: !9939)
!9946 = !DILocation(line: 263, column: 14, scope: !9939)
!9947 = !DILocation(line: 263, column: 18, scope: !9939)
!9948 = !DILocation(line: 263, column: 34, scope: !9939)
!9949 = !DILocation(line: 263, column: 32, scope: !9939)
!9950 = !DILocation(line: 264, column: 18, scope: !9939)
!9951 = !DILocation(line: 264, column: 22, scope: !9939)
!9952 = !DILocation(line: 264, column: 39, scope: !9939)
!9953 = !DILocation(line: 264, column: 36, scope: !9939)
!9954 = !DILocation(line: 265, column: 22, scope: !9939)
!9955 = !DILocation(line: 265, column: 33, scope: !9939)
!9956 = !DILocation(line: 265, column: 39, scope: !9939)
!9957 = !DILocation(line: 265, column: 37, scope: !9939)
!9958 = !DILocation(line: 265, column: 47, scope: !9939)
!9959 = !DILocation(line: 265, column: 52, scope: !9939)
!9960 = !DILocation(line: 265, column: 55, scope: !9939)
!9961 = !DILocation(line: 265, column: 25, scope: !9939)
!9962 = !DILocation(line: 265, column: 67, scope: !9939)
!9963 = !DILocation(line: 262, column: 11, scope: !9874)
!9964 = !DILocation(line: 266, column: 9, scope: !9939)
!9965 = !DILocation(line: 272, column: 23, scope: !9874)
!9966 = !DILocation(line: 272, column: 32, scope: !9874)
!9967 = !DILocation(line: 272, column: 30, scope: !9874)
!9968 = !DILocation(line: 272, column: 21, scope: !9874)
!9969 = !DILocation(line: 273, column: 17, scope: !9874)
!9970 = !DILocation(line: 273, column: 14, scope: !9874)
!9971 = !DILocalVariable(name: "new_buffer_size", scope: !9874, file: !665, line: 274, type: !52)
!9972 = !DILocation(line: 274, column: 14, scope: !9874)
!9973 = !DILocation(line: 274, column: 32, scope: !9874)
!9974 = !DILocation(line: 274, column: 40, scope: !9874)
!9975 = !DILocation(line: 274, column: 46, scope: !9874)
!9976 = !DILocation(line: 274, column: 44, scope: !9874)
!9977 = !DILocation(line: 274, column: 60, scope: !9874)
!9978 = !DILocation(line: 275, column: 11, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9874, file: !665, line: 275, column: 11)
!9980 = !DILocation(line: 275, column: 25, scope: !9979)
!9981 = !DILocation(line: 275, column: 23, scope: !9979)
!9982 = !DILocation(line: 275, column: 11, scope: !9874)
!9983 = !DILocation(line: 277, column: 17, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !665, line: 277, column: 15)
!9985 = distinct !DILexicalBlock(scope: !9979, file: !665, line: 276, column: 9)
!9986 = !DILocation(line: 277, column: 15, scope: !9985)
!9987 = !DILocation(line: 278, column: 29, scope: !9984)
!9988 = !DILocation(line: 278, column: 13, scope: !9984)
!9989 = !DILocalVariable(name: "new_buf", scope: !9985, file: !665, line: 279, type: !7)
!9990 = !DILocation(line: 279, column: 17, scope: !9985)
!9991 = !DILocation(line: 279, column: 36, scope: !9985)
!9992 = !DILocation(line: 279, column: 41, scope: !9985)
!9993 = !DILocation(line: 279, column: 27, scope: !9985)
!9994 = !DILocation(line: 280, column: 16, scope: !9995)
!9995 = distinct !DILexicalBlock(scope: !9985, file: !665, line: 280, column: 15)
!9996 = !DILocation(line: 280, column: 15, scope: !9985)
!9997 = !DILocation(line: 282, column: 25, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9995, file: !665, line: 281, column: 13)
!9999 = !DILocation(line: 282, column: 16, scope: !9998)
!10000 = !DILocation(line: 282, column: 23, scope: !9998)
!10001 = !DILocation(line: 283, column: 15, scope: !9998)
!10002 = !DILocation(line: 285, column: 17, scope: !9985)
!10003 = !DILocation(line: 285, column: 15, scope: !9985)
!10004 = !DILocation(line: 286, column: 25, scope: !9985)
!10005 = !DILocation(line: 286, column: 23, scope: !9985)
!10006 = !DILocation(line: 287, column: 9, scope: !9985)
!10007 = !DILocation(line: 288, column: 11, scope: !9874)
!10008 = !DILocation(line: 288, column: 17, scope: !9874)
!10009 = !DILocation(line: 288, column: 15, scope: !9874)
!10010 = !DILocation(line: 288, column: 9, scope: !9874)
!10011 = !DILocation(line: 289, column: 9, scope: !9874)
!10012 = !DILocation(line: 289, column: 12, scope: !9874)
!10013 = !DILocation(line: 290, column: 9, scope: !9874)
!10014 = !DILocation(line: 290, column: 12, scope: !9874)
!10015 = !DILocation(line: 291, column: 8, scope: !9874)
!10016 = !DILocation(line: 291, column: 10, scope: !9874)
!10017 = !DILocation(line: 292, column: 12, scope: !9874)
!10018 = !DILocation(line: 292, column: 9, scope: !9874)
!10019 = !DILocation(line: 293, column: 15, scope: !9874)
!10020 = !DILocation(line: 293, column: 18, scope: !9874)
!10021 = !DILocation(line: 293, column: 21, scope: !9874)
!10022 = !DILocation(line: 293, column: 32, scope: !9874)
!10023 = !DILocation(line: 293, column: 7, scope: !9874)
!10024 = !DILocation(line: 297, column: 12, scope: !9874)
!10025 = !DILocation(line: 297, column: 9, scope: !9874)
!10026 = !DILocation(line: 298, column: 7, scope: !9874)
!10027 = !DILocation(line: 298, column: 15, scope: !9874)
!10028 = !DILocation(line: 298, column: 14, scope: !9874)
!10029 = !DILocation(line: 298, column: 19, scope: !9874)
!10030 = !DILocation(line: 299, column: 10, scope: !9874)
!10031 = !DILocation(line: 299, column: 12, scope: !9874)
!10032 = distinct !{!10032, !10026, !10033}
!10033 = !DILocation(line: 299, column: 14, scope: !9874)
!10034 = !DILocation(line: 300, column: 10, scope: !9874)
!10035 = !DILocation(line: 300, column: 7, scope: !9874)
!10036 = !DILocation(line: 303, column: 13, scope: !9791)
!10037 = !DILocation(line: 303, column: 4, scope: !9791)
!10038 = !DILocation(line: 303, column: 11, scope: !9791)
!10039 = !DILocation(line: 304, column: 10, scope: !9791)
!10040 = !DILocation(line: 304, column: 3, scope: !9791)
!10041 = !DILocation(line: 305, column: 1, scope: !9791)
!10042 = distinct !DISubprogram(name: "check_extension", scope: !665, file: !665, line: 105, type: !692, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !661, retainedNodes: !206)
!10043 = !DILocalVariable(name: "file", arg: 1, scope: !10042, file: !665, line: 105, type: !7)
!10044 = !DILocation(line: 105, column: 24, scope: !10042)
!10045 = !DILocalVariable(name: "filelen", arg: 2, scope: !10042, file: !665, line: 105, type: !52)
!10046 = !DILocation(line: 105, column: 37, scope: !10042)
!10047 = !DILocalVariable(name: "e", arg: 3, scope: !10042, file: !665, line: 105, type: !8)
!10048 = !DILocation(line: 105, column: 51, scope: !10042)
!10049 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !10042, file: !665, line: 106, type: !5)
!10050 = !DILocation(line: 106, column: 22, scope: !10042)
!10051 = !DILocalVariable(name: "base_max", arg: 5, scope: !10042, file: !665, line: 106, type: !694)
!10052 = !DILocation(line: 106, column: 38, scope: !10042)
!10053 = !DILocalVariable(name: "base", scope: !10042, file: !665, line: 108, type: !7)
!10054 = !DILocation(line: 108, column: 9, scope: !10042)
!10055 = !DILocation(line: 108, column: 32, scope: !10042)
!10056 = !DILocation(line: 108, column: 16, scope: !10042)
!10057 = !DILocalVariable(name: "baselen", scope: !10042, file: !665, line: 109, type: !52)
!10058 = !DILocation(line: 109, column: 10, scope: !10042)
!10059 = !DILocation(line: 109, column: 30, scope: !10042)
!10060 = !DILocation(line: 109, column: 20, scope: !10042)
!10061 = !DILocalVariable(name: "baselen_max", scope: !10042, file: !665, line: 110, type: !52)
!10062 = !DILocation(line: 110, column: 10, scope: !10042)
!10063 = !DILocation(line: 112, column: 49, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10042, file: !665, line: 112, column: 7)
!10065 = !DILocation(line: 112, column: 47, scope: !10064)
!10066 = !DILocation(line: 112, column: 7, scope: !10042)
!10067 = !DILocation(line: 115, column: 12, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !10069, file: !665, line: 115, column: 11)
!10069 = distinct !DILexicalBlock(scope: !10064, file: !665, line: 113, column: 5)
!10070 = !DILocation(line: 115, column: 11, scope: !10068)
!10071 = !DILocation(line: 115, column: 21, scope: !10068)
!10072 = !DILocation(line: 115, column: 11, scope: !10069)
!10073 = !DILocalVariable(name: "name_max", scope: !10074, file: !665, line: 117, type: !32)
!10074 = distinct !DILexicalBlock(scope: !10068, file: !665, line: 116, column: 9)
!10075 = !DILocation(line: 117, column: 16, scope: !10074)
!10076 = !DILocation(line: 118, column: 15, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10074, file: !665, line: 118, column: 15)
!10078 = !DILocation(line: 118, column: 22, scope: !10077)
!10079 = !DILocation(line: 118, column: 15, scope: !10074)
!10080 = !DILocalVariable(name: "tmp", scope: !10081, file: !665, line: 123, type: !691)
!10081 = distinct !DILexicalBlock(scope: !10077, file: !665, line: 119, column: 13)
!10082 = !DILocation(line: 123, column: 20, scope: !10081)
!10083 = !DILocation(line: 124, column: 15, scope: !10081)
!10084 = !DILocation(line: 124, column: 28, scope: !10081)
!10085 = !DILocation(line: 125, column: 23, scope: !10081)
!10086 = !DILocation(line: 125, column: 15, scope: !10081)
!10087 = !DILocation(line: 126, column: 15, scope: !10081)
!10088 = !DILocation(line: 126, column: 21, scope: !10081)
!10089 = !DILocation(line: 127, column: 36, scope: !10081)
!10090 = !DILocation(line: 127, column: 26, scope: !10081)
!10091 = !DILocation(line: 127, column: 24, scope: !10081)
!10092 = !DILocation(line: 128, column: 28, scope: !10081)
!10093 = !DILocation(line: 128, column: 27, scope: !10081)
!10094 = !DILocation(line: 128, column: 24, scope: !10081)
!10095 = !DILocation(line: 129, column: 23, scope: !10081)
!10096 = !DILocation(line: 129, column: 15, scope: !10081)
!10097 = !DILocation(line: 130, column: 13, scope: !10081)
!10098 = !DILocation(line: 133, column: 15, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10077, file: !665, line: 132, column: 13)
!10100 = !DILocation(line: 133, column: 21, scope: !10099)
!10101 = !DILocation(line: 134, column: 37, scope: !10099)
!10102 = !DILocation(line: 134, column: 26, scope: !10099)
!10103 = !DILocation(line: 134, column: 24, scope: !10099)
!10104 = !DILocation(line: 135, column: 28, scope: !10099)
!10105 = !DILocation(line: 135, column: 27, scope: !10099)
!10106 = !DILocation(line: 135, column: 24, scope: !10099)
!10107 = !DILocation(line: 138, column: 29, scope: !10074)
!10108 = !DILocation(line: 138, column: 26, scope: !10074)
!10109 = !DILocation(line: 138, column: 38, scope: !10074)
!10110 = !DILocation(line: 138, column: 41, scope: !10074)
!10111 = !DILocation(line: 138, column: 50, scope: !10074)
!10112 = !DILocation(line: 138, column: 24, scope: !10074)
!10113 = !DILocation(line: 138, column: 64, scope: !10074)
!10114 = !DILocation(line: 139, column: 26, scope: !10074)
!10115 = !DILocation(line: 139, column: 35, scope: !10074)
!10116 = !DILocation(line: 138, column: 12, scope: !10074)
!10117 = !DILocation(line: 138, column: 21, scope: !10074)
!10118 = !DILocation(line: 140, column: 9, scope: !10074)
!10119 = !DILocation(line: 142, column: 22, scope: !10069)
!10120 = !DILocation(line: 142, column: 21, scope: !10069)
!10121 = !DILocation(line: 142, column: 19, scope: !10069)
!10122 = !DILocation(line: 143, column: 5, scope: !10069)
!10123 = !DILocation(line: 160, column: 7, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10042, file: !665, line: 160, column: 7)
!10125 = !DILocation(line: 160, column: 21, scope: !10124)
!10126 = !DILocation(line: 160, column: 19, scope: !10124)
!10127 = !DILocation(line: 160, column: 7, scope: !10042)
!10128 = !DILocation(line: 162, column: 17, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10124, file: !665, line: 161, column: 5)
!10130 = !DILocation(line: 162, column: 24, scope: !10129)
!10131 = !DILocation(line: 162, column: 22, scope: !10129)
!10132 = !DILocation(line: 162, column: 34, scope: !10129)
!10133 = !DILocation(line: 162, column: 32, scope: !10129)
!10134 = !DILocation(line: 162, column: 15, scope: !10129)
!10135 = !DILocation(line: 163, column: 11, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10129, file: !665, line: 163, column: 11)
!10137 = !DILocation(line: 163, column: 26, scope: !10136)
!10138 = !DILocation(line: 163, column: 23, scope: !10136)
!10139 = !DILocation(line: 163, column: 11, scope: !10129)
!10140 = !DILocation(line: 164, column: 19, scope: !10136)
!10141 = !DILocation(line: 164, column: 31, scope: !10136)
!10142 = !DILocation(line: 164, column: 17, scope: !10136)
!10143 = !DILocation(line: 164, column: 9, scope: !10136)
!10144 = !DILocation(line: 165, column: 23, scope: !10129)
!10145 = !DILocation(line: 165, column: 7, scope: !10129)
!10146 = !DILocation(line: 165, column: 12, scope: !10129)
!10147 = !DILocation(line: 165, column: 21, scope: !10129)
!10148 = !DILocation(line: 166, column: 7, scope: !10129)
!10149 = !DILocation(line: 166, column: 12, scope: !10129)
!10150 = !DILocation(line: 166, column: 20, scope: !10129)
!10151 = !DILocation(line: 166, column: 25, scope: !10129)
!10152 = !DILocation(line: 167, column: 5, scope: !10129)
!10153 = !DILocation(line: 168, column: 1, scope: !10042)
!10154 = distinct !DISubprogram(name: "backup_file_rename", scope: !10155, file: !10155, line: 28, type: !702, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1533, retainedNodes: !206)
!10155 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mohamad/clone/coreutils")
!10156 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10154, file: !10155, line: 28, type: !5)
!10157 = !DILocation(line: 28, column: 25, scope: !10154)
!10158 = !DILocalVariable(name: "file", arg: 2, scope: !10154, file: !10155, line: 28, type: !177)
!10159 = !DILocation(line: 28, column: 45, scope: !10154)
!10160 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10154, file: !10155, line: 28, type: !65)
!10161 = !DILocation(line: 28, column: 68, scope: !10154)
!10162 = !DILocation(line: 30, column: 31, scope: !10154)
!10163 = !DILocation(line: 30, column: 39, scope: !10154)
!10164 = !DILocation(line: 30, column: 45, scope: !10154)
!10165 = !DILocation(line: 30, column: 10, scope: !10154)
!10166 = !DILocation(line: 30, column: 3, scope: !10154)
!10167 = distinct !DISubprogram(name: "find_backup_file_name", scope: !718, file: !718, line: 33, type: !702, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !698, retainedNodes: !206)
!10168 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10167, file: !718, line: 33, type: !5)
!10169 = !DILocation(line: 33, column: 28, scope: !10167)
!10170 = !DILocalVariable(name: "file", arg: 2, scope: !10167, file: !718, line: 33, type: !177)
!10171 = !DILocation(line: 33, column: 48, scope: !10167)
!10172 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10167, file: !718, line: 34, type: !65)
!10173 = !DILocation(line: 34, column: 41, scope: !10167)
!10174 = !DILocalVariable(name: "result", scope: !10167, file: !718, line: 36, type: !7)
!10175 = !DILocation(line: 36, column: 9, scope: !10167)
!10176 = !DILocation(line: 36, column: 39, scope: !10167)
!10177 = !DILocation(line: 36, column: 47, scope: !10167)
!10178 = !DILocation(line: 36, column: 53, scope: !10167)
!10179 = !DILocation(line: 36, column: 18, scope: !10167)
!10180 = !DILocation(line: 37, column: 8, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10167, file: !718, line: 37, column: 7)
!10182 = !DILocation(line: 37, column: 7, scope: !10167)
!10183 = !DILocation(line: 38, column: 5, scope: !10181)
!10184 = !DILocation(line: 39, column: 10, scope: !10167)
!10185 = !DILocation(line: 39, column: 3, scope: !10167)
!10186 = distinct !DISubprogram(name: "get_version", scope: !718, file: !718, line: 71, type: !704, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !698, retainedNodes: !206)
!10187 = !DILocalVariable(name: "context", arg: 1, scope: !10186, file: !718, line: 71, type: !177)
!10188 = !DILocation(line: 71, column: 26, scope: !10186)
!10189 = !DILocalVariable(name: "version", arg: 2, scope: !10186, file: !718, line: 71, type: !177)
!10190 = !DILocation(line: 71, column: 47, scope: !10186)
!10191 = !DILocation(line: 73, column: 7, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10186, file: !718, line: 73, column: 7)
!10193 = !DILocation(line: 73, column: 15, scope: !10192)
!10194 = !DILocation(line: 73, column: 20, scope: !10192)
!10195 = !DILocation(line: 73, column: 24, scope: !10192)
!10196 = !DILocation(line: 73, column: 23, scope: !10192)
!10197 = !DILocation(line: 73, column: 32, scope: !10192)
!10198 = !DILocation(line: 73, column: 7, scope: !10186)
!10199 = !DILocation(line: 74, column: 5, scope: !10192)
!10200 = !DILocation(line: 76, column: 12, scope: !10192)
!10201 = !DILocation(line: 76, column: 5, scope: !10192)
!10202 = !DILocation(line: 77, column: 1, scope: !10186)
!10203 = distinct !DISubprogram(name: "xget_version", scope: !718, file: !718, line: 87, type: !704, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !698, retainedNodes: !206)
!10204 = !DILocalVariable(name: "context", arg: 1, scope: !10203, file: !718, line: 87, type: !177)
!10205 = !DILocation(line: 87, column: 27, scope: !10203)
!10206 = !DILocalVariable(name: "version", arg: 2, scope: !10203, file: !718, line: 87, type: !177)
!10207 = !DILocation(line: 87, column: 48, scope: !10203)
!10208 = !DILocation(line: 89, column: 7, scope: !10209)
!10209 = distinct !DILexicalBlock(scope: !10203, file: !718, line: 89, column: 7)
!10210 = !DILocation(line: 89, column: 15, scope: !10209)
!10211 = !DILocation(line: 89, column: 19, scope: !10209)
!10212 = !DILocation(line: 89, column: 18, scope: !10209)
!10213 = !DILocation(line: 89, column: 7, scope: !10203)
!10214 = !DILocation(line: 90, column: 25, scope: !10209)
!10215 = !DILocation(line: 90, column: 34, scope: !10209)
!10216 = !DILocation(line: 90, column: 12, scope: !10209)
!10217 = !DILocation(line: 90, column: 5, scope: !10209)
!10218 = !DILocation(line: 92, column: 45, scope: !10209)
!10219 = !DILocation(line: 92, column: 12, scope: !10209)
!10220 = !DILocation(line: 92, column: 5, scope: !10209)
!10221 = !DILocation(line: 93, column: 1, scope: !10203)
!10222 = distinct !DISubprogram(name: "buffer_lcm", scope: !10223, file: !10223, line: 28, type: !1539, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1536, retainedNodes: !206)
!10223 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mohamad/clone/coreutils")
!10224 = !DILocalVariable(name: "a", arg: 1, scope: !10222, file: !10223, line: 28, type: !52)
!10225 = !DILocation(line: 28, column: 20, scope: !10222)
!10226 = !DILocalVariable(name: "b", arg: 2, scope: !10222, file: !10223, line: 28, type: !52)
!10227 = !DILocation(line: 28, column: 30, scope: !10222)
!10228 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !10222, file: !10223, line: 28, type: !52)
!10229 = !DILocation(line: 28, column: 40, scope: !10222)
!10230 = !DILocalVariable(name: "size", scope: !10222, file: !10223, line: 30, type: !52)
!10231 = !DILocation(line: 30, column: 10, scope: !10222)
!10232 = !DILocation(line: 33, column: 8, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10222, file: !10223, line: 33, column: 7)
!10234 = !DILocation(line: 33, column: 7, scope: !10222)
!10235 = !DILocation(line: 34, column: 12, scope: !10233)
!10236 = !DILocation(line: 34, column: 16, scope: !10233)
!10237 = !DILocation(line: 34, column: 10, scope: !10233)
!10238 = !DILocation(line: 34, column: 5, scope: !10233)
!10239 = !DILocation(line: 37, column: 11, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !10223, line: 37, column: 11)
!10241 = distinct !DILexicalBlock(scope: !10233, file: !10223, line: 36, column: 5)
!10242 = !DILocation(line: 37, column: 11, scope: !10241)
!10243 = !DILocalVariable(name: "lcm", scope: !10244, file: !10223, line: 42, type: !52)
!10244 = distinct !DILexicalBlock(scope: !10240, file: !10223, line: 38, column: 9)
!10245 = !DILocation(line: 42, column: 18, scope: !10244)
!10246 = !DILocalVariable(name: "m", scope: !10244, file: !10223, line: 42, type: !52)
!10247 = !DILocation(line: 42, column: 23, scope: !10244)
!10248 = !DILocalVariable(name: "n", scope: !10244, file: !10223, line: 42, type: !52)
!10249 = !DILocation(line: 42, column: 26, scope: !10244)
!10250 = !DILocalVariable(name: "q", scope: !10244, file: !10223, line: 42, type: !52)
!10251 = !DILocation(line: 42, column: 29, scope: !10244)
!10252 = !DILocalVariable(name: "r", scope: !10244, file: !10223, line: 42, type: !52)
!10253 = !DILocation(line: 42, column: 32, scope: !10244)
!10254 = !DILocation(line: 45, column: 20, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10244, file: !10223, line: 45, column: 11)
!10256 = !DILocation(line: 45, column: 18, scope: !10255)
!10257 = !DILocation(line: 45, column: 27, scope: !10255)
!10258 = !DILocation(line: 45, column: 25, scope: !10255)
!10259 = !DILocation(line: 45, column: 16, scope: !10255)
!10260 = !DILocation(line: 45, column: 36, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10255, file: !10223, line: 45, column: 11)
!10262 = !DILocation(line: 45, column: 40, scope: !10261)
!10263 = !DILocation(line: 45, column: 38, scope: !10261)
!10264 = !DILocation(line: 45, column: 34, scope: !10261)
!10265 = !DILocation(line: 45, column: 43, scope: !10261)
!10266 = !DILocation(line: 45, column: 11, scope: !10255)
!10267 = !DILocation(line: 46, column: 13, scope: !10261)
!10268 = !DILocation(line: 45, column: 54, scope: !10261)
!10269 = !DILocation(line: 45, column: 52, scope: !10261)
!10270 = !DILocation(line: 45, column: 61, scope: !10261)
!10271 = !DILocation(line: 45, column: 59, scope: !10261)
!10272 = !DILocation(line: 45, column: 11, scope: !10261)
!10273 = distinct !{!10273, !10266, !10274}
!10274 = !DILocation(line: 46, column: 13, scope: !10255)
!10275 = !DILocation(line: 49, column: 15, scope: !10244)
!10276 = !DILocation(line: 49, column: 19, scope: !10244)
!10277 = !DILocation(line: 49, column: 17, scope: !10244)
!10278 = !DILocation(line: 49, column: 13, scope: !10244)
!10279 = !DILocation(line: 50, column: 17, scope: !10244)
!10280 = !DILocation(line: 50, column: 21, scope: !10244)
!10281 = !DILocation(line: 50, column: 19, scope: !10244)
!10282 = !DILocation(line: 50, column: 15, scope: !10244)
!10283 = !DILocation(line: 51, column: 15, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10244, file: !10223, line: 51, column: 15)
!10285 = !DILocation(line: 51, column: 22, scope: !10284)
!10286 = !DILocation(line: 51, column: 19, scope: !10284)
!10287 = !DILocation(line: 51, column: 30, scope: !10284)
!10288 = !DILocation(line: 51, column: 33, scope: !10284)
!10289 = !DILocation(line: 51, column: 39, scope: !10284)
!10290 = !DILocation(line: 51, column: 37, scope: !10284)
!10291 = !DILocation(line: 51, column: 44, scope: !10284)
!10292 = !DILocation(line: 51, column: 41, scope: !10284)
!10293 = !DILocation(line: 51, column: 15, scope: !10244)
!10294 = !DILocation(line: 52, column: 20, scope: !10284)
!10295 = !DILocation(line: 52, column: 13, scope: !10284)
!10296 = !DILocation(line: 53, column: 9, scope: !10244)
!10297 = !DILocation(line: 55, column: 14, scope: !10241)
!10298 = !DILocation(line: 55, column: 12, scope: !10241)
!10299 = !DILocation(line: 58, column: 10, scope: !10222)
!10300 = !DILocation(line: 58, column: 18, scope: !10222)
!10301 = !DILocation(line: 58, column: 15, scope: !10222)
!10302 = !DILocation(line: 58, column: 28, scope: !10222)
!10303 = !DILocation(line: 58, column: 35, scope: !10222)
!10304 = !DILocation(line: 58, column: 3, scope: !10222)
!10305 = !DILocation(line: 59, column: 1, scope: !10222)
!10306 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !764, file: !764, line: 43, type: !199, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !721, retainedNodes: !206)
!10307 = !DILocalVariable(name: "file", arg: 1, scope: !10306, file: !764, line: 43, type: !177)
!10308 = !DILocation(line: 43, column: 40, scope: !10306)
!10309 = !DILocation(line: 45, column: 15, scope: !10306)
!10310 = !DILocation(line: 45, column: 13, scope: !10306)
!10311 = !DILocation(line: 46, column: 1, scope: !10306)
!10312 = distinct !DISubprogram(name: "close_stdin", scope: !764, file: !764, line: 79, type: !197, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !721, retainedNodes: !206)
!10313 = !DILocalVariable(name: "fail", scope: !10312, file: !764, line: 81, type: !139)
!10314 = !DILocation(line: 81, column: 8, scope: !10312)
!10315 = !DILocation(line: 87, column: 19, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10312, file: !764, line: 87, column: 7)
!10317 = !DILocation(line: 87, column: 7, scope: !10316)
!10318 = !DILocation(line: 87, column: 26, scope: !10316)
!10319 = !DILocation(line: 87, column: 7, scope: !10312)
!10320 = !DILocation(line: 91, column: 19, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10322, file: !764, line: 91, column: 11)
!10322 = distinct !DILexicalBlock(scope: !10316, file: !764, line: 88, column: 5)
!10323 = !DILocation(line: 91, column: 11, scope: !10321)
!10324 = !DILocation(line: 91, column: 39, scope: !10321)
!10325 = !DILocation(line: 91, column: 44, scope: !10321)
!10326 = !DILocation(line: 91, column: 55, scope: !10321)
!10327 = !DILocation(line: 91, column: 47, scope: !10321)
!10328 = !DILocation(line: 91, column: 62, scope: !10321)
!10329 = !DILocation(line: 91, column: 11, scope: !10322)
!10330 = !DILocation(line: 92, column: 14, scope: !10321)
!10331 = !DILocation(line: 92, column: 9, scope: !10321)
!10332 = !DILocation(line: 93, column: 5, scope: !10322)
!10333 = !DILocation(line: 94, column: 21, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10312, file: !764, line: 94, column: 7)
!10335 = !DILocation(line: 94, column: 7, scope: !10334)
!10336 = !DILocation(line: 94, column: 28, scope: !10334)
!10337 = !DILocation(line: 94, column: 7, scope: !10312)
!10338 = !DILocation(line: 95, column: 10, scope: !10334)
!10339 = !DILocation(line: 95, column: 5, scope: !10334)
!10340 = !DILocation(line: 96, column: 7, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10312, file: !764, line: 96, column: 7)
!10342 = !DILocation(line: 96, column: 7, scope: !10312)
!10343 = !DILocalVariable(name: "close_error", scope: !10344, file: !764, line: 100, type: !177)
!10344 = distinct !DILexicalBlock(scope: !10341, file: !764, line: 97, column: 5)
!10345 = !DILocation(line: 100, column: 19, scope: !10344)
!10346 = !DILocation(line: 100, column: 33, scope: !10344)
!10347 = !DILocation(line: 101, column: 11, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10344, file: !764, line: 101, column: 11)
!10349 = !DILocation(line: 101, column: 11, scope: !10344)
!10350 = !DILocation(line: 102, column: 19, scope: !10348)
!10351 = !DILocation(line: 102, column: 52, scope: !10348)
!10352 = !DILocation(line: 102, column: 36, scope: !10348)
!10353 = !DILocation(line: 103, column: 16, scope: !10348)
!10354 = !DILocation(line: 102, column: 9, scope: !10348)
!10355 = !DILocation(line: 105, column: 19, scope: !10348)
!10356 = !DILocation(line: 105, column: 32, scope: !10348)
!10357 = !DILocation(line: 105, column: 9, scope: !10348)
!10358 = !DILocation(line: 106, column: 5, scope: !10344)
!10359 = !DILocation(line: 108, column: 3, scope: !10312)
!10360 = !DILocation(line: 110, column: 7, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10312, file: !764, line: 110, column: 7)
!10362 = !DILocation(line: 110, column: 7, scope: !10312)
!10363 = !DILocation(line: 111, column: 12, scope: !10361)
!10364 = !DILocation(line: 111, column: 5, scope: !10361)
!10365 = !DILocation(line: 112, column: 1, scope: !10312)
!10366 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !813, file: !813, line: 51, type: !199, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !767, retainedNodes: !206)
!10367 = !DILocalVariable(name: "file", arg: 1, scope: !10366, file: !813, line: 51, type: !177)
!10368 = !DILocation(line: 51, column: 41, scope: !10366)
!10369 = !DILocation(line: 53, column: 15, scope: !10366)
!10370 = !DILocation(line: 53, column: 13, scope: !10366)
!10371 = !DILocation(line: 54, column: 1, scope: !10366)
!10372 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !813, file: !813, line: 88, type: !770, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !767, retainedNodes: !206)
!10373 = !DILocalVariable(name: "ignore", arg: 1, scope: !10372, file: !813, line: 88, type: !139)
!10374 = !DILocation(line: 88, column: 37, scope: !10372)
!10375 = !DILocation(line: 90, column: 18, scope: !10372)
!10376 = !DILocation(line: 90, column: 16, scope: !10372)
!10377 = !DILocation(line: 91, column: 1, scope: !10372)
!10378 = distinct !DISubprogram(name: "close_stdout", scope: !813, file: !813, line: 117, type: !197, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !767, retainedNodes: !206)
!10379 = !DILocation(line: 119, column: 21, scope: !10380)
!10380 = distinct !DILexicalBlock(scope: !10378, file: !813, line: 119, column: 7)
!10381 = !DILocation(line: 119, column: 7, scope: !10380)
!10382 = !DILocation(line: 119, column: 29, scope: !10380)
!10383 = !DILocation(line: 120, column: 7, scope: !10380)
!10384 = !DILocation(line: 120, column: 12, scope: !10380)
!10385 = !DILocation(line: 120, column: 25, scope: !10380)
!10386 = !DILocation(line: 120, column: 28, scope: !10380)
!10387 = !DILocation(line: 120, column: 34, scope: !10380)
!10388 = !DILocation(line: 119, column: 7, scope: !10378)
!10389 = !DILocalVariable(name: "write_error", scope: !10390, file: !813, line: 122, type: !177)
!10390 = distinct !DILexicalBlock(scope: !10380, file: !813, line: 121, column: 5)
!10391 = !DILocation(line: 122, column: 19, scope: !10390)
!10392 = !DILocation(line: 122, column: 33, scope: !10390)
!10393 = !DILocation(line: 123, column: 11, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10390, file: !813, line: 123, column: 11)
!10395 = !DILocation(line: 123, column: 11, scope: !10390)
!10396 = !DILocation(line: 124, column: 19, scope: !10394)
!10397 = !DILocation(line: 124, column: 52, scope: !10394)
!10398 = !DILocation(line: 124, column: 36, scope: !10394)
!10399 = !DILocation(line: 125, column: 16, scope: !10394)
!10400 = !DILocation(line: 124, column: 9, scope: !10394)
!10401 = !DILocation(line: 127, column: 19, scope: !10394)
!10402 = !DILocation(line: 127, column: 32, scope: !10394)
!10403 = !DILocation(line: 127, column: 9, scope: !10394)
!10404 = !DILocation(line: 129, column: 14, scope: !10390)
!10405 = !DILocation(line: 129, column: 7, scope: !10390)
!10406 = !DILocation(line: 134, column: 42, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10378, file: !813, line: 134, column: 7)
!10408 = !DILocation(line: 134, column: 28, scope: !10407)
!10409 = !DILocation(line: 134, column: 50, scope: !10407)
!10410 = !DILocation(line: 134, column: 7, scope: !10378)
!10411 = !DILocation(line: 135, column: 12, scope: !10407)
!10412 = !DILocation(line: 135, column: 5, scope: !10407)
!10413 = !DILocation(line: 136, column: 1, scope: !10378)
!10414 = distinct !DISubprogram(name: "dir_name", scope: !10415, file: !10415, line: 32, type: !215, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1541, retainedNodes: !206)
!10415 = !DIFile(filename: "lib/dirname.c", directory: "/home/mohamad/clone/coreutils")
!10416 = !DILocalVariable(name: "file", arg: 1, scope: !10414, file: !10415, line: 32, type: !177)
!10417 = !DILocation(line: 32, column: 23, scope: !10414)
!10418 = !DILocalVariable(name: "result", scope: !10414, file: !10415, line: 34, type: !7)
!10419 = !DILocation(line: 34, column: 9, scope: !10414)
!10420 = !DILocation(line: 34, column: 29, scope: !10414)
!10421 = !DILocation(line: 34, column: 18, scope: !10414)
!10422 = !DILocation(line: 35, column: 8, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10414, file: !10415, line: 35, column: 7)
!10424 = !DILocation(line: 35, column: 7, scope: !10414)
!10425 = !DILocation(line: 36, column: 5, scope: !10423)
!10426 = !DILocation(line: 37, column: 10, scope: !10414)
!10427 = !DILocation(line: 37, column: 3, scope: !10414)
!10428 = distinct !DISubprogram(name: "dir_len", scope: !10429, file: !10429, line: 32, type: !1547, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1544, retainedNodes: !206)
!10429 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10430 = !DILocalVariable(name: "file", arg: 1, scope: !10428, file: !10429, line: 32, type: !177)
!10431 = !DILocation(line: 32, column: 22, scope: !10428)
!10432 = !DILocalVariable(name: "prefix_length", scope: !10428, file: !10429, line: 34, type: !52)
!10433 = !DILocation(line: 34, column: 10, scope: !10428)
!10434 = !DILocalVariable(name: "length", scope: !10428, file: !10429, line: 35, type: !52)
!10435 = !DILocation(line: 35, column: 10, scope: !10428)
!10436 = !DILocation(line: 38, column: 21, scope: !10428)
!10437 = !DILocation(line: 38, column: 35, scope: !10428)
!10438 = !DILocation(line: 41, column: 24, scope: !10428)
!10439 = !DILocation(line: 38, column: 20, scope: !10428)
!10440 = !DILocation(line: 38, column: 17, scope: !10428)
!10441 = !DILocation(line: 48, column: 33, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10428, file: !10429, line: 48, column: 3)
!10443 = !DILocation(line: 48, column: 17, scope: !10442)
!10444 = !DILocation(line: 48, column: 41, scope: !10442)
!10445 = !DILocation(line: 48, column: 39, scope: !10442)
!10446 = !DILocation(line: 48, column: 15, scope: !10442)
!10447 = !DILocation(line: 48, column: 8, scope: !10442)
!10448 = !DILocation(line: 49, column: 8, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10442, file: !10429, line: 48, column: 3)
!10450 = !DILocation(line: 49, column: 24, scope: !10449)
!10451 = !DILocation(line: 49, column: 22, scope: !10449)
!10452 = !DILocation(line: 48, column: 3, scope: !10442)
!10453 = !DILocation(line: 50, column: 11, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10449, file: !10429, line: 50, column: 9)
!10455 = !DILocation(line: 50, column: 9, scope: !10449)
!10456 = !DILocation(line: 51, column: 7, scope: !10454)
!10457 = !DILocation(line: 49, column: 38, scope: !10449)
!10458 = !DILocation(line: 48, column: 3, scope: !10449)
!10459 = distinct !{!10459, !10452, !10460}
!10460 = !DILocation(line: 51, column: 7, scope: !10442)
!10461 = !DILocation(line: 52, column: 10, scope: !10428)
!10462 = !DILocation(line: 52, column: 3, scope: !10428)
!10463 = distinct !DISubprogram(name: "mdir_name", scope: !10429, file: !10429, line: 71, type: !215, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1544, retainedNodes: !206)
!10464 = !DILocalVariable(name: "file", arg: 1, scope: !10463, file: !10429, line: 71, type: !177)
!10465 = !DILocation(line: 71, column: 24, scope: !10463)
!10466 = !DILocalVariable(name: "length", scope: !10463, file: !10429, line: 73, type: !52)
!10467 = !DILocation(line: 73, column: 10, scope: !10463)
!10468 = !DILocation(line: 73, column: 28, scope: !10463)
!10469 = !DILocation(line: 73, column: 19, scope: !10463)
!10470 = !DILocalVariable(name: "append_dot", scope: !10463, file: !10429, line: 74, type: !139)
!10471 = !DILocation(line: 74, column: 8, scope: !10463)
!10472 = !DILocation(line: 74, column: 22, scope: !10463)
!10473 = !DILocation(line: 74, column: 29, scope: !10463)
!10474 = !DILocation(line: 75, column: 22, scope: !10463)
!10475 = !DILocalVariable(name: "dir", scope: !10463, file: !10429, line: 78, type: !7)
!10476 = !DILocation(line: 78, column: 9, scope: !10463)
!10477 = !DILocation(line: 78, column: 23, scope: !10463)
!10478 = !DILocation(line: 78, column: 32, scope: !10463)
!10479 = !DILocation(line: 78, column: 30, scope: !10463)
!10480 = !DILocation(line: 78, column: 43, scope: !10463)
!10481 = !DILocation(line: 78, column: 15, scope: !10463)
!10482 = !DILocation(line: 79, column: 8, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10463, file: !10429, line: 79, column: 7)
!10484 = !DILocation(line: 79, column: 7, scope: !10463)
!10485 = !DILocation(line: 80, column: 5, scope: !10483)
!10486 = !DILocation(line: 81, column: 11, scope: !10463)
!10487 = !DILocation(line: 81, column: 16, scope: !10463)
!10488 = !DILocation(line: 81, column: 22, scope: !10463)
!10489 = !DILocation(line: 81, column: 3, scope: !10463)
!10490 = !DILocation(line: 82, column: 7, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10463, file: !10429, line: 82, column: 7)
!10492 = !DILocation(line: 82, column: 7, scope: !10463)
!10493 = !DILocation(line: 83, column: 5, scope: !10491)
!10494 = !DILocation(line: 83, column: 15, scope: !10491)
!10495 = !DILocation(line: 83, column: 19, scope: !10491)
!10496 = !DILocation(line: 84, column: 3, scope: !10463)
!10497 = !DILocation(line: 84, column: 7, scope: !10463)
!10498 = !DILocation(line: 84, column: 15, scope: !10463)
!10499 = !DILocation(line: 85, column: 10, scope: !10463)
!10500 = !DILocation(line: 85, column: 3, scope: !10463)
!10501 = !DILocation(line: 86, column: 1, scope: !10463)
!10502 = distinct !DISubprogram(name: "last_component", scope: !10503, file: !10503, line: 30, type: !215, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1549, retainedNodes: !206)
!10503 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10504 = !DILocalVariable(name: "name", arg: 1, scope: !10502, file: !10503, line: 30, type: !177)
!10505 = !DILocation(line: 30, column: 29, scope: !10502)
!10506 = !DILocalVariable(name: "base", scope: !10502, file: !10503, line: 32, type: !177)
!10507 = !DILocation(line: 32, column: 15, scope: !10502)
!10508 = !DILocation(line: 32, column: 22, scope: !10502)
!10509 = !DILocation(line: 32, column: 27, scope: !10502)
!10510 = !DILocalVariable(name: "p", scope: !10502, file: !10503, line: 33, type: !177)
!10511 = !DILocation(line: 33, column: 15, scope: !10502)
!10512 = !DILocalVariable(name: "saw_slash", scope: !10502, file: !10503, line: 34, type: !139)
!10513 = !DILocation(line: 34, column: 8, scope: !10502)
!10514 = !DILocation(line: 36, column: 3, scope: !10502)
!10515 = !DILocation(line: 36, column: 10, scope: !10502)
!10516 = !DILocation(line: 37, column: 9, scope: !10502)
!10517 = distinct !{!10517, !10514, !10516}
!10518 = !DILocation(line: 39, column: 12, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10502, file: !10503, line: 39, column: 3)
!10520 = !DILocation(line: 39, column: 10, scope: !10519)
!10521 = !DILocation(line: 39, column: 8, scope: !10519)
!10522 = !DILocation(line: 39, column: 19, scope: !10523)
!10523 = distinct !DILexicalBlock(scope: !10519, file: !10503, line: 39, column: 3)
!10524 = !DILocation(line: 39, column: 18, scope: !10523)
!10525 = !DILocation(line: 39, column: 3, scope: !10519)
!10526 = !DILocation(line: 41, column: 11, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10528, file: !10503, line: 41, column: 11)
!10528 = distinct !DILexicalBlock(scope: !10523, file: !10503, line: 40, column: 5)
!10529 = !DILocation(line: 41, column: 11, scope: !10528)
!10530 = !DILocation(line: 42, column: 19, scope: !10527)
!10531 = !DILocation(line: 42, column: 9, scope: !10527)
!10532 = !DILocation(line: 43, column: 16, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10527, file: !10503, line: 43, column: 16)
!10534 = !DILocation(line: 43, column: 16, scope: !10527)
!10535 = !DILocation(line: 45, column: 18, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10533, file: !10503, line: 44, column: 9)
!10537 = !DILocation(line: 45, column: 16, scope: !10536)
!10538 = !DILocation(line: 46, column: 21, scope: !10536)
!10539 = !DILocation(line: 47, column: 9, scope: !10536)
!10540 = !DILocation(line: 48, column: 5, scope: !10528)
!10541 = !DILocation(line: 39, column: 23, scope: !10523)
!10542 = !DILocation(line: 39, column: 3, scope: !10523)
!10543 = distinct !{!10543, !10525, !10544}
!10544 = !DILocation(line: 48, column: 5, scope: !10519)
!10545 = !DILocation(line: 50, column: 19, scope: !10502)
!10546 = !DILocation(line: 50, column: 3, scope: !10502)
!10547 = distinct !DISubprogram(name: "base_len", scope: !10503, file: !10503, line: 58, type: !1547, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1549, retainedNodes: !206)
!10548 = !DILocalVariable(name: "name", arg: 1, scope: !10547, file: !10503, line: 58, type: !177)
!10549 = !DILocation(line: 58, column: 23, scope: !10547)
!10550 = !DILocalVariable(name: "len", scope: !10547, file: !10503, line: 60, type: !52)
!10551 = !DILocation(line: 60, column: 10, scope: !10547)
!10552 = !DILocalVariable(name: "prefix_len", scope: !10547, file: !10503, line: 61, type: !52)
!10553 = !DILocation(line: 61, column: 10, scope: !10547)
!10554 = !DILocation(line: 63, column: 22, scope: !10555)
!10555 = distinct !DILexicalBlock(scope: !10547, file: !10503, line: 63, column: 3)
!10556 = !DILocation(line: 63, column: 14, scope: !10555)
!10557 = !DILocation(line: 63, column: 12, scope: !10555)
!10558 = !DILocation(line: 63, column: 8, scope: !10555)
!10559 = !DILocation(line: 63, column: 34, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10555, file: !10503, line: 63, column: 3)
!10561 = !DILocation(line: 63, column: 32, scope: !10560)
!10562 = !DILocation(line: 63, column: 38, scope: !10560)
!10563 = !DILocation(line: 63, column: 41, scope: !10560)
!10564 = !DILocation(line: 0, scope: !10560)
!10565 = !DILocation(line: 63, column: 3, scope: !10555)
!10566 = !DILocation(line: 64, column: 5, scope: !10560)
!10567 = !DILocation(line: 63, column: 70, scope: !10560)
!10568 = !DILocation(line: 63, column: 3, scope: !10560)
!10569 = distinct !{!10569, !10565, !10570}
!10570 = !DILocation(line: 64, column: 5, scope: !10555)
!10571 = !DILocation(line: 74, column: 10, scope: !10547)
!10572 = !DILocation(line: 74, column: 3, scope: !10547)
!10573 = distinct !DISubprogram(name: "fdadvise", scope: !10574, file: !10574, line: 31, type: !1565, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1552, retainedNodes: !206)
!10574 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mohamad/clone/coreutils")
!10575 = !DILocalVariable(name: "fd", arg: 1, scope: !10573, file: !10574, line: 31, type: !5)
!10576 = !DILocation(line: 31, column: 15, scope: !10573)
!10577 = !DILocalVariable(name: "offset", arg: 2, scope: !10573, file: !10574, line: 31, type: !358)
!10578 = !DILocation(line: 31, column: 25, scope: !10573)
!10579 = !DILocalVariable(name: "len", arg: 3, scope: !10573, file: !10574, line: 31, type: !358)
!10580 = !DILocation(line: 31, column: 39, scope: !10573)
!10581 = !DILocalVariable(name: "advice", arg: 4, scope: !10573, file: !10574, line: 31, type: !1567)
!10582 = !DILocation(line: 31, column: 54, scope: !10573)
!10583 = !DILocalVariable(name: "__x", scope: !10584, file: !10574, line: 34, type: !5)
!10584 = distinct !DILexicalBlock(scope: !10573, file: !10574, line: 34, column: 3)
!10585 = !DILocation(line: 34, column: 3, scope: !10584)
!10586 = !DILocation(line: 36, column: 1, scope: !10573)
!10587 = distinct !DISubprogram(name: "fadvise", scope: !10574, file: !10574, line: 39, type: !1568, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1552, retainedNodes: !206)
!10588 = !DILocalVariable(name: "fp", arg: 1, scope: !10587, file: !10574, line: 39, type: !1570)
!10589 = !DILocation(line: 39, column: 16, scope: !10587)
!10590 = !DILocalVariable(name: "advice", arg: 2, scope: !10587, file: !10574, line: 39, type: !1567)
!10591 = !DILocation(line: 39, column: 30, scope: !10587)
!10592 = !DILocation(line: 41, column: 7, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10587, file: !10574, line: 41, column: 7)
!10594 = !DILocation(line: 41, column: 7, scope: !10587)
!10595 = !DILocation(line: 42, column: 23, scope: !10593)
!10596 = !DILocation(line: 42, column: 15, scope: !10593)
!10597 = !DILocation(line: 42, column: 34, scope: !10593)
!10598 = !DILocation(line: 42, column: 5, scope: !10593)
!10599 = !DILocation(line: 43, column: 1, scope: !10587)
!10600 = distinct !DISubprogram(name: "open_safer", scope: !10601, file: !10601, line: 29, type: !10602, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1610, retainedNodes: !206)
!10601 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mohamad/clone/coreutils")
!10602 = !DISubroutineType(types: !10603)
!10603 = !{!5, !177, !5, null}
!10604 = !DILocalVariable(name: "file", arg: 1, scope: !10600, file: !10601, line: 29, type: !177)
!10605 = !DILocation(line: 29, column: 25, scope: !10600)
!10606 = !DILocalVariable(name: "flags", arg: 2, scope: !10600, file: !10601, line: 29, type: !5)
!10607 = !DILocation(line: 29, column: 35, scope: !10600)
!10608 = !DILocalVariable(name: "mode", scope: !10600, file: !10601, line: 31, type: !136)
!10609 = !DILocation(line: 31, column: 10, scope: !10600)
!10610 = !DILocation(line: 33, column: 7, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10600, file: !10601, line: 33, column: 7)
!10612 = !DILocation(line: 33, column: 13, scope: !10611)
!10613 = !DILocation(line: 33, column: 7, scope: !10600)
!10614 = !DILocalVariable(name: "ap", scope: !10615, file: !10601, line: 35, type: !1615)
!10615 = distinct !DILexicalBlock(scope: !10611, file: !10601, line: 34, column: 5)
!10616 = !DILocation(line: 35, column: 15, scope: !10615)
!10617 = !DILocation(line: 36, column: 7, scope: !10615)
!10618 = !DILocation(line: 40, column: 14, scope: !10615)
!10619 = !DILocation(line: 40, column: 12, scope: !10615)
!10620 = !DILocation(line: 42, column: 7, scope: !10615)
!10621 = !DILocation(line: 43, column: 5, scope: !10615)
!10622 = !DILocation(line: 45, column: 26, scope: !10600)
!10623 = !DILocation(line: 45, column: 32, scope: !10600)
!10624 = !DILocation(line: 45, column: 39, scope: !10600)
!10625 = !DILocation(line: 45, column: 20, scope: !10600)
!10626 = !DILocation(line: 45, column: 10, scope: !10600)
!10627 = !DILocation(line: 45, column: 3, scope: !10600)
!10628 = distinct !DISubprogram(name: "record_file", scope: !10629, file: !10629, line: 29, type: !1627, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1624, retainedNodes: !206)
!10629 = !DIFile(filename: "lib/file-set.c", directory: "/home/mohamad/clone/coreutils")
!10630 = !DILocalVariable(name: "ht", arg: 1, scope: !10628, file: !10629, line: 29, type: !172)
!10631 = !DILocation(line: 29, column: 26, scope: !10628)
!10632 = !DILocalVariable(name: "file", arg: 2, scope: !10628, file: !10629, line: 29, type: !177)
!10633 = !DILocation(line: 29, column: 42, scope: !10628)
!10634 = !DILocalVariable(name: "stats", arg: 3, scope: !10628, file: !10629, line: 29, type: !1629)
!10635 = !DILocation(line: 29, column: 67, scope: !10628)
!10636 = !DILocalVariable(name: "ent", scope: !10628, file: !10629, line: 31, type: !1652)
!10637 = !DILocation(line: 31, column: 20, scope: !10628)
!10638 = !DILocation(line: 33, column: 7, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10628, file: !10629, line: 33, column: 7)
!10640 = !DILocation(line: 33, column: 10, scope: !10639)
!10641 = !DILocation(line: 33, column: 7, scope: !10628)
!10642 = !DILocation(line: 34, column: 5, scope: !10639)
!10643 = !DILocation(line: 36, column: 9, scope: !10628)
!10644 = !DILocation(line: 36, column: 7, scope: !10628)
!10645 = !DILocation(line: 37, column: 24, scope: !10628)
!10646 = !DILocation(line: 37, column: 15, scope: !10628)
!10647 = !DILocation(line: 37, column: 3, scope: !10628)
!10648 = !DILocation(line: 37, column: 8, scope: !10628)
!10649 = !DILocation(line: 37, column: 13, scope: !10628)
!10650 = !{!10651, !2669, i64 0}
!10651 = !{!"F_triple", !2669, i64 0, !2936, i64 8, !2936, i64 16}
!10652 = !DILocation(line: 38, column: 17, scope: !10628)
!10653 = !DILocation(line: 38, column: 24, scope: !10628)
!10654 = !DILocation(line: 38, column: 3, scope: !10628)
!10655 = !DILocation(line: 38, column: 8, scope: !10628)
!10656 = !DILocation(line: 38, column: 15, scope: !10628)
!10657 = !{!10651, !2936, i64 8}
!10658 = !DILocation(line: 39, column: 17, scope: !10628)
!10659 = !DILocation(line: 39, column: 24, scope: !10628)
!10660 = !DILocation(line: 39, column: 3, scope: !10628)
!10661 = !DILocation(line: 39, column: 8, scope: !10628)
!10662 = !DILocation(line: 39, column: 15, scope: !10628)
!10663 = !{!10651, !2936, i64 16}
!10664 = !DILocalVariable(name: "ent_from_table", scope: !10665, file: !10629, line: 42, type: !1652)
!10665 = distinct !DILexicalBlock(scope: !10628, file: !10629, line: 41, column: 3)
!10666 = !DILocation(line: 42, column: 22, scope: !10665)
!10667 = !DILocation(line: 42, column: 52, scope: !10665)
!10668 = !DILocation(line: 42, column: 56, scope: !10665)
!10669 = !DILocation(line: 42, column: 39, scope: !10665)
!10670 = !DILocation(line: 43, column: 9, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10665, file: !10629, line: 43, column: 9)
!10672 = !DILocation(line: 43, column: 24, scope: !10671)
!10673 = !DILocation(line: 43, column: 9, scope: !10665)
!10674 = !DILocation(line: 46, column: 9, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10671, file: !10629, line: 44, column: 7)
!10676 = !DILocation(line: 49, column: 9, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10665, file: !10629, line: 49, column: 9)
!10678 = !DILocation(line: 49, column: 27, scope: !10677)
!10679 = !DILocation(line: 49, column: 24, scope: !10677)
!10680 = !DILocation(line: 49, column: 9, scope: !10665)
!10681 = !DILocation(line: 53, column: 22, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10677, file: !10629, line: 50, column: 7)
!10683 = !DILocation(line: 53, column: 9, scope: !10682)
!10684 = !DILocation(line: 54, column: 7, scope: !10682)
!10685 = !DILocation(line: 56, column: 1, scope: !10628)
!10686 = distinct !DISubprogram(name: "seen_file", scope: !10629, file: !10629, line: 61, type: !1659, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1624, retainedNodes: !206)
!10687 = !DILocalVariable(name: "ht", arg: 1, scope: !10686, file: !10629, line: 61, type: !1661)
!10688 = !DILocation(line: 61, column: 30, scope: !10686)
!10689 = !DILocalVariable(name: "file", arg: 2, scope: !10686, file: !10629, line: 61, type: !177)
!10690 = !DILocation(line: 61, column: 46, scope: !10686)
!10691 = !DILocalVariable(name: "stats", arg: 3, scope: !10686, file: !10629, line: 62, type: !1629)
!10692 = !DILocation(line: 62, column: 31, scope: !10686)
!10693 = !DILocalVariable(name: "new_ent", scope: !10686, file: !10629, line: 64, type: !1653)
!10694 = !DILocation(line: 64, column: 19, scope: !10686)
!10695 = !DILocation(line: 66, column: 7, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10686, file: !10629, line: 66, column: 7)
!10697 = !DILocation(line: 66, column: 10, scope: !10696)
!10698 = !DILocation(line: 66, column: 7, scope: !10686)
!10699 = !DILocation(line: 67, column: 5, scope: !10696)
!10700 = !DILocation(line: 69, column: 27, scope: !10686)
!10701 = !DILocation(line: 69, column: 11, scope: !10686)
!10702 = !DILocation(line: 69, column: 16, scope: !10686)
!10703 = !DILocation(line: 70, column: 20, scope: !10686)
!10704 = !DILocation(line: 70, column: 27, scope: !10686)
!10705 = !DILocation(line: 70, column: 11, scope: !10686)
!10706 = !DILocation(line: 70, column: 18, scope: !10686)
!10707 = !DILocation(line: 71, column: 20, scope: !10686)
!10708 = !DILocation(line: 71, column: 27, scope: !10686)
!10709 = !DILocation(line: 71, column: 11, scope: !10686)
!10710 = !DILocation(line: 71, column: 18, scope: !10686)
!10711 = !DILocation(line: 73, column: 25, scope: !10686)
!10712 = !DILocation(line: 73, column: 29, scope: !10686)
!10713 = !DILocation(line: 73, column: 12, scope: !10686)
!10714 = !DILocation(line: 73, column: 11, scope: !10686)
!10715 = !DILocation(line: 73, column: 10, scope: !10686)
!10716 = !DILocation(line: 73, column: 3, scope: !10686)
!10717 = !DILocation(line: 74, column: 1, scope: !10686)
!10718 = distinct !DISubprogram(name: "strmode", scope: !10719, file: !10719, line: 96, type: !1666, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1663, retainedNodes: !206)
!10719 = !DIFile(filename: "lib/filemode.c", directory: "/home/mohamad/clone/coreutils")
!10720 = !DILocalVariable(name: "mode", arg: 1, scope: !10718, file: !10719, line: 96, type: !136)
!10721 = !DILocation(line: 96, column: 17, scope: !10718)
!10722 = !DILocalVariable(name: "str", arg: 2, scope: !10718, file: !10719, line: 96, type: !7)
!10723 = !DILocation(line: 96, column: 29, scope: !10718)
!10724 = !DILocation(line: 98, column: 22, scope: !10718)
!10725 = !DILocation(line: 98, column: 12, scope: !10718)
!10726 = !DILocation(line: 98, column: 3, scope: !10718)
!10727 = !DILocation(line: 98, column: 10, scope: !10718)
!10728 = !DILocation(line: 99, column: 12, scope: !10718)
!10729 = !DILocation(line: 99, column: 17, scope: !10718)
!10730 = !DILocation(line: 99, column: 3, scope: !10718)
!10731 = !DILocation(line: 99, column: 10, scope: !10718)
!10732 = !DILocation(line: 100, column: 12, scope: !10718)
!10733 = !DILocation(line: 100, column: 17, scope: !10718)
!10734 = !DILocation(line: 100, column: 3, scope: !10718)
!10735 = !DILocation(line: 100, column: 10, scope: !10718)
!10736 = !DILocation(line: 101, column: 13, scope: !10718)
!10737 = !DILocation(line: 101, column: 18, scope: !10718)
!10738 = !DILocation(line: 102, column: 16, scope: !10718)
!10739 = !DILocation(line: 102, column: 21, scope: !10718)
!10740 = !DILocation(line: 103, column: 16, scope: !10718)
!10741 = !DILocation(line: 103, column: 21, scope: !10718)
!10742 = !DILocation(line: 101, column: 12, scope: !10718)
!10743 = !DILocation(line: 101, column: 3, scope: !10718)
!10744 = !DILocation(line: 101, column: 10, scope: !10718)
!10745 = !DILocation(line: 104, column: 12, scope: !10718)
!10746 = !DILocation(line: 104, column: 17, scope: !10718)
!10747 = !DILocation(line: 104, column: 3, scope: !10718)
!10748 = !DILocation(line: 104, column: 10, scope: !10718)
!10749 = !DILocation(line: 105, column: 12, scope: !10718)
!10750 = !DILocation(line: 105, column: 17, scope: !10718)
!10751 = !DILocation(line: 105, column: 3, scope: !10718)
!10752 = !DILocation(line: 105, column: 10, scope: !10718)
!10753 = !DILocation(line: 106, column: 13, scope: !10718)
!10754 = !DILocation(line: 106, column: 18, scope: !10718)
!10755 = !DILocation(line: 107, column: 16, scope: !10718)
!10756 = !DILocation(line: 107, column: 21, scope: !10718)
!10757 = !DILocation(line: 108, column: 16, scope: !10718)
!10758 = !DILocation(line: 108, column: 21, scope: !10718)
!10759 = !DILocation(line: 106, column: 12, scope: !10718)
!10760 = !DILocation(line: 106, column: 3, scope: !10718)
!10761 = !DILocation(line: 106, column: 10, scope: !10718)
!10762 = !DILocation(line: 109, column: 12, scope: !10718)
!10763 = !DILocation(line: 109, column: 17, scope: !10718)
!10764 = !DILocation(line: 109, column: 3, scope: !10718)
!10765 = !DILocation(line: 109, column: 10, scope: !10718)
!10766 = !DILocation(line: 110, column: 12, scope: !10718)
!10767 = !DILocation(line: 110, column: 17, scope: !10718)
!10768 = !DILocation(line: 110, column: 3, scope: !10718)
!10769 = !DILocation(line: 110, column: 10, scope: !10718)
!10770 = !DILocation(line: 111, column: 13, scope: !10718)
!10771 = !DILocation(line: 111, column: 18, scope: !10718)
!10772 = !DILocation(line: 112, column: 16, scope: !10718)
!10773 = !DILocation(line: 112, column: 21, scope: !10718)
!10774 = !DILocation(line: 113, column: 16, scope: !10718)
!10775 = !DILocation(line: 113, column: 21, scope: !10718)
!10776 = !DILocation(line: 111, column: 12, scope: !10718)
!10777 = !DILocation(line: 111, column: 3, scope: !10718)
!10778 = !DILocation(line: 111, column: 10, scope: !10718)
!10779 = !DILocation(line: 114, column: 3, scope: !10718)
!10780 = !DILocation(line: 114, column: 11, scope: !10718)
!10781 = !DILocation(line: 115, column: 3, scope: !10718)
!10782 = !DILocation(line: 115, column: 11, scope: !10718)
!10783 = !DILocation(line: 116, column: 1, scope: !10718)
!10784 = distinct !DISubprogram(name: "ftypelet", scope: !10719, file: !10719, line: 54, type: !1693, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1663, retainedNodes: !206)
!10785 = !DILocalVariable(name: "bits", arg: 1, scope: !10784, file: !10719, line: 54, type: !136)
!10786 = !DILocation(line: 54, column: 18, scope: !10784)
!10787 = !DILocation(line: 57, column: 7, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10784, file: !10719, line: 57, column: 7)
!10789 = !DILocation(line: 57, column: 7, scope: !10784)
!10790 = !DILocation(line: 58, column: 5, scope: !10788)
!10791 = !DILocation(line: 59, column: 7, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10784, file: !10719, line: 59, column: 7)
!10793 = !DILocation(line: 59, column: 7, scope: !10784)
!10794 = !DILocation(line: 60, column: 5, scope: !10792)
!10795 = !DILocation(line: 63, column: 7, scope: !10796)
!10796 = distinct !DILexicalBlock(scope: !10784, file: !10719, line: 63, column: 7)
!10797 = !DILocation(line: 63, column: 7, scope: !10784)
!10798 = !DILocation(line: 64, column: 5, scope: !10796)
!10799 = !DILocation(line: 65, column: 7, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10784, file: !10719, line: 65, column: 7)
!10801 = !DILocation(line: 65, column: 7, scope: !10784)
!10802 = !DILocation(line: 66, column: 5, scope: !10800)
!10803 = !DILocation(line: 67, column: 7, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10784, file: !10719, line: 67, column: 7)
!10805 = !DILocation(line: 67, column: 7, scope: !10784)
!10806 = !DILocation(line: 68, column: 5, scope: !10804)
!10807 = !DILocation(line: 69, column: 7, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10784, file: !10719, line: 69, column: 7)
!10809 = !DILocation(line: 69, column: 7, scope: !10784)
!10810 = !DILocation(line: 70, column: 5, scope: !10808)
!10811 = !DILocation(line: 73, column: 7, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10784, file: !10719, line: 73, column: 7)
!10813 = !DILocation(line: 73, column: 7, scope: !10784)
!10814 = !DILocation(line: 74, column: 5, scope: !10812)
!10815 = !DILocation(line: 90, column: 3, scope: !10784)
!10816 = !DILocation(line: 91, column: 1, scope: !10784)
!10817 = distinct !DISubprogram(name: "filemodestring", scope: !10719, file: !10719, line: 166, type: !1668, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1663, retainedNodes: !206)
!10818 = !DILocalVariable(name: "statp", arg: 1, scope: !10817, file: !10719, line: 166, type: !1670)
!10819 = !DILocation(line: 166, column: 36, scope: !10817)
!10820 = !DILocalVariable(name: "str", arg: 2, scope: !10817, file: !10719, line: 166, type: !7)
!10821 = !DILocation(line: 166, column: 49, scope: !10817)
!10822 = !DILocation(line: 168, column: 12, scope: !10817)
!10823 = !DILocation(line: 168, column: 19, scope: !10817)
!10824 = !DILocation(line: 168, column: 28, scope: !10817)
!10825 = !DILocation(line: 168, column: 3, scope: !10817)
!10826 = !DILocation(line: 170, column: 7, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10817, file: !10719, line: 170, column: 7)
!10828 = !DILocation(line: 170, column: 7, scope: !10817)
!10829 = !DILocation(line: 171, column: 5, scope: !10827)
!10830 = !DILocation(line: 171, column: 12, scope: !10827)
!10831 = !DILocation(line: 174, column: 12, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10833, file: !10719, line: 174, column: 12)
!10833 = distinct !DILexicalBlock(scope: !10827, file: !10719, line: 172, column: 12)
!10834 = !DILocation(line: 174, column: 12, scope: !10833)
!10835 = !DILocation(line: 175, column: 5, scope: !10832)
!10836 = !DILocation(line: 175, column: 12, scope: !10832)
!10837 = !DILocation(line: 176, column: 12, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10832, file: !10719, line: 176, column: 12)
!10839 = !DILocation(line: 176, column: 12, scope: !10832)
!10840 = !DILocation(line: 177, column: 5, scope: !10838)
!10841 = !DILocation(line: 177, column: 12, scope: !10838)
!10842 = !DILocation(line: 180, column: 1, scope: !10817)
!10843 = distinct !DISubprogram(name: "file_name_concat", scope: !10844, file: !10844, line: 35, type: !1698, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1695, retainedNodes: !206)
!10844 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mohamad/clone/coreutils")
!10845 = !DILocalVariable(name: "dir", arg: 1, scope: !10843, file: !10844, line: 35, type: !177)
!10846 = !DILocation(line: 35, column: 31, scope: !10843)
!10847 = !DILocalVariable(name: "base", arg: 2, scope: !10843, file: !10844, line: 35, type: !177)
!10848 = !DILocation(line: 35, column: 48, scope: !10843)
!10849 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10843, file: !10844, line: 35, type: !181)
!10850 = !DILocation(line: 35, column: 61, scope: !10843)
!10851 = !DILocalVariable(name: "p", scope: !10843, file: !10844, line: 37, type: !7)
!10852 = !DILocation(line: 37, column: 9, scope: !10843)
!10853 = !DILocation(line: 37, column: 32, scope: !10843)
!10854 = !DILocation(line: 37, column: 37, scope: !10843)
!10855 = !DILocation(line: 37, column: 43, scope: !10843)
!10856 = !DILocation(line: 37, column: 13, scope: !10843)
!10857 = !DILocation(line: 38, column: 7, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10843, file: !10844, line: 38, column: 7)
!10859 = !DILocation(line: 38, column: 9, scope: !10858)
!10860 = !DILocation(line: 38, column: 7, scope: !10843)
!10861 = !DILocation(line: 39, column: 5, scope: !10858)
!10862 = !DILocation(line: 40, column: 10, scope: !10843)
!10863 = !DILocation(line: 40, column: 3, scope: !10843)
!10864 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10865, file: !10865, line: 47, type: !1698, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1700, retainedNodes: !206)
!10865 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mohamad/clone/coreutils")
!10866 = !DILocalVariable(name: "dir", arg: 1, scope: !10864, file: !10865, line: 47, type: !177)
!10867 = !DILocation(line: 47, column: 32, scope: !10864)
!10868 = !DILocalVariable(name: "base", arg: 2, scope: !10864, file: !10865, line: 47, type: !177)
!10869 = !DILocation(line: 47, column: 49, scope: !10864)
!10870 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10864, file: !10865, line: 47, type: !181)
!10871 = !DILocation(line: 47, column: 62, scope: !10864)
!10872 = !DILocalVariable(name: "dirbase", scope: !10864, file: !10865, line: 49, type: !177)
!10873 = !DILocation(line: 49, column: 15, scope: !10864)
!10874 = !DILocation(line: 49, column: 41, scope: !10864)
!10875 = !DILocation(line: 49, column: 25, scope: !10864)
!10876 = !DILocalVariable(name: "dirbaselen", scope: !10864, file: !10865, line: 50, type: !52)
!10877 = !DILocation(line: 50, column: 10, scope: !10864)
!10878 = !DILocation(line: 50, column: 33, scope: !10864)
!10879 = !DILocation(line: 50, column: 23, scope: !10864)
!10880 = !DILocalVariable(name: "dirlen", scope: !10864, file: !10865, line: 51, type: !52)
!10881 = !DILocation(line: 51, column: 10, scope: !10864)
!10882 = !DILocation(line: 51, column: 19, scope: !10864)
!10883 = !DILocation(line: 51, column: 29, scope: !10864)
!10884 = !DILocation(line: 51, column: 27, scope: !10864)
!10885 = !DILocation(line: 51, column: 35, scope: !10864)
!10886 = !DILocation(line: 51, column: 33, scope: !10864)
!10887 = !DILocalVariable(name: "baselen", scope: !10864, file: !10865, line: 52, type: !52)
!10888 = !DILocation(line: 52, column: 10, scope: !10864)
!10889 = !DILocation(line: 52, column: 28, scope: !10864)
!10890 = !DILocation(line: 52, column: 20, scope: !10864)
!10891 = !DILocalVariable(name: "sep", scope: !10864, file: !10865, line: 53, type: !8)
!10892 = !DILocation(line: 53, column: 8, scope: !10864)
!10893 = !DILocation(line: 54, column: 7, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10864, file: !10865, line: 54, column: 7)
!10895 = !DILocation(line: 54, column: 7, scope: !10864)
!10896 = !DILocation(line: 57, column: 13, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10898, file: !10865, line: 57, column: 11)
!10898 = distinct !DILexicalBlock(scope: !10894, file: !10865, line: 55, column: 5)
!10899 = !DILocation(line: 57, column: 39, scope: !10897)
!10900 = !DILocation(line: 57, column: 44, scope: !10897)
!10901 = !DILocation(line: 57, column: 11, scope: !10898)
!10902 = !DILocation(line: 58, column: 13, scope: !10897)
!10903 = !DILocation(line: 58, column: 9, scope: !10897)
!10904 = !DILocation(line: 59, column: 5, scope: !10898)
!10905 = !DILocation(line: 60, column: 12, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10894, file: !10865, line: 60, column: 12)
!10907 = !DILocation(line: 60, column: 12, scope: !10894)
!10908 = !DILocation(line: 67, column: 11, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10906, file: !10865, line: 61, column: 5)
!10910 = !DILocation(line: 68, column: 5, scope: !10909)
!10911 = !DILocalVariable(name: "p_concat", scope: !10864, file: !10865, line: 70, type: !7)
!10912 = !DILocation(line: 70, column: 9, scope: !10864)
!10913 = !DILocation(line: 70, column: 28, scope: !10864)
!10914 = !DILocation(line: 70, column: 38, scope: !10864)
!10915 = !DILocation(line: 70, column: 42, scope: !10864)
!10916 = !DILocation(line: 70, column: 37, scope: !10864)
!10917 = !DILocation(line: 70, column: 35, scope: !10864)
!10918 = !DILocation(line: 70, column: 54, scope: !10864)
!10919 = !DILocation(line: 70, column: 52, scope: !10864)
!10920 = !DILocation(line: 70, column: 62, scope: !10864)
!10921 = !DILocation(line: 70, column: 20, scope: !10864)
!10922 = !DILocalVariable(name: "p", scope: !10864, file: !10865, line: 71, type: !7)
!10923 = !DILocation(line: 71, column: 9, scope: !10864)
!10924 = !DILocation(line: 73, column: 7, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10864, file: !10865, line: 73, column: 7)
!10926 = !DILocation(line: 73, column: 16, scope: !10925)
!10927 = !DILocation(line: 73, column: 7, scope: !10864)
!10928 = !DILocation(line: 74, column: 5, scope: !10925)
!10929 = !DILocation(line: 76, column: 16, scope: !10864)
!10930 = !DILocation(line: 76, column: 26, scope: !10864)
!10931 = !DILocation(line: 76, column: 31, scope: !10864)
!10932 = !DILocation(line: 76, column: 7, scope: !10864)
!10933 = !DILocation(line: 76, column: 5, scope: !10864)
!10934 = !DILocation(line: 77, column: 8, scope: !10864)
!10935 = !DILocation(line: 77, column: 4, scope: !10864)
!10936 = !DILocation(line: 77, column: 6, scope: !10864)
!10937 = !DILocation(line: 78, column: 8, scope: !10864)
!10938 = !DILocation(line: 78, column: 12, scope: !10864)
!10939 = !DILocation(line: 78, column: 5, scope: !10864)
!10940 = !DILocation(line: 80, column: 7, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10864, file: !10865, line: 80, column: 7)
!10942 = !DILocation(line: 80, column: 7, scope: !10864)
!10943 = !DILocation(line: 81, column: 23, scope: !10941)
!10944 = !DILocation(line: 81, column: 6, scope: !10941)
!10945 = !DILocation(line: 81, column: 21, scope: !10941)
!10946 = !DILocation(line: 81, column: 5, scope: !10941)
!10947 = !DILocation(line: 83, column: 16, scope: !10864)
!10948 = !DILocation(line: 83, column: 19, scope: !10864)
!10949 = !DILocation(line: 83, column: 25, scope: !10864)
!10950 = !DILocation(line: 83, column: 7, scope: !10864)
!10951 = !DILocation(line: 83, column: 5, scope: !10864)
!10952 = !DILocation(line: 84, column: 4, scope: !10864)
!10953 = !DILocation(line: 84, column: 6, scope: !10864)
!10954 = !DILocation(line: 86, column: 10, scope: !10864)
!10955 = !DILocation(line: 86, column: 3, scope: !10864)
!10956 = !DILocation(line: 87, column: 1, scope: !10864)
!10957 = distinct !DISubprogram(name: "full_read", scope: !1709, file: !1709, line: 58, type: !1706, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1703, retainedNodes: !206)
!10958 = !DILocalVariable(name: "fd", arg: 1, scope: !10957, file: !1709, line: 58, type: !5)
!10959 = !DILocation(line: 58, column: 14, scope: !10957)
!10960 = !DILocalVariable(name: "buf", arg: 2, scope: !10957, file: !1709, line: 58, type: !47)
!10961 = !DILocation(line: 58, column: 30, scope: !10957)
!10962 = !DILocalVariable(name: "count", arg: 3, scope: !10957, file: !1709, line: 58, type: !52)
!10963 = !DILocation(line: 58, column: 42, scope: !10957)
!10964 = !DILocalVariable(name: "total", scope: !10957, file: !1709, line: 60, type: !52)
!10965 = !DILocation(line: 60, column: 10, scope: !10957)
!10966 = !DILocalVariable(name: "ptr", scope: !10957, file: !1709, line: 61, type: !7)
!10967 = !DILocation(line: 61, column: 15, scope: !10957)
!10968 = !DILocation(line: 61, column: 36, scope: !10957)
!10969 = !DILocation(line: 63, column: 3, scope: !10957)
!10970 = !DILocation(line: 63, column: 10, scope: !10957)
!10971 = !DILocation(line: 63, column: 16, scope: !10957)
!10972 = !DILocalVariable(name: "n_rw", scope: !10973, file: !1709, line: 65, type: !52)
!10973 = distinct !DILexicalBlock(scope: !10957, file: !1709, line: 64, column: 5)
!10974 = !DILocation(line: 65, column: 14, scope: !10973)
!10975 = !DILocation(line: 65, column: 30, scope: !10973)
!10976 = !DILocation(line: 65, column: 34, scope: !10973)
!10977 = !DILocation(line: 65, column: 39, scope: !10973)
!10978 = !DILocation(line: 65, column: 21, scope: !10973)
!10979 = !DILocation(line: 66, column: 11, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10973, file: !1709, line: 66, column: 11)
!10981 = !DILocation(line: 66, column: 16, scope: !10980)
!10982 = !DILocation(line: 66, column: 11, scope: !10973)
!10983 = !DILocation(line: 67, column: 9, scope: !10980)
!10984 = !DILocation(line: 68, column: 11, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10973, file: !1709, line: 68, column: 11)
!10986 = !DILocation(line: 68, column: 16, scope: !10985)
!10987 = !DILocation(line: 68, column: 11, scope: !10973)
!10988 = !DILocation(line: 70, column: 11, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10985, file: !1709, line: 69, column: 9)
!10990 = !DILocation(line: 70, column: 17, scope: !10989)
!10991 = !DILocation(line: 71, column: 11, scope: !10989)
!10992 = !DILocation(line: 73, column: 16, scope: !10973)
!10993 = !DILocation(line: 73, column: 13, scope: !10973)
!10994 = !DILocation(line: 74, column: 14, scope: !10973)
!10995 = !DILocation(line: 74, column: 11, scope: !10973)
!10996 = !DILocation(line: 75, column: 16, scope: !10973)
!10997 = !DILocation(line: 75, column: 13, scope: !10973)
!10998 = distinct !{!10998, !10969, !10999}
!10999 = !DILocation(line: 76, column: 5, scope: !10957)
!11000 = !DILocation(line: 78, column: 10, scope: !10957)
!11001 = !DILocation(line: 78, column: 3, scope: !10957)
!11002 = distinct !DISubprogram(name: "full_write", scope: !11003, file: !11003, line: 58, type: !1711, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1708, retainedNodes: !206)
!11003 = !DIFile(filename: "lib/full-write.c", directory: "/home/mohamad/clone/coreutils")
!11004 = !DILocalVariable(name: "fd", arg: 1, scope: !11002, file: !11003, line: 58, type: !5)
!11005 = !DILocation(line: 58, column: 14, scope: !11002)
!11006 = !DILocalVariable(name: "buf", arg: 2, scope: !11002, file: !11003, line: 58, type: !525)
!11007 = !DILocation(line: 58, column: 30, scope: !11002)
!11008 = !DILocalVariable(name: "count", arg: 3, scope: !11002, file: !11003, line: 58, type: !52)
!11009 = !DILocation(line: 58, column: 42, scope: !11002)
!11010 = !DILocalVariable(name: "total", scope: !11002, file: !11003, line: 60, type: !52)
!11011 = !DILocation(line: 60, column: 10, scope: !11002)
!11012 = !DILocalVariable(name: "ptr", scope: !11002, file: !11003, line: 61, type: !177)
!11013 = !DILocation(line: 61, column: 15, scope: !11002)
!11014 = !DILocation(line: 61, column: 36, scope: !11002)
!11015 = !DILocation(line: 63, column: 3, scope: !11002)
!11016 = !DILocation(line: 63, column: 10, scope: !11002)
!11017 = !DILocation(line: 63, column: 16, scope: !11002)
!11018 = !DILocalVariable(name: "n_rw", scope: !11019, file: !11003, line: 65, type: !52)
!11019 = distinct !DILexicalBlock(scope: !11002, file: !11003, line: 64, column: 5)
!11020 = !DILocation(line: 65, column: 14, scope: !11019)
!11021 = !DILocation(line: 65, column: 30, scope: !11019)
!11022 = !DILocation(line: 65, column: 34, scope: !11019)
!11023 = !DILocation(line: 65, column: 39, scope: !11019)
!11024 = !DILocation(line: 65, column: 21, scope: !11019)
!11025 = !DILocation(line: 66, column: 11, scope: !11026)
!11026 = distinct !DILexicalBlock(scope: !11019, file: !11003, line: 66, column: 11)
!11027 = !DILocation(line: 66, column: 16, scope: !11026)
!11028 = !DILocation(line: 66, column: 11, scope: !11019)
!11029 = !DILocation(line: 67, column: 9, scope: !11026)
!11030 = !DILocation(line: 68, column: 11, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11019, file: !11003, line: 68, column: 11)
!11032 = !DILocation(line: 68, column: 16, scope: !11031)
!11033 = !DILocation(line: 68, column: 11, scope: !11019)
!11034 = !DILocation(line: 70, column: 11, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11031, file: !11003, line: 69, column: 9)
!11036 = !DILocation(line: 70, column: 17, scope: !11035)
!11037 = !DILocation(line: 71, column: 11, scope: !11035)
!11038 = !DILocation(line: 73, column: 16, scope: !11019)
!11039 = !DILocation(line: 73, column: 13, scope: !11019)
!11040 = !DILocation(line: 74, column: 14, scope: !11019)
!11041 = !DILocation(line: 74, column: 11, scope: !11019)
!11042 = !DILocation(line: 75, column: 16, scope: !11019)
!11043 = !DILocation(line: 75, column: 13, scope: !11019)
!11044 = distinct !{!11044, !11015, !11045}
!11045 = !DILocation(line: 76, column: 5, scope: !11002)
!11046 = !DILocation(line: 78, column: 10, scope: !11002)
!11047 = !DILocation(line: 78, column: 3, scope: !11002)
!11048 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !832, file: !832, line: 150, type: !826, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11049 = !DILocalVariable(name: "table", arg: 1, scope: !11048, file: !832, line: 150, type: !828)
!11050 = !DILocation(line: 150, column: 39, scope: !11048)
!11051 = !DILocation(line: 152, column: 10, scope: !11048)
!11052 = !DILocation(line: 152, column: 17, scope: !11048)
!11053 = !{!11054, !2936, i64 16}
!11054 = !{!"hash_table", !2669, i64 0, !2669, i64 8, !2936, i64 16, !2936, i64 24, !2936, i64 32, !2669, i64 40, !2669, i64 48, !2669, i64 56, !2669, i64 64, !2669, i64 72}
!11055 = !DILocation(line: 152, column: 3, scope: !11048)
!11056 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !832, file: !832, line: 158, type: !826, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11057 = !DILocalVariable(name: "table", arg: 1, scope: !11056, file: !832, line: 158, type: !828)
!11058 = !DILocation(line: 158, column: 44, scope: !11056)
!11059 = !DILocation(line: 160, column: 10, scope: !11056)
!11060 = !DILocation(line: 160, column: 17, scope: !11056)
!11061 = !{!11054, !2936, i64 24}
!11062 = !DILocation(line: 160, column: 3, scope: !11056)
!11063 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !832, file: !832, line: 166, type: !826, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11064 = !DILocalVariable(name: "table", arg: 1, scope: !11063, file: !832, line: 166, type: !828)
!11065 = !DILocation(line: 166, column: 39, scope: !11063)
!11066 = !DILocation(line: 168, column: 10, scope: !11063)
!11067 = !DILocation(line: 168, column: 17, scope: !11063)
!11068 = !{!11054, !2936, i64 32}
!11069 = !DILocation(line: 168, column: 3, scope: !11063)
!11070 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !832, file: !832, line: 174, type: !826, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11071 = !DILocalVariable(name: "table", arg: 1, scope: !11070, file: !832, line: 174, type: !828)
!11072 = !DILocation(line: 174, column: 47, scope: !11070)
!11073 = !DILocalVariable(name: "bucket", scope: !11070, file: !832, line: 176, type: !841)
!11074 = !DILocation(line: 176, column: 28, scope: !11070)
!11075 = !DILocalVariable(name: "max_bucket_length", scope: !11070, file: !832, line: 177, type: !52)
!11076 = !DILocation(line: 177, column: 10, scope: !11070)
!11077 = !DILocation(line: 179, column: 17, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11070, file: !832, line: 179, column: 3)
!11079 = !DILocation(line: 179, column: 24, scope: !11078)
!11080 = !{!11054, !2669, i64 0}
!11081 = !DILocation(line: 179, column: 15, scope: !11078)
!11082 = !DILocation(line: 179, column: 8, scope: !11078)
!11083 = !DILocation(line: 179, column: 32, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11078, file: !832, line: 179, column: 3)
!11085 = !DILocation(line: 179, column: 41, scope: !11084)
!11086 = !DILocation(line: 179, column: 48, scope: !11084)
!11087 = !{!11054, !2669, i64 8}
!11088 = !DILocation(line: 179, column: 39, scope: !11084)
!11089 = !DILocation(line: 179, column: 3, scope: !11078)
!11090 = !DILocation(line: 181, column: 11, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11092, file: !832, line: 181, column: 11)
!11092 = distinct !DILexicalBlock(scope: !11084, file: !832, line: 180, column: 5)
!11093 = !DILocation(line: 181, column: 19, scope: !11091)
!11094 = !{!11095, !2669, i64 0}
!11095 = !{!"hash_entry", !2669, i64 0, !2669, i64 8}
!11096 = !DILocation(line: 181, column: 11, scope: !11092)
!11097 = !DILocalVariable(name: "cursor", scope: !11098, file: !832, line: 183, type: !841)
!11098 = distinct !DILexicalBlock(scope: !11091, file: !832, line: 182, column: 9)
!11099 = !DILocation(line: 183, column: 36, scope: !11098)
!11100 = !DILocation(line: 183, column: 45, scope: !11098)
!11101 = !DILocalVariable(name: "bucket_length", scope: !11098, file: !832, line: 184, type: !52)
!11102 = !DILocation(line: 184, column: 18, scope: !11098)
!11103 = !DILocation(line: 186, column: 11, scope: !11098)
!11104 = !DILocation(line: 186, column: 27, scope: !11098)
!11105 = !DILocation(line: 186, column: 35, scope: !11098)
!11106 = !{!11095, !2669, i64 8}
!11107 = !DILocation(line: 186, column: 25, scope: !11098)
!11108 = !DILocation(line: 186, column: 41, scope: !11098)
!11109 = !DILocation(line: 187, column: 26, scope: !11098)
!11110 = distinct !{!11110, !11103, !11109}
!11111 = !DILocation(line: 189, column: 15, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11098, file: !832, line: 189, column: 15)
!11113 = !DILocation(line: 189, column: 31, scope: !11112)
!11114 = !DILocation(line: 189, column: 29, scope: !11112)
!11115 = !DILocation(line: 189, column: 15, scope: !11098)
!11116 = !DILocation(line: 190, column: 33, scope: !11112)
!11117 = !DILocation(line: 190, column: 31, scope: !11112)
!11118 = !DILocation(line: 190, column: 13, scope: !11112)
!11119 = !DILocation(line: 191, column: 9, scope: !11098)
!11120 = !DILocation(line: 192, column: 5, scope: !11092)
!11121 = !DILocation(line: 179, column: 68, scope: !11084)
!11122 = !DILocation(line: 179, column: 3, scope: !11084)
!11123 = distinct !{!11123, !11089, !11124}
!11124 = !DILocation(line: 192, column: 5, scope: !11078)
!11125 = !DILocation(line: 194, column: 10, scope: !11070)
!11126 = !DILocation(line: 194, column: 3, scope: !11070)
!11127 = distinct !DISubprogram(name: "hash_table_ok", scope: !832, file: !832, line: 201, type: !868, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11128 = !DILocalVariable(name: "table", arg: 1, scope: !11127, file: !832, line: 201, type: !828)
!11129 = !DILocation(line: 201, column: 34, scope: !11127)
!11130 = !DILocalVariable(name: "bucket", scope: !11127, file: !832, line: 203, type: !841)
!11131 = !DILocation(line: 203, column: 28, scope: !11127)
!11132 = !DILocalVariable(name: "n_buckets_used", scope: !11127, file: !832, line: 204, type: !52)
!11133 = !DILocation(line: 204, column: 10, scope: !11127)
!11134 = !DILocalVariable(name: "n_entries", scope: !11127, file: !832, line: 205, type: !52)
!11135 = !DILocation(line: 205, column: 10, scope: !11127)
!11136 = !DILocation(line: 207, column: 17, scope: !11137)
!11137 = distinct !DILexicalBlock(scope: !11127, file: !832, line: 207, column: 3)
!11138 = !DILocation(line: 207, column: 24, scope: !11137)
!11139 = !DILocation(line: 207, column: 15, scope: !11137)
!11140 = !DILocation(line: 207, column: 8, scope: !11137)
!11141 = !DILocation(line: 207, column: 32, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11137, file: !832, line: 207, column: 3)
!11143 = !DILocation(line: 207, column: 41, scope: !11142)
!11144 = !DILocation(line: 207, column: 48, scope: !11142)
!11145 = !DILocation(line: 207, column: 39, scope: !11142)
!11146 = !DILocation(line: 207, column: 3, scope: !11137)
!11147 = !DILocation(line: 209, column: 11, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !832, line: 209, column: 11)
!11149 = distinct !DILexicalBlock(scope: !11142, file: !832, line: 208, column: 5)
!11150 = !DILocation(line: 209, column: 19, scope: !11148)
!11151 = !DILocation(line: 209, column: 11, scope: !11149)
!11152 = !DILocalVariable(name: "cursor", scope: !11153, file: !832, line: 211, type: !841)
!11153 = distinct !DILexicalBlock(scope: !11148, file: !832, line: 210, column: 9)
!11154 = !DILocation(line: 211, column: 36, scope: !11153)
!11155 = !DILocation(line: 211, column: 45, scope: !11153)
!11156 = !DILocation(line: 214, column: 25, scope: !11153)
!11157 = !DILocation(line: 215, column: 20, scope: !11153)
!11158 = !DILocation(line: 218, column: 11, scope: !11153)
!11159 = !DILocation(line: 218, column: 27, scope: !11153)
!11160 = !DILocation(line: 218, column: 35, scope: !11153)
!11161 = !DILocation(line: 218, column: 25, scope: !11153)
!11162 = !DILocation(line: 218, column: 41, scope: !11153)
!11163 = !DILocation(line: 219, column: 22, scope: !11153)
!11164 = distinct !{!11164, !11158, !11163}
!11165 = !DILocation(line: 220, column: 9, scope: !11153)
!11166 = !DILocation(line: 221, column: 5, scope: !11149)
!11167 = !DILocation(line: 207, column: 68, scope: !11142)
!11168 = !DILocation(line: 207, column: 3, scope: !11142)
!11169 = distinct !{!11169, !11146, !11170}
!11170 = !DILocation(line: 221, column: 5, scope: !11137)
!11171 = !DILocation(line: 223, column: 7, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11127, file: !832, line: 223, column: 7)
!11173 = !DILocation(line: 223, column: 25, scope: !11172)
!11174 = !DILocation(line: 223, column: 32, scope: !11172)
!11175 = !DILocation(line: 223, column: 22, scope: !11172)
!11176 = !DILocation(line: 223, column: 47, scope: !11172)
!11177 = !DILocation(line: 223, column: 50, scope: !11172)
!11178 = !DILocation(line: 223, column: 63, scope: !11172)
!11179 = !DILocation(line: 223, column: 70, scope: !11172)
!11180 = !DILocation(line: 223, column: 60, scope: !11172)
!11181 = !DILocation(line: 223, column: 7, scope: !11127)
!11182 = !DILocation(line: 224, column: 5, scope: !11172)
!11183 = !DILocation(line: 226, column: 3, scope: !11127)
!11184 = !DILocation(line: 227, column: 1, scope: !11127)
!11185 = distinct !DISubprogram(name: "hash_print_statistics", scope: !832, file: !832, line: 230, type: !870, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11186 = !DILocalVariable(name: "table", arg: 1, scope: !11185, file: !832, line: 230, type: !828)
!11187 = !DILocation(line: 230, column: 42, scope: !11185)
!11188 = !DILocalVariable(name: "stream", arg: 2, scope: !11185, file: !832, line: 230, type: !872)
!11189 = !DILocation(line: 230, column: 55, scope: !11185)
!11190 = !DILocalVariable(name: "n_entries", scope: !11185, file: !832, line: 232, type: !52)
!11191 = !DILocation(line: 232, column: 10, scope: !11185)
!11192 = !DILocation(line: 232, column: 42, scope: !11185)
!11193 = !DILocation(line: 232, column: 22, scope: !11185)
!11194 = !DILocalVariable(name: "n_buckets", scope: !11185, file: !832, line: 233, type: !52)
!11195 = !DILocation(line: 233, column: 10, scope: !11185)
!11196 = !DILocation(line: 233, column: 42, scope: !11185)
!11197 = !DILocation(line: 233, column: 22, scope: !11185)
!11198 = !DILocalVariable(name: "n_buckets_used", scope: !11185, file: !832, line: 234, type: !52)
!11199 = !DILocation(line: 234, column: 10, scope: !11185)
!11200 = !DILocation(line: 234, column: 52, scope: !11185)
!11201 = !DILocation(line: 234, column: 27, scope: !11185)
!11202 = !DILocalVariable(name: "max_bucket_length", scope: !11185, file: !832, line: 235, type: !52)
!11203 = !DILocation(line: 235, column: 10, scope: !11185)
!11204 = !DILocation(line: 235, column: 58, scope: !11185)
!11205 = !DILocation(line: 235, column: 30, scope: !11185)
!11206 = !DILocation(line: 237, column: 12, scope: !11185)
!11207 = !DILocation(line: 237, column: 68, scope: !11185)
!11208 = !DILocation(line: 237, column: 3, scope: !11185)
!11209 = !DILocation(line: 238, column: 12, scope: !11185)
!11210 = !DILocation(line: 238, column: 68, scope: !11185)
!11211 = !DILocation(line: 238, column: 3, scope: !11185)
!11212 = !DILocation(line: 239, column: 12, scope: !11185)
!11213 = !DILocation(line: 240, column: 32, scope: !11185)
!11214 = !DILocation(line: 241, column: 21, scope: !11185)
!11215 = !DILocation(line: 241, column: 19, scope: !11185)
!11216 = !DILocation(line: 241, column: 39, scope: !11185)
!11217 = !DILocation(line: 241, column: 37, scope: !11185)
!11218 = !DILocation(line: 239, column: 3, scope: !11185)
!11219 = !DILocation(line: 242, column: 12, scope: !11185)
!11220 = !DILocation(line: 243, column: 32, scope: !11185)
!11221 = !DILocation(line: 242, column: 3, scope: !11185)
!11222 = !DILocation(line: 244, column: 1, scope: !11185)
!11223 = distinct !DISubprogram(name: "hash_lookup", scope: !832, file: !832, line: 261, type: !912, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11224 = !DILocalVariable(name: "table", arg: 1, scope: !11223, file: !832, line: 261, type: !828)
!11225 = !DILocation(line: 261, column: 32, scope: !11223)
!11226 = !DILocalVariable(name: "entry", arg: 2, scope: !11223, file: !832, line: 261, type: !525)
!11227 = !DILocation(line: 261, column: 51, scope: !11223)
!11228 = !DILocalVariable(name: "bucket", scope: !11223, file: !832, line: 263, type: !841)
!11229 = !DILocation(line: 263, column: 28, scope: !11223)
!11230 = !DILocation(line: 263, column: 50, scope: !11223)
!11231 = !DILocation(line: 263, column: 57, scope: !11223)
!11232 = !DILocation(line: 263, column: 37, scope: !11223)
!11233 = !DILocalVariable(name: "cursor", scope: !11223, file: !832, line: 264, type: !841)
!11234 = !DILocation(line: 264, column: 28, scope: !11223)
!11235 = !DILocation(line: 266, column: 7, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11223, file: !832, line: 266, column: 7)
!11237 = !DILocation(line: 266, column: 15, scope: !11236)
!11238 = !DILocation(line: 266, column: 20, scope: !11236)
!11239 = !DILocation(line: 266, column: 7, scope: !11223)
!11240 = !DILocation(line: 267, column: 5, scope: !11236)
!11241 = !DILocation(line: 269, column: 17, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11223, file: !832, line: 269, column: 3)
!11243 = !DILocation(line: 269, column: 15, scope: !11242)
!11244 = !DILocation(line: 269, column: 8, scope: !11242)
!11245 = !DILocation(line: 269, column: 25, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11242, file: !832, line: 269, column: 3)
!11247 = !DILocation(line: 269, column: 3, scope: !11242)
!11248 = !DILocation(line: 270, column: 9, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11246, file: !832, line: 270, column: 9)
!11250 = !DILocation(line: 270, column: 18, scope: !11249)
!11251 = !DILocation(line: 270, column: 26, scope: !11249)
!11252 = !DILocation(line: 270, column: 15, scope: !11249)
!11253 = !DILocation(line: 270, column: 31, scope: !11249)
!11254 = !DILocation(line: 270, column: 34, scope: !11249)
!11255 = !DILocation(line: 270, column: 41, scope: !11249)
!11256 = !{!11054, !2669, i64 56}
!11257 = !DILocation(line: 270, column: 53, scope: !11249)
!11258 = !DILocation(line: 270, column: 60, scope: !11249)
!11259 = !DILocation(line: 270, column: 68, scope: !11249)
!11260 = !DILocation(line: 270, column: 9, scope: !11246)
!11261 = !DILocation(line: 271, column: 14, scope: !11249)
!11262 = !DILocation(line: 271, column: 22, scope: !11249)
!11263 = !DILocation(line: 271, column: 7, scope: !11249)
!11264 = !DILocation(line: 270, column: 72, scope: !11249)
!11265 = !DILocation(line: 269, column: 42, scope: !11246)
!11266 = !DILocation(line: 269, column: 50, scope: !11246)
!11267 = !DILocation(line: 269, column: 40, scope: !11246)
!11268 = !DILocation(line: 269, column: 3, scope: !11246)
!11269 = distinct !{!11269, !11247, !11270}
!11270 = !DILocation(line: 271, column: 22, scope: !11242)
!11271 = !DILocation(line: 273, column: 3, scope: !11223)
!11272 = !DILocation(line: 274, column: 1, scope: !11223)
!11273 = distinct !DISubprogram(name: "safe_hasher", scope: !832, file: !832, line: 249, type: !942, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11274 = !DILocalVariable(name: "table", arg: 1, scope: !11273, file: !832, line: 249, type: !828)
!11275 = !DILocation(line: 249, column: 32, scope: !11273)
!11276 = !DILocalVariable(name: "key", arg: 2, scope: !11273, file: !832, line: 249, type: !525)
!11277 = !DILocation(line: 249, column: 51, scope: !11273)
!11278 = !DILocalVariable(name: "n", scope: !11273, file: !832, line: 251, type: !52)
!11279 = !DILocation(line: 251, column: 10, scope: !11273)
!11280 = !DILocation(line: 251, column: 14, scope: !11273)
!11281 = !DILocation(line: 251, column: 21, scope: !11273)
!11282 = !{!11054, !2669, i64 48}
!11283 = !DILocation(line: 251, column: 29, scope: !11273)
!11284 = !DILocation(line: 251, column: 34, scope: !11273)
!11285 = !DILocation(line: 251, column: 41, scope: !11273)
!11286 = !DILocation(line: 252, column: 10, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11273, file: !832, line: 252, column: 7)
!11288 = !DILocation(line: 252, column: 14, scope: !11287)
!11289 = !DILocation(line: 252, column: 21, scope: !11287)
!11290 = !DILocation(line: 252, column: 12, scope: !11287)
!11291 = !DILocation(line: 252, column: 7, scope: !11273)
!11292 = !DILocation(line: 253, column: 5, scope: !11287)
!11293 = !DILocation(line: 254, column: 10, scope: !11273)
!11294 = !DILocation(line: 254, column: 17, scope: !11273)
!11295 = !DILocation(line: 254, column: 26, scope: !11273)
!11296 = !DILocation(line: 254, column: 24, scope: !11273)
!11297 = !DILocation(line: 254, column: 3, scope: !11273)
!11298 = distinct !DISubprogram(name: "hash_get_first", scope: !832, file: !832, line: 288, type: !914, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11299 = !DILocalVariable(name: "table", arg: 1, scope: !11298, file: !832, line: 288, type: !828)
!11300 = !DILocation(line: 288, column: 35, scope: !11298)
!11301 = !DILocalVariable(name: "bucket", scope: !11298, file: !832, line: 290, type: !841)
!11302 = !DILocation(line: 290, column: 28, scope: !11298)
!11303 = !DILocation(line: 292, column: 7, scope: !11304)
!11304 = distinct !DILexicalBlock(scope: !11298, file: !832, line: 292, column: 7)
!11305 = !DILocation(line: 292, column: 14, scope: !11304)
!11306 = !DILocation(line: 292, column: 24, scope: !11304)
!11307 = !DILocation(line: 292, column: 7, scope: !11298)
!11308 = !DILocation(line: 293, column: 5, scope: !11304)
!11309 = !DILocation(line: 295, column: 17, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11298, file: !832, line: 295, column: 3)
!11311 = !DILocation(line: 295, column: 24, scope: !11310)
!11312 = !DILocation(line: 295, column: 15, scope: !11310)
!11313 = !DILocation(line: 295, column: 8, scope: !11310)
!11314 = !DILocation(line: 296, column: 12, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11316, file: !832, line: 296, column: 9)
!11316 = distinct !DILexicalBlock(scope: !11310, file: !832, line: 295, column: 3)
!11317 = !DILocation(line: 296, column: 21, scope: !11315)
!11318 = !DILocation(line: 296, column: 28, scope: !11315)
!11319 = !DILocation(line: 296, column: 19, scope: !11315)
!11320 = !DILocation(line: 296, column: 9, scope: !11316)
!11321 = !DILocation(line: 297, column: 7, scope: !11315)
!11322 = !DILocation(line: 298, column: 14, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11315, file: !832, line: 298, column: 14)
!11324 = !DILocation(line: 298, column: 22, scope: !11323)
!11325 = !DILocation(line: 298, column: 14, scope: !11315)
!11326 = !DILocation(line: 299, column: 14, scope: !11323)
!11327 = !DILocation(line: 299, column: 22, scope: !11323)
!11328 = !DILocation(line: 299, column: 7, scope: !11323)
!11329 = !DILocation(line: 296, column: 40, scope: !11315)
!11330 = !DILocation(line: 295, column: 40, scope: !11316)
!11331 = !DILocation(line: 295, column: 3, scope: !11316)
!11332 = distinct !{!11332, !11333, !11334}
!11333 = !DILocation(line: 295, column: 3, scope: !11310)
!11334 = !DILocation(line: 299, column: 22, scope: !11310)
!11335 = !DILocation(line: 300, column: 1, scope: !11298)
!11336 = distinct !DISubprogram(name: "hash_get_next", scope: !832, file: !832, line: 307, type: !912, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11337 = !DILocalVariable(name: "table", arg: 1, scope: !11336, file: !832, line: 307, type: !828)
!11338 = !DILocation(line: 307, column: 34, scope: !11336)
!11339 = !DILocalVariable(name: "entry", arg: 2, scope: !11336, file: !832, line: 307, type: !525)
!11340 = !DILocation(line: 307, column: 53, scope: !11336)
!11341 = !DILocalVariable(name: "bucket", scope: !11336, file: !832, line: 309, type: !841)
!11342 = !DILocation(line: 309, column: 28, scope: !11336)
!11343 = !DILocation(line: 309, column: 50, scope: !11336)
!11344 = !DILocation(line: 309, column: 57, scope: !11336)
!11345 = !DILocation(line: 309, column: 37, scope: !11336)
!11346 = !DILocalVariable(name: "cursor", scope: !11336, file: !832, line: 310, type: !841)
!11347 = !DILocation(line: 310, column: 28, scope: !11336)
!11348 = !DILocation(line: 313, column: 12, scope: !11336)
!11349 = !DILocation(line: 313, column: 10, scope: !11336)
!11350 = !DILocation(line: 314, column: 3, scope: !11336)
!11351 = !DILocation(line: 316, column: 11, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11353, file: !832, line: 316, column: 11)
!11353 = distinct !DILexicalBlock(scope: !11336, file: !832, line: 315, column: 5)
!11354 = !DILocation(line: 316, column: 19, scope: !11352)
!11355 = !DILocation(line: 316, column: 27, scope: !11352)
!11356 = !DILocation(line: 316, column: 24, scope: !11352)
!11357 = !DILocation(line: 316, column: 33, scope: !11352)
!11358 = !DILocation(line: 316, column: 36, scope: !11352)
!11359 = !DILocation(line: 316, column: 44, scope: !11352)
!11360 = !DILocation(line: 316, column: 11, scope: !11353)
!11361 = !DILocation(line: 317, column: 16, scope: !11352)
!11362 = !DILocation(line: 317, column: 24, scope: !11352)
!11363 = !DILocation(line: 317, column: 30, scope: !11352)
!11364 = !DILocation(line: 317, column: 9, scope: !11352)
!11365 = !DILocation(line: 318, column: 16, scope: !11353)
!11366 = !DILocation(line: 318, column: 24, scope: !11353)
!11367 = !DILocation(line: 318, column: 14, scope: !11353)
!11368 = !DILocation(line: 319, column: 5, scope: !11353)
!11369 = !DILocation(line: 320, column: 10, scope: !11336)
!11370 = !DILocation(line: 320, column: 17, scope: !11336)
!11371 = distinct !{!11371, !11350, !11372}
!11372 = !DILocation(line: 320, column: 24, scope: !11336)
!11373 = !DILocation(line: 323, column: 3, scope: !11336)
!11374 = !DILocation(line: 323, column: 10, scope: !11336)
!11375 = !DILocation(line: 323, column: 21, scope: !11336)
!11376 = !DILocation(line: 323, column: 28, scope: !11336)
!11377 = !DILocation(line: 323, column: 19, scope: !11336)
!11378 = !DILocation(line: 324, column: 9, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11336, file: !832, line: 324, column: 9)
!11380 = !DILocation(line: 324, column: 17, scope: !11379)
!11381 = !DILocation(line: 324, column: 9, scope: !11336)
!11382 = !DILocation(line: 325, column: 14, scope: !11379)
!11383 = !DILocation(line: 325, column: 22, scope: !11379)
!11384 = !DILocation(line: 325, column: 7, scope: !11379)
!11385 = distinct !{!11385, !11373, !11386}
!11386 = !DILocation(line: 325, column: 22, scope: !11336)
!11387 = !DILocation(line: 328, column: 3, scope: !11336)
!11388 = !DILocation(line: 329, column: 1, scope: !11336)
!11389 = distinct !DISubprogram(name: "hash_get_entries", scope: !832, file: !832, line: 336, type: !916, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11390 = !DILocalVariable(name: "table", arg: 1, scope: !11389, file: !832, line: 336, type: !828)
!11391 = !DILocation(line: 336, column: 37, scope: !11389)
!11392 = !DILocalVariable(name: "buffer", arg: 2, scope: !11389, file: !832, line: 336, type: !918)
!11393 = !DILocation(line: 336, column: 51, scope: !11389)
!11394 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11389, file: !832, line: 337, type: !52)
!11395 = !DILocation(line: 337, column: 26, scope: !11389)
!11396 = !DILocalVariable(name: "counter", scope: !11389, file: !832, line: 339, type: !52)
!11397 = !DILocation(line: 339, column: 10, scope: !11389)
!11398 = !DILocalVariable(name: "bucket", scope: !11389, file: !832, line: 340, type: !841)
!11399 = !DILocation(line: 340, column: 28, scope: !11389)
!11400 = !DILocalVariable(name: "cursor", scope: !11389, file: !832, line: 341, type: !841)
!11401 = !DILocation(line: 341, column: 28, scope: !11389)
!11402 = !DILocation(line: 343, column: 17, scope: !11403)
!11403 = distinct !DILexicalBlock(scope: !11389, file: !832, line: 343, column: 3)
!11404 = !DILocation(line: 343, column: 24, scope: !11403)
!11405 = !DILocation(line: 343, column: 15, scope: !11403)
!11406 = !DILocation(line: 343, column: 8, scope: !11403)
!11407 = !DILocation(line: 343, column: 32, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11403, file: !832, line: 343, column: 3)
!11409 = !DILocation(line: 343, column: 41, scope: !11408)
!11410 = !DILocation(line: 343, column: 48, scope: !11408)
!11411 = !DILocation(line: 343, column: 39, scope: !11408)
!11412 = !DILocation(line: 343, column: 3, scope: !11403)
!11413 = !DILocation(line: 345, column: 11, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !832, line: 345, column: 11)
!11415 = distinct !DILexicalBlock(scope: !11408, file: !832, line: 344, column: 5)
!11416 = !DILocation(line: 345, column: 19, scope: !11414)
!11417 = !DILocation(line: 345, column: 11, scope: !11415)
!11418 = !DILocation(line: 347, column: 25, scope: !11419)
!11419 = distinct !DILexicalBlock(scope: !11420, file: !832, line: 347, column: 11)
!11420 = distinct !DILexicalBlock(scope: !11414, file: !832, line: 346, column: 9)
!11421 = !DILocation(line: 347, column: 23, scope: !11419)
!11422 = !DILocation(line: 347, column: 16, scope: !11419)
!11423 = !DILocation(line: 347, column: 33, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11419, file: !832, line: 347, column: 11)
!11425 = !DILocation(line: 347, column: 11, scope: !11419)
!11426 = !DILocation(line: 349, column: 19, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11428, file: !832, line: 349, column: 19)
!11428 = distinct !DILexicalBlock(scope: !11424, file: !832, line: 348, column: 13)
!11429 = !DILocation(line: 349, column: 30, scope: !11427)
!11430 = !DILocation(line: 349, column: 27, scope: !11427)
!11431 = !DILocation(line: 349, column: 19, scope: !11428)
!11432 = !DILocation(line: 350, column: 24, scope: !11427)
!11433 = !DILocation(line: 350, column: 17, scope: !11427)
!11434 = !DILocation(line: 351, column: 35, scope: !11428)
!11435 = !DILocation(line: 351, column: 43, scope: !11428)
!11436 = !DILocation(line: 351, column: 15, scope: !11428)
!11437 = !DILocation(line: 351, column: 29, scope: !11428)
!11438 = !DILocation(line: 351, column: 33, scope: !11428)
!11439 = !DILocation(line: 352, column: 13, scope: !11428)
!11440 = !DILocation(line: 347, column: 50, scope: !11424)
!11441 = !DILocation(line: 347, column: 58, scope: !11424)
!11442 = !DILocation(line: 347, column: 48, scope: !11424)
!11443 = !DILocation(line: 347, column: 11, scope: !11424)
!11444 = distinct !{!11444, !11425, !11445}
!11445 = !DILocation(line: 352, column: 13, scope: !11419)
!11446 = !DILocation(line: 353, column: 9, scope: !11420)
!11447 = !DILocation(line: 354, column: 5, scope: !11415)
!11448 = !DILocation(line: 343, column: 68, scope: !11408)
!11449 = !DILocation(line: 343, column: 3, scope: !11408)
!11450 = distinct !{!11450, !11412, !11451}
!11451 = !DILocation(line: 354, column: 5, scope: !11403)
!11452 = !DILocation(line: 356, column: 10, scope: !11389)
!11453 = !DILocation(line: 356, column: 3, scope: !11389)
!11454 = !DILocation(line: 357, column: 1, scope: !11389)
!11455 = distinct !DISubprogram(name: "hash_do_for_each", scope: !832, file: !832, line: 368, type: !919, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11456 = !DILocalVariable(name: "table", arg: 1, scope: !11455, file: !832, line: 368, type: !828)
!11457 = !DILocation(line: 368, column: 37, scope: !11455)
!11458 = !DILocalVariable(name: "processor", arg: 2, scope: !11455, file: !832, line: 368, type: !921)
!11459 = !DILocation(line: 368, column: 59, scope: !11455)
!11460 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11455, file: !832, line: 369, type: !47)
!11461 = !DILocation(line: 369, column: 25, scope: !11455)
!11462 = !DILocalVariable(name: "counter", scope: !11455, file: !832, line: 371, type: !52)
!11463 = !DILocation(line: 371, column: 10, scope: !11455)
!11464 = !DILocalVariable(name: "bucket", scope: !11455, file: !832, line: 372, type: !841)
!11465 = !DILocation(line: 372, column: 28, scope: !11455)
!11466 = !DILocalVariable(name: "cursor", scope: !11455, file: !832, line: 373, type: !841)
!11467 = !DILocation(line: 373, column: 28, scope: !11455)
!11468 = !DILocation(line: 375, column: 17, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11455, file: !832, line: 375, column: 3)
!11470 = !DILocation(line: 375, column: 24, scope: !11469)
!11471 = !DILocation(line: 375, column: 15, scope: !11469)
!11472 = !DILocation(line: 375, column: 8, scope: !11469)
!11473 = !DILocation(line: 375, column: 32, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11469, file: !832, line: 375, column: 3)
!11475 = !DILocation(line: 375, column: 41, scope: !11474)
!11476 = !DILocation(line: 375, column: 48, scope: !11474)
!11477 = !DILocation(line: 375, column: 39, scope: !11474)
!11478 = !DILocation(line: 375, column: 3, scope: !11469)
!11479 = !DILocation(line: 377, column: 11, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11481, file: !832, line: 377, column: 11)
!11481 = distinct !DILexicalBlock(scope: !11474, file: !832, line: 376, column: 5)
!11482 = !DILocation(line: 377, column: 19, scope: !11480)
!11483 = !DILocation(line: 377, column: 11, scope: !11481)
!11484 = !DILocation(line: 379, column: 25, scope: !11485)
!11485 = distinct !DILexicalBlock(scope: !11486, file: !832, line: 379, column: 11)
!11486 = distinct !DILexicalBlock(scope: !11480, file: !832, line: 378, column: 9)
!11487 = !DILocation(line: 379, column: 23, scope: !11485)
!11488 = !DILocation(line: 379, column: 16, scope: !11485)
!11489 = !DILocation(line: 379, column: 33, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11485, file: !832, line: 379, column: 11)
!11491 = !DILocation(line: 379, column: 11, scope: !11485)
!11492 = !DILocation(line: 381, column: 21, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !832, line: 381, column: 19)
!11494 = distinct !DILexicalBlock(scope: !11490, file: !832, line: 380, column: 13)
!11495 = !DILocation(line: 381, column: 32, scope: !11493)
!11496 = !DILocation(line: 381, column: 40, scope: !11493)
!11497 = !DILocation(line: 381, column: 46, scope: !11493)
!11498 = !DILocation(line: 381, column: 19, scope: !11494)
!11499 = !DILocation(line: 382, column: 24, scope: !11493)
!11500 = !DILocation(line: 382, column: 17, scope: !11493)
!11501 = !DILocation(line: 383, column: 22, scope: !11494)
!11502 = !DILocation(line: 384, column: 13, scope: !11494)
!11503 = !DILocation(line: 379, column: 50, scope: !11490)
!11504 = !DILocation(line: 379, column: 58, scope: !11490)
!11505 = !DILocation(line: 379, column: 48, scope: !11490)
!11506 = !DILocation(line: 379, column: 11, scope: !11490)
!11507 = distinct !{!11507, !11491, !11508}
!11508 = !DILocation(line: 384, column: 13, scope: !11485)
!11509 = !DILocation(line: 385, column: 9, scope: !11486)
!11510 = !DILocation(line: 386, column: 5, scope: !11481)
!11511 = !DILocation(line: 375, column: 68, scope: !11474)
!11512 = !DILocation(line: 375, column: 3, scope: !11474)
!11513 = distinct !{!11513, !11478, !11514}
!11514 = !DILocation(line: 386, column: 5, scope: !11469)
!11515 = !DILocation(line: 388, column: 10, scope: !11455)
!11516 = !DILocation(line: 388, column: 3, scope: !11455)
!11517 = !DILocation(line: 389, column: 1, scope: !11455)
!11518 = distinct !DISubprogram(name: "hash_string", scope: !832, file: !832, line: 428, type: !925, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11519 = !DILocalVariable(name: "string", arg: 1, scope: !11518, file: !832, line: 428, type: !177)
!11520 = !DILocation(line: 428, column: 26, scope: !11518)
!11521 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11518, file: !832, line: 428, type: !52)
!11522 = !DILocation(line: 428, column: 41, scope: !11518)
!11523 = !DILocalVariable(name: "value", scope: !11518, file: !832, line: 430, type: !52)
!11524 = !DILocation(line: 430, column: 10, scope: !11518)
!11525 = !DILocalVariable(name: "ch", scope: !11518, file: !832, line: 431, type: !565)
!11526 = !DILocation(line: 431, column: 17, scope: !11518)
!11527 = !DILocation(line: 433, column: 3, scope: !11518)
!11528 = !DILocation(line: 433, column: 17, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !832, line: 433, column: 3)
!11530 = distinct !DILexicalBlock(scope: !11518, file: !832, line: 433, column: 3)
!11531 = !DILocation(line: 433, column: 16, scope: !11529)
!11532 = !DILocation(line: 433, column: 14, scope: !11529)
!11533 = !DILocation(line: 433, column: 3, scope: !11530)
!11534 = !DILocation(line: 434, column: 14, scope: !11529)
!11535 = !DILocation(line: 434, column: 20, scope: !11529)
!11536 = !DILocation(line: 434, column: 27, scope: !11529)
!11537 = !DILocation(line: 434, column: 25, scope: !11529)
!11538 = !DILocation(line: 434, column: 33, scope: !11529)
!11539 = !DILocation(line: 434, column: 31, scope: !11529)
!11540 = !DILocation(line: 434, column: 11, scope: !11529)
!11541 = !DILocation(line: 434, column: 5, scope: !11529)
!11542 = !DILocation(line: 433, column: 32, scope: !11529)
!11543 = !DILocation(line: 433, column: 3, scope: !11529)
!11544 = distinct !{!11544, !11533, !11545}
!11545 = !DILocation(line: 434, column: 33, scope: !11530)
!11546 = !DILocation(line: 435, column: 10, scope: !11518)
!11547 = !DILocation(line: 435, column: 3, scope: !11518)
!11548 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !832, file: !832, line: 479, type: !927, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11549 = !DILocalVariable(name: "tuning", arg: 1, scope: !11548, file: !832, line: 479, type: !929)
!11550 = !DILocation(line: 479, column: 33, scope: !11548)
!11551 = !DILocation(line: 481, column: 4, scope: !11548)
!11552 = !DILocation(line: 481, column: 13, scope: !11548)
!11553 = !{i64 0, i64 4, !11554, i64 4, i64 4, !11554, i64 8, i64 4, !11554, i64 12, i64 4, !11554, i64 16, i64 1, !2762}
!11554 = !{!11555, !11555, i64 0}
!11555 = !{!"float", !2657, i64 0}
!11556 = !DILocation(line: 482, column: 1, scope: !11548)
!11557 = distinct !DISubprogram(name: "hash_initialize", scope: !832, file: !832, line: 594, type: !930, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11558 = !DILocalVariable(name: "candidate", arg: 1, scope: !11557, file: !832, line: 594, type: !52)
!11559 = !DILocation(line: 594, column: 25, scope: !11557)
!11560 = !DILocalVariable(name: "tuning", arg: 2, scope: !11557, file: !832, line: 594, type: !847)
!11561 = !DILocation(line: 594, column: 55, scope: !11557)
!11562 = !DILocalVariable(name: "hasher", arg: 3, scope: !11557, file: !832, line: 595, type: !859)
!11563 = !DILocation(line: 595, column: 30, scope: !11557)
!11564 = !DILocalVariable(name: "comparator", arg: 4, scope: !11557, file: !832, line: 595, type: !862)
!11565 = !DILocation(line: 595, column: 54, scope: !11557)
!11566 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11557, file: !832, line: 596, type: !865)
!11567 = !DILocation(line: 596, column: 34, scope: !11557)
!11568 = !DILocalVariable(name: "table", scope: !11557, file: !832, line: 598, type: !932)
!11569 = !DILocation(line: 598, column: 15, scope: !11557)
!11570 = !DILocation(line: 600, column: 7, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11557, file: !832, line: 600, column: 7)
!11572 = !DILocation(line: 600, column: 14, scope: !11571)
!11573 = !DILocation(line: 600, column: 7, scope: !11557)
!11574 = !DILocation(line: 601, column: 12, scope: !11571)
!11575 = !DILocation(line: 601, column: 5, scope: !11571)
!11576 = !DILocation(line: 602, column: 7, scope: !11577)
!11577 = distinct !DILexicalBlock(scope: !11557, file: !832, line: 602, column: 7)
!11578 = !DILocation(line: 602, column: 18, scope: !11577)
!11579 = !DILocation(line: 602, column: 7, scope: !11557)
!11580 = !DILocation(line: 603, column: 16, scope: !11577)
!11581 = !DILocation(line: 603, column: 5, scope: !11577)
!11582 = !DILocation(line: 605, column: 11, scope: !11557)
!11583 = !DILocation(line: 605, column: 9, scope: !11557)
!11584 = !DILocation(line: 606, column: 7, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11557, file: !832, line: 606, column: 7)
!11586 = !DILocation(line: 606, column: 13, scope: !11585)
!11587 = !DILocation(line: 606, column: 7, scope: !11557)
!11588 = !DILocation(line: 607, column: 5, scope: !11585)
!11589 = !DILocation(line: 609, column: 8, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11557, file: !832, line: 609, column: 7)
!11591 = !DILocation(line: 609, column: 7, scope: !11557)
!11592 = !DILocation(line: 610, column: 12, scope: !11590)
!11593 = !DILocation(line: 610, column: 5, scope: !11590)
!11594 = !DILocation(line: 611, column: 19, scope: !11557)
!11595 = !DILocation(line: 611, column: 3, scope: !11557)
!11596 = !DILocation(line: 611, column: 10, scope: !11557)
!11597 = !DILocation(line: 611, column: 17, scope: !11557)
!11598 = !{!11054, !2669, i64 40}
!11599 = !DILocation(line: 612, column: 22, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11557, file: !832, line: 612, column: 7)
!11601 = !DILocation(line: 612, column: 8, scope: !11600)
!11602 = !DILocation(line: 612, column: 7, scope: !11557)
!11603 = !DILocation(line: 619, column: 7, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11600, file: !832, line: 613, column: 5)
!11605 = !DILocation(line: 622, column: 43, scope: !11557)
!11606 = !DILocation(line: 622, column: 54, scope: !11557)
!11607 = !DILocation(line: 622, column: 22, scope: !11557)
!11608 = !DILocation(line: 622, column: 3, scope: !11557)
!11609 = !DILocation(line: 622, column: 10, scope: !11557)
!11610 = !DILocation(line: 622, column: 20, scope: !11557)
!11611 = !DILocation(line: 623, column: 8, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11557, file: !832, line: 623, column: 7)
!11613 = !DILocation(line: 623, column: 15, scope: !11612)
!11614 = !DILocation(line: 623, column: 7, scope: !11557)
!11615 = !DILocation(line: 624, column: 5, scope: !11612)
!11616 = !DILocation(line: 626, column: 27, scope: !11557)
!11617 = !DILocation(line: 626, column: 34, scope: !11557)
!11618 = !DILocation(line: 626, column: 19, scope: !11557)
!11619 = !DILocation(line: 626, column: 3, scope: !11557)
!11620 = !DILocation(line: 626, column: 10, scope: !11557)
!11621 = !DILocation(line: 626, column: 17, scope: !11557)
!11622 = !DILocation(line: 627, column: 7, scope: !11623)
!11623 = distinct !DILexicalBlock(scope: !11557, file: !832, line: 627, column: 7)
!11624 = !DILocation(line: 627, column: 14, scope: !11623)
!11625 = !DILocation(line: 627, column: 21, scope: !11623)
!11626 = !DILocation(line: 627, column: 7, scope: !11557)
!11627 = !DILocation(line: 628, column: 5, scope: !11623)
!11628 = !DILocation(line: 629, column: 25, scope: !11557)
!11629 = !DILocation(line: 629, column: 32, scope: !11557)
!11630 = !DILocation(line: 629, column: 41, scope: !11557)
!11631 = !DILocation(line: 629, column: 48, scope: !11557)
!11632 = !DILocation(line: 629, column: 39, scope: !11557)
!11633 = !DILocation(line: 629, column: 3, scope: !11557)
!11634 = !DILocation(line: 629, column: 10, scope: !11557)
!11635 = !DILocation(line: 629, column: 23, scope: !11557)
!11636 = !DILocation(line: 630, column: 3, scope: !11557)
!11637 = !DILocation(line: 630, column: 10, scope: !11557)
!11638 = !DILocation(line: 630, column: 25, scope: !11557)
!11639 = !DILocation(line: 631, column: 3, scope: !11557)
!11640 = !DILocation(line: 631, column: 10, scope: !11557)
!11641 = !DILocation(line: 631, column: 20, scope: !11557)
!11642 = !DILocation(line: 633, column: 19, scope: !11557)
!11643 = !DILocation(line: 633, column: 3, scope: !11557)
!11644 = !DILocation(line: 633, column: 10, scope: !11557)
!11645 = !DILocation(line: 633, column: 17, scope: !11557)
!11646 = !DILocation(line: 634, column: 23, scope: !11557)
!11647 = !DILocation(line: 634, column: 3, scope: !11557)
!11648 = !DILocation(line: 634, column: 10, scope: !11557)
!11649 = !DILocation(line: 634, column: 21, scope: !11557)
!11650 = !DILocation(line: 635, column: 23, scope: !11557)
!11651 = !DILocation(line: 635, column: 3, scope: !11557)
!11652 = !DILocation(line: 635, column: 10, scope: !11557)
!11653 = !DILocation(line: 635, column: 21, scope: !11557)
!11654 = !{!11054, !2669, i64 64}
!11655 = !DILocation(line: 637, column: 3, scope: !11557)
!11656 = !DILocation(line: 637, column: 10, scope: !11557)
!11657 = !DILocation(line: 637, column: 26, scope: !11557)
!11658 = !{!11054, !2669, i64 72}
!11659 = !DILocation(line: 641, column: 10, scope: !11557)
!11660 = !DILocation(line: 641, column: 3, scope: !11557)
!11661 = !DILabel(scope: !11557, name: "fail", file: !832, line: 643)
!11662 = !DILocation(line: 643, column: 2, scope: !11557)
!11663 = !DILocation(line: 644, column: 9, scope: !11557)
!11664 = !DILocation(line: 644, column: 3, scope: !11557)
!11665 = !DILocation(line: 645, column: 3, scope: !11557)
!11666 = !DILocation(line: 646, column: 1, scope: !11557)
!11667 = distinct !DISubprogram(name: "raw_hasher", scope: !832, file: !832, line: 486, type: !615, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11668 = !DILocalVariable(name: "data", arg: 1, scope: !11667, file: !832, line: 486, type: !525)
!11669 = !DILocation(line: 486, column: 25, scope: !11667)
!11670 = !DILocalVariable(name: "n", arg: 2, scope: !11667, file: !832, line: 486, type: !52)
!11671 = !DILocation(line: 486, column: 38, scope: !11667)
!11672 = !DILocalVariable(name: "val", scope: !11667, file: !832, line: 493, type: !52)
!11673 = !DILocation(line: 493, column: 10, scope: !11667)
!11674 = !DILocation(line: 493, column: 34, scope: !11667)
!11675 = !DILocation(line: 493, column: 25, scope: !11667)
!11676 = !DILocation(line: 493, column: 16, scope: !11667)
!11677 = !DILocation(line: 494, column: 10, scope: !11667)
!11678 = !DILocation(line: 494, column: 16, scope: !11667)
!11679 = !DILocation(line: 494, column: 14, scope: !11667)
!11680 = !DILocation(line: 494, column: 3, scope: !11667)
!11681 = distinct !DISubprogram(name: "raw_comparator", scope: !832, file: !832, line: 499, type: !617, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11682 = !DILocalVariable(name: "a", arg: 1, scope: !11681, file: !832, line: 499, type: !525)
!11683 = !DILocation(line: 499, column: 29, scope: !11681)
!11684 = !DILocalVariable(name: "b", arg: 2, scope: !11681, file: !832, line: 499, type: !525)
!11685 = !DILocation(line: 499, column: 44, scope: !11681)
!11686 = !DILocation(line: 501, column: 10, scope: !11681)
!11687 = !DILocation(line: 501, column: 15, scope: !11681)
!11688 = !DILocation(line: 501, column: 12, scope: !11681)
!11689 = !DILocation(line: 501, column: 3, scope: !11681)
!11690 = distinct !DISubprogram(name: "check_tuning", scope: !832, file: !832, line: 512, type: !944, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11691 = !DILocalVariable(name: "table", arg: 1, scope: !11690, file: !832, line: 512, type: !932)
!11692 = !DILocation(line: 512, column: 27, scope: !11690)
!11693 = !DILocalVariable(name: "tuning", scope: !11690, file: !832, line: 514, type: !847)
!11694 = !DILocation(line: 514, column: 22, scope: !11690)
!11695 = !DILocation(line: 514, column: 31, scope: !11690)
!11696 = !DILocation(line: 514, column: 38, scope: !11690)
!11697 = !DILocalVariable(name: "epsilon", scope: !11690, file: !832, line: 515, type: !853)
!11698 = !DILocation(line: 515, column: 9, scope: !11690)
!11699 = !DILocation(line: 516, column: 7, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11690, file: !832, line: 516, column: 7)
!11701 = !DILocation(line: 516, column: 14, scope: !11700)
!11702 = !DILocation(line: 516, column: 7, scope: !11690)
!11703 = !DILocation(line: 517, column: 5, scope: !11700)
!11704 = !DILocation(line: 524, column: 11, scope: !11690)
!11705 = !DILocation(line: 526, column: 7, scope: !11706)
!11706 = distinct !DILexicalBlock(scope: !11690, file: !832, line: 526, column: 7)
!11707 = !DILocation(line: 526, column: 17, scope: !11706)
!11708 = !DILocation(line: 526, column: 25, scope: !11706)
!11709 = !{!11710, !11555, i64 8}
!11710 = !{!"hash_tuning", !11555, i64 0, !11555, i64 4, !11555, i64 8, !11555, i64 12, !2763, i64 16}
!11711 = !DILocation(line: 526, column: 15, scope: !11706)
!11712 = !DILocation(line: 527, column: 7, scope: !11706)
!11713 = !DILocation(line: 527, column: 10, scope: !11706)
!11714 = !DILocation(line: 527, column: 18, scope: !11706)
!11715 = !DILocation(line: 527, column: 41, scope: !11706)
!11716 = !DILocation(line: 527, column: 39, scope: !11706)
!11717 = !DILocation(line: 527, column: 35, scope: !11706)
!11718 = !DILocation(line: 528, column: 7, scope: !11706)
!11719 = !DILocation(line: 528, column: 14, scope: !11706)
!11720 = !DILocation(line: 528, column: 12, scope: !11706)
!11721 = !DILocation(line: 528, column: 24, scope: !11706)
!11722 = !DILocation(line: 528, column: 32, scope: !11706)
!11723 = !{!11710, !11555, i64 12}
!11724 = !DILocation(line: 528, column: 22, scope: !11706)
!11725 = !DILocation(line: 529, column: 7, scope: !11706)
!11726 = !DILocation(line: 529, column: 15, scope: !11706)
!11727 = !DILocation(line: 529, column: 23, scope: !11706)
!11728 = !{!11710, !11555, i64 0}
!11729 = !DILocation(line: 529, column: 12, scope: !11706)
!11730 = !DILocation(line: 530, column: 7, scope: !11706)
!11731 = !DILocation(line: 530, column: 10, scope: !11706)
!11732 = !DILocation(line: 530, column: 18, scope: !11706)
!11733 = !DILocation(line: 530, column: 37, scope: !11706)
!11734 = !DILocation(line: 530, column: 35, scope: !11706)
!11735 = !DILocation(line: 530, column: 47, scope: !11706)
!11736 = !DILocation(line: 530, column: 55, scope: !11706)
!11737 = !{!11710, !11555, i64 4}
!11738 = !DILocation(line: 530, column: 45, scope: !11706)
!11739 = !DILocation(line: 531, column: 7, scope: !11706)
!11740 = !DILocation(line: 531, column: 10, scope: !11706)
!11741 = !DILocation(line: 531, column: 18, scope: !11706)
!11742 = !DILocation(line: 531, column: 32, scope: !11706)
!11743 = !DILocation(line: 532, column: 7, scope: !11706)
!11744 = !DILocation(line: 532, column: 10, scope: !11706)
!11745 = !DILocation(line: 532, column: 18, scope: !11706)
!11746 = !DILocation(line: 532, column: 37, scope: !11706)
!11747 = !DILocation(line: 532, column: 35, scope: !11706)
!11748 = !DILocation(line: 532, column: 47, scope: !11706)
!11749 = !DILocation(line: 532, column: 55, scope: !11706)
!11750 = !DILocation(line: 532, column: 45, scope: !11706)
!11751 = !DILocation(line: 526, column: 7, scope: !11690)
!11752 = !DILocation(line: 533, column: 5, scope: !11706)
!11753 = !DILocation(line: 535, column: 3, scope: !11690)
!11754 = !DILocation(line: 535, column: 10, scope: !11690)
!11755 = !DILocation(line: 535, column: 17, scope: !11690)
!11756 = !DILocation(line: 536, column: 3, scope: !11690)
!11757 = !DILocation(line: 537, column: 1, scope: !11690)
!11758 = distinct !DISubprogram(name: "compute_bucket_size", scope: !832, file: !832, line: 544, type: !946, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11759 = !DILocalVariable(name: "candidate", arg: 1, scope: !11758, file: !832, line: 544, type: !52)
!11760 = !DILocation(line: 544, column: 29, scope: !11758)
!11761 = !DILocalVariable(name: "tuning", arg: 2, scope: !11758, file: !832, line: 544, type: !847)
!11762 = !DILocation(line: 544, column: 59, scope: !11758)
!11763 = !DILocation(line: 546, column: 8, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11758, file: !832, line: 546, column: 7)
!11765 = !DILocation(line: 546, column: 16, scope: !11764)
!11766 = !{!11710, !2763, i64 16}
!11767 = !DILocation(line: 546, column: 7, scope: !11758)
!11768 = !DILocalVariable(name: "new_candidate", scope: !11769, file: !832, line: 548, type: !853)
!11769 = distinct !DILexicalBlock(scope: !11764, file: !832, line: 547, column: 5)
!11770 = !DILocation(line: 548, column: 13, scope: !11769)
!11771 = !DILocation(line: 548, column: 29, scope: !11769)
!11772 = !DILocation(line: 548, column: 41, scope: !11769)
!11773 = !DILocation(line: 548, column: 49, scope: !11769)
!11774 = !DILocation(line: 548, column: 39, scope: !11769)
!11775 = !DILocation(line: 549, column: 23, scope: !11776)
!11776 = distinct !DILexicalBlock(scope: !11769, file: !832, line: 549, column: 11)
!11777 = !DILocation(line: 549, column: 20, scope: !11776)
!11778 = !DILocation(line: 549, column: 11, scope: !11769)
!11779 = !DILocation(line: 550, column: 9, scope: !11776)
!11780 = !DILocation(line: 551, column: 19, scope: !11769)
!11781 = !DILocation(line: 551, column: 17, scope: !11769)
!11782 = !DILocation(line: 552, column: 5, scope: !11769)
!11783 = !DILocation(line: 553, column: 27, scope: !11758)
!11784 = !DILocation(line: 553, column: 15, scope: !11758)
!11785 = !DILocation(line: 553, column: 13, scope: !11758)
!11786 = !DILocation(line: 554, column: 7, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11758, file: !832, line: 554, column: 7)
!11788 = !DILocation(line: 554, column: 7, scope: !11758)
!11789 = !DILocation(line: 555, column: 5, scope: !11787)
!11790 = !DILocation(line: 556, column: 10, scope: !11758)
!11791 = !DILocation(line: 556, column: 3, scope: !11758)
!11792 = !DILocation(line: 557, column: 1, scope: !11758)
!11793 = distinct !DISubprogram(name: "next_prime", scope: !832, file: !832, line: 463, type: !948, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11794 = !DILocalVariable(name: "candidate", arg: 1, scope: !11793, file: !832, line: 463, type: !52)
!11795 = !DILocation(line: 463, column: 20, scope: !11793)
!11796 = !DILocation(line: 466, column: 7, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11793, file: !832, line: 466, column: 7)
!11798 = !DILocation(line: 466, column: 17, scope: !11797)
!11799 = !DILocation(line: 466, column: 7, scope: !11793)
!11800 = !DILocation(line: 467, column: 15, scope: !11797)
!11801 = !DILocation(line: 467, column: 5, scope: !11797)
!11802 = !DILocation(line: 470, column: 13, scope: !11793)
!11803 = !DILocation(line: 472, column: 3, scope: !11793)
!11804 = !DILocation(line: 472, column: 22, scope: !11793)
!11805 = !DILocation(line: 472, column: 19, scope: !11793)
!11806 = !DILocation(line: 472, column: 32, scope: !11793)
!11807 = !DILocation(line: 472, column: 46, scope: !11793)
!11808 = !DILocation(line: 472, column: 36, scope: !11793)
!11809 = !DILocation(line: 472, column: 35, scope: !11793)
!11810 = !DILocation(line: 0, scope: !11793)
!11811 = !DILocation(line: 473, column: 15, scope: !11793)
!11812 = distinct !{!11812, !11803, !11813}
!11813 = !DILocation(line: 473, column: 18, scope: !11793)
!11814 = !DILocation(line: 475, column: 10, scope: !11793)
!11815 = !DILocation(line: 475, column: 3, scope: !11793)
!11816 = distinct !DISubprogram(name: "is_prime", scope: !832, file: !832, line: 444, type: !950, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11817 = !DILocalVariable(name: "candidate", arg: 1, scope: !11816, file: !832, line: 444, type: !52)
!11818 = !DILocation(line: 444, column: 18, scope: !11816)
!11819 = !DILocalVariable(name: "divisor", scope: !11816, file: !832, line: 446, type: !52)
!11820 = !DILocation(line: 446, column: 10, scope: !11816)
!11821 = !DILocalVariable(name: "square", scope: !11816, file: !832, line: 447, type: !52)
!11822 = !DILocation(line: 447, column: 10, scope: !11816)
!11823 = !DILocation(line: 447, column: 19, scope: !11816)
!11824 = !DILocation(line: 447, column: 29, scope: !11816)
!11825 = !DILocation(line: 447, column: 27, scope: !11816)
!11826 = !DILocation(line: 449, column: 3, scope: !11816)
!11827 = !DILocation(line: 449, column: 10, scope: !11816)
!11828 = !DILocation(line: 449, column: 19, scope: !11816)
!11829 = !DILocation(line: 449, column: 17, scope: !11816)
!11830 = !DILocation(line: 449, column: 29, scope: !11816)
!11831 = !DILocation(line: 449, column: 33, scope: !11816)
!11832 = !DILocation(line: 449, column: 45, scope: !11816)
!11833 = !DILocation(line: 449, column: 43, scope: !11816)
!11834 = !DILocation(line: 0, scope: !11816)
!11835 = !DILocation(line: 451, column: 14, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11816, file: !832, line: 450, column: 5)
!11837 = !DILocation(line: 452, column: 21, scope: !11836)
!11838 = !DILocation(line: 452, column: 19, scope: !11836)
!11839 = !DILocation(line: 452, column: 14, scope: !11836)
!11840 = !DILocation(line: 453, column: 14, scope: !11836)
!11841 = distinct !{!11841, !11826, !11842}
!11842 = !DILocation(line: 454, column: 5, scope: !11816)
!11843 = !DILocation(line: 456, column: 11, scope: !11816)
!11844 = !DILocation(line: 456, column: 23, scope: !11816)
!11845 = !DILocation(line: 456, column: 21, scope: !11816)
!11846 = !DILocation(line: 456, column: 10, scope: !11816)
!11847 = !DILocation(line: 456, column: 3, scope: !11816)
!11848 = distinct !DISubprogram(name: "hash_clear", scope: !832, file: !832, line: 653, type: !933, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11849 = !DILocalVariable(name: "table", arg: 1, scope: !11848, file: !832, line: 653, type: !932)
!11850 = !DILocation(line: 653, column: 25, scope: !11848)
!11851 = !DILocalVariable(name: "bucket", scope: !11848, file: !832, line: 655, type: !835)
!11852 = !DILocation(line: 655, column: 22, scope: !11848)
!11853 = !DILocation(line: 657, column: 17, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11848, file: !832, line: 657, column: 3)
!11855 = !DILocation(line: 657, column: 24, scope: !11854)
!11856 = !DILocation(line: 657, column: 15, scope: !11854)
!11857 = !DILocation(line: 657, column: 8, scope: !11854)
!11858 = !DILocation(line: 657, column: 32, scope: !11859)
!11859 = distinct !DILexicalBlock(scope: !11854, file: !832, line: 657, column: 3)
!11860 = !DILocation(line: 657, column: 41, scope: !11859)
!11861 = !DILocation(line: 657, column: 48, scope: !11859)
!11862 = !DILocation(line: 657, column: 39, scope: !11859)
!11863 = !DILocation(line: 657, column: 3, scope: !11854)
!11864 = !DILocation(line: 659, column: 11, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11866, file: !832, line: 659, column: 11)
!11866 = distinct !DILexicalBlock(scope: !11859, file: !832, line: 658, column: 5)
!11867 = !DILocation(line: 659, column: 19, scope: !11865)
!11868 = !DILocation(line: 659, column: 11, scope: !11866)
!11869 = !DILocalVariable(name: "cursor", scope: !11870, file: !832, line: 661, type: !835)
!11870 = distinct !DILexicalBlock(scope: !11865, file: !832, line: 660, column: 9)
!11871 = !DILocation(line: 661, column: 30, scope: !11870)
!11872 = !DILocalVariable(name: "next", scope: !11870, file: !832, line: 662, type: !835)
!11873 = !DILocation(line: 662, column: 30, scope: !11870)
!11874 = !DILocation(line: 665, column: 25, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11870, file: !832, line: 665, column: 11)
!11876 = !DILocation(line: 665, column: 33, scope: !11875)
!11877 = !DILocation(line: 665, column: 23, scope: !11875)
!11878 = !DILocation(line: 665, column: 16, scope: !11875)
!11879 = !DILocation(line: 665, column: 39, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11875, file: !832, line: 665, column: 11)
!11881 = !DILocation(line: 665, column: 11, scope: !11875)
!11882 = !DILocation(line: 667, column: 19, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11884, file: !832, line: 667, column: 19)
!11884 = distinct !DILexicalBlock(scope: !11880, file: !832, line: 666, column: 13)
!11885 = !DILocation(line: 667, column: 26, scope: !11883)
!11886 = !DILocation(line: 667, column: 19, scope: !11884)
!11887 = !DILocation(line: 668, column: 17, scope: !11883)
!11888 = !DILocation(line: 668, column: 24, scope: !11883)
!11889 = !DILocation(line: 668, column: 36, scope: !11883)
!11890 = !DILocation(line: 668, column: 44, scope: !11883)
!11891 = !DILocation(line: 669, column: 15, scope: !11884)
!11892 = !DILocation(line: 669, column: 23, scope: !11884)
!11893 = !DILocation(line: 669, column: 28, scope: !11884)
!11894 = !DILocation(line: 671, column: 22, scope: !11884)
!11895 = !DILocation(line: 671, column: 30, scope: !11884)
!11896 = !DILocation(line: 671, column: 20, scope: !11884)
!11897 = !DILocation(line: 674, column: 30, scope: !11884)
!11898 = !DILocation(line: 674, column: 37, scope: !11884)
!11899 = !DILocation(line: 674, column: 15, scope: !11884)
!11900 = !DILocation(line: 674, column: 23, scope: !11884)
!11901 = !DILocation(line: 674, column: 28, scope: !11884)
!11902 = !DILocation(line: 675, column: 40, scope: !11884)
!11903 = !DILocation(line: 675, column: 15, scope: !11884)
!11904 = !DILocation(line: 675, column: 22, scope: !11884)
!11905 = !DILocation(line: 675, column: 38, scope: !11884)
!11906 = !DILocation(line: 676, column: 13, scope: !11884)
!11907 = !DILocation(line: 665, column: 56, scope: !11880)
!11908 = !DILocation(line: 665, column: 54, scope: !11880)
!11909 = !DILocation(line: 665, column: 11, scope: !11880)
!11910 = distinct !{!11910, !11881, !11911}
!11911 = !DILocation(line: 676, column: 13, scope: !11875)
!11912 = !DILocation(line: 679, column: 15, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11870, file: !832, line: 679, column: 15)
!11914 = !DILocation(line: 679, column: 22, scope: !11913)
!11915 = !DILocation(line: 679, column: 15, scope: !11870)
!11916 = !DILocation(line: 680, column: 13, scope: !11913)
!11917 = !DILocation(line: 680, column: 20, scope: !11913)
!11918 = !DILocation(line: 680, column: 32, scope: !11913)
!11919 = !DILocation(line: 680, column: 40, scope: !11913)
!11920 = !DILocation(line: 681, column: 11, scope: !11870)
!11921 = !DILocation(line: 681, column: 19, scope: !11870)
!11922 = !DILocation(line: 681, column: 24, scope: !11870)
!11923 = !DILocation(line: 682, column: 11, scope: !11870)
!11924 = !DILocation(line: 682, column: 19, scope: !11870)
!11925 = !DILocation(line: 682, column: 24, scope: !11870)
!11926 = !DILocation(line: 683, column: 9, scope: !11870)
!11927 = !DILocation(line: 684, column: 5, scope: !11866)
!11928 = !DILocation(line: 657, column: 68, scope: !11859)
!11929 = !DILocation(line: 657, column: 3, scope: !11859)
!11930 = distinct !{!11930, !11863, !11931}
!11931 = !DILocation(line: 684, column: 5, scope: !11854)
!11932 = !DILocation(line: 686, column: 3, scope: !11848)
!11933 = !DILocation(line: 686, column: 10, scope: !11848)
!11934 = !DILocation(line: 686, column: 25, scope: !11848)
!11935 = !DILocation(line: 687, column: 3, scope: !11848)
!11936 = !DILocation(line: 687, column: 10, scope: !11848)
!11937 = !DILocation(line: 687, column: 20, scope: !11848)
!11938 = !DILocation(line: 688, column: 1, scope: !11848)
!11939 = distinct !DISubprogram(name: "hash_free", scope: !832, file: !832, line: 696, type: !933, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!11940 = !DILocalVariable(name: "table", arg: 1, scope: !11939, file: !832, line: 696, type: !932)
!11941 = !DILocation(line: 696, column: 24, scope: !11939)
!11942 = !DILocalVariable(name: "bucket", scope: !11939, file: !832, line: 698, type: !835)
!11943 = !DILocation(line: 698, column: 22, scope: !11939)
!11944 = !DILocalVariable(name: "cursor", scope: !11939, file: !832, line: 699, type: !835)
!11945 = !DILocation(line: 699, column: 22, scope: !11939)
!11946 = !DILocalVariable(name: "next", scope: !11939, file: !832, line: 700, type: !835)
!11947 = !DILocation(line: 700, column: 22, scope: !11939)
!11948 = !DILocation(line: 703, column: 7, scope: !11949)
!11949 = distinct !DILexicalBlock(scope: !11939, file: !832, line: 703, column: 7)
!11950 = !DILocation(line: 703, column: 14, scope: !11949)
!11951 = !DILocation(line: 703, column: 25, scope: !11949)
!11952 = !DILocation(line: 703, column: 28, scope: !11949)
!11953 = !DILocation(line: 703, column: 35, scope: !11949)
!11954 = !DILocation(line: 703, column: 7, scope: !11939)
!11955 = !DILocation(line: 705, column: 21, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !832, line: 705, column: 7)
!11957 = distinct !DILexicalBlock(scope: !11949, file: !832, line: 704, column: 5)
!11958 = !DILocation(line: 705, column: 28, scope: !11956)
!11959 = !DILocation(line: 705, column: 19, scope: !11956)
!11960 = !DILocation(line: 705, column: 12, scope: !11956)
!11961 = !DILocation(line: 705, column: 36, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11956, file: !832, line: 705, column: 7)
!11963 = !DILocation(line: 705, column: 45, scope: !11962)
!11964 = !DILocation(line: 705, column: 52, scope: !11962)
!11965 = !DILocation(line: 705, column: 43, scope: !11962)
!11966 = !DILocation(line: 705, column: 7, scope: !11956)
!11967 = !DILocation(line: 707, column: 15, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11969, file: !832, line: 707, column: 15)
!11969 = distinct !DILexicalBlock(scope: !11962, file: !832, line: 706, column: 9)
!11970 = !DILocation(line: 707, column: 23, scope: !11968)
!11971 = !DILocation(line: 707, column: 15, scope: !11969)
!11972 = !DILocation(line: 709, column: 29, scope: !11973)
!11973 = distinct !DILexicalBlock(scope: !11974, file: !832, line: 709, column: 15)
!11974 = distinct !DILexicalBlock(scope: !11968, file: !832, line: 708, column: 13)
!11975 = !DILocation(line: 709, column: 27, scope: !11973)
!11976 = !DILocation(line: 709, column: 20, scope: !11973)
!11977 = !DILocation(line: 709, column: 37, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11973, file: !832, line: 709, column: 15)
!11979 = !DILocation(line: 709, column: 15, scope: !11973)
!11980 = !DILocation(line: 710, column: 17, scope: !11978)
!11981 = !DILocation(line: 710, column: 24, scope: !11978)
!11982 = !DILocation(line: 710, column: 36, scope: !11978)
!11983 = !DILocation(line: 710, column: 44, scope: !11978)
!11984 = !DILocation(line: 709, column: 54, scope: !11978)
!11985 = !DILocation(line: 709, column: 62, scope: !11978)
!11986 = !DILocation(line: 709, column: 52, scope: !11978)
!11987 = !DILocation(line: 709, column: 15, scope: !11978)
!11988 = distinct !{!11988, !11979, !11989}
!11989 = !DILocation(line: 710, column: 48, scope: !11973)
!11990 = !DILocation(line: 711, column: 13, scope: !11974)
!11991 = !DILocation(line: 712, column: 9, scope: !11969)
!11992 = !DILocation(line: 705, column: 72, scope: !11962)
!11993 = !DILocation(line: 705, column: 7, scope: !11962)
!11994 = distinct !{!11994, !11966, !11995}
!11995 = !DILocation(line: 712, column: 9, scope: !11956)
!11996 = !DILocation(line: 713, column: 5, scope: !11957)
!11997 = !DILocation(line: 722, column: 17, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11939, file: !832, line: 722, column: 3)
!11999 = !DILocation(line: 722, column: 24, scope: !11998)
!12000 = !DILocation(line: 722, column: 15, scope: !11998)
!12001 = !DILocation(line: 722, column: 8, scope: !11998)
!12002 = !DILocation(line: 722, column: 32, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11998, file: !832, line: 722, column: 3)
!12004 = !DILocation(line: 722, column: 41, scope: !12003)
!12005 = !DILocation(line: 722, column: 48, scope: !12003)
!12006 = !DILocation(line: 722, column: 39, scope: !12003)
!12007 = !DILocation(line: 722, column: 3, scope: !11998)
!12008 = !DILocation(line: 724, column: 21, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !12010, file: !832, line: 724, column: 7)
!12010 = distinct !DILexicalBlock(scope: !12003, file: !832, line: 723, column: 5)
!12011 = !DILocation(line: 724, column: 29, scope: !12009)
!12012 = !DILocation(line: 724, column: 19, scope: !12009)
!12013 = !DILocation(line: 724, column: 12, scope: !12009)
!12014 = !DILocation(line: 724, column: 35, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !12009, file: !832, line: 724, column: 7)
!12016 = !DILocation(line: 724, column: 7, scope: !12009)
!12017 = !DILocation(line: 726, column: 18, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12015, file: !832, line: 725, column: 9)
!12019 = !DILocation(line: 726, column: 26, scope: !12018)
!12020 = !DILocation(line: 726, column: 16, scope: !12018)
!12021 = !DILocation(line: 727, column: 17, scope: !12018)
!12022 = !DILocation(line: 727, column: 11, scope: !12018)
!12023 = !DILocation(line: 728, column: 9, scope: !12018)
!12024 = !DILocation(line: 724, column: 52, scope: !12015)
!12025 = !DILocation(line: 724, column: 50, scope: !12015)
!12026 = !DILocation(line: 724, column: 7, scope: !12015)
!12027 = distinct !{!12027, !12016, !12028}
!12028 = !DILocation(line: 728, column: 9, scope: !12009)
!12029 = !DILocation(line: 729, column: 5, scope: !12010)
!12030 = !DILocation(line: 722, column: 68, scope: !12003)
!12031 = !DILocation(line: 722, column: 3, scope: !12003)
!12032 = distinct !{!12032, !12007, !12033}
!12033 = !DILocation(line: 729, column: 5, scope: !11998)
!12034 = !DILocation(line: 732, column: 17, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11939, file: !832, line: 732, column: 3)
!12036 = !DILocation(line: 732, column: 24, scope: !12035)
!12037 = !DILocation(line: 732, column: 15, scope: !12035)
!12038 = !DILocation(line: 732, column: 8, scope: !12035)
!12039 = !DILocation(line: 732, column: 41, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12035, file: !832, line: 732, column: 3)
!12041 = !DILocation(line: 732, column: 3, scope: !12035)
!12042 = !DILocation(line: 734, column: 14, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12040, file: !832, line: 733, column: 5)
!12044 = !DILocation(line: 734, column: 22, scope: !12043)
!12045 = !DILocation(line: 734, column: 12, scope: !12043)
!12046 = !DILocation(line: 735, column: 13, scope: !12043)
!12047 = !DILocation(line: 735, column: 7, scope: !12043)
!12048 = !DILocation(line: 736, column: 5, scope: !12043)
!12049 = !DILocation(line: 732, column: 58, scope: !12040)
!12050 = !DILocation(line: 732, column: 56, scope: !12040)
!12051 = !DILocation(line: 732, column: 3, scope: !12040)
!12052 = distinct !{!12052, !12041, !12053}
!12053 = !DILocation(line: 736, column: 5, scope: !12035)
!12054 = !DILocation(line: 741, column: 9, scope: !11939)
!12055 = !DILocation(line: 741, column: 16, scope: !11939)
!12056 = !DILocation(line: 741, column: 3, scope: !11939)
!12057 = !DILocation(line: 742, column: 9, scope: !11939)
!12058 = !DILocation(line: 742, column: 3, scope: !11939)
!12059 = !DILocation(line: 743, column: 1, scope: !11939)
!12060 = distinct !DISubprogram(name: "hash_rehash", scope: !832, file: !832, line: 943, type: !935, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12061 = !DILocalVariable(name: "table", arg: 1, scope: !12060, file: !832, line: 943, type: !932)
!12062 = !DILocation(line: 943, column: 26, scope: !12060)
!12063 = !DILocalVariable(name: "candidate", arg: 2, scope: !12060, file: !832, line: 943, type: !52)
!12064 = !DILocation(line: 943, column: 40, scope: !12060)
!12065 = !DILocalVariable(name: "storage", scope: !12060, file: !832, line: 945, type: !830)
!12066 = !DILocation(line: 945, column: 14, scope: !12060)
!12067 = !DILocalVariable(name: "new_table", scope: !12060, file: !832, line: 946, type: !932)
!12068 = !DILocation(line: 946, column: 15, scope: !12060)
!12069 = !DILocalVariable(name: "new_size", scope: !12060, file: !832, line: 947, type: !52)
!12070 = !DILocation(line: 947, column: 10, scope: !12060)
!12071 = !DILocation(line: 947, column: 42, scope: !12060)
!12072 = !DILocation(line: 947, column: 53, scope: !12060)
!12073 = !DILocation(line: 947, column: 60, scope: !12060)
!12074 = !DILocation(line: 947, column: 21, scope: !12060)
!12075 = !DILocation(line: 949, column: 8, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12060, file: !832, line: 949, column: 7)
!12077 = !DILocation(line: 949, column: 7, scope: !12060)
!12078 = !DILocation(line: 950, column: 5, scope: !12076)
!12079 = !DILocation(line: 951, column: 7, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12060, file: !832, line: 951, column: 7)
!12081 = !DILocation(line: 951, column: 19, scope: !12080)
!12082 = !DILocation(line: 951, column: 26, scope: !12080)
!12083 = !DILocation(line: 951, column: 16, scope: !12080)
!12084 = !DILocation(line: 951, column: 7, scope: !12060)
!12085 = !DILocation(line: 952, column: 5, scope: !12080)
!12086 = !DILocation(line: 953, column: 13, scope: !12060)
!12087 = !DILocation(line: 954, column: 31, scope: !12060)
!12088 = !DILocation(line: 954, column: 23, scope: !12060)
!12089 = !DILocation(line: 954, column: 3, scope: !12060)
!12090 = !DILocation(line: 954, column: 14, scope: !12060)
!12091 = !DILocation(line: 954, column: 21, scope: !12060)
!12092 = !DILocation(line: 955, column: 7, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12060, file: !832, line: 955, column: 7)
!12094 = !DILocation(line: 955, column: 18, scope: !12093)
!12095 = !DILocation(line: 955, column: 25, scope: !12093)
!12096 = !DILocation(line: 955, column: 7, scope: !12060)
!12097 = !DILocation(line: 956, column: 5, scope: !12093)
!12098 = !DILocation(line: 957, column: 26, scope: !12060)
!12099 = !DILocation(line: 957, column: 3, scope: !12060)
!12100 = !DILocation(line: 957, column: 14, scope: !12060)
!12101 = !DILocation(line: 957, column: 24, scope: !12060)
!12102 = !DILocation(line: 958, column: 29, scope: !12060)
!12103 = !DILocation(line: 958, column: 40, scope: !12060)
!12104 = !DILocation(line: 958, column: 49, scope: !12060)
!12105 = !DILocation(line: 958, column: 47, scope: !12060)
!12106 = !DILocation(line: 958, column: 3, scope: !12060)
!12107 = !DILocation(line: 958, column: 14, scope: !12060)
!12108 = !DILocation(line: 958, column: 27, scope: !12060)
!12109 = !DILocation(line: 959, column: 3, scope: !12060)
!12110 = !DILocation(line: 959, column: 14, scope: !12060)
!12111 = !DILocation(line: 959, column: 29, scope: !12060)
!12112 = !DILocation(line: 960, column: 3, scope: !12060)
!12113 = !DILocation(line: 960, column: 14, scope: !12060)
!12114 = !DILocation(line: 960, column: 24, scope: !12060)
!12115 = !DILocation(line: 961, column: 23, scope: !12060)
!12116 = !DILocation(line: 961, column: 30, scope: !12060)
!12117 = !DILocation(line: 961, column: 3, scope: !12060)
!12118 = !DILocation(line: 961, column: 14, scope: !12060)
!12119 = !DILocation(line: 961, column: 21, scope: !12060)
!12120 = !DILocation(line: 962, column: 23, scope: !12060)
!12121 = !DILocation(line: 962, column: 30, scope: !12060)
!12122 = !DILocation(line: 962, column: 3, scope: !12060)
!12123 = !DILocation(line: 962, column: 14, scope: !12060)
!12124 = !DILocation(line: 962, column: 21, scope: !12060)
!12125 = !DILocation(line: 963, column: 27, scope: !12060)
!12126 = !DILocation(line: 963, column: 34, scope: !12060)
!12127 = !DILocation(line: 963, column: 3, scope: !12060)
!12128 = !DILocation(line: 963, column: 14, scope: !12060)
!12129 = !DILocation(line: 963, column: 25, scope: !12060)
!12130 = !DILocation(line: 964, column: 27, scope: !12060)
!12131 = !DILocation(line: 964, column: 34, scope: !12060)
!12132 = !DILocation(line: 964, column: 3, scope: !12060)
!12133 = !DILocation(line: 964, column: 14, scope: !12060)
!12134 = !DILocation(line: 964, column: 25, scope: !12060)
!12135 = !DILocation(line: 984, column: 32, scope: !12060)
!12136 = !DILocation(line: 984, column: 39, scope: !12060)
!12137 = !DILocation(line: 984, column: 3, scope: !12060)
!12138 = !DILocation(line: 984, column: 14, scope: !12060)
!12139 = !DILocation(line: 984, column: 30, scope: !12060)
!12140 = !DILocation(line: 986, column: 25, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12060, file: !832, line: 986, column: 7)
!12142 = !DILocation(line: 986, column: 36, scope: !12141)
!12143 = !DILocation(line: 986, column: 7, scope: !12141)
!12144 = !DILocation(line: 986, column: 7, scope: !12060)
!12145 = !DILocation(line: 989, column: 13, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12141, file: !832, line: 987, column: 5)
!12147 = !DILocation(line: 989, column: 20, scope: !12146)
!12148 = !DILocation(line: 989, column: 7, scope: !12146)
!12149 = !DILocation(line: 990, column: 23, scope: !12146)
!12150 = !DILocation(line: 990, column: 34, scope: !12146)
!12151 = !DILocation(line: 990, column: 7, scope: !12146)
!12152 = !DILocation(line: 990, column: 14, scope: !12146)
!12153 = !DILocation(line: 990, column: 21, scope: !12146)
!12154 = !DILocation(line: 991, column: 29, scope: !12146)
!12155 = !DILocation(line: 991, column: 40, scope: !12146)
!12156 = !DILocation(line: 991, column: 7, scope: !12146)
!12157 = !DILocation(line: 991, column: 14, scope: !12146)
!12158 = !DILocation(line: 991, column: 27, scope: !12146)
!12159 = !DILocation(line: 992, column: 26, scope: !12146)
!12160 = !DILocation(line: 992, column: 37, scope: !12146)
!12161 = !DILocation(line: 992, column: 7, scope: !12146)
!12162 = !DILocation(line: 992, column: 14, scope: !12146)
!12163 = !DILocation(line: 992, column: 24, scope: !12146)
!12164 = !DILocation(line: 993, column: 31, scope: !12146)
!12165 = !DILocation(line: 993, column: 42, scope: !12146)
!12166 = !DILocation(line: 993, column: 7, scope: !12146)
!12167 = !DILocation(line: 993, column: 14, scope: !12146)
!12168 = !DILocation(line: 993, column: 29, scope: !12146)
!12169 = !DILocation(line: 994, column: 32, scope: !12146)
!12170 = !DILocation(line: 994, column: 43, scope: !12146)
!12171 = !DILocation(line: 994, column: 7, scope: !12146)
!12172 = !DILocation(line: 994, column: 14, scope: !12146)
!12173 = !DILocation(line: 994, column: 30, scope: !12146)
!12174 = !DILocation(line: 996, column: 7, scope: !12146)
!12175 = !DILocation(line: 1012, column: 28, scope: !12060)
!12176 = !DILocation(line: 1012, column: 39, scope: !12060)
!12177 = !DILocation(line: 1012, column: 3, scope: !12060)
!12178 = !DILocation(line: 1012, column: 10, scope: !12060)
!12179 = !DILocation(line: 1012, column: 26, scope: !12060)
!12180 = !DILocation(line: 1013, column: 28, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12060, file: !832, line: 1013, column: 7)
!12182 = !DILocation(line: 1013, column: 35, scope: !12181)
!12183 = !DILocation(line: 1013, column: 10, scope: !12181)
!12184 = !DILocation(line: 1014, column: 10, scope: !12181)
!12185 = !DILocation(line: 1014, column: 31, scope: !12181)
!12186 = !DILocation(line: 1014, column: 38, scope: !12181)
!12187 = !DILocation(line: 1014, column: 13, scope: !12181)
!12188 = !DILocation(line: 1013, column: 7, scope: !12060)
!12189 = !DILocation(line: 1015, column: 5, scope: !12181)
!12190 = !DILocation(line: 1017, column: 9, scope: !12060)
!12191 = !DILocation(line: 1017, column: 20, scope: !12060)
!12192 = !DILocation(line: 1017, column: 3, scope: !12060)
!12193 = !DILocation(line: 1018, column: 3, scope: !12060)
!12194 = !DILocation(line: 1019, column: 1, scope: !12060)
!12195 = distinct !DISubprogram(name: "transfer_entries", scope: !832, file: !832, line: 860, type: !952, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12196 = !DILocalVariable(name: "dst", arg: 1, scope: !12195, file: !832, line: 860, type: !932)
!12197 = !DILocation(line: 860, column: 31, scope: !12195)
!12198 = !DILocalVariable(name: "src", arg: 2, scope: !12195, file: !832, line: 860, type: !932)
!12199 = !DILocation(line: 860, column: 48, scope: !12195)
!12200 = !DILocalVariable(name: "safe", arg: 3, scope: !12195, file: !832, line: 860, type: !139)
!12201 = !DILocation(line: 860, column: 58, scope: !12195)
!12202 = !DILocalVariable(name: "bucket", scope: !12195, file: !832, line: 862, type: !835)
!12203 = !DILocation(line: 862, column: 22, scope: !12195)
!12204 = !DILocalVariable(name: "cursor", scope: !12195, file: !832, line: 863, type: !835)
!12205 = !DILocation(line: 863, column: 22, scope: !12195)
!12206 = !DILocalVariable(name: "next", scope: !12195, file: !832, line: 864, type: !835)
!12207 = !DILocation(line: 864, column: 22, scope: !12195)
!12208 = !DILocation(line: 865, column: 17, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12195, file: !832, line: 865, column: 3)
!12210 = !DILocation(line: 865, column: 22, scope: !12209)
!12211 = !DILocation(line: 865, column: 15, scope: !12209)
!12212 = !DILocation(line: 865, column: 8, scope: !12209)
!12213 = !DILocation(line: 865, column: 30, scope: !12214)
!12214 = distinct !DILexicalBlock(scope: !12209, file: !832, line: 865, column: 3)
!12215 = !DILocation(line: 865, column: 39, scope: !12214)
!12216 = !DILocation(line: 865, column: 44, scope: !12214)
!12217 = !DILocation(line: 865, column: 37, scope: !12214)
!12218 = !DILocation(line: 865, column: 3, scope: !12209)
!12219 = !DILocation(line: 866, column: 9, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12214, file: !832, line: 866, column: 9)
!12221 = !DILocation(line: 866, column: 17, scope: !12220)
!12222 = !DILocation(line: 866, column: 9, scope: !12214)
!12223 = !DILocalVariable(name: "data", scope: !12224, file: !832, line: 868, type: !47)
!12224 = distinct !DILexicalBlock(scope: !12220, file: !832, line: 867, column: 7)
!12225 = !DILocation(line: 868, column: 15, scope: !12224)
!12226 = !DILocalVariable(name: "new_bucket", scope: !12224, file: !832, line: 869, type: !835)
!12227 = !DILocation(line: 869, column: 28, scope: !12224)
!12228 = !DILocation(line: 877, column: 23, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12224, file: !832, line: 877, column: 9)
!12230 = !DILocation(line: 877, column: 31, scope: !12229)
!12231 = !DILocation(line: 877, column: 21, scope: !12229)
!12232 = !DILocation(line: 877, column: 14, scope: !12229)
!12233 = !DILocation(line: 877, column: 37, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12229, file: !832, line: 877, column: 9)
!12235 = !DILocation(line: 877, column: 9, scope: !12229)
!12236 = !DILocation(line: 879, column: 20, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12234, file: !832, line: 878, column: 11)
!12238 = !DILocation(line: 879, column: 28, scope: !12237)
!12239 = !DILocation(line: 879, column: 18, scope: !12237)
!12240 = !DILocation(line: 880, column: 39, scope: !12237)
!12241 = !DILocation(line: 880, column: 44, scope: !12237)
!12242 = !DILocation(line: 880, column: 26, scope: !12237)
!12243 = !DILocation(line: 880, column: 24, scope: !12237)
!12244 = !DILocation(line: 882, column: 20, scope: !12237)
!12245 = !DILocation(line: 882, column: 28, scope: !12237)
!12246 = !DILocation(line: 882, column: 18, scope: !12237)
!12247 = !DILocation(line: 884, column: 17, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12237, file: !832, line: 884, column: 17)
!12249 = !DILocation(line: 884, column: 29, scope: !12248)
!12250 = !DILocation(line: 884, column: 17, scope: !12237)
!12251 = !DILocation(line: 888, column: 32, scope: !12252)
!12252 = distinct !DILexicalBlock(scope: !12248, file: !832, line: 885, column: 15)
!12253 = !DILocation(line: 888, column: 44, scope: !12252)
!12254 = !DILocation(line: 888, column: 17, scope: !12252)
!12255 = !DILocation(line: 888, column: 25, scope: !12252)
!12256 = !DILocation(line: 888, column: 30, scope: !12252)
!12257 = !DILocation(line: 889, column: 36, scope: !12252)
!12258 = !DILocation(line: 889, column: 17, scope: !12252)
!12259 = !DILocation(line: 889, column: 29, scope: !12252)
!12260 = !DILocation(line: 889, column: 34, scope: !12252)
!12261 = !DILocation(line: 890, column: 15, scope: !12252)
!12262 = !DILocation(line: 895, column: 36, scope: !12263)
!12263 = distinct !DILexicalBlock(scope: !12248, file: !832, line: 892, column: 15)
!12264 = !DILocation(line: 895, column: 17, scope: !12263)
!12265 = !DILocation(line: 895, column: 29, scope: !12263)
!12266 = !DILocation(line: 895, column: 34, scope: !12263)
!12267 = !DILocation(line: 896, column: 17, scope: !12263)
!12268 = !DILocation(line: 896, column: 22, scope: !12263)
!12269 = !DILocation(line: 896, column: 36, scope: !12263)
!12270 = !DILocation(line: 897, column: 29, scope: !12263)
!12271 = !DILocation(line: 897, column: 34, scope: !12263)
!12272 = !DILocation(line: 897, column: 17, scope: !12263)
!12273 = !DILocation(line: 899, column: 11, scope: !12237)
!12274 = !DILocation(line: 877, column: 54, scope: !12234)
!12275 = !DILocation(line: 877, column: 52, scope: !12234)
!12276 = !DILocation(line: 877, column: 9, scope: !12234)
!12277 = distinct !{!12277, !12235, !12278}
!12278 = !DILocation(line: 899, column: 11, scope: !12229)
!12279 = !DILocation(line: 903, column: 16, scope: !12224)
!12280 = !DILocation(line: 903, column: 24, scope: !12224)
!12281 = !DILocation(line: 903, column: 14, scope: !12224)
!12282 = !DILocation(line: 904, column: 9, scope: !12224)
!12283 = !DILocation(line: 904, column: 17, scope: !12224)
!12284 = !DILocation(line: 904, column: 22, scope: !12224)
!12285 = !DILocation(line: 905, column: 13, scope: !12286)
!12286 = distinct !DILexicalBlock(scope: !12224, file: !832, line: 905, column: 13)
!12287 = !DILocation(line: 905, column: 13, scope: !12224)
!12288 = !DILocation(line: 906, column: 11, scope: !12286)
!12289 = !DILocation(line: 907, column: 35, scope: !12224)
!12290 = !DILocation(line: 907, column: 40, scope: !12224)
!12291 = !DILocation(line: 907, column: 22, scope: !12224)
!12292 = !DILocation(line: 907, column: 20, scope: !12224)
!12293 = !DILocation(line: 909, column: 13, scope: !12294)
!12294 = distinct !DILexicalBlock(scope: !12224, file: !832, line: 909, column: 13)
!12295 = !DILocation(line: 909, column: 25, scope: !12294)
!12296 = !DILocation(line: 909, column: 13, scope: !12224)
!12297 = !DILocalVariable(name: "new_entry", scope: !12298, file: !832, line: 913, type: !835)
!12298 = distinct !DILexicalBlock(scope: !12294, file: !832, line: 910, column: 11)
!12299 = !DILocation(line: 913, column: 32, scope: !12298)
!12300 = !DILocation(line: 913, column: 60, scope: !12298)
!12301 = !DILocation(line: 913, column: 44, scope: !12298)
!12302 = !DILocation(line: 915, column: 17, scope: !12303)
!12303 = distinct !DILexicalBlock(scope: !12298, file: !832, line: 915, column: 17)
!12304 = !DILocation(line: 915, column: 27, scope: !12303)
!12305 = !DILocation(line: 915, column: 17, scope: !12298)
!12306 = !DILocation(line: 916, column: 15, scope: !12303)
!12307 = !DILocation(line: 918, column: 31, scope: !12298)
!12308 = !DILocation(line: 918, column: 13, scope: !12298)
!12309 = !DILocation(line: 918, column: 24, scope: !12298)
!12310 = !DILocation(line: 918, column: 29, scope: !12298)
!12311 = !DILocation(line: 919, column: 31, scope: !12298)
!12312 = !DILocation(line: 919, column: 43, scope: !12298)
!12313 = !DILocation(line: 919, column: 13, scope: !12298)
!12314 = !DILocation(line: 919, column: 24, scope: !12298)
!12315 = !DILocation(line: 919, column: 29, scope: !12298)
!12316 = !DILocation(line: 920, column: 32, scope: !12298)
!12317 = !DILocation(line: 920, column: 13, scope: !12298)
!12318 = !DILocation(line: 920, column: 25, scope: !12298)
!12319 = !DILocation(line: 920, column: 30, scope: !12298)
!12320 = !DILocation(line: 921, column: 11, scope: !12298)
!12321 = !DILocation(line: 925, column: 32, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12294, file: !832, line: 923, column: 11)
!12323 = !DILocation(line: 925, column: 13, scope: !12322)
!12324 = !DILocation(line: 925, column: 25, scope: !12322)
!12325 = !DILocation(line: 925, column: 30, scope: !12322)
!12326 = !DILocation(line: 926, column: 13, scope: !12322)
!12327 = !DILocation(line: 926, column: 18, scope: !12322)
!12328 = !DILocation(line: 926, column: 32, scope: !12322)
!12329 = !DILocation(line: 928, column: 9, scope: !12224)
!12330 = !DILocation(line: 928, column: 17, scope: !12224)
!12331 = !DILocation(line: 928, column: 22, scope: !12224)
!12332 = !DILocation(line: 929, column: 9, scope: !12224)
!12333 = !DILocation(line: 929, column: 14, scope: !12224)
!12334 = !DILocation(line: 929, column: 28, scope: !12224)
!12335 = !DILocation(line: 930, column: 7, scope: !12224)
!12336 = !DILocation(line: 865, column: 64, scope: !12214)
!12337 = !DILocation(line: 865, column: 3, scope: !12214)
!12338 = distinct !{!12338, !12218, !12339}
!12339 = !DILocation(line: 930, column: 7, scope: !12209)
!12340 = !DILocation(line: 931, column: 3, scope: !12195)
!12341 = !DILocation(line: 932, column: 1, scope: !12195)
!12342 = distinct !DISubprogram(name: "free_entry", scope: !832, file: !832, line: 776, type: !954, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12343 = !DILocalVariable(name: "table", arg: 1, scope: !12342, file: !832, line: 776, type: !932)
!12344 = !DILocation(line: 776, column: 25, scope: !12342)
!12345 = !DILocalVariable(name: "entry", arg: 2, scope: !12342, file: !832, line: 776, type: !835)
!12346 = !DILocation(line: 776, column: 51, scope: !12342)
!12347 = !DILocation(line: 778, column: 3, scope: !12342)
!12348 = !DILocation(line: 778, column: 10, scope: !12342)
!12349 = !DILocation(line: 778, column: 15, scope: !12342)
!12350 = !DILocation(line: 779, column: 17, scope: !12342)
!12351 = !DILocation(line: 779, column: 24, scope: !12342)
!12352 = !DILocation(line: 779, column: 3, scope: !12342)
!12353 = !DILocation(line: 779, column: 10, scope: !12342)
!12354 = !DILocation(line: 779, column: 15, scope: !12342)
!12355 = !DILocation(line: 780, column: 28, scope: !12342)
!12356 = !DILocation(line: 780, column: 3, scope: !12342)
!12357 = !DILocation(line: 780, column: 10, scope: !12342)
!12358 = !DILocation(line: 780, column: 26, scope: !12342)
!12359 = !DILocation(line: 781, column: 1, scope: !12342)
!12360 = distinct !DISubprogram(name: "allocate_entry", scope: !832, file: !832, line: 751, type: !959, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12361 = !DILocalVariable(name: "table", arg: 1, scope: !12360, file: !832, line: 751, type: !932)
!12362 = !DILocation(line: 751, column: 29, scope: !12360)
!12363 = !DILocalVariable(name: "new", scope: !12360, file: !832, line: 753, type: !835)
!12364 = !DILocation(line: 753, column: 22, scope: !12360)
!12365 = !DILocation(line: 755, column: 7, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12360, file: !832, line: 755, column: 7)
!12367 = !DILocation(line: 755, column: 14, scope: !12366)
!12368 = !DILocation(line: 755, column: 7, scope: !12360)
!12369 = !DILocation(line: 757, column: 13, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12366, file: !832, line: 756, column: 5)
!12371 = !DILocation(line: 757, column: 20, scope: !12370)
!12372 = !DILocation(line: 757, column: 11, scope: !12370)
!12373 = !DILocation(line: 758, column: 32, scope: !12370)
!12374 = !DILocation(line: 758, column: 37, scope: !12370)
!12375 = !DILocation(line: 758, column: 7, scope: !12370)
!12376 = !DILocation(line: 758, column: 14, scope: !12370)
!12377 = !DILocation(line: 758, column: 30, scope: !12370)
!12378 = !DILocation(line: 759, column: 5, scope: !12370)
!12379 = !DILocation(line: 765, column: 13, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12366, file: !832, line: 761, column: 5)
!12381 = !DILocation(line: 765, column: 11, scope: !12380)
!12382 = !DILocation(line: 769, column: 10, scope: !12360)
!12383 = !DILocation(line: 769, column: 3, scope: !12360)
!12384 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !832, file: !832, line: 1038, type: !937, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12385 = !DILocalVariable(name: "table", arg: 1, scope: !12384, file: !832, line: 1038, type: !932)
!12386 = !DILocation(line: 1038, column: 36, scope: !12384)
!12387 = !DILocalVariable(name: "entry", arg: 2, scope: !12384, file: !832, line: 1038, type: !525)
!12388 = !DILocation(line: 1038, column: 55, scope: !12384)
!12389 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12384, file: !832, line: 1039, type: !939)
!12390 = !DILocation(line: 1039, column: 37, scope: !12384)
!12391 = !DILocalVariable(name: "data", scope: !12384, file: !832, line: 1041, type: !47)
!12392 = !DILocation(line: 1041, column: 9, scope: !12384)
!12393 = !DILocalVariable(name: "bucket", scope: !12384, file: !832, line: 1042, type: !835)
!12394 = !DILocation(line: 1042, column: 22, scope: !12384)
!12395 = !DILocation(line: 1047, column: 9, scope: !12396)
!12396 = distinct !DILexicalBlock(scope: !12384, file: !832, line: 1047, column: 7)
!12397 = !DILocation(line: 1047, column: 7, scope: !12384)
!12398 = !DILocation(line: 1048, column: 5, scope: !12396)
!12399 = !DILocation(line: 1051, column: 32, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12384, file: !832, line: 1051, column: 7)
!12401 = !DILocation(line: 1051, column: 39, scope: !12400)
!12402 = !DILocation(line: 1051, column: 15, scope: !12400)
!12403 = !DILocation(line: 1051, column: 13, scope: !12400)
!12404 = !DILocation(line: 1051, column: 63, scope: !12400)
!12405 = !DILocation(line: 1051, column: 7, scope: !12384)
!12406 = !DILocation(line: 1053, column: 11, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12408, file: !832, line: 1053, column: 11)
!12408 = distinct !DILexicalBlock(scope: !12400, file: !832, line: 1052, column: 5)
!12409 = !DILocation(line: 1053, column: 11, scope: !12408)
!12410 = !DILocation(line: 1054, column: 24, scope: !12407)
!12411 = !DILocation(line: 1054, column: 10, scope: !12407)
!12412 = !DILocation(line: 1054, column: 22, scope: !12407)
!12413 = !DILocation(line: 1054, column: 9, scope: !12407)
!12414 = !DILocation(line: 1055, column: 7, scope: !12408)
!12415 = !DILocation(line: 1063, column: 7, scope: !12416)
!12416 = distinct !DILexicalBlock(scope: !12384, file: !832, line: 1063, column: 7)
!12417 = !DILocation(line: 1063, column: 14, scope: !12416)
!12418 = !DILocation(line: 1064, column: 9, scope: !12416)
!12419 = !DILocation(line: 1064, column: 16, scope: !12416)
!12420 = !DILocation(line: 1064, column: 24, scope: !12416)
!12421 = !DILocation(line: 1064, column: 43, scope: !12416)
!12422 = !DILocation(line: 1064, column: 50, scope: !12416)
!12423 = !DILocation(line: 1064, column: 41, scope: !12416)
!12424 = !DILocation(line: 1064, column: 7, scope: !12416)
!12425 = !DILocation(line: 1063, column: 7, scope: !12384)
!12426 = !DILocation(line: 1068, column: 21, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12416, file: !832, line: 1065, column: 5)
!12428 = !DILocation(line: 1068, column: 7, scope: !12427)
!12429 = !DILocation(line: 1069, column: 11, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12427, file: !832, line: 1069, column: 11)
!12431 = !DILocation(line: 1069, column: 18, scope: !12430)
!12432 = !DILocation(line: 1070, column: 13, scope: !12430)
!12433 = !DILocation(line: 1070, column: 20, scope: !12430)
!12434 = !DILocation(line: 1070, column: 28, scope: !12430)
!12435 = !DILocation(line: 1070, column: 47, scope: !12430)
!12436 = !DILocation(line: 1070, column: 54, scope: !12430)
!12437 = !DILocation(line: 1070, column: 45, scope: !12430)
!12438 = !DILocation(line: 1070, column: 11, scope: !12430)
!12439 = !DILocation(line: 1069, column: 11, scope: !12427)
!12440 = !DILocalVariable(name: "tuning", scope: !12441, file: !832, line: 1072, type: !847)
!12441 = distinct !DILexicalBlock(scope: !12430, file: !832, line: 1071, column: 9)
!12442 = !DILocation(line: 1072, column: 30, scope: !12441)
!12443 = !DILocation(line: 1072, column: 39, scope: !12441)
!12444 = !DILocation(line: 1072, column: 46, scope: !12441)
!12445 = !DILocalVariable(name: "candidate", scope: !12441, file: !832, line: 1073, type: !853)
!12446 = !DILocation(line: 1073, column: 17, scope: !12441)
!12447 = !DILocation(line: 1074, column: 14, scope: !12441)
!12448 = !DILocation(line: 1074, column: 22, scope: !12441)
!12449 = !DILocation(line: 1075, column: 17, scope: !12441)
!12450 = !DILocation(line: 1075, column: 24, scope: !12441)
!12451 = !DILocation(line: 1075, column: 36, scope: !12441)
!12452 = !DILocation(line: 1075, column: 44, scope: !12441)
!12453 = !DILocation(line: 1075, column: 34, scope: !12441)
!12454 = !DILocation(line: 1076, column: 17, scope: !12441)
!12455 = !DILocation(line: 1076, column: 24, scope: !12441)
!12456 = !DILocation(line: 1076, column: 36, scope: !12441)
!12457 = !DILocation(line: 1076, column: 44, scope: !12441)
!12458 = !DILocation(line: 1076, column: 34, scope: !12441)
!12459 = !DILocation(line: 1077, column: 19, scope: !12441)
!12460 = !DILocation(line: 1077, column: 27, scope: !12441)
!12461 = !DILocation(line: 1077, column: 17, scope: !12441)
!12462 = !DILocation(line: 1079, column: 27, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12441, file: !832, line: 1079, column: 15)
!12464 = !DILocation(line: 1079, column: 24, scope: !12463)
!12465 = !DILocation(line: 1079, column: 15, scope: !12441)
!12466 = !DILocation(line: 1080, column: 13, scope: !12463)
!12467 = !DILocation(line: 1083, column: 29, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12441, file: !832, line: 1083, column: 15)
!12469 = !DILocation(line: 1083, column: 36, scope: !12468)
!12470 = !DILocation(line: 1083, column: 16, scope: !12468)
!12471 = !DILocation(line: 1083, column: 15, scope: !12441)
!12472 = !DILocation(line: 1084, column: 13, scope: !12468)
!12473 = !DILocation(line: 1087, column: 32, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12441, file: !832, line: 1087, column: 15)
!12475 = !DILocation(line: 1087, column: 39, scope: !12474)
!12476 = !DILocation(line: 1087, column: 15, scope: !12474)
!12477 = !DILocation(line: 1087, column: 62, scope: !12474)
!12478 = !DILocation(line: 1087, column: 15, scope: !12441)
!12479 = !DILocation(line: 1088, column: 13, scope: !12474)
!12480 = !DILocation(line: 1089, column: 9, scope: !12441)
!12481 = !DILocation(line: 1090, column: 5, scope: !12427)
!12482 = !DILocation(line: 1094, column: 7, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !12384, file: !832, line: 1094, column: 7)
!12484 = !DILocation(line: 1094, column: 15, scope: !12483)
!12485 = !DILocation(line: 1094, column: 7, scope: !12384)
!12486 = !DILocalVariable(name: "new_entry", scope: !12487, file: !832, line: 1096, type: !835)
!12487 = distinct !DILexicalBlock(scope: !12483, file: !832, line: 1095, column: 5)
!12488 = !DILocation(line: 1096, column: 26, scope: !12487)
!12489 = !DILocation(line: 1096, column: 54, scope: !12487)
!12490 = !DILocation(line: 1096, column: 38, scope: !12487)
!12491 = !DILocation(line: 1098, column: 11, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12487, file: !832, line: 1098, column: 11)
!12493 = !DILocation(line: 1098, column: 21, scope: !12492)
!12494 = !DILocation(line: 1098, column: 11, scope: !12487)
!12495 = !DILocation(line: 1099, column: 9, scope: !12492)
!12496 = !DILocation(line: 1103, column: 34, scope: !12487)
!12497 = !DILocation(line: 1103, column: 7, scope: !12487)
!12498 = !DILocation(line: 1103, column: 18, scope: !12487)
!12499 = !DILocation(line: 1103, column: 23, scope: !12487)
!12500 = !DILocation(line: 1104, column: 25, scope: !12487)
!12501 = !DILocation(line: 1104, column: 33, scope: !12487)
!12502 = !DILocation(line: 1104, column: 7, scope: !12487)
!12503 = !DILocation(line: 1104, column: 18, scope: !12487)
!12504 = !DILocation(line: 1104, column: 23, scope: !12487)
!12505 = !DILocation(line: 1105, column: 22, scope: !12487)
!12506 = !DILocation(line: 1105, column: 7, scope: !12487)
!12507 = !DILocation(line: 1105, column: 15, scope: !12487)
!12508 = !DILocation(line: 1105, column: 20, scope: !12487)
!12509 = !DILocation(line: 1106, column: 7, scope: !12487)
!12510 = !DILocation(line: 1106, column: 14, scope: !12487)
!12511 = !DILocation(line: 1106, column: 23, scope: !12487)
!12512 = !DILocation(line: 1107, column: 7, scope: !12487)
!12513 = !DILocation(line: 1112, column: 27, scope: !12384)
!12514 = !DILocation(line: 1112, column: 3, scope: !12384)
!12515 = !DILocation(line: 1112, column: 11, scope: !12384)
!12516 = !DILocation(line: 1112, column: 16, scope: !12384)
!12517 = !DILocation(line: 1113, column: 3, scope: !12384)
!12518 = !DILocation(line: 1113, column: 10, scope: !12384)
!12519 = !DILocation(line: 1113, column: 19, scope: !12384)
!12520 = !DILocation(line: 1114, column: 3, scope: !12384)
!12521 = !DILocation(line: 1114, column: 10, scope: !12384)
!12522 = !DILocation(line: 1114, column: 24, scope: !12384)
!12523 = !DILocation(line: 1116, column: 3, scope: !12384)
!12524 = !DILocation(line: 1117, column: 1, scope: !12384)
!12525 = distinct !DISubprogram(name: "hash_find_entry", scope: !832, file: !832, line: 790, type: !956, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12526 = !DILocalVariable(name: "table", arg: 1, scope: !12525, file: !832, line: 790, type: !932)
!12527 = !DILocation(line: 790, column: 30, scope: !12525)
!12528 = !DILocalVariable(name: "entry", arg: 2, scope: !12525, file: !832, line: 790, type: !525)
!12529 = !DILocation(line: 790, column: 49, scope: !12525)
!12530 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12525, file: !832, line: 791, type: !958)
!12531 = !DILocation(line: 791, column: 38, scope: !12525)
!12532 = !DILocalVariable(name: "delete", arg: 4, scope: !12525, file: !832, line: 791, type: !139)
!12533 = !DILocation(line: 791, column: 56, scope: !12525)
!12534 = !DILocalVariable(name: "bucket", scope: !12525, file: !832, line: 793, type: !835)
!12535 = !DILocation(line: 793, column: 22, scope: !12525)
!12536 = !DILocation(line: 793, column: 44, scope: !12525)
!12537 = !DILocation(line: 793, column: 51, scope: !12525)
!12538 = !DILocation(line: 793, column: 31, scope: !12525)
!12539 = !DILocalVariable(name: "cursor", scope: !12525, file: !832, line: 794, type: !835)
!12540 = !DILocation(line: 794, column: 22, scope: !12525)
!12541 = !DILocation(line: 796, column: 18, scope: !12525)
!12542 = !DILocation(line: 796, column: 4, scope: !12525)
!12543 = !DILocation(line: 796, column: 16, scope: !12525)
!12544 = !DILocation(line: 799, column: 7, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12525, file: !832, line: 799, column: 7)
!12546 = !DILocation(line: 799, column: 15, scope: !12545)
!12547 = !DILocation(line: 799, column: 20, scope: !12545)
!12548 = !DILocation(line: 799, column: 7, scope: !12525)
!12549 = !DILocation(line: 800, column: 5, scope: !12545)
!12550 = !DILocation(line: 803, column: 7, scope: !12551)
!12551 = distinct !DILexicalBlock(scope: !12525, file: !832, line: 803, column: 7)
!12552 = !DILocation(line: 803, column: 16, scope: !12551)
!12553 = !DILocation(line: 803, column: 24, scope: !12551)
!12554 = !DILocation(line: 803, column: 13, scope: !12551)
!12555 = !DILocation(line: 803, column: 29, scope: !12551)
!12556 = !DILocation(line: 803, column: 32, scope: !12551)
!12557 = !DILocation(line: 803, column: 39, scope: !12551)
!12558 = !DILocation(line: 803, column: 51, scope: !12551)
!12559 = !DILocation(line: 803, column: 58, scope: !12551)
!12560 = !DILocation(line: 803, column: 66, scope: !12551)
!12561 = !DILocation(line: 803, column: 7, scope: !12525)
!12562 = !DILocalVariable(name: "data", scope: !12563, file: !832, line: 805, type: !47)
!12563 = distinct !DILexicalBlock(scope: !12551, file: !832, line: 804, column: 5)
!12564 = !DILocation(line: 805, column: 13, scope: !12563)
!12565 = !DILocation(line: 805, column: 20, scope: !12563)
!12566 = !DILocation(line: 805, column: 28, scope: !12563)
!12567 = !DILocation(line: 807, column: 11, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12563, file: !832, line: 807, column: 11)
!12569 = !DILocation(line: 807, column: 11, scope: !12563)
!12570 = !DILocation(line: 809, column: 15, scope: !12571)
!12571 = distinct !DILexicalBlock(scope: !12572, file: !832, line: 809, column: 15)
!12572 = distinct !DILexicalBlock(scope: !12568, file: !832, line: 808, column: 9)
!12573 = !DILocation(line: 809, column: 23, scope: !12571)
!12574 = !DILocation(line: 809, column: 15, scope: !12572)
!12575 = !DILocalVariable(name: "next", scope: !12576, file: !832, line: 811, type: !835)
!12576 = distinct !DILexicalBlock(scope: !12571, file: !832, line: 810, column: 13)
!12577 = !DILocation(line: 811, column: 34, scope: !12576)
!12578 = !DILocation(line: 811, column: 41, scope: !12576)
!12579 = !DILocation(line: 811, column: 49, scope: !12576)
!12580 = !DILocation(line: 815, column: 16, scope: !12576)
!12581 = !DILocation(line: 815, column: 26, scope: !12576)
!12582 = !DILocation(line: 815, column: 25, scope: !12576)
!12583 = !{i64 0, i64 8, !2668, i64 8, i64 8, !2668}
!12584 = !DILocation(line: 816, column: 27, scope: !12576)
!12585 = !DILocation(line: 816, column: 34, scope: !12576)
!12586 = !DILocation(line: 816, column: 15, scope: !12576)
!12587 = !DILocation(line: 817, column: 13, scope: !12576)
!12588 = !DILocation(line: 820, column: 15, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12571, file: !832, line: 819, column: 13)
!12590 = !DILocation(line: 820, column: 23, scope: !12589)
!12591 = !DILocation(line: 820, column: 28, scope: !12589)
!12592 = !DILocation(line: 822, column: 9, scope: !12572)
!12593 = !DILocation(line: 824, column: 14, scope: !12563)
!12594 = !DILocation(line: 824, column: 7, scope: !12563)
!12595 = !DILocation(line: 828, column: 17, scope: !12596)
!12596 = distinct !DILexicalBlock(scope: !12525, file: !832, line: 828, column: 3)
!12597 = !DILocation(line: 828, column: 15, scope: !12596)
!12598 = !DILocation(line: 828, column: 8, scope: !12596)
!12599 = !DILocation(line: 828, column: 25, scope: !12600)
!12600 = distinct !DILexicalBlock(scope: !12596, file: !832, line: 828, column: 3)
!12601 = !DILocation(line: 828, column: 33, scope: !12600)
!12602 = !DILocation(line: 828, column: 3, scope: !12596)
!12603 = !DILocation(line: 830, column: 11, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12605, file: !832, line: 830, column: 11)
!12605 = distinct !DILexicalBlock(scope: !12600, file: !832, line: 829, column: 5)
!12606 = !DILocation(line: 830, column: 20, scope: !12604)
!12607 = !DILocation(line: 830, column: 28, scope: !12604)
!12608 = !DILocation(line: 830, column: 34, scope: !12604)
!12609 = !DILocation(line: 830, column: 17, scope: !12604)
!12610 = !DILocation(line: 831, column: 11, scope: !12604)
!12611 = !DILocation(line: 831, column: 14, scope: !12604)
!12612 = !DILocation(line: 831, column: 21, scope: !12604)
!12613 = !DILocation(line: 831, column: 33, scope: !12604)
!12614 = !DILocation(line: 831, column: 40, scope: !12604)
!12615 = !DILocation(line: 831, column: 48, scope: !12604)
!12616 = !DILocation(line: 831, column: 54, scope: !12604)
!12617 = !DILocation(line: 830, column: 11, scope: !12605)
!12618 = !DILocalVariable(name: "data", scope: !12619, file: !832, line: 833, type: !47)
!12619 = distinct !DILexicalBlock(scope: !12604, file: !832, line: 832, column: 9)
!12620 = !DILocation(line: 833, column: 17, scope: !12619)
!12621 = !DILocation(line: 833, column: 24, scope: !12619)
!12622 = !DILocation(line: 833, column: 32, scope: !12619)
!12623 = !DILocation(line: 833, column: 38, scope: !12619)
!12624 = !DILocation(line: 835, column: 15, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12619, file: !832, line: 835, column: 15)
!12626 = !DILocation(line: 835, column: 15, scope: !12619)
!12627 = !DILocalVariable(name: "next", scope: !12628, file: !832, line: 837, type: !835)
!12628 = distinct !DILexicalBlock(scope: !12625, file: !832, line: 836, column: 13)
!12629 = !DILocation(line: 837, column: 34, scope: !12628)
!12630 = !DILocation(line: 837, column: 41, scope: !12628)
!12631 = !DILocation(line: 837, column: 49, scope: !12628)
!12632 = !DILocation(line: 841, column: 30, scope: !12628)
!12633 = !DILocation(line: 841, column: 36, scope: !12628)
!12634 = !DILocation(line: 841, column: 15, scope: !12628)
!12635 = !DILocation(line: 841, column: 23, scope: !12628)
!12636 = !DILocation(line: 841, column: 28, scope: !12628)
!12637 = !DILocation(line: 842, column: 27, scope: !12628)
!12638 = !DILocation(line: 842, column: 34, scope: !12628)
!12639 = !DILocation(line: 842, column: 15, scope: !12628)
!12640 = !DILocation(line: 843, column: 13, scope: !12628)
!12641 = !DILocation(line: 845, column: 18, scope: !12619)
!12642 = !DILocation(line: 845, column: 11, scope: !12619)
!12643 = !DILocation(line: 847, column: 5, scope: !12605)
!12644 = !DILocation(line: 828, column: 48, scope: !12600)
!12645 = !DILocation(line: 828, column: 56, scope: !12600)
!12646 = !DILocation(line: 828, column: 46, scope: !12600)
!12647 = !DILocation(line: 828, column: 3, scope: !12600)
!12648 = distinct !{!12648, !12602, !12649}
!12649 = !DILocation(line: 847, column: 5, scope: !12596)
!12650 = !DILocation(line: 850, column: 3, scope: !12525)
!12651 = !DILocation(line: 851, column: 1, scope: !12525)
!12652 = distinct !DISubprogram(name: "hash_insert", scope: !832, file: !832, line: 1126, type: !940, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12653 = !DILocalVariable(name: "table", arg: 1, scope: !12652, file: !832, line: 1126, type: !932)
!12654 = !DILocation(line: 1126, column: 26, scope: !12652)
!12655 = !DILocalVariable(name: "entry", arg: 2, scope: !12652, file: !832, line: 1126, type: !525)
!12656 = !DILocation(line: 1126, column: 45, scope: !12652)
!12657 = !DILocalVariable(name: "matched_ent", scope: !12652, file: !832, line: 1128, type: !525)
!12658 = !DILocation(line: 1128, column: 15, scope: !12652)
!12659 = !DILocalVariable(name: "err", scope: !12652, file: !832, line: 1129, type: !5)
!12660 = !DILocation(line: 1129, column: 7, scope: !12652)
!12661 = !DILocation(line: 1129, column: 36, scope: !12652)
!12662 = !DILocation(line: 1129, column: 43, scope: !12652)
!12663 = !DILocation(line: 1129, column: 13, scope: !12652)
!12664 = !DILocation(line: 1130, column: 11, scope: !12652)
!12665 = !DILocation(line: 1130, column: 15, scope: !12652)
!12666 = !DILocation(line: 1132, column: 23, scope: !12652)
!12667 = !DILocation(line: 1132, column: 27, scope: !12652)
!12668 = !DILocation(line: 1132, column: 34, scope: !12652)
!12669 = !DILocation(line: 1132, column: 48, scope: !12652)
!12670 = !DILocation(line: 1130, column: 3, scope: !12652)
!12671 = distinct !DISubprogram(name: "hash_delete", scope: !832, file: !832, line: 1140, type: !940, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !823, retainedNodes: !206)
!12672 = !DILocalVariable(name: "table", arg: 1, scope: !12671, file: !832, line: 1140, type: !932)
!12673 = !DILocation(line: 1140, column: 26, scope: !12671)
!12674 = !DILocalVariable(name: "entry", arg: 2, scope: !12671, file: !832, line: 1140, type: !525)
!12675 = !DILocation(line: 1140, column: 45, scope: !12671)
!12676 = !DILocalVariable(name: "data", scope: !12671, file: !832, line: 1142, type: !47)
!12677 = !DILocation(line: 1142, column: 9, scope: !12671)
!12678 = !DILocalVariable(name: "bucket", scope: !12671, file: !832, line: 1143, type: !835)
!12679 = !DILocation(line: 1143, column: 22, scope: !12671)
!12680 = !DILocation(line: 1145, column: 27, scope: !12671)
!12681 = !DILocation(line: 1145, column: 34, scope: !12671)
!12682 = !DILocation(line: 1145, column: 10, scope: !12671)
!12683 = !DILocation(line: 1145, column: 8, scope: !12671)
!12684 = !DILocation(line: 1146, column: 8, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12671, file: !832, line: 1146, column: 7)
!12686 = !DILocation(line: 1146, column: 7, scope: !12671)
!12687 = !DILocation(line: 1147, column: 5, scope: !12685)
!12688 = !DILocation(line: 1149, column: 3, scope: !12671)
!12689 = !DILocation(line: 1149, column: 10, scope: !12671)
!12690 = !DILocation(line: 1149, column: 19, scope: !12671)
!12691 = !DILocation(line: 1150, column: 8, scope: !12692)
!12692 = distinct !DILexicalBlock(scope: !12671, file: !832, line: 1150, column: 7)
!12693 = !DILocation(line: 1150, column: 16, scope: !12692)
!12694 = !DILocation(line: 1150, column: 7, scope: !12671)
!12695 = !DILocation(line: 1152, column: 7, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12692, file: !832, line: 1151, column: 5)
!12697 = !DILocation(line: 1152, column: 14, scope: !12696)
!12698 = !DILocation(line: 1152, column: 28, scope: !12696)
!12699 = !DILocation(line: 1157, column: 11, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12696, file: !832, line: 1157, column: 11)
!12701 = !DILocation(line: 1157, column: 18, scope: !12700)
!12702 = !DILocation(line: 1158, column: 13, scope: !12700)
!12703 = !DILocation(line: 1158, column: 20, scope: !12700)
!12704 = !DILocation(line: 1158, column: 28, scope: !12700)
!12705 = !DILocation(line: 1158, column: 47, scope: !12700)
!12706 = !DILocation(line: 1158, column: 54, scope: !12700)
!12707 = !DILocation(line: 1158, column: 45, scope: !12700)
!12708 = !DILocation(line: 1158, column: 11, scope: !12700)
!12709 = !DILocation(line: 1157, column: 11, scope: !12696)
!12710 = !DILocation(line: 1162, column: 25, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12700, file: !832, line: 1159, column: 9)
!12712 = !DILocation(line: 1162, column: 11, scope: !12711)
!12713 = !DILocation(line: 1163, column: 15, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12711, file: !832, line: 1163, column: 15)
!12715 = !DILocation(line: 1163, column: 22, scope: !12714)
!12716 = !DILocation(line: 1164, column: 17, scope: !12714)
!12717 = !DILocation(line: 1164, column: 24, scope: !12714)
!12718 = !DILocation(line: 1164, column: 32, scope: !12714)
!12719 = !DILocation(line: 1164, column: 51, scope: !12714)
!12720 = !DILocation(line: 1164, column: 58, scope: !12714)
!12721 = !DILocation(line: 1164, column: 49, scope: !12714)
!12722 = !DILocation(line: 1164, column: 15, scope: !12714)
!12723 = !DILocation(line: 1163, column: 15, scope: !12711)
!12724 = !DILocalVariable(name: "tuning", scope: !12725, file: !832, line: 1166, type: !847)
!12725 = distinct !DILexicalBlock(scope: !12714, file: !832, line: 1165, column: 13)
!12726 = !DILocation(line: 1166, column: 34, scope: !12725)
!12727 = !DILocation(line: 1166, column: 43, scope: !12725)
!12728 = !DILocation(line: 1166, column: 50, scope: !12725)
!12729 = !DILocalVariable(name: "candidate", scope: !12725, file: !832, line: 1167, type: !52)
!12730 = !DILocation(line: 1167, column: 22, scope: !12725)
!12731 = !DILocation(line: 1168, column: 18, scope: !12725)
!12732 = !DILocation(line: 1168, column: 26, scope: !12725)
!12733 = !DILocation(line: 1169, column: 20, scope: !12725)
!12734 = !DILocation(line: 1169, column: 27, scope: !12725)
!12735 = !DILocation(line: 1169, column: 39, scope: !12725)
!12736 = !DILocation(line: 1169, column: 47, scope: !12725)
!12737 = !DILocation(line: 1169, column: 37, scope: !12725)
!12738 = !DILocation(line: 1170, column: 21, scope: !12725)
!12739 = !DILocation(line: 1170, column: 28, scope: !12725)
!12740 = !DILocation(line: 1170, column: 40, scope: !12725)
!12741 = !DILocation(line: 1170, column: 48, scope: !12725)
!12742 = !DILocation(line: 1170, column: 38, scope: !12725)
!12743 = !DILocation(line: 1171, column: 23, scope: !12725)
!12744 = !DILocation(line: 1171, column: 31, scope: !12725)
!12745 = !DILocation(line: 1171, column: 21, scope: !12725)
!12746 = !DILocation(line: 1168, column: 17, scope: !12725)
!12747 = !DILocation(line: 1173, column: 33, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12725, file: !832, line: 1173, column: 19)
!12749 = !DILocation(line: 1173, column: 40, scope: !12748)
!12750 = !DILocation(line: 1173, column: 20, scope: !12748)
!12751 = !DILocation(line: 1173, column: 19, scope: !12725)
!12752 = !DILocalVariable(name: "cursor", scope: !12753, file: !832, line: 1181, type: !835)
!12753 = distinct !DILexicalBlock(scope: !12748, file: !832, line: 1174, column: 17)
!12754 = !DILocation(line: 1181, column: 38, scope: !12753)
!12755 = !DILocation(line: 1181, column: 47, scope: !12753)
!12756 = !DILocation(line: 1181, column: 54, scope: !12753)
!12757 = !DILocalVariable(name: "next", scope: !12753, file: !832, line: 1182, type: !835)
!12758 = !DILocation(line: 1182, column: 38, scope: !12753)
!12759 = !DILocation(line: 1183, column: 19, scope: !12753)
!12760 = !DILocation(line: 1183, column: 26, scope: !12753)
!12761 = !DILocation(line: 1185, column: 30, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12753, file: !832, line: 1184, column: 21)
!12763 = !DILocation(line: 1185, column: 38, scope: !12762)
!12764 = !DILocation(line: 1185, column: 28, scope: !12762)
!12765 = !DILocation(line: 1186, column: 29, scope: !12762)
!12766 = !DILocation(line: 1186, column: 23, scope: !12762)
!12767 = !DILocation(line: 1187, column: 32, scope: !12762)
!12768 = !DILocation(line: 1187, column: 30, scope: !12762)
!12769 = distinct !{!12769, !12759, !12770}
!12770 = !DILocation(line: 1188, column: 21, scope: !12753)
!12771 = !DILocation(line: 1189, column: 19, scope: !12753)
!12772 = !DILocation(line: 1189, column: 26, scope: !12753)
!12773 = !DILocation(line: 1189, column: 42, scope: !12753)
!12774 = !DILocation(line: 1191, column: 17, scope: !12753)
!12775 = !DILocation(line: 1192, column: 13, scope: !12725)
!12776 = !DILocation(line: 1193, column: 9, scope: !12711)
!12777 = !DILocation(line: 1194, column: 5, scope: !12696)
!12778 = !DILocation(line: 1196, column: 10, scope: !12671)
!12779 = !DILocation(line: 1196, column: 3, scope: !12671)
!12780 = !DILocation(line: 1197, column: 1, scope: !12671)
!12781 = distinct !DISubprogram(name: "triple_hash", scope: !12782, file: !12782, line: 34, type: !615, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1713, retainedNodes: !206)
!12782 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mohamad/clone/coreutils")
!12783 = !DILocalVariable(name: "x", arg: 1, scope: !12781, file: !12782, line: 34, type: !525)
!12784 = !DILocation(line: 34, column: 26, scope: !12781)
!12785 = !DILocalVariable(name: "table_size", arg: 2, scope: !12781, file: !12782, line: 34, type: !52)
!12786 = !DILocation(line: 34, column: 36, scope: !12781)
!12787 = !DILocalVariable(name: "p", scope: !12781, file: !12782, line: 36, type: !1716)
!12788 = !DILocation(line: 36, column: 26, scope: !12781)
!12789 = !DILocation(line: 36, column: 30, scope: !12781)
!12790 = !DILocalVariable(name: "tmp", scope: !12781, file: !12782, line: 37, type: !52)
!12791 = !DILocation(line: 37, column: 10, scope: !12781)
!12792 = !DILocation(line: 37, column: 26, scope: !12781)
!12793 = !DILocation(line: 37, column: 29, scope: !12781)
!12794 = !DILocation(line: 37, column: 35, scope: !12781)
!12795 = !DILocation(line: 37, column: 16, scope: !12781)
!12796 = !DILocation(line: 40, column: 11, scope: !12781)
!12797 = !DILocation(line: 40, column: 17, scope: !12781)
!12798 = !DILocation(line: 40, column: 20, scope: !12781)
!12799 = !DILocation(line: 40, column: 15, scope: !12781)
!12800 = !DILocation(line: 40, column: 30, scope: !12781)
!12801 = !DILocation(line: 40, column: 28, scope: !12781)
!12802 = !DILocation(line: 40, column: 3, scope: !12781)
!12803 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12782, file: !12782, line: 45, type: !615, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1713, retainedNodes: !206)
!12804 = !DILocalVariable(name: "x", arg: 1, scope: !12803, file: !12782, line: 45, type: !525)
!12805 = !DILocation(line: 45, column: 34, scope: !12803)
!12806 = !DILocalVariable(name: "table_size", arg: 2, scope: !12803, file: !12782, line: 45, type: !52)
!12807 = !DILocation(line: 45, column: 44, scope: !12803)
!12808 = !DILocalVariable(name: "p", scope: !12803, file: !12782, line: 47, type: !1716)
!12809 = !DILocation(line: 47, column: 26, scope: !12803)
!12810 = !DILocation(line: 47, column: 30, scope: !12803)
!12811 = !DILocation(line: 50, column: 10, scope: !12803)
!12812 = !DILocation(line: 50, column: 13, scope: !12803)
!12813 = !DILocation(line: 50, column: 22, scope: !12803)
!12814 = !DILocation(line: 50, column: 20, scope: !12803)
!12815 = !DILocation(line: 50, column: 3, scope: !12803)
!12816 = distinct !DISubprogram(name: "triple_compare", scope: !12782, file: !12782, line: 55, type: !617, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1713, retainedNodes: !206)
!12817 = !DILocalVariable(name: "x", arg: 1, scope: !12816, file: !12782, line: 55, type: !525)
!12818 = !DILocation(line: 55, column: 29, scope: !12816)
!12819 = !DILocalVariable(name: "y", arg: 2, scope: !12816, file: !12782, line: 55, type: !525)
!12820 = !DILocation(line: 55, column: 44, scope: !12816)
!12821 = !DILocalVariable(name: "a", scope: !12816, file: !12782, line: 57, type: !1716)
!12822 = !DILocation(line: 57, column: 26, scope: !12816)
!12823 = !DILocation(line: 57, column: 30, scope: !12816)
!12824 = !DILocalVariable(name: "b", scope: !12816, file: !12782, line: 58, type: !1716)
!12825 = !DILocation(line: 58, column: 26, scope: !12816)
!12826 = !DILocation(line: 58, column: 30, scope: !12816)
!12827 = !DILocation(line: 59, column: 11, scope: !12816)
!12828 = !DILocation(line: 59, column: 31, scope: !12816)
!12829 = !DILocation(line: 59, column: 45, scope: !12816)
!12830 = !DILocation(line: 59, column: 48, scope: !12816)
!12831 = !DILocation(line: 59, column: 54, scope: !12816)
!12832 = !DILocation(line: 59, column: 57, scope: !12816)
!12833 = !DILocation(line: 59, column: 34, scope: !12816)
!12834 = !DILocation(line: 0, scope: !12816)
!12835 = !DILocation(line: 59, column: 10, scope: !12816)
!12836 = !DILocation(line: 59, column: 3, scope: !12816)
!12837 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12782, file: !12782, line: 63, type: !617, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1713, retainedNodes: !206)
!12838 = !DILocalVariable(name: "x", arg: 1, scope: !12837, file: !12782, line: 63, type: !525)
!12839 = !DILocation(line: 63, column: 37, scope: !12837)
!12840 = !DILocalVariable(name: "y", arg: 2, scope: !12837, file: !12782, line: 63, type: !525)
!12841 = !DILocation(line: 63, column: 52, scope: !12837)
!12842 = !DILocalVariable(name: "a", scope: !12837, file: !12782, line: 65, type: !1716)
!12843 = !DILocation(line: 65, column: 26, scope: !12837)
!12844 = !DILocation(line: 65, column: 30, scope: !12837)
!12845 = !DILocalVariable(name: "b", scope: !12837, file: !12782, line: 66, type: !1716)
!12846 = !DILocation(line: 66, column: 26, scope: !12837)
!12847 = !DILocation(line: 66, column: 30, scope: !12837)
!12848 = !DILocation(line: 67, column: 11, scope: !12837)
!12849 = !DILocation(line: 67, column: 31, scope: !12837)
!12850 = !DILocation(line: 67, column: 34, scope: !12837)
!12851 = !DILocation(line: 0, scope: !12837)
!12852 = !DILocation(line: 67, column: 10, scope: !12837)
!12853 = !DILocation(line: 67, column: 3, scope: !12837)
!12854 = distinct !DISubprogram(name: "triple_free", scope: !12782, file: !12782, line: 72, type: !613, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1713, retainedNodes: !206)
!12855 = !DILocalVariable(name: "x", arg: 1, scope: !12854, file: !12782, line: 72, type: !47)
!12856 = !DILocation(line: 72, column: 20, scope: !12854)
!12857 = !DILocalVariable(name: "a", scope: !12854, file: !12782, line: 74, type: !1723)
!12858 = !DILocation(line: 74, column: 20, scope: !12854)
!12859 = !DILocation(line: 74, column: 24, scope: !12854)
!12860 = !DILocation(line: 75, column: 9, scope: !12854)
!12861 = !DILocation(line: 75, column: 12, scope: !12854)
!12862 = !DILocation(line: 75, column: 3, scope: !12854)
!12863 = !DILocation(line: 76, column: 9, scope: !12854)
!12864 = !DILocation(line: 76, column: 3, scope: !12854)
!12865 = !DILocation(line: 77, column: 1, scope: !12854)
!12866 = distinct !DISubprogram(name: "mkancesdirs", scope: !12867, file: !12867, line: 65, type: !1738, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1724, retainedNodes: !206)
!12867 = !DIFile(filename: "lib/mkancesdirs.c", directory: "/home/mohamad/clone/coreutils")
!12868 = !DILocalVariable(name: "file", arg: 1, scope: !12866, file: !12867, line: 65, type: !7)
!12869 = !DILocation(line: 65, column: 20, scope: !12866)
!12870 = !DILocalVariable(name: "wd", arg: 2, scope: !12866, file: !12867, line: 65, type: !1740)
!12871 = !DILocation(line: 65, column: 41, scope: !12866)
!12872 = !DILocalVariable(name: "make_dir", arg: 3, scope: !12866, file: !12867, line: 66, type: !1741)
!12873 = !DILocation(line: 66, column: 20, scope: !12866)
!12874 = !DILocalVariable(name: "make_dir_arg", arg: 4, scope: !12866, file: !12867, line: 67, type: !47)
!12875 = !DILocation(line: 67, column: 20, scope: !12866)
!12876 = !DILocalVariable(name: "sep", scope: !12866, file: !12867, line: 72, type: !7)
!12877 = !DILocation(line: 72, column: 9, scope: !12866)
!12878 = !DILocalVariable(name: "component", scope: !12866, file: !12867, line: 76, type: !7)
!12879 = !DILocation(line: 76, column: 9, scope: !12866)
!12880 = !DILocation(line: 76, column: 21, scope: !12866)
!12881 = !DILocalVariable(name: "p", scope: !12866, file: !12867, line: 78, type: !7)
!12882 = !DILocation(line: 78, column: 9, scope: !12866)
!12883 = !DILocation(line: 78, column: 13, scope: !12866)
!12884 = !DILocation(line: 78, column: 18, scope: !12866)
!12885 = !DILocalVariable(name: "c", scope: !12866, file: !12867, line: 79, type: !8)
!12886 = !DILocation(line: 79, column: 8, scope: !12866)
!12887 = !DILocalVariable(name: "made_dir", scope: !12866, file: !12867, line: 80, type: !139)
!12888 = !DILocation(line: 80, column: 8, scope: !12866)
!12889 = !DILocation(line: 88, column: 3, scope: !12866)
!12890 = !DILocation(line: 88, column: 17, scope: !12866)
!12891 = !DILocation(line: 88, column: 15, scope: !12866)
!12892 = !DILocation(line: 88, column: 13, scope: !12866)
!12893 = !DILocation(line: 89, column: 9, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12866, file: !12867, line: 89, column: 9)
!12895 = !DILocation(line: 89, column: 9, scope: !12866)
!12896 = !DILocation(line: 91, column: 15, scope: !12897)
!12897 = distinct !DILexicalBlock(scope: !12898, file: !12867, line: 91, column: 13)
!12898 = distinct !DILexicalBlock(scope: !12894, file: !12867, line: 90, column: 7)
!12899 = !DILocation(line: 91, column: 13, scope: !12898)
!12900 = !DILocation(line: 92, column: 17, scope: !12897)
!12901 = !DILocation(line: 92, column: 15, scope: !12897)
!12902 = !DILocation(line: 92, column: 11, scope: !12897)
!12903 = !DILocation(line: 93, column: 7, scope: !12898)
!12904 = !DILocation(line: 94, column: 14, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12894, file: !12867, line: 94, column: 14)
!12906 = !DILocation(line: 94, column: 26, scope: !12905)
!12907 = !DILocation(line: 94, column: 30, scope: !12905)
!12908 = !DILocation(line: 94, column: 29, scope: !12905)
!12909 = !DILocation(line: 94, column: 32, scope: !12905)
!12910 = !DILocation(line: 94, column: 35, scope: !12905)
!12911 = !DILocation(line: 94, column: 14, scope: !12894)
!12912 = !DILocation(line: 98, column: 16, scope: !12913)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !12867, line: 98, column: 13)
!12914 = distinct !DILexicalBlock(scope: !12905, file: !12867, line: 95, column: 7)
!12915 = !DILocation(line: 98, column: 22, scope: !12913)
!12916 = !DILocation(line: 98, column: 20, scope: !12913)
!12917 = !DILocation(line: 98, column: 32, scope: !12913)
!12918 = !DILocation(line: 98, column: 37, scope: !12913)
!12919 = !DILocation(line: 98, column: 40, scope: !12913)
!12920 = !DILocation(line: 98, column: 53, scope: !12913)
!12921 = !DILocation(line: 98, column: 13, scope: !12914)
!12922 = !DILocalVariable(name: "make_dir_errno", scope: !12923, file: !12867, line: 100, type: !5)
!12923 = distinct !DILexicalBlock(scope: !12913, file: !12867, line: 99, column: 11)
!12924 = !DILocation(line: 100, column: 17, scope: !12923)
!12925 = !DILocalVariable(name: "savewd_chdir_options", scope: !12923, file: !12867, line: 101, type: !5)
!12926 = !DILocation(line: 101, column: 17, scope: !12923)
!12927 = !DILocalVariable(name: "chdir_result", scope: !12923, file: !12867, line: 102, type: !5)
!12928 = !DILocation(line: 102, column: 17, scope: !12923)
!12929 = !DILocation(line: 106, column: 14, scope: !12923)
!12930 = !DILocation(line: 106, column: 18, scope: !12923)
!12931 = !DILocation(line: 110, column: 17, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12923, file: !12867, line: 110, column: 17)
!12933 = !DILocation(line: 110, column: 23, scope: !12932)
!12934 = !DILocation(line: 110, column: 21, scope: !12932)
!12935 = !DILocation(line: 110, column: 33, scope: !12932)
!12936 = !DILocation(line: 111, column: 17, scope: !12932)
!12937 = !DILocation(line: 111, column: 20, scope: !12932)
!12938 = !DILocation(line: 111, column: 33, scope: !12932)
!12939 = !DILocation(line: 111, column: 40, scope: !12932)
!12940 = !DILocation(line: 111, column: 43, scope: !12932)
!12941 = !DILocation(line: 111, column: 56, scope: !12932)
!12942 = !DILocation(line: 110, column: 17, scope: !12923)
!12943 = !DILocation(line: 112, column: 24, scope: !12932)
!12944 = !DILocation(line: 112, column: 15, scope: !12932)
!12945 = !DILocation(line: 113, column: 22, scope: !12946)
!12946 = distinct !DILexicalBlock(scope: !12932, file: !12867, line: 113, column: 22)
!12947 = !DILocation(line: 113, column: 32, scope: !12946)
!12948 = !DILocation(line: 113, column: 38, scope: !12946)
!12949 = !DILocation(line: 113, column: 49, scope: !12946)
!12950 = !DILocation(line: 113, column: 63, scope: !12946)
!12951 = !DILocation(line: 113, column: 22, scope: !12932)
!12952 = !DILocation(line: 114, column: 32, scope: !12946)
!12953 = !DILocation(line: 114, column: 30, scope: !12946)
!12954 = !DILocation(line: 114, column: 15, scope: !12946)
!12955 = !DILocation(line: 116, column: 24, scope: !12946)
!12956 = !DILocation(line: 118, column: 17, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12923, file: !12867, line: 118, column: 17)
!12958 = !DILocation(line: 118, column: 17, scope: !12923)
!12959 = !DILocation(line: 119, column: 36, scope: !12957)
!12960 = !DILocation(line: 119, column: 15, scope: !12957)
!12961 = !DILocation(line: 122, column: 29, scope: !12923)
!12962 = !DILocation(line: 122, column: 33, scope: !12923)
!12963 = !DILocation(line: 122, column: 44, scope: !12923)
!12964 = !DILocation(line: 122, column: 15, scope: !12923)
!12965 = !DILocation(line: 121, column: 26, scope: !12923)
!12966 = !DILocation(line: 126, column: 17, scope: !12967)
!12967 = distinct !DILexicalBlock(scope: !12923, file: !12867, line: 126, column: 17)
!12968 = !DILocation(line: 126, column: 30, scope: !12967)
!12969 = !DILocation(line: 126, column: 17, scope: !12923)
!12970 = !DILocation(line: 127, column: 16, scope: !12967)
!12971 = !DILocation(line: 127, column: 20, scope: !12967)
!12972 = !DILocation(line: 127, column: 15, scope: !12967)
!12973 = !DILocation(line: 129, column: 17, scope: !12974)
!12974 = distinct !DILexicalBlock(scope: !12923, file: !12867, line: 129, column: 17)
!12975 = !DILocation(line: 129, column: 30, scope: !12974)
!12976 = !DILocation(line: 129, column: 17, scope: !12923)
!12977 = !DILocation(line: 131, column: 21, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12979, file: !12867, line: 131, column: 21)
!12979 = distinct !DILexicalBlock(scope: !12974, file: !12867, line: 130, column: 15)
!12980 = !DILocation(line: 131, column: 36, scope: !12978)
!12981 = !DILocation(line: 131, column: 41, scope: !12978)
!12982 = !DILocation(line: 131, column: 44, scope: !12978)
!12983 = !DILocation(line: 131, column: 50, scope: !12978)
!12984 = !DILocation(line: 131, column: 21, scope: !12979)
!12985 = !DILocation(line: 132, column: 27, scope: !12978)
!12986 = !DILocation(line: 132, column: 19, scope: !12978)
!12987 = !DILocation(line: 132, column: 25, scope: !12978)
!12988 = !DILocation(line: 133, column: 24, scope: !12979)
!12989 = !DILocation(line: 133, column: 17, scope: !12979)
!12990 = !DILocation(line: 135, column: 11, scope: !12923)
!12991 = !DILocation(line: 137, column: 21, scope: !12914)
!12992 = !DILocation(line: 137, column: 19, scope: !12914)
!12993 = !DILocation(line: 138, column: 7, scope: !12914)
!12994 = distinct !{!12994, !12889, !12995}
!12995 = !DILocation(line: 138, column: 7, scope: !12866)
!12996 = !DILocation(line: 140, column: 10, scope: !12866)
!12997 = !DILocation(line: 140, column: 22, scope: !12866)
!12998 = !DILocation(line: 140, column: 20, scope: !12866)
!12999 = !DILocation(line: 140, column: 3, scope: !12866)
!13000 = !DILocation(line: 141, column: 1, scope: !12866)
!13001 = distinct !DISubprogram(name: "make_dir_parents", scope: !13002, file: !13002, line: 85, type: !1756, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1742, retainedNodes: !206)
!13002 = !DIFile(filename: "lib/mkdir-p.c", directory: "/home/mohamad/clone/coreutils")
!13003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !13004)
!13004 = !{!13005, !13006, !13007, !13008, !13009, !13010, !13011, !13012, !13013, !13014, !13015, !13016, !13021, !13022, !13023}
!13005 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13003, file: !277, line: 48, baseType: !280, size: 64)
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13003, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13003, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13003, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13003, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13003, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!13011 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13003, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!13012 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13003, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!13013 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13003, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!13014 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13003, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13003, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13003, file: !277, line: 91, baseType: !13017, size: 128, offset: 576)
!13017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !13018)
!13018 = !{!13019, !13020}
!13019 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13017, file: !297, line: 122, baseType: !300, size: 64)
!13020 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13017, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!13021 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13003, file: !277, line: 92, baseType: !13017, size: 128, offset: 704)
!13022 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13003, file: !277, line: 93, baseType: !13017, size: 128, offset: 832)
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13003, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!13024 = !DILocalVariable(name: "dir", arg: 1, scope: !13001, file: !13002, line: 85, type: !7)
!13025 = !DILocation(line: 85, column: 25, scope: !13001)
!13026 = !DILocalVariable(name: "wd", arg: 2, scope: !13001, file: !13002, line: 86, type: !1758)
!13027 = !DILocation(line: 86, column: 34, scope: !13001)
!13028 = !DILocalVariable(name: "make_ancestor", arg: 3, scope: !13001, file: !13002, line: 87, type: !1741)
!13029 = !DILocation(line: 87, column: 25, scope: !13001)
!13030 = !DILocalVariable(name: "options", arg: 4, scope: !13001, file: !13002, line: 88, type: !47)
!13031 = !DILocation(line: 88, column: 25, scope: !13001)
!13032 = !DILocalVariable(name: "mode", arg: 5, scope: !13001, file: !13002, line: 89, type: !136)
!13033 = !DILocation(line: 89, column: 26, scope: !13001)
!13034 = !DILocalVariable(name: "announce", arg: 6, scope: !13001, file: !13002, line: 90, type: !1759)
!13035 = !DILocation(line: 90, column: 26, scope: !13001)
!13036 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !13001, file: !13002, line: 91, type: !136)
!13037 = !DILocation(line: 91, column: 26, scope: !13001)
!13038 = !DILocalVariable(name: "owner", arg: 8, scope: !13001, file: !13002, line: 92, type: !124)
!13039 = !DILocation(line: 92, column: 25, scope: !13001)
!13040 = !DILocalVariable(name: "group", arg: 9, scope: !13001, file: !13002, line: 93, type: !126)
!13041 = !DILocation(line: 93, column: 25, scope: !13001)
!13042 = !DILocalVariable(name: "preserve_existing", arg: 10, scope: !13001, file: !13002, line: 94, type: !139)
!13043 = !DILocation(line: 94, column: 24, scope: !13001)
!13044 = !DILocalVariable(name: "mkdir_errno", scope: !13001, file: !13002, line: 96, type: !5)
!13045 = !DILocation(line: 96, column: 7, scope: !13001)
!13046 = !DILocation(line: 96, column: 22, scope: !13001)
!13047 = !DILocation(line: 96, column: 70, scope: !13001)
!13048 = !DILocation(line: 96, column: 56, scope: !13001)
!13049 = !DILocation(line: 98, column: 7, scope: !13050)
!13050 = distinct !DILexicalBlock(scope: !13001, file: !13002, line: 98, column: 7)
!13051 = !DILocation(line: 98, column: 19, scope: !13050)
!13052 = !DILocation(line: 98, column: 7, scope: !13001)
!13053 = !DILocalVariable(name: "prefix_len", scope: !13054, file: !13002, line: 100, type: !634)
!13054 = distinct !DILexicalBlock(scope: !13050, file: !13002, line: 99, column: 5)
!13055 = !DILocation(line: 100, column: 17, scope: !13054)
!13056 = !DILocalVariable(name: "savewd_chdir_options", scope: !13054, file: !13002, line: 101, type: !5)
!13057 = !DILocation(line: 101, column: 11, scope: !13054)
!13058 = !DILocation(line: 103, column: 11, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13054, file: !13002, line: 103, column: 11)
!13060 = !DILocation(line: 103, column: 11, scope: !13054)
!13061 = !DILocation(line: 105, column: 37, scope: !13062)
!13062 = distinct !DILexicalBlock(scope: !13059, file: !13002, line: 104, column: 9)
!13063 = !DILocation(line: 105, column: 42, scope: !13062)
!13064 = !DILocation(line: 105, column: 46, scope: !13062)
!13065 = !DILocation(line: 105, column: 61, scope: !13062)
!13066 = !DILocation(line: 105, column: 24, scope: !13062)
!13067 = !DILocation(line: 105, column: 22, scope: !13062)
!13068 = !DILocation(line: 106, column: 15, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13062, file: !13002, line: 106, column: 15)
!13070 = !DILocation(line: 106, column: 26, scope: !13069)
!13071 = !DILocation(line: 106, column: 15, scope: !13062)
!13072 = !DILocation(line: 108, column: 19, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13074, file: !13002, line: 108, column: 19)
!13074 = distinct !DILexicalBlock(scope: !13069, file: !13002, line: 107, column: 13)
!13075 = !DILocation(line: 108, column: 30, scope: !13073)
!13076 = !DILocation(line: 108, column: 19, scope: !13074)
!13077 = !DILocation(line: 109, column: 17, scope: !13073)
!13078 = !DILocation(line: 110, column: 29, scope: !13074)
!13079 = !DILocation(line: 110, column: 27, scope: !13074)
!13080 = !DILocation(line: 111, column: 13, scope: !13074)
!13081 = !DILocation(line: 112, column: 9, scope: !13062)
!13082 = !DILocation(line: 114, column: 16, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13054, file: !13002, line: 114, column: 11)
!13084 = !DILocation(line: 114, column: 13, scope: !13083)
!13085 = !DILocation(line: 114, column: 11, scope: !13054)
!13086 = !DILocalVariable(name: "keep_owner", scope: !13087, file: !13002, line: 121, type: !139)
!13087 = distinct !DILexicalBlock(scope: !13083, file: !13002, line: 115, column: 9)
!13088 = !DILocation(line: 121, column: 16, scope: !13087)
!13089 = !DILocation(line: 121, column: 29, scope: !13087)
!13090 = !DILocation(line: 121, column: 35, scope: !13087)
!13091 = !DILocation(line: 121, column: 49, scope: !13087)
!13092 = !DILocation(line: 121, column: 52, scope: !13087)
!13093 = !DILocation(line: 121, column: 58, scope: !13087)
!13094 = !DILocation(line: 0, scope: !13087)
!13095 = !DILocalVariable(name: "keep_special_mode_bits", scope: !13087, file: !13002, line: 122, type: !139)
!13096 = !DILocation(line: 122, column: 16, scope: !13087)
!13097 = !DILocation(line: 123, column: 15, scope: !13087)
!13098 = !DILocation(line: 123, column: 25, scope: !13087)
!13099 = !DILocation(line: 123, column: 51, scope: !13087)
!13100 = !DILocation(line: 123, column: 56, scope: !13087)
!13101 = !DILocation(line: 123, column: 48, scope: !13087)
!13102 = !DILocation(line: 123, column: 68, scope: !13087)
!13103 = !DILocalVariable(name: "mkdir_mode", scope: !13087, file: !13002, line: 124, type: !136)
!13104 = !DILocation(line: 124, column: 18, scope: !13087)
!13105 = !DILocation(line: 124, column: 31, scope: !13087)
!13106 = !DILocation(line: 125, column: 17, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13087, file: !13002, line: 125, column: 15)
!13108 = !DILocation(line: 125, column: 15, scope: !13087)
!13109 = !DILocation(line: 126, column: 24, scope: !13107)
!13110 = !DILocation(line: 126, column: 13, scope: !13107)
!13111 = !DILocation(line: 127, column: 22, scope: !13112)
!13112 = distinct !DILexicalBlock(scope: !13107, file: !13002, line: 127, column: 20)
!13113 = !DILocation(line: 127, column: 20, scope: !13107)
!13114 = !DILocation(line: 128, column: 24, scope: !13112)
!13115 = !DILocation(line: 128, column: 13, scope: !13112)
!13116 = !DILocation(line: 130, column: 22, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13087, file: !13002, line: 130, column: 15)
!13118 = !DILocation(line: 130, column: 28, scope: !13117)
!13119 = !DILocation(line: 130, column: 26, scope: !13117)
!13120 = !DILocation(line: 130, column: 40, scope: !13117)
!13121 = !DILocation(line: 130, column: 15, scope: !13117)
!13122 = !DILocation(line: 130, column: 52, scope: !13117)
!13123 = !DILocation(line: 130, column: 15, scope: !13087)
!13124 = !DILocalVariable(name: "umask_must_be_ok", scope: !13125, file: !13002, line: 134, type: !139)
!13125 = distinct !DILexicalBlock(scope: !13117, file: !13002, line: 131, column: 13)
!13126 = !DILocation(line: 134, column: 20, scope: !13125)
!13127 = !DILocation(line: 134, column: 40, scope: !13125)
!13128 = !DILocation(line: 134, column: 47, scope: !13125)
!13129 = !DILocation(line: 134, column: 45, scope: !13125)
!13130 = !DILocation(line: 134, column: 57, scope: !13125)
!13131 = !DILocation(line: 134, column: 70, scope: !13125)
!13132 = !DILocation(line: 136, column: 15, scope: !13125)
!13133 = !DILocation(line: 136, column: 25, scope: !13125)
!13134 = !DILocation(line: 136, column: 30, scope: !13125)
!13135 = !DILocation(line: 137, column: 36, scope: !13125)
!13136 = !DILocation(line: 137, column: 49, scope: !13125)
!13137 = !DILocation(line: 137, column: 47, scope: !13125)
!13138 = !DILocation(line: 138, column: 38, scope: !13125)
!13139 = !DILocation(line: 138, column: 36, scope: !13125)
!13140 = !DILocation(line: 137, column: 35, scope: !13125)
!13141 = !DILocation(line: 137, column: 33, scope: !13125)
!13142 = !DILocation(line: 139, column: 36, scope: !13125)
!13143 = !DILocation(line: 140, column: 13, scope: !13125)
!13144 = !DILocation(line: 143, column: 29, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13117, file: !13002, line: 142, column: 13)
!13146 = !DILocation(line: 143, column: 27, scope: !13145)
!13147 = !DILocation(line: 144, column: 26, scope: !13145)
!13148 = !DILocation(line: 147, column: 15, scope: !13149)
!13149 = distinct !DILexicalBlock(scope: !13087, file: !13002, line: 147, column: 15)
!13150 = !DILocation(line: 147, column: 15, scope: !13087)
!13151 = !DILocation(line: 149, column: 19, scope: !13152)
!13152 = distinct !DILexicalBlock(scope: !13153, file: !13002, line: 149, column: 19)
!13153 = distinct !DILexicalBlock(scope: !13149, file: !13002, line: 148, column: 13)
!13154 = !DILocation(line: 149, column: 31, scope: !13152)
!13155 = !DILocation(line: 149, column: 19, scope: !13153)
!13156 = !DILocation(line: 150, column: 17, scope: !13152)
!13157 = !DILocation(line: 151, column: 19, scope: !13158)
!13158 = distinct !DILexicalBlock(scope: !13153, file: !13002, line: 151, column: 19)
!13159 = !DILocation(line: 151, column: 31, scope: !13158)
!13160 = !DILocation(line: 151, column: 41, scope: !13158)
!13161 = !DILocation(line: 151, column: 44, scope: !13158)
!13162 = !DILocation(line: 151, column: 19, scope: !13153)
!13163 = !DILocalVariable(name: "st", scope: !13164, file: !13002, line: 153, type: !13003)
!13164 = distinct !DILexicalBlock(scope: !13158, file: !13002, line: 152, column: 17)
!13165 = !DILocation(line: 153, column: 31, scope: !13164)
!13166 = !DILocation(line: 154, column: 29, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13164, file: !13002, line: 154, column: 23)
!13168 = !DILocation(line: 154, column: 35, scope: !13167)
!13169 = !DILocation(line: 154, column: 33, scope: !13167)
!13170 = !DILocation(line: 154, column: 23, scope: !13167)
!13171 = !DILocation(line: 154, column: 52, scope: !13167)
!13172 = !DILocation(line: 154, column: 23, scope: !13164)
!13173 = !DILocation(line: 156, column: 27, scope: !13174)
!13174 = distinct !DILexicalBlock(scope: !13175, file: !13002, line: 156, column: 27)
!13175 = distinct !DILexicalBlock(scope: !13167, file: !13002, line: 155, column: 21)
!13176 = !DILocation(line: 156, column: 27, scope: !13175)
!13177 = !DILocation(line: 157, column: 25, scope: !13174)
!13178 = !DILocation(line: 158, column: 21, scope: !13175)
!13179 = !DILocation(line: 159, column: 28, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13167, file: !13002, line: 159, column: 28)
!13181 = !DILocation(line: 159, column: 40, scope: !13180)
!13182 = !DILocation(line: 160, column: 28, scope: !13180)
!13183 = !DILocation(line: 160, column: 31, scope: !13180)
!13184 = !DILocation(line: 160, column: 37, scope: !13180)
!13185 = !DILocation(line: 160, column: 47, scope: !13180)
!13186 = !DILocation(line: 160, column: 50, scope: !13180)
!13187 = !DILocation(line: 160, column: 56, scope: !13180)
!13188 = !DILocation(line: 159, column: 28, scope: !13167)
!13189 = !DILocation(line: 162, column: 33, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13180, file: !13002, line: 161, column: 21)
!13191 = !DILocation(line: 162, column: 40, scope: !13190)
!13192 = !DILocation(line: 162, column: 68, scope: !13190)
!13193 = !DILocation(line: 162, column: 61, scope: !13190)
!13194 = !DILocation(line: 162, column: 23, scope: !13190)
!13195 = !DILocation(line: 163, column: 23, scope: !13190)
!13196 = !DILocation(line: 165, column: 17, scope: !13164)
!13197 = !DILocation(line: 166, column: 13, scope: !13153)
!13198 = !DILocalVariable(name: "open_result", scope: !13199, file: !13002, line: 169, type: !1760)
!13199 = distinct !DILexicalBlock(scope: !13149, file: !13002, line: 168, column: 13)
!13200 = !DILocation(line: 169, column: 19, scope: !13199)
!13201 = !DILocalVariable(name: "chdir_result", scope: !13199, file: !13002, line: 170, type: !5)
!13202 = !DILocation(line: 170, column: 19, scope: !13199)
!13203 = !DILocation(line: 171, column: 31, scope: !13199)
!13204 = !DILocation(line: 171, column: 35, scope: !13199)
!13205 = !DILocation(line: 171, column: 41, scope: !13199)
!13206 = !DILocation(line: 171, column: 39, scope: !13199)
!13207 = !DILocation(line: 172, column: 31, scope: !13199)
!13208 = !DILocation(line: 172, column: 53, scope: !13199)
!13209 = !DILocation(line: 171, column: 17, scope: !13199)
!13210 = !DILocation(line: 173, column: 19, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13199, file: !13002, line: 173, column: 19)
!13212 = !DILocation(line: 173, column: 32, scope: !13211)
!13213 = !DILocation(line: 173, column: 19, scope: !13199)
!13214 = !DILocation(line: 174, column: 17, scope: !13211)
!13215 = !DILocalVariable(name: "chdir_ok", scope: !13216, file: !13002, line: 177, type: !139)
!13216 = distinct !DILexicalBlock(scope: !13211, file: !13002, line: 176, column: 17)
!13217 = !DILocation(line: 177, column: 24, scope: !13216)
!13218 = !DILocation(line: 177, column: 36, scope: !13216)
!13219 = !DILocation(line: 177, column: 49, scope: !13216)
!13220 = !DILocalVariable(name: "subdir", scope: !13216, file: !13002, line: 178, type: !177)
!13221 = !DILocation(line: 178, column: 31, scope: !13216)
!13222 = !DILocation(line: 178, column: 41, scope: !13216)
!13223 = !DILocation(line: 178, column: 58, scope: !13216)
!13224 = !DILocation(line: 178, column: 64, scope: !13216)
!13225 = !DILocation(line: 178, column: 62, scope: !13216)
!13226 = !DILocation(line: 179, column: 36, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13216, file: !13002, line: 179, column: 23)
!13228 = !DILocation(line: 179, column: 52, scope: !13227)
!13229 = !DILocation(line: 179, column: 60, scope: !13227)
!13230 = !DILocation(line: 180, column: 36, scope: !13227)
!13231 = !DILocation(line: 180, column: 43, scope: !13227)
!13232 = !DILocation(line: 180, column: 50, scope: !13227)
!13233 = !DILocation(line: 180, column: 56, scope: !13227)
!13234 = !DILocation(line: 179, column: 23, scope: !13227)
!13235 = !DILocation(line: 181, column: 23, scope: !13227)
!13236 = !DILocation(line: 179, column: 23, scope: !13216)
!13237 = !DILocation(line: 182, column: 21, scope: !13227)
!13238 = !DILocation(line: 184, column: 23, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13216, file: !13002, line: 184, column: 23)
!13240 = !DILocation(line: 184, column: 35, scope: !13239)
!13241 = !DILocation(line: 185, column: 23, scope: !13239)
!13242 = !DILocation(line: 185, column: 27, scope: !13239)
!13243 = !DILocation(line: 185, column: 39, scope: !13239)
!13244 = !DILocation(line: 185, column: 49, scope: !13239)
!13245 = !DILocation(line: 185, column: 52, scope: !13239)
!13246 = !DILocation(line: 186, column: 27, scope: !13239)
!13247 = !DILocation(line: 186, column: 30, scope: !13239)
!13248 = !DILocation(line: 186, column: 36, scope: !13239)
!13249 = !DILocation(line: 184, column: 23, scope: !13216)
!13250 = !DILocation(line: 188, column: 33, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !13239, file: !13002, line: 187, column: 21)
!13252 = !DILocation(line: 189, column: 30, scope: !13251)
!13253 = !DILocation(line: 192, column: 37, scope: !13251)
!13254 = !DILocation(line: 192, column: 30, scope: !13251)
!13255 = !DILocation(line: 188, column: 23, scope: !13251)
!13256 = !DILocation(line: 193, column: 23, scope: !13251)
!13257 = !DILocation(line: 197, column: 9, scope: !13087)
!13258 = !DILocation(line: 198, column: 5, scope: !13054)
!13259 = !DILocation(line: 200, column: 13, scope: !13001)
!13260 = !DILocation(line: 200, column: 26, scope: !13001)
!13261 = !DILocation(line: 200, column: 66, scope: !13001)
!13262 = !DILocation(line: 200, column: 59, scope: !13001)
!13263 = !DILocation(line: 200, column: 3, scope: !13001)
!13264 = !DILocation(line: 201, column: 3, scope: !13001)
!13265 = !DILocation(line: 202, column: 1, scope: !13001)
!13266 = distinct !DISubprogram(name: "mode_compile", scope: !1768, file: !1768, line: 134, type: !1764, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1761, retainedNodes: !206)
!13267 = !DILocalVariable(name: "mode_string", arg: 1, scope: !13266, file: !1768, line: 134, type: !177)
!13268 = !DILocation(line: 134, column: 27, scope: !13266)
!13269 = !DILocalVariable(name: "mc", scope: !13266, file: !1768, line: 137, type: !1766)
!13270 = !DILocation(line: 137, column: 23, scope: !13266)
!13271 = !DILocalVariable(name: "used", scope: !13266, file: !1768, line: 138, type: !52)
!13272 = !DILocation(line: 138, column: 10, scope: !13266)
!13273 = !DILocalVariable(name: "p", scope: !13266, file: !1768, line: 139, type: !177)
!13274 = !DILocation(line: 139, column: 15, scope: !13266)
!13275 = !DILocation(line: 141, column: 15, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13266, file: !1768, line: 141, column: 7)
!13277 = !DILocation(line: 141, column: 14, scope: !13276)
!13278 = !DILocation(line: 141, column: 11, scope: !13276)
!13279 = !DILocation(line: 141, column: 27, scope: !13276)
!13280 = !DILocation(line: 141, column: 31, scope: !13276)
!13281 = !DILocation(line: 141, column: 30, scope: !13276)
!13282 = !DILocation(line: 141, column: 43, scope: !13276)
!13283 = !DILocation(line: 141, column: 7, scope: !13266)
!13284 = !DILocalVariable(name: "octal_mode", scope: !13285, file: !1768, line: 143, type: !67)
!13285 = distinct !DILexicalBlock(scope: !13276, file: !1768, line: 142, column: 5)
!13286 = !DILocation(line: 143, column: 20, scope: !13285)
!13287 = !DILocalVariable(name: "mode", scope: !13285, file: !1768, line: 144, type: !136)
!13288 = !DILocation(line: 144, column: 14, scope: !13285)
!13289 = !DILocalVariable(name: "mentioned", scope: !13285, file: !1768, line: 145, type: !136)
!13290 = !DILocation(line: 145, column: 14, scope: !13285)
!13291 = !DILocation(line: 147, column: 11, scope: !13285)
!13292 = !DILocation(line: 147, column: 9, scope: !13285)
!13293 = !DILocation(line: 148, column: 7, scope: !13285)
!13294 = !DILocation(line: 150, column: 28, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13285, file: !1768, line: 149, column: 9)
!13296 = !DILocation(line: 150, column: 26, scope: !13295)
!13297 = !DILocation(line: 150, column: 43, scope: !13295)
!13298 = !DILocation(line: 150, column: 41, scope: !13295)
!13299 = !DILocation(line: 150, column: 39, scope: !13295)
!13300 = !DILocation(line: 150, column: 46, scope: !13295)
!13301 = !DILocation(line: 150, column: 22, scope: !13295)
!13302 = !DILocation(line: 151, column: 22, scope: !13303)
!13303 = distinct !DILexicalBlock(scope: !13295, file: !1768, line: 151, column: 15)
!13304 = !DILocation(line: 151, column: 20, scope: !13303)
!13305 = !DILocation(line: 151, column: 15, scope: !13295)
!13306 = !DILocation(line: 152, column: 13, scope: !13303)
!13307 = !DILocation(line: 153, column: 9, scope: !13295)
!13308 = !DILocation(line: 154, column: 22, scope: !13285)
!13309 = !DILocation(line: 154, column: 21, scope: !13285)
!13310 = !DILocation(line: 154, column: 18, scope: !13285)
!13311 = !DILocation(line: 154, column: 24, scope: !13285)
!13312 = !DILocation(line: 154, column: 28, scope: !13285)
!13313 = !DILocation(line: 154, column: 27, scope: !13285)
!13314 = !DILocation(line: 154, column: 30, scope: !13285)
!13315 = !DILocation(line: 0, scope: !13285)
!13316 = distinct !{!13316, !13293, !13317}
!13317 = !DILocation(line: 154, column: 35, scope: !13285)
!13318 = !DILocation(line: 156, column: 12, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13285, file: !1768, line: 156, column: 11)
!13320 = !DILocation(line: 156, column: 11, scope: !13319)
!13321 = !DILocation(line: 156, column: 11, scope: !13285)
!13322 = !DILocation(line: 157, column: 9, scope: !13319)
!13323 = !DILocation(line: 159, column: 29, scope: !13285)
!13324 = !DILocation(line: 159, column: 14, scope: !13285)
!13325 = !DILocation(line: 159, column: 12, scope: !13285)
!13326 = !DILocation(line: 160, column: 20, scope: !13285)
!13327 = !DILocation(line: 160, column: 24, scope: !13285)
!13328 = !DILocation(line: 160, column: 22, scope: !13285)
!13329 = !DILocation(line: 160, column: 36, scope: !13285)
!13330 = !DILocation(line: 161, column: 23, scope: !13285)
!13331 = !DILocation(line: 161, column: 28, scope: !13285)
!13332 = !DILocation(line: 161, column: 51, scope: !13285)
!13333 = !DILocation(line: 161, column: 61, scope: !13285)
!13334 = !DILocation(line: 160, column: 17, scope: !13285)
!13335 = !DILocation(line: 163, column: 35, scope: !13285)
!13336 = !DILocation(line: 163, column: 41, scope: !13285)
!13337 = !DILocation(line: 163, column: 14, scope: !13285)
!13338 = !DILocation(line: 163, column: 7, scope: !13285)
!13339 = !DILocalVariable(name: "needed", scope: !13340, file: !1768, line: 168, type: !52)
!13340 = distinct !DILexicalBlock(scope: !13266, file: !1768, line: 167, column: 3)
!13341 = !DILocation(line: 168, column: 12, scope: !13340)
!13342 = !DILocation(line: 169, column: 14, scope: !13343)
!13343 = distinct !DILexicalBlock(scope: !13340, file: !1768, line: 169, column: 5)
!13344 = !DILocation(line: 169, column: 12, scope: !13343)
!13345 = !DILocation(line: 169, column: 10, scope: !13343)
!13346 = !DILocation(line: 169, column: 28, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13343, file: !1768, line: 169, column: 5)
!13348 = !DILocation(line: 169, column: 27, scope: !13347)
!13349 = !DILocation(line: 169, column: 5, scope: !13343)
!13350 = !DILocation(line: 170, column: 19, scope: !13347)
!13351 = !DILocation(line: 170, column: 18, scope: !13347)
!13352 = !DILocation(line: 170, column: 21, scope: !13347)
!13353 = !DILocation(line: 170, column: 28, scope: !13347)
!13354 = !DILocation(line: 170, column: 32, scope: !13347)
!13355 = !DILocation(line: 170, column: 31, scope: !13347)
!13356 = !DILocation(line: 170, column: 34, scope: !13347)
!13357 = !DILocation(line: 170, column: 41, scope: !13347)
!13358 = !DILocation(line: 170, column: 45, scope: !13347)
!13359 = !DILocation(line: 170, column: 44, scope: !13347)
!13360 = !DILocation(line: 170, column: 47, scope: !13347)
!13361 = !DILocation(line: 170, column: 17, scope: !13347)
!13362 = !DILocation(line: 170, column: 14, scope: !13347)
!13363 = !DILocation(line: 170, column: 7, scope: !13347)
!13364 = !DILocation(line: 169, column: 32, scope: !13347)
!13365 = !DILocation(line: 169, column: 5, scope: !13347)
!13366 = distinct !{!13366, !13349, !13367}
!13367 = !DILocation(line: 170, column: 53, scope: !13343)
!13368 = !DILocation(line: 171, column: 20, scope: !13340)
!13369 = !DILocation(line: 171, column: 10, scope: !13340)
!13370 = !DILocation(line: 171, column: 8, scope: !13340)
!13371 = !DILocation(line: 176, column: 12, scope: !13372)
!13372 = distinct !DILexicalBlock(scope: !13266, file: !1768, line: 176, column: 3)
!13373 = !DILocation(line: 176, column: 10, scope: !13372)
!13374 = !DILocation(line: 176, column: 8, scope: !13372)
!13375 = !DILocalVariable(name: "affected", scope: !13376, file: !1768, line: 179, type: !136)
!13376 = distinct !DILexicalBlock(scope: !13377, file: !1768, line: 177, column: 5)
!13377 = distinct !DILexicalBlock(scope: !13372, file: !1768, line: 176, column: 3)
!13378 = !DILocation(line: 179, column: 14, scope: !13376)
!13379 = !DILocation(line: 182, column: 7, scope: !13376)
!13380 = !DILocation(line: 183, column: 18, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13382, file: !1768, line: 182, column: 7)
!13382 = distinct !DILexicalBlock(scope: !13376, file: !1768, line: 182, column: 7)
!13383 = !DILocation(line: 183, column: 17, scope: !13381)
!13384 = !DILocation(line: 183, column: 9, scope: !13381)
!13385 = !DILocation(line: 186, column: 13, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13381, file: !1768, line: 184, column: 11)
!13387 = !DILocation(line: 188, column: 22, scope: !13386)
!13388 = !DILocation(line: 189, column: 13, scope: !13386)
!13389 = !DILocation(line: 191, column: 22, scope: !13386)
!13390 = !DILocation(line: 192, column: 13, scope: !13386)
!13391 = !DILocation(line: 194, column: 22, scope: !13386)
!13392 = !DILocation(line: 195, column: 13, scope: !13386)
!13393 = !DILocation(line: 197, column: 22, scope: !13386)
!13394 = !DILocation(line: 198, column: 13, scope: !13386)
!13395 = !DILocation(line: 200, column: 13, scope: !13386)
!13396 = !DILocation(line: 201, column: 11, scope: !13386)
!13397 = !DILocation(line: 182, column: 16, scope: !13381)
!13398 = !DILocation(line: 182, column: 7, scope: !13381)
!13399 = distinct !{!13399, !13400, !13401}
!13400 = !DILocation(line: 182, column: 7, scope: !13382)
!13401 = !DILocation(line: 201, column: 11, scope: !13382)
!13402 = !DILabel(scope: !13376, name: "no_more_affected", file: !1768, line: 202)
!13403 = !DILocation(line: 202, column: 5, scope: !13376)
!13404 = !DILocation(line: 204, column: 7, scope: !13376)
!13405 = !DILocalVariable(name: "op", scope: !13406, file: !1768, line: 206, type: !8)
!13406 = distinct !DILexicalBlock(scope: !13376, file: !1768, line: 205, column: 9)
!13407 = !DILocation(line: 206, column: 16, scope: !13406)
!13408 = !DILocation(line: 206, column: 23, scope: !13406)
!13409 = !DILocation(line: 206, column: 21, scope: !13406)
!13410 = !DILocalVariable(name: "value", scope: !13406, file: !1768, line: 207, type: !136)
!13411 = !DILocation(line: 207, column: 18, scope: !13406)
!13412 = !DILocalVariable(name: "mentioned", scope: !13406, file: !1768, line: 208, type: !136)
!13413 = !DILocation(line: 208, column: 18, scope: !13406)
!13414 = !DILocalVariable(name: "flag", scope: !13406, file: !1768, line: 209, type: !8)
!13415 = !DILocation(line: 209, column: 16, scope: !13406)
!13416 = !DILocalVariable(name: "change", scope: !13406, file: !1768, line: 210, type: !1766)
!13417 = !DILocation(line: 210, column: 31, scope: !13406)
!13418 = !DILocation(line: 212, column: 20, scope: !13406)
!13419 = !DILocation(line: 212, column: 19, scope: !13406)
!13420 = !DILocation(line: 212, column: 11, scope: !13406)
!13421 = !DILocalVariable(name: "octal_mode", scope: !13422, file: !1768, line: 217, type: !67)
!13422 = distinct !DILexicalBlock(scope: !13423, file: !1768, line: 216, column: 15)
!13423 = distinct !DILexicalBlock(scope: !13406, file: !1768, line: 213, column: 13)
!13424 = !DILocation(line: 217, column: 30, scope: !13422)
!13425 = !DILocation(line: 219, column: 17, scope: !13422)
!13426 = !DILocation(line: 221, column: 38, scope: !13427)
!13427 = distinct !DILexicalBlock(scope: !13422, file: !1768, line: 220, column: 19)
!13428 = !DILocation(line: 221, column: 36, scope: !13427)
!13429 = !DILocation(line: 221, column: 53, scope: !13427)
!13430 = !DILocation(line: 221, column: 51, scope: !13427)
!13431 = !DILocation(line: 221, column: 49, scope: !13427)
!13432 = !DILocation(line: 221, column: 56, scope: !13427)
!13433 = !DILocation(line: 221, column: 32, scope: !13427)
!13434 = !DILocation(line: 222, column: 32, scope: !13435)
!13435 = distinct !DILexicalBlock(scope: !13427, file: !1768, line: 222, column: 25)
!13436 = !DILocation(line: 222, column: 30, scope: !13435)
!13437 = !DILocation(line: 222, column: 25, scope: !13427)
!13438 = !DILocation(line: 223, column: 23, scope: !13435)
!13439 = !DILocation(line: 224, column: 19, scope: !13427)
!13440 = !DILocation(line: 225, column: 32, scope: !13422)
!13441 = !DILocation(line: 225, column: 31, scope: !13422)
!13442 = !DILocation(line: 225, column: 28, scope: !13422)
!13443 = !DILocation(line: 225, column: 34, scope: !13422)
!13444 = !DILocation(line: 225, column: 38, scope: !13422)
!13445 = !DILocation(line: 225, column: 37, scope: !13422)
!13446 = !DILocation(line: 225, column: 40, scope: !13422)
!13447 = !DILocation(line: 0, scope: !13422)
!13448 = distinct !{!13448, !13425, !13449}
!13449 = !DILocation(line: 225, column: 45, scope: !13422)
!13450 = !DILocation(line: 227, column: 21, scope: !13451)
!13451 = distinct !DILexicalBlock(scope: !13422, file: !1768, line: 227, column: 21)
!13452 = !DILocation(line: 227, column: 30, scope: !13451)
!13453 = !DILocation(line: 227, column: 35, scope: !13451)
!13454 = !DILocation(line: 227, column: 34, scope: !13451)
!13455 = !DILocation(line: 227, column: 37, scope: !13451)
!13456 = !DILocation(line: 227, column: 41, scope: !13451)
!13457 = !DILocation(line: 227, column: 40, scope: !13451)
!13458 = !DILocation(line: 227, column: 43, scope: !13451)
!13459 = !DILocation(line: 227, column: 21, scope: !13422)
!13460 = !DILocation(line: 228, column: 19, scope: !13451)
!13461 = !DILocation(line: 229, column: 38, scope: !13422)
!13462 = !DILocation(line: 229, column: 26, scope: !13422)
!13463 = !DILocation(line: 230, column: 40, scope: !13422)
!13464 = !DILocation(line: 230, column: 25, scope: !13422)
!13465 = !DILocation(line: 230, column: 23, scope: !13422)
!13466 = !DILocation(line: 231, column: 22, scope: !13422)
!13467 = !DILocation(line: 232, column: 17, scope: !13422)
!13468 = !DILocation(line: 238, column: 21, scope: !13423)
!13469 = !DILocation(line: 239, column: 16, scope: !13423)
!13470 = !DILocation(line: 240, column: 15, scope: !13423)
!13471 = !DILocation(line: 244, column: 21, scope: !13423)
!13472 = !DILocation(line: 245, column: 16, scope: !13423)
!13473 = !DILocation(line: 246, column: 15, scope: !13423)
!13474 = !DILocation(line: 250, column: 21, scope: !13423)
!13475 = !DILocation(line: 251, column: 16, scope: !13423)
!13476 = !DILocation(line: 252, column: 15, scope: !13423)
!13477 = !DILocation(line: 255, column: 21, scope: !13423)
!13478 = !DILocation(line: 256, column: 20, scope: !13423)
!13479 = !DILocation(line: 258, column: 15, scope: !13423)
!13480 = !DILocation(line: 259, column: 26, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13482, file: !1768, line: 258, column: 15)
!13482 = distinct !DILexicalBlock(scope: !13423, file: !1768, line: 258, column: 15)
!13483 = !DILocation(line: 259, column: 25, scope: !13481)
!13484 = !DILocation(line: 259, column: 17, scope: !13481)
!13485 = !DILocation(line: 262, column: 27, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13481, file: !1768, line: 260, column: 19)
!13487 = !DILocation(line: 263, column: 21, scope: !13486)
!13488 = !DILocation(line: 265, column: 27, scope: !13486)
!13489 = !DILocation(line: 266, column: 21, scope: !13486)
!13490 = !DILocation(line: 268, column: 27, scope: !13486)
!13491 = !DILocation(line: 269, column: 21, scope: !13486)
!13492 = !DILocation(line: 271, column: 26, scope: !13486)
!13493 = !DILocation(line: 272, column: 21, scope: !13486)
!13494 = !DILocation(line: 275, column: 27, scope: !13486)
!13495 = !DILocation(line: 276, column: 21, scope: !13486)
!13496 = !DILocation(line: 279, column: 27, scope: !13486)
!13497 = !DILocation(line: 280, column: 21, scope: !13486)
!13498 = !DILocation(line: 282, column: 21, scope: !13486)
!13499 = !DILocation(line: 283, column: 19, scope: !13486)
!13500 = !DILocation(line: 258, column: 24, scope: !13481)
!13501 = !DILocation(line: 258, column: 15, scope: !13481)
!13502 = distinct !{!13502, !13503, !13504}
!13503 = !DILocation(line: 258, column: 15, scope: !13482)
!13504 = !DILocation(line: 283, column: 19, scope: !13482)
!13505 = !DILabel(scope: !13423, name: "no_more_values", file: !1768, line: 284)
!13506 = !DILocation(line: 284, column: 13, scope: !13423)
!13507 = !DILocation(line: 285, column: 13, scope: !13423)
!13508 = !DILocation(line: 287, column: 21, scope: !13406)
!13509 = !DILocation(line: 287, column: 28, scope: !13406)
!13510 = !DILocation(line: 287, column: 18, scope: !13406)
!13511 = !DILocation(line: 288, column: 24, scope: !13406)
!13512 = !DILocation(line: 288, column: 11, scope: !13406)
!13513 = !DILocation(line: 288, column: 19, scope: !13406)
!13514 = !DILocation(line: 288, column: 22, scope: !13406)
!13515 = !{!13516, !2657, i64 0}
!13516 = !{!"mode_change", !2657, i64 0, !2657, i64 1, !2656, i64 4, !2656, i64 8, !2656, i64 12}
!13517 = !DILocation(line: 289, column: 26, scope: !13406)
!13518 = !DILocation(line: 289, column: 11, scope: !13406)
!13519 = !DILocation(line: 289, column: 19, scope: !13406)
!13520 = !DILocation(line: 289, column: 24, scope: !13406)
!13521 = !{!13516, !2657, i64 1}
!13522 = !DILocation(line: 290, column: 30, scope: !13406)
!13523 = !DILocation(line: 290, column: 11, scope: !13406)
!13524 = !DILocation(line: 290, column: 19, scope: !13406)
!13525 = !DILocation(line: 290, column: 28, scope: !13406)
!13526 = !{!13516, !2656, i64 4}
!13527 = !DILocation(line: 291, column: 27, scope: !13406)
!13528 = !DILocation(line: 291, column: 11, scope: !13406)
!13529 = !DILocation(line: 291, column: 19, scope: !13406)
!13530 = !DILocation(line: 291, column: 25, scope: !13406)
!13531 = !{!13516, !2656, i64 8}
!13532 = !DILocation(line: 293, column: 14, scope: !13406)
!13533 = !DILocation(line: 293, column: 26, scope: !13406)
!13534 = !DILocation(line: 293, column: 38, scope: !13406)
!13535 = !DILocation(line: 293, column: 49, scope: !13406)
!13536 = !DILocation(line: 293, column: 60, scope: !13406)
!13537 = !DILocation(line: 293, column: 58, scope: !13406)
!13538 = !DILocation(line: 293, column: 68, scope: !13406)
!13539 = !DILocation(line: 292, column: 11, scope: !13406)
!13540 = !DILocation(line: 292, column: 19, scope: !13406)
!13541 = !DILocation(line: 292, column: 29, scope: !13406)
!13542 = !{!13516, !2656, i64 12}
!13543 = !DILocation(line: 294, column: 9, scope: !13406)
!13544 = !DILocation(line: 295, column: 15, scope: !13376)
!13545 = !DILocation(line: 295, column: 14, scope: !13376)
!13546 = !DILocation(line: 295, column: 17, scope: !13376)
!13547 = !DILocation(line: 295, column: 24, scope: !13376)
!13548 = !DILocation(line: 295, column: 28, scope: !13376)
!13549 = !DILocation(line: 295, column: 27, scope: !13376)
!13550 = !DILocation(line: 295, column: 30, scope: !13376)
!13551 = !DILocation(line: 295, column: 37, scope: !13376)
!13552 = !DILocation(line: 295, column: 41, scope: !13376)
!13553 = !DILocation(line: 295, column: 40, scope: !13376)
!13554 = !DILocation(line: 295, column: 43, scope: !13376)
!13555 = distinct !{!13555, !13404, !13556}
!13556 = !DILocation(line: 295, column: 49, scope: !13376)
!13557 = !DILocation(line: 297, column: 12, scope: !13558)
!13558 = distinct !DILexicalBlock(scope: !13376, file: !1768, line: 297, column: 11)
!13559 = !DILocation(line: 297, column: 11, scope: !13558)
!13560 = !DILocation(line: 297, column: 14, scope: !13558)
!13561 = !DILocation(line: 297, column: 11, scope: !13376)
!13562 = !DILocation(line: 298, column: 9, scope: !13558)
!13563 = !DILocation(line: 299, column: 5, scope: !13376)
!13564 = !DILocation(line: 176, column: 28, scope: !13377)
!13565 = !DILocation(line: 176, column: 3, scope: !13377)
!13566 = distinct !{!13566, !13567, !13568}
!13567 = !DILocation(line: 176, column: 3, scope: !13372)
!13568 = !DILocation(line: 299, column: 5, scope: !13372)
!13569 = !DILocation(line: 301, column: 8, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13266, file: !1768, line: 301, column: 7)
!13571 = !DILocation(line: 301, column: 7, scope: !13570)
!13572 = !DILocation(line: 301, column: 10, scope: !13570)
!13573 = !DILocation(line: 301, column: 7, scope: !13266)
!13574 = !DILocation(line: 303, column: 7, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13570, file: !1768, line: 302, column: 5)
!13576 = !DILocation(line: 303, column: 10, scope: !13575)
!13577 = !DILocation(line: 303, column: 16, scope: !13575)
!13578 = !DILocation(line: 303, column: 21, scope: !13575)
!13579 = !DILocation(line: 304, column: 14, scope: !13575)
!13580 = !DILocation(line: 304, column: 7, scope: !13575)
!13581 = !DILocation(line: 301, column: 13, scope: !13570)
!13582 = !DILabel(scope: !13266, name: "invalid", file: !1768, line: 307)
!13583 = !DILocation(line: 307, column: 1, scope: !13266)
!13584 = !DILocation(line: 308, column: 9, scope: !13266)
!13585 = !DILocation(line: 308, column: 3, scope: !13266)
!13586 = !DILocation(line: 309, column: 3, scope: !13266)
!13587 = !DILocation(line: 310, column: 1, scope: !13266)
!13588 = distinct !DISubprogram(name: "octal_to_mode", scope: !1768, file: !1768, line: 54, type: !1780, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1761, retainedNodes: !206)
!13589 = !DILocalVariable(name: "octal", arg: 1, scope: !13588, file: !1768, line: 54, type: !67)
!13590 = !DILocation(line: 54, column: 29, scope: !13588)
!13591 = !DILocation(line: 62, column: 13, scope: !13588)
!13592 = !DILocation(line: 58, column: 3, scope: !13588)
!13593 = distinct !DISubprogram(name: "make_node_op_equals", scope: !1768, file: !1768, line: 112, type: !1782, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1761, retainedNodes: !206)
!13594 = !DILocalVariable(name: "new_mode", arg: 1, scope: !13593, file: !1768, line: 112, type: !136)
!13595 = !DILocation(line: 112, column: 29, scope: !13593)
!13596 = !DILocalVariable(name: "mentioned", arg: 2, scope: !13593, file: !1768, line: 112, type: !136)
!13597 = !DILocation(line: 112, column: 46, scope: !13593)
!13598 = !DILocalVariable(name: "p", scope: !13593, file: !1768, line: 114, type: !1766)
!13599 = !DILocation(line: 114, column: 23, scope: !13593)
!13600 = !DILocation(line: 114, column: 27, scope: !13593)
!13601 = !DILocation(line: 115, column: 3, scope: !13593)
!13602 = !DILocation(line: 115, column: 6, scope: !13593)
!13603 = !DILocation(line: 115, column: 9, scope: !13593)
!13604 = !DILocation(line: 116, column: 3, scope: !13593)
!13605 = !DILocation(line: 116, column: 6, scope: !13593)
!13606 = !DILocation(line: 116, column: 11, scope: !13593)
!13607 = !DILocation(line: 117, column: 3, scope: !13593)
!13608 = !DILocation(line: 117, column: 6, scope: !13593)
!13609 = !DILocation(line: 117, column: 15, scope: !13593)
!13610 = !DILocation(line: 118, column: 14, scope: !13593)
!13611 = !DILocation(line: 118, column: 3, scope: !13593)
!13612 = !DILocation(line: 118, column: 6, scope: !13593)
!13613 = !DILocation(line: 118, column: 12, scope: !13593)
!13614 = !DILocation(line: 119, column: 18, scope: !13593)
!13615 = !DILocation(line: 119, column: 3, scope: !13593)
!13616 = !DILocation(line: 119, column: 6, scope: !13593)
!13617 = !DILocation(line: 119, column: 16, scope: !13593)
!13618 = !DILocation(line: 120, column: 3, scope: !13593)
!13619 = !DILocation(line: 120, column: 8, scope: !13593)
!13620 = !DILocation(line: 120, column: 13, scope: !13593)
!13621 = !DILocation(line: 121, column: 10, scope: !13593)
!13622 = !DILocation(line: 121, column: 3, scope: !13593)
!13623 = distinct !DISubprogram(name: "mode_create_from_ref", scope: !1768, file: !1768, line: 316, type: !1764, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1761, retainedNodes: !206)
!13624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !13625)
!13625 = !{!13626, !13627, !13628, !13629, !13630, !13631, !13632, !13633, !13634, !13635, !13636, !13637, !13642, !13643, !13644}
!13626 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13624, file: !277, line: 48, baseType: !280, size: 64)
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13624, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13624, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13624, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13624, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!13631 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13624, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13624, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13624, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!13634 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13624, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13624, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13624, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13624, file: !277, line: 91, baseType: !13638, size: 128, offset: 576)
!13638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !13639)
!13639 = !{!13640, !13641}
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13638, file: !297, line: 122, baseType: !300, size: 64)
!13641 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13638, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!13642 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13624, file: !277, line: 92, baseType: !13638, size: 128, offset: 704)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13624, file: !277, line: 93, baseType: !13638, size: 128, offset: 832)
!13644 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13624, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!13645 = !DILocalVariable(name: "ref_file", arg: 1, scope: !13623, file: !1768, line: 316, type: !177)
!13646 = !DILocation(line: 316, column: 35, scope: !13623)
!13647 = !DILocalVariable(name: "ref_stats", scope: !13623, file: !1768, line: 318, type: !13624)
!13648 = !DILocation(line: 318, column: 15, scope: !13623)
!13649 = !DILocation(line: 320, column: 13, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13623, file: !1768, line: 320, column: 7)
!13651 = !DILocation(line: 320, column: 7, scope: !13650)
!13652 = !DILocation(line: 320, column: 35, scope: !13650)
!13653 = !DILocation(line: 320, column: 7, scope: !13623)
!13654 = !DILocation(line: 321, column: 5, scope: !13650)
!13655 = !DILocation(line: 322, column: 41, scope: !13623)
!13656 = !DILocation(line: 322, column: 10, scope: !13623)
!13657 = !DILocation(line: 322, column: 3, scope: !13623)
!13658 = !DILocation(line: 323, column: 1, scope: !13623)
!13659 = distinct !DISubprogram(name: "mode_adjust", scope: !1768, file: !1768, line: 339, type: !1775, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1761, retainedNodes: !206)
!13660 = !DILocalVariable(name: "oldmode", arg: 1, scope: !13659, file: !1768, line: 339, type: !136)
!13661 = !DILocation(line: 339, column: 21, scope: !13659)
!13662 = !DILocalVariable(name: "dir", arg: 2, scope: !13659, file: !1768, line: 339, type: !139)
!13663 = !DILocation(line: 339, column: 35, scope: !13659)
!13664 = !DILocalVariable(name: "umask_value", arg: 3, scope: !13659, file: !1768, line: 339, type: !136)
!13665 = !DILocation(line: 339, column: 47, scope: !13659)
!13666 = !DILocalVariable(name: "changes", arg: 4, scope: !13659, file: !1768, line: 340, type: !1777)
!13667 = !DILocation(line: 340, column: 40, scope: !13659)
!13668 = !DILocalVariable(name: "pmode_bits", arg: 5, scope: !13659, file: !1768, line: 340, type: !1779)
!13669 = !DILocation(line: 340, column: 57, scope: !13659)
!13670 = !DILocalVariable(name: "newmode", scope: !13659, file: !1768, line: 343, type: !136)
!13671 = !DILocation(line: 343, column: 10, scope: !13659)
!13672 = !DILocation(line: 343, column: 20, scope: !13659)
!13673 = !DILocation(line: 343, column: 28, scope: !13659)
!13674 = !DILocalVariable(name: "mode_bits", scope: !13659, file: !1768, line: 346, type: !136)
!13675 = !DILocation(line: 346, column: 10, scope: !13659)
!13676 = !DILocation(line: 348, column: 3, scope: !13659)
!13677 = !DILocation(line: 348, column: 10, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13679, file: !1768, line: 348, column: 3)
!13679 = distinct !DILexicalBlock(scope: !13659, file: !1768, line: 348, column: 3)
!13680 = !DILocation(line: 348, column: 19, scope: !13678)
!13681 = !DILocation(line: 348, column: 24, scope: !13678)
!13682 = !DILocation(line: 348, column: 3, scope: !13679)
!13683 = !DILocalVariable(name: "affected", scope: !13684, file: !1768, line: 350, type: !136)
!13684 = distinct !DILexicalBlock(scope: !13678, file: !1768, line: 349, column: 5)
!13685 = !DILocation(line: 350, column: 14, scope: !13684)
!13686 = !DILocation(line: 350, column: 25, scope: !13684)
!13687 = !DILocation(line: 350, column: 34, scope: !13684)
!13688 = !DILocalVariable(name: "omit_change", scope: !13684, file: !1768, line: 351, type: !136)
!13689 = !DILocation(line: 351, column: 14, scope: !13684)
!13690 = !DILocation(line: 352, column: 10, scope: !13684)
!13691 = !DILocation(line: 352, column: 43, scope: !13684)
!13692 = !DILocation(line: 352, column: 52, scope: !13684)
!13693 = !DILocation(line: 352, column: 41, scope: !13684)
!13694 = !DILocation(line: 352, column: 39, scope: !13684)
!13695 = !DILocalVariable(name: "value", scope: !13684, file: !1768, line: 353, type: !136)
!13696 = !DILocation(line: 353, column: 14, scope: !13684)
!13697 = !DILocation(line: 353, column: 22, scope: !13684)
!13698 = !DILocation(line: 353, column: 31, scope: !13684)
!13699 = !DILocation(line: 355, column: 15, scope: !13684)
!13700 = !DILocation(line: 355, column: 24, scope: !13684)
!13701 = !DILocation(line: 355, column: 7, scope: !13684)
!13702 = !DILocation(line: 358, column: 11, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13684, file: !1768, line: 356, column: 9)
!13704 = !DILocation(line: 362, column: 20, scope: !13703)
!13705 = !DILocation(line: 362, column: 17, scope: !13703)
!13706 = !DILocation(line: 365, column: 22, scope: !13703)
!13707 = !DILocation(line: 365, column: 28, scope: !13703)
!13708 = !DILocation(line: 367, column: 24, scope: !13703)
!13709 = !DILocation(line: 367, column: 30, scope: !13703)
!13710 = !DILocation(line: 367, column: 21, scope: !13703)
!13711 = !DILocation(line: 369, column: 24, scope: !13703)
!13712 = !DILocation(line: 369, column: 30, scope: !13703)
!13713 = !DILocation(line: 369, column: 21, scope: !13703)
!13714 = !DILocation(line: 365, column: 17, scope: !13703)
!13715 = !DILocation(line: 371, column: 11, scope: !13703)
!13716 = !DILocation(line: 376, column: 16, scope: !13717)
!13717 = distinct !DILexicalBlock(scope: !13703, file: !1768, line: 376, column: 15)
!13718 = !DILocation(line: 376, column: 24, scope: !13717)
!13719 = !DILocation(line: 376, column: 59, scope: !13717)
!13720 = !DILocation(line: 376, column: 57, scope: !13717)
!13721 = !DILocation(line: 376, column: 15, scope: !13703)
!13722 = !DILocation(line: 377, column: 19, scope: !13717)
!13723 = !DILocation(line: 377, column: 13, scope: !13717)
!13724 = !DILocation(line: 378, column: 11, scope: !13703)
!13725 = !DILocation(line: 384, column: 17, scope: !13684)
!13726 = !DILocation(line: 384, column: 28, scope: !13684)
!13727 = !DILocation(line: 384, column: 40, scope: !13684)
!13728 = !DILocation(line: 384, column: 39, scope: !13684)
!13729 = !DILocation(line: 384, column: 57, scope: !13684)
!13730 = !DILocation(line: 384, column: 55, scope: !13684)
!13731 = !DILocation(line: 384, column: 53, scope: !13684)
!13732 = !DILocation(line: 384, column: 13, scope: !13684)
!13733 = !DILocation(line: 386, column: 15, scope: !13684)
!13734 = !DILocation(line: 386, column: 24, scope: !13684)
!13735 = !DILocation(line: 386, column: 7, scope: !13684)
!13736 = !DILocalVariable(name: "preserved", scope: !13737, file: !1768, line: 393, type: !136)
!13737 = distinct !DILexicalBlock(scope: !13738, file: !1768, line: 392, column: 11)
!13738 = distinct !DILexicalBlock(scope: !13684, file: !1768, line: 387, column: 9)
!13739 = !DILocation(line: 393, column: 20, scope: !13737)
!13740 = !DILocation(line: 393, column: 33, scope: !13737)
!13741 = !DILocation(line: 393, column: 45, scope: !13737)
!13742 = !DILocation(line: 393, column: 44, scope: !13737)
!13743 = !DILocation(line: 393, column: 61, scope: !13737)
!13744 = !DILocation(line: 393, column: 59, scope: !13737)
!13745 = !DILocation(line: 394, column: 45, scope: !13737)
!13746 = !DILocation(line: 394, column: 44, scope: !13737)
!13747 = !DILocation(line: 394, column: 42, scope: !13737)
!13748 = !DILocation(line: 394, column: 23, scope: !13737)
!13749 = !DILocation(line: 395, column: 24, scope: !13737)
!13750 = !DILocation(line: 395, column: 34, scope: !13737)
!13751 = !DILocation(line: 395, column: 32, scope: !13737)
!13752 = !DILocation(line: 395, column: 47, scope: !13737)
!13753 = !DILocation(line: 395, column: 45, scope: !13737)
!13754 = !DILocation(line: 395, column: 21, scope: !13737)
!13755 = !DILocation(line: 396, column: 13, scope: !13737)
!13756 = !DILocation(line: 400, column: 24, scope: !13738)
!13757 = !DILocation(line: 400, column: 21, scope: !13738)
!13758 = !DILocation(line: 401, column: 22, scope: !13738)
!13759 = !DILocation(line: 401, column: 19, scope: !13738)
!13760 = !DILocation(line: 402, column: 11, scope: !13738)
!13761 = !DILocation(line: 405, column: 24, scope: !13738)
!13762 = !DILocation(line: 405, column: 21, scope: !13738)
!13763 = !DILocation(line: 406, column: 23, scope: !13738)
!13764 = !DILocation(line: 406, column: 22, scope: !13738)
!13765 = !DILocation(line: 406, column: 19, scope: !13738)
!13766 = !DILocation(line: 407, column: 11, scope: !13738)
!13767 = !DILocation(line: 409, column: 5, scope: !13684)
!13768 = !DILocation(line: 348, column: 45, scope: !13678)
!13769 = !DILocation(line: 348, column: 3, scope: !13678)
!13770 = distinct !{!13770, !13682, !13771}
!13771 = !DILocation(line: 409, column: 5, scope: !13679)
!13772 = !DILocation(line: 411, column: 7, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13659, file: !1768, line: 411, column: 7)
!13774 = !DILocation(line: 411, column: 7, scope: !13659)
!13775 = !DILocation(line: 412, column: 19, scope: !13773)
!13776 = !DILocation(line: 412, column: 6, scope: !13773)
!13777 = !DILocation(line: 412, column: 17, scope: !13773)
!13778 = !DILocation(line: 412, column: 5, scope: !13773)
!13779 = !DILocation(line: 413, column: 10, scope: !13659)
!13780 = !DILocation(line: 413, column: 3, scope: !13659)
!13781 = distinct !DISubprogram(name: "opendirat", scope: !13782, file: !13782, line: 36, type: !1787, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1784, retainedNodes: !206)
!13782 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mohamad/clone/coreutils")
!13783 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13781, file: !13782, line: 36, type: !5)
!13784 = !DILocation(line: 36, column: 16, scope: !13781)
!13785 = !DILocalVariable(name: "dir", arg: 2, scope: !13781, file: !13782, line: 36, type: !177)
!13786 = !DILocation(line: 36, column: 36, scope: !13781)
!13787 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13781, file: !13782, line: 36, type: !5)
!13788 = !DILocation(line: 36, column: 45, scope: !13781)
!13789 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13781, file: !13782, line: 36, type: !190)
!13790 = !DILocation(line: 36, column: 63, scope: !13781)
!13791 = !DILocalVariable(name: "open_flags", scope: !13781, file: !13782, line: 38, type: !5)
!13792 = !DILocation(line: 38, column: 7, scope: !13781)
!13793 = !DILocation(line: 39, column: 36, scope: !13781)
!13794 = !DILocation(line: 39, column: 34, scope: !13781)
!13795 = !DILocalVariable(name: "new_fd", scope: !13781, file: !13782, line: 40, type: !5)
!13796 = !DILocation(line: 40, column: 7, scope: !13781)
!13797 = !DILocation(line: 40, column: 24, scope: !13781)
!13798 = !DILocation(line: 40, column: 32, scope: !13781)
!13799 = !DILocation(line: 40, column: 37, scope: !13781)
!13800 = !DILocation(line: 40, column: 16, scope: !13781)
!13801 = !DILocation(line: 42, column: 7, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13781, file: !13782, line: 42, column: 7)
!13803 = !DILocation(line: 42, column: 14, scope: !13802)
!13804 = !DILocation(line: 42, column: 7, scope: !13781)
!13805 = !DILocation(line: 43, column: 5, scope: !13802)
!13806 = !DILocalVariable(name: "dirp", scope: !13781, file: !13782, line: 44, type: !675)
!13807 = !DILocation(line: 44, column: 8, scope: !13781)
!13808 = !DILocation(line: 44, column: 26, scope: !13781)
!13809 = !DILocation(line: 44, column: 15, scope: !13781)
!13810 = !DILocation(line: 45, column: 7, scope: !13811)
!13811 = distinct !DILexicalBlock(scope: !13781, file: !13782, line: 45, column: 7)
!13812 = !DILocation(line: 45, column: 7, scope: !13781)
!13813 = !DILocation(line: 46, column: 16, scope: !13811)
!13814 = !DILocation(line: 46, column: 6, scope: !13811)
!13815 = !DILocation(line: 46, column: 14, scope: !13811)
!13816 = !DILocation(line: 46, column: 5, scope: !13811)
!13817 = !DILocalVariable(name: "fdopendir_errno", scope: !13818, file: !13782, line: 49, type: !5)
!13818 = distinct !DILexicalBlock(scope: !13811, file: !13782, line: 48, column: 5)
!13819 = !DILocation(line: 49, column: 11, scope: !13818)
!13820 = !DILocation(line: 49, column: 29, scope: !13818)
!13821 = !DILocation(line: 50, column: 14, scope: !13818)
!13822 = !DILocation(line: 50, column: 7, scope: !13818)
!13823 = !DILocation(line: 51, column: 15, scope: !13818)
!13824 = !DILocation(line: 51, column: 7, scope: !13818)
!13825 = !DILocation(line: 51, column: 13, scope: !13818)
!13826 = !DILocation(line: 53, column: 10, scope: !13781)
!13827 = !DILocation(line: 53, column: 3, scope: !13781)
!13828 = !DILocation(line: 54, column: 1, scope: !13781)
!13829 = distinct !DISubprogram(name: "set_program_name", scope: !1006, file: !1006, line: 39, type: !199, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !964, retainedNodes: !206)
!13830 = !DILocalVariable(name: "argv0", arg: 1, scope: !13829, file: !1006, line: 39, type: !177)
!13831 = !DILocation(line: 39, column: 31, scope: !13829)
!13832 = !DILocalVariable(name: "slash", scope: !13829, file: !1006, line: 46, type: !177)
!13833 = !DILocation(line: 46, column: 15, scope: !13829)
!13834 = !DILocalVariable(name: "base", scope: !13829, file: !1006, line: 47, type: !177)
!13835 = !DILocation(line: 47, column: 15, scope: !13829)
!13836 = !DILocation(line: 51, column: 7, scope: !13837)
!13837 = distinct !DILexicalBlock(scope: !13829, file: !1006, line: 51, column: 7)
!13838 = !DILocation(line: 51, column: 13, scope: !13837)
!13839 = !DILocation(line: 51, column: 7, scope: !13829)
!13840 = !DILocation(line: 55, column: 14, scope: !13841)
!13841 = distinct !DILexicalBlock(scope: !13837, file: !1006, line: 52, column: 5)
!13842 = !DILocation(line: 54, column: 7, scope: !13841)
!13843 = !DILocation(line: 56, column: 7, scope: !13841)
!13844 = !DILocation(line: 59, column: 20, scope: !13829)
!13845 = !DILocation(line: 59, column: 11, scope: !13829)
!13846 = !DILocation(line: 59, column: 9, scope: !13829)
!13847 = !DILocation(line: 60, column: 11, scope: !13829)
!13848 = !DILocation(line: 60, column: 17, scope: !13829)
!13849 = !DILocation(line: 60, column: 27, scope: !13829)
!13850 = !DILocation(line: 60, column: 33, scope: !13829)
!13851 = !DILocation(line: 60, column: 39, scope: !13829)
!13852 = !DILocation(line: 60, column: 8, scope: !13829)
!13853 = !DILocation(line: 61, column: 7, scope: !13854)
!13854 = distinct !DILexicalBlock(scope: !13829, file: !1006, line: 61, column: 7)
!13855 = !DILocation(line: 61, column: 14, scope: !13854)
!13856 = !DILocation(line: 61, column: 12, scope: !13854)
!13857 = !DILocation(line: 61, column: 20, scope: !13854)
!13858 = !DILocation(line: 61, column: 25, scope: !13854)
!13859 = !DILocation(line: 61, column: 37, scope: !13854)
!13860 = !DILocation(line: 61, column: 42, scope: !13854)
!13861 = !DILocation(line: 61, column: 28, scope: !13854)
!13862 = !DILocation(line: 61, column: 61, scope: !13854)
!13863 = !DILocation(line: 61, column: 7, scope: !13829)
!13864 = !DILocation(line: 63, column: 15, scope: !13865)
!13865 = distinct !DILexicalBlock(scope: !13854, file: !1006, line: 62, column: 5)
!13866 = !DILocation(line: 63, column: 13, scope: !13865)
!13867 = !DILocation(line: 64, column: 20, scope: !13868)
!13868 = distinct !DILexicalBlock(scope: !13865, file: !1006, line: 64, column: 11)
!13869 = !DILocation(line: 64, column: 11, scope: !13868)
!13870 = !DILocation(line: 64, column: 36, scope: !13868)
!13871 = !DILocation(line: 64, column: 11, scope: !13865)
!13872 = !DILocation(line: 66, column: 19, scope: !13873)
!13873 = distinct !DILexicalBlock(scope: !13868, file: !1006, line: 65, column: 9)
!13874 = !DILocation(line: 66, column: 24, scope: !13873)
!13875 = !DILocation(line: 66, column: 17, scope: !13873)
!13876 = !DILocation(line: 70, column: 52, scope: !13873)
!13877 = !DILocation(line: 70, column: 41, scope: !13873)
!13878 = !DILocation(line: 72, column: 9, scope: !13873)
!13879 = !DILocation(line: 73, column: 5, scope: !13865)
!13880 = !DILocation(line: 84, column: 18, scope: !13829)
!13881 = !DILocation(line: 84, column: 16, scope: !13829)
!13882 = !DILocation(line: 90, column: 38, scope: !13829)
!13883 = !DILocation(line: 90, column: 27, scope: !13829)
!13884 = !DILocation(line: 92, column: 1, scope: !13829)
!13885 = distinct !DISubprogram(name: "qcopy_acl", scope: !13886, file: !13886, line: 39, type: !1520, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1789, retainedNodes: !206)
!13886 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mohamad/clone/coreutils")
!13887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2259, line: 260, size: 32, elements: !13888)
!13888 = !{!13889}
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13887, file: !2259, line: 261, baseType: !136, size: 32)
!13890 = !DILocalVariable(name: "src_name", arg: 1, scope: !13885, file: !13886, line: 39, type: !177)
!13891 = !DILocation(line: 39, column: 24, scope: !13885)
!13892 = !DILocalVariable(name: "source_desc", arg: 2, scope: !13885, file: !13886, line: 39, type: !5)
!13893 = !DILocation(line: 39, column: 38, scope: !13885)
!13894 = !DILocalVariable(name: "dst_name", arg: 3, scope: !13885, file: !13886, line: 39, type: !177)
!13895 = !DILocation(line: 39, column: 63, scope: !13885)
!13896 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !13885, file: !13886, line: 40, type: !5)
!13897 = !DILocation(line: 40, column: 16, scope: !13885)
!13898 = !DILocalVariable(name: "mode", arg: 5, scope: !13885, file: !13886, line: 40, type: !136)
!13899 = !DILocation(line: 40, column: 34, scope: !13885)
!13900 = !DILocalVariable(name: "ctx", scope: !13885, file: !13886, line: 42, type: !13887)
!13901 = !DILocation(line: 42, column: 29, scope: !13885)
!13902 = !DILocalVariable(name: "ret", scope: !13885, file: !13886, line: 43, type: !5)
!13903 = !DILocation(line: 43, column: 7, scope: !13885)
!13904 = !DILocation(line: 45, column: 26, scope: !13885)
!13905 = !DILocation(line: 45, column: 36, scope: !13885)
!13906 = !DILocation(line: 45, column: 49, scope: !13885)
!13907 = !DILocation(line: 45, column: 9, scope: !13885)
!13908 = !DILocation(line: 45, column: 7, scope: !13885)
!13909 = !DILocation(line: 46, column: 7, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13885, file: !13886, line: 46, column: 7)
!13911 = !DILocation(line: 46, column: 11, scope: !13910)
!13912 = !DILocation(line: 46, column: 7, scope: !13885)
!13913 = !DILocation(line: 47, column: 5, scope: !13910)
!13914 = !DILocation(line: 48, column: 32, scope: !13885)
!13915 = !DILocation(line: 48, column: 42, scope: !13885)
!13916 = !DILocation(line: 48, column: 9, scope: !13885)
!13917 = !DILocation(line: 48, column: 7, scope: !13885)
!13918 = !DILocation(line: 49, column: 3, scope: !13885)
!13919 = !DILocation(line: 50, column: 10, scope: !13885)
!13920 = !DILocation(line: 50, column: 3, scope: !13885)
!13921 = !DILocation(line: 51, column: 1, scope: !13885)
!13922 = distinct !DISubprogram(name: "qset_acl", scope: !13923, file: !13923, line: 39, type: !1525, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1791, retainedNodes: !206)
!13923 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mohamad/clone/coreutils")
!13924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2259, line: 260, size: 32, elements: !13925)
!13925 = !{!13926}
!13926 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13924, file: !2259, line: 261, baseType: !136, size: 32)
!13927 = !DILocalVariable(name: "name", arg: 1, scope: !13922, file: !13923, line: 39, type: !177)
!13928 = !DILocation(line: 39, column: 23, scope: !13922)
!13929 = !DILocalVariable(name: "desc", arg: 2, scope: !13922, file: !13923, line: 39, type: !5)
!13930 = !DILocation(line: 39, column: 33, scope: !13922)
!13931 = !DILocalVariable(name: "mode", arg: 3, scope: !13922, file: !13923, line: 39, type: !136)
!13932 = !DILocation(line: 39, column: 46, scope: !13922)
!13933 = !DILocalVariable(name: "ctx", scope: !13922, file: !13923, line: 41, type: !13924)
!13934 = !DILocation(line: 41, column: 29, scope: !13922)
!13935 = !DILocalVariable(name: "ret", scope: !13922, file: !13923, line: 42, type: !5)
!13936 = !DILocation(line: 42, column: 7, scope: !13922)
!13937 = !DILocation(line: 44, column: 3, scope: !13922)
!13938 = !DILocation(line: 45, column: 14, scope: !13922)
!13939 = !DILocation(line: 45, column: 7, scope: !13922)
!13940 = !DILocation(line: 45, column: 12, scope: !13922)
!13941 = !{!13942, !2656, i64 0}
!13942 = !{!"permission_context", !2656, i64 0}
!13943 = !DILocation(line: 46, column: 32, scope: !13922)
!13944 = !DILocation(line: 46, column: 38, scope: !13922)
!13945 = !DILocation(line: 46, column: 9, scope: !13922)
!13946 = !DILocation(line: 46, column: 7, scope: !13922)
!13947 = !DILocation(line: 47, column: 3, scope: !13922)
!13948 = !DILocation(line: 48, column: 10, scope: !13922)
!13949 = !DILocation(line: 48, column: 3, scope: !13922)
!13950 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1038, file: !1038, line: 122, type: !1034, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!13951 = !DILocalVariable(name: "o", arg: 1, scope: !13950, file: !1038, line: 122, type: !1036)
!13952 = !DILocation(line: 122, column: 48, scope: !13950)
!13953 = !DILocalVariable(name: "e", scope: !13950, file: !1038, line: 124, type: !5)
!13954 = !DILocation(line: 124, column: 7, scope: !13950)
!13955 = !DILocation(line: 124, column: 11, scope: !13950)
!13956 = !DILocalVariable(name: "p", scope: !13950, file: !1038, line: 125, type: !1036)
!13957 = !DILocation(line: 125, column: 27, scope: !13950)
!13958 = !DILocation(line: 125, column: 40, scope: !13950)
!13959 = !DILocation(line: 125, column: 44, scope: !13950)
!13960 = !DILocation(line: 125, column: 31, scope: !13950)
!13961 = !DILocation(line: 127, column: 11, scope: !13950)
!13962 = !DILocation(line: 127, column: 3, scope: !13950)
!13963 = !DILocation(line: 127, column: 9, scope: !13950)
!13964 = !DILocation(line: 128, column: 10, scope: !13950)
!13965 = !DILocation(line: 128, column: 3, scope: !13950)
!13966 = distinct !DISubprogram(name: "get_quoting_style", scope: !1038, file: !1038, line: 133, type: !1046, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!13967 = !DILocalVariable(name: "o", arg: 1, scope: !13966, file: !1038, line: 133, type: !1048)
!13968 = !DILocation(line: 133, column: 50, scope: !13966)
!13969 = !DILocation(line: 135, column: 11, scope: !13966)
!13970 = !DILocation(line: 135, column: 15, scope: !13966)
!13971 = !DILocation(line: 135, column: 46, scope: !13966)
!13972 = !{!13973, !2657, i64 0}
!13973 = !{!"quoting_options", !2657, i64 0, !2656, i64 4, !2657, i64 8, !2669, i64 40, !2669, i64 48}
!13974 = !DILocation(line: 135, column: 3, scope: !13966)
!13975 = distinct !DISubprogram(name: "set_quoting_style", scope: !1038, file: !1038, line: 141, type: !1050, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!13976 = !DILocalVariable(name: "o", arg: 1, scope: !13975, file: !1038, line: 141, type: !1036)
!13977 = !DILocation(line: 141, column: 44, scope: !13975)
!13978 = !DILocalVariable(name: "s", arg: 2, scope: !13975, file: !1038, line: 141, type: !1012)
!13979 = !DILocation(line: 141, column: 66, scope: !13975)
!13980 = !DILocation(line: 143, column: 47, scope: !13975)
!13981 = !DILocation(line: 143, column: 4, scope: !13975)
!13982 = !DILocation(line: 143, column: 8, scope: !13975)
!13983 = !DILocation(line: 143, column: 39, scope: !13975)
!13984 = !DILocation(line: 143, column: 45, scope: !13975)
!13985 = !DILocation(line: 144, column: 1, scope: !13975)
!13986 = distinct !DISubprogram(name: "set_char_quoting", scope: !1038, file: !1038, line: 152, type: !1052, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!13987 = !DILocalVariable(name: "o", arg: 1, scope: !13986, file: !1038, line: 152, type: !1036)
!13988 = !DILocation(line: 152, column: 43, scope: !13986)
!13989 = !DILocalVariable(name: "c", arg: 2, scope: !13986, file: !1038, line: 152, type: !8)
!13990 = !DILocation(line: 152, column: 51, scope: !13986)
!13991 = !DILocalVariable(name: "i", arg: 3, scope: !13986, file: !1038, line: 152, type: !5)
!13992 = !DILocation(line: 152, column: 58, scope: !13986)
!13993 = !DILocalVariable(name: "uc", scope: !13986, file: !1038, line: 154, type: !565)
!13994 = !DILocation(line: 154, column: 17, scope: !13986)
!13995 = !DILocation(line: 154, column: 22, scope: !13986)
!13996 = !DILocalVariable(name: "p", scope: !13986, file: !1038, line: 155, type: !1054)
!13997 = !DILocation(line: 155, column: 17, scope: !13986)
!13998 = !DILocation(line: 156, column: 6, scope: !13986)
!13999 = !DILocation(line: 156, column: 10, scope: !13986)
!14000 = !DILocation(line: 156, column: 41, scope: !13986)
!14001 = !DILocation(line: 156, column: 5, scope: !13986)
!14002 = !DILocation(line: 156, column: 59, scope: !13986)
!14003 = !DILocation(line: 156, column: 62, scope: !13986)
!14004 = !DILocation(line: 156, column: 57, scope: !13986)
!14005 = !DILocalVariable(name: "shift", scope: !13986, file: !1038, line: 157, type: !5)
!14006 = !DILocation(line: 157, column: 7, scope: !13986)
!14007 = !DILocation(line: 157, column: 15, scope: !13986)
!14008 = !DILocation(line: 157, column: 18, scope: !13986)
!14009 = !DILocalVariable(name: "r", scope: !13986, file: !1038, line: 158, type: !5)
!14010 = !DILocation(line: 158, column: 7, scope: !13986)
!14011 = !DILocation(line: 158, column: 13, scope: !13986)
!14012 = !DILocation(line: 158, column: 12, scope: !13986)
!14013 = !DILocation(line: 158, column: 18, scope: !13986)
!14014 = !DILocation(line: 158, column: 15, scope: !13986)
!14015 = !DILocation(line: 158, column: 25, scope: !13986)
!14016 = !DILocation(line: 159, column: 11, scope: !13986)
!14017 = !DILocation(line: 159, column: 13, scope: !13986)
!14018 = !DILocation(line: 159, column: 20, scope: !13986)
!14019 = !DILocation(line: 159, column: 18, scope: !13986)
!14020 = !DILocation(line: 159, column: 26, scope: !13986)
!14021 = !DILocation(line: 159, column: 23, scope: !13986)
!14022 = !DILocation(line: 159, column: 4, scope: !13986)
!14023 = !DILocation(line: 159, column: 6, scope: !13986)
!14024 = !DILocation(line: 160, column: 10, scope: !13986)
!14025 = !DILocation(line: 160, column: 3, scope: !13986)
!14026 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1038, file: !1038, line: 168, type: !1055, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!14027 = !DILocalVariable(name: "o", arg: 1, scope: !14026, file: !1038, line: 168, type: !1036)
!14028 = !DILocation(line: 168, column: 44, scope: !14026)
!14029 = !DILocalVariable(name: "i", arg: 2, scope: !14026, file: !1038, line: 168, type: !5)
!14030 = !DILocation(line: 168, column: 51, scope: !14026)
!14031 = !DILocalVariable(name: "r", scope: !14026, file: !1038, line: 170, type: !5)
!14032 = !DILocation(line: 170, column: 7, scope: !14026)
!14033 = !DILocation(line: 171, column: 8, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14026, file: !1038, line: 171, column: 7)
!14035 = !DILocation(line: 171, column: 7, scope: !14026)
!14036 = !DILocation(line: 172, column: 7, scope: !14034)
!14037 = !DILocation(line: 172, column: 5, scope: !14034)
!14038 = !DILocation(line: 173, column: 7, scope: !14026)
!14039 = !DILocation(line: 173, column: 10, scope: !14026)
!14040 = !{!13973, !2656, i64 4}
!14041 = !DILocation(line: 173, column: 5, scope: !14026)
!14042 = !DILocation(line: 174, column: 14, scope: !14026)
!14043 = !DILocation(line: 174, column: 3, scope: !14026)
!14044 = !DILocation(line: 174, column: 6, scope: !14026)
!14045 = !DILocation(line: 174, column: 12, scope: !14026)
!14046 = !DILocation(line: 175, column: 10, scope: !14026)
!14047 = !DILocation(line: 175, column: 3, scope: !14026)
!14048 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1038, file: !1038, line: 179, type: !1057, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!14049 = !DILocalVariable(name: "o", arg: 1, scope: !14048, file: !1038, line: 179, type: !1036)
!14050 = !DILocation(line: 179, column: 45, scope: !14048)
!14051 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14048, file: !1038, line: 180, type: !177)
!14052 = !DILocation(line: 180, column: 33, scope: !14048)
!14053 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14048, file: !1038, line: 180, type: !177)
!14054 = !DILocation(line: 180, column: 57, scope: !14048)
!14055 = !DILocation(line: 182, column: 8, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14048, file: !1038, line: 182, column: 7)
!14057 = !DILocation(line: 182, column: 7, scope: !14048)
!14058 = !DILocation(line: 183, column: 7, scope: !14056)
!14059 = !DILocation(line: 183, column: 5, scope: !14056)
!14060 = !DILocation(line: 184, column: 3, scope: !14048)
!14061 = !DILocation(line: 184, column: 6, scope: !14048)
!14062 = !DILocation(line: 184, column: 12, scope: !14048)
!14063 = !DILocation(line: 185, column: 8, scope: !14064)
!14064 = distinct !DILexicalBlock(scope: !14048, file: !1038, line: 185, column: 7)
!14065 = !DILocation(line: 185, column: 19, scope: !14064)
!14066 = !DILocation(line: 185, column: 23, scope: !14064)
!14067 = !DILocation(line: 185, column: 7, scope: !14048)
!14068 = !DILocation(line: 186, column: 5, scope: !14064)
!14069 = !DILocation(line: 187, column: 19, scope: !14048)
!14070 = !DILocation(line: 187, column: 3, scope: !14048)
!14071 = !DILocation(line: 187, column: 6, scope: !14048)
!14072 = !DILocation(line: 187, column: 17, scope: !14048)
!14073 = !{!13973, !2669, i64 40}
!14074 = !DILocation(line: 188, column: 20, scope: !14048)
!14075 = !DILocation(line: 188, column: 3, scope: !14048)
!14076 = !DILocation(line: 188, column: 6, scope: !14048)
!14077 = !DILocation(line: 188, column: 18, scope: !14048)
!14078 = !{!13973, !2669, i64 48}
!14079 = !DILocation(line: 189, column: 1, scope: !14048)
!14080 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1038, file: !1038, line: 784, type: !1059, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!14081 = !DILocalVariable(name: "buffer", arg: 1, scope: !14080, file: !1038, line: 784, type: !7)
!14082 = !DILocation(line: 784, column: 24, scope: !14080)
!14083 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14080, file: !1038, line: 784, type: !52)
!14084 = !DILocation(line: 784, column: 39, scope: !14080)
!14085 = !DILocalVariable(name: "arg", arg: 3, scope: !14080, file: !1038, line: 785, type: !177)
!14086 = !DILocation(line: 785, column: 30, scope: !14080)
!14087 = !DILocalVariable(name: "argsize", arg: 4, scope: !14080, file: !1038, line: 785, type: !52)
!14088 = !DILocation(line: 785, column: 42, scope: !14080)
!14089 = !DILocalVariable(name: "o", arg: 5, scope: !14080, file: !1038, line: 786, type: !1048)
!14090 = !DILocation(line: 786, column: 48, scope: !14080)
!14091 = !DILocalVariable(name: "p", scope: !14080, file: !1038, line: 788, type: !1048)
!14092 = !DILocation(line: 788, column: 33, scope: !14080)
!14093 = !DILocation(line: 788, column: 37, scope: !14080)
!14094 = !DILocation(line: 788, column: 41, scope: !14080)
!14095 = !DILocalVariable(name: "e", scope: !14080, file: !1038, line: 789, type: !5)
!14096 = !DILocation(line: 789, column: 7, scope: !14080)
!14097 = !DILocation(line: 789, column: 11, scope: !14080)
!14098 = !DILocalVariable(name: "r", scope: !14080, file: !1038, line: 790, type: !52)
!14099 = !DILocation(line: 790, column: 10, scope: !14080)
!14100 = !DILocation(line: 790, column: 40, scope: !14080)
!14101 = !DILocation(line: 790, column: 48, scope: !14080)
!14102 = !DILocation(line: 790, column: 60, scope: !14080)
!14103 = !DILocation(line: 790, column: 65, scope: !14080)
!14104 = !DILocation(line: 791, column: 40, scope: !14080)
!14105 = !DILocation(line: 791, column: 43, scope: !14080)
!14106 = !DILocation(line: 791, column: 50, scope: !14080)
!14107 = !DILocation(line: 791, column: 53, scope: !14080)
!14108 = !DILocation(line: 791, column: 60, scope: !14080)
!14109 = !DILocation(line: 791, column: 63, scope: !14080)
!14110 = !DILocation(line: 792, column: 40, scope: !14080)
!14111 = !DILocation(line: 792, column: 43, scope: !14080)
!14112 = !DILocation(line: 792, column: 55, scope: !14080)
!14113 = !DILocation(line: 792, column: 58, scope: !14080)
!14114 = !DILocation(line: 790, column: 14, scope: !14080)
!14115 = !DILocation(line: 793, column: 11, scope: !14080)
!14116 = !DILocation(line: 793, column: 3, scope: !14080)
!14117 = !DILocation(line: 793, column: 9, scope: !14080)
!14118 = !DILocation(line: 794, column: 10, scope: !14080)
!14119 = !DILocation(line: 794, column: 3, scope: !14080)
!14120 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1038, file: !1038, line: 256, type: !1104, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!14121 = !DILocalVariable(name: "buffer", arg: 1, scope: !14120, file: !1038, line: 256, type: !7)
!14122 = !DILocation(line: 256, column: 33, scope: !14120)
!14123 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14120, file: !1038, line: 256, type: !52)
!14124 = !DILocation(line: 256, column: 48, scope: !14120)
!14125 = !DILocalVariable(name: "arg", arg: 3, scope: !14120, file: !1038, line: 257, type: !177)
!14126 = !DILocation(line: 257, column: 39, scope: !14120)
!14127 = !DILocalVariable(name: "argsize", arg: 4, scope: !14120, file: !1038, line: 257, type: !52)
!14128 = !DILocation(line: 257, column: 51, scope: !14120)
!14129 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !14120, file: !1038, line: 258, type: !1012)
!14130 = !DILocation(line: 258, column: 46, scope: !14120)
!14131 = !DILocalVariable(name: "flags", arg: 6, scope: !14120, file: !1038, line: 258, type: !5)
!14132 = !DILocation(line: 258, column: 65, scope: !14120)
!14133 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !14120, file: !1038, line: 259, type: !1106)
!14134 = !DILocation(line: 259, column: 47, scope: !14120)
!14135 = !DILocalVariable(name: "left_quote", arg: 8, scope: !14120, file: !1038, line: 260, type: !177)
!14136 = !DILocation(line: 260, column: 39, scope: !14120)
!14137 = !DILocalVariable(name: "right_quote", arg: 9, scope: !14120, file: !1038, line: 261, type: !177)
!14138 = !DILocation(line: 261, column: 39, scope: !14120)
!14139 = !DILocalVariable(name: "i", scope: !14120, file: !1038, line: 263, type: !52)
!14140 = !DILocation(line: 263, column: 10, scope: !14120)
!14141 = !DILocalVariable(name: "len", scope: !14120, file: !1038, line: 264, type: !52)
!14142 = !DILocation(line: 264, column: 10, scope: !14120)
!14143 = !DILocalVariable(name: "orig_buffersize", scope: !14120, file: !1038, line: 265, type: !52)
!14144 = !DILocation(line: 265, column: 10, scope: !14120)
!14145 = !DILocalVariable(name: "quote_string", scope: !14120, file: !1038, line: 266, type: !177)
!14146 = !DILocation(line: 266, column: 15, scope: !14120)
!14147 = !DILocalVariable(name: "quote_string_len", scope: !14120, file: !1038, line: 267, type: !52)
!14148 = !DILocation(line: 267, column: 10, scope: !14120)
!14149 = !DILocalVariable(name: "backslash_escapes", scope: !14120, file: !1038, line: 268, type: !139)
!14150 = !DILocation(line: 268, column: 8, scope: !14120)
!14151 = !DILocalVariable(name: "unibyte_locale", scope: !14120, file: !1038, line: 269, type: !139)
!14152 = !DILocation(line: 269, column: 8, scope: !14120)
!14153 = !DILocation(line: 269, column: 25, scope: !14120)
!14154 = !DILocation(line: 269, column: 36, scope: !14120)
!14155 = !DILocalVariable(name: "elide_outer_quotes", scope: !14120, file: !1038, line: 270, type: !139)
!14156 = !DILocation(line: 270, column: 8, scope: !14120)
!14157 = !DILocation(line: 270, column: 30, scope: !14120)
!14158 = !DILocation(line: 270, column: 36, scope: !14120)
!14159 = !DILocation(line: 270, column: 61, scope: !14120)
!14160 = !DILocalVariable(name: "pending_shell_escape_end", scope: !14120, file: !1038, line: 271, type: !139)
!14161 = !DILocation(line: 271, column: 8, scope: !14120)
!14162 = !DILocalVariable(name: "encountered_single_quote", scope: !14120, file: !1038, line: 272, type: !139)
!14163 = !DILocation(line: 272, column: 8, scope: !14120)
!14164 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !14120, file: !1038, line: 273, type: !139)
!14165 = !DILocation(line: 273, column: 8, scope: !14120)
!14166 = !DILocation(line: 273, column: 3, scope: !14120)
!14167 = !DILabel(scope: !14120, name: "process_input", file: !1038, line: 314)
!14168 = !DILocation(line: 314, column: 2, scope: !14120)
!14169 = !DILocation(line: 316, column: 11, scope: !14120)
!14170 = !DILocation(line: 316, column: 3, scope: !14120)
!14171 = !DILocation(line: 319, column: 21, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14120, file: !1038, line: 317, column: 5)
!14173 = !DILocation(line: 320, column: 26, scope: !14172)
!14174 = !DILocation(line: 321, column: 7, scope: !14172)
!14175 = !DILocation(line: 323, column: 12, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14172, file: !1038, line: 323, column: 11)
!14177 = !DILocation(line: 323, column: 11, scope: !14172)
!14178 = !DILocation(line: 324, column: 9, scope: !14176)
!14179 = !DILocation(line: 324, column: 9, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14181, file: !1038, line: 324, column: 9)
!14181 = distinct !DILexicalBlock(scope: !14176, file: !1038, line: 324, column: 9)
!14182 = !DILocation(line: 324, column: 9, scope: !14181)
!14183 = !DILocation(line: 325, column: 25, scope: !14172)
!14184 = !DILocation(line: 326, column: 20, scope: !14172)
!14185 = !DILocation(line: 327, column: 24, scope: !14172)
!14186 = !DILocation(line: 328, column: 7, scope: !14172)
!14187 = !DILocation(line: 331, column: 25, scope: !14172)
!14188 = !DILocation(line: 332, column: 26, scope: !14172)
!14189 = !DILocation(line: 333, column: 7, scope: !14172)
!14190 = !DILocation(line: 339, column: 13, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14192, file: !1038, line: 339, column: 13)
!14192 = distinct !DILexicalBlock(scope: !14172, file: !1038, line: 338, column: 7)
!14193 = !DILocation(line: 339, column: 27, scope: !14191)
!14194 = !DILocation(line: 339, column: 13, scope: !14192)
!14195 = !DILocation(line: 362, column: 50, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14191, file: !1038, line: 340, column: 11)
!14197 = !DILocation(line: 362, column: 26, scope: !14196)
!14198 = !DILocation(line: 362, column: 24, scope: !14196)
!14199 = !DILocation(line: 363, column: 51, scope: !14196)
!14200 = !DILocation(line: 363, column: 27, scope: !14196)
!14201 = !DILocation(line: 363, column: 25, scope: !14196)
!14202 = !DILocation(line: 364, column: 11, scope: !14196)
!14203 = !DILocation(line: 365, column: 14, scope: !14204)
!14204 = distinct !DILexicalBlock(scope: !14192, file: !1038, line: 365, column: 13)
!14205 = !DILocation(line: 365, column: 13, scope: !14192)
!14206 = !DILocation(line: 366, column: 31, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14204, file: !1038, line: 366, column: 11)
!14208 = !DILocation(line: 366, column: 29, scope: !14207)
!14209 = !DILocation(line: 366, column: 16, scope: !14207)
!14210 = !DILocation(line: 366, column: 44, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14207, file: !1038, line: 366, column: 11)
!14212 = !DILocation(line: 366, column: 43, scope: !14211)
!14213 = !DILocation(line: 366, column: 11, scope: !14207)
!14214 = !DILocation(line: 367, column: 13, scope: !14211)
!14215 = !DILocation(line: 367, column: 13, scope: !14216)
!14216 = distinct !DILexicalBlock(scope: !14217, file: !1038, line: 367, column: 13)
!14217 = distinct !DILexicalBlock(scope: !14211, file: !1038, line: 367, column: 13)
!14218 = !DILocation(line: 367, column: 13, scope: !14217)
!14219 = !DILocation(line: 366, column: 70, scope: !14211)
!14220 = !DILocation(line: 366, column: 11, scope: !14211)
!14221 = distinct !{!14221, !14213, !14222}
!14222 = !DILocation(line: 367, column: 13, scope: !14207)
!14223 = !DILocation(line: 368, column: 27, scope: !14192)
!14224 = !DILocation(line: 369, column: 24, scope: !14192)
!14225 = !DILocation(line: 369, column: 22, scope: !14192)
!14226 = !DILocation(line: 370, column: 36, scope: !14192)
!14227 = !DILocation(line: 370, column: 28, scope: !14192)
!14228 = !DILocation(line: 370, column: 26, scope: !14192)
!14229 = !DILocation(line: 372, column: 7, scope: !14172)
!14230 = !DILocation(line: 375, column: 25, scope: !14172)
!14231 = !DILocation(line: 376, column: 7, scope: !14172)
!14232 = !DILocation(line: 378, column: 26, scope: !14172)
!14233 = !DILocation(line: 379, column: 7, scope: !14172)
!14234 = !DILocation(line: 381, column: 12, scope: !14235)
!14235 = distinct !DILexicalBlock(scope: !14172, file: !1038, line: 381, column: 11)
!14236 = !DILocation(line: 381, column: 11, scope: !14172)
!14237 = !DILocation(line: 382, column: 27, scope: !14235)
!14238 = !DILocation(line: 382, column: 9, scope: !14235)
!14239 = !DILocation(line: 383, column: 7, scope: !14172)
!14240 = !DILocation(line: 385, column: 21, scope: !14172)
!14241 = !DILocation(line: 386, column: 12, scope: !14242)
!14242 = distinct !DILexicalBlock(scope: !14172, file: !1038, line: 386, column: 11)
!14243 = !DILocation(line: 386, column: 11, scope: !14172)
!14244 = !DILocation(line: 387, column: 9, scope: !14242)
!14245 = !DILocation(line: 387, column: 9, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14247, file: !1038, line: 387, column: 9)
!14247 = distinct !DILexicalBlock(scope: !14242, file: !1038, line: 387, column: 9)
!14248 = !DILocation(line: 387, column: 9, scope: !14247)
!14249 = !DILocation(line: 388, column: 20, scope: !14172)
!14250 = !DILocation(line: 389, column: 24, scope: !14172)
!14251 = !DILocation(line: 390, column: 7, scope: !14172)
!14252 = !DILocation(line: 393, column: 26, scope: !14172)
!14253 = !DILocation(line: 394, column: 7, scope: !14172)
!14254 = !DILocation(line: 397, column: 7, scope: !14172)
!14255 = !DILocation(line: 400, column: 10, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14120, file: !1038, line: 400, column: 3)
!14257 = !DILocation(line: 400, column: 8, scope: !14256)
!14258 = !DILocation(line: 400, column: 19, scope: !14259)
!14259 = distinct !DILexicalBlock(scope: !14256, file: !1038, line: 400, column: 3)
!14260 = !DILocation(line: 400, column: 27, scope: !14259)
!14261 = !DILocation(line: 400, column: 41, scope: !14259)
!14262 = !DILocation(line: 400, column: 45, scope: !14259)
!14263 = !DILocation(line: 400, column: 48, scope: !14259)
!14264 = !DILocation(line: 400, column: 58, scope: !14259)
!14265 = !DILocation(line: 400, column: 63, scope: !14259)
!14266 = !DILocation(line: 400, column: 60, scope: !14259)
!14267 = !DILocation(line: 400, column: 16, scope: !14259)
!14268 = !DILocation(line: 400, column: 3, scope: !14256)
!14269 = !DILocalVariable(name: "c", scope: !14270, file: !1038, line: 402, type: !565)
!14270 = distinct !DILexicalBlock(scope: !14259, file: !1038, line: 401, column: 5)
!14271 = !DILocation(line: 402, column: 21, scope: !14270)
!14272 = !DILocalVariable(name: "esc", scope: !14270, file: !1038, line: 403, type: !565)
!14273 = !DILocation(line: 403, column: 21, scope: !14270)
!14274 = !DILocalVariable(name: "is_right_quote", scope: !14270, file: !1038, line: 404, type: !139)
!14275 = !DILocation(line: 404, column: 12, scope: !14270)
!14276 = !DILocalVariable(name: "escaping", scope: !14270, file: !1038, line: 405, type: !139)
!14277 = !DILocation(line: 405, column: 12, scope: !14270)
!14278 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !14270, file: !1038, line: 406, type: !139)
!14279 = !DILocation(line: 406, column: 12, scope: !14270)
!14280 = !DILocation(line: 408, column: 11, scope: !14281)
!14281 = distinct !DILexicalBlock(scope: !14270, file: !1038, line: 408, column: 11)
!14282 = !DILocation(line: 409, column: 11, scope: !14281)
!14283 = !DILocation(line: 409, column: 14, scope: !14281)
!14284 = !DILocation(line: 409, column: 28, scope: !14281)
!14285 = !DILocation(line: 410, column: 11, scope: !14281)
!14286 = !DILocation(line: 410, column: 14, scope: !14281)
!14287 = !DILocation(line: 411, column: 11, scope: !14281)
!14288 = !DILocation(line: 411, column: 15, scope: !14281)
!14289 = !DILocation(line: 411, column: 19, scope: !14281)
!14290 = !DILocation(line: 411, column: 17, scope: !14281)
!14291 = !DILocation(line: 412, column: 19, scope: !14281)
!14292 = !DILocation(line: 412, column: 27, scope: !14281)
!14293 = !DILocation(line: 412, column: 39, scope: !14281)
!14294 = !DILocation(line: 412, column: 46, scope: !14281)
!14295 = !DILocation(line: 412, column: 44, scope: !14281)
!14296 = !DILocation(line: 416, column: 40, scope: !14281)
!14297 = !DILocation(line: 416, column: 32, scope: !14281)
!14298 = !DILocation(line: 416, column: 30, scope: !14281)
!14299 = !DILocation(line: 416, column: 48, scope: !14281)
!14300 = !DILocation(line: 412, column: 15, scope: !14281)
!14301 = !DILocation(line: 417, column: 11, scope: !14281)
!14302 = !DILocation(line: 417, column: 22, scope: !14281)
!14303 = !DILocation(line: 417, column: 28, scope: !14281)
!14304 = !DILocation(line: 417, column: 26, scope: !14281)
!14305 = !DILocation(line: 417, column: 31, scope: !14281)
!14306 = !DILocation(line: 417, column: 45, scope: !14281)
!14307 = !DILocation(line: 417, column: 14, scope: !14281)
!14308 = !DILocation(line: 417, column: 63, scope: !14281)
!14309 = !DILocation(line: 408, column: 11, scope: !14270)
!14310 = !DILocation(line: 419, column: 15, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14312, file: !1038, line: 419, column: 15)
!14312 = distinct !DILexicalBlock(scope: !14281, file: !1038, line: 418, column: 9)
!14313 = !DILocation(line: 419, column: 15, scope: !14312)
!14314 = !DILocation(line: 420, column: 13, scope: !14311)
!14315 = !DILocation(line: 421, column: 26, scope: !14312)
!14316 = !DILocation(line: 422, column: 9, scope: !14312)
!14317 = !DILocation(line: 424, column: 11, scope: !14270)
!14318 = !DILocation(line: 424, column: 15, scope: !14270)
!14319 = !DILocation(line: 424, column: 9, scope: !14270)
!14320 = !DILocation(line: 425, column: 15, scope: !14270)
!14321 = !DILocation(line: 425, column: 7, scope: !14270)
!14322 = !DILocation(line: 428, column: 15, scope: !14323)
!14323 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 428, column: 15)
!14324 = distinct !DILexicalBlock(scope: !14270, file: !1038, line: 426, column: 9)
!14325 = !DILocation(line: 428, column: 15, scope: !14324)
!14326 = !DILocation(line: 430, column: 15, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14323, file: !1038, line: 429, column: 13)
!14328 = !DILocation(line: 430, column: 15, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14330, file: !1038, line: 430, column: 15)
!14330 = distinct !DILexicalBlock(scope: !14327, file: !1038, line: 430, column: 15)
!14331 = !DILocation(line: 430, column: 15, scope: !14330)
!14332 = !DILocation(line: 430, column: 15, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !14330, file: !1038, line: 430, column: 15)
!14334 = !DILocation(line: 430, column: 15, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14333, file: !1038, line: 430, column: 15)
!14336 = !DILocation(line: 430, column: 15, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14338, file: !1038, line: 430, column: 15)
!14338 = distinct !DILexicalBlock(scope: !14335, file: !1038, line: 430, column: 15)
!14339 = !DILocation(line: 430, column: 15, scope: !14338)
!14340 = !DILocation(line: 430, column: 15, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14342, file: !1038, line: 430, column: 15)
!14342 = distinct !DILexicalBlock(scope: !14335, file: !1038, line: 430, column: 15)
!14343 = !DILocation(line: 430, column: 15, scope: !14342)
!14344 = !DILocation(line: 430, column: 15, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14346, file: !1038, line: 430, column: 15)
!14346 = distinct !DILexicalBlock(scope: !14335, file: !1038, line: 430, column: 15)
!14347 = !DILocation(line: 430, column: 15, scope: !14346)
!14348 = !DILocation(line: 430, column: 15, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !1038, line: 430, column: 15)
!14350 = distinct !DILexicalBlock(scope: !14330, file: !1038, line: 430, column: 15)
!14351 = !DILocation(line: 430, column: 15, scope: !14350)
!14352 = !DILocation(line: 437, column: 19, scope: !14353)
!14353 = distinct !DILexicalBlock(scope: !14327, file: !1038, line: 437, column: 19)
!14354 = !DILocation(line: 437, column: 33, scope: !14353)
!14355 = !DILocation(line: 438, column: 19, scope: !14353)
!14356 = !DILocation(line: 438, column: 22, scope: !14353)
!14357 = !DILocation(line: 438, column: 24, scope: !14353)
!14358 = !DILocation(line: 438, column: 30, scope: !14353)
!14359 = !DILocation(line: 438, column: 28, scope: !14353)
!14360 = !DILocation(line: 438, column: 38, scope: !14353)
!14361 = !DILocation(line: 438, column: 48, scope: !14353)
!14362 = !DILocation(line: 438, column: 52, scope: !14353)
!14363 = !DILocation(line: 438, column: 54, scope: !14353)
!14364 = !DILocation(line: 438, column: 45, scope: !14353)
!14365 = !DILocation(line: 438, column: 59, scope: !14353)
!14366 = !DILocation(line: 438, column: 62, scope: !14353)
!14367 = !DILocation(line: 438, column: 66, scope: !14353)
!14368 = !DILocation(line: 438, column: 68, scope: !14353)
!14369 = !DILocation(line: 438, column: 73, scope: !14353)
!14370 = !DILocation(line: 437, column: 19, scope: !14327)
!14371 = !DILocation(line: 440, column: 19, scope: !14372)
!14372 = distinct !DILexicalBlock(scope: !14353, file: !1038, line: 439, column: 17)
!14373 = !DILocation(line: 440, column: 19, scope: !14374)
!14374 = distinct !DILexicalBlock(scope: !14375, file: !1038, line: 440, column: 19)
!14375 = distinct !DILexicalBlock(scope: !14372, file: !1038, line: 440, column: 19)
!14376 = !DILocation(line: 440, column: 19, scope: !14375)
!14377 = !DILocation(line: 441, column: 19, scope: !14372)
!14378 = !DILocation(line: 441, column: 19, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !1038, line: 441, column: 19)
!14380 = distinct !DILexicalBlock(scope: !14372, file: !1038, line: 441, column: 19)
!14381 = !DILocation(line: 441, column: 19, scope: !14380)
!14382 = !DILocation(line: 442, column: 17, scope: !14372)
!14383 = !DILocation(line: 443, column: 17, scope: !14327)
!14384 = !DILocation(line: 448, column: 13, scope: !14327)
!14385 = !DILocation(line: 449, column: 20, scope: !14386)
!14386 = distinct !DILexicalBlock(scope: !14323, file: !1038, line: 449, column: 20)
!14387 = !DILocation(line: 449, column: 26, scope: !14386)
!14388 = !DILocation(line: 449, column: 20, scope: !14323)
!14389 = !DILocation(line: 450, column: 13, scope: !14386)
!14390 = !DILocation(line: 451, column: 11, scope: !14324)
!14391 = !DILocation(line: 454, column: 19, scope: !14324)
!14392 = !DILocation(line: 454, column: 11, scope: !14324)
!14393 = !DILocation(line: 457, column: 19, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14395, file: !1038, line: 457, column: 19)
!14395 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 455, column: 13)
!14396 = !DILocation(line: 457, column: 19, scope: !14395)
!14397 = !DILocation(line: 458, column: 17, scope: !14394)
!14398 = !DILocation(line: 459, column: 15, scope: !14395)
!14399 = !DILocation(line: 462, column: 20, scope: !14400)
!14400 = distinct !DILexicalBlock(scope: !14395, file: !1038, line: 462, column: 19)
!14401 = !DILocation(line: 462, column: 26, scope: !14400)
!14402 = !DILocation(line: 463, column: 19, scope: !14400)
!14403 = !DILocation(line: 463, column: 22, scope: !14400)
!14404 = !DILocation(line: 463, column: 24, scope: !14400)
!14405 = !DILocation(line: 463, column: 30, scope: !14400)
!14406 = !DILocation(line: 463, column: 28, scope: !14400)
!14407 = !DILocation(line: 463, column: 38, scope: !14400)
!14408 = !DILocation(line: 463, column: 41, scope: !14400)
!14409 = !DILocation(line: 463, column: 45, scope: !14400)
!14410 = !DILocation(line: 463, column: 47, scope: !14400)
!14411 = !DILocation(line: 463, column: 52, scope: !14400)
!14412 = !DILocation(line: 462, column: 19, scope: !14395)
!14413 = !DILocation(line: 464, column: 25, scope: !14400)
!14414 = !DILocation(line: 464, column: 29, scope: !14400)
!14415 = !DILocation(line: 464, column: 31, scope: !14400)
!14416 = !DILocation(line: 464, column: 17, scope: !14400)
!14417 = !DILocation(line: 471, column: 25, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14419, file: !1038, line: 471, column: 25)
!14419 = distinct !DILexicalBlock(scope: !14400, file: !1038, line: 465, column: 19)
!14420 = !DILocation(line: 471, column: 25, scope: !14419)
!14421 = !DILocation(line: 472, column: 23, scope: !14418)
!14422 = !DILocation(line: 473, column: 25, scope: !14419)
!14423 = !DILocation(line: 473, column: 29, scope: !14419)
!14424 = !DILocation(line: 473, column: 31, scope: !14419)
!14425 = !DILocation(line: 473, column: 23, scope: !14419)
!14426 = !DILocation(line: 474, column: 23, scope: !14419)
!14427 = !DILocation(line: 475, column: 21, scope: !14419)
!14428 = !DILocation(line: 475, column: 21, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !1038, line: 475, column: 21)
!14430 = distinct !DILexicalBlock(scope: !14419, file: !1038, line: 475, column: 21)
!14431 = !DILocation(line: 475, column: 21, scope: !14430)
!14432 = !DILocation(line: 476, column: 21, scope: !14419)
!14433 = !DILocation(line: 476, column: 21, scope: !14434)
!14434 = distinct !DILexicalBlock(scope: !14435, file: !1038, line: 476, column: 21)
!14435 = distinct !DILexicalBlock(scope: !14419, file: !1038, line: 476, column: 21)
!14436 = !DILocation(line: 476, column: 21, scope: !14435)
!14437 = !DILocation(line: 477, column: 21, scope: !14419)
!14438 = !DILocation(line: 477, column: 21, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14440, file: !1038, line: 477, column: 21)
!14440 = distinct !DILexicalBlock(scope: !14419, file: !1038, line: 477, column: 21)
!14441 = !DILocation(line: 477, column: 21, scope: !14440)
!14442 = !DILocation(line: 478, column: 21, scope: !14419)
!14443 = !DILocation(line: 478, column: 21, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14445, file: !1038, line: 478, column: 21)
!14445 = distinct !DILexicalBlock(scope: !14419, file: !1038, line: 478, column: 21)
!14446 = !DILocation(line: 478, column: 21, scope: !14445)
!14447 = !DILocation(line: 479, column: 21, scope: !14419)
!14448 = !DILocation(line: 482, column: 21, scope: !14419)
!14449 = !DILocation(line: 483, column: 19, scope: !14419)
!14450 = !DILocation(line: 484, column: 15, scope: !14395)
!14451 = !DILocation(line: 487, column: 15, scope: !14395)
!14452 = !DILocation(line: 489, column: 11, scope: !14324)
!14453 = !DILocation(line: 491, column: 24, scope: !14324)
!14454 = !DILocation(line: 491, column: 31, scope: !14324)
!14455 = !DILocation(line: 492, column: 24, scope: !14324)
!14456 = !DILocation(line: 492, column: 31, scope: !14324)
!14457 = !DILocation(line: 493, column: 24, scope: !14324)
!14458 = !DILocation(line: 493, column: 31, scope: !14324)
!14459 = !DILocation(line: 494, column: 24, scope: !14324)
!14460 = !DILocation(line: 494, column: 31, scope: !14324)
!14461 = !DILocation(line: 495, column: 24, scope: !14324)
!14462 = !DILocation(line: 495, column: 31, scope: !14324)
!14463 = !DILocation(line: 496, column: 24, scope: !14324)
!14464 = !DILocation(line: 496, column: 31, scope: !14324)
!14465 = !DILocation(line: 497, column: 24, scope: !14324)
!14466 = !DILocation(line: 497, column: 31, scope: !14324)
!14467 = !DILocation(line: 498, column: 26, scope: !14324)
!14468 = !DILocation(line: 498, column: 24, scope: !14324)
!14469 = !DILocation(line: 500, column: 15, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 500, column: 15)
!14471 = !DILocation(line: 500, column: 29, scope: !14470)
!14472 = !DILocation(line: 500, column: 15, scope: !14324)
!14473 = !DILocation(line: 502, column: 19, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14475, file: !1038, line: 502, column: 19)
!14475 = distinct !DILexicalBlock(scope: !14470, file: !1038, line: 501, column: 13)
!14476 = !DILocation(line: 502, column: 19, scope: !14475)
!14477 = !DILocation(line: 503, column: 17, scope: !14474)
!14478 = !DILocation(line: 504, column: 15, scope: !14475)
!14479 = !DILocation(line: 509, column: 15, scope: !14480)
!14480 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 509, column: 15)
!14481 = !DILocation(line: 509, column: 33, scope: !14480)
!14482 = !DILocation(line: 509, column: 36, scope: !14480)
!14483 = !DILocation(line: 509, column: 55, scope: !14480)
!14484 = !DILocation(line: 509, column: 58, scope: !14480)
!14485 = !DILocation(line: 509, column: 15, scope: !14324)
!14486 = !DILocation(line: 510, column: 13, scope: !14480)
!14487 = !DILabel(scope: !14324, name: "c_and_shell_escape", file: !1038, line: 512)
!14488 = !DILocation(line: 512, column: 9, scope: !14324)
!14489 = !DILocation(line: 513, column: 15, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 513, column: 15)
!14491 = !DILocation(line: 513, column: 29, scope: !14490)
!14492 = !DILocation(line: 514, column: 15, scope: !14490)
!14493 = !DILocation(line: 514, column: 18, scope: !14490)
!14494 = !DILocation(line: 513, column: 15, scope: !14324)
!14495 = !DILocation(line: 515, column: 13, scope: !14490)
!14496 = !DILabel(scope: !14324, name: "c_escape", file: !1038, line: 517)
!14497 = !DILocation(line: 517, column: 9, scope: !14324)
!14498 = !DILocation(line: 518, column: 15, scope: !14499)
!14499 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 518, column: 15)
!14500 = !DILocation(line: 518, column: 15, scope: !14324)
!14501 = !DILocation(line: 520, column: 19, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14499, file: !1038, line: 519, column: 13)
!14503 = !DILocation(line: 520, column: 17, scope: !14502)
!14504 = !DILocation(line: 521, column: 15, scope: !14502)
!14505 = !DILocation(line: 523, column: 11, scope: !14324)
!14506 = !DILocation(line: 526, column: 18, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 526, column: 15)
!14508 = !DILocation(line: 526, column: 26, scope: !14507)
!14509 = !DILocation(line: 526, column: 15, scope: !14324)
!14510 = !DILocation(line: 526, column: 40, scope: !14507)
!14511 = !DILocation(line: 526, column: 47, scope: !14507)
!14512 = !DILocation(line: 526, column: 57, scope: !14507)
!14513 = !DILocation(line: 526, column: 65, scope: !14507)
!14514 = !DILocation(line: 527, column: 13, scope: !14507)
!14515 = !DILocation(line: 528, column: 11, scope: !14324)
!14516 = !DILocation(line: 530, column: 15, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 530, column: 15)
!14518 = !DILocation(line: 530, column: 17, scope: !14517)
!14519 = !DILocation(line: 530, column: 15, scope: !14324)
!14520 = !DILocation(line: 531, column: 13, scope: !14517)
!14521 = !DILocation(line: 532, column: 11, scope: !14324)
!14522 = !DILocation(line: 534, column: 36, scope: !14324)
!14523 = !DILocation(line: 535, column: 11, scope: !14324)
!14524 = !DILocation(line: 548, column: 15, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 548, column: 15)
!14526 = !DILocation(line: 548, column: 29, scope: !14525)
!14527 = !DILocation(line: 549, column: 15, scope: !14525)
!14528 = !DILocation(line: 549, column: 18, scope: !14525)
!14529 = !DILocation(line: 548, column: 15, scope: !14324)
!14530 = !DILocation(line: 550, column: 13, scope: !14525)
!14531 = !DILocation(line: 551, column: 11, scope: !14324)
!14532 = !DILocation(line: 554, column: 36, scope: !14324)
!14533 = !DILocation(line: 555, column: 36, scope: !14324)
!14534 = !DILocation(line: 556, column: 15, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 556, column: 15)
!14536 = !DILocation(line: 556, column: 29, scope: !14535)
!14537 = !DILocation(line: 556, column: 15, scope: !14324)
!14538 = !DILocation(line: 558, column: 19, scope: !14539)
!14539 = distinct !DILexicalBlock(scope: !14540, file: !1038, line: 558, column: 19)
!14540 = distinct !DILexicalBlock(scope: !14535, file: !1038, line: 557, column: 13)
!14541 = !DILocation(line: 558, column: 19, scope: !14540)
!14542 = !DILocation(line: 559, column: 17, scope: !14539)
!14543 = !DILocation(line: 561, column: 19, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !14540, file: !1038, line: 561, column: 19)
!14545 = !DILocation(line: 561, column: 30, scope: !14544)
!14546 = !DILocation(line: 561, column: 35, scope: !14544)
!14547 = !DILocation(line: 561, column: 19, scope: !14540)
!14548 = !DILocation(line: 566, column: 37, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14544, file: !1038, line: 562, column: 17)
!14550 = !DILocation(line: 566, column: 35, scope: !14549)
!14551 = !DILocation(line: 567, column: 30, scope: !14549)
!14552 = !DILocation(line: 568, column: 17, scope: !14549)
!14553 = !DILocation(line: 570, column: 15, scope: !14540)
!14554 = !DILocation(line: 570, column: 15, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14556, file: !1038, line: 570, column: 15)
!14556 = distinct !DILexicalBlock(scope: !14540, file: !1038, line: 570, column: 15)
!14557 = !DILocation(line: 570, column: 15, scope: !14556)
!14558 = !DILocation(line: 571, column: 15, scope: !14540)
!14559 = !DILocation(line: 571, column: 15, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14561, file: !1038, line: 571, column: 15)
!14561 = distinct !DILexicalBlock(scope: !14540, file: !1038, line: 571, column: 15)
!14562 = !DILocation(line: 571, column: 15, scope: !14561)
!14563 = !DILocation(line: 572, column: 15, scope: !14540)
!14564 = !DILocation(line: 572, column: 15, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14566, file: !1038, line: 572, column: 15)
!14566 = distinct !DILexicalBlock(scope: !14540, file: !1038, line: 572, column: 15)
!14567 = !DILocation(line: 572, column: 15, scope: !14566)
!14568 = !DILocation(line: 573, column: 40, scope: !14540)
!14569 = !DILocation(line: 574, column: 13, scope: !14540)
!14570 = !DILocation(line: 575, column: 11, scope: !14324)
!14571 = !DILocation(line: 599, column: 36, scope: !14324)
!14572 = !DILocation(line: 600, column: 11, scope: !14324)
!14573 = !DILocalVariable(name: "m", scope: !14574, file: !1038, line: 610, type: !52)
!14574 = distinct !DILexicalBlock(scope: !14324, file: !1038, line: 608, column: 11)
!14575 = !DILocation(line: 610, column: 20, scope: !14574)
!14576 = !DILocalVariable(name: "printable", scope: !14574, file: !1038, line: 612, type: !139)
!14577 = !DILocation(line: 612, column: 18, scope: !14574)
!14578 = !DILocation(line: 614, column: 17, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !14574, file: !1038, line: 614, column: 17)
!14580 = !DILocation(line: 614, column: 17, scope: !14574)
!14581 = !DILocation(line: 616, column: 19, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14579, file: !1038, line: 615, column: 15)
!14583 = !DILocation(line: 617, column: 29, scope: !14582)
!14584 = !{!14585, !14585, i64 0}
!14585 = !{!"short", !2657, i64 0}
!14586 = !DILocation(line: 617, column: 41, scope: !14582)
!14587 = !DILocation(line: 617, column: 27, scope: !14582)
!14588 = !DILocation(line: 618, column: 15, scope: !14582)
!14589 = !DILocalVariable(name: "mbstate", scope: !14590, file: !1038, line: 621, type: !1110)
!14590 = distinct !DILexicalBlock(scope: !14579, file: !1038, line: 620, column: 15)
!14591 = !DILocation(line: 621, column: 27, scope: !14590)
!14592 = !DILocation(line: 622, column: 17, scope: !14590)
!14593 = !DILocation(line: 624, column: 19, scope: !14590)
!14594 = !DILocation(line: 625, column: 27, scope: !14590)
!14595 = !DILocation(line: 626, column: 21, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !14590, file: !1038, line: 626, column: 21)
!14597 = !DILocation(line: 626, column: 29, scope: !14596)
!14598 = !DILocation(line: 626, column: 21, scope: !14590)
!14599 = !DILocation(line: 627, column: 37, scope: !14596)
!14600 = !DILocation(line: 627, column: 29, scope: !14596)
!14601 = !DILocation(line: 627, column: 27, scope: !14596)
!14602 = !DILocation(line: 627, column: 19, scope: !14596)
!14603 = !DILocation(line: 629, column: 17, scope: !14590)
!14604 = !DILocalVariable(name: "w", scope: !14605, file: !1038, line: 631, type: !1124)
!14605 = distinct !DILexicalBlock(scope: !14590, file: !1038, line: 630, column: 19)
!14606 = !DILocation(line: 631, column: 29, scope: !14605)
!14607 = !DILocalVariable(name: "bytes", scope: !14605, file: !1038, line: 632, type: !52)
!14608 = !DILocation(line: 632, column: 28, scope: !14605)
!14609 = !DILocation(line: 632, column: 50, scope: !14605)
!14610 = !DILocation(line: 632, column: 54, scope: !14605)
!14611 = !DILocation(line: 632, column: 58, scope: !14605)
!14612 = !DILocation(line: 632, column: 56, scope: !14605)
!14613 = !DILocation(line: 633, column: 45, scope: !14605)
!14614 = !DILocation(line: 633, column: 56, scope: !14605)
!14615 = !DILocation(line: 633, column: 60, scope: !14605)
!14616 = !DILocation(line: 633, column: 58, scope: !14605)
!14617 = !DILocation(line: 633, column: 53, scope: !14605)
!14618 = !DILocation(line: 632, column: 36, scope: !14605)
!14619 = !DILocation(line: 634, column: 25, scope: !14620)
!14620 = distinct !DILexicalBlock(scope: !14605, file: !1038, line: 634, column: 25)
!14621 = !DILocation(line: 634, column: 31, scope: !14620)
!14622 = !DILocation(line: 634, column: 25, scope: !14605)
!14623 = !DILocation(line: 635, column: 23, scope: !14620)
!14624 = !DILocation(line: 636, column: 30, scope: !14625)
!14625 = distinct !DILexicalBlock(scope: !14620, file: !1038, line: 636, column: 30)
!14626 = !DILocation(line: 636, column: 36, scope: !14625)
!14627 = !DILocation(line: 636, column: 30, scope: !14620)
!14628 = !DILocation(line: 638, column: 35, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14625, file: !1038, line: 637, column: 23)
!14630 = !DILocation(line: 639, column: 25, scope: !14629)
!14631 = !DILocation(line: 641, column: 30, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14625, file: !1038, line: 641, column: 30)
!14633 = !DILocation(line: 641, column: 36, scope: !14632)
!14634 = !DILocation(line: 641, column: 30, scope: !14625)
!14635 = !DILocation(line: 643, column: 35, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14632, file: !1038, line: 642, column: 23)
!14637 = !DILocation(line: 644, column: 25, scope: !14636)
!14638 = !DILocation(line: 644, column: 32, scope: !14636)
!14639 = !DILocation(line: 644, column: 36, scope: !14636)
!14640 = !DILocation(line: 644, column: 34, scope: !14636)
!14641 = !DILocation(line: 644, column: 40, scope: !14636)
!14642 = !DILocation(line: 644, column: 38, scope: !14636)
!14643 = !DILocation(line: 644, column: 48, scope: !14636)
!14644 = !DILocation(line: 644, column: 51, scope: !14636)
!14645 = !DILocation(line: 644, column: 55, scope: !14636)
!14646 = !DILocation(line: 644, column: 59, scope: !14636)
!14647 = !DILocation(line: 644, column: 57, scope: !14636)
!14648 = !DILocation(line: 0, scope: !14636)
!14649 = !DILocation(line: 645, column: 28, scope: !14636)
!14650 = distinct !{!14650, !14637, !14649}
!14651 = !DILocation(line: 646, column: 25, scope: !14636)
!14652 = !DILocation(line: 654, column: 44, scope: !14653)
!14653 = distinct !DILexicalBlock(scope: !14654, file: !1038, line: 654, column: 29)
!14654 = distinct !DILexicalBlock(scope: !14632, file: !1038, line: 649, column: 23)
!14655 = !DILocation(line: 655, column: 29, scope: !14653)
!14656 = !DILocation(line: 655, column: 32, scope: !14653)
!14657 = !DILocation(line: 655, column: 46, scope: !14653)
!14658 = !DILocation(line: 654, column: 29, scope: !14654)
!14659 = !DILocalVariable(name: "j", scope: !14660, file: !1038, line: 657, type: !52)
!14660 = distinct !DILexicalBlock(scope: !14653, file: !1038, line: 656, column: 27)
!14661 = !DILocation(line: 657, column: 36, scope: !14660)
!14662 = !DILocation(line: 658, column: 36, scope: !14663)
!14663 = distinct !DILexicalBlock(scope: !14660, file: !1038, line: 658, column: 29)
!14664 = !DILocation(line: 658, column: 34, scope: !14663)
!14665 = !DILocation(line: 658, column: 41, scope: !14666)
!14666 = distinct !DILexicalBlock(scope: !14663, file: !1038, line: 658, column: 29)
!14667 = !DILocation(line: 658, column: 45, scope: !14666)
!14668 = !DILocation(line: 658, column: 43, scope: !14666)
!14669 = !DILocation(line: 658, column: 29, scope: !14663)
!14670 = !DILocation(line: 659, column: 39, scope: !14666)
!14671 = !DILocation(line: 659, column: 43, scope: !14666)
!14672 = !DILocation(line: 659, column: 47, scope: !14666)
!14673 = !DILocation(line: 659, column: 45, scope: !14666)
!14674 = !DILocation(line: 659, column: 51, scope: !14666)
!14675 = !DILocation(line: 659, column: 49, scope: !14666)
!14676 = !DILocation(line: 659, column: 31, scope: !14666)
!14677 = !DILocation(line: 663, column: 35, scope: !14678)
!14678 = distinct !DILexicalBlock(scope: !14666, file: !1038, line: 660, column: 33)
!14679 = !DILocation(line: 666, column: 35, scope: !14678)
!14680 = !DILocation(line: 667, column: 33, scope: !14678)
!14681 = !DILocation(line: 658, column: 53, scope: !14666)
!14682 = !DILocation(line: 658, column: 29, scope: !14666)
!14683 = distinct !{!14683, !14669, !14684}
!14684 = !DILocation(line: 667, column: 33, scope: !14663)
!14685 = !DILocation(line: 668, column: 27, scope: !14660)
!14686 = !DILocation(line: 670, column: 41, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14654, file: !1038, line: 670, column: 29)
!14688 = !DILocation(line: 670, column: 31, scope: !14687)
!14689 = !DILocation(line: 670, column: 29, scope: !14654)
!14690 = !DILocation(line: 671, column: 37, scope: !14687)
!14691 = !DILocation(line: 671, column: 27, scope: !14687)
!14692 = !DILocation(line: 672, column: 30, scope: !14654)
!14693 = !DILocation(line: 672, column: 27, scope: !14654)
!14694 = !DILocation(line: 674, column: 19, scope: !14605)
!14695 = !DILocation(line: 675, column: 26, scope: !14590)
!14696 = !DILocation(line: 675, column: 24, scope: !14590)
!14697 = distinct !{!14697, !14603, !14698}
!14698 = !DILocation(line: 675, column: 44, scope: !14590)
!14699 = !DILocation(line: 678, column: 40, scope: !14574)
!14700 = !DILocation(line: 678, column: 38, scope: !14574)
!14701 = !DILocation(line: 680, column: 21, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14574, file: !1038, line: 680, column: 17)
!14703 = !DILocation(line: 680, column: 19, scope: !14702)
!14704 = !DILocation(line: 680, column: 23, scope: !14702)
!14705 = !DILocation(line: 680, column: 27, scope: !14702)
!14706 = !DILocation(line: 680, column: 45, scope: !14702)
!14707 = !DILocation(line: 680, column: 50, scope: !14702)
!14708 = !DILocation(line: 680, column: 17, scope: !14574)
!14709 = !DILocalVariable(name: "ilim", scope: !14710, file: !1038, line: 684, type: !52)
!14710 = distinct !DILexicalBlock(scope: !14702, file: !1038, line: 681, column: 15)
!14711 = !DILocation(line: 684, column: 24, scope: !14710)
!14712 = !DILocation(line: 684, column: 31, scope: !14710)
!14713 = !DILocation(line: 684, column: 35, scope: !14710)
!14714 = !DILocation(line: 684, column: 33, scope: !14710)
!14715 = !DILocation(line: 686, column: 17, scope: !14710)
!14716 = !DILocation(line: 688, column: 25, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14718, file: !1038, line: 688, column: 25)
!14718 = distinct !DILexicalBlock(scope: !14719, file: !1038, line: 687, column: 19)
!14719 = distinct !DILexicalBlock(scope: !14720, file: !1038, line: 686, column: 17)
!14720 = distinct !DILexicalBlock(scope: !14710, file: !1038, line: 686, column: 17)
!14721 = !DILocation(line: 688, column: 43, scope: !14717)
!14722 = !DILocation(line: 688, column: 48, scope: !14717)
!14723 = !DILocation(line: 688, column: 25, scope: !14718)
!14724 = !DILocation(line: 690, column: 25, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14717, file: !1038, line: 689, column: 23)
!14726 = !DILocation(line: 690, column: 25, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14728, file: !1038, line: 690, column: 25)
!14728 = distinct !DILexicalBlock(scope: !14725, file: !1038, line: 690, column: 25)
!14729 = !DILocation(line: 690, column: 25, scope: !14728)
!14730 = !DILocation(line: 690, column: 25, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14728, file: !1038, line: 690, column: 25)
!14732 = !DILocation(line: 690, column: 25, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14731, file: !1038, line: 690, column: 25)
!14734 = !DILocation(line: 690, column: 25, scope: !14735)
!14735 = distinct !DILexicalBlock(scope: !14736, file: !1038, line: 690, column: 25)
!14736 = distinct !DILexicalBlock(scope: !14733, file: !1038, line: 690, column: 25)
!14737 = !DILocation(line: 690, column: 25, scope: !14736)
!14738 = !DILocation(line: 690, column: 25, scope: !14739)
!14739 = distinct !DILexicalBlock(scope: !14740, file: !1038, line: 690, column: 25)
!14740 = distinct !DILexicalBlock(scope: !14733, file: !1038, line: 690, column: 25)
!14741 = !DILocation(line: 690, column: 25, scope: !14740)
!14742 = !DILocation(line: 690, column: 25, scope: !14743)
!14743 = distinct !DILexicalBlock(scope: !14744, file: !1038, line: 690, column: 25)
!14744 = distinct !DILexicalBlock(scope: !14733, file: !1038, line: 690, column: 25)
!14745 = !DILocation(line: 690, column: 25, scope: !14744)
!14746 = !DILocation(line: 690, column: 25, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14748, file: !1038, line: 690, column: 25)
!14748 = distinct !DILexicalBlock(scope: !14728, file: !1038, line: 690, column: 25)
!14749 = !DILocation(line: 690, column: 25, scope: !14748)
!14750 = !DILocation(line: 691, column: 25, scope: !14725)
!14751 = !DILocation(line: 691, column: 25, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14753, file: !1038, line: 691, column: 25)
!14753 = distinct !DILexicalBlock(scope: !14725, file: !1038, line: 691, column: 25)
!14754 = !DILocation(line: 691, column: 25, scope: !14753)
!14755 = !DILocation(line: 692, column: 25, scope: !14725)
!14756 = !DILocation(line: 692, column: 25, scope: !14757)
!14757 = distinct !DILexicalBlock(scope: !14758, file: !1038, line: 692, column: 25)
!14758 = distinct !DILexicalBlock(scope: !14725, file: !1038, line: 692, column: 25)
!14759 = !DILocation(line: 692, column: 25, scope: !14758)
!14760 = !DILocation(line: 693, column: 36, scope: !14725)
!14761 = !DILocation(line: 693, column: 38, scope: !14725)
!14762 = !DILocation(line: 693, column: 33, scope: !14725)
!14763 = !DILocation(line: 693, column: 29, scope: !14725)
!14764 = !DILocation(line: 693, column: 27, scope: !14725)
!14765 = !DILocation(line: 694, column: 23, scope: !14725)
!14766 = !DILocation(line: 695, column: 30, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14717, file: !1038, line: 695, column: 30)
!14768 = !DILocation(line: 695, column: 30, scope: !14717)
!14769 = !DILocation(line: 697, column: 25, scope: !14770)
!14770 = distinct !DILexicalBlock(scope: !14767, file: !1038, line: 696, column: 23)
!14771 = !DILocation(line: 697, column: 25, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14773, file: !1038, line: 697, column: 25)
!14773 = distinct !DILexicalBlock(scope: !14770, file: !1038, line: 697, column: 25)
!14774 = !DILocation(line: 697, column: 25, scope: !14773)
!14775 = !DILocation(line: 698, column: 40, scope: !14770)
!14776 = !DILocation(line: 699, column: 23, scope: !14770)
!14777 = !DILocation(line: 700, column: 25, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14718, file: !1038, line: 700, column: 25)
!14779 = !DILocation(line: 700, column: 33, scope: !14778)
!14780 = !DILocation(line: 700, column: 35, scope: !14778)
!14781 = !DILocation(line: 700, column: 30, scope: !14778)
!14782 = !DILocation(line: 700, column: 25, scope: !14718)
!14783 = !DILocation(line: 701, column: 23, scope: !14778)
!14784 = !DILocation(line: 702, column: 21, scope: !14718)
!14785 = !DILocation(line: 702, column: 21, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !1038, line: 702, column: 21)
!14787 = distinct !DILexicalBlock(scope: !14718, file: !1038, line: 702, column: 21)
!14788 = !DILocation(line: 702, column: 21, scope: !14787)
!14789 = !DILocation(line: 702, column: 21, scope: !14790)
!14790 = distinct !DILexicalBlock(scope: !14786, file: !1038, line: 702, column: 21)
!14791 = !DILocation(line: 702, column: 21, scope: !14792)
!14792 = distinct !DILexicalBlock(scope: !14793, file: !1038, line: 702, column: 21)
!14793 = distinct !DILexicalBlock(scope: !14790, file: !1038, line: 702, column: 21)
!14794 = !DILocation(line: 702, column: 21, scope: !14793)
!14795 = !DILocation(line: 702, column: 21, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14797, file: !1038, line: 702, column: 21)
!14797 = distinct !DILexicalBlock(scope: !14790, file: !1038, line: 702, column: 21)
!14798 = !DILocation(line: 702, column: 21, scope: !14797)
!14799 = !DILocation(line: 703, column: 21, scope: !14718)
!14800 = !DILocation(line: 703, column: 21, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14802, file: !1038, line: 703, column: 21)
!14802 = distinct !DILexicalBlock(scope: !14718, file: !1038, line: 703, column: 21)
!14803 = !DILocation(line: 703, column: 21, scope: !14802)
!14804 = !DILocation(line: 704, column: 25, scope: !14718)
!14805 = !DILocation(line: 704, column: 29, scope: !14718)
!14806 = !DILocation(line: 704, column: 23, scope: !14718)
!14807 = !DILocation(line: 686, column: 17, scope: !14719)
!14808 = distinct !{!14808, !14809, !14810}
!14809 = !DILocation(line: 686, column: 17, scope: !14720)
!14810 = !DILocation(line: 705, column: 19, scope: !14720)
!14811 = !DILocation(line: 707, column: 17, scope: !14710)
!14812 = !DILocation(line: 710, column: 9, scope: !14324)
!14813 = !DILocation(line: 712, column: 16, scope: !14814)
!14814 = distinct !DILexicalBlock(scope: !14270, file: !1038, line: 712, column: 11)
!14815 = !DILocation(line: 712, column: 34, scope: !14814)
!14816 = !DILocation(line: 712, column: 37, scope: !14814)
!14817 = !DILocation(line: 712, column: 51, scope: !14814)
!14818 = !DILocation(line: 713, column: 15, scope: !14814)
!14819 = !DILocation(line: 713, column: 18, scope: !14814)
!14820 = !DILocation(line: 714, column: 14, scope: !14814)
!14821 = !DILocation(line: 714, column: 17, scope: !14814)
!14822 = !DILocation(line: 715, column: 14, scope: !14814)
!14823 = !DILocation(line: 715, column: 17, scope: !14814)
!14824 = !DILocation(line: 715, column: 33, scope: !14814)
!14825 = !DILocation(line: 715, column: 35, scope: !14814)
!14826 = !DILocation(line: 715, column: 51, scope: !14814)
!14827 = !DILocation(line: 715, column: 53, scope: !14814)
!14828 = !DILocation(line: 715, column: 47, scope: !14814)
!14829 = !DILocation(line: 715, column: 65, scope: !14814)
!14830 = !DILocation(line: 716, column: 11, scope: !14814)
!14831 = !DILocation(line: 716, column: 15, scope: !14814)
!14832 = !DILocation(line: 712, column: 11, scope: !14270)
!14833 = !DILocation(line: 717, column: 9, scope: !14814)
!14834 = !DILabel(scope: !14270, name: "store_escape", file: !1038, line: 719)
!14835 = !DILocation(line: 719, column: 5, scope: !14270)
!14836 = !DILocation(line: 720, column: 7, scope: !14270)
!14837 = !DILocation(line: 720, column: 7, scope: !14838)
!14838 = distinct !DILexicalBlock(scope: !14839, file: !1038, line: 720, column: 7)
!14839 = distinct !DILexicalBlock(scope: !14270, file: !1038, line: 720, column: 7)
!14840 = !DILocation(line: 720, column: 7, scope: !14839)
!14841 = !DILocation(line: 720, column: 7, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14839, file: !1038, line: 720, column: 7)
!14843 = !DILocation(line: 720, column: 7, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14842, file: !1038, line: 720, column: 7)
!14845 = !DILocation(line: 720, column: 7, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !1038, line: 720, column: 7)
!14847 = distinct !DILexicalBlock(scope: !14844, file: !1038, line: 720, column: 7)
!14848 = !DILocation(line: 720, column: 7, scope: !14847)
!14849 = !DILocation(line: 720, column: 7, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14851, file: !1038, line: 720, column: 7)
!14851 = distinct !DILexicalBlock(scope: !14844, file: !1038, line: 720, column: 7)
!14852 = !DILocation(line: 720, column: 7, scope: !14851)
!14853 = !DILocation(line: 720, column: 7, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14855, file: !1038, line: 720, column: 7)
!14855 = distinct !DILexicalBlock(scope: !14844, file: !1038, line: 720, column: 7)
!14856 = !DILocation(line: 720, column: 7, scope: !14855)
!14857 = !DILocation(line: 720, column: 7, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !1038, line: 720, column: 7)
!14859 = distinct !DILexicalBlock(scope: !14839, file: !1038, line: 720, column: 7)
!14860 = !DILocation(line: 720, column: 7, scope: !14859)
!14861 = !DILabel(scope: !14270, name: "store_c", file: !1038, line: 722)
!14862 = !DILocation(line: 722, column: 5, scope: !14270)
!14863 = !DILocation(line: 723, column: 7, scope: !14270)
!14864 = !DILocation(line: 723, column: 7, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14866, file: !1038, line: 723, column: 7)
!14866 = distinct !DILexicalBlock(scope: !14270, file: !1038, line: 723, column: 7)
!14867 = !DILocation(line: 723, column: 7, scope: !14866)
!14868 = !DILocation(line: 723, column: 7, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14865, file: !1038, line: 723, column: 7)
!14870 = !DILocation(line: 723, column: 7, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14872, file: !1038, line: 723, column: 7)
!14872 = distinct !DILexicalBlock(scope: !14869, file: !1038, line: 723, column: 7)
!14873 = !DILocation(line: 723, column: 7, scope: !14872)
!14874 = !DILocation(line: 723, column: 7, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14876, file: !1038, line: 723, column: 7)
!14876 = distinct !DILexicalBlock(scope: !14869, file: !1038, line: 723, column: 7)
!14877 = !DILocation(line: 723, column: 7, scope: !14876)
!14878 = !DILocation(line: 724, column: 7, scope: !14270)
!14879 = !DILocation(line: 724, column: 7, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !1038, line: 724, column: 7)
!14881 = distinct !DILexicalBlock(scope: !14270, file: !1038, line: 724, column: 7)
!14882 = !DILocation(line: 724, column: 7, scope: !14881)
!14883 = !DILocation(line: 726, column: 13, scope: !14884)
!14884 = distinct !DILexicalBlock(scope: !14270, file: !1038, line: 726, column: 11)
!14885 = !DILocation(line: 726, column: 11, scope: !14270)
!14886 = !DILocation(line: 727, column: 38, scope: !14884)
!14887 = !DILocation(line: 727, column: 9, scope: !14884)
!14888 = !DILocation(line: 728, column: 5, scope: !14270)
!14889 = !DILocation(line: 400, column: 75, scope: !14259)
!14890 = !DILocation(line: 400, column: 3, scope: !14259)
!14891 = distinct !{!14891, !14268, !14892}
!14892 = !DILocation(line: 728, column: 5, scope: !14256)
!14893 = !DILocation(line: 730, column: 7, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14120, file: !1038, line: 730, column: 7)
!14895 = !DILocation(line: 730, column: 11, scope: !14894)
!14896 = !DILocation(line: 730, column: 16, scope: !14894)
!14897 = !DILocation(line: 730, column: 19, scope: !14894)
!14898 = !DILocation(line: 730, column: 33, scope: !14894)
!14899 = !DILocation(line: 731, column: 7, scope: !14894)
!14900 = !DILocation(line: 731, column: 10, scope: !14894)
!14901 = !DILocation(line: 730, column: 7, scope: !14120)
!14902 = !DILocation(line: 732, column: 5, scope: !14894)
!14903 = !DILocation(line: 738, column: 7, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14120, file: !1038, line: 738, column: 7)
!14905 = !DILocation(line: 738, column: 21, scope: !14904)
!14906 = !DILocation(line: 738, column: 51, scope: !14904)
!14907 = !DILocation(line: 738, column: 56, scope: !14904)
!14908 = !DILocation(line: 739, column: 7, scope: !14904)
!14909 = !DILocation(line: 739, column: 10, scope: !14904)
!14910 = !DILocation(line: 738, column: 7, scope: !14120)
!14911 = !DILocation(line: 741, column: 11, scope: !14912)
!14912 = distinct !DILexicalBlock(scope: !14913, file: !1038, line: 741, column: 11)
!14913 = distinct !DILexicalBlock(scope: !14904, file: !1038, line: 740, column: 5)
!14914 = !DILocation(line: 741, column: 11, scope: !14913)
!14915 = !DILocation(line: 742, column: 42, scope: !14912)
!14916 = !DILocation(line: 742, column: 50, scope: !14912)
!14917 = !DILocation(line: 742, column: 67, scope: !14912)
!14918 = !DILocation(line: 742, column: 72, scope: !14912)
!14919 = !DILocation(line: 744, column: 42, scope: !14912)
!14920 = !DILocation(line: 744, column: 49, scope: !14912)
!14921 = !DILocation(line: 745, column: 42, scope: !14912)
!14922 = !DILocation(line: 745, column: 54, scope: !14912)
!14923 = !DILocation(line: 742, column: 16, scope: !14912)
!14924 = !DILocation(line: 742, column: 9, scope: !14912)
!14925 = !DILocation(line: 746, column: 18, scope: !14926)
!14926 = distinct !DILexicalBlock(scope: !14912, file: !1038, line: 746, column: 16)
!14927 = !DILocation(line: 746, column: 29, scope: !14926)
!14928 = !DILocation(line: 746, column: 32, scope: !14926)
!14929 = !DILocation(line: 746, column: 16, scope: !14912)
!14930 = !DILocation(line: 749, column: 24, scope: !14931)
!14931 = distinct !DILexicalBlock(scope: !14926, file: !1038, line: 747, column: 9)
!14932 = !DILocation(line: 749, column: 22, scope: !14931)
!14933 = !DILocation(line: 750, column: 15, scope: !14931)
!14934 = !DILocation(line: 751, column: 11, scope: !14931)
!14935 = !DILocation(line: 753, column: 5, scope: !14913)
!14936 = !DILocation(line: 755, column: 7, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14120, file: !1038, line: 755, column: 7)
!14938 = !DILocation(line: 755, column: 20, scope: !14937)
!14939 = !DILocation(line: 755, column: 24, scope: !14937)
!14940 = !DILocation(line: 755, column: 7, scope: !14120)
!14941 = !DILocation(line: 756, column: 5, scope: !14937)
!14942 = !DILocation(line: 756, column: 13, scope: !14943)
!14943 = distinct !DILexicalBlock(scope: !14944, file: !1038, line: 756, column: 5)
!14944 = distinct !DILexicalBlock(scope: !14937, file: !1038, line: 756, column: 5)
!14945 = !DILocation(line: 756, column: 12, scope: !14943)
!14946 = !DILocation(line: 756, column: 5, scope: !14944)
!14947 = !DILocation(line: 757, column: 7, scope: !14943)
!14948 = !DILocation(line: 757, column: 7, scope: !14949)
!14949 = distinct !DILexicalBlock(scope: !14950, file: !1038, line: 757, column: 7)
!14950 = distinct !DILexicalBlock(scope: !14943, file: !1038, line: 757, column: 7)
!14951 = !DILocation(line: 757, column: 7, scope: !14950)
!14952 = !DILocation(line: 756, column: 39, scope: !14943)
!14953 = !DILocation(line: 756, column: 5, scope: !14943)
!14954 = distinct !{!14954, !14946, !14955}
!14955 = !DILocation(line: 757, column: 7, scope: !14944)
!14956 = !DILocation(line: 759, column: 7, scope: !14957)
!14957 = distinct !DILexicalBlock(scope: !14120, file: !1038, line: 759, column: 7)
!14958 = !DILocation(line: 759, column: 13, scope: !14957)
!14959 = !DILocation(line: 759, column: 11, scope: !14957)
!14960 = !DILocation(line: 759, column: 7, scope: !14120)
!14961 = !DILocation(line: 760, column: 5, scope: !14957)
!14962 = !DILocation(line: 760, column: 12, scope: !14957)
!14963 = !DILocation(line: 760, column: 17, scope: !14957)
!14964 = !DILocation(line: 761, column: 10, scope: !14120)
!14965 = !DILocation(line: 761, column: 3, scope: !14120)
!14966 = !DILabel(scope: !14120, name: "force_outer_quoting_style", file: !1038, line: 763)
!14967 = !DILocation(line: 763, column: 2, scope: !14120)
!14968 = !DILocation(line: 766, column: 7, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14120, file: !1038, line: 766, column: 7)
!14970 = !DILocation(line: 766, column: 21, scope: !14969)
!14971 = !DILocation(line: 766, column: 51, scope: !14969)
!14972 = !DILocation(line: 766, column: 54, scope: !14969)
!14973 = !DILocation(line: 766, column: 7, scope: !14120)
!14974 = !DILocation(line: 767, column: 19, scope: !14969)
!14975 = !DILocation(line: 767, column: 5, scope: !14969)
!14976 = !DILocation(line: 768, column: 36, scope: !14120)
!14977 = !DILocation(line: 768, column: 44, scope: !14120)
!14978 = !DILocation(line: 768, column: 56, scope: !14120)
!14979 = !DILocation(line: 768, column: 61, scope: !14120)
!14980 = !DILocation(line: 769, column: 36, scope: !14120)
!14981 = !DILocation(line: 770, column: 36, scope: !14120)
!14982 = !DILocation(line: 770, column: 42, scope: !14120)
!14983 = !DILocation(line: 771, column: 36, scope: !14120)
!14984 = !DILocation(line: 771, column: 48, scope: !14120)
!14985 = !DILocation(line: 768, column: 10, scope: !14120)
!14986 = !DILocation(line: 768, column: 3, scope: !14120)
!14987 = !DILocation(line: 772, column: 1, scope: !14120)
!14988 = distinct !DISubprogram(name: "gettext_quote", scope: !1038, file: !1038, line: 207, type: !1125, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!14989 = !DILocalVariable(name: "msgid", arg: 1, scope: !14988, file: !1038, line: 207, type: !177)
!14990 = !DILocation(line: 207, column: 28, scope: !14988)
!14991 = !DILocalVariable(name: "s", arg: 2, scope: !14988, file: !1038, line: 207, type: !1012)
!14992 = !DILocation(line: 207, column: 54, scope: !14988)
!14993 = !DILocalVariable(name: "translation", scope: !14988, file: !1038, line: 209, type: !177)
!14994 = !DILocation(line: 209, column: 15, scope: !14988)
!14995 = !DILocation(line: 209, column: 29, scope: !14988)
!14996 = !DILocalVariable(name: "locale_code", scope: !14988, file: !1038, line: 210, type: !177)
!14997 = !DILocation(line: 210, column: 15, scope: !14988)
!14998 = !DILocation(line: 212, column: 7, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14988, file: !1038, line: 212, column: 7)
!15000 = !DILocation(line: 212, column: 22, scope: !14999)
!15001 = !DILocation(line: 212, column: 19, scope: !14999)
!15002 = !DILocation(line: 212, column: 7, scope: !14988)
!15003 = !DILocation(line: 213, column: 12, scope: !14999)
!15004 = !DILocation(line: 213, column: 5, scope: !14999)
!15005 = !DILocation(line: 233, column: 17, scope: !14988)
!15006 = !DILocation(line: 233, column: 15, scope: !14988)
!15007 = !DILocation(line: 234, column: 7, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !14988, file: !1038, line: 234, column: 7)
!15009 = !DILocation(line: 234, column: 7, scope: !14988)
!15010 = !DILocation(line: 235, column: 12, scope: !15008)
!15011 = !DILocation(line: 235, column: 21, scope: !15008)
!15012 = !DILocation(line: 235, column: 5, scope: !15008)
!15013 = !DILocation(line: 236, column: 7, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !14988, file: !1038, line: 236, column: 7)
!15015 = !DILocation(line: 236, column: 7, scope: !14988)
!15016 = !DILocation(line: 237, column: 12, scope: !15014)
!15017 = !DILocation(line: 237, column: 21, scope: !15014)
!15018 = !DILocation(line: 237, column: 5, scope: !15014)
!15019 = !DILocation(line: 239, column: 11, scope: !14988)
!15020 = !DILocation(line: 239, column: 13, scope: !14988)
!15021 = !DILocation(line: 239, column: 3, scope: !14988)
!15022 = !DILocation(line: 240, column: 1, scope: !14988)
!15023 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1038, file: !1038, line: 799, type: !1061, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15024 = !DILocalVariable(name: "arg", arg: 1, scope: !15023, file: !1038, line: 799, type: !177)
!15025 = !DILocation(line: 799, column: 29, scope: !15023)
!15026 = !DILocalVariable(name: "argsize", arg: 2, scope: !15023, file: !1038, line: 799, type: !52)
!15027 = !DILocation(line: 799, column: 41, scope: !15023)
!15028 = !DILocalVariable(name: "o", arg: 3, scope: !15023, file: !1038, line: 800, type: !1048)
!15029 = !DILocation(line: 800, column: 47, scope: !15023)
!15030 = !DILocation(line: 802, column: 30, scope: !15023)
!15031 = !DILocation(line: 802, column: 35, scope: !15023)
!15032 = !DILocation(line: 802, column: 50, scope: !15023)
!15033 = !DILocation(line: 802, column: 10, scope: !15023)
!15034 = !DILocation(line: 802, column: 3, scope: !15023)
!15035 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1038, file: !1038, line: 812, type: !1063, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15036 = !DILocalVariable(name: "arg", arg: 1, scope: !15035, file: !1038, line: 812, type: !177)
!15037 = !DILocation(line: 812, column: 33, scope: !15035)
!15038 = !DILocalVariable(name: "argsize", arg: 2, scope: !15035, file: !1038, line: 812, type: !52)
!15039 = !DILocation(line: 812, column: 45, scope: !15035)
!15040 = !DILocalVariable(name: "size", arg: 3, scope: !15035, file: !1038, line: 812, type: !694)
!15041 = !DILocation(line: 812, column: 62, scope: !15035)
!15042 = !DILocalVariable(name: "o", arg: 4, scope: !15035, file: !1038, line: 813, type: !1048)
!15043 = !DILocation(line: 813, column: 51, scope: !15035)
!15044 = !DILocalVariable(name: "p", scope: !15035, file: !1038, line: 815, type: !1048)
!15045 = !DILocation(line: 815, column: 33, scope: !15035)
!15046 = !DILocation(line: 815, column: 37, scope: !15035)
!15047 = !DILocation(line: 815, column: 41, scope: !15035)
!15048 = !DILocalVariable(name: "e", scope: !15035, file: !1038, line: 816, type: !5)
!15049 = !DILocation(line: 816, column: 7, scope: !15035)
!15050 = !DILocation(line: 816, column: 11, scope: !15035)
!15051 = !DILocalVariable(name: "flags", scope: !15035, file: !1038, line: 818, type: !5)
!15052 = !DILocation(line: 818, column: 7, scope: !15035)
!15053 = !DILocation(line: 818, column: 15, scope: !15035)
!15054 = !DILocation(line: 818, column: 18, scope: !15035)
!15055 = !DILocation(line: 818, column: 27, scope: !15035)
!15056 = !DILocation(line: 818, column: 24, scope: !15035)
!15057 = !DILocalVariable(name: "bufsize", scope: !15035, file: !1038, line: 819, type: !52)
!15058 = !DILocation(line: 819, column: 10, scope: !15035)
!15059 = !DILocation(line: 819, column: 52, scope: !15035)
!15060 = !DILocation(line: 819, column: 57, scope: !15035)
!15061 = !DILocation(line: 819, column: 66, scope: !15035)
!15062 = !DILocation(line: 819, column: 69, scope: !15035)
!15063 = !DILocation(line: 820, column: 46, scope: !15035)
!15064 = !DILocation(line: 820, column: 53, scope: !15035)
!15065 = !DILocation(line: 820, column: 56, scope: !15035)
!15066 = !DILocation(line: 821, column: 46, scope: !15035)
!15067 = !DILocation(line: 821, column: 49, scope: !15035)
!15068 = !DILocation(line: 822, column: 46, scope: !15035)
!15069 = !DILocation(line: 822, column: 49, scope: !15035)
!15070 = !DILocation(line: 819, column: 20, scope: !15035)
!15071 = !DILocation(line: 822, column: 62, scope: !15035)
!15072 = !DILocalVariable(name: "buf", scope: !15035, file: !1038, line: 823, type: !7)
!15073 = !DILocation(line: 823, column: 9, scope: !15035)
!15074 = !DILocation(line: 823, column: 27, scope: !15035)
!15075 = !DILocation(line: 823, column: 15, scope: !15035)
!15076 = !DILocation(line: 824, column: 29, scope: !15035)
!15077 = !DILocation(line: 824, column: 34, scope: !15035)
!15078 = !DILocation(line: 824, column: 43, scope: !15035)
!15079 = !DILocation(line: 824, column: 48, scope: !15035)
!15080 = !DILocation(line: 824, column: 57, scope: !15035)
!15081 = !DILocation(line: 824, column: 60, scope: !15035)
!15082 = !DILocation(line: 824, column: 67, scope: !15035)
!15083 = !DILocation(line: 825, column: 29, scope: !15035)
!15084 = !DILocation(line: 825, column: 32, scope: !15035)
!15085 = !DILocation(line: 826, column: 29, scope: !15035)
!15086 = !DILocation(line: 826, column: 32, scope: !15035)
!15087 = !DILocation(line: 826, column: 44, scope: !15035)
!15088 = !DILocation(line: 826, column: 47, scope: !15035)
!15089 = !DILocation(line: 824, column: 3, scope: !15035)
!15090 = !DILocation(line: 827, column: 11, scope: !15035)
!15091 = !DILocation(line: 827, column: 3, scope: !15035)
!15092 = !DILocation(line: 827, column: 9, scope: !15035)
!15093 = !DILocation(line: 828, column: 7, scope: !15094)
!15094 = distinct !DILexicalBlock(scope: !15035, file: !1038, line: 828, column: 7)
!15095 = !DILocation(line: 828, column: 7, scope: !15035)
!15096 = !DILocation(line: 829, column: 13, scope: !15094)
!15097 = !DILocation(line: 829, column: 21, scope: !15094)
!15098 = !DILocation(line: 829, column: 6, scope: !15094)
!15099 = !DILocation(line: 829, column: 11, scope: !15094)
!15100 = !DILocation(line: 829, column: 5, scope: !15094)
!15101 = !DILocation(line: 830, column: 10, scope: !15035)
!15102 = !DILocation(line: 830, column: 3, scope: !15035)
!15103 = distinct !DISubprogram(name: "quotearg_free", scope: !1038, file: !1038, line: 848, type: !197, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15104 = !DILocalVariable(name: "sv", scope: !15103, file: !1038, line: 850, type: !1065)
!15105 = !DILocation(line: 850, column: 19, scope: !15103)
!15106 = !DILocation(line: 850, column: 24, scope: !15103)
!15107 = !DILocalVariable(name: "i", scope: !15103, file: !1038, line: 851, type: !5)
!15108 = !DILocation(line: 851, column: 7, scope: !15103)
!15109 = !DILocation(line: 852, column: 10, scope: !15110)
!15110 = distinct !DILexicalBlock(scope: !15103, file: !1038, line: 852, column: 3)
!15111 = !DILocation(line: 852, column: 8, scope: !15110)
!15112 = !DILocation(line: 852, column: 15, scope: !15113)
!15113 = distinct !DILexicalBlock(scope: !15110, file: !1038, line: 852, column: 3)
!15114 = !DILocation(line: 852, column: 19, scope: !15113)
!15115 = !DILocation(line: 852, column: 17, scope: !15113)
!15116 = !DILocation(line: 852, column: 3, scope: !15110)
!15117 = !DILocation(line: 853, column: 11, scope: !15113)
!15118 = !DILocation(line: 853, column: 14, scope: !15113)
!15119 = !DILocation(line: 853, column: 17, scope: !15113)
!15120 = !{!15121, !2669, i64 8}
!15121 = !{!"slotvec", !2936, i64 0, !2669, i64 8}
!15122 = !DILocation(line: 853, column: 5, scope: !15113)
!15123 = !DILocation(line: 852, column: 28, scope: !15113)
!15124 = !DILocation(line: 852, column: 3, scope: !15113)
!15125 = distinct !{!15125, !15116, !15126}
!15126 = !DILocation(line: 853, column: 20, scope: !15110)
!15127 = !DILocation(line: 854, column: 7, scope: !15128)
!15128 = distinct !DILexicalBlock(scope: !15103, file: !1038, line: 854, column: 7)
!15129 = !DILocation(line: 854, column: 13, scope: !15128)
!15130 = !DILocation(line: 854, column: 17, scope: !15128)
!15131 = !DILocation(line: 854, column: 7, scope: !15103)
!15132 = !DILocation(line: 856, column: 13, scope: !15133)
!15133 = distinct !DILexicalBlock(scope: !15128, file: !1038, line: 855, column: 5)
!15134 = !DILocation(line: 856, column: 19, scope: !15133)
!15135 = !DILocation(line: 856, column: 7, scope: !15133)
!15136 = !DILocation(line: 857, column: 21, scope: !15133)
!15137 = !{!15121, !2936, i64 0}
!15138 = !DILocation(line: 858, column: 20, scope: !15133)
!15139 = !DILocation(line: 859, column: 5, scope: !15133)
!15140 = !DILocation(line: 860, column: 7, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15103, file: !1038, line: 860, column: 7)
!15142 = !DILocation(line: 860, column: 10, scope: !15141)
!15143 = !DILocation(line: 860, column: 7, scope: !15103)
!15144 = !DILocation(line: 862, column: 13, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15141, file: !1038, line: 861, column: 5)
!15146 = !DILocation(line: 862, column: 7, scope: !15145)
!15147 = !DILocation(line: 863, column: 15, scope: !15145)
!15148 = !DILocation(line: 864, column: 5, scope: !15145)
!15149 = !DILocation(line: 865, column: 10, scope: !15103)
!15150 = !DILocation(line: 866, column: 1, scope: !15103)
!15151 = distinct !DISubprogram(name: "quotearg_n", scope: !1038, file: !1038, line: 931, type: !1070, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15152 = !DILocalVariable(name: "n", arg: 1, scope: !15151, file: !1038, line: 931, type: !5)
!15153 = !DILocation(line: 931, column: 17, scope: !15151)
!15154 = !DILocalVariable(name: "arg", arg: 2, scope: !15151, file: !1038, line: 931, type: !177)
!15155 = !DILocation(line: 931, column: 32, scope: !15151)
!15156 = !DILocation(line: 933, column: 30, scope: !15151)
!15157 = !DILocation(line: 933, column: 33, scope: !15151)
!15158 = !DILocation(line: 933, column: 10, scope: !15151)
!15159 = !DILocation(line: 933, column: 3, scope: !15151)
!15160 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1038, file: !1038, line: 877, type: !1127, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15161 = !DILocalVariable(name: "n", arg: 1, scope: !15160, file: !1038, line: 877, type: !5)
!15162 = !DILocation(line: 877, column: 25, scope: !15160)
!15163 = !DILocalVariable(name: "arg", arg: 2, scope: !15160, file: !1038, line: 877, type: !177)
!15164 = !DILocation(line: 877, column: 40, scope: !15160)
!15165 = !DILocalVariable(name: "argsize", arg: 3, scope: !15160, file: !1038, line: 877, type: !52)
!15166 = !DILocation(line: 877, column: 52, scope: !15160)
!15167 = !DILocalVariable(name: "options", arg: 4, scope: !15160, file: !1038, line: 878, type: !1048)
!15168 = !DILocation(line: 878, column: 51, scope: !15160)
!15169 = !DILocalVariable(name: "e", scope: !15160, file: !1038, line: 880, type: !5)
!15170 = !DILocation(line: 880, column: 7, scope: !15160)
!15171 = !DILocation(line: 880, column: 11, scope: !15160)
!15172 = !DILocalVariable(name: "sv", scope: !15160, file: !1038, line: 882, type: !1065)
!15173 = !DILocation(line: 882, column: 19, scope: !15160)
!15174 = !DILocation(line: 882, column: 24, scope: !15160)
!15175 = !DILocation(line: 884, column: 7, scope: !15176)
!15176 = distinct !DILexicalBlock(scope: !15160, file: !1038, line: 884, column: 7)
!15177 = !DILocation(line: 884, column: 9, scope: !15176)
!15178 = !DILocation(line: 884, column: 7, scope: !15160)
!15179 = !DILocation(line: 885, column: 5, scope: !15176)
!15180 = !DILocation(line: 887, column: 7, scope: !15181)
!15181 = distinct !DILexicalBlock(scope: !15160, file: !1038, line: 887, column: 7)
!15182 = !DILocation(line: 887, column: 17, scope: !15181)
!15183 = !DILocation(line: 887, column: 14, scope: !15181)
!15184 = !DILocation(line: 887, column: 7, scope: !15160)
!15185 = !DILocalVariable(name: "preallocated", scope: !15186, file: !1038, line: 889, type: !139)
!15186 = distinct !DILexicalBlock(scope: !15181, file: !1038, line: 888, column: 5)
!15187 = !DILocation(line: 889, column: 12, scope: !15186)
!15188 = !DILocation(line: 889, column: 28, scope: !15186)
!15189 = !DILocation(line: 889, column: 31, scope: !15186)
!15190 = !DILocalVariable(name: "nmax", scope: !15186, file: !1038, line: 890, type: !5)
!15191 = !DILocation(line: 890, column: 11, scope: !15186)
!15192 = !DILocation(line: 892, column: 11, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15186, file: !1038, line: 892, column: 11)
!15194 = !DILocation(line: 892, column: 18, scope: !15193)
!15195 = !DILocation(line: 892, column: 16, scope: !15193)
!15196 = !DILocation(line: 892, column: 11, scope: !15186)
!15197 = !DILocation(line: 893, column: 9, scope: !15193)
!15198 = !DILocation(line: 895, column: 32, scope: !15186)
!15199 = !DILocation(line: 895, column: 54, scope: !15186)
!15200 = !DILocation(line: 895, column: 59, scope: !15186)
!15201 = !DILocation(line: 895, column: 61, scope: !15186)
!15202 = !DILocation(line: 895, column: 58, scope: !15186)
!15203 = !DILocation(line: 895, column: 66, scope: !15186)
!15204 = !DILocation(line: 895, column: 22, scope: !15186)
!15205 = !DILocation(line: 895, column: 20, scope: !15186)
!15206 = !DILocation(line: 895, column: 15, scope: !15186)
!15207 = !DILocation(line: 896, column: 11, scope: !15208)
!15208 = distinct !DILexicalBlock(scope: !15186, file: !1038, line: 896, column: 11)
!15209 = !DILocation(line: 896, column: 11, scope: !15186)
!15210 = !DILocation(line: 897, column: 10, scope: !15208)
!15211 = !DILocation(line: 897, column: 15, scope: !15208)
!15212 = !{i64 0, i64 8, !3308, i64 8, i64 8, !2668}
!15213 = !DILocation(line: 897, column: 9, scope: !15208)
!15214 = !DILocation(line: 898, column: 15, scope: !15186)
!15215 = !DILocation(line: 898, column: 20, scope: !15186)
!15216 = !DILocation(line: 898, column: 18, scope: !15186)
!15217 = !DILocation(line: 898, column: 7, scope: !15186)
!15218 = !DILocation(line: 898, column: 32, scope: !15186)
!15219 = !DILocation(line: 898, column: 34, scope: !15186)
!15220 = !DILocation(line: 898, column: 40, scope: !15186)
!15221 = !DILocation(line: 898, column: 38, scope: !15186)
!15222 = !DILocation(line: 898, column: 31, scope: !15186)
!15223 = !DILocation(line: 898, column: 48, scope: !15186)
!15224 = !DILocation(line: 899, column: 16, scope: !15186)
!15225 = !DILocation(line: 899, column: 18, scope: !15186)
!15226 = !DILocation(line: 899, column: 14, scope: !15186)
!15227 = !DILocation(line: 900, column: 5, scope: !15186)
!15228 = !DILocalVariable(name: "size", scope: !15229, file: !1038, line: 903, type: !52)
!15229 = distinct !DILexicalBlock(scope: !15160, file: !1038, line: 902, column: 3)
!15230 = !DILocation(line: 903, column: 12, scope: !15229)
!15231 = !DILocation(line: 903, column: 19, scope: !15229)
!15232 = !DILocation(line: 903, column: 22, scope: !15229)
!15233 = !DILocation(line: 903, column: 25, scope: !15229)
!15234 = !DILocalVariable(name: "val", scope: !15229, file: !1038, line: 904, type: !7)
!15235 = !DILocation(line: 904, column: 11, scope: !15229)
!15236 = !DILocation(line: 904, column: 17, scope: !15229)
!15237 = !DILocation(line: 904, column: 20, scope: !15229)
!15238 = !DILocation(line: 904, column: 23, scope: !15229)
!15239 = !DILocalVariable(name: "flags", scope: !15229, file: !1038, line: 906, type: !5)
!15240 = !DILocation(line: 906, column: 9, scope: !15229)
!15241 = !DILocation(line: 906, column: 17, scope: !15229)
!15242 = !DILocation(line: 906, column: 26, scope: !15229)
!15243 = !DILocation(line: 906, column: 32, scope: !15229)
!15244 = !DILocalVariable(name: "qsize", scope: !15229, file: !1038, line: 907, type: !52)
!15245 = !DILocation(line: 907, column: 12, scope: !15229)
!15246 = !DILocation(line: 907, column: 46, scope: !15229)
!15247 = !DILocation(line: 907, column: 51, scope: !15229)
!15248 = !DILocation(line: 907, column: 57, scope: !15229)
!15249 = !DILocation(line: 907, column: 62, scope: !15229)
!15250 = !DILocation(line: 908, column: 46, scope: !15229)
!15251 = !DILocation(line: 908, column: 55, scope: !15229)
!15252 = !DILocation(line: 908, column: 62, scope: !15229)
!15253 = !DILocation(line: 909, column: 46, scope: !15229)
!15254 = !DILocation(line: 909, column: 55, scope: !15229)
!15255 = !DILocation(line: 910, column: 46, scope: !15229)
!15256 = !DILocation(line: 910, column: 55, scope: !15229)
!15257 = !DILocation(line: 911, column: 46, scope: !15229)
!15258 = !DILocation(line: 911, column: 55, scope: !15229)
!15259 = !DILocation(line: 907, column: 20, scope: !15229)
!15260 = !DILocation(line: 913, column: 9, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15229, file: !1038, line: 913, column: 9)
!15262 = !DILocation(line: 913, column: 17, scope: !15261)
!15263 = !DILocation(line: 913, column: 14, scope: !15261)
!15264 = !DILocation(line: 913, column: 9, scope: !15229)
!15265 = !DILocation(line: 915, column: 29, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15261, file: !1038, line: 914, column: 7)
!15267 = !DILocation(line: 915, column: 35, scope: !15266)
!15268 = !DILocation(line: 915, column: 27, scope: !15266)
!15269 = !DILocation(line: 915, column: 9, scope: !15266)
!15270 = !DILocation(line: 915, column: 12, scope: !15266)
!15271 = !DILocation(line: 915, column: 15, scope: !15266)
!15272 = !DILocation(line: 915, column: 20, scope: !15266)
!15273 = !DILocation(line: 916, column: 13, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15266, file: !1038, line: 916, column: 13)
!15275 = !DILocation(line: 916, column: 17, scope: !15274)
!15276 = !DILocation(line: 916, column: 13, scope: !15266)
!15277 = !DILocation(line: 917, column: 17, scope: !15274)
!15278 = !DILocation(line: 917, column: 11, scope: !15274)
!15279 = !DILocation(line: 918, column: 39, scope: !15266)
!15280 = !DILocation(line: 918, column: 27, scope: !15266)
!15281 = !DILocation(line: 918, column: 25, scope: !15266)
!15282 = !DILocation(line: 918, column: 9, scope: !15266)
!15283 = !DILocation(line: 918, column: 12, scope: !15266)
!15284 = !DILocation(line: 918, column: 15, scope: !15266)
!15285 = !DILocation(line: 918, column: 19, scope: !15266)
!15286 = !DILocation(line: 919, column: 35, scope: !15266)
!15287 = !DILocation(line: 919, column: 40, scope: !15266)
!15288 = !DILocation(line: 919, column: 46, scope: !15266)
!15289 = !DILocation(line: 919, column: 51, scope: !15266)
!15290 = !DILocation(line: 919, column: 60, scope: !15266)
!15291 = !DILocation(line: 919, column: 69, scope: !15266)
!15292 = !DILocation(line: 920, column: 35, scope: !15266)
!15293 = !DILocation(line: 920, column: 42, scope: !15266)
!15294 = !DILocation(line: 920, column: 51, scope: !15266)
!15295 = !DILocation(line: 921, column: 35, scope: !15266)
!15296 = !DILocation(line: 921, column: 44, scope: !15266)
!15297 = !DILocation(line: 922, column: 35, scope: !15266)
!15298 = !DILocation(line: 922, column: 44, scope: !15266)
!15299 = !DILocation(line: 919, column: 9, scope: !15266)
!15300 = !DILocation(line: 923, column: 7, scope: !15266)
!15301 = !DILocation(line: 925, column: 13, scope: !15229)
!15302 = !DILocation(line: 925, column: 5, scope: !15229)
!15303 = !DILocation(line: 925, column: 11, scope: !15229)
!15304 = !DILocation(line: 926, column: 12, scope: !15229)
!15305 = !DILocation(line: 926, column: 5, scope: !15229)
!15306 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1038, file: !1038, line: 937, type: !1072, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15307 = !DILocalVariable(name: "n", arg: 1, scope: !15306, file: !1038, line: 937, type: !5)
!15308 = !DILocation(line: 937, column: 21, scope: !15306)
!15309 = !DILocalVariable(name: "arg", arg: 2, scope: !15306, file: !1038, line: 937, type: !177)
!15310 = !DILocation(line: 937, column: 36, scope: !15306)
!15311 = !DILocalVariable(name: "argsize", arg: 3, scope: !15306, file: !1038, line: 937, type: !52)
!15312 = !DILocation(line: 937, column: 48, scope: !15306)
!15313 = !DILocation(line: 939, column: 30, scope: !15306)
!15314 = !DILocation(line: 939, column: 33, scope: !15306)
!15315 = !DILocation(line: 939, column: 38, scope: !15306)
!15316 = !DILocation(line: 939, column: 10, scope: !15306)
!15317 = !DILocation(line: 939, column: 3, scope: !15306)
!15318 = distinct !DISubprogram(name: "quotearg", scope: !1038, file: !1038, line: 943, type: !215, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15319 = !DILocalVariable(name: "arg", arg: 1, scope: !15318, file: !1038, line: 943, type: !177)
!15320 = !DILocation(line: 943, column: 23, scope: !15318)
!15321 = !DILocation(line: 945, column: 25, scope: !15318)
!15322 = !DILocation(line: 945, column: 10, scope: !15318)
!15323 = !DILocation(line: 945, column: 3, scope: !15318)
!15324 = distinct !DISubprogram(name: "quotearg_mem", scope: !1038, file: !1038, line: 949, type: !1074, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15325 = !DILocalVariable(name: "arg", arg: 1, scope: !15324, file: !1038, line: 949, type: !177)
!15326 = !DILocation(line: 949, column: 27, scope: !15324)
!15327 = !DILocalVariable(name: "argsize", arg: 2, scope: !15324, file: !1038, line: 949, type: !52)
!15328 = !DILocation(line: 949, column: 39, scope: !15324)
!15329 = !DILocation(line: 951, column: 29, scope: !15324)
!15330 = !DILocation(line: 951, column: 34, scope: !15324)
!15331 = !DILocation(line: 951, column: 10, scope: !15324)
!15332 = !DILocation(line: 951, column: 3, scope: !15324)
!15333 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1038, file: !1038, line: 955, type: !1076, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15334 = !DILocalVariable(name: "n", arg: 1, scope: !15333, file: !1038, line: 955, type: !5)
!15335 = !DILocation(line: 955, column: 23, scope: !15333)
!15336 = !DILocalVariable(name: "s", arg: 2, scope: !15333, file: !1038, line: 955, type: !1012)
!15337 = !DILocation(line: 955, column: 45, scope: !15333)
!15338 = !DILocalVariable(name: "arg", arg: 3, scope: !15333, file: !1038, line: 955, type: !177)
!15339 = !DILocation(line: 955, column: 60, scope: !15333)
!15340 = !DILocalVariable(name: "o", scope: !15333, file: !1038, line: 957, type: !1049)
!15341 = !DILocation(line: 957, column: 32, scope: !15333)
!15342 = !DILocation(line: 957, column: 64, scope: !15333)
!15343 = !DILocation(line: 957, column: 36, scope: !15333)
!15344 = !DILocation(line: 958, column: 30, scope: !15333)
!15345 = !DILocation(line: 958, column: 33, scope: !15333)
!15346 = !DILocation(line: 958, column: 10, scope: !15333)
!15347 = !DILocation(line: 958, column: 3, scope: !15333)
!15348 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1038, file: !1038, line: 193, type: !1129, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15349 = !DILocalVariable(name: "style", arg: 1, scope: !15348, file: !1038, line: 193, type: !1012)
!15350 = !DILocation(line: 193, column: 48, scope: !15348)
!15351 = !DILocalVariable(name: "o", scope: !15348, file: !1038, line: 195, type: !1037)
!15352 = !DILocation(line: 195, column: 26, scope: !15348)
!15353 = !DILocation(line: 196, column: 7, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15348, file: !1038, line: 196, column: 7)
!15355 = !DILocation(line: 196, column: 13, scope: !15354)
!15356 = !DILocation(line: 196, column: 7, scope: !15348)
!15357 = !DILocation(line: 197, column: 5, scope: !15354)
!15358 = !DILocation(line: 198, column: 13, scope: !15348)
!15359 = !DILocation(line: 198, column: 5, scope: !15348)
!15360 = !DILocation(line: 198, column: 11, scope: !15348)
!15361 = !DILocation(line: 199, column: 3, scope: !15348)
!15362 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1038, file: !1038, line: 962, type: !1078, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15363 = !DILocalVariable(name: "n", arg: 1, scope: !15362, file: !1038, line: 962, type: !5)
!15364 = !DILocation(line: 962, column: 27, scope: !15362)
!15365 = !DILocalVariable(name: "s", arg: 2, scope: !15362, file: !1038, line: 962, type: !1012)
!15366 = !DILocation(line: 962, column: 49, scope: !15362)
!15367 = !DILocalVariable(name: "arg", arg: 3, scope: !15362, file: !1038, line: 963, type: !177)
!15368 = !DILocation(line: 963, column: 35, scope: !15362)
!15369 = !DILocalVariable(name: "argsize", arg: 4, scope: !15362, file: !1038, line: 963, type: !52)
!15370 = !DILocation(line: 963, column: 47, scope: !15362)
!15371 = !DILocalVariable(name: "o", scope: !15362, file: !1038, line: 965, type: !1049)
!15372 = !DILocation(line: 965, column: 32, scope: !15362)
!15373 = !DILocation(line: 965, column: 64, scope: !15362)
!15374 = !DILocation(line: 965, column: 36, scope: !15362)
!15375 = !DILocation(line: 966, column: 30, scope: !15362)
!15376 = !DILocation(line: 966, column: 33, scope: !15362)
!15377 = !DILocation(line: 966, column: 38, scope: !15362)
!15378 = !DILocation(line: 966, column: 10, scope: !15362)
!15379 = !DILocation(line: 966, column: 3, scope: !15362)
!15380 = distinct !DISubprogram(name: "quotearg_style", scope: !1038, file: !1038, line: 970, type: !1080, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15381 = !DILocalVariable(name: "s", arg: 1, scope: !15380, file: !1038, line: 970, type: !1012)
!15382 = !DILocation(line: 970, column: 36, scope: !15380)
!15383 = !DILocalVariable(name: "arg", arg: 2, scope: !15380, file: !1038, line: 970, type: !177)
!15384 = !DILocation(line: 970, column: 51, scope: !15380)
!15385 = !DILocation(line: 972, column: 31, scope: !15380)
!15386 = !DILocation(line: 972, column: 34, scope: !15380)
!15387 = !DILocation(line: 972, column: 10, scope: !15380)
!15388 = !DILocation(line: 972, column: 3, scope: !15380)
!15389 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1038, file: !1038, line: 976, type: !1082, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15390 = !DILocalVariable(name: "s", arg: 1, scope: !15389, file: !1038, line: 976, type: !1012)
!15391 = !DILocation(line: 976, column: 40, scope: !15389)
!15392 = !DILocalVariable(name: "arg", arg: 2, scope: !15389, file: !1038, line: 976, type: !177)
!15393 = !DILocation(line: 976, column: 55, scope: !15389)
!15394 = !DILocalVariable(name: "argsize", arg: 3, scope: !15389, file: !1038, line: 976, type: !52)
!15395 = !DILocation(line: 976, column: 67, scope: !15389)
!15396 = !DILocation(line: 978, column: 35, scope: !15389)
!15397 = !DILocation(line: 978, column: 38, scope: !15389)
!15398 = !DILocation(line: 978, column: 43, scope: !15389)
!15399 = !DILocation(line: 978, column: 10, scope: !15389)
!15400 = !DILocation(line: 978, column: 3, scope: !15389)
!15401 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1038, file: !1038, line: 982, type: !1084, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15402 = !DILocalVariable(name: "arg", arg: 1, scope: !15401, file: !1038, line: 982, type: !177)
!15403 = !DILocation(line: 982, column: 32, scope: !15401)
!15404 = !DILocalVariable(name: "argsize", arg: 2, scope: !15401, file: !1038, line: 982, type: !52)
!15405 = !DILocation(line: 982, column: 44, scope: !15401)
!15406 = !DILocalVariable(name: "ch", arg: 3, scope: !15401, file: !1038, line: 982, type: !8)
!15407 = !DILocation(line: 982, column: 58, scope: !15401)
!15408 = !DILocalVariable(name: "options", scope: !15401, file: !1038, line: 984, type: !1037)
!15409 = !DILocation(line: 984, column: 26, scope: !15401)
!15410 = !DILocation(line: 985, column: 13, scope: !15401)
!15411 = !{i64 0, i64 4, !3315, i64 4, i64 4, !2655, i64 8, i64 32, !3315, i64 40, i64 8, !2668, i64 48, i64 8, !2668}
!15412 = !DILocation(line: 986, column: 31, scope: !15401)
!15413 = !DILocation(line: 986, column: 3, scope: !15401)
!15414 = !DILocation(line: 987, column: 33, scope: !15401)
!15415 = !DILocation(line: 987, column: 38, scope: !15401)
!15416 = !DILocation(line: 987, column: 10, scope: !15401)
!15417 = !DILocation(line: 987, column: 3, scope: !15401)
!15418 = distinct !DISubprogram(name: "quotearg_char", scope: !1038, file: !1038, line: 991, type: !1086, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15419 = !DILocalVariable(name: "arg", arg: 1, scope: !15418, file: !1038, line: 991, type: !177)
!15420 = !DILocation(line: 991, column: 28, scope: !15418)
!15421 = !DILocalVariable(name: "ch", arg: 2, scope: !15418, file: !1038, line: 991, type: !8)
!15422 = !DILocation(line: 991, column: 38, scope: !15418)
!15423 = !DILocation(line: 993, column: 29, scope: !15418)
!15424 = !DILocation(line: 993, column: 44, scope: !15418)
!15425 = !DILocation(line: 993, column: 10, scope: !15418)
!15426 = !DILocation(line: 993, column: 3, scope: !15418)
!15427 = distinct !DISubprogram(name: "quotearg_colon", scope: !1038, file: !1038, line: 997, type: !215, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15428 = !DILocalVariable(name: "arg", arg: 1, scope: !15427, file: !1038, line: 997, type: !177)
!15429 = !DILocation(line: 997, column: 29, scope: !15427)
!15430 = !DILocation(line: 999, column: 25, scope: !15427)
!15431 = !DILocation(line: 999, column: 10, scope: !15427)
!15432 = !DILocation(line: 999, column: 3, scope: !15427)
!15433 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1038, file: !1038, line: 1003, type: !1074, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15434 = !DILocalVariable(name: "arg", arg: 1, scope: !15433, file: !1038, line: 1003, type: !177)
!15435 = !DILocation(line: 1003, column: 33, scope: !15433)
!15436 = !DILocalVariable(name: "argsize", arg: 2, scope: !15433, file: !1038, line: 1003, type: !52)
!15437 = !DILocation(line: 1003, column: 45, scope: !15433)
!15438 = !DILocation(line: 1005, column: 29, scope: !15433)
!15439 = !DILocation(line: 1005, column: 34, scope: !15433)
!15440 = !DILocation(line: 1005, column: 10, scope: !15433)
!15441 = !DILocation(line: 1005, column: 3, scope: !15433)
!15442 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1038, file: !1038, line: 1009, type: !1076, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15443 = !DILocalVariable(name: "n", arg: 1, scope: !15442, file: !1038, line: 1009, type: !5)
!15444 = !DILocation(line: 1009, column: 29, scope: !15442)
!15445 = !DILocalVariable(name: "s", arg: 2, scope: !15442, file: !1038, line: 1009, type: !1012)
!15446 = !DILocation(line: 1009, column: 51, scope: !15442)
!15447 = !DILocalVariable(name: "arg", arg: 3, scope: !15442, file: !1038, line: 1009, type: !177)
!15448 = !DILocation(line: 1009, column: 66, scope: !15442)
!15449 = !DILocalVariable(name: "options", scope: !15442, file: !1038, line: 1011, type: !1037)
!15450 = !DILocation(line: 1011, column: 26, scope: !15442)
!15451 = !DILocation(line: 1012, column: 41, scope: !15442)
!15452 = !DILocation(line: 1012, column: 13, scope: !15442)
!15453 = !DILocation(line: 1013, column: 3, scope: !15442)
!15454 = !DILocation(line: 1014, column: 30, scope: !15442)
!15455 = !DILocation(line: 1014, column: 33, scope: !15442)
!15456 = !DILocation(line: 1014, column: 10, scope: !15442)
!15457 = !DILocation(line: 1014, column: 3, scope: !15442)
!15458 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1038, file: !1038, line: 1018, type: !1088, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15459 = !DILocalVariable(name: "n", arg: 1, scope: !15458, file: !1038, line: 1018, type: !5)
!15460 = !DILocation(line: 1018, column: 24, scope: !15458)
!15461 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15458, file: !1038, line: 1018, type: !177)
!15462 = !DILocation(line: 1018, column: 39, scope: !15458)
!15463 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15458, file: !1038, line: 1019, type: !177)
!15464 = !DILocation(line: 1019, column: 32, scope: !15458)
!15465 = !DILocalVariable(name: "arg", arg: 4, scope: !15458, file: !1038, line: 1019, type: !177)
!15466 = !DILocation(line: 1019, column: 57, scope: !15458)
!15467 = !DILocation(line: 1021, column: 33, scope: !15458)
!15468 = !DILocation(line: 1021, column: 36, scope: !15458)
!15469 = !DILocation(line: 1021, column: 48, scope: !15458)
!15470 = !DILocation(line: 1021, column: 61, scope: !15458)
!15471 = !DILocation(line: 1021, column: 10, scope: !15458)
!15472 = !DILocation(line: 1021, column: 3, scope: !15458)
!15473 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1038, file: !1038, line: 1026, type: !1090, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15474 = !DILocalVariable(name: "n", arg: 1, scope: !15473, file: !1038, line: 1026, type: !5)
!15475 = !DILocation(line: 1026, column: 28, scope: !15473)
!15476 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15473, file: !1038, line: 1026, type: !177)
!15477 = !DILocation(line: 1026, column: 43, scope: !15473)
!15478 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15473, file: !1038, line: 1027, type: !177)
!15479 = !DILocation(line: 1027, column: 36, scope: !15473)
!15480 = !DILocalVariable(name: "arg", arg: 4, scope: !15473, file: !1038, line: 1028, type: !177)
!15481 = !DILocation(line: 1028, column: 36, scope: !15473)
!15482 = !DILocalVariable(name: "argsize", arg: 5, scope: !15473, file: !1038, line: 1028, type: !52)
!15483 = !DILocation(line: 1028, column: 48, scope: !15473)
!15484 = !DILocalVariable(name: "o", scope: !15473, file: !1038, line: 1030, type: !1037)
!15485 = !DILocation(line: 1030, column: 26, scope: !15473)
!15486 = !DILocation(line: 1030, column: 30, scope: !15473)
!15487 = !DILocation(line: 1031, column: 27, scope: !15473)
!15488 = !DILocation(line: 1031, column: 39, scope: !15473)
!15489 = !DILocation(line: 1031, column: 3, scope: !15473)
!15490 = !DILocation(line: 1032, column: 30, scope: !15473)
!15491 = !DILocation(line: 1032, column: 33, scope: !15473)
!15492 = !DILocation(line: 1032, column: 38, scope: !15473)
!15493 = !DILocation(line: 1032, column: 10, scope: !15473)
!15494 = !DILocation(line: 1032, column: 3, scope: !15473)
!15495 = distinct !DISubprogram(name: "quotearg_custom", scope: !1038, file: !1038, line: 1036, type: !1092, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15496 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15495, file: !1038, line: 1036, type: !177)
!15497 = !DILocation(line: 1036, column: 30, scope: !15495)
!15498 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15495, file: !1038, line: 1036, type: !177)
!15499 = !DILocation(line: 1036, column: 54, scope: !15495)
!15500 = !DILocalVariable(name: "arg", arg: 3, scope: !15495, file: !1038, line: 1037, type: !177)
!15501 = !DILocation(line: 1037, column: 30, scope: !15495)
!15502 = !DILocation(line: 1039, column: 32, scope: !15495)
!15503 = !DILocation(line: 1039, column: 44, scope: !15495)
!15504 = !DILocation(line: 1039, column: 57, scope: !15495)
!15505 = !DILocation(line: 1039, column: 10, scope: !15495)
!15506 = !DILocation(line: 1039, column: 3, scope: !15495)
!15507 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1038, file: !1038, line: 1043, type: !1094, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15508 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15507, file: !1038, line: 1043, type: !177)
!15509 = !DILocation(line: 1043, column: 34, scope: !15507)
!15510 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15507, file: !1038, line: 1043, type: !177)
!15511 = !DILocation(line: 1043, column: 58, scope: !15507)
!15512 = !DILocalVariable(name: "arg", arg: 3, scope: !15507, file: !1038, line: 1044, type: !177)
!15513 = !DILocation(line: 1044, column: 34, scope: !15507)
!15514 = !DILocalVariable(name: "argsize", arg: 4, scope: !15507, file: !1038, line: 1044, type: !52)
!15515 = !DILocation(line: 1044, column: 46, scope: !15507)
!15516 = !DILocation(line: 1046, column: 36, scope: !15507)
!15517 = !DILocation(line: 1046, column: 48, scope: !15507)
!15518 = !DILocation(line: 1046, column: 61, scope: !15507)
!15519 = !DILocation(line: 1047, column: 33, scope: !15507)
!15520 = !DILocation(line: 1046, column: 10, scope: !15507)
!15521 = !DILocation(line: 1046, column: 3, scope: !15507)
!15522 = distinct !DISubprogram(name: "quote_n_mem", scope: !1038, file: !1038, line: 1061, type: !1096, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15523 = !DILocalVariable(name: "n", arg: 1, scope: !15522, file: !1038, line: 1061, type: !5)
!15524 = !DILocation(line: 1061, column: 18, scope: !15522)
!15525 = !DILocalVariable(name: "arg", arg: 2, scope: !15522, file: !1038, line: 1061, type: !177)
!15526 = !DILocation(line: 1061, column: 33, scope: !15522)
!15527 = !DILocalVariable(name: "argsize", arg: 3, scope: !15522, file: !1038, line: 1061, type: !52)
!15528 = !DILocation(line: 1061, column: 45, scope: !15522)
!15529 = !DILocation(line: 1063, column: 30, scope: !15522)
!15530 = !DILocation(line: 1063, column: 33, scope: !15522)
!15531 = !DILocation(line: 1063, column: 38, scope: !15522)
!15532 = !DILocation(line: 1063, column: 10, scope: !15522)
!15533 = !DILocation(line: 1063, column: 3, scope: !15522)
!15534 = distinct !DISubprogram(name: "quote_mem", scope: !1038, file: !1038, line: 1067, type: !1098, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15535 = !DILocalVariable(name: "arg", arg: 1, scope: !15534, file: !1038, line: 1067, type: !177)
!15536 = !DILocation(line: 1067, column: 24, scope: !15534)
!15537 = !DILocalVariable(name: "argsize", arg: 2, scope: !15534, file: !1038, line: 1067, type: !52)
!15538 = !DILocation(line: 1067, column: 36, scope: !15534)
!15539 = !DILocation(line: 1069, column: 26, scope: !15534)
!15540 = !DILocation(line: 1069, column: 31, scope: !15534)
!15541 = !DILocation(line: 1069, column: 10, scope: !15534)
!15542 = !DILocation(line: 1069, column: 3, scope: !15534)
!15543 = distinct !DISubprogram(name: "quote_n", scope: !1038, file: !1038, line: 1073, type: !1100, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15544 = !DILocalVariable(name: "n", arg: 1, scope: !15543, file: !1038, line: 1073, type: !5)
!15545 = !DILocation(line: 1073, column: 14, scope: !15543)
!15546 = !DILocalVariable(name: "arg", arg: 2, scope: !15543, file: !1038, line: 1073, type: !177)
!15547 = !DILocation(line: 1073, column: 29, scope: !15543)
!15548 = !DILocation(line: 1075, column: 23, scope: !15543)
!15549 = !DILocation(line: 1075, column: 26, scope: !15543)
!15550 = !DILocation(line: 1075, column: 10, scope: !15543)
!15551 = !DILocation(line: 1075, column: 3, scope: !15543)
!15552 = distinct !DISubprogram(name: "quote", scope: !1038, file: !1038, line: 1079, type: !1102, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !206)
!15553 = !DILocalVariable(name: "arg", arg: 1, scope: !15552, file: !1038, line: 1079, type: !177)
!15554 = !DILocation(line: 1079, column: 20, scope: !15552)
!15555 = !DILocation(line: 1081, column: 22, scope: !15552)
!15556 = !DILocation(line: 1081, column: 10, scope: !15552)
!15557 = !DILocation(line: 1081, column: 3, scope: !15552)
!15558 = distinct !DISubprogram(name: "renameatu", scope: !15559, file: !15559, line: 77, type: !1796, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1793, retainedNodes: !206)
!15559 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mohamad/clone/coreutils")
!15560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !15561)
!15561 = !{!15562, !15563, !15564, !15565, !15566, !15567, !15568, !15569, !15570, !15571, !15572, !15573, !15578, !15579, !15580}
!15562 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15560, file: !277, line: 48, baseType: !280, size: 64)
!15563 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15560, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!15564 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15560, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!15565 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15560, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!15566 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15560, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!15567 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15560, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!15568 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15560, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!15569 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15560, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!15570 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15560, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!15571 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15560, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!15572 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15560, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!15573 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15560, file: !277, line: 91, baseType: !15574, size: 128, offset: 576)
!15574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !15575)
!15575 = !{!15576, !15577}
!15576 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15574, file: !297, line: 122, baseType: !300, size: 64)
!15577 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15574, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!15578 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15560, file: !277, line: 92, baseType: !15574, size: 128, offset: 704)
!15579 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15560, file: !277, line: 93, baseType: !15574, size: 128, offset: 832)
!15580 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15560, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!15581 = !DILocalVariable(name: "fd1", arg: 1, scope: !15558, file: !15559, line: 77, type: !5)
!15582 = !DILocation(line: 77, column: 16, scope: !15558)
!15583 = !DILocalVariable(name: "src", arg: 2, scope: !15558, file: !15559, line: 77, type: !177)
!15584 = !DILocation(line: 77, column: 33, scope: !15558)
!15585 = !DILocalVariable(name: "fd2", arg: 3, scope: !15558, file: !15559, line: 77, type: !5)
!15586 = !DILocation(line: 77, column: 42, scope: !15558)
!15587 = !DILocalVariable(name: "dst", arg: 4, scope: !15558, file: !15559, line: 77, type: !177)
!15588 = !DILocation(line: 77, column: 59, scope: !15558)
!15589 = !DILocalVariable(name: "flags", arg: 5, scope: !15558, file: !15559, line: 78, type: !67)
!15590 = !DILocation(line: 78, column: 25, scope: !15558)
!15591 = !DILocalVariable(name: "ret_val", scope: !15558, file: !15559, line: 80, type: !5)
!15592 = !DILocation(line: 80, column: 7, scope: !15558)
!15593 = !DILocalVariable(name: "err", scope: !15558, file: !15559, line: 81, type: !5)
!15594 = !DILocation(line: 81, column: 7, scope: !15558)
!15595 = !DILocation(line: 87, column: 37, scope: !15558)
!15596 = !DILocation(line: 87, column: 42, scope: !15558)
!15597 = !DILocation(line: 87, column: 47, scope: !15558)
!15598 = !DILocation(line: 87, column: 52, scope: !15558)
!15599 = !DILocation(line: 87, column: 57, scope: !15558)
!15600 = !DILocation(line: 87, column: 13, scope: !15558)
!15601 = !DILocation(line: 87, column: 11, scope: !15558)
!15602 = !DILocation(line: 88, column: 9, scope: !15558)
!15603 = !DILocation(line: 88, column: 7, scope: !15558)
!15604 = !DILocation(line: 99, column: 10, scope: !15605)
!15605 = distinct !DILexicalBlock(scope: !15558, file: !15559, line: 99, column: 7)
!15606 = !DILocation(line: 99, column: 18, scope: !15605)
!15607 = !DILocation(line: 99, column: 22, scope: !15605)
!15608 = !DILocation(line: 99, column: 26, scope: !15605)
!15609 = !DILocation(line: 99, column: 30, scope: !15605)
!15610 = !DILocation(line: 99, column: 40, scope: !15605)
!15611 = !DILocation(line: 99, column: 43, scope: !15605)
!15612 = !DILocation(line: 99, column: 47, scope: !15605)
!15613 = !DILocation(line: 99, column: 57, scope: !15605)
!15614 = !DILocation(line: 99, column: 60, scope: !15605)
!15615 = !DILocation(line: 99, column: 64, scope: !15605)
!15616 = !DILocation(line: 99, column: 7, scope: !15558)
!15617 = !DILocation(line: 100, column: 12, scope: !15605)
!15618 = !DILocation(line: 100, column: 5, scope: !15605)
!15619 = !DILocalVariable(name: "src_len", scope: !15620, file: !15559, line: 104, type: !52)
!15620 = distinct !DILexicalBlock(scope: !15558, file: !15559, line: 103, column: 3)
!15621 = !DILocation(line: 104, column: 10, scope: !15620)
!15622 = !DILocalVariable(name: "dst_len", scope: !15620, file: !15559, line: 105, type: !52)
!15623 = !DILocation(line: 105, column: 10, scope: !15620)
!15624 = !DILocalVariable(name: "src_temp", scope: !15620, file: !15559, line: 106, type: !7)
!15625 = !DILocation(line: 106, column: 9, scope: !15620)
!15626 = !DILocation(line: 106, column: 29, scope: !15620)
!15627 = !DILocalVariable(name: "dst_temp", scope: !15620, file: !15559, line: 107, type: !7)
!15628 = !DILocation(line: 107, column: 9, scope: !15620)
!15629 = !DILocation(line: 107, column: 29, scope: !15620)
!15630 = !DILocalVariable(name: "src_slash", scope: !15620, file: !15559, line: 108, type: !139)
!15631 = !DILocation(line: 108, column: 8, scope: !15620)
!15632 = !DILocalVariable(name: "dst_slash", scope: !15620, file: !15559, line: 109, type: !139)
!15633 = !DILocation(line: 109, column: 8, scope: !15620)
!15634 = !DILocalVariable(name: "rename_errno", scope: !15620, file: !15559, line: 110, type: !5)
!15635 = !DILocation(line: 110, column: 7, scope: !15620)
!15636 = !DILocalVariable(name: "src_st", scope: !15620, file: !15559, line: 111, type: !15560)
!15637 = !DILocation(line: 111, column: 15, scope: !15620)
!15638 = !DILocalVariable(name: "dst_st", scope: !15620, file: !15559, line: 112, type: !15560)
!15639 = !DILocation(line: 112, column: 15, scope: !15620)
!15640 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15620, file: !15559, line: 113, type: !139)
!15641 = !DILocation(line: 113, column: 8, scope: !15620)
!15642 = !DILocation(line: 115, column: 7, scope: !15643)
!15643 = distinct !DILexicalBlock(scope: !15620, file: !15559, line: 115, column: 7)
!15644 = !DILocation(line: 115, column: 13, scope: !15643)
!15645 = !DILocation(line: 115, column: 7, scope: !15620)
!15646 = !DILocation(line: 118, column: 11, scope: !15647)
!15647 = distinct !DILexicalBlock(scope: !15648, file: !15559, line: 118, column: 11)
!15648 = distinct !DILexicalBlock(scope: !15643, file: !15559, line: 116, column: 5)
!15649 = !DILocation(line: 118, column: 17, scope: !15647)
!15650 = !DILocation(line: 118, column: 11, scope: !15648)
!15651 = !DILocation(line: 119, column: 16, scope: !15647)
!15652 = !DILocation(line: 119, column: 9, scope: !15647)
!15653 = !DILocation(line: 124, column: 24, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15655, file: !15559, line: 124, column: 15)
!15655 = distinct !DILexicalBlock(scope: !15647, file: !15559, line: 121, column: 9)
!15656 = !DILocation(line: 124, column: 29, scope: !15654)
!15657 = !DILocation(line: 124, column: 15, scope: !15654)
!15658 = !DILocation(line: 124, column: 43, scope: !15654)
!15659 = !DILocation(line: 124, column: 48, scope: !15654)
!15660 = !DILocation(line: 124, column: 51, scope: !15654)
!15661 = !DILocation(line: 124, column: 57, scope: !15654)
!15662 = !DILocation(line: 124, column: 15, scope: !15655)
!15663 = !DILocation(line: 125, column: 20, scope: !15654)
!15664 = !DILocation(line: 125, column: 13, scope: !15654)
!15665 = !DILocation(line: 126, column: 15, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15655, file: !15559, line: 126, column: 15)
!15667 = !DILocation(line: 126, column: 21, scope: !15666)
!15668 = !DILocation(line: 126, column: 15, scope: !15655)
!15669 = !DILocation(line: 127, column: 13, scope: !15666)
!15670 = !DILocation(line: 128, column: 33, scope: !15655)
!15671 = !DILocation(line: 130, column: 5, scope: !15648)
!15672 = !DILocation(line: 133, column: 21, scope: !15620)
!15673 = !DILocation(line: 133, column: 13, scope: !15620)
!15674 = !DILocation(line: 133, column: 11, scope: !15620)
!15675 = !DILocation(line: 134, column: 21, scope: !15620)
!15676 = !DILocation(line: 134, column: 13, scope: !15620)
!15677 = !DILocation(line: 134, column: 11, scope: !15620)
!15678 = !DILocation(line: 135, column: 8, scope: !15679)
!15679 = distinct !DILexicalBlock(scope: !15620, file: !15559, line: 135, column: 7)
!15680 = !DILocation(line: 135, column: 16, scope: !15679)
!15681 = !DILocation(line: 135, column: 20, scope: !15679)
!15682 = !DILocation(line: 135, column: 7, scope: !15620)
!15683 = !DILocation(line: 136, column: 22, scope: !15679)
!15684 = !DILocation(line: 136, column: 27, scope: !15679)
!15685 = !DILocation(line: 136, column: 32, scope: !15679)
!15686 = !DILocation(line: 136, column: 37, scope: !15679)
!15687 = !DILocation(line: 136, column: 12, scope: !15679)
!15688 = !DILocation(line: 136, column: 5, scope: !15679)
!15689 = !DILocation(line: 138, column: 15, scope: !15620)
!15690 = !DILocation(line: 138, column: 19, scope: !15620)
!15691 = !DILocation(line: 138, column: 27, scope: !15620)
!15692 = !DILocation(line: 138, column: 32, scope: !15620)
!15693 = !DILocation(line: 138, column: 13, scope: !15620)
!15694 = !DILocation(line: 139, column: 15, scope: !15620)
!15695 = !DILocation(line: 139, column: 19, scope: !15620)
!15696 = !DILocation(line: 139, column: 27, scope: !15620)
!15697 = !DILocation(line: 139, column: 32, scope: !15620)
!15698 = !DILocation(line: 139, column: 13, scope: !15620)
!15699 = !DILocation(line: 140, column: 8, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15620, file: !15559, line: 140, column: 7)
!15701 = !DILocation(line: 140, column: 18, scope: !15700)
!15702 = !DILocation(line: 140, column: 22, scope: !15700)
!15703 = !DILocation(line: 140, column: 7, scope: !15620)
!15704 = !DILocation(line: 141, column: 22, scope: !15700)
!15705 = !DILocation(line: 141, column: 27, scope: !15700)
!15706 = !DILocation(line: 141, column: 32, scope: !15700)
!15707 = !DILocation(line: 141, column: 37, scope: !15700)
!15708 = !DILocation(line: 141, column: 12, scope: !15700)
!15709 = !DILocation(line: 141, column: 5, scope: !15700)
!15710 = !DILocation(line: 147, column: 16, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15620, file: !15559, line: 147, column: 7)
!15712 = !DILocation(line: 147, column: 21, scope: !15711)
!15713 = !DILocation(line: 147, column: 7, scope: !15711)
!15714 = !DILocation(line: 147, column: 7, scope: !15620)
!15715 = !DILocation(line: 148, column: 5, scope: !15711)
!15716 = !DILocation(line: 149, column: 7, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15620, file: !15559, line: 149, column: 7)
!15718 = !DILocation(line: 149, column: 7, scope: !15620)
!15719 = !DILocation(line: 151, column: 12, scope: !15720)
!15720 = distinct !DILexicalBlock(scope: !15721, file: !15559, line: 151, column: 11)
!15721 = distinct !DILexicalBlock(scope: !15717, file: !15559, line: 150, column: 5)
!15722 = !DILocation(line: 151, column: 11, scope: !15721)
!15723 = !DILocation(line: 152, column: 16, scope: !15720)
!15724 = !DILocation(line: 152, column: 9, scope: !15720)
!15725 = !DILocation(line: 153, column: 5, scope: !15721)
!15726 = !DILocation(line: 154, column: 21, scope: !15727)
!15727 = distinct !DILexicalBlock(scope: !15717, file: !15559, line: 154, column: 12)
!15728 = !DILocation(line: 154, column: 26, scope: !15727)
!15729 = !DILocation(line: 154, column: 12, scope: !15727)
!15730 = !DILocation(line: 154, column: 12, scope: !15717)
!15731 = !DILocation(line: 156, column: 11, scope: !15732)
!15732 = distinct !DILexicalBlock(scope: !15733, file: !15559, line: 156, column: 11)
!15733 = distinct !DILexicalBlock(scope: !15727, file: !15559, line: 155, column: 5)
!15734 = !DILocation(line: 156, column: 17, scope: !15732)
!15735 = !DILocation(line: 156, column: 27, scope: !15732)
!15736 = !DILocation(line: 156, column: 31, scope: !15732)
!15737 = !DILocation(line: 156, column: 11, scope: !15733)
!15738 = !DILocation(line: 157, column: 9, scope: !15732)
!15739 = !DILocation(line: 158, column: 5, scope: !15733)
!15740 = !DILocation(line: 159, column: 13, scope: !15741)
!15741 = distinct !DILexicalBlock(scope: !15727, file: !15559, line: 159, column: 12)
!15742 = !DILocation(line: 159, column: 12, scope: !15727)
!15743 = !DILocation(line: 160, column: 12, scope: !15741)
!15744 = !DILocation(line: 160, column: 5, scope: !15741)
!15745 = !DILocation(line: 161, column: 13, scope: !15746)
!15746 = distinct !DILexicalBlock(scope: !15741, file: !15559, line: 161, column: 12)
!15747 = !DILocation(line: 161, column: 12, scope: !15741)
!15748 = !DILocation(line: 162, column: 12, scope: !15746)
!15749 = !DILocation(line: 162, column: 5, scope: !15746)
!15750 = !DILocation(line: 214, column: 23, scope: !15620)
!15751 = !DILocation(line: 214, column: 28, scope: !15620)
!15752 = !DILocation(line: 214, column: 38, scope: !15620)
!15753 = !DILocation(line: 214, column: 43, scope: !15620)
!15754 = !DILocation(line: 214, column: 13, scope: !15620)
!15755 = !DILocation(line: 214, column: 11, scope: !15620)
!15756 = !DILocation(line: 215, column: 18, scope: !15620)
!15757 = !DILocation(line: 215, column: 16, scope: !15620)
!15758 = !DILocation(line: 216, column: 3, scope: !15620)
!15759 = !DILabel(scope: !15620, name: "out", file: !15559, line: 217)
!15760 = !DILocation(line: 217, column: 2, scope: !15620)
!15761 = !DILocation(line: 218, column: 7, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15620, file: !15559, line: 218, column: 7)
!15763 = !DILocation(line: 218, column: 19, scope: !15762)
!15764 = !DILocation(line: 218, column: 16, scope: !15762)
!15765 = !DILocation(line: 218, column: 7, scope: !15620)
!15766 = !DILocation(line: 219, column: 11, scope: !15762)
!15767 = !DILocation(line: 219, column: 5, scope: !15762)
!15768 = !DILocation(line: 220, column: 7, scope: !15769)
!15769 = distinct !DILexicalBlock(scope: !15620, file: !15559, line: 220, column: 7)
!15770 = !DILocation(line: 220, column: 19, scope: !15769)
!15771 = !DILocation(line: 220, column: 16, scope: !15769)
!15772 = !DILocation(line: 220, column: 7, scope: !15620)
!15773 = !DILocation(line: 221, column: 11, scope: !15769)
!15774 = !DILocation(line: 221, column: 5, scope: !15769)
!15775 = !DILocation(line: 222, column: 11, scope: !15620)
!15776 = !DILocation(line: 222, column: 3, scope: !15620)
!15777 = !DILocation(line: 222, column: 9, scope: !15620)
!15778 = !DILocation(line: 223, column: 10, scope: !15620)
!15779 = !DILocation(line: 223, column: 3, scope: !15620)
!15780 = !DILocation(line: 233, column: 1, scope: !15558)
!15781 = distinct !DISubprogram(name: "errno_fail", scope: !15559, file: !15559, line: 33, type: !1798, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1793, retainedNodes: !206)
!15782 = !DILocalVariable(name: "e", arg: 1, scope: !15781, file: !15559, line: 33, type: !5)
!15783 = !DILocation(line: 33, column: 17, scope: !15781)
!15784 = !DILocation(line: 35, column: 11, scope: !15781)
!15785 = !DILocation(line: 35, column: 3, scope: !15781)
!15786 = !DILocation(line: 35, column: 9, scope: !15781)
!15787 = !DILocation(line: 36, column: 3, scope: !15781)
!15788 = distinct !DISubprogram(name: "safe_read", scope: !15789, file: !15789, line: 56, type: !1706, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1800, retainedNodes: !206)
!15789 = !DIFile(filename: "lib/safe-read.c", directory: "/home/mohamad/clone/coreutils")
!15790 = !DILocalVariable(name: "fd", arg: 1, scope: !15788, file: !15789, line: 56, type: !5)
!15791 = !DILocation(line: 56, column: 14, scope: !15788)
!15792 = !DILocalVariable(name: "buf", arg: 2, scope: !15788, file: !15789, line: 56, type: !47)
!15793 = !DILocation(line: 56, column: 30, scope: !15788)
!15794 = !DILocalVariable(name: "count", arg: 3, scope: !15788, file: !15789, line: 56, type: !52)
!15795 = !DILocation(line: 56, column: 42, scope: !15788)
!15796 = !DILocation(line: 58, column: 3, scope: !15788)
!15797 = !DILocalVariable(name: "result", scope: !15798, file: !15789, line: 60, type: !674)
!15798 = distinct !DILexicalBlock(scope: !15799, file: !15789, line: 59, column: 5)
!15799 = distinct !DILexicalBlock(scope: !15800, file: !15789, line: 58, column: 3)
!15800 = distinct !DILexicalBlock(scope: !15788, file: !15789, line: 58, column: 3)
!15801 = !DILocation(line: 60, column: 15, scope: !15798)
!15802 = !DILocation(line: 60, column: 28, scope: !15798)
!15803 = !DILocation(line: 60, column: 32, scope: !15798)
!15804 = !DILocation(line: 60, column: 37, scope: !15798)
!15805 = !DILocation(line: 60, column: 24, scope: !15798)
!15806 = !DILocation(line: 62, column: 16, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15798, file: !15789, line: 62, column: 11)
!15808 = !DILocation(line: 62, column: 13, scope: !15807)
!15809 = !DILocation(line: 62, column: 11, scope: !15798)
!15810 = !DILocation(line: 63, column: 16, scope: !15807)
!15811 = !DILocation(line: 63, column: 9, scope: !15807)
!15812 = !DILocation(line: 64, column: 16, scope: !15813)
!15813 = distinct !DILexicalBlock(scope: !15807, file: !15789, line: 64, column: 16)
!15814 = !DILocation(line: 64, column: 16, scope: !15807)
!15815 = !DILocation(line: 65, column: 9, scope: !15813)
!15816 = distinct !{!15816, !15817, !15818}
!15817 = !DILocation(line: 58, column: 3, scope: !15800)
!15818 = !DILocation(line: 70, column: 5, scope: !15800)
!15819 = !DILocation(line: 66, column: 16, scope: !15820)
!15820 = distinct !DILexicalBlock(scope: !15813, file: !15789, line: 66, column: 16)
!15821 = !DILocation(line: 66, column: 22, scope: !15820)
!15822 = !DILocation(line: 66, column: 32, scope: !15820)
!15823 = !DILocation(line: 66, column: 53, scope: !15820)
!15824 = !DILocation(line: 66, column: 51, scope: !15820)
!15825 = !DILocation(line: 66, column: 16, scope: !15813)
!15826 = !DILocation(line: 67, column: 15, scope: !15820)
!15827 = !DILocation(line: 67, column: 9, scope: !15820)
!15828 = !DILocation(line: 69, column: 16, scope: !15820)
!15829 = !DILocation(line: 69, column: 9, scope: !15820)
!15830 = !DILocation(line: 58, column: 3, scope: !15799)
!15831 = !DILocation(line: 71, column: 1, scope: !15788)
!15832 = distinct !DISubprogram(name: "safe_write", scope: !1801, file: !1801, line: 56, type: !1711, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1803, retainedNodes: !206)
!15833 = !DILocalVariable(name: "fd", arg: 1, scope: !15832, file: !1801, line: 56, type: !5)
!15834 = !DILocation(line: 56, column: 14, scope: !15832)
!15835 = !DILocalVariable(name: "buf", arg: 2, scope: !15832, file: !1801, line: 56, type: !525)
!15836 = !DILocation(line: 56, column: 30, scope: !15832)
!15837 = !DILocalVariable(name: "count", arg: 3, scope: !15832, file: !1801, line: 56, type: !52)
!15838 = !DILocation(line: 56, column: 42, scope: !15832)
!15839 = !DILocation(line: 58, column: 3, scope: !15832)
!15840 = !DILocalVariable(name: "result", scope: !15841, file: !1801, line: 60, type: !674)
!15841 = distinct !DILexicalBlock(scope: !15842, file: !1801, line: 59, column: 5)
!15842 = distinct !DILexicalBlock(scope: !15843, file: !1801, line: 58, column: 3)
!15843 = distinct !DILexicalBlock(scope: !15832, file: !1801, line: 58, column: 3)
!15844 = !DILocation(line: 60, column: 15, scope: !15841)
!15845 = !DILocation(line: 60, column: 28, scope: !15841)
!15846 = !DILocation(line: 60, column: 32, scope: !15841)
!15847 = !DILocation(line: 60, column: 37, scope: !15841)
!15848 = !DILocation(line: 60, column: 24, scope: !15841)
!15849 = !DILocation(line: 62, column: 16, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15841, file: !1801, line: 62, column: 11)
!15851 = !DILocation(line: 62, column: 13, scope: !15850)
!15852 = !DILocation(line: 62, column: 11, scope: !15841)
!15853 = !DILocation(line: 63, column: 16, scope: !15850)
!15854 = !DILocation(line: 63, column: 9, scope: !15850)
!15855 = !DILocation(line: 64, column: 16, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15850, file: !1801, line: 64, column: 16)
!15857 = !DILocation(line: 64, column: 16, scope: !15850)
!15858 = !DILocation(line: 65, column: 9, scope: !15856)
!15859 = distinct !{!15859, !15860, !15861}
!15860 = !DILocation(line: 58, column: 3, scope: !15843)
!15861 = !DILocation(line: 70, column: 5, scope: !15843)
!15862 = !DILocation(line: 66, column: 16, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15856, file: !1801, line: 66, column: 16)
!15864 = !DILocation(line: 66, column: 22, scope: !15863)
!15865 = !DILocation(line: 66, column: 32, scope: !15863)
!15866 = !DILocation(line: 66, column: 53, scope: !15863)
!15867 = !DILocation(line: 66, column: 51, scope: !15863)
!15868 = !DILocation(line: 66, column: 16, scope: !15856)
!15869 = !DILocation(line: 67, column: 15, scope: !15863)
!15870 = !DILocation(line: 67, column: 9, scope: !15863)
!15871 = !DILocation(line: 69, column: 16, scope: !15863)
!15872 = !DILocation(line: 69, column: 9, scope: !15863)
!15873 = !DILocation(line: 58, column: 3, scope: !15842)
!15874 = !DILocation(line: 71, column: 1, scope: !15832)
!15875 = distinct !DISubprogram(name: "same_name", scope: !15876, file: !15876, line: 61, type: !1809, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !206)
!15876 = !DIFile(filename: "lib/same.c", directory: "/home/mohamad/clone/coreutils")
!15877 = !DILocalVariable(name: "source", arg: 1, scope: !15875, file: !15876, line: 61, type: !177)
!15878 = !DILocation(line: 61, column: 24, scope: !15875)
!15879 = !DILocalVariable(name: "dest", arg: 2, scope: !15875, file: !15876, line: 61, type: !177)
!15880 = !DILocation(line: 61, column: 44, scope: !15875)
!15881 = !DILocation(line: 63, column: 33, scope: !15875)
!15882 = !DILocation(line: 63, column: 51, scope: !15875)
!15883 = !DILocation(line: 63, column: 10, scope: !15875)
!15884 = !DILocation(line: 63, column: 3, scope: !15875)
!15885 = distinct !DISubprogram(name: "same_nameat", scope: !15876, file: !15876, line: 70, type: !1811, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1806, retainedNodes: !206)
!15886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !15887)
!15887 = !{!15888, !15889, !15890, !15891, !15892, !15893, !15894, !15895, !15896, !15897, !15898, !15899, !15904, !15905, !15906}
!15888 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15886, file: !277, line: 48, baseType: !280, size: 64)
!15889 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15886, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!15890 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15886, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!15891 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15886, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!15892 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15886, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!15893 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15886, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!15894 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15886, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!15895 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15886, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!15896 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15886, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!15897 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15886, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!15898 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15886, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!15899 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15886, file: !277, line: 91, baseType: !15900, size: 128, offset: 576)
!15900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !15901)
!15901 = !{!15902, !15903}
!15902 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15900, file: !297, line: 122, baseType: !300, size: 64)
!15903 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15900, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!15904 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15886, file: !277, line: 92, baseType: !15900, size: 128, offset: 704)
!15905 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15886, file: !277, line: 93, baseType: !15900, size: 128, offset: 832)
!15906 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15886, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!15907 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !15885, file: !15876, line: 70, type: !5)
!15908 = !DILocation(line: 70, column: 18, scope: !15885)
!15909 = !DILocalVariable(name: "source", arg: 2, scope: !15885, file: !15876, line: 70, type: !177)
!15910 = !DILocation(line: 70, column: 42, scope: !15885)
!15911 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !15885, file: !15876, line: 71, type: !5)
!15912 = !DILocation(line: 71, column: 18, scope: !15885)
!15913 = !DILocalVariable(name: "dest", arg: 4, scope: !15885, file: !15876, line: 71, type: !177)
!15914 = !DILocation(line: 71, column: 40, scope: !15885)
!15915 = !DILocalVariable(name: "source_basename", scope: !15885, file: !15876, line: 74, type: !177)
!15916 = !DILocation(line: 74, column: 15, scope: !15885)
!15917 = !DILocation(line: 74, column: 49, scope: !15885)
!15918 = !DILocation(line: 74, column: 33, scope: !15885)
!15919 = !DILocalVariable(name: "dest_basename", scope: !15885, file: !15876, line: 75, type: !177)
!15920 = !DILocation(line: 75, column: 15, scope: !15885)
!15921 = !DILocation(line: 75, column: 47, scope: !15885)
!15922 = !DILocation(line: 75, column: 31, scope: !15885)
!15923 = !DILocalVariable(name: "source_baselen", scope: !15885, file: !15876, line: 76, type: !52)
!15924 = !DILocation(line: 76, column: 10, scope: !15885)
!15925 = !DILocation(line: 76, column: 37, scope: !15885)
!15926 = !DILocation(line: 76, column: 27, scope: !15885)
!15927 = !DILocalVariable(name: "dest_baselen", scope: !15885, file: !15876, line: 77, type: !52)
!15928 = !DILocation(line: 77, column: 10, scope: !15885)
!15929 = !DILocation(line: 77, column: 35, scope: !15885)
!15930 = !DILocation(line: 77, column: 25, scope: !15885)
!15931 = !DILocalVariable(name: "identical_basenames", scope: !15885, file: !15876, line: 78, type: !139)
!15932 = !DILocation(line: 78, column: 8, scope: !15885)
!15933 = !DILocation(line: 79, column: 6, scope: !15885)
!15934 = !DILocation(line: 79, column: 24, scope: !15885)
!15935 = !DILocation(line: 79, column: 21, scope: !15885)
!15936 = !DILocation(line: 80, column: 6, scope: !15885)
!15937 = !DILocation(line: 80, column: 17, scope: !15885)
!15938 = !DILocation(line: 80, column: 34, scope: !15885)
!15939 = !DILocation(line: 80, column: 49, scope: !15885)
!15940 = !DILocation(line: 80, column: 9, scope: !15885)
!15941 = !DILocation(line: 80, column: 63, scope: !15885)
!15942 = !DILocation(line: 0, scope: !15885)
!15943 = !DILocalVariable(name: "compare_dirs", scope: !15885, file: !15876, line: 81, type: !139)
!15944 = !DILocation(line: 81, column: 8, scope: !15885)
!15945 = !DILocation(line: 81, column: 23, scope: !15885)
!15946 = !DILocalVariable(name: "same", scope: !15885, file: !15876, line: 82, type: !139)
!15947 = !DILocation(line: 82, column: 8, scope: !15885)
!15948 = !DILocation(line: 92, column: 7, scope: !15949)
!15949 = distinct !DILexicalBlock(scope: !15885, file: !15876, line: 92, column: 7)
!15950 = !DILocation(line: 92, column: 7, scope: !15885)
!15951 = !DILocalVariable(name: "source_dir_stats", scope: !15952, file: !15876, line: 94, type: !15886)
!15952 = distinct !DILexicalBlock(scope: !15949, file: !15876, line: 93, column: 5)
!15953 = !DILocation(line: 94, column: 19, scope: !15952)
!15954 = !DILocalVariable(name: "dest_dir_stats", scope: !15952, file: !15876, line: 95, type: !15886)
!15955 = !DILocation(line: 95, column: 19, scope: !15952)
!15956 = !DILocalVariable(name: "source_dirname", scope: !15952, file: !15876, line: 98, type: !7)
!15957 = !DILocation(line: 98, column: 13, scope: !15952)
!15958 = !DILocation(line: 98, column: 40, scope: !15952)
!15959 = !DILocation(line: 98, column: 30, scope: !15952)
!15960 = !DILocalVariable(name: "flags", scope: !15952, file: !15876, line: 99, type: !5)
!15961 = !DILocation(line: 99, column: 11, scope: !15952)
!15962 = !DILocation(line: 100, column: 20, scope: !15963)
!15963 = distinct !DILexicalBlock(scope: !15952, file: !15876, line: 100, column: 11)
!15964 = !DILocation(line: 100, column: 32, scope: !15963)
!15965 = !DILocation(line: 100, column: 67, scope: !15963)
!15966 = !DILocation(line: 100, column: 11, scope: !15963)
!15967 = !DILocation(line: 100, column: 74, scope: !15963)
!15968 = !DILocation(line: 100, column: 11, scope: !15952)
!15969 = !DILocation(line: 103, column: 21, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15963, file: !15876, line: 101, column: 9)
!15971 = !DILocation(line: 103, column: 34, scope: !15970)
!15972 = !DILocation(line: 103, column: 11, scope: !15970)
!15973 = !DILocation(line: 104, column: 9, scope: !15970)
!15974 = !DILocation(line: 105, column: 13, scope: !15952)
!15975 = !DILocation(line: 105, column: 7, scope: !15952)
!15976 = !DILocalVariable(name: "dest_dirname", scope: !15952, file: !15876, line: 107, type: !7)
!15977 = !DILocation(line: 107, column: 13, scope: !15952)
!15978 = !DILocation(line: 107, column: 38, scope: !15952)
!15979 = !DILocation(line: 107, column: 28, scope: !15952)
!15980 = !DILocation(line: 137, column: 20, scope: !15981)
!15981 = distinct !DILexicalBlock(scope: !15952, file: !15876, line: 137, column: 11)
!15982 = !DILocation(line: 137, column: 30, scope: !15981)
!15983 = !DILocation(line: 137, column: 61, scope: !15981)
!15984 = !DILocation(line: 137, column: 11, scope: !15981)
!15985 = !DILocation(line: 137, column: 68, scope: !15981)
!15986 = !DILocation(line: 137, column: 11, scope: !15952)
!15987 = !DILocation(line: 140, column: 21, scope: !15988)
!15988 = distinct !DILexicalBlock(scope: !15981, file: !15876, line: 138, column: 9)
!15989 = !DILocation(line: 140, column: 34, scope: !15988)
!15990 = !DILocation(line: 140, column: 11, scope: !15988)
!15991 = !DILocation(line: 141, column: 9, scope: !15988)
!15992 = !DILocation(line: 142, column: 14, scope: !15952)
!15993 = !DILocation(line: 0, scope: !15952)
!15994 = !DILocation(line: 142, column: 12, scope: !15952)
!15995 = !DILocation(line: 145, column: 13, scope: !15952)
!15996 = !DILocation(line: 145, column: 7, scope: !15952)
!15997 = !DILocation(line: 146, column: 5, scope: !15952)
!15998 = !DILocation(line: 148, column: 10, scope: !15885)
!15999 = !DILocation(line: 148, column: 3, scope: !15885)
!16000 = distinct !DISubprogram(name: "streamsavedir", scope: !1163, file: !1163, line: 91, type: !1159, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1148, retainedNodes: !206)
!16001 = !DILocalVariable(name: "dirp", arg: 1, scope: !16000, file: !1163, line: 91, type: !675)
!16002 = !DILocation(line: 91, column: 21, scope: !16000)
!16003 = !DILocalVariable(name: "option", arg: 2, scope: !16000, file: !1163, line: 91, type: !1151)
!16004 = !DILocation(line: 91, column: 47, scope: !16000)
!16005 = !DILocalVariable(name: "name_space", scope: !16000, file: !1163, line: 93, type: !7)
!16006 = !DILocation(line: 93, column: 9, scope: !16000)
!16007 = !DILocalVariable(name: "allocated", scope: !16000, file: !1163, line: 94, type: !52)
!16008 = !DILocation(line: 94, column: 10, scope: !16000)
!16009 = !DILocalVariable(name: "entries", scope: !16000, file: !1163, line: 95, type: !1161)
!16010 = !DILocation(line: 95, column: 15, scope: !16000)
!16011 = !DILocalVariable(name: "entries_allocated", scope: !16000, file: !1163, line: 96, type: !52)
!16012 = !DILocation(line: 96, column: 10, scope: !16000)
!16013 = !DILocalVariable(name: "entries_used", scope: !16000, file: !1163, line: 97, type: !52)
!16014 = !DILocation(line: 97, column: 10, scope: !16000)
!16015 = !DILocalVariable(name: "used", scope: !16000, file: !1163, line: 98, type: !52)
!16016 = !DILocation(line: 98, column: 10, scope: !16000)
!16017 = !DILocalVariable(name: "readdir_errno", scope: !16000, file: !1163, line: 99, type: !5)
!16018 = !DILocation(line: 99, column: 7, scope: !16000)
!16019 = !DILocalVariable(name: "cmp", scope: !16000, file: !1163, line: 100, type: !1169)
!16020 = !DILocation(line: 100, column: 23, scope: !16000)
!16021 = !DILocation(line: 100, column: 55, scope: !16000)
!16022 = !DILocation(line: 100, column: 29, scope: !16000)
!16023 = !DILocation(line: 102, column: 7, scope: !16024)
!16024 = distinct !DILexicalBlock(scope: !16000, file: !1163, line: 102, column: 7)
!16025 = !DILocation(line: 102, column: 12, scope: !16024)
!16026 = !DILocation(line: 102, column: 7, scope: !16000)
!16027 = !DILocation(line: 103, column: 5, scope: !16024)
!16028 = !DILocation(line: 105, column: 3, scope: !16000)
!16029 = !DILocalVariable(name: "dp", scope: !16030, file: !1163, line: 107, type: !1175)
!16030 = distinct !DILexicalBlock(scope: !16031, file: !1163, line: 106, column: 5)
!16031 = distinct !DILexicalBlock(scope: !16032, file: !1163, line: 105, column: 3)
!16032 = distinct !DILexicalBlock(scope: !16000, file: !1163, line: 105, column: 3)
!16033 = !DILocation(line: 107, column: 28, scope: !16030)
!16034 = !DILocalVariable(name: "entry", scope: !16030, file: !1163, line: 108, type: !177)
!16035 = !DILocation(line: 108, column: 19, scope: !16030)
!16036 = !DILocation(line: 110, column: 7, scope: !16030)
!16037 = !DILocation(line: 110, column: 13, scope: !16030)
!16038 = !DILocation(line: 111, column: 21, scope: !16030)
!16039 = !DILocation(line: 111, column: 12, scope: !16030)
!16040 = !DILocation(line: 111, column: 10, scope: !16030)
!16041 = !DILocation(line: 112, column: 13, scope: !16042)
!16042 = distinct !DILexicalBlock(scope: !16030, file: !1163, line: 112, column: 11)
!16043 = !DILocation(line: 112, column: 11, scope: !16030)
!16044 = !DILocation(line: 113, column: 9, scope: !16042)
!16045 = !DILocation(line: 117, column: 15, scope: !16030)
!16046 = !DILocation(line: 117, column: 19, scope: !16030)
!16047 = !DILocation(line: 117, column: 13, scope: !16030)
!16048 = !DILocation(line: 118, column: 11, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !16030, file: !1163, line: 118, column: 11)
!16050 = !DILocation(line: 118, column: 17, scope: !16049)
!16051 = !DILocation(line: 118, column: 26, scope: !16049)
!16052 = !DILocation(line: 118, column: 39, scope: !16049)
!16053 = !DILocation(line: 118, column: 48, scope: !16049)
!16054 = !DILocation(line: 118, column: 64, scope: !16049)
!16055 = !DILocation(line: 118, column: 11, scope: !16030)
!16056 = !DILocalVariable(name: "entry_size", scope: !16057, file: !1163, line: 120, type: !52)
!16057 = distinct !DILexicalBlock(scope: !16049, file: !1163, line: 119, column: 9)
!16058 = !DILocation(line: 120, column: 18, scope: !16057)
!16059 = !DILocation(line: 120, column: 31, scope: !16057)
!16060 = !DILocation(line: 120, column: 52, scope: !16057)
!16061 = !DILocation(line: 121, column: 15, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !16057, file: !1163, line: 121, column: 15)
!16063 = !DILocation(line: 121, column: 15, scope: !16057)
!16064 = !DILocation(line: 123, column: 19, scope: !16065)
!16065 = distinct !DILexicalBlock(scope: !16066, file: !1163, line: 123, column: 19)
!16066 = distinct !DILexicalBlock(scope: !16062, file: !1163, line: 122, column: 13)
!16067 = !DILocation(line: 123, column: 40, scope: !16065)
!16068 = !DILocation(line: 123, column: 37, scope: !16065)
!16069 = !DILocation(line: 123, column: 19, scope: !16066)
!16070 = !DILocalVariable(name: "n", scope: !16071, file: !1163, line: 125, type: !52)
!16071 = distinct !DILexicalBlock(scope: !16065, file: !1163, line: 124, column: 17)
!16072 = !DILocation(line: 125, column: 26, scope: !16071)
!16073 = !DILocation(line: 125, column: 30, scope: !16071)
!16074 = !DILocation(line: 126, column: 41, scope: !16071)
!16075 = !DILocation(line: 126, column: 29, scope: !16071)
!16076 = !DILocation(line: 126, column: 27, scope: !16071)
!16077 = !DILocation(line: 127, column: 39, scope: !16071)
!16078 = !DILocation(line: 127, column: 37, scope: !16071)
!16079 = !DILocation(line: 128, column: 17, scope: !16071)
!16080 = !DILocation(line: 129, column: 53, scope: !16066)
!16081 = !DILocation(line: 129, column: 44, scope: !16066)
!16082 = !DILocation(line: 129, column: 15, scope: !16066)
!16083 = !DILocation(line: 129, column: 23, scope: !16066)
!16084 = !DILocation(line: 129, column: 37, scope: !16066)
!16085 = !DILocation(line: 129, column: 42, scope: !16066)
!16086 = !{!16087, !2669, i64 0}
!16087 = !{!"", !2669, i64 0, !2936, i64 8}
!16088 = !DILocation(line: 131, column: 43, scope: !16066)
!16089 = !DILocation(line: 131, column: 47, scope: !16066)
!16090 = !{!16091, !2936, i64 0}
!16091 = !{!"dirent", !2936, i64 0, !2936, i64 8, !14585, i64 16, !2657, i64 18, !2657, i64 19}
!16092 = !DILocation(line: 131, column: 15, scope: !16066)
!16093 = !DILocation(line: 131, column: 23, scope: !16066)
!16094 = !DILocation(line: 131, column: 37, scope: !16066)
!16095 = !DILocation(line: 131, column: 41, scope: !16066)
!16096 = !{!16087, !2936, i64 8}
!16097 = !DILocation(line: 133, column: 27, scope: !16066)
!16098 = !DILocation(line: 134, column: 13, scope: !16066)
!16099 = !DILocation(line: 137, column: 19, scope: !16100)
!16100 = distinct !DILexicalBlock(scope: !16101, file: !1163, line: 137, column: 19)
!16101 = distinct !DILexicalBlock(scope: !16062, file: !1163, line: 136, column: 13)
!16102 = !DILocation(line: 137, column: 31, scope: !16100)
!16103 = !DILocation(line: 137, column: 29, scope: !16100)
!16104 = !DILocation(line: 137, column: 39, scope: !16100)
!16105 = !DILocation(line: 137, column: 36, scope: !16100)
!16106 = !DILocation(line: 137, column: 19, scope: !16101)
!16107 = !DILocalVariable(name: "n", scope: !16108, file: !1163, line: 139, type: !52)
!16108 = distinct !DILexicalBlock(scope: !16100, file: !1163, line: 138, column: 17)
!16109 = !DILocation(line: 139, column: 26, scope: !16108)
!16110 = !DILocation(line: 139, column: 30, scope: !16108)
!16111 = !DILocation(line: 139, column: 37, scope: !16108)
!16112 = !DILocation(line: 139, column: 35, scope: !16108)
!16113 = !DILocation(line: 140, column: 23, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16108, file: !1163, line: 140, column: 23)
!16115 = !DILocation(line: 140, column: 27, scope: !16114)
!16116 = !DILocation(line: 140, column: 25, scope: !16114)
!16117 = !DILocation(line: 140, column: 23, scope: !16108)
!16118 = !DILocation(line: 141, column: 21, scope: !16114)
!16119 = !DILocation(line: 142, column: 44, scope: !16108)
!16120 = !DILocation(line: 142, column: 32, scope: !16108)
!16121 = !DILocation(line: 142, column: 30, scope: !16108)
!16122 = !DILocation(line: 143, column: 31, scope: !16108)
!16123 = !DILocation(line: 143, column: 29, scope: !16108)
!16124 = !DILocation(line: 144, column: 17, scope: !16108)
!16125 = !DILocation(line: 145, column: 23, scope: !16101)
!16126 = !DILocation(line: 145, column: 36, scope: !16101)
!16127 = !DILocation(line: 145, column: 34, scope: !16101)
!16128 = !DILocation(line: 145, column: 42, scope: !16101)
!16129 = !DILocation(line: 145, column: 49, scope: !16101)
!16130 = !DILocation(line: 145, column: 15, scope: !16101)
!16131 = !DILocation(line: 147, column: 19, scope: !16057)
!16132 = !DILocation(line: 147, column: 16, scope: !16057)
!16133 = !DILocation(line: 148, column: 9, scope: !16057)
!16134 = !DILocation(line: 105, column: 3, scope: !16031)
!16135 = distinct !{!16135, !16136, !16137}
!16136 = !DILocation(line: 105, column: 3, scope: !16032)
!16137 = !DILocation(line: 149, column: 5, scope: !16032)
!16138 = !DILocation(line: 151, column: 19, scope: !16000)
!16139 = !DILocation(line: 151, column: 17, scope: !16000)
!16140 = !DILocation(line: 152, column: 7, scope: !16141)
!16141 = distinct !DILexicalBlock(scope: !16000, file: !1163, line: 152, column: 7)
!16142 = !DILocation(line: 152, column: 21, scope: !16141)
!16143 = !DILocation(line: 152, column: 7, scope: !16000)
!16144 = !DILocation(line: 154, column: 13, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16141, file: !1163, line: 153, column: 5)
!16146 = !DILocation(line: 154, column: 7, scope: !16145)
!16147 = !DILocation(line: 155, column: 13, scope: !16145)
!16148 = !DILocation(line: 155, column: 7, scope: !16145)
!16149 = !DILocation(line: 156, column: 15, scope: !16145)
!16150 = !DILocation(line: 156, column: 7, scope: !16145)
!16151 = !DILocation(line: 156, column: 13, scope: !16145)
!16152 = !DILocation(line: 157, column: 7, scope: !16145)
!16153 = !DILocation(line: 160, column: 7, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16000, file: !1163, line: 160, column: 7)
!16155 = !DILocation(line: 160, column: 7, scope: !16000)
!16156 = !DILocalVariable(name: "i", scope: !16157, file: !1163, line: 162, type: !52)
!16157 = distinct !DILexicalBlock(scope: !16154, file: !1163, line: 161, column: 5)
!16158 = !DILocation(line: 162, column: 14, scope: !16157)
!16159 = !DILocation(line: 164, column: 11, scope: !16160)
!16160 = distinct !DILexicalBlock(scope: !16157, file: !1163, line: 164, column: 11)
!16161 = !DILocation(line: 164, column: 11, scope: !16157)
!16162 = !DILocation(line: 165, column: 16, scope: !16160)
!16163 = !DILocation(line: 165, column: 25, scope: !16160)
!16164 = !DILocation(line: 165, column: 56, scope: !16160)
!16165 = !DILocation(line: 165, column: 9, scope: !16160)
!16166 = !DILocation(line: 166, column: 29, scope: !16157)
!16167 = !DILocation(line: 166, column: 34, scope: !16157)
!16168 = !DILocation(line: 166, column: 20, scope: !16157)
!16169 = !DILocation(line: 166, column: 18, scope: !16157)
!16170 = !DILocation(line: 167, column: 12, scope: !16157)
!16171 = !DILocation(line: 168, column: 14, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16157, file: !1163, line: 168, column: 7)
!16173 = !DILocation(line: 168, column: 12, scope: !16172)
!16174 = !DILocation(line: 168, column: 19, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16172, file: !1163, line: 168, column: 7)
!16176 = !DILocation(line: 168, column: 23, scope: !16175)
!16177 = !DILocation(line: 168, column: 21, scope: !16175)
!16178 = !DILocation(line: 168, column: 7, scope: !16172)
!16179 = !DILocalVariable(name: "dest", scope: !16180, file: !1163, line: 170, type: !7)
!16180 = distinct !DILexicalBlock(scope: !16175, file: !1163, line: 169, column: 9)
!16181 = !DILocation(line: 170, column: 17, scope: !16180)
!16182 = !DILocation(line: 170, column: 24, scope: !16180)
!16183 = !DILocation(line: 170, column: 37, scope: !16180)
!16184 = !DILocation(line: 170, column: 35, scope: !16180)
!16185 = !DILocation(line: 171, column: 27, scope: !16180)
!16186 = !DILocation(line: 171, column: 33, scope: !16180)
!16187 = !DILocation(line: 171, column: 41, scope: !16180)
!16188 = !DILocation(line: 171, column: 44, scope: !16180)
!16189 = !DILocation(line: 171, column: 19, scope: !16180)
!16190 = !DILocation(line: 171, column: 52, scope: !16180)
!16191 = !DILocation(line: 171, column: 50, scope: !16180)
!16192 = !DILocation(line: 171, column: 57, scope: !16180)
!16193 = !DILocation(line: 171, column: 16, scope: !16180)
!16194 = !DILocation(line: 172, column: 17, scope: !16180)
!16195 = !DILocation(line: 172, column: 25, scope: !16180)
!16196 = !DILocation(line: 172, column: 28, scope: !16180)
!16197 = !DILocation(line: 172, column: 11, scope: !16180)
!16198 = !DILocation(line: 173, column: 9, scope: !16180)
!16199 = !DILocation(line: 168, column: 38, scope: !16175)
!16200 = !DILocation(line: 168, column: 7, scope: !16175)
!16201 = distinct !{!16201, !16178, !16202}
!16202 = !DILocation(line: 173, column: 9, scope: !16172)
!16203 = !DILocation(line: 174, column: 13, scope: !16157)
!16204 = !DILocation(line: 174, column: 7, scope: !16157)
!16205 = !DILocation(line: 175, column: 5, scope: !16157)
!16206 = !DILocation(line: 176, column: 12, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16154, file: !1163, line: 176, column: 12)
!16208 = !DILocation(line: 176, column: 20, scope: !16207)
!16209 = !DILocation(line: 176, column: 17, scope: !16207)
!16210 = !DILocation(line: 176, column: 12, scope: !16154)
!16211 = !DILocation(line: 177, column: 28, scope: !16207)
!16212 = !DILocation(line: 177, column: 40, scope: !16207)
!16213 = !DILocation(line: 177, column: 45, scope: !16207)
!16214 = !DILocation(line: 177, column: 18, scope: !16207)
!16215 = !DILocation(line: 177, column: 16, scope: !16207)
!16216 = !DILocation(line: 177, column: 5, scope: !16207)
!16217 = !DILocation(line: 179, column: 3, scope: !16000)
!16218 = !DILocation(line: 179, column: 14, scope: !16000)
!16219 = !DILocation(line: 179, column: 20, scope: !16000)
!16220 = !DILocation(line: 180, column: 10, scope: !16000)
!16221 = !DILocation(line: 180, column: 3, scope: !16000)
!16222 = !DILocation(line: 181, column: 1, scope: !16000)
!16223 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !1163, file: !1163, line: 51, type: !1171, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1148, retainedNodes: !206)
!16224 = !DILocalVariable(name: "a", arg: 1, scope: !16223, file: !1163, line: 51, type: !525)
!16225 = !DILocation(line: 51, column: 32, scope: !16223)
!16226 = !DILocalVariable(name: "b", arg: 2, scope: !16223, file: !1163, line: 51, type: !525)
!16227 = !DILocation(line: 51, column: 47, scope: !16223)
!16228 = !DILocalVariable(name: "dea", scope: !16223, file: !1163, line: 53, type: !1186)
!16229 = !DILocation(line: 53, column: 21, scope: !16223)
!16230 = !DILocation(line: 53, column: 27, scope: !16223)
!16231 = !DILocalVariable(name: "deb", scope: !16223, file: !1163, line: 54, type: !1186)
!16232 = !DILocation(line: 54, column: 21, scope: !16223)
!16233 = !DILocation(line: 54, column: 27, scope: !16223)
!16234 = !DILocation(line: 56, column: 18, scope: !16223)
!16235 = !DILocation(line: 56, column: 23, scope: !16223)
!16236 = !DILocation(line: 56, column: 29, scope: !16223)
!16237 = !DILocation(line: 56, column: 34, scope: !16223)
!16238 = !DILocation(line: 56, column: 10, scope: !16223)
!16239 = !DILocation(line: 56, column: 3, scope: !16223)
!16240 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !1163, file: !1163, line: 63, type: !1171, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1148, retainedNodes: !206)
!16241 = !DILocalVariable(name: "a", arg: 1, scope: !16240, file: !1163, line: 63, type: !525)
!16242 = !DILocation(line: 63, column: 33, scope: !16240)
!16243 = !DILocalVariable(name: "b", arg: 2, scope: !16240, file: !1163, line: 63, type: !525)
!16244 = !DILocation(line: 63, column: 48, scope: !16240)
!16245 = !DILocalVariable(name: "dea", scope: !16240, file: !1163, line: 65, type: !1186)
!16246 = !DILocation(line: 65, column: 21, scope: !16240)
!16247 = !DILocation(line: 65, column: 27, scope: !16240)
!16248 = !DILocalVariable(name: "deb", scope: !16240, file: !1163, line: 66, type: !1186)
!16249 = !DILocation(line: 66, column: 21, scope: !16240)
!16250 = !DILocation(line: 66, column: 27, scope: !16240)
!16251 = !DILocation(line: 68, column: 10, scope: !16240)
!16252 = !DILocation(line: 68, column: 15, scope: !16240)
!16253 = !DILocation(line: 68, column: 21, scope: !16240)
!16254 = !DILocation(line: 68, column: 26, scope: !16240)
!16255 = !DILocation(line: 68, column: 19, scope: !16240)
!16256 = !DILocation(line: 68, column: 37, scope: !16240)
!16257 = !DILocation(line: 68, column: 42, scope: !16240)
!16258 = !DILocation(line: 68, column: 48, scope: !16240)
!16259 = !DILocation(line: 68, column: 53, scope: !16240)
!16260 = !DILocation(line: 68, column: 46, scope: !16240)
!16261 = !DILocation(line: 68, column: 3, scope: !16240)
!16262 = distinct !DISubprogram(name: "savedir", scope: !1163, file: !1163, line: 189, type: !1184, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1148, retainedNodes: !206)
!16263 = !DILocalVariable(name: "dir", arg: 1, scope: !16262, file: !1163, line: 189, type: !177)
!16264 = !DILocation(line: 189, column: 22, scope: !16262)
!16265 = !DILocalVariable(name: "option", arg: 2, scope: !16262, file: !1163, line: 189, type: !1151)
!16266 = !DILocation(line: 189, column: 47, scope: !16262)
!16267 = !DILocalVariable(name: "dirp", scope: !16262, file: !1163, line: 191, type: !675)
!16268 = !DILocation(line: 191, column: 8, scope: !16262)
!16269 = !DILocation(line: 191, column: 24, scope: !16262)
!16270 = !DILocation(line: 191, column: 15, scope: !16262)
!16271 = !DILocation(line: 192, column: 9, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16262, file: !1163, line: 192, column: 7)
!16273 = !DILocation(line: 192, column: 7, scope: !16262)
!16274 = !DILocation(line: 193, column: 5, scope: !16272)
!16275 = !DILocalVariable(name: "name_space", scope: !16276, file: !1163, line: 196, type: !7)
!16276 = distinct !DILexicalBlock(scope: !16272, file: !1163, line: 195, column: 5)
!16277 = !DILocation(line: 196, column: 13, scope: !16276)
!16278 = !DILocation(line: 196, column: 41, scope: !16276)
!16279 = !DILocation(line: 196, column: 47, scope: !16276)
!16280 = !DILocation(line: 196, column: 26, scope: !16276)
!16281 = !DILocation(line: 197, column: 21, scope: !16282)
!16282 = distinct !DILexicalBlock(scope: !16276, file: !1163, line: 197, column: 11)
!16283 = !DILocation(line: 197, column: 11, scope: !16282)
!16284 = !DILocation(line: 197, column: 27, scope: !16282)
!16285 = !DILocation(line: 197, column: 11, scope: !16276)
!16286 = !DILocalVariable(name: "closedir_errno", scope: !16287, file: !1163, line: 199, type: !5)
!16287 = distinct !DILexicalBlock(scope: !16282, file: !1163, line: 198, column: 9)
!16288 = !DILocation(line: 199, column: 15, scope: !16287)
!16289 = !DILocation(line: 199, column: 32, scope: !16287)
!16290 = !DILocation(line: 200, column: 17, scope: !16287)
!16291 = !DILocation(line: 200, column: 11, scope: !16287)
!16292 = !DILocation(line: 201, column: 19, scope: !16287)
!16293 = !DILocation(line: 201, column: 11, scope: !16287)
!16294 = !DILocation(line: 201, column: 17, scope: !16287)
!16295 = !DILocation(line: 202, column: 11, scope: !16287)
!16296 = !DILocation(line: 204, column: 14, scope: !16276)
!16297 = !DILocation(line: 204, column: 7, scope: !16276)
!16298 = !DILocation(line: 206, column: 1, scope: !16262)
!16299 = distinct !DISubprogram(name: "savewd_init", scope: !98, file: !98, line: 79, type: !1827, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!16300 = !DILocalVariable(name: "wd", arg: 1, scope: !16299, file: !98, line: 79, type: !1829)
!16301 = !DILocation(line: 79, column: 29, scope: !16299)
!16302 = !DILocation(line: 81, column: 3, scope: !16299)
!16303 = !DILocation(line: 81, column: 7, scope: !16299)
!16304 = !DILocation(line: 81, column: 13, scope: !16299)
!16305 = !{!16306, !2657, i64 0}
!16306 = !{!"savewd", !2657, i64 0, !2657, i64 4}
!16307 = !DILocation(line: 82, column: 1, scope: !16299)
!16308 = distinct !DISubprogram(name: "savewd_errno", scope: !98, file: !98, line: 124, type: !1830, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!16309 = !DILocalVariable(name: "wd", arg: 1, scope: !16308, file: !98, line: 124, type: !1832)
!16310 = !DILocation(line: 124, column: 36, scope: !16308)
!16311 = !DILocation(line: 126, column: 11, scope: !16308)
!16312 = !DILocation(line: 126, column: 15, scope: !16308)
!16313 = !DILocation(line: 126, column: 21, scope: !16308)
!16314 = !DILocation(line: 126, column: 38, scope: !16308)
!16315 = !DILocation(line: 126, column: 42, scope: !16308)
!16316 = !DILocation(line: 126, column: 46, scope: !16308)
!16317 = !DILocation(line: 126, column: 3, scope: !16308)
!16318 = distinct !DISubprogram(name: "savewd_chdir", scope: !1839, file: !1839, line: 106, type: !1834, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!16319 = !DILocalVariable(name: "wd", arg: 1, scope: !16318, file: !1839, line: 106, type: !1829)
!16320 = !DILocation(line: 106, column: 30, scope: !16318)
!16321 = !DILocalVariable(name: "dir", arg: 2, scope: !16318, file: !1839, line: 106, type: !177)
!16322 = !DILocation(line: 106, column: 46, scope: !16318)
!16323 = !DILocalVariable(name: "options", arg: 3, scope: !16318, file: !1839, line: 106, type: !5)
!16324 = !DILocation(line: 106, column: 55, scope: !16318)
!16325 = !DILocalVariable(name: "open_result", arg: 4, scope: !16318, file: !1839, line: 107, type: !190)
!16326 = !DILocation(line: 107, column: 19, scope: !16318)
!16327 = !DILocalVariable(name: "fd", scope: !16318, file: !1839, line: 109, type: !5)
!16328 = !DILocation(line: 109, column: 7, scope: !16318)
!16329 = !DILocalVariable(name: "result", scope: !16318, file: !1839, line: 110, type: !5)
!16330 = !DILocation(line: 110, column: 7, scope: !16318)
!16331 = !DILocation(line: 114, column: 7, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16318, file: !1839, line: 114, column: 7)
!16333 = !DILocation(line: 115, column: 7, scope: !16332)
!16334 = !DILocation(line: 115, column: 11, scope: !16332)
!16335 = !DILocation(line: 115, column: 19, scope: !16332)
!16336 = !DILocation(line: 114, column: 7, scope: !16318)
!16337 = !DILocation(line: 117, column: 18, scope: !16338)
!16338 = distinct !DILexicalBlock(scope: !16332, file: !1839, line: 116, column: 5)
!16339 = !DILocation(line: 119, column: 22, scope: !16338)
!16340 = !DILocation(line: 119, column: 30, scope: !16338)
!16341 = !DILocation(line: 119, column: 19, scope: !16338)
!16342 = !DILocation(line: 117, column: 12, scope: !16338)
!16343 = !DILocation(line: 117, column: 10, scope: !16338)
!16344 = !DILocation(line: 121, column: 11, scope: !16345)
!16345 = distinct !DILexicalBlock(scope: !16338, file: !1839, line: 121, column: 11)
!16346 = !DILocation(line: 121, column: 11, scope: !16338)
!16347 = !DILocation(line: 123, column: 28, scope: !16348)
!16348 = distinct !DILexicalBlock(scope: !16345, file: !1839, line: 122, column: 9)
!16349 = !DILocation(line: 123, column: 11, scope: !16348)
!16350 = !DILocation(line: 123, column: 26, scope: !16348)
!16351 = !DILocation(line: 124, column: 28, scope: !16348)
!16352 = !DILocation(line: 124, column: 11, scope: !16348)
!16353 = !DILocation(line: 124, column: 26, scope: !16348)
!16354 = !DILocation(line: 125, column: 9, scope: !16348)
!16355 = !DILocation(line: 127, column: 11, scope: !16356)
!16356 = distinct !DILexicalBlock(scope: !16338, file: !1839, line: 127, column: 11)
!16357 = !DILocation(line: 127, column: 14, scope: !16356)
!16358 = !DILocation(line: 127, column: 18, scope: !16356)
!16359 = !DILocation(line: 127, column: 21, scope: !16356)
!16360 = !DILocation(line: 127, column: 27, scope: !16356)
!16361 = !DILocation(line: 127, column: 11, scope: !16338)
!16362 = !DILocation(line: 128, column: 16, scope: !16356)
!16363 = !DILocation(line: 128, column: 9, scope: !16356)
!16364 = !DILocation(line: 129, column: 5, scope: !16338)
!16365 = !DILocation(line: 131, column: 7, scope: !16366)
!16366 = distinct !DILexicalBlock(scope: !16318, file: !1839, line: 131, column: 7)
!16367 = !DILocation(line: 131, column: 14, scope: !16366)
!16368 = !DILocation(line: 131, column: 19, scope: !16366)
!16369 = !DILocation(line: 131, column: 30, scope: !16366)
!16370 = !DILocation(line: 131, column: 27, scope: !16366)
!16371 = !DILocation(line: 131, column: 33, scope: !16366)
!16372 = !DILocation(line: 131, column: 36, scope: !16366)
!16373 = !DILocation(line: 131, column: 44, scope: !16366)
!16374 = !DILocation(line: 131, column: 7, scope: !16318)
!16375 = !DILocation(line: 133, column: 24, scope: !16376)
!16376 = distinct !DILexicalBlock(scope: !16377, file: !1839, line: 133, column: 11)
!16377 = distinct !DILexicalBlock(scope: !16366, file: !1839, line: 132, column: 5)
!16378 = !DILocation(line: 133, column: 11, scope: !16376)
!16379 = !DILocation(line: 133, column: 11, scope: !16377)
!16380 = !DILocation(line: 135, column: 23, scope: !16381)
!16381 = distinct !DILexicalBlock(scope: !16376, file: !1839, line: 134, column: 9)
!16382 = !DILocation(line: 136, column: 18, scope: !16381)
!16383 = !DILocation(line: 137, column: 9, scope: !16381)
!16384 = !DILocation(line: 140, column: 21, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16376, file: !1839, line: 139, column: 9)
!16386 = !DILocation(line: 140, column: 24, scope: !16385)
!16387 = !DILocation(line: 140, column: 37, scope: !16385)
!16388 = !DILocation(line: 140, column: 30, scope: !16385)
!16389 = !DILocation(line: 140, column: 52, scope: !16385)
!16390 = !DILocation(line: 140, column: 44, scope: !16385)
!16391 = !DILocation(line: 140, column: 18, scope: !16385)
!16392 = !DILocation(line: 142, column: 15, scope: !16393)
!16393 = distinct !DILexicalBlock(scope: !16385, file: !1839, line: 142, column: 15)
!16394 = !DILocation(line: 142, column: 22, scope: !16393)
!16395 = !DILocation(line: 142, column: 15, scope: !16385)
!16396 = !DILocation(line: 143, column: 21, scope: !16393)
!16397 = !DILocation(line: 143, column: 25, scope: !16393)
!16398 = !DILocation(line: 143, column: 13, scope: !16393)
!16399 = !DILocation(line: 146, column: 17, scope: !16400)
!16400 = distinct !DILexicalBlock(scope: !16393, file: !1839, line: 144, column: 15)
!16401 = !DILocation(line: 146, column: 21, scope: !16400)
!16402 = !DILocation(line: 146, column: 27, scope: !16400)
!16403 = !DILocation(line: 147, column: 17, scope: !16400)
!16404 = !DILocation(line: 152, column: 17, scope: !16400)
!16405 = !DILocation(line: 155, column: 17, scope: !16400)
!16406 = !DILocation(line: 156, column: 17, scope: !16400)
!16407 = !DILocation(line: 159, column: 17, scope: !16400)
!16408 = !DILocation(line: 160, column: 15, scope: !16400)
!16409 = !DILocation(line: 162, column: 5, scope: !16377)
!16410 = !DILocation(line: 164, column: 12, scope: !16411)
!16411 = distinct !DILexicalBlock(scope: !16318, file: !1839, line: 164, column: 7)
!16412 = !DILocation(line: 164, column: 9, scope: !16411)
!16413 = !DILocation(line: 164, column: 15, scope: !16411)
!16414 = !DILocation(line: 164, column: 20, scope: !16411)
!16415 = !DILocation(line: 164, column: 7, scope: !16318)
!16416 = !DILocalVariable(name: "e", scope: !16417, file: !1839, line: 166, type: !5)
!16417 = distinct !DILexicalBlock(scope: !16411, file: !1839, line: 165, column: 5)
!16418 = !DILocation(line: 166, column: 11, scope: !16417)
!16419 = !DILocation(line: 166, column: 15, scope: !16417)
!16420 = !DILocation(line: 167, column: 14, scope: !16417)
!16421 = !DILocation(line: 167, column: 7, scope: !16417)
!16422 = !DILocation(line: 168, column: 15, scope: !16417)
!16423 = !DILocation(line: 168, column: 7, scope: !16417)
!16424 = !DILocation(line: 168, column: 13, scope: !16417)
!16425 = !DILocation(line: 169, column: 5, scope: !16417)
!16426 = !DILocation(line: 171, column: 10, scope: !16318)
!16427 = !DILocation(line: 171, column: 3, scope: !16318)
!16428 = distinct !DISubprogram(name: "savewd_save", scope: !1839, file: !1839, line: 51, type: !1857, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!16429 = !DILocalVariable(name: "wd", arg: 1, scope: !16428, file: !1839, line: 51, type: !1829)
!16430 = !DILocation(line: 51, column: 29, scope: !16428)
!16431 = !DILocation(line: 53, column: 11, scope: !16428)
!16432 = !DILocation(line: 53, column: 15, scope: !16428)
!16433 = !DILocation(line: 53, column: 3, scope: !16428)
!16434 = !DILocalVariable(name: "fd", scope: !16435, file: !1839, line: 58, type: !5)
!16435 = distinct !DILexicalBlock(scope: !16436, file: !1839, line: 57, column: 7)
!16436 = distinct !DILexicalBlock(scope: !16428, file: !1839, line: 54, column: 5)
!16437 = !DILocation(line: 58, column: 13, scope: !16435)
!16438 = !DILocation(line: 58, column: 18, scope: !16435)
!16439 = !DILocation(line: 59, column: 18, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16435, file: !1839, line: 59, column: 13)
!16441 = !DILocation(line: 59, column: 15, scope: !16440)
!16442 = !DILocation(line: 59, column: 13, scope: !16435)
!16443 = !DILocation(line: 61, column: 13, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16440, file: !1839, line: 60, column: 11)
!16445 = !DILocation(line: 61, column: 17, scope: !16444)
!16446 = !DILocation(line: 61, column: 23, scope: !16444)
!16447 = !DILocation(line: 62, column: 26, scope: !16444)
!16448 = !DILocation(line: 62, column: 13, scope: !16444)
!16449 = !DILocation(line: 62, column: 17, scope: !16444)
!16450 = !DILocation(line: 62, column: 21, scope: !16444)
!16451 = !DILocation(line: 62, column: 24, scope: !16444)
!16452 = !DILocation(line: 63, column: 13, scope: !16444)
!16453 = !DILocation(line: 65, column: 13, scope: !16454)
!16454 = distinct !DILexicalBlock(scope: !16435, file: !1839, line: 65, column: 13)
!16455 = !DILocation(line: 65, column: 19, scope: !16454)
!16456 = !DILocation(line: 65, column: 29, scope: !16454)
!16457 = !DILocation(line: 65, column: 32, scope: !16454)
!16458 = !DILocation(line: 65, column: 38, scope: !16454)
!16459 = !DILocation(line: 65, column: 13, scope: !16435)
!16460 = !DILocation(line: 67, column: 13, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16454, file: !1839, line: 66, column: 11)
!16462 = !DILocation(line: 67, column: 17, scope: !16461)
!16463 = !DILocation(line: 67, column: 23, scope: !16461)
!16464 = !DILocation(line: 68, column: 30, scope: !16461)
!16465 = !DILocation(line: 68, column: 13, scope: !16461)
!16466 = !DILocation(line: 68, column: 17, scope: !16461)
!16467 = !DILocation(line: 68, column: 21, scope: !16461)
!16468 = !DILocation(line: 68, column: 28, scope: !16461)
!16469 = !DILocation(line: 69, column: 13, scope: !16461)
!16470 = !DILocation(line: 72, column: 7, scope: !16436)
!16471 = !DILocation(line: 72, column: 11, scope: !16436)
!16472 = !DILocation(line: 72, column: 17, scope: !16436)
!16473 = !DILocation(line: 73, column: 7, scope: !16436)
!16474 = !DILocation(line: 73, column: 11, scope: !16436)
!16475 = !DILocation(line: 73, column: 15, scope: !16436)
!16476 = !DILocation(line: 73, column: 21, scope: !16436)
!16477 = !DILocation(line: 74, column: 7, scope: !16436)
!16478 = !DILocation(line: 76, column: 11, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16436, file: !1839, line: 76, column: 11)
!16480 = !DILocation(line: 76, column: 15, scope: !16479)
!16481 = !DILocation(line: 76, column: 19, scope: !16479)
!16482 = !DILocation(line: 76, column: 25, scope: !16479)
!16483 = !DILocation(line: 76, column: 11, scope: !16436)
!16484 = !DILocation(line: 81, column: 27, scope: !16485)
!16485 = distinct !DILexicalBlock(scope: !16479, file: !1839, line: 77, column: 9)
!16486 = !DILocation(line: 81, column: 11, scope: !16485)
!16487 = !DILocation(line: 81, column: 15, scope: !16485)
!16488 = !DILocation(line: 81, column: 19, scope: !16485)
!16489 = !DILocation(line: 81, column: 25, scope: !16485)
!16490 = !DILocation(line: 82, column: 15, scope: !16491)
!16491 = distinct !DILexicalBlock(scope: !16485, file: !1839, line: 82, column: 15)
!16492 = !DILocation(line: 82, column: 19, scope: !16491)
!16493 = !DILocation(line: 82, column: 23, scope: !16491)
!16494 = !DILocation(line: 82, column: 29, scope: !16491)
!16495 = !DILocation(line: 82, column: 15, scope: !16485)
!16496 = !DILocation(line: 84, column: 23, scope: !16497)
!16497 = distinct !DILexicalBlock(scope: !16498, file: !1839, line: 84, column: 19)
!16498 = distinct !DILexicalBlock(scope: !16491, file: !1839, line: 83, column: 13)
!16499 = !DILocation(line: 84, column: 27, scope: !16497)
!16500 = !DILocation(line: 84, column: 31, scope: !16497)
!16501 = !DILocation(line: 84, column: 21, scope: !16497)
!16502 = !DILocation(line: 84, column: 19, scope: !16498)
!16503 = !DILocation(line: 85, column: 17, scope: !16497)
!16504 = !DILocation(line: 86, column: 15, scope: !16498)
!16505 = !DILocation(line: 86, column: 19, scope: !16498)
!16506 = !DILocation(line: 86, column: 25, scope: !16498)
!16507 = !DILocation(line: 87, column: 32, scope: !16498)
!16508 = !DILocation(line: 87, column: 15, scope: !16498)
!16509 = !DILocation(line: 87, column: 19, scope: !16498)
!16510 = !DILocation(line: 87, column: 23, scope: !16498)
!16511 = !DILocation(line: 87, column: 30, scope: !16498)
!16512 = !DILocation(line: 88, column: 13, scope: !16498)
!16513 = !DILocation(line: 89, column: 9, scope: !16485)
!16514 = !DILocation(line: 90, column: 7, scope: !16436)
!16515 = !DILocation(line: 96, column: 7, scope: !16436)
!16516 = !DILocation(line: 99, column: 7, scope: !16436)
!16517 = !DILocation(line: 102, column: 3, scope: !16428)
!16518 = !DILocation(line: 103, column: 1, scope: !16428)
!16519 = !DILocalVariable(name: "wd", arg: 1, scope: !1840, file: !1839, line: 175, type: !1829)
!16520 = !DILocation(line: 175, column: 32, scope: !1840)
!16521 = !DILocalVariable(name: "status", arg: 2, scope: !1840, file: !1839, line: 175, type: !5)
!16522 = !DILocation(line: 175, column: 40, scope: !1840)
!16523 = !DILocation(line: 177, column: 11, scope: !1840)
!16524 = !DILocation(line: 177, column: 15, scope: !1840)
!16525 = !DILocation(line: 177, column: 3, scope: !1840)
!16526 = !DILocation(line: 183, column: 7, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !1840, file: !1839, line: 178, column: 5)
!16528 = !DILocation(line: 187, column: 19, scope: !16529)
!16529 = distinct !DILexicalBlock(scope: !16527, file: !1839, line: 187, column: 11)
!16530 = !DILocation(line: 187, column: 23, scope: !16529)
!16531 = !DILocation(line: 187, column: 27, scope: !16529)
!16532 = !DILocation(line: 187, column: 11, scope: !16529)
!16533 = !DILocation(line: 187, column: 31, scope: !16529)
!16534 = !DILocation(line: 187, column: 11, scope: !16527)
!16535 = !DILocation(line: 189, column: 11, scope: !16536)
!16536 = distinct !DILexicalBlock(scope: !16529, file: !1839, line: 188, column: 9)
!16537 = !DILocation(line: 189, column: 15, scope: !16536)
!16538 = !DILocation(line: 189, column: 21, scope: !16536)
!16539 = !DILocation(line: 190, column: 11, scope: !16536)
!16540 = !DILocalVariable(name: "chdir_errno", scope: !16541, file: !1839, line: 194, type: !5)
!16541 = distinct !DILexicalBlock(scope: !16529, file: !1839, line: 193, column: 9)
!16542 = !DILocation(line: 194, column: 15, scope: !16541)
!16543 = !DILocation(line: 194, column: 29, scope: !16541)
!16544 = !DILocation(line: 195, column: 18, scope: !16541)
!16545 = !DILocation(line: 195, column: 22, scope: !16541)
!16546 = !DILocation(line: 195, column: 26, scope: !16541)
!16547 = !DILocation(line: 195, column: 11, scope: !16541)
!16548 = !DILocation(line: 196, column: 11, scope: !16541)
!16549 = !DILocation(line: 196, column: 15, scope: !16541)
!16550 = !DILocation(line: 196, column: 21, scope: !16541)
!16551 = !DILocation(line: 197, column: 28, scope: !16541)
!16552 = !DILocation(line: 197, column: 11, scope: !16541)
!16553 = !DILocation(line: 197, column: 15, scope: !16541)
!16554 = !DILocation(line: 197, column: 19, scope: !16541)
!16555 = !DILocation(line: 197, column: 26, scope: !16541)
!16556 = !DILocation(line: 199, column: 7, scope: !16527)
!16557 = !DILocation(line: 202, column: 15, scope: !16527)
!16558 = !DILocation(line: 202, column: 19, scope: !16527)
!16559 = !DILocation(line: 202, column: 23, scope: !16527)
!16560 = !DILocation(line: 202, column: 7, scope: !16527)
!16561 = !DILocation(line: 202, column: 13, scope: !16527)
!16562 = !DILocation(line: 203, column: 7, scope: !16527)
!16563 = !DILocalVariable(name: "child", scope: !16564, file: !1839, line: 209, type: !108)
!16564 = distinct !DILexicalBlock(scope: !16527, file: !1839, line: 208, column: 7)
!16565 = !DILocation(line: 209, column: 15, scope: !16564)
!16566 = !DILocation(line: 209, column: 23, scope: !16564)
!16567 = !DILocation(line: 209, column: 27, scope: !16564)
!16568 = !DILocation(line: 209, column: 31, scope: !16564)
!16569 = !DILocation(line: 210, column: 13, scope: !16570)
!16570 = distinct !DILexicalBlock(scope: !16564, file: !1839, line: 210, column: 13)
!16571 = !DILocation(line: 210, column: 19, scope: !16570)
!16572 = !DILocation(line: 210, column: 13, scope: !16564)
!16573 = !DILocation(line: 211, column: 18, scope: !16570)
!16574 = !DILocation(line: 211, column: 11, scope: !16570)
!16575 = !DILocation(line: 212, column: 17, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16564, file: !1839, line: 212, column: 13)
!16577 = !DILocation(line: 212, column: 15, scope: !16576)
!16578 = !DILocation(line: 212, column: 13, scope: !16564)
!16579 = !DILocalVariable(name: "child_status", scope: !16580, file: !1839, line: 214, type: !5)
!16580 = distinct !DILexicalBlock(scope: !16576, file: !1839, line: 213, column: 11)
!16581 = !DILocation(line: 214, column: 17, scope: !16580)
!16582 = !DILocation(line: 215, column: 13, scope: !16580)
!16583 = !DILocation(line: 215, column: 29, scope: !16580)
!16584 = !DILocation(line: 215, column: 20, scope: !16580)
!16585 = !DILocation(line: 215, column: 54, scope: !16580)
!16586 = !DILocation(line: 216, column: 15, scope: !16580)
!16587 = distinct !{!16587, !16582, !16586}
!16588 = !DILocation(line: 217, column: 13, scope: !16580)
!16589 = !DILocation(line: 217, column: 17, scope: !16580)
!16590 = !DILocation(line: 217, column: 21, scope: !16580)
!16591 = !DILocation(line: 217, column: 27, scope: !16580)
!16592 = !DILocation(line: 218, column: 19, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16580, file: !1839, line: 218, column: 17)
!16594 = !DILocation(line: 218, column: 17, scope: !16580)
!16595 = !DILocation(line: 219, column: 22, scope: !16593)
!16596 = !DILocation(line: 219, column: 15, scope: !16593)
!16597 = !DILocation(line: 220, column: 20, scope: !16580)
!16598 = !DILocation(line: 220, column: 13, scope: !16580)
!16599 = !DILocation(line: 223, column: 7, scope: !16527)
!16600 = !DILocation(line: 226, column: 7, scope: !16527)
!16601 = !DILocation(line: 229, column: 3, scope: !1840)
!16602 = !DILocation(line: 230, column: 1, scope: !1840)
!16603 = distinct !DISubprogram(name: "savewd_finish", scope: !1839, file: !1839, line: 233, type: !1827, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!16604 = !DILocalVariable(name: "wd", arg: 1, scope: !16603, file: !1839, line: 233, type: !1829)
!16605 = !DILocation(line: 233, column: 31, scope: !16603)
!16606 = !DILocation(line: 235, column: 11, scope: !16603)
!16607 = !DILocation(line: 235, column: 15, scope: !16603)
!16608 = !DILocation(line: 235, column: 3, scope: !16603)
!16609 = !DILocation(line: 239, column: 7, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16603, file: !1839, line: 236, column: 5)
!16611 = !DILocation(line: 243, column: 14, scope: !16610)
!16612 = !DILocation(line: 243, column: 18, scope: !16610)
!16613 = !DILocation(line: 243, column: 22, scope: !16610)
!16614 = !DILocation(line: 243, column: 7, scope: !16610)
!16615 = !DILocation(line: 244, column: 7, scope: !16610)
!16616 = !DILocation(line: 247, column: 7, scope: !16610)
!16617 = !DILocation(line: 248, column: 7, scope: !16610)
!16618 = !DILocation(line: 251, column: 7, scope: !16610)
!16619 = !DILocation(line: 254, column: 3, scope: !16603)
!16620 = !DILocation(line: 254, column: 7, scope: !16603)
!16621 = !DILocation(line: 254, column: 13, scope: !16603)
!16622 = !DILocation(line: 255, column: 1, scope: !16603)
!16623 = distinct !DISubprogram(name: "savewd_process_files", scope: !1839, file: !1839, line: 274, type: !1852, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!16624 = !DILocalVariable(name: "n_files", arg: 1, scope: !16623, file: !1839, line: 274, type: !5)
!16625 = !DILocation(line: 274, column: 27, scope: !16623)
!16626 = !DILocalVariable(name: "file", arg: 2, scope: !16623, file: !1839, line: 274, type: !181)
!16627 = !DILocation(line: 274, column: 43, scope: !16623)
!16628 = !DILocalVariable(name: "act", arg: 3, scope: !16623, file: !1839, line: 275, type: !1854)
!16629 = !DILocation(line: 275, column: 29, scope: !16623)
!16630 = !DILocalVariable(name: "options", arg: 4, scope: !16623, file: !1839, line: 276, type: !47)
!16631 = !DILocation(line: 276, column: 29, scope: !16623)
!16632 = !DILocalVariable(name: "i", scope: !16623, file: !1839, line: 278, type: !5)
!16633 = !DILocation(line: 278, column: 7, scope: !16623)
!16634 = !DILocalVariable(name: "last_relative", scope: !16623, file: !1839, line: 279, type: !5)
!16635 = !DILocation(line: 279, column: 7, scope: !16623)
!16636 = !DILocalVariable(name: "exit_status", scope: !16623, file: !1839, line: 280, type: !5)
!16637 = !DILocation(line: 280, column: 7, scope: !16623)
!16638 = !DILocalVariable(name: "wd", scope: !16623, file: !1839, line: 281, type: !1817)
!16639 = !DILocation(line: 281, column: 17, scope: !16623)
!16640 = !DILocation(line: 282, column: 3, scope: !16623)
!16641 = !DILocation(line: 284, column: 24, scope: !16642)
!16642 = distinct !DILexicalBlock(scope: !16623, file: !1839, line: 284, column: 3)
!16643 = !DILocation(line: 284, column: 32, scope: !16642)
!16644 = !DILocation(line: 284, column: 22, scope: !16642)
!16645 = !DILocation(line: 284, column: 8, scope: !16642)
!16646 = !DILocation(line: 284, column: 42, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16642, file: !1839, line: 284, column: 3)
!16648 = !DILocation(line: 284, column: 39, scope: !16647)
!16649 = !DILocation(line: 284, column: 3, scope: !16642)
!16650 = !DILocation(line: 285, column: 11, scope: !16651)
!16651 = distinct !DILexicalBlock(scope: !16647, file: !1839, line: 285, column: 9)
!16652 = !DILocation(line: 285, column: 9, scope: !16647)
!16653 = !DILocation(line: 286, column: 7, scope: !16651)
!16654 = !DILocation(line: 284, column: 70, scope: !16647)
!16655 = !DILocation(line: 284, column: 3, scope: !16647)
!16656 = distinct !{!16656, !16649, !16657}
!16657 = !DILocation(line: 286, column: 7, scope: !16642)
!16658 = !DILocation(line: 288, column: 3, scope: !16623)
!16659 = !DILocation(line: 288, column: 10, scope: !16660)
!16660 = distinct !DILexicalBlock(scope: !16661, file: !1839, line: 288, column: 3)
!16661 = distinct !DILexicalBlock(scope: !16623, file: !1839, line: 288, column: 3)
!16662 = !DILocation(line: 288, column: 14, scope: !16660)
!16663 = !DILocation(line: 288, column: 12, scope: !16660)
!16664 = !DILocation(line: 288, column: 3, scope: !16661)
!16665 = !DILocation(line: 290, column: 13, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16667, file: !1839, line: 290, column: 11)
!16667 = distinct !DILexicalBlock(scope: !16660, file: !1839, line: 289, column: 5)
!16668 = !DILocation(line: 290, column: 11, scope: !16667)
!16669 = !DILocalVariable(name: "s", scope: !16670, file: !1839, line: 292, type: !5)
!16670 = distinct !DILexicalBlock(scope: !16666, file: !1839, line: 291, column: 9)
!16671 = !DILocation(line: 292, column: 15, scope: !16670)
!16672 = !DILocation(line: 292, column: 19, scope: !16670)
!16673 = !DILocation(line: 292, column: 24, scope: !16670)
!16674 = !DILocation(line: 292, column: 29, scope: !16670)
!16675 = !DILocation(line: 292, column: 38, scope: !16670)
!16676 = !DILocation(line: 293, column: 15, scope: !16677)
!16677 = distinct !DILexicalBlock(scope: !16670, file: !1839, line: 293, column: 15)
!16678 = !DILocation(line: 293, column: 29, scope: !16677)
!16679 = !DILocation(line: 293, column: 27, scope: !16677)
!16680 = !DILocation(line: 293, column: 15, scope: !16670)
!16681 = !DILocation(line: 294, column: 27, scope: !16677)
!16682 = !DILocation(line: 294, column: 25, scope: !16677)
!16683 = !DILocation(line: 294, column: 13, scope: !16677)
!16684 = !DILocation(line: 295, column: 9, scope: !16670)
!16685 = !DILocation(line: 297, column: 13, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16667, file: !1839, line: 297, column: 11)
!16687 = !DILocation(line: 297, column: 11, scope: !16667)
!16688 = !DILocalVariable(name: "r", scope: !16689, file: !1839, line: 299, type: !5)
!16689 = distinct !DILexicalBlock(scope: !16686, file: !1839, line: 298, column: 9)
!16690 = !DILocation(line: 299, column: 15, scope: !16689)
!16691 = !DILocation(line: 299, column: 40, scope: !16689)
!16692 = !DILocation(line: 299, column: 19, scope: !16689)
!16693 = !DILocation(line: 300, column: 15, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16689, file: !1839, line: 300, column: 15)
!16695 = !DILocation(line: 300, column: 29, scope: !16694)
!16696 = !DILocation(line: 300, column: 27, scope: !16694)
!16697 = !DILocation(line: 300, column: 15, scope: !16689)
!16698 = !DILocation(line: 301, column: 27, scope: !16694)
!16699 = !DILocation(line: 301, column: 25, scope: !16694)
!16700 = !DILocation(line: 301, column: 13, scope: !16694)
!16701 = !DILocation(line: 302, column: 9, scope: !16689)
!16702 = !DILocation(line: 303, column: 5, scope: !16667)
!16703 = !DILocation(line: 288, column: 30, scope: !16660)
!16704 = !DILocation(line: 288, column: 3, scope: !16660)
!16705 = distinct !{!16705, !16664, !16706}
!16706 = !DILocation(line: 303, column: 5, scope: !16661)
!16707 = !DILocation(line: 305, column: 3, scope: !16623)
!16708 = !DILocation(line: 307, column: 3, scope: !16623)
!16709 = !DILocation(line: 307, column: 10, scope: !16710)
!16710 = distinct !DILexicalBlock(scope: !16711, file: !1839, line: 307, column: 3)
!16711 = distinct !DILexicalBlock(scope: !16623, file: !1839, line: 307, column: 3)
!16712 = !DILocation(line: 307, column: 14, scope: !16710)
!16713 = !DILocation(line: 307, column: 12, scope: !16710)
!16714 = !DILocation(line: 307, column: 3, scope: !16711)
!16715 = !DILocalVariable(name: "s", scope: !16716, file: !1839, line: 309, type: !5)
!16716 = distinct !DILexicalBlock(scope: !16710, file: !1839, line: 308, column: 5)
!16717 = !DILocation(line: 309, column: 11, scope: !16716)
!16718 = !DILocation(line: 309, column: 15, scope: !16716)
!16719 = !DILocation(line: 309, column: 20, scope: !16716)
!16720 = !DILocation(line: 309, column: 25, scope: !16716)
!16721 = !DILocation(line: 309, column: 34, scope: !16716)
!16722 = !DILocation(line: 310, column: 11, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16716, file: !1839, line: 310, column: 11)
!16724 = !DILocation(line: 310, column: 25, scope: !16723)
!16725 = !DILocation(line: 310, column: 23, scope: !16723)
!16726 = !DILocation(line: 310, column: 11, scope: !16716)
!16727 = !DILocation(line: 311, column: 23, scope: !16723)
!16728 = !DILocation(line: 311, column: 21, scope: !16723)
!16729 = !DILocation(line: 311, column: 9, scope: !16723)
!16730 = !DILocation(line: 312, column: 5, scope: !16716)
!16731 = !DILocation(line: 307, column: 24, scope: !16710)
!16732 = !DILocation(line: 307, column: 3, scope: !16710)
!16733 = distinct !{!16733, !16714, !16734}
!16734 = !DILocation(line: 312, column: 5, scope: !16711)
!16735 = !DILocation(line: 314, column: 10, scope: !16623)
!16736 = !DILocation(line: 314, column: 3, scope: !16623)
!16737 = distinct !DISubprogram(name: "savewd_delegating", scope: !1839, file: !1839, line: 268, type: !1859, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1813, retainedNodes: !206)
!16738 = !DILocalVariable(name: "wd", arg: 1, scope: !16737, file: !1839, line: 268, type: !1832)
!16739 = !DILocation(line: 268, column: 41, scope: !16737)
!16740 = !DILocation(line: 270, column: 10, scope: !16737)
!16741 = !DILocation(line: 270, column: 14, scope: !16737)
!16742 = !DILocation(line: 270, column: 20, scope: !16737)
!16743 = !DILocation(line: 270, column: 37, scope: !16737)
!16744 = !DILocation(line: 270, column: 44, scope: !16737)
!16745 = !DILocation(line: 270, column: 48, scope: !16737)
!16746 = !DILocation(line: 270, column: 52, scope: !16737)
!16747 = !DILocation(line: 270, column: 42, scope: !16737)
!16748 = !DILocation(line: 0, scope: !16737)
!16749 = !DILocation(line: 270, column: 3, scope: !16737)
!16750 = distinct !DISubprogram(name: "getcon", scope: !1868, file: !1868, line: 87, type: !1864, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16751 = !DILocalVariable(name: "con", arg: 1, scope: !16750, file: !1868, line: 87, type: !1866)
!16752 = !DILocation(line: 87, column: 29, scope: !16750)
!16753 = !DILocation(line: 88, column: 5, scope: !16750)
!16754 = !DILocation(line: 88, column: 11, scope: !16750)
!16755 = !DILocation(line: 88, column: 22, scope: !16750)
!16756 = distinct !DISubprogram(name: "freecon", scope: !1868, file: !1868, line: 90, type: !1869, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16757 = !DILocalVariable(name: "con", arg: 1, scope: !16756, file: !1868, line: 90, type: !1867)
!16758 = !DILocation(line: 90, column: 29, scope: !16756)
!16759 = !DILocation(line: 90, column: 56, scope: !16756)
!16760 = distinct !DISubprogram(name: "getfscreatecon", scope: !1868, file: !1868, line: 93, type: !1864, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16761 = !DILocalVariable(name: "con", arg: 1, scope: !16760, file: !1868, line: 93, type: !1866)
!16762 = !DILocation(line: 93, column: 37, scope: !16760)
!16763 = !DILocation(line: 94, column: 5, scope: !16760)
!16764 = !DILocation(line: 94, column: 11, scope: !16760)
!16765 = !DILocation(line: 94, column: 22, scope: !16760)
!16766 = distinct !DISubprogram(name: "setfscreatecon", scope: !1868, file: !1868, line: 96, type: !1871, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16767 = !DILocalVariable(name: "con", arg: 1, scope: !16766, file: !1868, line: 96, type: !1867)
!16768 = !DILocation(line: 96, column: 36, scope: !16766)
!16769 = !DILocation(line: 97, column: 5, scope: !16766)
!16770 = !DILocation(line: 97, column: 11, scope: !16766)
!16771 = !DILocation(line: 97, column: 22, scope: !16766)
!16772 = distinct !DISubprogram(name: "matchpathcon", scope: !1868, file: !1868, line: 99, type: !1873, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16773 = !DILocalVariable(name: "file", arg: 1, scope: !16772, file: !1868, line: 99, type: !177)
!16774 = !DILocation(line: 99, column: 27, scope: !16772)
!16775 = !DILocalVariable(name: "m", arg: 2, scope: !16772, file: !1868, line: 100, type: !136)
!16776 = !DILocation(line: 100, column: 22, scope: !16772)
!16777 = !DILocalVariable(name: "con", arg: 3, scope: !16772, file: !1868, line: 101, type: !1866)
!16778 = !DILocation(line: 101, column: 23, scope: !16772)
!16779 = !DILocation(line: 102, column: 5, scope: !16772)
!16780 = !DILocation(line: 102, column: 11, scope: !16772)
!16781 = !DILocation(line: 102, column: 22, scope: !16772)
!16782 = distinct !DISubprogram(name: "getfilecon", scope: !1868, file: !1868, line: 104, type: !1875, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16783 = !DILocalVariable(name: "file", arg: 1, scope: !16782, file: !1868, line: 104, type: !177)
!16784 = !DILocation(line: 104, column: 25, scope: !16782)
!16785 = !DILocalVariable(name: "con", arg: 2, scope: !16782, file: !1868, line: 105, type: !1866)
!16786 = !DILocation(line: 105, column: 33, scope: !16782)
!16787 = !DILocation(line: 106, column: 5, scope: !16782)
!16788 = !DILocation(line: 106, column: 11, scope: !16782)
!16789 = !DILocation(line: 106, column: 22, scope: !16782)
!16790 = distinct !DISubprogram(name: "lgetfilecon", scope: !1868, file: !1868, line: 108, type: !1875, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16791 = !DILocalVariable(name: "file", arg: 1, scope: !16790, file: !1868, line: 108, type: !177)
!16792 = !DILocation(line: 108, column: 26, scope: !16790)
!16793 = !DILocalVariable(name: "con", arg: 2, scope: !16790, file: !1868, line: 109, type: !1866)
!16794 = !DILocation(line: 109, column: 34, scope: !16790)
!16795 = !DILocation(line: 110, column: 5, scope: !16790)
!16796 = !DILocation(line: 110, column: 11, scope: !16790)
!16797 = !DILocation(line: 110, column: 22, scope: !16790)
!16798 = distinct !DISubprogram(name: "fgetfilecon", scope: !1868, file: !1868, line: 112, type: !1877, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16799 = !DILocalVariable(name: "fd", arg: 1, scope: !16798, file: !1868, line: 112, type: !5)
!16800 = !DILocation(line: 112, column: 18, scope: !16798)
!16801 = !DILocalVariable(name: "con", arg: 2, scope: !16798, file: !1868, line: 112, type: !1866)
!16802 = !DILocation(line: 112, column: 42, scope: !16798)
!16803 = !DILocation(line: 113, column: 5, scope: !16798)
!16804 = !DILocation(line: 113, column: 11, scope: !16798)
!16805 = !DILocation(line: 113, column: 22, scope: !16798)
!16806 = distinct !DISubprogram(name: "setfilecon", scope: !1868, file: !1868, line: 115, type: !1879, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16807 = !DILocalVariable(name: "file", arg: 1, scope: !16806, file: !1868, line: 115, type: !177)
!16808 = !DILocation(line: 115, column: 25, scope: !16806)
!16809 = !DILocalVariable(name: "con", arg: 2, scope: !16806, file: !1868, line: 116, type: !1867)
!16810 = !DILocation(line: 116, column: 32, scope: !16806)
!16811 = !DILocation(line: 117, column: 5, scope: !16806)
!16812 = !DILocation(line: 117, column: 11, scope: !16806)
!16813 = !DILocation(line: 117, column: 22, scope: !16806)
!16814 = distinct !DISubprogram(name: "lsetfilecon", scope: !1868, file: !1868, line: 119, type: !1879, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16815 = !DILocalVariable(name: "file", arg: 1, scope: !16814, file: !1868, line: 119, type: !177)
!16816 = !DILocation(line: 119, column: 26, scope: !16814)
!16817 = !DILocalVariable(name: "con", arg: 2, scope: !16814, file: !1868, line: 120, type: !1867)
!16818 = !DILocation(line: 120, column: 33, scope: !16814)
!16819 = !DILocation(line: 121, column: 5, scope: !16814)
!16820 = !DILocation(line: 121, column: 11, scope: !16814)
!16821 = !DILocation(line: 121, column: 22, scope: !16814)
!16822 = distinct !DISubprogram(name: "fsetfilecon", scope: !1868, file: !1868, line: 123, type: !1881, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16823 = !DILocalVariable(name: "fd", arg: 1, scope: !16822, file: !1868, line: 123, type: !5)
!16824 = !DILocation(line: 123, column: 18, scope: !16822)
!16825 = !DILocalVariable(name: "con", arg: 2, scope: !16822, file: !1868, line: 124, type: !1867)
!16826 = !DILocation(line: 124, column: 33, scope: !16822)
!16827 = !DILocation(line: 125, column: 5, scope: !16822)
!16828 = !DILocation(line: 125, column: 11, scope: !16822)
!16829 = !DILocation(line: 125, column: 22, scope: !16822)
!16830 = distinct !DISubprogram(name: "security_check_context", scope: !1868, file: !1868, line: 128, type: !1871, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16831 = !DILocalVariable(name: "con", arg: 1, scope: !16830, file: !1868, line: 128, type: !1867)
!16832 = !DILocation(line: 128, column: 44, scope: !16830)
!16833 = !DILocation(line: 129, column: 5, scope: !16830)
!16834 = !DILocation(line: 129, column: 11, scope: !16830)
!16835 = !DILocation(line: 129, column: 22, scope: !16830)
!16836 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1868, file: !1868, line: 131, type: !1871, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16837 = !DILocalVariable(name: "con", arg: 1, scope: !16836, file: !1868, line: 131, type: !1867)
!16838 = !DILocation(line: 131, column: 48, scope: !16836)
!16839 = !DILocation(line: 132, column: 5, scope: !16836)
!16840 = !DILocation(line: 132, column: 11, scope: !16836)
!16841 = !DILocation(line: 132, column: 22, scope: !16836)
!16842 = distinct !DISubprogram(name: "setexeccon", scope: !1868, file: !1868, line: 134, type: !1871, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16843 = !DILocalVariable(name: "con", arg: 1, scope: !16842, file: !1868, line: 134, type: !1867)
!16844 = !DILocation(line: 134, column: 32, scope: !16842)
!16845 = !DILocation(line: 135, column: 5, scope: !16842)
!16846 = !DILocation(line: 135, column: 11, scope: !16842)
!16847 = !DILocation(line: 135, column: 22, scope: !16842)
!16848 = distinct !DISubprogram(name: "security_compute_create", scope: !1868, file: !1868, line: 137, type: !1883, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16849 = !DILocalVariable(name: "scon", arg: 1, scope: !16848, file: !1868, line: 137, type: !1867)
!16850 = !DILocation(line: 137, column: 45, scope: !16848)
!16851 = !DILocalVariable(name: "tcon", arg: 2, scope: !16848, file: !1868, line: 138, type: !1867)
!16852 = !DILocation(line: 138, column: 45, scope: !16848)
!16853 = !DILocalVariable(name: "tclass", arg: 3, scope: !16848, file: !1868, line: 139, type: !1885)
!16854 = !DILocation(line: 139, column: 43, scope: !16848)
!16855 = !DILocalVariable(name: "newcon", arg: 4, scope: !16848, file: !1868, line: 140, type: !1866)
!16856 = !DILocation(line: 140, column: 46, scope: !16848)
!16857 = !DILocation(line: 141, column: 5, scope: !16848)
!16858 = !DILocation(line: 141, column: 11, scope: !16848)
!16859 = !DILocation(line: 141, column: 22, scope: !16848)
!16860 = distinct !DISubprogram(name: "string_to_security_class", scope: !1868, file: !1868, line: 143, type: !1886, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16861 = !DILocalVariable(name: "name", arg: 1, scope: !16860, file: !1868, line: 143, type: !177)
!16862 = !DILocation(line: 143, column: 39, scope: !16860)
!16863 = !DILocation(line: 144, column: 5, scope: !16860)
!16864 = !DILocation(line: 144, column: 11, scope: !16860)
!16865 = !DILocation(line: 144, column: 22, scope: !16860)
!16866 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1868, file: !1868, line: 146, type: !1888, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1861, retainedNodes: !206)
!16867 = !DILocalVariable(name: "path", arg: 1, scope: !16866, file: !1868, line: 146, type: !177)
!16868 = !DILocation(line: 146, column: 39, scope: !16866)
!16869 = !DILocalVariable(name: "prefix", arg: 2, scope: !16866, file: !1868, line: 147, type: !177)
!16870 = !DILocation(line: 147, column: 39, scope: !16866)
!16871 = !DILocation(line: 148, column: 5, scope: !16866)
!16872 = !DILocation(line: 148, column: 11, scope: !16866)
!16873 = !DILocation(line: 148, column: 22, scope: !16866)
!16874 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !16875, file: !16875, line: 66, type: !1893, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16875 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mohamad/clone/coreutils")
!16876 = !DILocalVariable(name: "st", arg: 1, scope: !16874, file: !16875, line: 66, type: !1895)
!16877 = !DILocation(line: 66, column: 39, scope: !16874)
!16878 = !DILocation(line: 69, column: 10, scope: !16874)
!16879 = !DILocation(line: 69, column: 38, scope: !16874)
!16880 = !{!2935, !2936, i64 80}
!16881 = !DILocation(line: 69, column: 3, scope: !16874)
!16882 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !16875, file: !16875, line: 79, type: !1893, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16883 = !DILocalVariable(name: "st", arg: 1, scope: !16882, file: !16875, line: 79, type: !1895)
!16884 = !DILocation(line: 79, column: 39, scope: !16882)
!16885 = !DILocation(line: 82, column: 10, scope: !16882)
!16886 = !DILocation(line: 82, column: 38, scope: !16882)
!16887 = !{!2935, !2936, i64 112}
!16888 = !DILocation(line: 82, column: 3, scope: !16882)
!16889 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !16875, file: !16875, line: 92, type: !1893, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16890 = !DILocalVariable(name: "st", arg: 1, scope: !16889, file: !16875, line: 92, type: !1895)
!16891 = !DILocation(line: 92, column: 39, scope: !16889)
!16892 = !DILocation(line: 95, column: 10, scope: !16889)
!16893 = !DILocation(line: 95, column: 38, scope: !16889)
!16894 = !{!2935, !2936, i64 96}
!16895 = !DILocation(line: 95, column: 3, scope: !16889)
!16896 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !16875, file: !16875, line: 105, type: !1893, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16897 = !DILocalVariable(name: "st", arg: 1, scope: !16896, file: !16875, line: 105, type: !1895)
!16898 = !DILocation(line: 105, column: 43, scope: !16896)
!16899 = !DILocation(line: 112, column: 3, scope: !16896)
!16900 = distinct !DISubprogram(name: "get_stat_atime", scope: !16875, file: !16875, line: 118, type: !1918, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16901 = !DILocalVariable(name: "st", arg: 1, scope: !16900, file: !16875, line: 118, type: !1895)
!16902 = !DILocation(line: 118, column: 36, scope: !16900)
!16903 = !DILocation(line: 121, column: 10, scope: !16900)
!16904 = !DILocation(line: 121, column: 3, scope: !16900)
!16905 = distinct !DISubprogram(name: "get_stat_ctime", scope: !16875, file: !16875, line: 132, type: !1918, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16906 = !DILocalVariable(name: "st", arg: 1, scope: !16905, file: !16875, line: 132, type: !1895)
!16907 = !DILocation(line: 132, column: 36, scope: !16905)
!16908 = !DILocation(line: 135, column: 10, scope: !16905)
!16909 = !DILocation(line: 135, column: 3, scope: !16905)
!16910 = distinct !DISubprogram(name: "get_stat_mtime", scope: !16875, file: !16875, line: 146, type: !1918, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16911 = !DILocalVariable(name: "st", arg: 1, scope: !16910, file: !16875, line: 146, type: !1895)
!16912 = !DILocation(line: 146, column: 36, scope: !16910)
!16913 = !DILocation(line: 149, column: 10, scope: !16910)
!16914 = !DILocation(line: 149, column: 3, scope: !16910)
!16915 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !16875, file: !16875, line: 161, type: !1918, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16916 = !DILocalVariable(name: "st", arg: 1, scope: !16915, file: !16875, line: 161, type: !1895)
!16917 = !DILocation(line: 161, column: 40, scope: !16915)
!16918 = !DILocalVariable(name: "t", scope: !16915, file: !16875, line: 163, type: !1911)
!16919 = !DILocation(line: 163, column: 19, scope: !16915)
!16920 = !DILocation(line: 183, column: 5, scope: !16915)
!16921 = !DILocation(line: 183, column: 12, scope: !16915)
!16922 = !{!2937, !2936, i64 0}
!16923 = !DILocation(line: 184, column: 5, scope: !16915)
!16924 = !DILocation(line: 184, column: 13, scope: !16915)
!16925 = !{!2937, !2936, i64 8}
!16926 = !DILocation(line: 202, column: 3, scope: !16915)
!16927 = distinct !DISubprogram(name: "stat_time_normalize", scope: !16875, file: !16875, line: 211, type: !1920, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1890, retainedNodes: !206)
!16928 = !DILocalVariable(name: "result", arg: 1, scope: !16927, file: !16875, line: 211, type: !5)
!16929 = !DILocation(line: 211, column: 26, scope: !16927)
!16930 = !DILocalVariable(name: "st", arg: 2, scope: !16927, file: !16875, line: 211, type: !1922)
!16931 = !DILocation(line: 211, column: 47, scope: !16927)
!16932 = !DILocation(line: 243, column: 10, scope: !16927)
!16933 = !DILocation(line: 243, column: 3, scope: !16927)
!16934 = distinct !DISubprogram(name: "statat", scope: !16935, file: !16935, line: 102, type: !1926, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1923, retainedNodes: !206)
!16935 = !DIFile(filename: "./lib/openat.h", directory: "/home/mohamad/clone/coreutils")
!16936 = !DILocalVariable(name: "fd", arg: 1, scope: !16934, file: !16935, line: 102, type: !5)
!16937 = !DILocation(line: 102, column: 13, scope: !16934)
!16938 = !DILocalVariable(name: "name", arg: 2, scope: !16934, file: !16935, line: 102, type: !177)
!16939 = !DILocation(line: 102, column: 29, scope: !16934)
!16940 = !DILocalVariable(name: "st", arg: 3, scope: !16934, file: !16935, line: 102, type: !1928)
!16941 = !DILocation(line: 102, column: 48, scope: !16934)
!16942 = !DILocation(line: 104, column: 19, scope: !16934)
!16943 = !DILocation(line: 104, column: 23, scope: !16934)
!16944 = !DILocation(line: 104, column: 29, scope: !16934)
!16945 = !DILocation(line: 104, column: 10, scope: !16934)
!16946 = !DILocation(line: 104, column: 3, scope: !16934)
!16947 = distinct !DISubprogram(name: "lstatat", scope: !16935, file: !16935, line: 108, type: !1926, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1923, retainedNodes: !206)
!16948 = !DILocalVariable(name: "fd", arg: 1, scope: !16947, file: !16935, line: 108, type: !5)
!16949 = !DILocation(line: 108, column: 14, scope: !16947)
!16950 = !DILocalVariable(name: "name", arg: 2, scope: !16947, file: !16935, line: 108, type: !177)
!16951 = !DILocation(line: 108, column: 30, scope: !16947)
!16952 = !DILocalVariable(name: "st", arg: 3, scope: !16947, file: !16935, line: 108, type: !1928)
!16953 = !DILocation(line: 108, column: 49, scope: !16947)
!16954 = !DILocation(line: 110, column: 19, scope: !16947)
!16955 = !DILocation(line: 110, column: 23, scope: !16947)
!16956 = !DILocation(line: 110, column: 29, scope: !16947)
!16957 = !DILocation(line: 110, column: 10, scope: !16947)
!16958 = !DILocation(line: 110, column: 3, scope: !16947)
!16959 = distinct !DISubprogram(name: "try_tempname_len", scope: !1212, file: !1212, line: 188, type: !1194, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!16960 = !DILocalVariable(name: "tmpl", arg: 1, scope: !16959, file: !1212, line: 188, type: !7)
!16961 = !DILocation(line: 188, column: 25, scope: !16959)
!16962 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !16959, file: !1212, line: 188, type: !5)
!16963 = !DILocation(line: 188, column: 35, scope: !16959)
!16964 = !DILocalVariable(name: "args", arg: 3, scope: !16959, file: !1212, line: 188, type: !47)
!16965 = !DILocation(line: 188, column: 52, scope: !16959)
!16966 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !16959, file: !1212, line: 189, type: !1196)
!16967 = !DILocation(line: 189, column: 25, scope: !16959)
!16968 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !16959, file: !1212, line: 189, type: !52)
!16969 = !DILocation(line: 189, column: 59, scope: !16959)
!16970 = !DILocalVariable(name: "len", scope: !16959, file: !1212, line: 191, type: !52)
!16971 = !DILocation(line: 191, column: 10, scope: !16959)
!16972 = !DILocalVariable(name: "XXXXXX", scope: !16959, file: !1212, line: 192, type: !7)
!16973 = !DILocation(line: 192, column: 9, scope: !16959)
!16974 = !DILocalVariable(name: "count", scope: !16959, file: !1212, line: 193, type: !67)
!16975 = !DILocation(line: 193, column: 16, scope: !16959)
!16976 = !DILocalVariable(name: "fd", scope: !16959, file: !1212, line: 194, type: !5)
!16977 = !DILocation(line: 194, column: 7, scope: !16959)
!16978 = !DILocalVariable(name: "save_errno", scope: !16959, file: !1212, line: 195, type: !5)
!16979 = !DILocation(line: 195, column: 7, scope: !16959)
!16980 = !DILocation(line: 195, column: 20, scope: !16959)
!16981 = !DILocalVariable(name: "rand_src", scope: !16959, file: !1212, line: 196, type: !1197)
!16982 = !DILocation(line: 196, column: 26, scope: !16959)
!16983 = !DILocalVariable(name: "attempts", scope: !16959, file: !1212, line: 212, type: !67)
!16984 = !DILocation(line: 212, column: 16, scope: !16959)
!16985 = !DILocation(line: 215, column: 17, scope: !16959)
!16986 = !DILocation(line: 215, column: 9, scope: !16959)
!16987 = !DILocation(line: 215, column: 7, scope: !16959)
!16988 = !DILocation(line: 216, column: 7, scope: !16989)
!16989 = distinct !DILexicalBlock(scope: !16959, file: !1212, line: 216, column: 7)
!16990 = !DILocation(line: 216, column: 13, scope: !16989)
!16991 = !DILocation(line: 216, column: 28, scope: !16989)
!16992 = !DILocation(line: 216, column: 26, scope: !16989)
!16993 = !DILocation(line: 216, column: 11, scope: !16989)
!16994 = !DILocation(line: 217, column: 7, scope: !16989)
!16995 = !DILocation(line: 217, column: 29, scope: !16989)
!16996 = !DILocation(line: 217, column: 34, scope: !16989)
!16997 = !DILocation(line: 217, column: 40, scope: !16989)
!16998 = !DILocation(line: 217, column: 38, scope: !16989)
!16999 = !DILocation(line: 217, column: 55, scope: !16989)
!17000 = !DILocation(line: 217, column: 53, scope: !16989)
!17001 = !DILocation(line: 218, column: 28, scope: !16989)
!17002 = !DILocation(line: 217, column: 12, scope: !16989)
!17003 = !DILocation(line: 216, column: 7, scope: !16959)
!17004 = !DILocation(line: 220, column: 7, scope: !17005)
!17005 = distinct !DILexicalBlock(scope: !16989, file: !1212, line: 219, column: 5)
!17006 = !DILocation(line: 221, column: 7, scope: !17005)
!17007 = !DILocation(line: 225, column: 13, scope: !16959)
!17008 = !DILocation(line: 225, column: 18, scope: !16959)
!17009 = !DILocation(line: 225, column: 24, scope: !16959)
!17010 = !DILocation(line: 225, column: 22, scope: !16959)
!17011 = !DILocation(line: 225, column: 39, scope: !16959)
!17012 = !DILocation(line: 225, column: 37, scope: !16959)
!17013 = !DILocation(line: 225, column: 10, scope: !16959)
!17014 = !DILocation(line: 228, column: 37, scope: !16959)
!17015 = !DILocation(line: 228, column: 14, scope: !16959)
!17016 = !DILocation(line: 228, column: 12, scope: !16959)
!17017 = !DILocation(line: 229, column: 9, scope: !17018)
!17018 = distinct !DILexicalBlock(scope: !16959, file: !1212, line: 229, column: 7)
!17019 = !DILocation(line: 229, column: 7, scope: !16959)
!17020 = !DILocation(line: 230, column: 5, scope: !17018)
!17021 = !DILocation(line: 232, column: 14, scope: !17022)
!17022 = distinct !DILexicalBlock(scope: !16959, file: !1212, line: 232, column: 3)
!17023 = !DILocation(line: 232, column: 8, scope: !17022)
!17024 = !DILocation(line: 232, column: 19, scope: !17025)
!17025 = distinct !DILexicalBlock(scope: !17022, file: !1212, line: 232, column: 3)
!17026 = !DILocation(line: 232, column: 27, scope: !17025)
!17027 = !DILocation(line: 232, column: 25, scope: !17025)
!17028 = !DILocation(line: 232, column: 3, scope: !17022)
!17029 = !DILocalVariable(name: "i", scope: !17030, file: !1212, line: 234, type: !52)
!17030 = distinct !DILexicalBlock(scope: !17025, file: !1212, line: 233, column: 5)
!17031 = !DILocation(line: 234, column: 14, scope: !17030)
!17032 = !DILocation(line: 236, column: 14, scope: !17033)
!17033 = distinct !DILexicalBlock(scope: !17030, file: !1212, line: 236, column: 7)
!17034 = !DILocation(line: 236, column: 12, scope: !17033)
!17035 = !DILocation(line: 236, column: 19, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !17033, file: !1212, line: 236, column: 7)
!17037 = !DILocation(line: 236, column: 23, scope: !17036)
!17038 = !DILocation(line: 236, column: 21, scope: !17036)
!17039 = !DILocation(line: 236, column: 7, scope: !17033)
!17040 = !DILocation(line: 237, column: 45, scope: !17036)
!17041 = !DILocation(line: 237, column: 29, scope: !17036)
!17042 = !DILocation(line: 237, column: 21, scope: !17036)
!17043 = !DILocation(line: 237, column: 9, scope: !17036)
!17044 = !DILocation(line: 237, column: 16, scope: !17036)
!17045 = !DILocation(line: 237, column: 19, scope: !17036)
!17046 = !DILocation(line: 236, column: 38, scope: !17036)
!17047 = !DILocation(line: 236, column: 7, scope: !17036)
!17048 = distinct !{!17048, !17039, !17049}
!17049 = !DILocation(line: 237, column: 74, scope: !17033)
!17050 = !DILocation(line: 239, column: 12, scope: !17030)
!17051 = !DILocation(line: 239, column: 21, scope: !17030)
!17052 = !DILocation(line: 239, column: 27, scope: !17030)
!17053 = !DILocation(line: 239, column: 10, scope: !17030)
!17054 = !DILocation(line: 240, column: 11, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17030, file: !1212, line: 240, column: 11)
!17056 = !DILocation(line: 240, column: 14, scope: !17055)
!17057 = !DILocation(line: 240, column: 11, scope: !17030)
!17058 = !DILocation(line: 242, column: 11, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17055, file: !1212, line: 241, column: 9)
!17060 = !DILocation(line: 243, column: 11, scope: !17059)
!17061 = !DILocation(line: 245, column: 16, scope: !17062)
!17062 = distinct !DILexicalBlock(scope: !17055, file: !1212, line: 245, column: 16)
!17063 = !DILocation(line: 245, column: 22, scope: !17062)
!17064 = !DILocation(line: 245, column: 16, scope: !17055)
!17065 = !DILocation(line: 247, column: 14, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !17062, file: !1212, line: 246, column: 9)
!17067 = !DILocation(line: 248, column: 11, scope: !17066)
!17068 = !DILocation(line: 250, column: 5, scope: !17030)
!17069 = !DILocation(line: 232, column: 37, scope: !17025)
!17070 = !DILocation(line: 232, column: 3, scope: !17025)
!17071 = distinct !{!17071, !17028, !17072}
!17072 = !DILocation(line: 250, column: 5, scope: !17022)
!17073 = !DILocation(line: 252, column: 21, scope: !16959)
!17074 = !DILocation(line: 252, column: 3, scope: !16959)
!17075 = !DILocation(line: 255, column: 3, scope: !16959)
!17076 = !DILocation(line: 256, column: 3, scope: !16959)
!17077 = !DILabel(scope: !16959, name: "done", file: !1212, line: 258)
!17078 = !DILocation(line: 258, column: 2, scope: !16959)
!17079 = !DILocalVariable(name: "saved_errno", scope: !17080, file: !1212, line: 260, type: !5)
!17080 = distinct !DILexicalBlock(scope: !16959, file: !1212, line: 259, column: 3)
!17081 = !DILocation(line: 260, column: 9, scope: !17080)
!17082 = !DILocation(line: 260, column: 23, scope: !17080)
!17083 = !DILocation(line: 261, column: 23, scope: !17080)
!17084 = !DILocation(line: 261, column: 5, scope: !17080)
!17085 = !DILocation(line: 262, column: 5, scope: !17080)
!17086 = !DILocation(line: 264, column: 10, scope: !16959)
!17087 = !DILocation(line: 264, column: 3, scope: !16959)
!17088 = !DILocation(line: 265, column: 1, scope: !16959)
!17089 = distinct !DISubprogram(name: "check_x_suffix", scope: !1212, file: !1212, line: 178, type: !1209, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!17090 = !DILocalVariable(name: "s", arg: 1, scope: !17089, file: !1212, line: 178, type: !177)
!17091 = !DILocation(line: 178, column: 29, scope: !17089)
!17092 = !DILocalVariable(name: "len", arg: 2, scope: !17089, file: !1212, line: 178, type: !52)
!17093 = !DILocation(line: 178, column: 39, scope: !17089)
!17094 = !DILocation(line: 180, column: 10, scope: !17089)
!17095 = !DILocation(line: 180, column: 25, scope: !17089)
!17096 = !DILocation(line: 180, column: 17, scope: !17089)
!17097 = !DILocation(line: 180, column: 14, scope: !17089)
!17098 = !DILocation(line: 180, column: 3, scope: !17089)
!17099 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1212, file: !1212, line: 307, type: !1203, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!17100 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17099, file: !1212, line: 307, type: !7)
!17101 = !DILocation(line: 307, column: 25, scope: !17099)
!17102 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17099, file: !1212, line: 307, type: !5)
!17103 = !DILocation(line: 307, column: 35, scope: !17099)
!17104 = !DILocalVariable(name: "flags", arg: 3, scope: !17099, file: !1212, line: 307, type: !5)
!17105 = !DILocation(line: 307, column: 50, scope: !17099)
!17106 = !DILocalVariable(name: "kind", arg: 4, scope: !17099, file: !1212, line: 307, type: !5)
!17107 = !DILocation(line: 307, column: 61, scope: !17099)
!17108 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !17099, file: !1212, line: 308, type: !52)
!17109 = !DILocation(line: 308, column: 26, scope: !17099)
!17110 = !DILocalVariable(name: "tryfunc", scope: !17099, file: !1212, line: 310, type: !1196)
!17111 = !DILocation(line: 310, column: 9, scope: !17099)
!17112 = !DILocation(line: 312, column: 11, scope: !17099)
!17113 = !DILocation(line: 312, column: 3, scope: !17099)
!17114 = !DILocation(line: 315, column: 15, scope: !17115)
!17115 = distinct !DILexicalBlock(scope: !17099, file: !1212, line: 313, column: 5)
!17116 = !DILocation(line: 316, column: 7, scope: !17115)
!17117 = !DILocation(line: 319, column: 15, scope: !17115)
!17118 = !DILocation(line: 320, column: 7, scope: !17115)
!17119 = !DILocation(line: 323, column: 15, scope: !17115)
!17120 = !DILocation(line: 324, column: 7, scope: !17115)
!17121 = !DILocation(line: 327, column: 7, scope: !17115)
!17122 = !DILocation(line: 330, column: 28, scope: !17099)
!17123 = !DILocation(line: 330, column: 34, scope: !17099)
!17124 = !DILocation(line: 330, column: 45, scope: !17099)
!17125 = !DILocation(line: 330, column: 53, scope: !17099)
!17126 = !DILocation(line: 330, column: 62, scope: !17099)
!17127 = !DILocation(line: 330, column: 10, scope: !17099)
!17128 = !DILocation(line: 330, column: 3, scope: !17099)
!17129 = distinct !DISubprogram(name: "try_file", scope: !1212, file: !1212, line: 268, type: !638, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!17130 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17129, file: !1212, line: 268, type: !7)
!17131 = !DILocation(line: 268, column: 17, scope: !17129)
!17132 = !DILocalVariable(name: "flags", arg: 2, scope: !17129, file: !1212, line: 268, type: !47)
!17133 = !DILocation(line: 268, column: 29, scope: !17129)
!17134 = !DILocalVariable(name: "openflags", scope: !17129, file: !1212, line: 270, type: !190)
!17135 = !DILocation(line: 270, column: 8, scope: !17129)
!17136 = !DILocation(line: 270, column: 20, scope: !17129)
!17137 = !DILocation(line: 271, column: 18, scope: !17129)
!17138 = !DILocation(line: 272, column: 20, scope: !17129)
!17139 = !DILocation(line: 272, column: 19, scope: !17129)
!17140 = !DILocation(line: 272, column: 30, scope: !17129)
!17141 = !DILocation(line: 273, column: 18, scope: !17129)
!17142 = !DILocation(line: 273, column: 27, scope: !17129)
!17143 = !DILocation(line: 273, column: 37, scope: !17129)
!17144 = !DILocation(line: 271, column: 10, scope: !17129)
!17145 = !DILocation(line: 271, column: 3, scope: !17129)
!17146 = distinct !DISubprogram(name: "try_dir", scope: !1212, file: !1212, line: 277, type: !638, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!17147 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17146, file: !1212, line: 277, type: !7)
!17148 = !DILocation(line: 277, column: 16, scope: !17146)
!17149 = !DILocalVariable(name: "flags", arg: 2, scope: !17146, file: !1212, line: 277, type: !47)
!17150 = !DILocation(line: 277, column: 28, scope: !17146)
!17151 = !DILocation(line: 279, column: 19, scope: !17146)
!17152 = !DILocation(line: 279, column: 10, scope: !17146)
!17153 = !DILocation(line: 279, column: 3, scope: !17146)
!17154 = distinct !DISubprogram(name: "try_nocreate", scope: !1212, file: !1212, line: 283, type: !638, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!17155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !17156)
!17156 = !{!17157, !17158, !17159, !17160, !17161, !17162, !17163, !17164, !17165, !17166, !17167, !17168, !17173, !17174, !17175}
!17157 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !17155, file: !277, line: 48, baseType: !280, size: 64)
!17158 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !17155, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!17159 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !17155, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!17160 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !17155, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!17161 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !17155, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!17162 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !17155, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!17163 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !17155, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!17164 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !17155, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!17165 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !17155, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!17166 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !17155, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!17167 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !17155, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!17168 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !17155, file: !277, line: 91, baseType: !17169, size: 128, offset: 576)
!17169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !17170)
!17170 = !{!17171, !17172}
!17171 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !17169, file: !297, line: 122, baseType: !300, size: 64)
!17172 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !17169, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!17173 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !17155, file: !277, line: 92, baseType: !17169, size: 128, offset: 704)
!17174 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !17155, file: !277, line: 93, baseType: !17169, size: 128, offset: 832)
!17175 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !17155, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!17176 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17154, file: !1212, line: 283, type: !7)
!17177 = !DILocation(line: 283, column: 21, scope: !17154)
!17178 = !DILocalVariable(name: "flags", arg: 2, scope: !17154, file: !1212, line: 283, type: !47)
!17179 = !DILocation(line: 283, column: 33, scope: !17154)
!17180 = !DILocalVariable(name: "st", scope: !17154, file: !1212, line: 285, type: !17155)
!17181 = !DILocation(line: 285, column: 17, scope: !17154)
!17182 = !DILocation(line: 287, column: 7, scope: !17183)
!17183 = distinct !DILexicalBlock(scope: !17154, file: !1212, line: 287, column: 7)
!17184 = !DILocation(line: 287, column: 41, scope: !17183)
!17185 = !DILocation(line: 287, column: 46, scope: !17183)
!17186 = !DILocation(line: 287, column: 49, scope: !17183)
!17187 = !DILocation(line: 287, column: 55, scope: !17183)
!17188 = !DILocation(line: 287, column: 7, scope: !17154)
!17189 = !DILocation(line: 288, column: 5, scope: !17183)
!17190 = !DILocation(line: 289, column: 10, scope: !17154)
!17191 = !DILocation(line: 289, column: 16, scope: !17154)
!17192 = !DILocation(line: 289, column: 3, scope: !17154)
!17193 = distinct !DISubprogram(name: "gen_tempname", scope: !1212, file: !1212, line: 334, type: !1205, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!17194 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17193, file: !1212, line: 334, type: !7)
!17195 = !DILocation(line: 334, column: 23, scope: !17193)
!17196 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17193, file: !1212, line: 334, type: !5)
!17197 = !DILocation(line: 334, column: 33, scope: !17193)
!17198 = !DILocalVariable(name: "flags", arg: 3, scope: !17193, file: !1212, line: 334, type: !5)
!17199 = !DILocation(line: 334, column: 48, scope: !17193)
!17200 = !DILocalVariable(name: "kind", arg: 4, scope: !17193, file: !1212, line: 334, type: !5)
!17201 = !DILocation(line: 334, column: 59, scope: !17193)
!17202 = !DILocation(line: 336, column: 28, scope: !17193)
!17203 = !DILocation(line: 336, column: 34, scope: !17193)
!17204 = !DILocation(line: 336, column: 45, scope: !17193)
!17205 = !DILocation(line: 336, column: 52, scope: !17193)
!17206 = !DILocation(line: 336, column: 10, scope: !17193)
!17207 = !DILocation(line: 336, column: 3, scope: !17193)
!17208 = distinct !DISubprogram(name: "try_tempname", scope: !1212, file: !1212, line: 340, type: !1207, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1191, retainedNodes: !206)
!17209 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17208, file: !1212, line: 340, type: !7)
!17210 = !DILocation(line: 340, column: 23, scope: !17208)
!17211 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17208, file: !1212, line: 340, type: !5)
!17212 = !DILocation(line: 340, column: 33, scope: !17208)
!17213 = !DILocalVariable(name: "args", arg: 3, scope: !17208, file: !1212, line: 340, type: !47)
!17214 = !DILocation(line: 340, column: 50, scope: !17208)
!17215 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !17208, file: !1212, line: 341, type: !1196)
!17216 = !DILocation(line: 341, column: 23, scope: !17208)
!17217 = !DILocation(line: 343, column: 28, scope: !17208)
!17218 = !DILocation(line: 343, column: 34, scope: !17208)
!17219 = !DILocation(line: 343, column: 45, scope: !17208)
!17220 = !DILocation(line: 343, column: 51, scope: !17208)
!17221 = !DILocation(line: 343, column: 10, scope: !17208)
!17222 = !DILocation(line: 343, column: 3, scope: !17208)
!17223 = distinct !DISubprogram(name: "fd_safer", scope: !17224, file: !17224, line: 37, type: !1798, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1950, retainedNodes: !206)
!17224 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mohamad/clone/coreutils")
!17225 = !DILocalVariable(name: "fd", arg: 1, scope: !17223, file: !17224, line: 37, type: !5)
!17226 = !DILocation(line: 37, column: 15, scope: !17223)
!17227 = !DILocation(line: 39, column: 23, scope: !17228)
!17228 = distinct !DILexicalBlock(scope: !17223, file: !17224, line: 39, column: 7)
!17229 = !DILocation(line: 39, column: 20, scope: !17228)
!17230 = !DILocation(line: 39, column: 26, scope: !17228)
!17231 = !DILocation(line: 39, column: 29, scope: !17228)
!17232 = !DILocation(line: 39, column: 32, scope: !17228)
!17233 = !DILocation(line: 39, column: 7, scope: !17223)
!17234 = !DILocalVariable(name: "f", scope: !17235, file: !17224, line: 41, type: !5)
!17235 = distinct !DILexicalBlock(scope: !17228, file: !17224, line: 40, column: 5)
!17236 = !DILocation(line: 41, column: 11, scope: !17235)
!17237 = !DILocation(line: 41, column: 26, scope: !17235)
!17238 = !DILocation(line: 41, column: 15, scope: !17235)
!17239 = !DILocalVariable(name: "e", scope: !17235, file: !17224, line: 42, type: !5)
!17240 = !DILocation(line: 42, column: 11, scope: !17235)
!17241 = !DILocation(line: 42, column: 15, scope: !17235)
!17242 = !DILocation(line: 43, column: 14, scope: !17235)
!17243 = !DILocation(line: 43, column: 7, scope: !17235)
!17244 = !DILocation(line: 44, column: 15, scope: !17235)
!17245 = !DILocation(line: 44, column: 7, scope: !17235)
!17246 = !DILocation(line: 44, column: 13, scope: !17235)
!17247 = !DILocation(line: 45, column: 12, scope: !17235)
!17248 = !DILocation(line: 45, column: 10, scope: !17235)
!17249 = !DILocation(line: 46, column: 5, scope: !17235)
!17250 = !DILocation(line: 48, column: 10, scope: !17223)
!17251 = !DILocation(line: 48, column: 3, scope: !17223)
!17252 = distinct !DISubprogram(name: "utimecmp", scope: !1216, file: !1216, line: 123, type: !1245, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1242, retainedNodes: !206)
!17253 = !DILocalVariable(name: "dst_name", arg: 1, scope: !17252, file: !1216, line: 123, type: !177)
!17254 = !DILocation(line: 123, column: 23, scope: !17252)
!17255 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !17252, file: !1216, line: 124, type: !1219)
!17256 = !DILocation(line: 124, column: 30, scope: !17252)
!17257 = !DILocalVariable(name: "src_stat", arg: 3, scope: !17252, file: !1216, line: 125, type: !1219)
!17258 = !DILocation(line: 125, column: 30, scope: !17252)
!17259 = !DILocalVariable(name: "options", arg: 4, scope: !17252, file: !1216, line: 126, type: !5)
!17260 = !DILocation(line: 126, column: 15, scope: !17252)
!17261 = !DILocation(line: 128, column: 32, scope: !17252)
!17262 = !DILocation(line: 128, column: 42, scope: !17252)
!17263 = !DILocation(line: 128, column: 52, scope: !17252)
!17264 = !DILocation(line: 128, column: 62, scope: !17252)
!17265 = !DILocation(line: 128, column: 10, scope: !17252)
!17266 = !DILocation(line: 128, column: 3, scope: !17252)
!17267 = !DILocalVariable(name: "dfd", arg: 1, scope: !1215, file: !1216, line: 132, type: !5)
!17268 = !DILocation(line: 132, column: 17, scope: !1215)
!17269 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1215, file: !1216, line: 132, type: !177)
!17270 = !DILocation(line: 132, column: 34, scope: !1215)
!17271 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1215, file: !1216, line: 133, type: !1219)
!17272 = !DILocation(line: 133, column: 32, scope: !1215)
!17273 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1215, file: !1216, line: 134, type: !1219)
!17274 = !DILocation(line: 134, column: 32, scope: !1215)
!17275 = !DILocalVariable(name: "options", arg: 5, scope: !1215, file: !1216, line: 135, type: !5)
!17276 = !DILocation(line: 135, column: 17, scope: !1215)
!17277 = !DILocalVariable(name: "dst_s", scope: !1215, file: !1216, line: 153, type: !1247)
!17278 = !DILocation(line: 153, column: 10, scope: !1215)
!17279 = !DILocation(line: 153, column: 18, scope: !1215)
!17280 = !DILocation(line: 153, column: 28, scope: !1215)
!17281 = !{!2935, !2936, i64 88}
!17282 = !DILocalVariable(name: "src_s", scope: !1215, file: !1216, line: 154, type: !1247)
!17283 = !DILocation(line: 154, column: 10, scope: !1215)
!17284 = !DILocation(line: 154, column: 18, scope: !1215)
!17285 = !DILocation(line: 154, column: 28, scope: !1215)
!17286 = !DILocalVariable(name: "dst_ns", scope: !1215, file: !1216, line: 155, type: !5)
!17287 = !DILocation(line: 155, column: 7, scope: !1215)
!17288 = !DILocation(line: 155, column: 35, scope: !1215)
!17289 = !DILocation(line: 155, column: 16, scope: !1215)
!17290 = !DILocalVariable(name: "src_ns", scope: !1215, file: !1216, line: 156, type: !5)
!17291 = !DILocation(line: 156, column: 7, scope: !1215)
!17292 = !DILocation(line: 156, column: 35, scope: !1215)
!17293 = !DILocation(line: 156, column: 16, scope: !1215)
!17294 = !DILocation(line: 158, column: 7, scope: !17295)
!17295 = distinct !DILexicalBlock(scope: !1215, file: !1216, line: 158, column: 7)
!17296 = !DILocation(line: 158, column: 15, scope: !17295)
!17297 = !DILocation(line: 158, column: 7, scope: !1215)
!17298 = !DILocalVariable(name: "dst_res", scope: !17299, file: !1216, line: 167, type: !1248)
!17299 = distinct !DILexicalBlock(scope: !17295, file: !1216, line: 159, column: 5)
!17300 = !DILocation(line: 167, column: 22, scope: !17299)
!17301 = !DILocalVariable(name: "tmp_dst_res", scope: !17299, file: !1216, line: 168, type: !1249)
!17302 = !DILocation(line: 168, column: 21, scope: !17299)
!17303 = !DILocalVariable(name: "res", scope: !17299, file: !1216, line: 171, type: !5)
!17304 = !DILocation(line: 171, column: 11, scope: !17299)
!17305 = !DILocation(line: 176, column: 11, scope: !17306)
!17306 = distinct !DILexicalBlock(scope: !17299, file: !1216, line: 176, column: 11)
!17307 = !DILocation(line: 176, column: 20, scope: !17306)
!17308 = !DILocation(line: 176, column: 17, scope: !17306)
!17309 = !DILocation(line: 176, column: 26, scope: !17306)
!17310 = !DILocation(line: 176, column: 29, scope: !17306)
!17311 = !DILocation(line: 176, column: 39, scope: !17306)
!17312 = !DILocation(line: 176, column: 36, scope: !17306)
!17313 = !DILocation(line: 176, column: 11, scope: !17299)
!17314 = !DILocation(line: 177, column: 9, scope: !17306)
!17315 = !DILocation(line: 178, column: 11, scope: !17316)
!17316 = distinct !DILexicalBlock(scope: !17299, file: !1216, line: 178, column: 11)
!17317 = !DILocation(line: 178, column: 20, scope: !17316)
!17318 = !DILocation(line: 178, column: 26, scope: !17316)
!17319 = !DILocation(line: 178, column: 17, scope: !17316)
!17320 = !DILocation(line: 178, column: 11, scope: !17299)
!17321 = !DILocation(line: 179, column: 9, scope: !17316)
!17322 = !DILocation(line: 180, column: 11, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17299, file: !1216, line: 180, column: 11)
!17324 = !DILocation(line: 180, column: 20, scope: !17323)
!17325 = !DILocation(line: 180, column: 26, scope: !17323)
!17326 = !DILocation(line: 180, column: 17, scope: !17323)
!17327 = !DILocation(line: 180, column: 11, scope: !17299)
!17328 = !DILocation(line: 181, column: 9, scope: !17323)
!17329 = !DILocation(line: 185, column: 13, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17299, file: !1216, line: 185, column: 11)
!17331 = !DILocation(line: 185, column: 11, scope: !17299)
!17332 = !DILocation(line: 186, column: 14, scope: !17330)
!17333 = !DILocation(line: 186, column: 12, scope: !17330)
!17334 = !DILocation(line: 186, column: 9, scope: !17330)
!17335 = !DILocation(line: 187, column: 11, scope: !17336)
!17336 = distinct !DILexicalBlock(scope: !17299, file: !1216, line: 187, column: 11)
!17337 = !DILocation(line: 187, column: 11, scope: !17299)
!17338 = !DILocation(line: 189, column: 17, scope: !17339)
!17339 = distinct !DILexicalBlock(scope: !17340, file: !1216, line: 189, column: 15)
!17340 = distinct !DILexicalBlock(scope: !17336, file: !1216, line: 188, column: 9)
!17341 = !DILocation(line: 189, column: 15, scope: !17340)
!17342 = !DILocation(line: 191, column: 29, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17339, file: !1216, line: 190, column: 13)
!17344 = !DILocation(line: 191, column: 27, scope: !17343)
!17345 = !DILocation(line: 192, column: 20, scope: !17346)
!17346 = distinct !DILexicalBlock(scope: !17343, file: !1216, line: 192, column: 19)
!17347 = !DILocation(line: 192, column: 19, scope: !17343)
!17348 = !DILocation(line: 193, column: 17, scope: !17346)
!17349 = !DILocation(line: 194, column: 15, scope: !17343)
!17350 = !DILocation(line: 194, column: 28, scope: !17343)
!17351 = !DILocation(line: 194, column: 39, scope: !17343)
!17352 = !{!17353, !2656, i64 8}
!17353 = !{!"fs_res", !2936, i64 0, !2656, i64 8, !2763, i64 12}
!17354 = !DILocation(line: 195, column: 15, scope: !17343)
!17355 = !DILocation(line: 195, column: 28, scope: !17343)
!17356 = !DILocation(line: 195, column: 34, scope: !17343)
!17357 = !{!17353, !2763, i64 12}
!17358 = !DILocation(line: 196, column: 13, scope: !17343)
!17359 = !DILocation(line: 197, column: 30, scope: !17340)
!17360 = !DILocation(line: 197, column: 40, scope: !17340)
!17361 = !DILocation(line: 197, column: 11, scope: !17340)
!17362 = !DILocation(line: 197, column: 24, scope: !17340)
!17363 = !DILocation(line: 197, column: 28, scope: !17340)
!17364 = !{!17353, !2936, i64 0}
!17365 = !DILocation(line: 198, column: 34, scope: !17340)
!17366 = !DILocation(line: 198, column: 38, scope: !17340)
!17367 = !DILocation(line: 198, column: 21, scope: !17340)
!17368 = !DILocation(line: 198, column: 19, scope: !17340)
!17369 = !DILocation(line: 199, column: 17, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17340, file: !1216, line: 199, column: 15)
!17371 = !DILocation(line: 199, column: 15, scope: !17340)
!17372 = !DILocation(line: 200, column: 13, scope: !17370)
!17373 = !DILocation(line: 202, column: 15, scope: !17374)
!17374 = distinct !DILexicalBlock(scope: !17340, file: !1216, line: 202, column: 15)
!17375 = !DILocation(line: 202, column: 26, scope: !17374)
!17376 = !DILocation(line: 202, column: 23, scope: !17374)
!17377 = !DILocation(line: 202, column: 15, scope: !17340)
!17378 = !DILocation(line: 206, column: 27, scope: !17379)
!17379 = distinct !DILexicalBlock(scope: !17374, file: !1216, line: 203, column: 13)
!17380 = !DILocation(line: 207, column: 13, scope: !17379)
!17381 = !DILocation(line: 208, column: 9, scope: !17340)
!17382 = !DILocation(line: 210, column: 9, scope: !17336)
!17383 = !DILabel(scope: !17384, name: "low_memory", file: !1216, line: 211)
!17384 = distinct !DILexicalBlock(scope: !17336, file: !1216, line: 210, column: 9)
!17385 = !DILocation(line: 211, column: 9, scope: !17384)
!17386 = !DILocation(line: 212, column: 15, scope: !17387)
!17387 = distinct !DILexicalBlock(scope: !17384, file: !1216, line: 212, column: 15)
!17388 = !DILocation(line: 212, column: 15, scope: !17384)
!17389 = !DILocation(line: 214, column: 33, scope: !17390)
!17390 = distinct !DILexicalBlock(scope: !17387, file: !1216, line: 213, column: 13)
!17391 = !DILocation(line: 214, column: 43, scope: !17390)
!17392 = !DILocation(line: 214, column: 27, scope: !17390)
!17393 = !DILocation(line: 214, column: 31, scope: !17390)
!17394 = !DILocation(line: 215, column: 38, scope: !17390)
!17395 = !DILocation(line: 215, column: 42, scope: !17390)
!17396 = !DILocation(line: 215, column: 25, scope: !17390)
!17397 = !DILocation(line: 215, column: 23, scope: !17390)
!17398 = !DILocation(line: 216, column: 13, scope: !17390)
!17399 = !DILocation(line: 217, column: 16, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17384, file: !1216, line: 217, column: 15)
!17401 = !DILocation(line: 217, column: 15, scope: !17384)
!17402 = !DILocation(line: 219, column: 23, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17400, file: !1216, line: 218, column: 13)
!17404 = !DILocation(line: 220, column: 15, scope: !17403)
!17405 = !DILocation(line: 220, column: 24, scope: !17403)
!17406 = !DILocation(line: 220, column: 35, scope: !17403)
!17407 = !DILocation(line: 221, column: 15, scope: !17403)
!17408 = !DILocation(line: 221, column: 24, scope: !17403)
!17409 = !DILocation(line: 221, column: 30, scope: !17403)
!17410 = !DILocation(line: 222, column: 13, scope: !17403)
!17411 = !DILocation(line: 225, column: 13, scope: !17299)
!17412 = !DILocation(line: 225, column: 22, scope: !17299)
!17413 = !DILocation(line: 225, column: 11, scope: !17299)
!17414 = !DILocation(line: 257, column: 13, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17299, file: !1216, line: 257, column: 11)
!17416 = !DILocation(line: 257, column: 22, scope: !17415)
!17417 = !DILocation(line: 257, column: 11, scope: !17299)
!17418 = !DILocalVariable(name: "dst_a_s", scope: !17419, file: !1216, line: 262, type: !1247)
!17419 = distinct !DILexicalBlock(scope: !17415, file: !1216, line: 258, column: 9)
!17420 = !DILocation(line: 262, column: 18, scope: !17419)
!17421 = !DILocation(line: 262, column: 28, scope: !17419)
!17422 = !DILocation(line: 262, column: 38, scope: !17419)
!17423 = !{!2935, !2936, i64 72}
!17424 = !DILocalVariable(name: "dst_c_s", scope: !17419, file: !1216, line: 263, type: !1247)
!17425 = !DILocation(line: 263, column: 18, scope: !17419)
!17426 = !DILocation(line: 263, column: 28, scope: !17419)
!17427 = !DILocation(line: 263, column: 38, scope: !17419)
!17428 = !{!2935, !2936, i64 104}
!17429 = !DILocalVariable(name: "dst_m_s", scope: !17419, file: !1216, line: 264, type: !1247)
!17430 = !DILocation(line: 264, column: 18, scope: !17419)
!17431 = !DILocation(line: 264, column: 28, scope: !17419)
!17432 = !DILocalVariable(name: "dst_a_ns", scope: !17419, file: !1216, line: 265, type: !5)
!17433 = !DILocation(line: 265, column: 15, scope: !17419)
!17434 = !DILocation(line: 265, column: 45, scope: !17419)
!17435 = !DILocation(line: 265, column: 26, scope: !17419)
!17436 = !DILocalVariable(name: "dst_c_ns", scope: !17419, file: !1216, line: 266, type: !5)
!17437 = !DILocation(line: 266, column: 15, scope: !17419)
!17438 = !DILocation(line: 266, column: 45, scope: !17419)
!17439 = !DILocation(line: 266, column: 26, scope: !17419)
!17440 = !DILocalVariable(name: "dst_m_ns", scope: !17419, file: !1216, line: 267, type: !5)
!17441 = !DILocation(line: 267, column: 15, scope: !17419)
!17442 = !DILocation(line: 267, column: 26, scope: !17419)
!17443 = !DILocalVariable(name: "odd_second", scope: !17444, file: !1216, line: 276, type: !139)
!17444 = distinct !DILexicalBlock(scope: !17419, file: !1216, line: 275, column: 11)
!17445 = !DILocation(line: 276, column: 18, scope: !17444)
!17446 = !DILocation(line: 276, column: 32, scope: !17444)
!17447 = !DILocation(line: 276, column: 42, scope: !17444)
!17448 = !DILocation(line: 276, column: 40, scope: !17444)
!17449 = !DILocation(line: 276, column: 52, scope: !17444)
!17450 = !DILocation(line: 276, column: 50, scope: !17444)
!17451 = !DILocation(line: 276, column: 61, scope: !17444)
!17452 = !DILocation(line: 276, column: 31, scope: !17444)
!17453 = !DILocalVariable(name: "a", scope: !17454, file: !1216, line: 285, type: !5)
!17454 = distinct !DILexicalBlock(scope: !17455, file: !1216, line: 284, column: 15)
!17455 = distinct !DILexicalBlock(scope: !17444, file: !1216, line: 278, column: 17)
!17456 = !DILocation(line: 285, column: 21, scope: !17454)
!17457 = !DILocation(line: 285, column: 25, scope: !17454)
!17458 = !DILocalVariable(name: "c", scope: !17454, file: !1216, line: 286, type: !5)
!17459 = !DILocation(line: 286, column: 21, scope: !17454)
!17460 = !DILocation(line: 286, column: 25, scope: !17454)
!17461 = !DILocalVariable(name: "m", scope: !17454, file: !1216, line: 287, type: !5)
!17462 = !DILocation(line: 287, column: 21, scope: !17454)
!17463 = !DILocation(line: 287, column: 25, scope: !17454)
!17464 = !DILocalVariable(name: "SR10", scope: !17454, file: !1216, line: 291, type: !5)
!17465 = !DILocation(line: 291, column: 21, scope: !17454)
!17466 = !DILocation(line: 291, column: 54, scope: !17454)
!17467 = !DILocation(line: 293, column: 22, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17454, file: !1216, line: 293, column: 21)
!17469 = !DILocation(line: 293, column: 26, scope: !17468)
!17470 = !DILocation(line: 293, column: 24, scope: !17468)
!17471 = !DILocation(line: 293, column: 33, scope: !17468)
!17472 = !DILocation(line: 293, column: 37, scope: !17468)
!17473 = !DILocation(line: 293, column: 35, scope: !17468)
!17474 = !DILocation(line: 293, column: 31, scope: !17468)
!17475 = !DILocation(line: 293, column: 44, scope: !17468)
!17476 = !DILocation(line: 293, column: 48, scope: !17468)
!17477 = !DILocation(line: 293, column: 46, scope: !17468)
!17478 = !DILocation(line: 293, column: 42, scope: !17468)
!17479 = !DILocation(line: 293, column: 54, scope: !17468)
!17480 = !DILocation(line: 293, column: 21, scope: !17454)
!17481 = !DILocation(line: 294, column: 23, scope: !17468)
!17482 = !DILocation(line: 294, column: 19, scope: !17468)
!17483 = !DILocation(line: 296, column: 30, scope: !17484)
!17484 = distinct !DILexicalBlock(scope: !17468, file: !1216, line: 296, column: 19)
!17485 = !DILocation(line: 296, column: 28, scope: !17484)
!17486 = !DILocation(line: 296, column: 41, scope: !17484)
!17487 = !DILocation(line: 296, column: 38, scope: !17484)
!17488 = !DILocation(line: 296, column: 52, scope: !17484)
!17489 = !DILocation(line: 296, column: 49, scope: !17484)
!17490 = !DILocation(line: 296, column: 63, scope: !17484)
!17491 = !DILocation(line: 296, column: 60, scope: !17484)
!17492 = !DILocation(line: 296, column: 24, scope: !17484)
!17493 = !DILocation(line: 297, column: 25, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17484, file: !1216, line: 296, column: 19)
!17495 = !DILocation(line: 297, column: 31, scope: !17494)
!17496 = !DILocation(line: 297, column: 40, scope: !17494)
!17497 = !DILocation(line: 297, column: 29, scope: !17494)
!17498 = !DILocation(line: 298, column: 25, scope: !17494)
!17499 = !DILocation(line: 298, column: 29, scope: !17494)
!17500 = !DILocation(line: 298, column: 31, scope: !17494)
!17501 = !DILocation(line: 298, column: 38, scope: !17494)
!17502 = !DILocation(line: 298, column: 40, scope: !17494)
!17503 = !DILocation(line: 298, column: 36, scope: !17494)
!17504 = !DILocation(line: 298, column: 47, scope: !17494)
!17505 = !DILocation(line: 298, column: 49, scope: !17494)
!17506 = !DILocation(line: 298, column: 45, scope: !17494)
!17507 = !DILocation(line: 298, column: 55, scope: !17494)
!17508 = !DILocation(line: 0, scope: !17494)
!17509 = !DILocation(line: 296, column: 19, scope: !17484)
!17510 = !DILocation(line: 300, column: 25, scope: !17511)
!17511 = distinct !DILexicalBlock(scope: !17494, file: !1216, line: 300, column: 25)
!17512 = !DILocation(line: 300, column: 29, scope: !17511)
!17513 = !DILocation(line: 300, column: 25, scope: !17494)
!17514 = !DILocation(line: 302, column: 31, scope: !17515)
!17515 = distinct !DILexicalBlock(scope: !17516, file: !1216, line: 302, column: 29)
!17516 = distinct !DILexicalBlock(scope: !17511, file: !1216, line: 301, column: 23)
!17517 = !DILocation(line: 302, column: 29, scope: !17516)
!17518 = !DILocation(line: 303, column: 31, scope: !17515)
!17519 = !DILocation(line: 303, column: 27, scope: !17515)
!17520 = !DILocation(line: 304, column: 25, scope: !17516)
!17521 = !DILocation(line: 300, column: 32, scope: !17511)
!17522 = !DILocation(line: 299, column: 28, scope: !17494)
!17523 = !DILocation(line: 299, column: 37, scope: !17494)
!17524 = !DILocation(line: 299, column: 46, scope: !17494)
!17525 = !DILocation(line: 299, column: 55, scope: !17494)
!17526 = !DILocation(line: 296, column: 19, scope: !17494)
!17527 = distinct !{!17527, !17509, !17528}
!17528 = !DILocation(line: 305, column: 23, scope: !17484)
!17529 = !DILocation(line: 308, column: 35, scope: !17444)
!17530 = !DILocation(line: 308, column: 13, scope: !17444)
!17531 = !DILocation(line: 308, column: 22, scope: !17444)
!17532 = !DILocation(line: 308, column: 33, scope: !17444)
!17533 = !DILocation(line: 311, column: 36, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17419, file: !1216, line: 311, column: 15)
!17535 = !DILocation(line: 311, column: 34, scope: !17534)
!17536 = !DILocation(line: 311, column: 15, scope: !17419)
!17537 = !DILocalVariable(name: "timespec", scope: !17538, file: !1216, line: 313, type: !1254)
!17538 = distinct !DILexicalBlock(scope: !17534, file: !1216, line: 312, column: 13)
!17539 = !DILocation(line: 313, column: 31, scope: !17538)
!17540 = !DILocalVariable(name: "dst_status", scope: !17538, file: !1216, line: 314, type: !1221)
!17541 = !DILocation(line: 314, column: 27, scope: !17538)
!17542 = !DILocation(line: 318, column: 25, scope: !17538)
!17543 = !DILocation(line: 318, column: 32, scope: !17538)
!17544 = !DILocation(line: 318, column: 22, scope: !17538)
!17545 = !DILocalVariable(name: "s", scope: !17546, file: !1216, line: 324, type: !1247)
!17546 = distinct !DILexicalBlock(scope: !17538, file: !1216, line: 323, column: 15)
!17547 = !DILocation(line: 324, column: 24, scope: !17546)
!17548 = !DILocation(line: 324, column: 28, scope: !17546)
!17549 = !DILocation(line: 324, column: 39, scope: !17546)
!17550 = !DILocation(line: 324, column: 43, scope: !17546)
!17551 = !DILocation(line: 324, column: 36, scope: !17546)
!17552 = !DILocation(line: 324, column: 34, scope: !17546)
!17553 = !DILocation(line: 325, column: 21, scope: !17554)
!17554 = distinct !DILexicalBlock(scope: !17546, file: !1216, line: 325, column: 21)
!17555 = !DILocation(line: 325, column: 29, scope: !17554)
!17556 = !DILocation(line: 325, column: 27, scope: !17554)
!17557 = !DILocation(line: 325, column: 35, scope: !17554)
!17558 = !DILocation(line: 325, column: 39, scope: !17554)
!17559 = !DILocation(line: 325, column: 48, scope: !17554)
!17560 = !DILocation(line: 325, column: 45, scope: !17554)
!17561 = !DILocation(line: 325, column: 54, scope: !17554)
!17562 = !DILocation(line: 325, column: 57, scope: !17554)
!17563 = !DILocation(line: 325, column: 67, scope: !17554)
!17564 = !DILocation(line: 325, column: 64, scope: !17554)
!17565 = !DILocation(line: 325, column: 21, scope: !17546)
!17566 = !DILocation(line: 326, column: 19, scope: !17554)
!17567 = !DILocation(line: 327, column: 21, scope: !17568)
!17568 = distinct !DILexicalBlock(scope: !17546, file: !1216, line: 327, column: 21)
!17569 = !DILocation(line: 327, column: 29, scope: !17568)
!17570 = !DILocation(line: 327, column: 27, scope: !17568)
!17571 = !DILocation(line: 328, column: 21, scope: !17568)
!17572 = !DILocation(line: 328, column: 25, scope: !17568)
!17573 = !DILocation(line: 328, column: 34, scope: !17568)
!17574 = !DILocation(line: 328, column: 31, scope: !17568)
!17575 = !DILocation(line: 328, column: 36, scope: !17568)
!17576 = !DILocation(line: 328, column: 39, scope: !17568)
!17577 = !DILocation(line: 328, column: 48, scope: !17568)
!17578 = !DILocation(line: 328, column: 57, scope: !17568)
!17579 = !DILocation(line: 328, column: 66, scope: !17568)
!17580 = !DILocation(line: 328, column: 64, scope: !17568)
!17581 = !DILocation(line: 328, column: 55, scope: !17568)
!17582 = !DILocation(line: 328, column: 46, scope: !17568)
!17583 = !DILocation(line: 327, column: 21, scope: !17546)
!17584 = !DILocation(line: 329, column: 19, scope: !17568)
!17585 = !DILocation(line: 338, column: 36, scope: !17538)
!17586 = !DILocation(line: 338, column: 15, scope: !17538)
!17587 = !DILocation(line: 338, column: 27, scope: !17538)
!17588 = !DILocation(line: 338, column: 34, scope: !17538)
!17589 = !DILocation(line: 339, column: 37, scope: !17538)
!17590 = !DILocation(line: 339, column: 15, scope: !17538)
!17591 = !DILocation(line: 339, column: 27, scope: !17538)
!17592 = !DILocation(line: 339, column: 35, scope: !17538)
!17593 = !DILocation(line: 340, column: 36, scope: !17538)
!17594 = !DILocation(line: 340, column: 47, scope: !17538)
!17595 = !DILocation(line: 340, column: 51, scope: !17538)
!17596 = !DILocation(line: 340, column: 46, scope: !17538)
!17597 = !DILocation(line: 340, column: 44, scope: !17538)
!17598 = !DILocation(line: 340, column: 15, scope: !17538)
!17599 = !DILocation(line: 340, column: 27, scope: !17538)
!17600 = !DILocation(line: 340, column: 34, scope: !17538)
!17601 = !DILocation(line: 341, column: 37, scope: !17538)
!17602 = !DILocation(line: 341, column: 48, scope: !17538)
!17603 = !DILocation(line: 341, column: 52, scope: !17538)
!17604 = !DILocation(line: 341, column: 46, scope: !17538)
!17605 = !DILocation(line: 341, column: 15, scope: !17538)
!17606 = !DILocation(line: 341, column: 27, scope: !17538)
!17607 = !DILocation(line: 341, column: 35, scope: !17538)
!17608 = !DILocation(line: 343, column: 30, scope: !17609)
!17609 = distinct !DILexicalBlock(scope: !17538, file: !1216, line: 343, column: 19)
!17610 = !DILocation(line: 343, column: 35, scope: !17609)
!17611 = !DILocation(line: 343, column: 45, scope: !17609)
!17612 = !DILocation(line: 343, column: 19, scope: !17609)
!17613 = !DILocation(line: 343, column: 19, scope: !17538)
!17614 = !DILocation(line: 344, column: 17, scope: !17609)
!17615 = !DILocalVariable(name: "stat_result", scope: !17616, file: !1216, line: 348, type: !5)
!17616 = distinct !DILexicalBlock(scope: !17538, file: !1216, line: 347, column: 15)
!17617 = !DILocation(line: 348, column: 21, scope: !17616)
!17618 = !DILocation(line: 349, column: 30, scope: !17616)
!17619 = !DILocation(line: 349, column: 35, scope: !17616)
!17620 = !DILocation(line: 349, column: 21, scope: !17616)
!17621 = !DILocation(line: 351, column: 21, scope: !17622)
!17622 = distinct !DILexicalBlock(scope: !17616, file: !1216, line: 351, column: 21)
!17623 = !DILocation(line: 352, column: 35, scope: !17622)
!17624 = !DILocation(line: 352, column: 46, scope: !17622)
!17625 = !DILocation(line: 352, column: 44, scope: !17622)
!17626 = !DILocation(line: 352, column: 21, scope: !17622)
!17627 = !DILocation(line: 353, column: 24, scope: !17622)
!17628 = !DILocation(line: 353, column: 58, scope: !17622)
!17629 = !DILocation(line: 353, column: 56, scope: !17622)
!17630 = !DILocation(line: 353, column: 21, scope: !17622)
!17631 = !DILocation(line: 351, column: 21, scope: !17616)
!17632 = !DILocation(line: 357, column: 42, scope: !17633)
!17633 = distinct !DILexicalBlock(scope: !17622, file: !1216, line: 354, column: 19)
!17634 = !DILocation(line: 357, column: 21, scope: !17633)
!17635 = !DILocation(line: 357, column: 33, scope: !17633)
!17636 = !DILocation(line: 357, column: 40, scope: !17633)
!17637 = !DILocation(line: 358, column: 43, scope: !17633)
!17638 = !DILocation(line: 358, column: 21, scope: !17633)
!17639 = !DILocation(line: 358, column: 33, scope: !17633)
!17640 = !DILocation(line: 358, column: 41, scope: !17633)
!17641 = !DILocation(line: 359, column: 32, scope: !17633)
!17642 = !DILocation(line: 359, column: 37, scope: !17633)
!17643 = !DILocation(line: 359, column: 47, scope: !17633)
!17644 = !DILocation(line: 359, column: 21, scope: !17633)
!17645 = !DILocation(line: 360, column: 19, scope: !17633)
!17646 = !DILocation(line: 362, column: 21, scope: !17647)
!17647 = distinct !DILexicalBlock(scope: !17616, file: !1216, line: 362, column: 21)
!17648 = !DILocation(line: 362, column: 33, scope: !17647)
!17649 = !DILocation(line: 362, column: 21, scope: !17616)
!17650 = !DILocation(line: 363, column: 19, scope: !17647)
!17651 = !DILocalVariable(name: "old_res", scope: !17652, file: !1216, line: 369, type: !5)
!17652 = distinct !DILexicalBlock(scope: !17538, file: !1216, line: 368, column: 15)
!17653 = !DILocation(line: 369, column: 21, scope: !17652)
!17654 = !DILocation(line: 369, column: 31, scope: !17652)
!17655 = !DILocalVariable(name: "a", scope: !17652, file: !1216, line: 370, type: !5)
!17656 = !DILocation(line: 370, column: 21, scope: !17652)
!17657 = !DILocation(line: 370, column: 48, scope: !17652)
!17658 = !DILocation(line: 370, column: 57, scope: !17652)
!17659 = !DILocation(line: 370, column: 34, scope: !17652)
!17660 = !DILocation(line: 371, column: 28, scope: !17652)
!17661 = !DILocation(line: 371, column: 26, scope: !17652)
!17662 = !DILocation(line: 370, column: 25, scope: !17652)
!17663 = !DILocation(line: 373, column: 21, scope: !17652)
!17664 = !DILocation(line: 375, column: 27, scope: !17665)
!17665 = distinct !DILexicalBlock(scope: !17652, file: !1216, line: 375, column: 17)
!17666 = !DILocation(line: 375, column: 24, scope: !17665)
!17667 = !DILocation(line: 375, column: 22, scope: !17665)
!17668 = !DILocation(line: 375, column: 32, scope: !17669)
!17669 = distinct !DILexicalBlock(scope: !17665, file: !1216, line: 375, column: 17)
!17670 = !DILocation(line: 375, column: 34, scope: !17669)
!17671 = !DILocation(line: 375, column: 39, scope: !17669)
!17672 = !DILocation(line: 375, column: 17, scope: !17665)
!17673 = !DILocation(line: 377, column: 25, scope: !17674)
!17674 = distinct !DILexicalBlock(scope: !17675, file: !1216, line: 377, column: 25)
!17675 = distinct !DILexicalBlock(scope: !17669, file: !1216, line: 376, column: 19)
!17676 = !DILocation(line: 377, column: 29, scope: !17674)
!17677 = !DILocation(line: 377, column: 25, scope: !17675)
!17678 = !DILocation(line: 379, column: 29, scope: !17679)
!17679 = distinct !DILexicalBlock(scope: !17674, file: !1216, line: 378, column: 23)
!17680 = !DILocation(line: 380, column: 25, scope: !17679)
!17681 = !DILocation(line: 382, column: 25, scope: !17675)
!17682 = !DILocation(line: 383, column: 25, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17675, file: !1216, line: 383, column: 25)
!17684 = !DILocation(line: 383, column: 32, scope: !17683)
!17685 = !DILocation(line: 383, column: 29, scope: !17683)
!17686 = !DILocation(line: 383, column: 25, scope: !17675)
!17687 = !DILocation(line: 384, column: 23, scope: !17683)
!17688 = !DILocation(line: 385, column: 19, scope: !17675)
!17689 = !DILocation(line: 375, column: 47, scope: !17669)
!17690 = !DILocation(line: 375, column: 17, scope: !17669)
!17691 = distinct !{!17691, !17672, !17692}
!17692 = !DILocation(line: 385, column: 19, scope: !17665)
!17693 = !DILocation(line: 387, column: 13, scope: !17538)
!17694 = !DILocation(line: 389, column: 33, scope: !17419)
!17695 = !DILocation(line: 389, column: 11, scope: !17419)
!17696 = !DILocation(line: 389, column: 20, scope: !17419)
!17697 = !DILocation(line: 389, column: 31, scope: !17419)
!17698 = !DILocation(line: 390, column: 11, scope: !17419)
!17699 = !DILocation(line: 390, column: 20, scope: !17419)
!17700 = !DILocation(line: 390, column: 26, scope: !17419)
!17701 = !DILocation(line: 391, column: 9, scope: !17419)
!17702 = !DILocation(line: 394, column: 19, scope: !17299)
!17703 = !DILocation(line: 394, column: 23, scope: !17299)
!17704 = !DILocation(line: 394, column: 16, scope: !17299)
!17705 = !DILocation(line: 394, column: 13, scope: !17299)
!17706 = !DILocation(line: 395, column: 17, scope: !17299)
!17707 = !DILocation(line: 395, column: 26, scope: !17299)
!17708 = !DILocation(line: 395, column: 24, scope: !17299)
!17709 = !DILocation(line: 395, column: 14, scope: !17299)
!17710 = !DILocation(line: 396, column: 5, scope: !17299)
!17711 = !DILocation(line: 399, column: 11, scope: !1215)
!17712 = !DILocation(line: 399, column: 19, scope: !1215)
!17713 = !DILocation(line: 399, column: 17, scope: !1215)
!17714 = !DILocation(line: 400, column: 13, scope: !1215)
!17715 = !DILocation(line: 400, column: 21, scope: !1215)
!17716 = !DILocation(line: 400, column: 19, scope: !1215)
!17717 = !DILocation(line: 401, column: 13, scope: !1215)
!17718 = !DILocation(line: 401, column: 22, scope: !1215)
!17719 = !DILocation(line: 401, column: 20, scope: !1215)
!17720 = !DILocation(line: 402, column: 13, scope: !1215)
!17721 = !DILocation(line: 402, column: 22, scope: !1215)
!17722 = !DILocation(line: 402, column: 20, scope: !1215)
!17723 = !DILocation(line: 399, column: 3, scope: !1215)
!17724 = !DILocation(line: 403, column: 1, scope: !1215)
!17725 = distinct !DISubprogram(name: "dev_info_hash", scope: !1216, file: !1216, line: 85, type: !615, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1242, retainedNodes: !206)
!17726 = !DILocalVariable(name: "x", arg: 1, scope: !17725, file: !1216, line: 85, type: !525)
!17727 = !DILocation(line: 85, column: 28, scope: !17725)
!17728 = !DILocalVariable(name: "table_size", arg: 2, scope: !17725, file: !1216, line: 85, type: !52)
!17729 = !DILocation(line: 85, column: 38, scope: !17725)
!17730 = !DILocalVariable(name: "p", scope: !17725, file: !1216, line: 87, type: !1255)
!17731 = !DILocation(line: 87, column: 24, scope: !17725)
!17732 = !DILocation(line: 87, column: 28, scope: !17725)
!17733 = !DILocation(line: 96, column: 10, scope: !17725)
!17734 = !DILocation(line: 96, column: 13, scope: !17725)
!17735 = !DILocation(line: 96, column: 19, scope: !17725)
!17736 = !DILocation(line: 96, column: 17, scope: !17725)
!17737 = !DILocation(line: 96, column: 3, scope: !17725)
!17738 = distinct !DISubprogram(name: "dev_info_compare", scope: !1216, file: !1216, line: 101, type: !617, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1242, retainedNodes: !206)
!17739 = !DILocalVariable(name: "x", arg: 1, scope: !17738, file: !1216, line: 101, type: !525)
!17740 = !DILocation(line: 101, column: 31, scope: !17738)
!17741 = !DILocalVariable(name: "y", arg: 2, scope: !17738, file: !1216, line: 101, type: !525)
!17742 = !DILocation(line: 101, column: 46, scope: !17738)
!17743 = !DILocalVariable(name: "a", scope: !17738, file: !1216, line: 103, type: !1255)
!17744 = !DILocation(line: 103, column: 24, scope: !17738)
!17745 = !DILocation(line: 103, column: 28, scope: !17738)
!17746 = !DILocalVariable(name: "b", scope: !17738, file: !1216, line: 104, type: !1255)
!17747 = !DILocation(line: 104, column: 24, scope: !17738)
!17748 = !DILocation(line: 104, column: 28, scope: !17738)
!17749 = !DILocation(line: 105, column: 10, scope: !17738)
!17750 = !DILocation(line: 105, column: 13, scope: !17738)
!17751 = !DILocation(line: 105, column: 20, scope: !17738)
!17752 = !DILocation(line: 105, column: 23, scope: !17738)
!17753 = !DILocation(line: 105, column: 17, scope: !17738)
!17754 = !DILocation(line: 105, column: 3, scope: !17738)
!17755 = distinct !DISubprogram(name: "lutimensat", scope: !17756, file: !17756, line: 42, type: !1265, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1262, retainedNodes: !206)
!17756 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mohamad/clone/coreutils")
!17757 = !DILocalVariable(name: "dir", arg: 1, scope: !17755, file: !17756, line: 42, type: !5)
!17758 = !DILocation(line: 42, column: 17, scope: !17755)
!17759 = !DILocalVariable(name: "file", arg: 2, scope: !17755, file: !17756, line: 42, type: !177)
!17760 = !DILocation(line: 42, column: 34, scope: !17755)
!17761 = !DILocalVariable(name: "times", arg: 3, scope: !17755, file: !17756, line: 42, type: !1267)
!17762 = !DILocation(line: 42, column: 62, scope: !17755)
!17763 = !DILocation(line: 44, column: 21, scope: !17755)
!17764 = !DILocation(line: 44, column: 26, scope: !17755)
!17765 = !DILocation(line: 44, column: 32, scope: !17755)
!17766 = !DILocation(line: 44, column: 10, scope: !17755)
!17767 = !DILocation(line: 44, column: 3, scope: !17755)
!17768 = distinct !DISubprogram(name: "fdutimens", scope: !1312, file: !1312, line: 170, type: !1265, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1262, retainedNodes: !206)
!17769 = !DILocalVariable(name: "fd", arg: 1, scope: !17768, file: !1312, line: 170, type: !5)
!17770 = !DILocation(line: 170, column: 16, scope: !17768)
!17771 = !DILocalVariable(name: "file", arg: 2, scope: !17768, file: !1312, line: 170, type: !177)
!17772 = !DILocation(line: 170, column: 32, scope: !17768)
!17773 = !DILocalVariable(name: "timespec", arg: 3, scope: !17768, file: !1312, line: 170, type: !1267)
!17774 = !DILocation(line: 170, column: 60, scope: !17768)
!17775 = !DILocalVariable(name: "adjusted_timespec", scope: !17768, file: !1312, line: 172, type: !1273)
!17776 = !DILocation(line: 172, column: 19, scope: !17768)
!17777 = !DILocalVariable(name: "ts", scope: !17768, file: !1312, line: 173, type: !1274)
!17778 = !DILocation(line: 173, column: 20, scope: !17768)
!17779 = !DILocation(line: 173, column: 25, scope: !17768)
!17780 = !DILocation(line: 173, column: 36, scope: !17768)
!17781 = !DILocalVariable(name: "adjustment_needed", scope: !17768, file: !1312, line: 174, type: !5)
!17782 = !DILocation(line: 174, column: 7, scope: !17768)
!17783 = !DILocalVariable(name: "st", scope: !17768, file: !1312, line: 175, type: !1291)
!17784 = !DILocation(line: 175, column: 15, scope: !17768)
!17785 = !DILocation(line: 177, column: 7, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17768, file: !1312, line: 177, column: 7)
!17787 = !DILocation(line: 177, column: 7, scope: !17768)
!17788 = !DILocation(line: 179, column: 7, scope: !17789)
!17789 = distinct !DILexicalBlock(scope: !17786, file: !1312, line: 178, column: 5)
!17790 = !DILocation(line: 179, column: 30, scope: !17789)
!17791 = !DILocation(line: 180, column: 7, scope: !17789)
!17792 = !DILocation(line: 180, column: 30, scope: !17789)
!17793 = !DILocation(line: 181, column: 46, scope: !17789)
!17794 = !DILocation(line: 181, column: 27, scope: !17789)
!17795 = !DILocation(line: 181, column: 25, scope: !17789)
!17796 = !DILocation(line: 182, column: 5, scope: !17789)
!17797 = !DILocation(line: 183, column: 7, scope: !17798)
!17798 = distinct !DILexicalBlock(scope: !17768, file: !1312, line: 183, column: 7)
!17799 = !DILocation(line: 183, column: 25, scope: !17798)
!17800 = !DILocation(line: 183, column: 7, scope: !17768)
!17801 = !DILocation(line: 184, column: 5, scope: !17798)
!17802 = !DILocation(line: 189, column: 7, scope: !17803)
!17803 = distinct !DILexicalBlock(scope: !17768, file: !1312, line: 189, column: 7)
!17804 = !DILocation(line: 189, column: 10, scope: !17803)
!17805 = !DILocation(line: 189, column: 14, scope: !17803)
!17806 = !DILocation(line: 189, column: 18, scope: !17803)
!17807 = !DILocation(line: 189, column: 7, scope: !17768)
!17808 = !DILocation(line: 191, column: 7, scope: !17809)
!17809 = distinct !DILexicalBlock(scope: !17803, file: !1312, line: 190, column: 5)
!17810 = !DILocation(line: 191, column: 13, scope: !17809)
!17811 = !DILocation(line: 192, column: 7, scope: !17809)
!17812 = !DILocation(line: 218, column: 12, scope: !17813)
!17813 = distinct !DILexicalBlock(scope: !17768, file: !1312, line: 218, column: 7)
!17814 = !DILocation(line: 218, column: 9, scope: !17813)
!17815 = !DILocation(line: 218, column: 7, scope: !17768)
!17816 = !DILocalVariable(name: "result", scope: !17817, file: !1312, line: 220, type: !5)
!17817 = distinct !DILexicalBlock(scope: !17813, file: !1312, line: 219, column: 5)
!17818 = !DILocation(line: 220, column: 11, scope: !17817)
!17819 = !DILocation(line: 234, column: 11, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17817, file: !1312, line: 234, column: 11)
!17821 = !DILocation(line: 234, column: 29, scope: !17820)
!17822 = !DILocation(line: 234, column: 11, scope: !17817)
!17823 = !DILocation(line: 236, column: 15, scope: !17824)
!17824 = distinct !DILexicalBlock(scope: !17825, file: !1312, line: 236, column: 15)
!17825 = distinct !DILexicalBlock(scope: !17820, file: !1312, line: 235, column: 9)
!17826 = !DILocation(line: 236, column: 18, scope: !17824)
!17827 = !DILocation(line: 236, column: 15, scope: !17825)
!17828 = !DILocation(line: 236, column: 30, scope: !17824)
!17829 = !DILocation(line: 236, column: 24, scope: !17824)
!17830 = !DILocation(line: 236, column: 50, scope: !17824)
!17831 = !DILocation(line: 236, column: 43, scope: !17824)
!17832 = !DILocation(line: 237, column: 13, scope: !17824)
!17833 = !DILocation(line: 238, column: 15, scope: !17834)
!17834 = distinct !DILexicalBlock(scope: !17825, file: !1312, line: 238, column: 15)
!17835 = !DILocation(line: 238, column: 21, scope: !17834)
!17836 = !DILocation(line: 238, column: 29, scope: !17834)
!17837 = !DILocation(line: 238, column: 15, scope: !17825)
!17838 = !DILocation(line: 239, column: 13, scope: !17834)
!17839 = !DILocation(line: 239, column: 21, scope: !17834)
!17840 = !DILocation(line: 240, column: 20, scope: !17841)
!17841 = distinct !DILexicalBlock(scope: !17834, file: !1312, line: 240, column: 20)
!17842 = !DILocation(line: 240, column: 26, scope: !17841)
!17843 = !DILocation(line: 240, column: 34, scope: !17841)
!17844 = !DILocation(line: 240, column: 20, scope: !17834)
!17845 = !DILocation(line: 241, column: 13, scope: !17841)
!17846 = !DILocation(line: 241, column: 21, scope: !17841)
!17847 = !DILocation(line: 243, column: 28, scope: !17825)
!17848 = !DILocation(line: 244, column: 9, scope: !17825)
!17849 = !DILocation(line: 247, column: 11, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17817, file: !1312, line: 247, column: 11)
!17851 = !DILocation(line: 247, column: 14, scope: !17850)
!17852 = !DILocation(line: 247, column: 11, scope: !17817)
!17853 = !DILocation(line: 249, column: 41, scope: !17854)
!17854 = distinct !DILexicalBlock(scope: !17850, file: !1312, line: 248, column: 9)
!17855 = !DILocation(line: 249, column: 47, scope: !17854)
!17856 = !DILocation(line: 249, column: 20, scope: !17854)
!17857 = !DILocation(line: 249, column: 18, scope: !17854)
!17858 = !DILocation(line: 258, column: 19, scope: !17859)
!17859 = distinct !DILexicalBlock(scope: !17854, file: !1312, line: 258, column: 15)
!17860 = !DILocation(line: 258, column: 17, scope: !17859)
!17861 = !DILocation(line: 258, column: 15, scope: !17854)
!17862 = !DILocation(line: 259, column: 13, scope: !17859)
!17863 = !DILocation(line: 259, column: 19, scope: !17859)
!17864 = !DILocation(line: 261, column: 15, scope: !17865)
!17865 = distinct !DILexicalBlock(scope: !17854, file: !1312, line: 261, column: 15)
!17866 = !DILocation(line: 261, column: 22, scope: !17865)
!17867 = !DILocation(line: 261, column: 27, scope: !17865)
!17868 = !DILocation(line: 261, column: 30, scope: !17865)
!17869 = !DILocation(line: 261, column: 36, scope: !17865)
!17870 = !DILocation(line: 261, column: 15, scope: !17854)
!17871 = !DILocation(line: 263, column: 38, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17865, file: !1312, line: 262, column: 13)
!17873 = !DILocation(line: 264, column: 22, scope: !17872)
!17874 = !DILocation(line: 264, column: 15, scope: !17872)
!17875 = !DILocation(line: 266, column: 9, scope: !17854)
!17876 = !DILocation(line: 269, column: 16, scope: !17877)
!17877 = distinct !DILexicalBlock(scope: !17817, file: !1312, line: 269, column: 11)
!17878 = !DILocation(line: 269, column: 13, scope: !17877)
!17879 = !DILocation(line: 269, column: 11, scope: !17817)
!17880 = !DILocation(line: 271, column: 30, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17877, file: !1312, line: 270, column: 9)
!17882 = !DILocation(line: 271, column: 34, scope: !17881)
!17883 = !DILocation(line: 271, column: 20, scope: !17881)
!17884 = !DILocation(line: 271, column: 18, scope: !17881)
!17885 = !DILocation(line: 274, column: 19, scope: !17886)
!17886 = distinct !DILexicalBlock(scope: !17881, file: !1312, line: 274, column: 15)
!17887 = !DILocation(line: 274, column: 17, scope: !17886)
!17888 = !DILocation(line: 274, column: 15, scope: !17881)
!17889 = !DILocation(line: 275, column: 13, scope: !17886)
!17890 = !DILocation(line: 275, column: 19, scope: !17886)
!17891 = !DILocation(line: 277, column: 15, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17881, file: !1312, line: 277, column: 15)
!17893 = !DILocation(line: 277, column: 22, scope: !17892)
!17894 = !DILocation(line: 277, column: 27, scope: !17892)
!17895 = !DILocation(line: 277, column: 30, scope: !17892)
!17896 = !DILocation(line: 277, column: 36, scope: !17892)
!17897 = !DILocation(line: 277, column: 15, scope: !17881)
!17898 = !DILocation(line: 279, column: 38, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17892, file: !1312, line: 278, column: 13)
!17900 = !DILocation(line: 280, column: 22, scope: !17899)
!17901 = !DILocation(line: 280, column: 15, scope: !17899)
!17902 = !DILocation(line: 282, column: 9, scope: !17881)
!17903 = !DILocation(line: 284, column: 5, scope: !17817)
!17904 = !DILocation(line: 285, column: 26, scope: !17768)
!17905 = !DILocation(line: 286, column: 27, scope: !17768)
!17906 = !DILocation(line: 377, column: 7, scope: !17907)
!17907 = distinct !DILexicalBlock(scope: !17768, file: !1312, line: 377, column: 7)
!17908 = !DILocation(line: 377, column: 7, scope: !17768)
!17909 = !DILocation(line: 379, column: 11, scope: !17910)
!17910 = distinct !DILexicalBlock(scope: !17911, file: !1312, line: 379, column: 11)
!17911 = distinct !DILexicalBlock(scope: !17907, file: !1312, line: 378, column: 5)
!17912 = !DILocation(line: 379, column: 29, scope: !17910)
!17913 = !DILocation(line: 380, column: 11, scope: !17910)
!17914 = !DILocation(line: 380, column: 15, scope: !17910)
!17915 = !DILocation(line: 380, column: 18, scope: !17910)
!17916 = !DILocation(line: 379, column: 11, scope: !17911)
!17917 = !DILocation(line: 380, column: 30, scope: !17910)
!17918 = !DILocation(line: 380, column: 24, scope: !17910)
!17919 = !DILocation(line: 380, column: 50, scope: !17910)
!17920 = !DILocation(line: 380, column: 43, scope: !17910)
!17921 = !DILocation(line: 381, column: 9, scope: !17910)
!17922 = !DILocation(line: 382, column: 11, scope: !17923)
!17923 = distinct !DILexicalBlock(scope: !17911, file: !1312, line: 382, column: 11)
!17924 = !DILocation(line: 382, column: 14, scope: !17923)
!17925 = !DILocation(line: 382, column: 17, scope: !17923)
!17926 = !DILocation(line: 382, column: 11, scope: !17911)
!17927 = !DILocation(line: 383, column: 9, scope: !17923)
!17928 = !DILocation(line: 384, column: 5, scope: !17911)
!17929 = !DILocalVariable(name: "timeval", scope: !17930, file: !1312, line: 388, type: !1275)
!17930 = distinct !DILexicalBlock(scope: !17768, file: !1312, line: 386, column: 3)
!17931 = !DILocation(line: 388, column: 20, scope: !17930)
!17932 = !DILocalVariable(name: "t", scope: !17930, file: !1312, line: 389, type: !1282)
!17933 = !DILocation(line: 389, column: 21, scope: !17930)
!17934 = !DILocation(line: 390, column: 9, scope: !17935)
!17935 = distinct !DILexicalBlock(scope: !17930, file: !1312, line: 390, column: 9)
!17936 = !DILocation(line: 390, column: 9, scope: !17930)
!17937 = !DILocation(line: 392, column: 29, scope: !17938)
!17938 = distinct !DILexicalBlock(scope: !17935, file: !1312, line: 391, column: 7)
!17939 = !DILocation(line: 392, column: 35, scope: !17938)
!17940 = !DILocation(line: 392, column: 9, scope: !17938)
!17941 = !DILocation(line: 392, column: 20, scope: !17938)
!17942 = !DILocation(line: 392, column: 27, scope: !17938)
!17943 = !{!17944, !2936, i64 0}
!17944 = !{!"timeval", !2936, i64 0, !2936, i64 8}
!17945 = !DILocation(line: 393, column: 30, scope: !17938)
!17946 = !DILocation(line: 393, column: 36, scope: !17938)
!17947 = !DILocation(line: 393, column: 44, scope: !17938)
!17948 = !DILocation(line: 393, column: 9, scope: !17938)
!17949 = !DILocation(line: 393, column: 20, scope: !17938)
!17950 = !DILocation(line: 393, column: 28, scope: !17938)
!17951 = !{!17944, !2936, i64 8}
!17952 = !DILocation(line: 394, column: 29, scope: !17938)
!17953 = !DILocation(line: 394, column: 35, scope: !17938)
!17954 = !DILocation(line: 394, column: 9, scope: !17938)
!17955 = !DILocation(line: 394, column: 20, scope: !17938)
!17956 = !DILocation(line: 394, column: 27, scope: !17938)
!17957 = !DILocation(line: 395, column: 30, scope: !17938)
!17958 = !DILocation(line: 395, column: 36, scope: !17938)
!17959 = !DILocation(line: 395, column: 44, scope: !17938)
!17960 = !DILocation(line: 395, column: 9, scope: !17938)
!17961 = !DILocation(line: 395, column: 20, scope: !17938)
!17962 = !DILocation(line: 395, column: 28, scope: !17938)
!17963 = !DILocation(line: 396, column: 13, scope: !17938)
!17964 = !DILocation(line: 396, column: 11, scope: !17938)
!17965 = !DILocation(line: 397, column: 7, scope: !17938)
!17966 = !DILocation(line: 399, column: 9, scope: !17935)
!17967 = !DILocation(line: 401, column: 9, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17930, file: !1312, line: 401, column: 9)
!17969 = !DILocation(line: 401, column: 12, scope: !17968)
!17970 = !DILocation(line: 401, column: 9, scope: !17930)
!17971 = !DILocation(line: 404, column: 37, scope: !17972)
!17972 = distinct !DILexicalBlock(scope: !17968, file: !1312, line: 402, column: 7)
!17973 = !DILocation(line: 404, column: 43, scope: !17972)
!17974 = !DILocation(line: 404, column: 16, scope: !17972)
!17975 = !DILocation(line: 404, column: 9, scope: !17972)
!17976 = !DILocation(line: 425, column: 13, scope: !17977)
!17977 = distinct !DILexicalBlock(scope: !17978, file: !1312, line: 425, column: 13)
!17978 = distinct !DILexicalBlock(scope: !17968, file: !1312, line: 408, column: 7)
!17979 = !DILocation(line: 425, column: 29, scope: !17977)
!17980 = !DILocation(line: 425, column: 13, scope: !17978)
!17981 = !DILocation(line: 433, column: 17, scope: !17982)
!17982 = distinct !DILexicalBlock(scope: !17983, file: !1312, line: 433, column: 17)
!17983 = distinct !DILexicalBlock(scope: !17977, file: !1312, line: 426, column: 11)
!17984 = !DILocation(line: 433, column: 17, scope: !17983)
!17985 = !DILocalVariable(name: "abig", scope: !17986, file: !1312, line: 435, type: !139)
!17986 = distinct !DILexicalBlock(scope: !17982, file: !1312, line: 434, column: 15)
!17987 = !DILocation(line: 435, column: 22, scope: !17986)
!17988 = !DILocation(line: 435, column: 39, scope: !17986)
!17989 = !DILocation(line: 435, column: 44, scope: !17986)
!17990 = !DILocation(line: 435, column: 36, scope: !17986)
!17991 = !DILocalVariable(name: "mbig", scope: !17986, file: !1312, line: 436, type: !139)
!17992 = !DILocation(line: 436, column: 22, scope: !17986)
!17993 = !DILocation(line: 436, column: 39, scope: !17986)
!17994 = !DILocation(line: 436, column: 44, scope: !17986)
!17995 = !DILocation(line: 436, column: 36, scope: !17986)
!17996 = !DILocation(line: 437, column: 22, scope: !17997)
!17997 = distinct !DILexicalBlock(scope: !17986, file: !1312, line: 437, column: 21)
!17998 = !DILocation(line: 437, column: 29, scope: !17997)
!17999 = !DILocation(line: 437, column: 27, scope: !17997)
!18000 = !DILocation(line: 437, column: 35, scope: !17997)
!18001 = !DILocation(line: 437, column: 45, scope: !17997)
!18002 = !DILocation(line: 437, column: 38, scope: !17997)
!18003 = !DILocation(line: 437, column: 54, scope: !17997)
!18004 = !DILocation(line: 437, column: 21, scope: !17986)
!18005 = !DILocalVariable(name: "adiff", scope: !18006, file: !1312, line: 441, type: !1247)
!18006 = distinct !DILexicalBlock(scope: !17997, file: !1312, line: 438, column: 19)
!18007 = !DILocation(line: 441, column: 28, scope: !18006)
!18008 = !DILocation(line: 441, column: 39, scope: !18006)
!18009 = !DILocation(line: 441, column: 50, scope: !18006)
!18010 = !DILocation(line: 441, column: 55, scope: !18006)
!18011 = !DILocation(line: 441, column: 48, scope: !18006)
!18012 = !DILocalVariable(name: "mdiff", scope: !18006, file: !1312, line: 442, type: !1247)
!18013 = !DILocation(line: 442, column: 28, scope: !18006)
!18014 = !DILocation(line: 442, column: 39, scope: !18006)
!18015 = !DILocation(line: 442, column: 50, scope: !18006)
!18016 = !DILocation(line: 442, column: 55, scope: !18006)
!18017 = !DILocation(line: 442, column: 48, scope: !18006)
!18018 = !DILocalVariable(name: "tt", scope: !18006, file: !1312, line: 444, type: !1282)
!18019 = !DILocation(line: 444, column: 37, scope: !18006)
!18020 = !DILocalVariable(name: "truncated_timeval", scope: !18006, file: !1312, line: 445, type: !1275)
!18021 = !DILocation(line: 445, column: 36, scope: !18006)
!18022 = !DILocation(line: 446, column: 21, scope: !18006)
!18023 = !DILocation(line: 446, column: 44, scope: !18006)
!18024 = !DILocation(line: 447, column: 21, scope: !18006)
!18025 = !DILocation(line: 447, column: 44, scope: !18006)
!18026 = !DILocation(line: 448, column: 25, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18006, file: !1312, line: 448, column: 25)
!18028 = !DILocation(line: 448, column: 30, scope: !18027)
!18029 = !DILocation(line: 448, column: 33, scope: !18027)
!18030 = !DILocation(line: 448, column: 39, scope: !18027)
!18031 = !DILocation(line: 448, column: 44, scope: !18027)
!18032 = !DILocation(line: 448, column: 47, scope: !18027)
!18033 = !DILocation(line: 448, column: 71, scope: !18027)
!18034 = !DILocation(line: 448, column: 25, scope: !18006)
!18035 = !DILocation(line: 450, column: 30, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18027, file: !1312, line: 449, column: 23)
!18037 = !DILocation(line: 450, column: 28, scope: !18036)
!18038 = !DILocation(line: 451, column: 25, scope: !18036)
!18039 = !DILocation(line: 451, column: 31, scope: !18036)
!18040 = !DILocation(line: 451, column: 39, scope: !18036)
!18041 = !DILocation(line: 452, column: 23, scope: !18036)
!18042 = !DILocation(line: 453, column: 25, scope: !18043)
!18043 = distinct !DILexicalBlock(scope: !18006, file: !1312, line: 453, column: 25)
!18044 = !DILocation(line: 453, column: 30, scope: !18043)
!18045 = !DILocation(line: 453, column: 33, scope: !18043)
!18046 = !DILocation(line: 453, column: 39, scope: !18043)
!18047 = !DILocation(line: 453, column: 44, scope: !18043)
!18048 = !DILocation(line: 453, column: 47, scope: !18043)
!18049 = !DILocation(line: 453, column: 71, scope: !18043)
!18050 = !DILocation(line: 453, column: 25, scope: !18006)
!18051 = !DILocation(line: 455, column: 30, scope: !18052)
!18052 = distinct !DILexicalBlock(scope: !18043, file: !1312, line: 454, column: 23)
!18053 = !DILocation(line: 455, column: 28, scope: !18052)
!18054 = !DILocation(line: 456, column: 25, scope: !18052)
!18055 = !DILocation(line: 456, column: 31, scope: !18052)
!18056 = !DILocation(line: 456, column: 39, scope: !18052)
!18057 = !DILocation(line: 457, column: 23, scope: !18052)
!18058 = !DILocation(line: 458, column: 25, scope: !18059)
!18059 = distinct !DILexicalBlock(scope: !18006, file: !1312, line: 458, column: 25)
!18060 = !DILocation(line: 458, column: 25, scope: !18006)
!18061 = !DILocation(line: 459, column: 23, scope: !18059)
!18062 = !DILocation(line: 460, column: 19, scope: !18006)
!18063 = !DILocation(line: 461, column: 15, scope: !17986)
!18064 = !DILocation(line: 464, column: 13, scope: !17983)
!18065 = !DILocation(line: 470, column: 10, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !17930, file: !1312, line: 470, column: 9)
!18067 = !DILocation(line: 470, column: 9, scope: !17930)
!18068 = !DILocation(line: 476, column: 9, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18066, file: !1312, line: 471, column: 7)
!18070 = !DILocation(line: 482, column: 20, scope: !17930)
!18071 = !DILocation(line: 482, column: 26, scope: !17930)
!18072 = !DILocation(line: 482, column: 12, scope: !17930)
!18073 = !DILocation(line: 482, column: 5, scope: !17930)
!18074 = !DILocation(line: 500, column: 1, scope: !17768)
!18075 = distinct !DISubprogram(name: "validate_timespec", scope: !1312, file: !1312, line: 87, type: !1285, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1262, retainedNodes: !206)
!18076 = !DILocalVariable(name: "timespec", arg: 1, scope: !18075, file: !1312, line: 87, type: !1274)
!18077 = !DILocation(line: 87, column: 36, scope: !18075)
!18078 = !DILocalVariable(name: "result", scope: !18075, file: !1312, line: 89, type: !5)
!18079 = !DILocation(line: 89, column: 7, scope: !18075)
!18080 = !DILocalVariable(name: "utime_omit_count", scope: !18075, file: !1312, line: 90, type: !5)
!18081 = !DILocation(line: 90, column: 7, scope: !18075)
!18082 = !DILocation(line: 91, column: 8, scope: !18083)
!18083 = distinct !DILexicalBlock(scope: !18075, file: !1312, line: 91, column: 7)
!18084 = !DILocation(line: 91, column: 20, scope: !18083)
!18085 = !DILocation(line: 91, column: 28, scope: !18083)
!18086 = !DILocation(line: 92, column: 8, scope: !18083)
!18087 = !DILocation(line: 92, column: 11, scope: !18083)
!18088 = !DILocation(line: 92, column: 23, scope: !18083)
!18089 = !DILocation(line: 92, column: 31, scope: !18083)
!18090 = !DILocation(line: 93, column: 8, scope: !18083)
!18091 = !DILocation(line: 93, column: 19, scope: !18083)
!18092 = !DILocation(line: 93, column: 31, scope: !18083)
!18093 = !DILocation(line: 93, column: 16, scope: !18083)
!18094 = !DILocation(line: 94, column: 14, scope: !18083)
!18095 = !DILocation(line: 94, column: 17, scope: !18083)
!18096 = !DILocation(line: 94, column: 29, scope: !18083)
!18097 = !DILocation(line: 94, column: 37, scope: !18083)
!18098 = !DILocation(line: 95, column: 7, scope: !18083)
!18099 = !DILocation(line: 95, column: 11, scope: !18083)
!18100 = !DILocation(line: 95, column: 23, scope: !18083)
!18101 = !DILocation(line: 95, column: 31, scope: !18083)
!18102 = !DILocation(line: 96, column: 11, scope: !18083)
!18103 = !DILocation(line: 96, column: 14, scope: !18083)
!18104 = !DILocation(line: 96, column: 26, scope: !18083)
!18105 = !DILocation(line: 96, column: 34, scope: !18083)
!18106 = !DILocation(line: 97, column: 11, scope: !18083)
!18107 = !DILocation(line: 97, column: 22, scope: !18083)
!18108 = !DILocation(line: 97, column: 34, scope: !18083)
!18109 = !DILocation(line: 97, column: 19, scope: !18083)
!18110 = !DILocation(line: 98, column: 17, scope: !18083)
!18111 = !DILocation(line: 98, column: 20, scope: !18083)
!18112 = !DILocation(line: 98, column: 32, scope: !18083)
!18113 = !DILocation(line: 98, column: 40, scope: !18083)
!18114 = !DILocation(line: 91, column: 7, scope: !18075)
!18115 = !DILocation(line: 100, column: 7, scope: !18116)
!18116 = distinct !DILexicalBlock(scope: !18083, file: !1312, line: 99, column: 5)
!18117 = !DILocation(line: 100, column: 13, scope: !18116)
!18118 = !DILocation(line: 101, column: 7, scope: !18116)
!18119 = !DILocation(line: 107, column: 7, scope: !18120)
!18120 = distinct !DILexicalBlock(scope: !18075, file: !1312, line: 107, column: 7)
!18121 = !DILocation(line: 107, column: 19, scope: !18120)
!18122 = !DILocation(line: 107, column: 27, scope: !18120)
!18123 = !DILocation(line: 108, column: 7, scope: !18120)
!18124 = !DILocation(line: 108, column: 10, scope: !18120)
!18125 = !DILocation(line: 108, column: 22, scope: !18120)
!18126 = !DILocation(line: 108, column: 30, scope: !18120)
!18127 = !DILocation(line: 107, column: 7, scope: !18075)
!18128 = !DILocation(line: 110, column: 7, scope: !18129)
!18129 = distinct !DILexicalBlock(scope: !18120, file: !1312, line: 109, column: 5)
!18130 = !DILocation(line: 110, column: 19, scope: !18129)
!18131 = !DILocation(line: 110, column: 26, scope: !18129)
!18132 = !DILocation(line: 111, column: 14, scope: !18129)
!18133 = !DILocation(line: 112, column: 11, scope: !18134)
!18134 = distinct !DILexicalBlock(scope: !18129, file: !1312, line: 112, column: 11)
!18135 = !DILocation(line: 112, column: 23, scope: !18134)
!18136 = !DILocation(line: 112, column: 31, scope: !18134)
!18137 = !DILocation(line: 112, column: 11, scope: !18129)
!18138 = !DILocation(line: 113, column: 25, scope: !18134)
!18139 = !DILocation(line: 113, column: 9, scope: !18134)
!18140 = !DILocation(line: 114, column: 5, scope: !18129)
!18141 = !DILocation(line: 115, column: 7, scope: !18142)
!18142 = distinct !DILexicalBlock(scope: !18075, file: !1312, line: 115, column: 7)
!18143 = !DILocation(line: 115, column: 19, scope: !18142)
!18144 = !DILocation(line: 115, column: 27, scope: !18142)
!18145 = !DILocation(line: 116, column: 7, scope: !18142)
!18146 = !DILocation(line: 116, column: 10, scope: !18142)
!18147 = !DILocation(line: 116, column: 22, scope: !18142)
!18148 = !DILocation(line: 116, column: 30, scope: !18142)
!18149 = !DILocation(line: 115, column: 7, scope: !18075)
!18150 = !DILocation(line: 118, column: 7, scope: !18151)
!18151 = distinct !DILexicalBlock(scope: !18142, file: !1312, line: 117, column: 5)
!18152 = !DILocation(line: 118, column: 19, scope: !18151)
!18153 = !DILocation(line: 118, column: 26, scope: !18151)
!18154 = !DILocation(line: 119, column: 14, scope: !18151)
!18155 = !DILocation(line: 120, column: 11, scope: !18156)
!18156 = distinct !DILexicalBlock(scope: !18151, file: !1312, line: 120, column: 11)
!18157 = !DILocation(line: 120, column: 23, scope: !18156)
!18158 = !DILocation(line: 120, column: 31, scope: !18156)
!18159 = !DILocation(line: 120, column: 11, scope: !18151)
!18160 = !DILocation(line: 121, column: 25, scope: !18156)
!18161 = !DILocation(line: 121, column: 9, scope: !18156)
!18162 = !DILocation(line: 122, column: 5, scope: !18151)
!18163 = !DILocation(line: 123, column: 10, scope: !18075)
!18164 = !DILocation(line: 123, column: 20, scope: !18075)
!18165 = !DILocation(line: 123, column: 37, scope: !18075)
!18166 = !DILocation(line: 123, column: 17, scope: !18075)
!18167 = !DILocation(line: 123, column: 3, scope: !18075)
!18168 = !DILocation(line: 124, column: 1, scope: !18075)
!18169 = distinct !DISubprogram(name: "update_timespec", scope: !1312, file: !1312, line: 133, type: !1287, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1262, retainedNodes: !206)
!18170 = !DILocalVariable(name: "statbuf", arg: 1, scope: !18169, file: !1312, line: 133, type: !1289)
!18171 = !DILocation(line: 133, column: 37, scope: !18169)
!18172 = !DILocalVariable(name: "ts", arg: 2, scope: !18169, file: !1312, line: 133, type: !1308)
!18173 = !DILocation(line: 133, column: 63, scope: !18169)
!18174 = !DILocalVariable(name: "timespec", scope: !18169, file: !1312, line: 135, type: !1274)
!18175 = !DILocation(line: 135, column: 20, scope: !18169)
!18176 = !DILocation(line: 135, column: 32, scope: !18169)
!18177 = !DILocation(line: 135, column: 31, scope: !18169)
!18178 = !DILocation(line: 136, column: 7, scope: !18179)
!18179 = distinct !DILexicalBlock(scope: !18169, file: !1312, line: 136, column: 7)
!18180 = !DILocation(line: 136, column: 19, scope: !18179)
!18181 = !DILocation(line: 136, column: 27, scope: !18179)
!18182 = !DILocation(line: 137, column: 7, scope: !18179)
!18183 = !DILocation(line: 137, column: 10, scope: !18179)
!18184 = !DILocation(line: 137, column: 22, scope: !18179)
!18185 = !DILocation(line: 137, column: 30, scope: !18179)
!18186 = !DILocation(line: 136, column: 7, scope: !18169)
!18187 = !DILocation(line: 138, column: 5, scope: !18179)
!18188 = !DILocation(line: 139, column: 7, scope: !18189)
!18189 = distinct !DILexicalBlock(scope: !18169, file: !1312, line: 139, column: 7)
!18190 = !DILocation(line: 139, column: 19, scope: !18189)
!18191 = !DILocation(line: 139, column: 27, scope: !18189)
!18192 = !DILocation(line: 140, column: 7, scope: !18189)
!18193 = !DILocation(line: 140, column: 10, scope: !18189)
!18194 = !DILocation(line: 140, column: 22, scope: !18189)
!18195 = !DILocation(line: 140, column: 30, scope: !18189)
!18196 = !DILocation(line: 139, column: 7, scope: !18169)
!18197 = !DILocation(line: 142, column: 8, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18189, file: !1312, line: 141, column: 5)
!18199 = !DILocation(line: 142, column: 11, scope: !18198)
!18200 = !DILocation(line: 143, column: 7, scope: !18198)
!18201 = !DILocation(line: 146, column: 7, scope: !18202)
!18202 = distinct !DILexicalBlock(scope: !18169, file: !1312, line: 146, column: 7)
!18203 = !DILocation(line: 146, column: 19, scope: !18202)
!18204 = !DILocation(line: 146, column: 27, scope: !18202)
!18205 = !DILocation(line: 146, column: 7, scope: !18169)
!18206 = !DILocation(line: 147, column: 5, scope: !18202)
!18207 = !DILocation(line: 147, column: 35, scope: !18202)
!18208 = !DILocation(line: 147, column: 19, scope: !18202)
!18209 = !DILocation(line: 148, column: 12, scope: !18210)
!18210 = distinct !DILexicalBlock(scope: !18202, file: !1312, line: 148, column: 12)
!18211 = !DILocation(line: 148, column: 24, scope: !18210)
!18212 = !DILocation(line: 148, column: 32, scope: !18210)
!18213 = !DILocation(line: 148, column: 12, scope: !18202)
!18214 = !DILocation(line: 149, column: 15, scope: !18210)
!18215 = !DILocation(line: 149, column: 5, scope: !18210)
!18216 = !DILocation(line: 151, column: 7, scope: !18217)
!18217 = distinct !DILexicalBlock(scope: !18169, file: !1312, line: 151, column: 7)
!18218 = !DILocation(line: 151, column: 19, scope: !18217)
!18219 = !DILocation(line: 151, column: 27, scope: !18217)
!18220 = !DILocation(line: 151, column: 7, scope: !18169)
!18221 = !DILocation(line: 152, column: 5, scope: !18217)
!18222 = !DILocation(line: 152, column: 35, scope: !18217)
!18223 = !DILocation(line: 152, column: 19, scope: !18217)
!18224 = !DILocation(line: 153, column: 12, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18217, file: !1312, line: 153, column: 12)
!18226 = !DILocation(line: 153, column: 24, scope: !18225)
!18227 = !DILocation(line: 153, column: 32, scope: !18225)
!18228 = !DILocation(line: 153, column: 12, scope: !18217)
!18229 = !DILocation(line: 154, column: 15, scope: !18225)
!18230 = !DILocation(line: 154, column: 5, scope: !18225)
!18231 = !DILocation(line: 156, column: 3, scope: !18169)
!18232 = !DILocation(line: 157, column: 1, scope: !18169)
!18233 = distinct !DISubprogram(name: "utimens", scope: !1312, file: !1312, line: 505, type: !1283, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1262, retainedNodes: !206)
!18234 = !DILocalVariable(name: "file", arg: 1, scope: !18233, file: !1312, line: 505, type: !177)
!18235 = !DILocation(line: 505, column: 22, scope: !18233)
!18236 = !DILocalVariable(name: "timespec", arg: 2, scope: !18233, file: !1312, line: 505, type: !1267)
!18237 = !DILocation(line: 505, column: 50, scope: !18233)
!18238 = !DILocation(line: 507, column: 25, scope: !18233)
!18239 = !DILocation(line: 507, column: 31, scope: !18233)
!18240 = !DILocation(line: 507, column: 10, scope: !18233)
!18241 = !DILocation(line: 507, column: 3, scope: !18233)
!18242 = distinct !DISubprogram(name: "lutimens", scope: !1312, file: !1312, line: 515, type: !1283, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1262, retainedNodes: !206)
!18243 = !DILocalVariable(name: "file", arg: 1, scope: !18242, file: !1312, line: 515, type: !177)
!18244 = !DILocation(line: 515, column: 23, scope: !18242)
!18245 = !DILocalVariable(name: "timespec", arg: 2, scope: !18242, file: !1312, line: 515, type: !1267)
!18246 = !DILocation(line: 515, column: 51, scope: !18242)
!18247 = !DILocalVariable(name: "adjusted_timespec", scope: !18242, file: !1312, line: 517, type: !1273)
!18248 = !DILocation(line: 517, column: 19, scope: !18242)
!18249 = !DILocalVariable(name: "ts", scope: !18242, file: !1312, line: 518, type: !1274)
!18250 = !DILocation(line: 518, column: 20, scope: !18242)
!18251 = !DILocation(line: 518, column: 25, scope: !18242)
!18252 = !DILocation(line: 518, column: 36, scope: !18242)
!18253 = !DILocalVariable(name: "adjustment_needed", scope: !18242, file: !1312, line: 519, type: !5)
!18254 = !DILocation(line: 519, column: 7, scope: !18242)
!18255 = !DILocalVariable(name: "st", scope: !18242, file: !1312, line: 520, type: !1291)
!18256 = !DILocation(line: 520, column: 15, scope: !18242)
!18257 = !DILocation(line: 522, column: 7, scope: !18258)
!18258 = distinct !DILexicalBlock(scope: !18242, file: !1312, line: 522, column: 7)
!18259 = !DILocation(line: 522, column: 7, scope: !18242)
!18260 = !DILocation(line: 524, column: 7, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18258, file: !1312, line: 523, column: 5)
!18262 = !DILocation(line: 524, column: 30, scope: !18261)
!18263 = !DILocation(line: 525, column: 7, scope: !18261)
!18264 = !DILocation(line: 525, column: 30, scope: !18261)
!18265 = !DILocation(line: 526, column: 46, scope: !18261)
!18266 = !DILocation(line: 526, column: 27, scope: !18261)
!18267 = !DILocation(line: 526, column: 25, scope: !18261)
!18268 = !DILocation(line: 527, column: 5, scope: !18261)
!18269 = !DILocation(line: 528, column: 7, scope: !18270)
!18270 = distinct !DILexicalBlock(scope: !18242, file: !1312, line: 528, column: 7)
!18271 = !DILocation(line: 528, column: 25, scope: !18270)
!18272 = !DILocation(line: 528, column: 7, scope: !18242)
!18273 = !DILocation(line: 529, column: 5, scope: !18270)
!18274 = !DILocation(line: 537, column: 12, scope: !18275)
!18275 = distinct !DILexicalBlock(scope: !18242, file: !1312, line: 537, column: 7)
!18276 = !DILocation(line: 537, column: 9, scope: !18275)
!18277 = !DILocation(line: 537, column: 7, scope: !18242)
!18278 = !DILocalVariable(name: "result", scope: !18279, file: !1312, line: 539, type: !5)
!18279 = distinct !DILexicalBlock(scope: !18275, file: !1312, line: 538, column: 5)
!18280 = !DILocation(line: 539, column: 11, scope: !18279)
!18281 = !DILocation(line: 553, column: 11, scope: !18282)
!18282 = distinct !DILexicalBlock(scope: !18279, file: !1312, line: 553, column: 11)
!18283 = !DILocation(line: 553, column: 29, scope: !18282)
!18284 = !DILocation(line: 553, column: 11, scope: !18279)
!18285 = !DILocation(line: 555, column: 22, scope: !18286)
!18286 = distinct !DILexicalBlock(scope: !18287, file: !1312, line: 555, column: 15)
!18287 = distinct !DILexicalBlock(scope: !18282, file: !1312, line: 554, column: 9)
!18288 = !DILocation(line: 555, column: 15, scope: !18286)
!18289 = !DILocation(line: 555, column: 15, scope: !18287)
!18290 = !DILocation(line: 556, column: 13, scope: !18286)
!18291 = !DILocation(line: 557, column: 15, scope: !18292)
!18292 = distinct !DILexicalBlock(scope: !18287, file: !1312, line: 557, column: 15)
!18293 = !DILocation(line: 557, column: 21, scope: !18292)
!18294 = !DILocation(line: 557, column: 29, scope: !18292)
!18295 = !DILocation(line: 557, column: 15, scope: !18287)
!18296 = !DILocation(line: 558, column: 13, scope: !18292)
!18297 = !DILocation(line: 558, column: 21, scope: !18292)
!18298 = !DILocation(line: 559, column: 20, scope: !18299)
!18299 = distinct !DILexicalBlock(scope: !18292, file: !1312, line: 559, column: 20)
!18300 = !DILocation(line: 559, column: 26, scope: !18299)
!18301 = !DILocation(line: 559, column: 34, scope: !18299)
!18302 = !DILocation(line: 559, column: 20, scope: !18292)
!18303 = !DILocation(line: 560, column: 13, scope: !18299)
!18304 = !DILocation(line: 560, column: 21, scope: !18299)
!18305 = !DILocation(line: 562, column: 28, scope: !18287)
!18306 = !DILocation(line: 563, column: 9, scope: !18287)
!18307 = !DILocation(line: 565, column: 37, scope: !18279)
!18308 = !DILocation(line: 565, column: 43, scope: !18279)
!18309 = !DILocation(line: 565, column: 16, scope: !18279)
!18310 = !DILocation(line: 565, column: 14, scope: !18279)
!18311 = !DILocation(line: 574, column: 15, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18279, file: !1312, line: 574, column: 11)
!18313 = !DILocation(line: 574, column: 13, scope: !18312)
!18314 = !DILocation(line: 574, column: 11, scope: !18279)
!18315 = !DILocation(line: 575, column: 9, scope: !18312)
!18316 = !DILocation(line: 575, column: 15, scope: !18312)
!18317 = !DILocation(line: 577, column: 11, scope: !18318)
!18318 = distinct !DILexicalBlock(scope: !18279, file: !1312, line: 577, column: 11)
!18319 = !DILocation(line: 577, column: 18, scope: !18318)
!18320 = !DILocation(line: 577, column: 23, scope: !18318)
!18321 = !DILocation(line: 577, column: 26, scope: !18318)
!18322 = !DILocation(line: 577, column: 32, scope: !18318)
!18323 = !DILocation(line: 577, column: 11, scope: !18279)
!18324 = !DILocation(line: 579, column: 34, scope: !18325)
!18325 = distinct !DILexicalBlock(scope: !18318, file: !1312, line: 578, column: 9)
!18326 = !DILocation(line: 580, column: 35, scope: !18325)
!18327 = !DILocation(line: 581, column: 18, scope: !18325)
!18328 = !DILocation(line: 581, column: 11, scope: !18325)
!18329 = !DILocation(line: 583, column: 5, scope: !18279)
!18330 = !DILocation(line: 584, column: 27, scope: !18242)
!18331 = !DILocation(line: 591, column: 7, scope: !18332)
!18332 = distinct !DILexicalBlock(scope: !18242, file: !1312, line: 591, column: 7)
!18333 = !DILocation(line: 591, column: 7, scope: !18242)
!18334 = !DILocation(line: 593, column: 11, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18336, file: !1312, line: 593, column: 11)
!18336 = distinct !DILexicalBlock(scope: !18332, file: !1312, line: 592, column: 5)
!18337 = !DILocation(line: 593, column: 29, scope: !18335)
!18338 = !DILocation(line: 593, column: 34, scope: !18335)
!18339 = !DILocation(line: 593, column: 44, scope: !18335)
!18340 = !DILocation(line: 593, column: 37, scope: !18335)
!18341 = !DILocation(line: 593, column: 11, scope: !18336)
!18342 = !DILocation(line: 594, column: 9, scope: !18335)
!18343 = !DILocation(line: 595, column: 11, scope: !18344)
!18344 = distinct !DILexicalBlock(scope: !18336, file: !1312, line: 595, column: 11)
!18345 = !DILocation(line: 595, column: 14, scope: !18344)
!18346 = !DILocation(line: 595, column: 17, scope: !18344)
!18347 = !DILocation(line: 595, column: 11, scope: !18336)
!18348 = !DILocation(line: 596, column: 9, scope: !18344)
!18349 = !DILocation(line: 597, column: 5, scope: !18336)
!18350 = !DILocation(line: 624, column: 9, scope: !18351)
!18351 = distinct !DILexicalBlock(scope: !18242, file: !1312, line: 624, column: 7)
!18352 = !DILocation(line: 624, column: 54, scope: !18351)
!18353 = !DILocation(line: 624, column: 64, scope: !18351)
!18354 = !DILocation(line: 624, column: 57, scope: !18351)
!18355 = !DILocation(line: 624, column: 7, scope: !18242)
!18356 = !DILocation(line: 625, column: 5, scope: !18351)
!18357 = !DILocation(line: 626, column: 8, scope: !18358)
!18358 = distinct !DILexicalBlock(scope: !18242, file: !1312, line: 626, column: 7)
!18359 = !DILocation(line: 626, column: 7, scope: !18242)
!18360 = !DILocation(line: 627, column: 27, scope: !18358)
!18361 = !DILocation(line: 627, column: 33, scope: !18358)
!18362 = !DILocation(line: 627, column: 12, scope: !18358)
!18363 = !DILocation(line: 627, column: 5, scope: !18358)
!18364 = !DILocation(line: 628, column: 3, scope: !18242)
!18365 = !DILocation(line: 628, column: 9, scope: !18242)
!18366 = !DILocation(line: 629, column: 3, scope: !18242)
!18367 = !DILocation(line: 630, column: 1, scope: !18242)
!18368 = distinct !DISubprogram(name: "version_etc_arn", scope: !18369, file: !18369, line: 61, type: !1956, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1953, retainedNodes: !206)
!18369 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mohamad/clone/coreutils")
!18370 = !DILocalVariable(name: "stream", arg: 1, scope: !18368, file: !18369, line: 61, type: !1958)
!18371 = !DILocation(line: 61, column: 24, scope: !18368)
!18372 = !DILocalVariable(name: "command_name", arg: 2, scope: !18368, file: !18369, line: 62, type: !177)
!18373 = !DILocation(line: 62, column: 30, scope: !18368)
!18374 = !DILocalVariable(name: "package", arg: 3, scope: !18368, file: !18369, line: 62, type: !177)
!18375 = !DILocation(line: 62, column: 56, scope: !18368)
!18376 = !DILocalVariable(name: "version", arg: 4, scope: !18368, file: !18369, line: 63, type: !177)
!18377 = !DILocation(line: 63, column: 30, scope: !18368)
!18378 = !DILocalVariable(name: "authors", arg: 5, scope: !18368, file: !18369, line: 64, type: !1342)
!18379 = !DILocation(line: 64, column: 39, scope: !18368)
!18380 = !DILocalVariable(name: "n_authors", arg: 6, scope: !18368, file: !18369, line: 64, type: !52)
!18381 = !DILocation(line: 64, column: 55, scope: !18368)
!18382 = !DILocation(line: 66, column: 7, scope: !18383)
!18383 = distinct !DILexicalBlock(scope: !18368, file: !18369, line: 66, column: 7)
!18384 = !DILocation(line: 66, column: 7, scope: !18368)
!18385 = !DILocation(line: 67, column: 14, scope: !18383)
!18386 = !DILocation(line: 67, column: 38, scope: !18383)
!18387 = !DILocation(line: 67, column: 52, scope: !18383)
!18388 = !DILocation(line: 67, column: 61, scope: !18383)
!18389 = !DILocation(line: 67, column: 5, scope: !18383)
!18390 = !DILocation(line: 69, column: 14, scope: !18383)
!18391 = !DILocation(line: 69, column: 33, scope: !18383)
!18392 = !DILocation(line: 69, column: 42, scope: !18383)
!18393 = !DILocation(line: 69, column: 5, scope: !18383)
!18394 = !DILocation(line: 83, column: 12, scope: !18368)
!18395 = !DILocation(line: 83, column: 43, scope: !18368)
!18396 = !DILocation(line: 83, column: 3, scope: !18368)
!18397 = !DILocation(line: 85, column: 3, scope: !18368)
!18398 = !DILocation(line: 88, column: 12, scope: !18368)
!18399 = !DILocation(line: 88, column: 20, scope: !18368)
!18400 = !DILocation(line: 88, column: 3, scope: !18368)
!18401 = !DILocation(line: 95, column: 3, scope: !18368)
!18402 = !DILocation(line: 97, column: 11, scope: !18368)
!18403 = !DILocation(line: 97, column: 3, scope: !18368)
!18404 = !DILocation(line: 102, column: 7, scope: !18405)
!18405 = distinct !DILexicalBlock(scope: !18368, file: !18369, line: 98, column: 5)
!18406 = !DILocation(line: 105, column: 16, scope: !18405)
!18407 = !DILocation(line: 105, column: 24, scope: !18405)
!18408 = !DILocation(line: 105, column: 47, scope: !18405)
!18409 = !DILocation(line: 105, column: 7, scope: !18405)
!18410 = !DILocation(line: 106, column: 7, scope: !18405)
!18411 = !DILocation(line: 109, column: 16, scope: !18405)
!18412 = !DILocation(line: 109, column: 24, scope: !18405)
!18413 = !DILocation(line: 109, column: 54, scope: !18405)
!18414 = !DILocation(line: 109, column: 66, scope: !18405)
!18415 = !DILocation(line: 109, column: 7, scope: !18405)
!18416 = !DILocation(line: 110, column: 7, scope: !18405)
!18417 = !DILocation(line: 113, column: 16, scope: !18405)
!18418 = !DILocation(line: 113, column: 24, scope: !18405)
!18419 = !DILocation(line: 114, column: 16, scope: !18405)
!18420 = !DILocation(line: 114, column: 28, scope: !18405)
!18421 = !DILocation(line: 114, column: 40, scope: !18405)
!18422 = !DILocation(line: 113, column: 7, scope: !18405)
!18423 = !DILocation(line: 115, column: 7, scope: !18405)
!18424 = !DILocation(line: 120, column: 16, scope: !18405)
!18425 = !DILocation(line: 120, column: 24, scope: !18405)
!18426 = !DILocation(line: 121, column: 16, scope: !18405)
!18427 = !DILocation(line: 121, column: 28, scope: !18405)
!18428 = !DILocation(line: 121, column: 40, scope: !18405)
!18429 = !DILocation(line: 121, column: 52, scope: !18405)
!18430 = !DILocation(line: 120, column: 7, scope: !18405)
!18431 = !DILocation(line: 122, column: 7, scope: !18405)
!18432 = !DILocation(line: 127, column: 16, scope: !18405)
!18433 = !DILocation(line: 127, column: 24, scope: !18405)
!18434 = !DILocation(line: 128, column: 16, scope: !18405)
!18435 = !DILocation(line: 128, column: 28, scope: !18405)
!18436 = !DILocation(line: 128, column: 40, scope: !18405)
!18437 = !DILocation(line: 128, column: 52, scope: !18405)
!18438 = !DILocation(line: 128, column: 64, scope: !18405)
!18439 = !DILocation(line: 127, column: 7, scope: !18405)
!18440 = !DILocation(line: 129, column: 7, scope: !18405)
!18441 = !DILocation(line: 134, column: 16, scope: !18405)
!18442 = !DILocation(line: 134, column: 24, scope: !18405)
!18443 = !DILocation(line: 135, column: 16, scope: !18405)
!18444 = !DILocation(line: 135, column: 28, scope: !18405)
!18445 = !DILocation(line: 135, column: 40, scope: !18405)
!18446 = !DILocation(line: 135, column: 52, scope: !18405)
!18447 = !DILocation(line: 135, column: 64, scope: !18405)
!18448 = !DILocation(line: 136, column: 16, scope: !18405)
!18449 = !DILocation(line: 134, column: 7, scope: !18405)
!18450 = !DILocation(line: 137, column: 7, scope: !18405)
!18451 = !DILocation(line: 142, column: 16, scope: !18405)
!18452 = !DILocation(line: 142, column: 24, scope: !18405)
!18453 = !DILocation(line: 143, column: 16, scope: !18405)
!18454 = !DILocation(line: 143, column: 28, scope: !18405)
!18455 = !DILocation(line: 143, column: 40, scope: !18405)
!18456 = !DILocation(line: 143, column: 52, scope: !18405)
!18457 = !DILocation(line: 143, column: 64, scope: !18405)
!18458 = !DILocation(line: 144, column: 16, scope: !18405)
!18459 = !DILocation(line: 144, column: 28, scope: !18405)
!18460 = !DILocation(line: 142, column: 7, scope: !18405)
!18461 = !DILocation(line: 145, column: 7, scope: !18405)
!18462 = !DILocation(line: 150, column: 16, scope: !18405)
!18463 = !DILocation(line: 150, column: 24, scope: !18405)
!18464 = !DILocation(line: 152, column: 17, scope: !18405)
!18465 = !DILocation(line: 152, column: 29, scope: !18405)
!18466 = !DILocation(line: 152, column: 41, scope: !18405)
!18467 = !DILocation(line: 152, column: 53, scope: !18405)
!18468 = !DILocation(line: 152, column: 65, scope: !18405)
!18469 = !DILocation(line: 153, column: 17, scope: !18405)
!18470 = !DILocation(line: 153, column: 29, scope: !18405)
!18471 = !DILocation(line: 153, column: 41, scope: !18405)
!18472 = !DILocation(line: 150, column: 7, scope: !18405)
!18473 = !DILocation(line: 154, column: 7, scope: !18405)
!18474 = !DILocation(line: 159, column: 16, scope: !18405)
!18475 = !DILocation(line: 159, column: 24, scope: !18405)
!18476 = !DILocation(line: 161, column: 16, scope: !18405)
!18477 = !DILocation(line: 161, column: 28, scope: !18405)
!18478 = !DILocation(line: 161, column: 40, scope: !18405)
!18479 = !DILocation(line: 161, column: 52, scope: !18405)
!18480 = !DILocation(line: 161, column: 64, scope: !18405)
!18481 = !DILocation(line: 162, column: 16, scope: !18405)
!18482 = !DILocation(line: 162, column: 28, scope: !18405)
!18483 = !DILocation(line: 162, column: 40, scope: !18405)
!18484 = !DILocation(line: 162, column: 52, scope: !18405)
!18485 = !DILocation(line: 159, column: 7, scope: !18405)
!18486 = !DILocation(line: 163, column: 7, scope: !18405)
!18487 = !DILocation(line: 170, column: 16, scope: !18405)
!18488 = !DILocation(line: 170, column: 24, scope: !18405)
!18489 = !DILocation(line: 172, column: 17, scope: !18405)
!18490 = !DILocation(line: 172, column: 29, scope: !18405)
!18491 = !DILocation(line: 172, column: 41, scope: !18405)
!18492 = !DILocation(line: 172, column: 53, scope: !18405)
!18493 = !DILocation(line: 172, column: 65, scope: !18405)
!18494 = !DILocation(line: 173, column: 17, scope: !18405)
!18495 = !DILocation(line: 173, column: 29, scope: !18405)
!18496 = !DILocation(line: 173, column: 41, scope: !18405)
!18497 = !DILocation(line: 173, column: 53, scope: !18405)
!18498 = !DILocation(line: 170, column: 7, scope: !18405)
!18499 = !DILocation(line: 174, column: 7, scope: !18405)
!18500 = !DILocation(line: 176, column: 1, scope: !18368)
!18501 = distinct !DISubprogram(name: "version_etc_ar", scope: !18369, file: !18369, line: 183, type: !1999, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1953, retainedNodes: !206)
!18502 = !DILocalVariable(name: "stream", arg: 1, scope: !18501, file: !18369, line: 183, type: !1958)
!18503 = !DILocation(line: 183, column: 23, scope: !18501)
!18504 = !DILocalVariable(name: "command_name", arg: 2, scope: !18501, file: !18369, line: 184, type: !177)
!18505 = !DILocation(line: 184, column: 29, scope: !18501)
!18506 = !DILocalVariable(name: "package", arg: 3, scope: !18501, file: !18369, line: 184, type: !177)
!18507 = !DILocation(line: 184, column: 55, scope: !18501)
!18508 = !DILocalVariable(name: "version", arg: 4, scope: !18501, file: !18369, line: 185, type: !177)
!18509 = !DILocation(line: 185, column: 29, scope: !18501)
!18510 = !DILocalVariable(name: "authors", arg: 5, scope: !18501, file: !18369, line: 185, type: !1342)
!18511 = !DILocation(line: 185, column: 59, scope: !18501)
!18512 = !DILocalVariable(name: "n_authors", scope: !18501, file: !18369, line: 187, type: !52)
!18513 = !DILocation(line: 187, column: 10, scope: !18501)
!18514 = !DILocation(line: 189, column: 18, scope: !18515)
!18515 = distinct !DILexicalBlock(scope: !18501, file: !18369, line: 189, column: 3)
!18516 = !DILocation(line: 189, column: 8, scope: !18515)
!18517 = !DILocation(line: 189, column: 23, scope: !18518)
!18518 = distinct !DILexicalBlock(scope: !18515, file: !18369, line: 189, column: 3)
!18519 = !DILocation(line: 189, column: 31, scope: !18518)
!18520 = !DILocation(line: 189, column: 3, scope: !18515)
!18521 = !DILocation(line: 189, column: 52, scope: !18518)
!18522 = !DILocation(line: 189, column: 3, scope: !18518)
!18523 = distinct !{!18523, !18520, !18524}
!18524 = !DILocation(line: 190, column: 5, scope: !18515)
!18525 = !DILocation(line: 191, column: 20, scope: !18501)
!18526 = !DILocation(line: 191, column: 28, scope: !18501)
!18527 = !DILocation(line: 191, column: 42, scope: !18501)
!18528 = !DILocation(line: 191, column: 51, scope: !18501)
!18529 = !DILocation(line: 191, column: 60, scope: !18501)
!18530 = !DILocation(line: 191, column: 69, scope: !18501)
!18531 = !DILocation(line: 191, column: 3, scope: !18501)
!18532 = !DILocation(line: 192, column: 1, scope: !18501)
!18533 = distinct !DISubprogram(name: "version_etc_va", scope: !18369, file: !18369, line: 199, type: !2001, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1953, retainedNodes: !206)
!18534 = !DILocalVariable(name: "stream", arg: 1, scope: !18533, file: !18369, line: 199, type: !1958)
!18535 = !DILocation(line: 199, column: 23, scope: !18533)
!18536 = !DILocalVariable(name: "command_name", arg: 2, scope: !18533, file: !18369, line: 200, type: !177)
!18537 = !DILocation(line: 200, column: 29, scope: !18533)
!18538 = !DILocalVariable(name: "package", arg: 3, scope: !18533, file: !18369, line: 200, type: !177)
!18539 = !DILocation(line: 200, column: 55, scope: !18533)
!18540 = !DILocalVariable(name: "version", arg: 4, scope: !18533, file: !18369, line: 201, type: !177)
!18541 = !DILocation(line: 201, column: 29, scope: !18533)
!18542 = !DILocalVariable(name: "authors", arg: 5, scope: !18533, file: !18369, line: 201, type: !2003)
!18543 = !DILocation(line: 201, column: 46, scope: !18533)
!18544 = !DILocalVariable(name: "n_authors", scope: !18533, file: !18369, line: 203, type: !52)
!18545 = !DILocation(line: 203, column: 10, scope: !18533)
!18546 = !DILocalVariable(name: "authtab", scope: !18533, file: !18369, line: 204, type: !2010)
!18547 = !DILocation(line: 204, column: 15, scope: !18533)
!18548 = !DILocation(line: 206, column: 18, scope: !18549)
!18549 = distinct !DILexicalBlock(scope: !18533, file: !18369, line: 206, column: 3)
!18550 = !DILocation(line: 206, column: 8, scope: !18549)
!18551 = !DILocation(line: 207, column: 8, scope: !18552)
!18552 = distinct !DILexicalBlock(scope: !18549, file: !18369, line: 206, column: 3)
!18553 = !DILocation(line: 207, column: 18, scope: !18552)
!18554 = !DILocation(line: 208, column: 10, scope: !18552)
!18555 = !DILocation(line: 208, column: 35, scope: !18552)
!18556 = !DILocation(line: 208, column: 22, scope: !18552)
!18557 = !DILocation(line: 208, column: 14, scope: !18552)
!18558 = !DILocation(line: 208, column: 33, scope: !18552)
!18559 = !DILocation(line: 208, column: 67, scope: !18552)
!18560 = !DILocation(line: 0, scope: !18552)
!18561 = !DILocation(line: 206, column: 3, scope: !18549)
!18562 = !DILocation(line: 209, column: 17, scope: !18552)
!18563 = !DILocation(line: 206, column: 3, scope: !18552)
!18564 = distinct !{!18564, !18561, !18565}
!18565 = !DILocation(line: 210, column: 5, scope: !18549)
!18566 = !DILocation(line: 211, column: 20, scope: !18533)
!18567 = !DILocation(line: 211, column: 28, scope: !18533)
!18568 = !DILocation(line: 211, column: 42, scope: !18533)
!18569 = !DILocation(line: 211, column: 51, scope: !18533)
!18570 = !DILocation(line: 212, column: 20, scope: !18533)
!18571 = !DILocation(line: 212, column: 29, scope: !18533)
!18572 = !DILocation(line: 211, column: 3, scope: !18533)
!18573 = !DILocation(line: 213, column: 1, scope: !18533)
!18574 = distinct !DISubprogram(name: "version_etc", scope: !18369, file: !18369, line: 230, type: !18575, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1953, retainedNodes: !206)
!18575 = !DISubroutineType(types: !18576)
!18576 = !{null, !1958, !177, !177, !177, null}
!18577 = !DILocalVariable(name: "stream", arg: 1, scope: !18574, file: !18369, line: 230, type: !1958)
!18578 = !DILocation(line: 230, column: 20, scope: !18574)
!18579 = !DILocalVariable(name: "command_name", arg: 2, scope: !18574, file: !18369, line: 231, type: !177)
!18580 = !DILocation(line: 231, column: 26, scope: !18574)
!18581 = !DILocalVariable(name: "package", arg: 3, scope: !18574, file: !18369, line: 231, type: !177)
!18582 = !DILocation(line: 231, column: 52, scope: !18574)
!18583 = !DILocalVariable(name: "version", arg: 4, scope: !18574, file: !18369, line: 232, type: !177)
!18584 = !DILocation(line: 232, column: 26, scope: !18574)
!18585 = !DILocalVariable(name: "authors", scope: !18574, file: !18369, line: 234, type: !2013)
!18586 = !DILocation(line: 234, column: 11, scope: !18574)
!18587 = !DILocation(line: 236, column: 3, scope: !18574)
!18588 = !DILocation(line: 237, column: 19, scope: !18574)
!18589 = !DILocation(line: 237, column: 27, scope: !18574)
!18590 = !DILocation(line: 237, column: 41, scope: !18574)
!18591 = !DILocation(line: 237, column: 50, scope: !18574)
!18592 = !DILocation(line: 237, column: 59, scope: !18574)
!18593 = !DILocation(line: 237, column: 3, scope: !18574)
!18594 = !DILocation(line: 238, column: 3, scope: !18574)
!18595 = !DILocation(line: 239, column: 1, scope: !18574)
!18596 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !18369, file: !18369, line: 242, type: !197, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1953, retainedNodes: !206)
!18597 = !DILocation(line: 244, column: 3, scope: !18596)
!18598 = !DILocation(line: 249, column: 11, scope: !18596)
!18599 = !DILocation(line: 249, column: 3, scope: !18596)
!18600 = !DILocation(line: 255, column: 11, scope: !18596)
!18601 = !DILocation(line: 255, column: 3, scope: !18596)
!18602 = !DILocation(line: 260, column: 11, scope: !18596)
!18603 = !DILocation(line: 260, column: 3, scope: !18596)
!18604 = !DILocation(line: 262, column: 1, scope: !18596)
!18605 = !DILocation(line: 37, column: 9, scope: !18606)
!18606 = distinct !DILexicalBlock(scope: !1325, file: !1326, line: 37, column: 7)
!18607 = !DILocation(line: 37, column: 7, scope: !1325)
!18608 = !DILocalVariable(name: "can", scope: !18609, file: !1326, line: 39, type: !139)
!18609 = distinct !DILexicalBlock(scope: !18606, file: !1326, line: 38, column: 5)
!18610 = !DILocation(line: 39, column: 12, scope: !18609)
!18611 = !DILocation(line: 44, column: 14, scope: !18609)
!18612 = !DILocation(line: 44, column: 25, scope: !18609)
!18613 = !DILocation(line: 44, column: 11, scope: !18609)
!18614 = !DILocation(line: 46, column: 19, scope: !18609)
!18615 = !DILocation(line: 46, column: 17, scope: !18609)
!18616 = !DILocation(line: 47, column: 19, scope: !18609)
!18617 = !DILocation(line: 48, column: 5, scope: !18609)
!18618 = !DILocation(line: 50, column: 10, scope: !1325)
!18619 = !DILocation(line: 50, column: 3, scope: !1325)
!18620 = distinct !DISubprogram(name: "xnmalloc", scope: !18621, file: !18621, line: 99, type: !2020, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18621 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mohamad/clone/coreutils")
!18622 = !DILocalVariable(name: "n", arg: 1, scope: !18620, file: !18621, line: 99, type: !52)
!18623 = !DILocation(line: 99, column: 18, scope: !18620)
!18624 = !DILocalVariable(name: "s", arg: 2, scope: !18620, file: !18621, line: 99, type: !52)
!18625 = !DILocation(line: 99, column: 28, scope: !18620)
!18626 = !DILocation(line: 101, column: 7, scope: !18627)
!18627 = distinct !DILexicalBlock(scope: !18620, file: !18621, line: 101, column: 7)
!18628 = !DILocation(line: 101, column: 7, scope: !18620)
!18629 = !DILocation(line: 102, column: 5, scope: !18627)
!18630 = !DILocation(line: 103, column: 19, scope: !18620)
!18631 = !DILocation(line: 103, column: 23, scope: !18620)
!18632 = !DILocation(line: 103, column: 21, scope: !18620)
!18633 = !DILocation(line: 103, column: 10, scope: !18620)
!18634 = !DILocation(line: 103, column: 3, scope: !18620)
!18635 = distinct !DISubprogram(name: "xmalloc", scope: !18636, file: !18636, line: 39, type: !2028, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18636 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mohamad/clone/coreutils")
!18637 = !DILocalVariable(name: "n", arg: 1, scope: !18635, file: !18636, line: 39, type: !52)
!18638 = !DILocation(line: 39, column: 17, scope: !18635)
!18639 = !DILocalVariable(name: "p", scope: !18635, file: !18636, line: 41, type: !47)
!18640 = !DILocation(line: 41, column: 9, scope: !18635)
!18641 = !DILocation(line: 41, column: 21, scope: !18635)
!18642 = !DILocation(line: 41, column: 13, scope: !18635)
!18643 = !DILocation(line: 42, column: 8, scope: !18644)
!18644 = distinct !DILexicalBlock(scope: !18635, file: !18636, line: 42, column: 7)
!18645 = !DILocation(line: 42, column: 10, scope: !18644)
!18646 = !DILocation(line: 42, column: 13, scope: !18644)
!18647 = !DILocation(line: 42, column: 15, scope: !18644)
!18648 = !DILocation(line: 42, column: 7, scope: !18635)
!18649 = !DILocation(line: 43, column: 5, scope: !18644)
!18650 = !DILocation(line: 44, column: 10, scope: !18635)
!18651 = !DILocation(line: 44, column: 3, scope: !18635)
!18652 = distinct !DISubprogram(name: "xnrealloc", scope: !18621, file: !18621, line: 112, type: !2022, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18653 = !DILocalVariable(name: "p", arg: 1, scope: !18652, file: !18621, line: 112, type: !47)
!18654 = !DILocation(line: 112, column: 18, scope: !18652)
!18655 = !DILocalVariable(name: "n", arg: 2, scope: !18652, file: !18621, line: 112, type: !52)
!18656 = !DILocation(line: 112, column: 28, scope: !18652)
!18657 = !DILocalVariable(name: "s", arg: 3, scope: !18652, file: !18621, line: 112, type: !52)
!18658 = !DILocation(line: 112, column: 38, scope: !18652)
!18659 = !DILocation(line: 114, column: 7, scope: !18660)
!18660 = distinct !DILexicalBlock(scope: !18652, file: !18621, line: 114, column: 7)
!18661 = !DILocation(line: 114, column: 7, scope: !18652)
!18662 = !DILocation(line: 115, column: 5, scope: !18660)
!18663 = !DILocation(line: 116, column: 20, scope: !18652)
!18664 = !DILocation(line: 116, column: 23, scope: !18652)
!18665 = !DILocation(line: 116, column: 27, scope: !18652)
!18666 = !DILocation(line: 116, column: 25, scope: !18652)
!18667 = !DILocation(line: 116, column: 10, scope: !18652)
!18668 = !DILocation(line: 116, column: 3, scope: !18652)
!18669 = distinct !DISubprogram(name: "xrealloc", scope: !18636, file: !18636, line: 51, type: !2030, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18670 = !DILocalVariable(name: "p", arg: 1, scope: !18669, file: !18636, line: 51, type: !47)
!18671 = !DILocation(line: 51, column: 17, scope: !18669)
!18672 = !DILocalVariable(name: "n", arg: 2, scope: !18669, file: !18636, line: 51, type: !52)
!18673 = !DILocation(line: 51, column: 27, scope: !18669)
!18674 = !DILocation(line: 53, column: 8, scope: !18675)
!18675 = distinct !DILexicalBlock(scope: !18669, file: !18636, line: 53, column: 7)
!18676 = !DILocation(line: 53, column: 10, scope: !18675)
!18677 = !DILocation(line: 53, column: 13, scope: !18675)
!18678 = !DILocation(line: 53, column: 7, scope: !18669)
!18679 = !DILocation(line: 57, column: 13, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !18675, file: !18636, line: 54, column: 5)
!18681 = !DILocation(line: 57, column: 7, scope: !18680)
!18682 = !DILocation(line: 58, column: 7, scope: !18680)
!18683 = !DILocation(line: 61, column: 16, scope: !18669)
!18684 = !DILocation(line: 61, column: 19, scope: !18669)
!18685 = !DILocation(line: 61, column: 7, scope: !18669)
!18686 = !DILocation(line: 61, column: 5, scope: !18669)
!18687 = !DILocation(line: 62, column: 8, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18669, file: !18636, line: 62, column: 7)
!18689 = !DILocation(line: 62, column: 10, scope: !18688)
!18690 = !DILocation(line: 62, column: 13, scope: !18688)
!18691 = !DILocation(line: 62, column: 7, scope: !18669)
!18692 = !DILocation(line: 63, column: 5, scope: !18688)
!18693 = !DILocation(line: 64, column: 10, scope: !18669)
!18694 = !DILocation(line: 64, column: 3, scope: !18669)
!18695 = !DILocation(line: 65, column: 1, scope: !18669)
!18696 = distinct !DISubprogram(name: "x2nrealloc", scope: !18621, file: !18621, line: 174, type: !2024, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18697 = !DILocalVariable(name: "p", arg: 1, scope: !18696, file: !18621, line: 174, type: !47)
!18698 = !DILocation(line: 174, column: 19, scope: !18696)
!18699 = !DILocalVariable(name: "pn", arg: 2, scope: !18696, file: !18621, line: 174, type: !694)
!18700 = !DILocation(line: 174, column: 30, scope: !18696)
!18701 = !DILocalVariable(name: "s", arg: 3, scope: !18696, file: !18621, line: 174, type: !52)
!18702 = !DILocation(line: 174, column: 41, scope: !18696)
!18703 = !DILocalVariable(name: "n", scope: !18696, file: !18621, line: 176, type: !52)
!18704 = !DILocation(line: 176, column: 10, scope: !18696)
!18705 = !DILocation(line: 176, column: 15, scope: !18696)
!18706 = !DILocation(line: 176, column: 14, scope: !18696)
!18707 = !DILocation(line: 178, column: 9, scope: !18708)
!18708 = distinct !DILexicalBlock(scope: !18696, file: !18621, line: 178, column: 7)
!18709 = !DILocation(line: 178, column: 7, scope: !18696)
!18710 = !DILocation(line: 180, column: 13, scope: !18711)
!18711 = distinct !DILexicalBlock(scope: !18712, file: !18621, line: 180, column: 11)
!18712 = distinct !DILexicalBlock(scope: !18708, file: !18621, line: 179, column: 5)
!18713 = !DILocation(line: 180, column: 11, scope: !18712)
!18714 = !DILocation(line: 188, column: 32, scope: !18715)
!18715 = distinct !DILexicalBlock(scope: !18711, file: !18621, line: 181, column: 9)
!18716 = !DILocation(line: 188, column: 30, scope: !18715)
!18717 = !DILocation(line: 188, column: 13, scope: !18715)
!18718 = !DILocation(line: 189, column: 17, scope: !18715)
!18719 = !DILocation(line: 189, column: 16, scope: !18715)
!18720 = !DILocation(line: 189, column: 13, scope: !18715)
!18721 = !DILocation(line: 190, column: 9, scope: !18715)
!18722 = !DILocation(line: 191, column: 11, scope: !18723)
!18723 = distinct !DILexicalBlock(scope: !18712, file: !18621, line: 191, column: 11)
!18724 = !DILocation(line: 191, column: 11, scope: !18712)
!18725 = !DILocation(line: 192, column: 9, scope: !18723)
!18726 = !DILocation(line: 193, column: 5, scope: !18712)
!18727 = !DILocation(line: 200, column: 71, scope: !18728)
!18728 = distinct !DILexicalBlock(scope: !18729, file: !18621, line: 200, column: 11)
!18729 = distinct !DILexicalBlock(scope: !18708, file: !18621, line: 195, column: 5)
!18730 = !DILocation(line: 200, column: 69, scope: !18728)
!18731 = !DILocation(line: 201, column: 14, scope: !18728)
!18732 = !DILocation(line: 201, column: 11, scope: !18728)
!18733 = !DILocation(line: 200, column: 11, scope: !18729)
!18734 = !DILocation(line: 202, column: 9, scope: !18728)
!18735 = !DILocation(line: 203, column: 12, scope: !18729)
!18736 = !DILocation(line: 203, column: 14, scope: !18729)
!18737 = !DILocation(line: 203, column: 18, scope: !18729)
!18738 = !DILocation(line: 203, column: 9, scope: !18729)
!18739 = !DILocation(line: 206, column: 9, scope: !18696)
!18740 = !DILocation(line: 206, column: 4, scope: !18696)
!18741 = !DILocation(line: 206, column: 7, scope: !18696)
!18742 = !DILocation(line: 207, column: 20, scope: !18696)
!18743 = !DILocation(line: 207, column: 23, scope: !18696)
!18744 = !DILocation(line: 207, column: 27, scope: !18696)
!18745 = !DILocation(line: 207, column: 25, scope: !18696)
!18746 = !DILocation(line: 207, column: 10, scope: !18696)
!18747 = !DILocation(line: 207, column: 3, scope: !18696)
!18748 = distinct !DISubprogram(name: "xcharalloc", scope: !18621, file: !18621, line: 216, type: !2026, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18749 = !DILocalVariable(name: "n", arg: 1, scope: !18748, file: !18621, line: 216, type: !52)
!18750 = !DILocation(line: 216, column: 20, scope: !18748)
!18751 = !DILocation(line: 218, column: 10, scope: !18748)
!18752 = !DILocation(line: 218, column: 3, scope: !18748)
!18753 = distinct !DISubprogram(name: "x2realloc", scope: !18636, file: !18636, line: 74, type: !2032, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18754 = !DILocalVariable(name: "p", arg: 1, scope: !18753, file: !18636, line: 74, type: !47)
!18755 = !DILocation(line: 74, column: 18, scope: !18753)
!18756 = !DILocalVariable(name: "pn", arg: 2, scope: !18753, file: !18636, line: 74, type: !694)
!18757 = !DILocation(line: 74, column: 29, scope: !18753)
!18758 = !DILocation(line: 76, column: 22, scope: !18753)
!18759 = !DILocation(line: 76, column: 25, scope: !18753)
!18760 = !DILocation(line: 76, column: 10, scope: !18753)
!18761 = !DILocation(line: 76, column: 3, scope: !18753)
!18762 = distinct !DISubprogram(name: "xzalloc", scope: !18636, file: !18636, line: 84, type: !2028, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18763 = !DILocalVariable(name: "s", arg: 1, scope: !18762, file: !18636, line: 84, type: !52)
!18764 = !DILocation(line: 84, column: 17, scope: !18762)
!18765 = !DILocation(line: 86, column: 27, scope: !18762)
!18766 = !DILocation(line: 86, column: 18, scope: !18762)
!18767 = !DILocation(line: 86, column: 34, scope: !18762)
!18768 = !DILocation(line: 86, column: 10, scope: !18762)
!18769 = !DILocation(line: 86, column: 3, scope: !18762)
!18770 = distinct !DISubprogram(name: "xcalloc", scope: !18636, file: !18636, line: 93, type: !2020, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18771 = !DILocalVariable(name: "n", arg: 1, scope: !18770, file: !18636, line: 93, type: !52)
!18772 = !DILocation(line: 93, column: 17, scope: !18770)
!18773 = !DILocalVariable(name: "s", arg: 2, scope: !18770, file: !18636, line: 93, type: !52)
!18774 = !DILocation(line: 93, column: 27, scope: !18770)
!18775 = !DILocalVariable(name: "p", scope: !18770, file: !18636, line: 95, type: !47)
!18776 = !DILocation(line: 95, column: 9, scope: !18770)
!18777 = !DILocation(line: 100, column: 7, scope: !18778)
!18778 = distinct !DILexicalBlock(scope: !18770, file: !18636, line: 100, column: 7)
!18779 = !DILocation(line: 101, column: 7, scope: !18778)
!18780 = !DILocation(line: 101, column: 26, scope: !18778)
!18781 = !DILocation(line: 101, column: 29, scope: !18778)
!18782 = !DILocation(line: 101, column: 18, scope: !18778)
!18783 = !DILocation(line: 101, column: 16, scope: !18778)
!18784 = !DILocation(line: 100, column: 7, scope: !18770)
!18785 = !DILocation(line: 102, column: 5, scope: !18778)
!18786 = !DILocation(line: 103, column: 10, scope: !18770)
!18787 = !DILocation(line: 103, column: 3, scope: !18770)
!18788 = distinct !DISubprogram(name: "xmemdup", scope: !18636, file: !18636, line: 111, type: !523, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18789 = !DILocalVariable(name: "p", arg: 1, scope: !18788, file: !18636, line: 111, type: !525)
!18790 = !DILocation(line: 111, column: 22, scope: !18788)
!18791 = !DILocalVariable(name: "s", arg: 2, scope: !18788, file: !18636, line: 111, type: !52)
!18792 = !DILocation(line: 111, column: 32, scope: !18788)
!18793 = !DILocation(line: 113, column: 27, scope: !18788)
!18794 = !DILocation(line: 113, column: 18, scope: !18788)
!18795 = !DILocation(line: 113, column: 31, scope: !18788)
!18796 = !DILocation(line: 113, column: 34, scope: !18788)
!18797 = !DILocation(line: 113, column: 10, scope: !18788)
!18798 = !DILocation(line: 113, column: 3, scope: !18788)
!18799 = distinct !DISubprogram(name: "xstrdup", scope: !18636, file: !18636, line: 119, type: !215, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2017, retainedNodes: !206)
!18800 = !DILocalVariable(name: "string", arg: 1, scope: !18799, file: !18636, line: 119, type: !177)
!18801 = !DILocation(line: 119, column: 22, scope: !18799)
!18802 = !DILocation(line: 121, column: 19, scope: !18799)
!18803 = !DILocation(line: 121, column: 35, scope: !18799)
!18804 = !DILocation(line: 121, column: 27, scope: !18799)
!18805 = !DILocation(line: 121, column: 43, scope: !18799)
!18806 = !DILocation(line: 121, column: 10, scope: !18799)
!18807 = !DILocation(line: 121, column: 3, scope: !18799)
!18808 = distinct !DISubprogram(name: "xalloc_die", scope: !18809, file: !18809, line: 32, type: !197, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2034, retainedNodes: !206)
!18809 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mohamad/clone/coreutils")
!18810 = !DILocation(line: 34, column: 10, scope: !18808)
!18811 = !DILocation(line: 34, column: 33, scope: !18808)
!18812 = !DILocation(line: 34, column: 3, scope: !18808)
!18813 = !DILocation(line: 40, column: 3, scope: !18808)
!18814 = distinct !DISubprogram(name: "xstrtoul", scope: !18815, file: !18815, line: 76, type: !2049, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2037, retainedNodes: !206)
!18815 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mohamad/clone/coreutils")
!18816 = !DILocalVariable(name: "s", arg: 1, scope: !18814, file: !18815, line: 76, type: !177)
!18817 = !DILocation(line: 76, column: 24, scope: !18814)
!18818 = !DILocalVariable(name: "ptr", arg: 2, scope: !18814, file: !18815, line: 76, type: !181)
!18819 = !DILocation(line: 76, column: 34, scope: !18814)
!18820 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !18814, file: !18815, line: 76, type: !5)
!18821 = !DILocation(line: 76, column: 43, scope: !18814)
!18822 = !DILocalVariable(name: "val", arg: 4, scope: !18814, file: !18815, line: 77, type: !2052)
!18823 = !DILocation(line: 77, column: 24, scope: !18814)
!18824 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !18814, file: !18815, line: 77, type: !177)
!18825 = !DILocation(line: 77, column: 41, scope: !18814)
!18826 = !DILocalVariable(name: "t_ptr", scope: !18814, file: !18815, line: 79, type: !7)
!18827 = !DILocation(line: 79, column: 9, scope: !18814)
!18828 = !DILocalVariable(name: "p", scope: !18814, file: !18815, line: 80, type: !181)
!18829 = !DILocation(line: 80, column: 10, scope: !18814)
!18830 = !DILocalVariable(name: "tmp", scope: !18814, file: !18815, line: 81, type: !54)
!18831 = !DILocation(line: 81, column: 14, scope: !18814)
!18832 = !DILocalVariable(name: "err", scope: !18814, file: !18815, line: 82, type: !2051)
!18833 = !DILocation(line: 82, column: 16, scope: !18814)
!18834 = !DILocation(line: 84, column: 3, scope: !18814)
!18835 = !DILocation(line: 86, column: 8, scope: !18814)
!18836 = !DILocation(line: 86, column: 14, scope: !18814)
!18837 = !DILocation(line: 86, column: 5, scope: !18814)
!18838 = !DILocation(line: 88, column: 3, scope: !18814)
!18839 = !DILocation(line: 88, column: 9, scope: !18814)
!18840 = !DILocalVariable(name: "q", scope: !18841, file: !18815, line: 92, type: !177)
!18841 = distinct !DILexicalBlock(scope: !18842, file: !18815, line: 91, column: 5)
!18842 = distinct !DILexicalBlock(scope: !18814, file: !18815, line: 90, column: 7)
!18843 = !DILocation(line: 92, column: 19, scope: !18841)
!18844 = !DILocation(line: 92, column: 23, scope: !18841)
!18845 = !DILocalVariable(name: "ch", scope: !18841, file: !18815, line: 93, type: !565)
!18846 = !DILocation(line: 93, column: 21, scope: !18841)
!18847 = !DILocation(line: 93, column: 27, scope: !18841)
!18848 = !DILocation(line: 93, column: 26, scope: !18841)
!18849 = !DILocation(line: 94, column: 7, scope: !18841)
!18850 = !DILocation(line: 94, column: 14, scope: !18841)
!18851 = !DILocation(line: 95, column: 15, scope: !18841)
!18852 = !DILocation(line: 95, column: 14, scope: !18841)
!18853 = !DILocation(line: 95, column: 12, scope: !18841)
!18854 = distinct !{!18854, !18849, !18855}
!18855 = !DILocation(line: 95, column: 17, scope: !18841)
!18856 = !DILocation(line: 96, column: 11, scope: !18857)
!18857 = distinct !DILexicalBlock(scope: !18841, file: !18815, line: 96, column: 11)
!18858 = !DILocation(line: 96, column: 14, scope: !18857)
!18859 = !DILocation(line: 96, column: 11, scope: !18841)
!18860 = !DILocation(line: 97, column: 9, scope: !18857)
!18861 = !DILocation(line: 100, column: 19, scope: !18814)
!18862 = !DILocation(line: 100, column: 22, scope: !18814)
!18863 = !DILocation(line: 100, column: 25, scope: !18814)
!18864 = !DILocation(line: 100, column: 9, scope: !18814)
!18865 = !DILocation(line: 100, column: 7, scope: !18814)
!18866 = !DILocation(line: 102, column: 8, scope: !18867)
!18867 = distinct !DILexicalBlock(scope: !18814, file: !18815, line: 102, column: 7)
!18868 = !DILocation(line: 102, column: 7, scope: !18867)
!18869 = !DILocation(line: 102, column: 13, scope: !18867)
!18870 = !DILocation(line: 102, column: 10, scope: !18867)
!18871 = !DILocation(line: 102, column: 7, scope: !18814)
!18872 = !DILocation(line: 106, column: 11, scope: !18873)
!18873 = distinct !DILexicalBlock(scope: !18874, file: !18815, line: 106, column: 11)
!18874 = distinct !DILexicalBlock(scope: !18867, file: !18815, line: 103, column: 5)
!18875 = !DILocation(line: 106, column: 26, scope: !18873)
!18876 = !DILocation(line: 106, column: 31, scope: !18873)
!18877 = !DILocation(line: 106, column: 30, scope: !18873)
!18878 = !DILocation(line: 106, column: 29, scope: !18873)
!18879 = !DILocation(line: 106, column: 33, scope: !18873)
!18880 = !DILocation(line: 106, column: 44, scope: !18873)
!18881 = !DILocation(line: 106, column: 62, scope: !18873)
!18882 = !DILocation(line: 106, column: 61, scope: !18873)
!18883 = !DILocation(line: 106, column: 60, scope: !18873)
!18884 = !DILocation(line: 106, column: 36, scope: !18873)
!18885 = !DILocation(line: 106, column: 11, scope: !18874)
!18886 = !DILocation(line: 107, column: 13, scope: !18873)
!18887 = !DILocation(line: 107, column: 9, scope: !18873)
!18888 = !DILocation(line: 109, column: 9, scope: !18873)
!18889 = !DILocation(line: 110, column: 5, scope: !18874)
!18890 = !DILocation(line: 111, column: 12, scope: !18891)
!18891 = distinct !DILexicalBlock(scope: !18867, file: !18815, line: 111, column: 12)
!18892 = !DILocation(line: 111, column: 18, scope: !18891)
!18893 = !DILocation(line: 111, column: 12, scope: !18867)
!18894 = !DILocation(line: 113, column: 11, scope: !18895)
!18895 = distinct !DILexicalBlock(scope: !18896, file: !18815, line: 113, column: 11)
!18896 = distinct !DILexicalBlock(scope: !18891, file: !18815, line: 112, column: 5)
!18897 = !DILocation(line: 113, column: 17, scope: !18895)
!18898 = !DILocation(line: 113, column: 11, scope: !18896)
!18899 = !DILocation(line: 114, column: 9, scope: !18895)
!18900 = !DILocation(line: 115, column: 11, scope: !18896)
!18901 = !DILocation(line: 116, column: 5, scope: !18896)
!18902 = !DILocation(line: 121, column: 8, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18814, file: !18815, line: 121, column: 7)
!18904 = !DILocation(line: 121, column: 7, scope: !18814)
!18905 = !DILocation(line: 123, column: 14, scope: !18906)
!18906 = distinct !DILexicalBlock(scope: !18903, file: !18815, line: 122, column: 5)
!18907 = !DILocation(line: 123, column: 8, scope: !18906)
!18908 = !DILocation(line: 123, column: 12, scope: !18906)
!18909 = !DILocation(line: 124, column: 14, scope: !18906)
!18910 = !DILocation(line: 124, column: 7, scope: !18906)
!18911 = !DILocation(line: 127, column: 9, scope: !18912)
!18912 = distinct !DILexicalBlock(scope: !18814, file: !18815, line: 127, column: 7)
!18913 = !DILocation(line: 127, column: 8, scope: !18912)
!18914 = !DILocation(line: 127, column: 7, scope: !18912)
!18915 = !DILocation(line: 127, column: 11, scope: !18912)
!18916 = !DILocation(line: 127, column: 7, scope: !18814)
!18917 = !DILocalVariable(name: "base", scope: !18918, file: !18815, line: 129, type: !5)
!18918 = distinct !DILexicalBlock(scope: !18912, file: !18815, line: 128, column: 5)
!18919 = !DILocation(line: 129, column: 11, scope: !18918)
!18920 = !DILocalVariable(name: "suffixes", scope: !18918, file: !18815, line: 130, type: !5)
!18921 = !DILocation(line: 130, column: 11, scope: !18918)
!18922 = !DILocalVariable(name: "overflow", scope: !18918, file: !18815, line: 131, type: !2051)
!18923 = !DILocation(line: 131, column: 20, scope: !18918)
!18924 = !DILocation(line: 133, column: 20, scope: !18925)
!18925 = distinct !DILexicalBlock(scope: !18918, file: !18815, line: 133, column: 11)
!18926 = !DILocation(line: 133, column: 38, scope: !18925)
!18927 = !DILocation(line: 133, column: 37, scope: !18925)
!18928 = !DILocation(line: 133, column: 36, scope: !18925)
!18929 = !DILocation(line: 133, column: 12, scope: !18925)
!18930 = !DILocation(line: 133, column: 11, scope: !18918)
!18931 = !DILocation(line: 135, column: 18, scope: !18932)
!18932 = distinct !DILexicalBlock(scope: !18925, file: !18815, line: 134, column: 9)
!18933 = !DILocation(line: 135, column: 12, scope: !18932)
!18934 = !DILocation(line: 135, column: 16, scope: !18932)
!18935 = !DILocation(line: 136, column: 18, scope: !18932)
!18936 = !DILocation(line: 136, column: 22, scope: !18932)
!18937 = !DILocation(line: 136, column: 11, scope: !18932)
!18938 = !DILocation(line: 139, column: 17, scope: !18918)
!18939 = !DILocation(line: 139, column: 16, scope: !18918)
!18940 = !DILocation(line: 139, column: 15, scope: !18918)
!18941 = !DILocation(line: 139, column: 7, scope: !18918)
!18942 = !DILocation(line: 151, column: 23, scope: !18943)
!18943 = distinct !DILexicalBlock(scope: !18944, file: !18815, line: 151, column: 15)
!18944 = distinct !DILexicalBlock(scope: !18918, file: !18815, line: 140, column: 9)
!18945 = !DILocation(line: 151, column: 15, scope: !18943)
!18946 = !DILocation(line: 151, column: 15, scope: !18944)
!18947 = !DILocation(line: 152, column: 21, scope: !18943)
!18948 = !DILocation(line: 152, column: 13, scope: !18943)
!18949 = !DILocation(line: 155, column: 21, scope: !18950)
!18950 = distinct !DILexicalBlock(scope: !18951, file: !18815, line: 155, column: 21)
!18951 = distinct !DILexicalBlock(scope: !18943, file: !18815, line: 153, column: 15)
!18952 = !DILocation(line: 155, column: 29, scope: !18950)
!18953 = !DILocation(line: 155, column: 21, scope: !18951)
!18954 = !DILocation(line: 156, column: 28, scope: !18950)
!18955 = !DILocation(line: 156, column: 19, scope: !18950)
!18956 = !DILocation(line: 157, column: 17, scope: !18951)
!18957 = !DILocation(line: 161, column: 22, scope: !18951)
!18958 = !DILocation(line: 162, column: 25, scope: !18951)
!18959 = !DILocation(line: 163, column: 17, scope: !18951)
!18960 = !DILocation(line: 164, column: 15, scope: !18951)
!18961 = !DILocation(line: 165, column: 9, scope: !18944)
!18962 = !DILocation(line: 167, column: 17, scope: !18918)
!18963 = !DILocation(line: 167, column: 16, scope: !18918)
!18964 = !DILocation(line: 167, column: 15, scope: !18918)
!18965 = !DILocation(line: 167, column: 7, scope: !18918)
!18966 = !DILocation(line: 170, column: 22, scope: !18967)
!18967 = distinct !DILexicalBlock(scope: !18918, file: !18815, line: 168, column: 9)
!18968 = !DILocation(line: 170, column: 20, scope: !18967)
!18969 = !DILocation(line: 171, column: 11, scope: !18967)
!18970 = !DILocation(line: 177, column: 22, scope: !18967)
!18971 = !DILocation(line: 177, column: 20, scope: !18967)
!18972 = !DILocation(line: 178, column: 11, scope: !18967)
!18973 = !DILocation(line: 181, column: 20, scope: !18967)
!18974 = !DILocation(line: 182, column: 11, scope: !18967)
!18975 = !DILocation(line: 185, column: 48, scope: !18967)
!18976 = !DILocation(line: 185, column: 22, scope: !18967)
!18977 = !DILocation(line: 185, column: 20, scope: !18967)
!18978 = !DILocation(line: 186, column: 11, scope: !18967)
!18979 = !DILocation(line: 190, column: 48, scope: !18967)
!18980 = !DILocation(line: 190, column: 22, scope: !18967)
!18981 = !DILocation(line: 190, column: 20, scope: !18967)
!18982 = !DILocation(line: 191, column: 11, scope: !18967)
!18983 = !DILocation(line: 195, column: 48, scope: !18967)
!18984 = !DILocation(line: 195, column: 22, scope: !18967)
!18985 = !DILocation(line: 195, column: 20, scope: !18967)
!18986 = !DILocation(line: 196, column: 11, scope: !18967)
!18987 = !DILocation(line: 200, column: 48, scope: !18967)
!18988 = !DILocation(line: 200, column: 22, scope: !18967)
!18989 = !DILocation(line: 200, column: 20, scope: !18967)
!18990 = !DILocation(line: 201, column: 11, scope: !18967)
!18991 = !DILocation(line: 204, column: 48, scope: !18967)
!18992 = !DILocation(line: 204, column: 22, scope: !18967)
!18993 = !DILocation(line: 204, column: 20, scope: !18967)
!18994 = !DILocation(line: 205, column: 11, scope: !18967)
!18995 = !DILocation(line: 209, column: 48, scope: !18967)
!18996 = !DILocation(line: 209, column: 22, scope: !18967)
!18997 = !DILocation(line: 209, column: 20, scope: !18967)
!18998 = !DILocation(line: 210, column: 11, scope: !18967)
!18999 = !DILocation(line: 213, column: 22, scope: !18967)
!19000 = !DILocation(line: 213, column: 20, scope: !18967)
!19001 = !DILocation(line: 214, column: 11, scope: !18967)
!19002 = !DILocation(line: 217, column: 48, scope: !18967)
!19003 = !DILocation(line: 217, column: 22, scope: !18967)
!19004 = !DILocation(line: 217, column: 20, scope: !18967)
!19005 = !DILocation(line: 218, column: 11, scope: !18967)
!19006 = !DILocation(line: 221, column: 48, scope: !18967)
!19007 = !DILocation(line: 221, column: 22, scope: !18967)
!19008 = !DILocation(line: 221, column: 20, scope: !18967)
!19009 = !DILocation(line: 222, column: 11, scope: !18967)
!19010 = !DILocation(line: 225, column: 18, scope: !18967)
!19011 = !DILocation(line: 225, column: 12, scope: !18967)
!19012 = !DILocation(line: 225, column: 16, scope: !18967)
!19013 = !DILocation(line: 226, column: 18, scope: !18967)
!19014 = !DILocation(line: 226, column: 22, scope: !18967)
!19015 = !DILocation(line: 226, column: 11, scope: !18967)
!19016 = !DILocation(line: 229, column: 14, scope: !18918)
!19017 = !DILocation(line: 229, column: 11, scope: !18918)
!19018 = !DILocation(line: 230, column: 13, scope: !18918)
!19019 = !DILocation(line: 230, column: 8, scope: !18918)
!19020 = !DILocation(line: 230, column: 10, scope: !18918)
!19021 = !DILocation(line: 231, column: 13, scope: !19022)
!19022 = distinct !DILexicalBlock(scope: !18918, file: !18815, line: 231, column: 11)
!19023 = !DILocation(line: 231, column: 12, scope: !19022)
!19024 = !DILocation(line: 231, column: 11, scope: !19022)
!19025 = !DILocation(line: 231, column: 11, scope: !18918)
!19026 = !DILocation(line: 232, column: 13, scope: !19022)
!19027 = !DILocation(line: 232, column: 9, scope: !19022)
!19028 = !DILocation(line: 233, column: 5, scope: !18918)
!19029 = !DILocation(line: 235, column: 10, scope: !18814)
!19030 = !DILocation(line: 235, column: 4, scope: !18814)
!19031 = !DILocation(line: 235, column: 8, scope: !18814)
!19032 = !DILocation(line: 236, column: 10, scope: !18814)
!19033 = !DILocation(line: 236, column: 3, scope: !18814)
!19034 = !DILocation(line: 237, column: 1, scope: !18814)
!19035 = distinct !DISubprogram(name: "bkm_scale", scope: !18815, file: !18815, line: 48, type: !2053, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !206)
!19036 = !DILocalVariable(name: "x", arg: 1, scope: !19035, file: !18815, line: 48, type: !2052)
!19037 = !DILocation(line: 48, column: 24, scope: !19035)
!19038 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !19035, file: !18815, line: 48, type: !5)
!19039 = !DILocation(line: 48, column: 31, scope: !19035)
!19040 = !DILocation(line: 55, column: 26, scope: !19041)
!19041 = distinct !DILexicalBlock(scope: !19035, file: !18815, line: 55, column: 7)
!19042 = !DILocation(line: 55, column: 24, scope: !19041)
!19043 = !DILocation(line: 55, column: 42, scope: !19041)
!19044 = !DILocation(line: 55, column: 41, scope: !19041)
!19045 = !DILocation(line: 55, column: 39, scope: !19041)
!19046 = !DILocation(line: 55, column: 7, scope: !19035)
!19047 = !DILocation(line: 57, column: 8, scope: !19048)
!19048 = distinct !DILexicalBlock(scope: !19041, file: !18815, line: 56, column: 5)
!19049 = !DILocation(line: 57, column: 10, scope: !19048)
!19050 = !DILocation(line: 58, column: 7, scope: !19048)
!19051 = !DILocation(line: 60, column: 9, scope: !19035)
!19052 = !DILocation(line: 60, column: 4, scope: !19035)
!19053 = !DILocation(line: 60, column: 6, scope: !19035)
!19054 = !DILocation(line: 61, column: 3, scope: !19035)
!19055 = !DILocation(line: 62, column: 1, scope: !19035)
!19056 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !18815, file: !18815, line: 65, type: !2055, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2037, retainedNodes: !206)
!19057 = !DILocalVariable(name: "x", arg: 1, scope: !19056, file: !18815, line: 65, type: !2052)
!19058 = !DILocation(line: 65, column: 33, scope: !19056)
!19059 = !DILocalVariable(name: "base", arg: 2, scope: !19056, file: !18815, line: 65, type: !5)
!19060 = !DILocation(line: 65, column: 40, scope: !19056)
!19061 = !DILocalVariable(name: "power", arg: 3, scope: !19056, file: !18815, line: 65, type: !5)
!19062 = !DILocation(line: 65, column: 50, scope: !19056)
!19063 = !DILocalVariable(name: "err", scope: !19056, file: !18815, line: 67, type: !2051)
!19064 = !DILocation(line: 67, column: 16, scope: !19056)
!19065 = !DILocation(line: 68, column: 3, scope: !19056)
!19066 = !DILocation(line: 68, column: 15, scope: !19056)
!19067 = !DILocation(line: 69, column: 23, scope: !19056)
!19068 = !DILocation(line: 69, column: 26, scope: !19056)
!19069 = !DILocation(line: 69, column: 12, scope: !19056)
!19070 = !DILocation(line: 69, column: 9, scope: !19056)
!19071 = distinct !{!19071, !19065, !19072}
!19072 = !DILocation(line: 69, column: 30, scope: !19056)
!19073 = !DILocation(line: 70, column: 10, scope: !19056)
!19074 = !DILocation(line: 70, column: 3, scope: !19056)
!19075 = distinct !DISubprogram(name: "yesno", scope: !19076, file: !19076, line: 32, type: !1327, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2057, retainedNodes: !206)
!19076 = !DIFile(filename: "lib/yesno.c", directory: "/home/mohamad/clone/coreutils")
!19077 = !DILocalVariable(name: "yes", scope: !19075, file: !19076, line: 34, type: !139)
!19078 = !DILocation(line: 34, column: 8, scope: !19075)
!19079 = !DILocalVariable(name: "response", scope: !19075, file: !19076, line: 37, type: !7)
!19080 = !DILocation(line: 37, column: 9, scope: !19075)
!19081 = !DILocalVariable(name: "response_size", scope: !19075, file: !19076, line: 38, type: !52)
!19082 = !DILocation(line: 38, column: 10, scope: !19075)
!19083 = !DILocalVariable(name: "response_len", scope: !19075, file: !19076, line: 39, type: !674)
!19084 = !DILocation(line: 39, column: 11, scope: !19075)
!19085 = !DILocation(line: 39, column: 62, scope: !19075)
!19086 = !DILocation(line: 39, column: 26, scope: !19075)
!19087 = !DILocation(line: 41, column: 7, scope: !19088)
!19088 = distinct !DILexicalBlock(scope: !19075, file: !19076, line: 41, column: 7)
!19089 = !DILocation(line: 41, column: 20, scope: !19088)
!19090 = !DILocation(line: 41, column: 7, scope: !19075)
!19091 = !DILocation(line: 42, column: 9, scope: !19088)
!19092 = !DILocation(line: 42, column: 5, scope: !19088)
!19093 = !DILocation(line: 47, column: 11, scope: !19094)
!19094 = distinct !DILexicalBlock(scope: !19095, file: !19076, line: 47, column: 11)
!19095 = distinct !DILexicalBlock(scope: !19088, file: !19076, line: 44, column: 5)
!19096 = !DILocation(line: 47, column: 20, scope: !19094)
!19097 = !DILocation(line: 47, column: 33, scope: !19094)
!19098 = !DILocation(line: 47, column: 38, scope: !19094)
!19099 = !DILocation(line: 47, column: 11, scope: !19095)
!19100 = !DILocation(line: 48, column: 9, scope: !19094)
!19101 = !DILocation(line: 48, column: 18, scope: !19094)
!19102 = !DILocation(line: 48, column: 31, scope: !19094)
!19103 = !DILocation(line: 48, column: 36, scope: !19094)
!19104 = !DILocation(line: 49, column: 27, scope: !19095)
!19105 = !DILocation(line: 49, column: 18, scope: !19095)
!19106 = !DILocation(line: 49, column: 16, scope: !19095)
!19107 = !DILocation(line: 49, column: 11, scope: !19095)
!19108 = !DILocation(line: 52, column: 9, scope: !19075)
!19109 = !DILocation(line: 52, column: 3, scope: !19075)
!19110 = !DILocation(line: 62, column: 10, scope: !19075)
!19111 = !DILocation(line: 62, column: 3, scope: !19075)
!19112 = distinct !DISubprogram(name: "rpl_fflush", scope: !19113, file: !19113, line: 129, type: !2101, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2098, retainedNodes: !206)
!19113 = !DIFile(filename: "lib/fflush.c", directory: "/home/mohamad/clone/coreutils")
!19114 = !DILocalVariable(name: "stream", arg: 1, scope: !19112, file: !19113, line: 129, type: !2103)
!19115 = !DILocation(line: 129, column: 19, scope: !19112)
!19116 = !DILocation(line: 150, column: 7, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19112, file: !19113, line: 150, column: 7)
!19118 = !DILocation(line: 150, column: 14, scope: !19117)
!19119 = !DILocation(line: 150, column: 22, scope: !19117)
!19120 = !DILocation(line: 150, column: 27, scope: !19117)
!19121 = !DILocation(line: 150, column: 7, scope: !19112)
!19122 = !DILocation(line: 151, column: 20, scope: !19117)
!19123 = !DILocation(line: 151, column: 12, scope: !19117)
!19124 = !DILocation(line: 151, column: 5, scope: !19117)
!19125 = !DILocation(line: 156, column: 44, scope: !19112)
!19126 = !DILocation(line: 156, column: 3, scope: !19112)
!19127 = !DILocation(line: 158, column: 18, scope: !19112)
!19128 = !DILocation(line: 158, column: 10, scope: !19112)
!19129 = !DILocation(line: 158, column: 3, scope: !19112)
!19130 = !DILocation(line: 232, column: 1, scope: !19112)
!19131 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !19113, file: !19113, line: 41, type: !2143, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2098, retainedNodes: !206)
!19132 = !DILocalVariable(name: "fp", arg: 1, scope: !19131, file: !19113, line: 41, type: !2103)
!19133 = !DILocation(line: 41, column: 48, scope: !19131)
!19134 = !DILocation(line: 43, column: 7, scope: !19135)
!19135 = distinct !DILexicalBlock(scope: !19131, file: !19113, line: 43, column: 7)
!19136 = !DILocation(line: 43, column: 11, scope: !19135)
!19137 = !{!19138, !2656, i64 0}
!19138 = !{!"_IO_FILE", !2656, i64 0, !2669, i64 8, !2669, i64 16, !2669, i64 24, !2669, i64 32, !2669, i64 40, !2669, i64 48, !2669, i64 56, !2669, i64 64, !2669, i64 72, !2669, i64 80, !2669, i64 88, !2669, i64 96, !2669, i64 104, !2656, i64 112, !2656, i64 116, !2936, i64 120, !14585, i64 128, !2657, i64 130, !2657, i64 131, !2669, i64 136, !2936, i64 144, !2669, i64 152, !2669, i64 160, !2669, i64 168, !2669, i64 176, !2936, i64 184, !2656, i64 192, !2657, i64 196}
!19139 = !DILocation(line: 43, column: 18, scope: !19135)
!19140 = !DILocation(line: 43, column: 7, scope: !19131)
!19141 = !DILocation(line: 45, column: 13, scope: !19135)
!19142 = !DILocation(line: 45, column: 5, scope: !19135)
!19143 = !DILocation(line: 46, column: 1, scope: !19131)
!19144 = distinct !DISubprogram(name: "freadahead", scope: !19145, file: !19145, line: 34, type: !2148, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2145, retainedNodes: !206)
!19145 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mohamad/clone/coreutils")
!19146 = !DILocalVariable(name: "fp", arg: 1, scope: !19144, file: !19145, line: 34, type: !2150)
!19147 = !DILocation(line: 34, column: 19, scope: !19144)
!19148 = !DILocation(line: 38, column: 7, scope: !19149)
!19149 = distinct !DILexicalBlock(scope: !19144, file: !19145, line: 38, column: 7)
!19150 = !DILocation(line: 38, column: 11, scope: !19149)
!19151 = !{!19138, !2669, i64 40}
!19152 = !DILocation(line: 38, column: 27, scope: !19149)
!19153 = !DILocation(line: 38, column: 31, scope: !19149)
!19154 = !{!19138, !2669, i64 32}
!19155 = !DILocation(line: 38, column: 25, scope: !19149)
!19156 = !DILocation(line: 38, column: 7, scope: !19144)
!19157 = !DILocation(line: 39, column: 5, scope: !19149)
!19158 = !DILocation(line: 40, column: 11, scope: !19144)
!19159 = !DILocation(line: 40, column: 15, scope: !19144)
!19160 = !{!19138, !2669, i64 16}
!19161 = !DILocation(line: 40, column: 30, scope: !19144)
!19162 = !DILocation(line: 40, column: 34, scope: !19144)
!19163 = !{!19138, !2669, i64 8}
!19164 = !DILocation(line: 40, column: 28, scope: !19144)
!19165 = !DILocation(line: 41, column: 13, scope: !19144)
!19166 = !DILocation(line: 41, column: 17, scope: !19144)
!19167 = !DILocation(line: 41, column: 24, scope: !19144)
!19168 = !DILocation(line: 41, column: 42, scope: !19144)
!19169 = !DILocation(line: 41, column: 46, scope: !19144)
!19170 = !{!19138, !2669, i64 88}
!19171 = !DILocation(line: 41, column: 61, scope: !19144)
!19172 = !DILocation(line: 41, column: 65, scope: !19144)
!19173 = !{!19138, !2669, i64 72}
!19174 = !DILocation(line: 41, column: 59, scope: !19144)
!19175 = !DILocation(line: 41, column: 10, scope: !19144)
!19176 = !DILocation(line: 40, column: 3, scope: !19144)
!19177 = !DILocation(line: 103, column: 1, scope: !19144)
!19178 = distinct !DISubprogram(name: "rpl_fseeko", scope: !19179, file: !19179, line: 28, type: !2193, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2190, retainedNodes: !206)
!19179 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mohamad/clone/coreutils")
!19180 = !DILocalVariable(name: "fp", arg: 1, scope: !19178, file: !19179, line: 28, type: !2195)
!19181 = !DILocation(line: 28, column: 15, scope: !19178)
!19182 = !DILocalVariable(name: "offset", arg: 2, scope: !19178, file: !19179, line: 28, type: !358)
!19183 = !DILocation(line: 28, column: 25, scope: !19178)
!19184 = !DILocalVariable(name: "whence", arg: 3, scope: !19178, file: !19179, line: 28, type: !5)
!19185 = !DILocation(line: 28, column: 37, scope: !19178)
!19186 = !DILocation(line: 52, column: 7, scope: !19187)
!19187 = distinct !DILexicalBlock(scope: !19178, file: !19179, line: 52, column: 7)
!19188 = !DILocation(line: 52, column: 11, scope: !19187)
!19189 = !DILocation(line: 52, column: 27, scope: !19187)
!19190 = !DILocation(line: 52, column: 31, scope: !19187)
!19191 = !DILocation(line: 52, column: 24, scope: !19187)
!19192 = !DILocation(line: 53, column: 7, scope: !19187)
!19193 = !DILocation(line: 53, column: 10, scope: !19187)
!19194 = !DILocation(line: 53, column: 14, scope: !19187)
!19195 = !DILocation(line: 53, column: 31, scope: !19187)
!19196 = !DILocation(line: 53, column: 35, scope: !19187)
!19197 = !DILocation(line: 53, column: 28, scope: !19187)
!19198 = !DILocation(line: 54, column: 7, scope: !19187)
!19199 = !DILocation(line: 54, column: 10, scope: !19187)
!19200 = !DILocation(line: 54, column: 14, scope: !19187)
!19201 = !DILocation(line: 54, column: 28, scope: !19187)
!19202 = !DILocation(line: 52, column: 7, scope: !19178)
!19203 = !DILocalVariable(name: "pos", scope: !19204, file: !19179, line: 117, type: !358)
!19204 = distinct !DILexicalBlock(scope: !19187, file: !19179, line: 113, column: 5)
!19205 = !DILocation(line: 117, column: 13, scope: !19204)
!19206 = !DILocation(line: 117, column: 34, scope: !19204)
!19207 = !DILocation(line: 117, column: 26, scope: !19204)
!19208 = !DILocation(line: 117, column: 39, scope: !19204)
!19209 = !DILocation(line: 117, column: 47, scope: !19204)
!19210 = !DILocation(line: 117, column: 19, scope: !19204)
!19211 = !DILocation(line: 118, column: 11, scope: !19212)
!19212 = distinct !DILexicalBlock(scope: !19204, file: !19179, line: 118, column: 11)
!19213 = !DILocation(line: 118, column: 15, scope: !19212)
!19214 = !DILocation(line: 118, column: 11, scope: !19204)
!19215 = !DILocation(line: 124, column: 11, scope: !19216)
!19216 = distinct !DILexicalBlock(scope: !19212, file: !19179, line: 119, column: 9)
!19217 = !DILocation(line: 129, column: 7, scope: !19204)
!19218 = !DILocation(line: 129, column: 11, scope: !19204)
!19219 = !DILocation(line: 129, column: 18, scope: !19204)
!19220 = !DILocation(line: 130, column: 21, scope: !19204)
!19221 = !DILocation(line: 130, column: 7, scope: !19204)
!19222 = !DILocation(line: 130, column: 11, scope: !19204)
!19223 = !DILocation(line: 130, column: 19, scope: !19204)
!19224 = !{!19138, !2936, i64 144}
!19225 = !DILocation(line: 161, column: 7, scope: !19204)
!19226 = !DILocation(line: 163, column: 18, scope: !19178)
!19227 = !DILocation(line: 163, column: 22, scope: !19178)
!19228 = !DILocation(line: 163, column: 30, scope: !19178)
!19229 = !DILocation(line: 163, column: 10, scope: !19178)
!19230 = !DILocation(line: 163, column: 3, scope: !19178)
!19231 = !DILocation(line: 164, column: 1, scope: !19178)
!19232 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !19233, file: !19233, line: 461, type: !2238, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2235, retainedNodes: !206)
!19233 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mohamad/clone/coreutils")
!19234 = !DILocalVariable(name: "pwc", arg: 1, scope: !19232, file: !19233, line: 461, type: !2240)
!19235 = !DILocation(line: 461, column: 23, scope: !19232)
!19236 = !DILocalVariable(name: "s", arg: 2, scope: !19232, file: !19233, line: 461, type: !177)
!19237 = !DILocation(line: 461, column: 40, scope: !19232)
!19238 = !DILocalVariable(name: "n", arg: 3, scope: !19232, file: !19233, line: 461, type: !52)
!19239 = !DILocation(line: 461, column: 50, scope: !19232)
!19240 = !DILocalVariable(name: "ps", arg: 4, scope: !19232, file: !19233, line: 461, type: !2241)
!19241 = !DILocation(line: 461, column: 64, scope: !19232)
!19242 = !DILocalVariable(name: "ret", scope: !19232, file: !19233, line: 463, type: !52)
!19243 = !DILocation(line: 463, column: 10, scope: !19232)
!19244 = !DILocalVariable(name: "wc", scope: !19232, file: !19233, line: 464, type: !1124)
!19245 = !DILocation(line: 464, column: 11, scope: !19232)
!19246 = !DILocation(line: 480, column: 9, scope: !19247)
!19247 = distinct !DILexicalBlock(scope: !19232, file: !19233, line: 480, column: 7)
!19248 = !DILocation(line: 480, column: 7, scope: !19232)
!19249 = !DILocation(line: 481, column: 9, scope: !19247)
!19250 = !DILocation(line: 481, column: 5, scope: !19247)
!19251 = !DILocation(line: 515, column: 18, scope: !19232)
!19252 = !DILocation(line: 515, column: 23, scope: !19232)
!19253 = !DILocation(line: 515, column: 26, scope: !19232)
!19254 = !DILocation(line: 515, column: 29, scope: !19232)
!19255 = !DILocation(line: 515, column: 9, scope: !19232)
!19256 = !DILocation(line: 515, column: 7, scope: !19232)
!19257 = !DILocation(line: 523, column: 22, scope: !19258)
!19258 = distinct !DILexicalBlock(scope: !19232, file: !19233, line: 523, column: 7)
!19259 = !DILocation(line: 523, column: 19, scope: !19258)
!19260 = !DILocation(line: 523, column: 26, scope: !19258)
!19261 = !DILocation(line: 523, column: 29, scope: !19258)
!19262 = !DILocation(line: 523, column: 31, scope: !19258)
!19263 = !DILocation(line: 523, column: 36, scope: !19258)
!19264 = !DILocation(line: 523, column: 41, scope: !19258)
!19265 = !DILocation(line: 523, column: 7, scope: !19232)
!19266 = !DILocalVariable(name: "uc", scope: !19267, file: !19233, line: 525, type: !565)
!19267 = distinct !DILexicalBlock(scope: !19258, file: !19233, line: 524, column: 5)
!19268 = !DILocation(line: 525, column: 21, scope: !19267)
!19269 = !DILocation(line: 525, column: 27, scope: !19267)
!19270 = !DILocation(line: 525, column: 26, scope: !19267)
!19271 = !DILocation(line: 526, column: 14, scope: !19267)
!19272 = !DILocation(line: 526, column: 8, scope: !19267)
!19273 = !DILocation(line: 526, column: 12, scope: !19267)
!19274 = !DILocation(line: 527, column: 7, scope: !19267)
!19275 = !DILocation(line: 531, column: 10, scope: !19232)
!19276 = !DILocation(line: 531, column: 3, scope: !19232)
!19277 = !DILocation(line: 532, column: 1, scope: !19232)
!19278 = distinct !DISubprogram(name: "free_permission_context", scope: !19279, file: !19279, line: 479, type: !2255, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2252, retainedNodes: !206)
!19279 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mohamad/clone/coreutils")
!19280 = !DILocalVariable(name: "ctx", arg: 1, scope: !19278, file: !19279, line: 479, type: !2257)
!19281 = !DILocation(line: 479, column: 53, scope: !19278)
!19282 = !DILocation(line: 507, column: 1, scope: !19278)
!19283 = distinct !DISubprogram(name: "get_permissions", scope: !19284, file: !19284, line: 33, type: !2265, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2262, retainedNodes: !206)
!19284 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mohamad/clone/coreutils")
!19285 = !DILocalVariable(name: "name", arg: 1, scope: !19283, file: !19284, line: 33, type: !177)
!19286 = !DILocation(line: 33, column: 30, scope: !19283)
!19287 = !DILocalVariable(name: "desc", arg: 2, scope: !19283, file: !19284, line: 33, type: !5)
!19288 = !DILocation(line: 33, column: 40, scope: !19283)
!19289 = !DILocalVariable(name: "mode", arg: 3, scope: !19283, file: !19284, line: 33, type: !136)
!19290 = !DILocation(line: 33, column: 53, scope: !19283)
!19291 = !DILocalVariable(name: "ctx", arg: 4, scope: !19283, file: !19284, line: 34, type: !2267)
!19292 = !DILocation(line: 34, column: 45, scope: !19283)
!19293 = !DILocation(line: 36, column: 11, scope: !19283)
!19294 = !DILocation(line: 36, column: 3, scope: !19283)
!19295 = !DILocation(line: 37, column: 15, scope: !19283)
!19296 = !DILocation(line: 37, column: 3, scope: !19283)
!19297 = !DILocation(line: 37, column: 8, scope: !19283)
!19298 = !DILocation(line: 37, column: 13, scope: !19283)
!19299 = !DILocation(line: 289, column: 3, scope: !19283)
!19300 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !19301, file: !19301, line: 760, type: !1525, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2271, retainedNodes: !206)
!19301 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mohamad/clone/coreutils")
!19302 = !DILocalVariable(name: "name", arg: 1, scope: !19300, file: !19301, line: 760, type: !177)
!19303 = !DILocation(line: 760, column: 30, scope: !19300)
!19304 = !DILocalVariable(name: "desc", arg: 2, scope: !19300, file: !19301, line: 760, type: !5)
!19305 = !DILocation(line: 760, column: 40, scope: !19300)
!19306 = !DILocalVariable(name: "mode", arg: 3, scope: !19300, file: !19301, line: 760, type: !136)
!19307 = !DILocation(line: 760, column: 53, scope: !19300)
!19308 = !DILocation(line: 762, column: 22, scope: !19309)
!19309 = distinct !DILexicalBlock(scope: !19300, file: !19301, line: 762, column: 7)
!19310 = !DILocation(line: 762, column: 27, scope: !19309)
!19311 = !DILocation(line: 762, column: 7, scope: !19300)
!19312 = !DILocation(line: 763, column: 20, scope: !19309)
!19313 = !DILocation(line: 763, column: 26, scope: !19309)
!19314 = !DILocation(line: 763, column: 12, scope: !19309)
!19315 = !DILocation(line: 763, column: 5, scope: !19309)
!19316 = !DILocation(line: 765, column: 19, scope: !19309)
!19317 = !DILocation(line: 765, column: 25, scope: !19309)
!19318 = !DILocation(line: 765, column: 12, scope: !19309)
!19319 = !DILocation(line: 765, column: 5, scope: !19309)
!19320 = !DILocation(line: 766, column: 1, scope: !19300)
!19321 = distinct !DISubprogram(name: "set_permissions", scope: !19301, file: !19301, line: 776, type: !2274, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2271, retainedNodes: !206)
!19322 = !DILocalVariable(name: "ctx", arg: 1, scope: !19321, file: !19301, line: 776, type: !2276)
!19323 = !DILocation(line: 776, column: 45, scope: !19321)
!19324 = !DILocalVariable(name: "name", arg: 2, scope: !19321, file: !19301, line: 776, type: !177)
!19325 = !DILocation(line: 776, column: 62, scope: !19321)
!19326 = !DILocalVariable(name: "desc", arg: 3, scope: !19321, file: !19301, line: 776, type: !5)
!19327 = !DILocation(line: 776, column: 72, scope: !19321)
!19328 = !DILocalVariable(name: "acls_set", scope: !19321, file: !19301, line: 778, type: !139)
!19329 = !DILocation(line: 778, column: 8, scope: !19321)
!19330 = !DILocalVariable(name: "early_chmod", scope: !19321, file: !19301, line: 779, type: !139)
!19331 = !DILocation(line: 779, column: 8, scope: !19321)
!19332 = !DILocalVariable(name: "must_chmod", scope: !19321, file: !19301, line: 780, type: !139)
!19333 = !DILocation(line: 780, column: 8, scope: !19321)
!19334 = !DILocalVariable(name: "ret", scope: !19321, file: !19301, line: 781, type: !5)
!19335 = !DILocation(line: 781, column: 7, scope: !19321)
!19336 = !DILocation(line: 801, column: 15, scope: !19321)
!19337 = !DILocation(line: 804, column: 7, scope: !19338)
!19338 = distinct !DILexicalBlock(scope: !19321, file: !19301, line: 804, column: 7)
!19339 = !DILocation(line: 804, column: 7, scope: !19321)
!19340 = !DILocation(line: 806, column: 30, scope: !19341)
!19341 = distinct !DILexicalBlock(scope: !19338, file: !19301, line: 805, column: 5)
!19342 = !DILocation(line: 806, column: 36, scope: !19341)
!19343 = !DILocation(line: 806, column: 42, scope: !19341)
!19344 = !DILocation(line: 806, column: 47, scope: !19341)
!19345 = !DILocation(line: 806, column: 13, scope: !19341)
!19346 = !DILocation(line: 806, column: 11, scope: !19341)
!19347 = !DILocation(line: 807, column: 11, scope: !19348)
!19348 = distinct !DILexicalBlock(scope: !19341, file: !19301, line: 807, column: 11)
!19349 = !DILocation(line: 807, column: 15, scope: !19348)
!19350 = !DILocation(line: 807, column: 11, scope: !19341)
!19351 = !DILocation(line: 808, column: 9, scope: !19348)
!19352 = !DILocation(line: 809, column: 5, scope: !19341)
!19353 = !DILocation(line: 833, column: 7, scope: !19354)
!19354 = distinct !DILexicalBlock(scope: !19321, file: !19301, line: 833, column: 7)
!19355 = !DILocation(line: 833, column: 18, scope: !19354)
!19356 = !DILocation(line: 833, column: 23, scope: !19354)
!19357 = !DILocation(line: 833, column: 7, scope: !19321)
!19358 = !DILocalVariable(name: "saved_errno", scope: !19359, file: !19301, line: 835, type: !5)
!19359 = distinct !DILexicalBlock(scope: !19354, file: !19301, line: 834, column: 5)
!19360 = !DILocation(line: 835, column: 11, scope: !19359)
!19361 = !DILocation(line: 835, column: 25, scope: !19359)
!19362 = !DILocation(line: 835, column: 31, scope: !19359)
!19363 = !DILocation(line: 837, column: 30, scope: !19359)
!19364 = !DILocation(line: 837, column: 36, scope: !19359)
!19365 = !DILocation(line: 837, column: 42, scope: !19359)
!19366 = !DILocation(line: 837, column: 47, scope: !19359)
!19367 = !DILocation(line: 837, column: 13, scope: !19359)
!19368 = !DILocation(line: 837, column: 11, scope: !19359)
!19369 = !DILocation(line: 839, column: 11, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19359, file: !19301, line: 839, column: 11)
!19371 = !DILocation(line: 839, column: 11, scope: !19359)
!19372 = !DILocation(line: 841, column: 19, scope: !19373)
!19373 = distinct !DILexicalBlock(scope: !19370, file: !19301, line: 840, column: 9)
!19374 = !DILocation(line: 841, column: 11, scope: !19373)
!19375 = !DILocation(line: 841, column: 17, scope: !19373)
!19376 = !DILocation(line: 842, column: 15, scope: !19373)
!19377 = !DILocation(line: 843, column: 9, scope: !19373)
!19378 = !DILocation(line: 844, column: 5, scope: !19359)
!19379 = !DILocation(line: 846, column: 10, scope: !19321)
!19380 = !DILocation(line: 846, column: 3, scope: !19321)
!19381 = !DILocation(line: 847, column: 1, scope: !19321)
!19382 = distinct !DISubprogram(name: "__argmatch_die", scope: !1390, file: !1390, line: 60, type: !197, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1337, retainedNodes: !206)
!19383 = !DILocation(line: 62, column: 3, scope: !19382)
!19384 = !DILocation(line: 63, column: 1, scope: !19382)
!19385 = distinct !DISubprogram(name: "argmatch", scope: !1390, file: !1390, line: 82, type: !1340, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1337, retainedNodes: !206)
!19386 = !DILocalVariable(name: "arg", arg: 1, scope: !19385, file: !1390, line: 82, type: !177)
!19387 = !DILocation(line: 82, column: 23, scope: !19385)
!19388 = !DILocalVariable(name: "arglist", arg: 2, scope: !19385, file: !1390, line: 82, type: !1342)
!19389 = !DILocation(line: 82, column: 47, scope: !19385)
!19390 = !DILocalVariable(name: "vallist", arg: 3, scope: !19385, file: !1390, line: 83, type: !525)
!19391 = !DILocation(line: 83, column: 23, scope: !19385)
!19392 = !DILocalVariable(name: "valsize", arg: 4, scope: !19385, file: !1390, line: 83, type: !52)
!19393 = !DILocation(line: 83, column: 39, scope: !19385)
!19394 = !DILocalVariable(name: "i", scope: !19385, file: !1390, line: 85, type: !52)
!19395 = !DILocation(line: 85, column: 10, scope: !19385)
!19396 = !DILocalVariable(name: "arglen", scope: !19385, file: !1390, line: 86, type: !52)
!19397 = !DILocation(line: 86, column: 10, scope: !19385)
!19398 = !DILocalVariable(name: "matchind", scope: !19385, file: !1390, line: 87, type: !634)
!19399 = !DILocation(line: 87, column: 13, scope: !19385)
!19400 = !DILocalVariable(name: "ambiguous", scope: !19385, file: !1390, line: 88, type: !139)
!19401 = !DILocation(line: 88, column: 8, scope: !19385)
!19402 = !DILocation(line: 90, column: 20, scope: !19385)
!19403 = !DILocation(line: 90, column: 12, scope: !19385)
!19404 = !DILocation(line: 90, column: 10, scope: !19385)
!19405 = !DILocation(line: 93, column: 10, scope: !19406)
!19406 = distinct !DILexicalBlock(scope: !19385, file: !1390, line: 93, column: 3)
!19407 = !DILocation(line: 93, column: 8, scope: !19406)
!19408 = !DILocation(line: 93, column: 15, scope: !19409)
!19409 = distinct !DILexicalBlock(scope: !19406, file: !1390, line: 93, column: 3)
!19410 = !DILocation(line: 93, column: 23, scope: !19409)
!19411 = !DILocation(line: 93, column: 3, scope: !19406)
!19412 = !DILocation(line: 95, column: 21, scope: !19413)
!19413 = distinct !DILexicalBlock(scope: !19414, file: !1390, line: 95, column: 11)
!19414 = distinct !DILexicalBlock(scope: !19409, file: !1390, line: 94, column: 5)
!19415 = !DILocation(line: 95, column: 29, scope: !19413)
!19416 = !DILocation(line: 95, column: 33, scope: !19413)
!19417 = !DILocation(line: 95, column: 38, scope: !19413)
!19418 = !DILocation(line: 95, column: 12, scope: !19413)
!19419 = !DILocation(line: 95, column: 11, scope: !19414)
!19420 = !DILocation(line: 97, column: 23, scope: !19421)
!19421 = distinct !DILexicalBlock(scope: !19422, file: !1390, line: 97, column: 15)
!19422 = distinct !DILexicalBlock(scope: !19413, file: !1390, line: 96, column: 9)
!19423 = !DILocation(line: 97, column: 31, scope: !19421)
!19424 = !DILocation(line: 97, column: 15, scope: !19421)
!19425 = !DILocation(line: 97, column: 38, scope: !19421)
!19426 = !DILocation(line: 97, column: 35, scope: !19421)
!19427 = !DILocation(line: 97, column: 15, scope: !19422)
!19428 = !DILocation(line: 99, column: 20, scope: !19421)
!19429 = !DILocation(line: 99, column: 13, scope: !19421)
!19430 = !DILocation(line: 100, column: 20, scope: !19431)
!19431 = distinct !DILexicalBlock(scope: !19421, file: !1390, line: 100, column: 20)
!19432 = !DILocation(line: 100, column: 29, scope: !19431)
!19433 = !DILocation(line: 100, column: 20, scope: !19421)
!19434 = !DILocation(line: 102, column: 24, scope: !19431)
!19435 = !DILocation(line: 102, column: 22, scope: !19431)
!19436 = !DILocation(line: 102, column: 13, scope: !19431)
!19437 = !DILocation(line: 106, column: 19, scope: !19438)
!19438 = distinct !DILexicalBlock(scope: !19439, file: !1390, line: 106, column: 19)
!19439 = distinct !DILexicalBlock(scope: !19431, file: !1390, line: 104, column: 13)
!19440 = !DILocation(line: 106, column: 27, scope: !19438)
!19441 = !DILocation(line: 107, column: 19, scope: !19438)
!19442 = !DILocation(line: 107, column: 45, scope: !19438)
!19443 = !DILocation(line: 107, column: 55, scope: !19438)
!19444 = !DILocation(line: 107, column: 65, scope: !19438)
!19445 = !DILocation(line: 107, column: 63, scope: !19438)
!19446 = !DILocation(line: 107, column: 53, scope: !19438)
!19447 = !DILocation(line: 108, column: 45, scope: !19438)
!19448 = !DILocation(line: 108, column: 55, scope: !19438)
!19449 = !DILocation(line: 108, column: 65, scope: !19438)
!19450 = !DILocation(line: 108, column: 63, scope: !19438)
!19451 = !DILocation(line: 108, column: 53, scope: !19438)
!19452 = !DILocation(line: 108, column: 68, scope: !19438)
!19453 = !DILocation(line: 107, column: 22, scope: !19438)
!19454 = !DILocation(line: 106, column: 19, scope: !19439)
!19455 = !DILocation(line: 112, column: 29, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19438, file: !1390, line: 109, column: 17)
!19457 = !DILocation(line: 113, column: 17, scope: !19456)
!19458 = !DILocation(line: 115, column: 9, scope: !19422)
!19459 = !DILocation(line: 116, column: 5, scope: !19414)
!19460 = !DILocation(line: 93, column: 28, scope: !19409)
!19461 = !DILocation(line: 93, column: 3, scope: !19409)
!19462 = distinct !{!19462, !19411, !19463}
!19463 = !DILocation(line: 116, column: 5, scope: !19406)
!19464 = !DILocation(line: 117, column: 7, scope: !19465)
!19465 = distinct !DILexicalBlock(scope: !19385, file: !1390, line: 117, column: 7)
!19466 = !DILocation(line: 117, column: 7, scope: !19385)
!19467 = !DILocation(line: 118, column: 5, scope: !19465)
!19468 = !DILocation(line: 120, column: 12, scope: !19465)
!19469 = !DILocation(line: 120, column: 5, scope: !19465)
!19470 = !DILocation(line: 121, column: 1, scope: !19385)
!19471 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1390, file: !1390, line: 129, type: !1343, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1337, retainedNodes: !206)
!19472 = !DILocalVariable(name: "context", arg: 1, scope: !19471, file: !1390, line: 129, type: !177)
!19473 = !DILocation(line: 129, column: 31, scope: !19471)
!19474 = !DILocalVariable(name: "value", arg: 2, scope: !19471, file: !1390, line: 129, type: !177)
!19475 = !DILocation(line: 129, column: 52, scope: !19471)
!19476 = !DILocalVariable(name: "problem", arg: 3, scope: !19471, file: !1390, line: 129, type: !634)
!19477 = !DILocation(line: 129, column: 69, scope: !19471)
!19478 = !DILocalVariable(name: "format", scope: !19471, file: !1390, line: 131, type: !177)
!19479 = !DILocation(line: 131, column: 15, scope: !19471)
!19480 = !DILocation(line: 131, column: 25, scope: !19471)
!19481 = !DILocation(line: 131, column: 33, scope: !19471)
!19482 = !DILocation(line: 132, column: 27, scope: !19471)
!19483 = !DILocation(line: 133, column: 27, scope: !19471)
!19484 = !DILocation(line: 135, column: 16, scope: !19471)
!19485 = !DILocation(line: 135, column: 69, scope: !19471)
!19486 = !DILocation(line: 135, column: 24, scope: !19471)
!19487 = !DILocation(line: 136, column: 22, scope: !19471)
!19488 = !DILocation(line: 136, column: 10, scope: !19471)
!19489 = !DILocation(line: 135, column: 3, scope: !19471)
!19490 = !DILocation(line: 137, column: 1, scope: !19471)
!19491 = distinct !DISubprogram(name: "argmatch_valid", scope: !1390, file: !1390, line: 144, type: !1345, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1337, retainedNodes: !206)
!19492 = !DILocalVariable(name: "arglist", arg: 1, scope: !19491, file: !1390, line: 144, type: !1342)
!19493 = !DILocation(line: 144, column: 36, scope: !19491)
!19494 = !DILocalVariable(name: "vallist", arg: 2, scope: !19491, file: !1390, line: 145, type: !525)
!19495 = !DILocation(line: 145, column: 29, scope: !19491)
!19496 = !DILocalVariable(name: "valsize", arg: 3, scope: !19491, file: !1390, line: 145, type: !52)
!19497 = !DILocation(line: 145, column: 45, scope: !19491)
!19498 = !DILocalVariable(name: "i", scope: !19491, file: !1390, line: 147, type: !52)
!19499 = !DILocation(line: 147, column: 10, scope: !19491)
!19500 = !DILocalVariable(name: "last_val", scope: !19491, file: !1390, line: 148, type: !177)
!19501 = !DILocation(line: 148, column: 15, scope: !19491)
!19502 = !DILocation(line: 152, column: 3, scope: !19491)
!19503 = !DILocation(line: 153, column: 10, scope: !19504)
!19504 = distinct !DILexicalBlock(scope: !19491, file: !1390, line: 153, column: 3)
!19505 = !DILocation(line: 153, column: 8, scope: !19504)
!19506 = !DILocation(line: 153, column: 15, scope: !19507)
!19507 = distinct !DILexicalBlock(scope: !19504, file: !1390, line: 153, column: 3)
!19508 = !DILocation(line: 153, column: 23, scope: !19507)
!19509 = !DILocation(line: 153, column: 3, scope: !19504)
!19510 = !DILocation(line: 154, column: 10, scope: !19511)
!19511 = distinct !DILexicalBlock(scope: !19507, file: !1390, line: 154, column: 9)
!19512 = !DILocation(line: 154, column: 12, scope: !19511)
!19513 = !DILocation(line: 155, column: 9, scope: !19511)
!19514 = !DILocation(line: 155, column: 20, scope: !19511)
!19515 = !DILocation(line: 155, column: 45, scope: !19511)
!19516 = !DILocation(line: 155, column: 55, scope: !19511)
!19517 = !DILocation(line: 155, column: 65, scope: !19511)
!19518 = !DILocation(line: 155, column: 63, scope: !19511)
!19519 = !DILocation(line: 155, column: 53, scope: !19511)
!19520 = !DILocation(line: 155, column: 68, scope: !19511)
!19521 = !DILocation(line: 155, column: 12, scope: !19511)
!19522 = !DILocation(line: 154, column: 9, scope: !19507)
!19523 = !DILocation(line: 157, column: 18, scope: !19524)
!19524 = distinct !DILexicalBlock(scope: !19511, file: !1390, line: 156, column: 7)
!19525 = !DILocation(line: 157, column: 45, scope: !19524)
!19526 = !DILocation(line: 157, column: 53, scope: !19524)
!19527 = !DILocation(line: 157, column: 38, scope: !19524)
!19528 = !DILocation(line: 157, column: 9, scope: !19524)
!19529 = !DILocation(line: 158, column: 35, scope: !19524)
!19530 = !DILocation(line: 158, column: 45, scope: !19524)
!19531 = !DILocation(line: 158, column: 55, scope: !19524)
!19532 = !DILocation(line: 158, column: 53, scope: !19524)
!19533 = !DILocation(line: 158, column: 43, scope: !19524)
!19534 = !DILocation(line: 158, column: 18, scope: !19524)
!19535 = !DILocation(line: 159, column: 7, scope: !19524)
!19536 = !DILocation(line: 162, column: 18, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19511, file: !1390, line: 161, column: 7)
!19538 = !DILocation(line: 162, column: 41, scope: !19537)
!19539 = !DILocation(line: 162, column: 49, scope: !19537)
!19540 = !DILocation(line: 162, column: 34, scope: !19537)
!19541 = !DILocation(line: 162, column: 9, scope: !19537)
!19542 = !DILocation(line: 155, column: 75, scope: !19511)
!19543 = !DILocation(line: 153, column: 28, scope: !19507)
!19544 = !DILocation(line: 153, column: 3, scope: !19507)
!19545 = distinct !{!19545, !19509, !19546}
!19546 = !DILocation(line: 163, column: 7, scope: !19504)
!19547 = !DILocation(line: 164, column: 3, scope: !19491)
!19548 = !DILocation(line: 165, column: 1, scope: !19491)
!19549 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1390, file: !1390, line: 174, type: !1385, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1337, retainedNodes: !206)
!19550 = !DILocalVariable(name: "context", arg: 1, scope: !19549, file: !1390, line: 174, type: !177)
!19551 = !DILocation(line: 174, column: 35, scope: !19549)
!19552 = !DILocalVariable(name: "arg", arg: 2, scope: !19549, file: !1390, line: 175, type: !177)
!19553 = !DILocation(line: 175, column: 35, scope: !19549)
!19554 = !DILocalVariable(name: "arglist", arg: 3, scope: !19549, file: !1390, line: 175, type: !1342)
!19555 = !DILocation(line: 175, column: 59, scope: !19549)
!19556 = !DILocalVariable(name: "vallist", arg: 4, scope: !19549, file: !1390, line: 176, type: !525)
!19557 = !DILocation(line: 176, column: 35, scope: !19549)
!19558 = !DILocalVariable(name: "valsize", arg: 5, scope: !19549, file: !1390, line: 176, type: !52)
!19559 = !DILocation(line: 176, column: 51, scope: !19549)
!19560 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !19549, file: !1390, line: 177, type: !712)
!19561 = !DILocation(line: 177, column: 40, scope: !19549)
!19562 = !DILocalVariable(name: "res", scope: !19549, file: !1390, line: 179, type: !634)
!19563 = !DILocation(line: 179, column: 13, scope: !19549)
!19564 = !DILocation(line: 179, column: 29, scope: !19549)
!19565 = !DILocation(line: 179, column: 34, scope: !19549)
!19566 = !DILocation(line: 179, column: 43, scope: !19549)
!19567 = !DILocation(line: 179, column: 52, scope: !19549)
!19568 = !DILocation(line: 179, column: 19, scope: !19549)
!19569 = !DILocation(line: 180, column: 7, scope: !19570)
!19570 = distinct !DILexicalBlock(scope: !19549, file: !1390, line: 180, column: 7)
!19571 = !DILocation(line: 180, column: 11, scope: !19570)
!19572 = !DILocation(line: 180, column: 7, scope: !19549)
!19573 = !DILocation(line: 182, column: 12, scope: !19570)
!19574 = !DILocation(line: 182, column: 5, scope: !19570)
!19575 = !DILocation(line: 185, column: 21, scope: !19549)
!19576 = !DILocation(line: 185, column: 30, scope: !19549)
!19577 = !DILocation(line: 185, column: 35, scope: !19549)
!19578 = !DILocation(line: 185, column: 3, scope: !19549)
!19579 = !DILocation(line: 186, column: 19, scope: !19549)
!19580 = !DILocation(line: 186, column: 28, scope: !19549)
!19581 = !DILocation(line: 186, column: 37, scope: !19549)
!19582 = !DILocation(line: 186, column: 3, scope: !19549)
!19583 = !DILocation(line: 187, column: 5, scope: !19549)
!19584 = !DILocation(line: 187, column: 3, scope: !19549)
!19585 = !DILocation(line: 189, column: 3, scope: !19549)
!19586 = !DILocation(line: 190, column: 1, scope: !19549)
!19587 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1390, file: !1390, line: 195, type: !1387, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1337, retainedNodes: !206)
!19588 = !DILocalVariable(name: "value", arg: 1, scope: !19587, file: !1390, line: 195, type: !525)
!19589 = !DILocation(line: 195, column: 35, scope: !19587)
!19590 = !DILocalVariable(name: "arglist", arg: 2, scope: !19587, file: !1390, line: 196, type: !1342)
!19591 = !DILocation(line: 196, column: 42, scope: !19587)
!19592 = !DILocalVariable(name: "vallist", arg: 3, scope: !19587, file: !1390, line: 197, type: !525)
!19593 = !DILocation(line: 197, column: 35, scope: !19587)
!19594 = !DILocalVariable(name: "valsize", arg: 4, scope: !19587, file: !1390, line: 197, type: !52)
!19595 = !DILocation(line: 197, column: 51, scope: !19587)
!19596 = !DILocalVariable(name: "i", scope: !19587, file: !1390, line: 199, type: !52)
!19597 = !DILocation(line: 199, column: 10, scope: !19587)
!19598 = !DILocation(line: 201, column: 10, scope: !19599)
!19599 = distinct !DILexicalBlock(scope: !19587, file: !1390, line: 201, column: 3)
!19600 = !DILocation(line: 201, column: 8, scope: !19599)
!19601 = !DILocation(line: 201, column: 15, scope: !19602)
!19602 = distinct !DILexicalBlock(scope: !19599, file: !1390, line: 201, column: 3)
!19603 = !DILocation(line: 201, column: 23, scope: !19602)
!19604 = !DILocation(line: 201, column: 3, scope: !19599)
!19605 = !DILocation(line: 202, column: 18, scope: !19606)
!19606 = distinct !DILexicalBlock(scope: !19602, file: !1390, line: 202, column: 9)
!19607 = !DILocation(line: 202, column: 40, scope: !19606)
!19608 = !DILocation(line: 202, column: 50, scope: !19606)
!19609 = !DILocation(line: 202, column: 60, scope: !19606)
!19610 = !DILocation(line: 202, column: 58, scope: !19606)
!19611 = !DILocation(line: 202, column: 48, scope: !19606)
!19612 = !DILocation(line: 202, column: 63, scope: !19606)
!19613 = !DILocation(line: 202, column: 10, scope: !19606)
!19614 = !DILocation(line: 202, column: 9, scope: !19602)
!19615 = !DILocation(line: 203, column: 14, scope: !19606)
!19616 = !DILocation(line: 203, column: 22, scope: !19606)
!19617 = !DILocation(line: 203, column: 7, scope: !19606)
!19618 = !DILocation(line: 202, column: 70, scope: !19606)
!19619 = !DILocation(line: 201, column: 28, scope: !19602)
!19620 = !DILocation(line: 201, column: 3, scope: !19602)
!19621 = distinct !{!19621, !19604, !19622}
!19622 = !DILocation(line: 203, column: 23, scope: !19599)
!19623 = !DILocation(line: 204, column: 3, scope: !19587)
!19624 = !DILocation(line: 205, column: 1, scope: !19587)
!19625 = distinct !DISubprogram(name: "rotl64", scope: !19626, file: !19626, line: 39, type: !2283, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19626 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mohamad/clone/coreutils")
!19627 = !DILocalVariable(name: "x", arg: 1, scope: !19625, file: !19626, line: 39, type: !1493)
!19628 = !DILocation(line: 39, column: 18, scope: !19625)
!19629 = !DILocalVariable(name: "n", arg: 2, scope: !19625, file: !19626, line: 39, type: !5)
!19630 = !DILocation(line: 39, column: 25, scope: !19625)
!19631 = !DILocation(line: 41, column: 12, scope: !19625)
!19632 = !DILocation(line: 41, column: 17, scope: !19625)
!19633 = !DILocation(line: 41, column: 14, scope: !19625)
!19634 = !DILocation(line: 41, column: 23, scope: !19625)
!19635 = !DILocation(line: 41, column: 34, scope: !19625)
!19636 = !DILocation(line: 41, column: 32, scope: !19625)
!19637 = !DILocation(line: 41, column: 25, scope: !19625)
!19638 = !DILocation(line: 41, column: 20, scope: !19625)
!19639 = !DILocation(line: 41, column: 3, scope: !19625)
!19640 = distinct !DISubprogram(name: "rotr64", scope: !19626, file: !19626, line: 48, type: !2283, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19641 = !DILocalVariable(name: "x", arg: 1, scope: !19640, file: !19626, line: 48, type: !1493)
!19642 = !DILocation(line: 48, column: 18, scope: !19640)
!19643 = !DILocalVariable(name: "n", arg: 2, scope: !19640, file: !19626, line: 48, type: !5)
!19644 = !DILocation(line: 48, column: 25, scope: !19640)
!19645 = !DILocation(line: 50, column: 12, scope: !19640)
!19646 = !DILocation(line: 50, column: 17, scope: !19640)
!19647 = !DILocation(line: 50, column: 14, scope: !19640)
!19648 = !DILocation(line: 50, column: 23, scope: !19640)
!19649 = !DILocation(line: 50, column: 34, scope: !19640)
!19650 = !DILocation(line: 50, column: 32, scope: !19640)
!19651 = !DILocation(line: 50, column: 25, scope: !19640)
!19652 = !DILocation(line: 50, column: 20, scope: !19640)
!19653 = !DILocation(line: 50, column: 3, scope: !19640)
!19654 = distinct !DISubprogram(name: "rotl32", scope: !19626, file: !19626, line: 58, type: !2285, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19655 = !DILocalVariable(name: "x", arg: 1, scope: !19654, file: !19626, line: 58, type: !1496)
!19656 = !DILocation(line: 58, column: 18, scope: !19654)
!19657 = !DILocalVariable(name: "n", arg: 2, scope: !19654, file: !19626, line: 58, type: !5)
!19658 = !DILocation(line: 58, column: 25, scope: !19654)
!19659 = !DILocation(line: 60, column: 12, scope: !19654)
!19660 = !DILocation(line: 60, column: 17, scope: !19654)
!19661 = !DILocation(line: 60, column: 14, scope: !19654)
!19662 = !DILocation(line: 60, column: 23, scope: !19654)
!19663 = !DILocation(line: 60, column: 34, scope: !19654)
!19664 = !DILocation(line: 60, column: 32, scope: !19654)
!19665 = !DILocation(line: 60, column: 25, scope: !19654)
!19666 = !DILocation(line: 60, column: 20, scope: !19654)
!19667 = !DILocation(line: 60, column: 3, scope: !19654)
!19668 = distinct !DISubprogram(name: "rotr32", scope: !19626, file: !19626, line: 67, type: !2285, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19669 = !DILocalVariable(name: "x", arg: 1, scope: !19668, file: !19626, line: 67, type: !1496)
!19670 = !DILocation(line: 67, column: 18, scope: !19668)
!19671 = !DILocalVariable(name: "n", arg: 2, scope: !19668, file: !19626, line: 67, type: !5)
!19672 = !DILocation(line: 67, column: 25, scope: !19668)
!19673 = !DILocation(line: 69, column: 12, scope: !19668)
!19674 = !DILocation(line: 69, column: 17, scope: !19668)
!19675 = !DILocation(line: 69, column: 14, scope: !19668)
!19676 = !DILocation(line: 69, column: 23, scope: !19668)
!19677 = !DILocation(line: 69, column: 34, scope: !19668)
!19678 = !DILocation(line: 69, column: 32, scope: !19668)
!19679 = !DILocation(line: 69, column: 25, scope: !19668)
!19680 = !DILocation(line: 69, column: 20, scope: !19668)
!19681 = !DILocation(line: 69, column: 3, scope: !19668)
!19682 = distinct !DISubprogram(name: "rotl_sz", scope: !19626, file: !19626, line: 76, type: !2287, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19683 = !DILocalVariable(name: "x", arg: 1, scope: !19682, file: !19626, line: 76, type: !52)
!19684 = !DILocation(line: 76, column: 17, scope: !19682)
!19685 = !DILocalVariable(name: "n", arg: 2, scope: !19682, file: !19626, line: 76, type: !5)
!19686 = !DILocation(line: 76, column: 24, scope: !19682)
!19687 = !DILocation(line: 78, column: 12, scope: !19682)
!19688 = !DILocation(line: 78, column: 17, scope: !19682)
!19689 = !DILocation(line: 78, column: 14, scope: !19682)
!19690 = !DILocation(line: 78, column: 23, scope: !19682)
!19691 = !DILocation(line: 78, column: 53, scope: !19682)
!19692 = !DILocation(line: 78, column: 51, scope: !19682)
!19693 = !DILocation(line: 78, column: 25, scope: !19682)
!19694 = !DILocation(line: 78, column: 20, scope: !19682)
!19695 = !DILocation(line: 78, column: 3, scope: !19682)
!19696 = distinct !DISubprogram(name: "rotr_sz", scope: !19626, file: !19626, line: 85, type: !2287, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19697 = !DILocalVariable(name: "x", arg: 1, scope: !19696, file: !19626, line: 85, type: !52)
!19698 = !DILocation(line: 85, column: 17, scope: !19696)
!19699 = !DILocalVariable(name: "n", arg: 2, scope: !19696, file: !19626, line: 85, type: !5)
!19700 = !DILocation(line: 85, column: 24, scope: !19696)
!19701 = !DILocation(line: 87, column: 12, scope: !19696)
!19702 = !DILocation(line: 87, column: 17, scope: !19696)
!19703 = !DILocation(line: 87, column: 14, scope: !19696)
!19704 = !DILocation(line: 87, column: 23, scope: !19696)
!19705 = !DILocation(line: 87, column: 53, scope: !19696)
!19706 = !DILocation(line: 87, column: 51, scope: !19696)
!19707 = !DILocation(line: 87, column: 25, scope: !19696)
!19708 = !DILocation(line: 87, column: 20, scope: !19696)
!19709 = !DILocation(line: 87, column: 3, scope: !19696)
!19710 = distinct !DISubprogram(name: "rotl16", scope: !19626, file: !19626, line: 96, type: !2289, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19711 = !DILocalVariable(name: "x", arg: 1, scope: !19710, file: !19626, line: 96, type: !2291)
!19712 = !DILocation(line: 96, column: 18, scope: !19710)
!19713 = !DILocalVariable(name: "n", arg: 2, scope: !19710, file: !19626, line: 96, type: !5)
!19714 = !DILocation(line: 96, column: 25, scope: !19710)
!19715 = !DILocation(line: 98, column: 27, scope: !19710)
!19716 = !DILocation(line: 98, column: 12, scope: !19710)
!19717 = !DILocation(line: 98, column: 32, scope: !19710)
!19718 = !DILocation(line: 98, column: 29, scope: !19710)
!19719 = !DILocation(line: 98, column: 53, scope: !19710)
!19720 = !DILocation(line: 98, column: 38, scope: !19710)
!19721 = !DILocation(line: 98, column: 64, scope: !19710)
!19722 = !DILocation(line: 98, column: 62, scope: !19710)
!19723 = !DILocation(line: 98, column: 55, scope: !19710)
!19724 = !DILocation(line: 98, column: 35, scope: !19710)
!19725 = !DILocation(line: 99, column: 10, scope: !19710)
!19726 = !DILocation(line: 98, column: 10, scope: !19710)
!19727 = !DILocation(line: 98, column: 3, scope: !19710)
!19728 = distinct !DISubprogram(name: "rotr16", scope: !19626, file: !19626, line: 108, type: !2289, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19729 = !DILocalVariable(name: "x", arg: 1, scope: !19728, file: !19626, line: 108, type: !2291)
!19730 = !DILocation(line: 108, column: 18, scope: !19728)
!19731 = !DILocalVariable(name: "n", arg: 2, scope: !19728, file: !19626, line: 108, type: !5)
!19732 = !DILocation(line: 108, column: 25, scope: !19728)
!19733 = !DILocation(line: 110, column: 27, scope: !19728)
!19734 = !DILocation(line: 110, column: 12, scope: !19728)
!19735 = !DILocation(line: 110, column: 32, scope: !19728)
!19736 = !DILocation(line: 110, column: 29, scope: !19728)
!19737 = !DILocation(line: 110, column: 53, scope: !19728)
!19738 = !DILocation(line: 110, column: 38, scope: !19728)
!19739 = !DILocation(line: 110, column: 64, scope: !19728)
!19740 = !DILocation(line: 110, column: 62, scope: !19728)
!19741 = !DILocation(line: 110, column: 55, scope: !19728)
!19742 = !DILocation(line: 110, column: 35, scope: !19728)
!19743 = !DILocation(line: 111, column: 10, scope: !19728)
!19744 = !DILocation(line: 110, column: 10, scope: !19728)
!19745 = !DILocation(line: 110, column: 3, scope: !19728)
!19746 = distinct !DISubprogram(name: "rotl8", scope: !19626, file: !19626, line: 120, type: !2292, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19747 = !DILocalVariable(name: "x", arg: 1, scope: !19746, file: !19626, line: 120, type: !2294)
!19748 = !DILocation(line: 120, column: 16, scope: !19746)
!19749 = !DILocalVariable(name: "n", arg: 2, scope: !19746, file: !19626, line: 120, type: !5)
!19750 = !DILocation(line: 120, column: 23, scope: !19746)
!19751 = !DILocation(line: 122, column: 27, scope: !19746)
!19752 = !DILocation(line: 122, column: 12, scope: !19746)
!19753 = !DILocation(line: 122, column: 32, scope: !19746)
!19754 = !DILocation(line: 122, column: 29, scope: !19746)
!19755 = !DILocation(line: 122, column: 53, scope: !19746)
!19756 = !DILocation(line: 122, column: 38, scope: !19746)
!19757 = !DILocation(line: 122, column: 63, scope: !19746)
!19758 = !DILocation(line: 122, column: 61, scope: !19746)
!19759 = !DILocation(line: 122, column: 55, scope: !19746)
!19760 = !DILocation(line: 122, column: 35, scope: !19746)
!19761 = !DILocation(line: 122, column: 68, scope: !19746)
!19762 = !DILocation(line: 122, column: 10, scope: !19746)
!19763 = !DILocation(line: 122, column: 3, scope: !19746)
!19764 = distinct !DISubprogram(name: "rotr8", scope: !19626, file: !19626, line: 131, type: !2292, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2280, retainedNodes: !206)
!19765 = !DILocalVariable(name: "x", arg: 1, scope: !19764, file: !19626, line: 131, type: !2294)
!19766 = !DILocation(line: 131, column: 16, scope: !19764)
!19767 = !DILocalVariable(name: "n", arg: 2, scope: !19764, file: !19626, line: 131, type: !5)
!19768 = !DILocation(line: 131, column: 23, scope: !19764)
!19769 = !DILocation(line: 133, column: 27, scope: !19764)
!19770 = !DILocation(line: 133, column: 12, scope: !19764)
!19771 = !DILocation(line: 133, column: 32, scope: !19764)
!19772 = !DILocation(line: 133, column: 29, scope: !19764)
!19773 = !DILocation(line: 133, column: 53, scope: !19764)
!19774 = !DILocation(line: 133, column: 38, scope: !19764)
!19775 = !DILocation(line: 133, column: 63, scope: !19764)
!19776 = !DILocation(line: 133, column: 61, scope: !19764)
!19777 = !DILocation(line: 133, column: 55, scope: !19764)
!19778 = !DILocation(line: 133, column: 35, scope: !19764)
!19779 = !DILocation(line: 133, column: 68, scope: !19764)
!19780 = !DILocation(line: 133, column: 10, scope: !19764)
!19781 = !DILocation(line: 133, column: 3, scope: !19764)
!19782 = distinct !DISubprogram(name: "c_strcasecmp", scope: !19783, file: !19783, line: 27, type: !1888, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2295, retainedNodes: !206)
!19783 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mohamad/clone/coreutils")
!19784 = !DILocalVariable(name: "s1", arg: 1, scope: !19782, file: !19783, line: 27, type: !177)
!19785 = !DILocation(line: 27, column: 27, scope: !19782)
!19786 = !DILocalVariable(name: "s2", arg: 2, scope: !19782, file: !19783, line: 27, type: !177)
!19787 = !DILocation(line: 27, column: 43, scope: !19782)
!19788 = !DILocalVariable(name: "p1", scope: !19782, file: !19783, line: 29, type: !563)
!19789 = !DILocation(line: 29, column: 33, scope: !19782)
!19790 = !DILocation(line: 29, column: 62, scope: !19782)
!19791 = !DILocalVariable(name: "p2", scope: !19782, file: !19783, line: 30, type: !563)
!19792 = !DILocation(line: 30, column: 33, scope: !19782)
!19793 = !DILocation(line: 30, column: 62, scope: !19782)
!19794 = !DILocalVariable(name: "c1", scope: !19782, file: !19783, line: 31, type: !565)
!19795 = !DILocation(line: 31, column: 17, scope: !19782)
!19796 = !DILocalVariable(name: "c2", scope: !19782, file: !19783, line: 31, type: !565)
!19797 = !DILocation(line: 31, column: 21, scope: !19782)
!19798 = !DILocation(line: 33, column: 7, scope: !19799)
!19799 = distinct !DILexicalBlock(scope: !19782, file: !19783, line: 33, column: 7)
!19800 = !DILocation(line: 33, column: 13, scope: !19799)
!19801 = !DILocation(line: 33, column: 10, scope: !19799)
!19802 = !DILocation(line: 33, column: 7, scope: !19782)
!19803 = !DILocation(line: 34, column: 5, scope: !19799)
!19804 = !DILocation(line: 36, column: 3, scope: !19782)
!19805 = !DILocation(line: 38, column: 24, scope: !19806)
!19806 = distinct !DILexicalBlock(scope: !19782, file: !19783, line: 37, column: 5)
!19807 = !DILocation(line: 38, column: 23, scope: !19806)
!19808 = !DILocation(line: 38, column: 12, scope: !19806)
!19809 = !DILocation(line: 38, column: 10, scope: !19806)
!19810 = !DILocation(line: 39, column: 24, scope: !19806)
!19811 = !DILocation(line: 39, column: 23, scope: !19806)
!19812 = !DILocation(line: 39, column: 12, scope: !19806)
!19813 = !DILocation(line: 39, column: 10, scope: !19806)
!19814 = !DILocation(line: 41, column: 11, scope: !19815)
!19815 = distinct !DILexicalBlock(scope: !19806, file: !19783, line: 41, column: 11)
!19816 = !DILocation(line: 41, column: 14, scope: !19815)
!19817 = !DILocation(line: 41, column: 11, scope: !19806)
!19818 = !DILocation(line: 42, column: 9, scope: !19815)
!19819 = !DILocation(line: 44, column: 7, scope: !19806)
!19820 = !DILocation(line: 45, column: 7, scope: !19806)
!19821 = !DILocation(line: 46, column: 5, scope: !19806)
!19822 = !DILocation(line: 47, column: 10, scope: !19782)
!19823 = !DILocation(line: 47, column: 16, scope: !19782)
!19824 = !DILocation(line: 47, column: 13, scope: !19782)
!19825 = distinct !{!19825, !19804, !19826}
!19826 = !DILocation(line: 47, column: 18, scope: !19782)
!19827 = !DILocation(line: 50, column: 12, scope: !19828)
!19828 = distinct !DILexicalBlock(scope: !19782, file: !19783, line: 49, column: 7)
!19829 = !DILocation(line: 50, column: 17, scope: !19828)
!19830 = !DILocation(line: 50, column: 15, scope: !19828)
!19831 = !DILocation(line: 50, column: 5, scope: !19828)
!19832 = !DILocation(line: 56, column: 1, scope: !19782)
!19833 = distinct !DISubprogram(name: "close_stream", scope: !19834, file: !19834, line: 56, type: !2301, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2298, retainedNodes: !206)
!19834 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mohamad/clone/coreutils")
!19835 = !DILocalVariable(name: "stream", arg: 1, scope: !19833, file: !19834, line: 56, type: !2303)
!19836 = !DILocation(line: 56, column: 21, scope: !19833)
!19837 = !DILocalVariable(name: "some_pending", scope: !19833, file: !19834, line: 58, type: !2343)
!19838 = !DILocation(line: 58, column: 14, scope: !19833)
!19839 = !DILocation(line: 58, column: 42, scope: !19833)
!19840 = !DILocation(line: 58, column: 30, scope: !19833)
!19841 = !DILocation(line: 58, column: 50, scope: !19833)
!19842 = !DILocalVariable(name: "prev_fail", scope: !19833, file: !19834, line: 59, type: !2343)
!19843 = !DILocation(line: 59, column: 14, scope: !19833)
!19844 = !DILocation(line: 59, column: 27, scope: !19833)
!19845 = !DILocation(line: 59, column: 43, scope: !19833)
!19846 = !DILocalVariable(name: "fclose_fail", scope: !19833, file: !19834, line: 60, type: !2343)
!19847 = !DILocation(line: 60, column: 14, scope: !19833)
!19848 = !DILocation(line: 60, column: 37, scope: !19833)
!19849 = !DILocation(line: 60, column: 29, scope: !19833)
!19850 = !DILocation(line: 60, column: 45, scope: !19833)
!19851 = !DILocation(line: 70, column: 7, scope: !19852)
!19852 = distinct !DILexicalBlock(scope: !19833, file: !19834, line: 70, column: 7)
!19853 = !DILocation(line: 70, column: 17, scope: !19852)
!19854 = !DILocation(line: 70, column: 21, scope: !19852)
!19855 = !DILocation(line: 70, column: 33, scope: !19852)
!19856 = !DILocation(line: 70, column: 37, scope: !19852)
!19857 = !DILocation(line: 70, column: 50, scope: !19852)
!19858 = !DILocation(line: 70, column: 53, scope: !19852)
!19859 = !DILocation(line: 70, column: 59, scope: !19852)
!19860 = !DILocation(line: 70, column: 7, scope: !19833)
!19861 = !DILocation(line: 72, column: 13, scope: !19862)
!19862 = distinct !DILexicalBlock(scope: !19863, file: !19834, line: 72, column: 11)
!19863 = distinct !DILexicalBlock(scope: !19852, file: !19834, line: 71, column: 5)
!19864 = !DILocation(line: 72, column: 11, scope: !19863)
!19865 = !DILocation(line: 73, column: 9, scope: !19862)
!19866 = !DILocation(line: 73, column: 15, scope: !19862)
!19867 = !DILocation(line: 74, column: 7, scope: !19863)
!19868 = !DILocation(line: 77, column: 3, scope: !19833)
!19869 = !DILocation(line: 78, column: 1, scope: !19833)
!19870 = distinct !DISubprogram(name: "opendir_safer", scope: !19871, file: !19871, line: 31, type: !2347, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2344, retainedNodes: !206)
!19871 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mohamad/clone/coreutils")
!19872 = !DILocalVariable(name: "name", arg: 1, scope: !19870, file: !19871, line: 31, type: !177)
!19873 = !DILocation(line: 31, column: 28, scope: !19870)
!19874 = !DILocalVariable(name: "dp", scope: !19870, file: !19871, line: 33, type: !675)
!19875 = !DILocation(line: 33, column: 8, scope: !19870)
!19876 = !DILocation(line: 33, column: 22, scope: !19870)
!19877 = !DILocation(line: 33, column: 13, scope: !19870)
!19878 = !DILocation(line: 35, column: 7, scope: !19879)
!19879 = distinct !DILexicalBlock(scope: !19870, file: !19871, line: 35, column: 7)
!19880 = !DILocation(line: 35, column: 7, scope: !19870)
!19881 = !DILocalVariable(name: "fd", scope: !19882, file: !19871, line: 37, type: !5)
!19882 = distinct !DILexicalBlock(scope: !19879, file: !19871, line: 36, column: 5)
!19883 = !DILocation(line: 37, column: 11, scope: !19882)
!19884 = !DILocation(line: 37, column: 23, scope: !19882)
!19885 = !DILocation(line: 37, column: 16, scope: !19882)
!19886 = !DILocation(line: 39, column: 16, scope: !19887)
!19887 = distinct !DILexicalBlock(scope: !19882, file: !19871, line: 39, column: 11)
!19888 = !DILocation(line: 39, column: 13, scope: !19887)
!19889 = !DILocation(line: 39, column: 19, scope: !19887)
!19890 = !DILocation(line: 39, column: 22, scope: !19887)
!19891 = !DILocation(line: 39, column: 25, scope: !19887)
!19892 = !DILocation(line: 39, column: 11, scope: !19882)
!19893 = !DILocalVariable(name: "newdp", scope: !19894, file: !19871, line: 49, type: !675)
!19894 = distinct !DILexicalBlock(scope: !19887, file: !19871, line: 40, column: 9)
!19895 = !DILocation(line: 49, column: 16, scope: !19894)
!19896 = !DILocalVariable(name: "e", scope: !19894, file: !19871, line: 50, type: !5)
!19897 = !DILocation(line: 50, column: 15, scope: !19894)
!19898 = !DILocalVariable(name: "f", scope: !19894, file: !19871, line: 52, type: !5)
!19899 = !DILocation(line: 52, column: 15, scope: !19894)
!19900 = !DILocation(line: 52, column: 26, scope: !19894)
!19901 = !DILocation(line: 52, column: 19, scope: !19894)
!19902 = !DILocation(line: 53, column: 15, scope: !19903)
!19903 = distinct !DILexicalBlock(scope: !19894, file: !19871, line: 53, column: 15)
!19904 = !DILocation(line: 53, column: 17, scope: !19903)
!19905 = !DILocation(line: 53, column: 15, scope: !19894)
!19906 = !DILocation(line: 55, column: 19, scope: !19907)
!19907 = distinct !DILexicalBlock(scope: !19903, file: !19871, line: 54, column: 13)
!19908 = !DILocation(line: 55, column: 17, scope: !19907)
!19909 = !DILocation(line: 56, column: 21, scope: !19907)
!19910 = !DILocation(line: 57, column: 13, scope: !19907)
!19911 = !DILocation(line: 60, column: 34, scope: !19912)
!19912 = distinct !DILexicalBlock(scope: !19903, file: !19871, line: 59, column: 13)
!19913 = !DILocation(line: 60, column: 23, scope: !19912)
!19914 = !DILocation(line: 60, column: 21, scope: !19912)
!19915 = !DILocation(line: 61, column: 19, scope: !19912)
!19916 = !DILocation(line: 61, column: 17, scope: !19912)
!19917 = !DILocation(line: 62, column: 21, scope: !19918)
!19918 = distinct !DILexicalBlock(scope: !19912, file: !19871, line: 62, column: 19)
!19919 = !DILocation(line: 62, column: 19, scope: !19912)
!19920 = !DILocation(line: 63, column: 24, scope: !19918)
!19921 = !DILocation(line: 63, column: 17, scope: !19918)
!19922 = !DILocation(line: 69, column: 21, scope: !19894)
!19923 = !DILocation(line: 69, column: 11, scope: !19894)
!19924 = !DILocation(line: 70, column: 19, scope: !19894)
!19925 = !DILocation(line: 70, column: 11, scope: !19894)
!19926 = !DILocation(line: 70, column: 17, scope: !19894)
!19927 = !DILocation(line: 71, column: 16, scope: !19894)
!19928 = !DILocation(line: 71, column: 14, scope: !19894)
!19929 = !DILocation(line: 72, column: 9, scope: !19894)
!19930 = !DILocation(line: 73, column: 5, scope: !19882)
!19931 = !DILocation(line: 75, column: 10, scope: !19870)
!19932 = !DILocation(line: 75, column: 3, scope: !19870)
!19933 = distinct !DISubprogram(name: "gettime", scope: !19934, file: !19934, line: 29, type: !2352, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2349, retainedNodes: !206)
!19934 = !DIFile(filename: "lib/gettime.c", directory: "/home/mohamad/clone/coreutils")
!19935 = !DILocalVariable(name: "ts", arg: 1, scope: !19933, file: !19934, line: 29, type: !2354)
!19936 = !DILocation(line: 29, column: 27, scope: !19933)
!19937 = !DILocation(line: 32, column: 34, scope: !19933)
!19938 = !DILocation(line: 32, column: 3, scope: !19933)
!19939 = !DILocation(line: 39, column: 1, scope: !19933)
!19940 = distinct !DISubprogram(name: "current_timespec", scope: !19934, file: !19934, line: 44, type: !2359, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2349, retainedNodes: !206)
!19941 = !DILocalVariable(name: "ts", scope: !19940, file: !19934, line: 46, type: !2355)
!19942 = !DILocation(line: 46, column: 19, scope: !19940)
!19943 = !DILocation(line: 47, column: 3, scope: !19940)
!19944 = !DILocation(line: 48, column: 3, scope: !19940)
!19945 = distinct !DISubprogram(name: "hard_locale", scope: !19946, file: !19946, line: 38, type: !253, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2361, retainedNodes: !206)
!19946 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mohamad/clone/coreutils")
!19947 = !DILocalVariable(name: "category", arg: 1, scope: !19945, file: !19946, line: 38, type: !5)
!19948 = !DILocation(line: 38, column: 18, scope: !19945)
!19949 = !DILocalVariable(name: "hard", scope: !19945, file: !19946, line: 40, type: !139)
!19950 = !DILocation(line: 40, column: 8, scope: !19945)
!19951 = !DILocalVariable(name: "p", scope: !19945, file: !19946, line: 41, type: !177)
!19952 = !DILocation(line: 41, column: 15, scope: !19945)
!19953 = !DILocation(line: 41, column: 30, scope: !19945)
!19954 = !DILocation(line: 41, column: 19, scope: !19945)
!19955 = !DILocation(line: 43, column: 7, scope: !19956)
!19956 = distinct !DILexicalBlock(scope: !19945, file: !19946, line: 43, column: 7)
!19957 = !DILocation(line: 43, column: 7, scope: !19945)
!19958 = !DILocation(line: 47, column: 23, scope: !19959)
!19959 = distinct !DILexicalBlock(scope: !19960, file: !19946, line: 47, column: 15)
!19960 = distinct !DILexicalBlock(scope: !19961, file: !19946, line: 46, column: 9)
!19961 = distinct !DILexicalBlock(scope: !19962, file: !19946, line: 45, column: 11)
!19962 = distinct !DILexicalBlock(scope: !19956, file: !19946, line: 44, column: 5)
!19963 = !DILocation(line: 47, column: 15, scope: !19959)
!19964 = !DILocation(line: 47, column: 31, scope: !19959)
!19965 = !DILocation(line: 47, column: 36, scope: !19959)
!19966 = !DILocation(line: 47, column: 47, scope: !19959)
!19967 = !DILocation(line: 47, column: 39, scope: !19959)
!19968 = !DILocation(line: 47, column: 59, scope: !19959)
!19969 = !DILocation(line: 47, column: 15, scope: !19960)
!19970 = !DILocation(line: 48, column: 18, scope: !19959)
!19971 = !DILocation(line: 48, column: 13, scope: !19959)
!19972 = !DILocation(line: 69, column: 5, scope: !19962)
!19973 = !DILocation(line: 71, column: 10, scope: !19945)
!19974 = !DILocation(line: 71, column: 3, scope: !19945)
!19975 = distinct !DISubprogram(name: "hash_pjw", scope: !19976, file: !19976, line: 31, type: !615, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2364, retainedNodes: !206)
!19976 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mohamad/clone/coreutils")
!19977 = !DILocalVariable(name: "x", arg: 1, scope: !19975, file: !19976, line: 31, type: !525)
!19978 = !DILocation(line: 31, column: 23, scope: !19975)
!19979 = !DILocalVariable(name: "tablesize", arg: 2, scope: !19975, file: !19976, line: 31, type: !52)
!19980 = !DILocation(line: 31, column: 33, scope: !19975)
!19981 = !DILocalVariable(name: "s", scope: !19975, file: !19976, line: 33, type: !177)
!19982 = !DILocation(line: 33, column: 15, scope: !19975)
!19983 = !DILocalVariable(name: "h", scope: !19975, file: !19976, line: 34, type: !52)
!19984 = !DILocation(line: 34, column: 10, scope: !19975)
!19985 = !DILocation(line: 36, column: 12, scope: !19986)
!19986 = distinct !DILexicalBlock(scope: !19975, file: !19976, line: 36, column: 3)
!19987 = !DILocation(line: 36, column: 10, scope: !19986)
!19988 = !DILocation(line: 36, column: 8, scope: !19986)
!19989 = !DILocation(line: 36, column: 16, scope: !19990)
!19990 = distinct !DILexicalBlock(scope: !19986, file: !19976, line: 36, column: 3)
!19991 = !DILocation(line: 36, column: 15, scope: !19990)
!19992 = !DILocation(line: 36, column: 3, scope: !19986)
!19993 = !DILocation(line: 37, column: 10, scope: !19990)
!19994 = !DILocation(line: 37, column: 9, scope: !19990)
!19995 = !DILocation(line: 37, column: 16, scope: !19990)
!19996 = !DILocation(line: 37, column: 18, scope: !19990)
!19997 = !DILocation(line: 37, column: 27, scope: !19990)
!19998 = !DILocation(line: 37, column: 29, scope: !19990)
!19999 = !DILocation(line: 37, column: 24, scope: !19990)
!20000 = !DILocation(line: 37, column: 12, scope: !19990)
!20001 = !DILocation(line: 37, column: 7, scope: !19990)
!20002 = !DILocation(line: 37, column: 5, scope: !19990)
!20003 = !DILocation(line: 36, column: 20, scope: !19990)
!20004 = !DILocation(line: 36, column: 3, scope: !19990)
!20005 = distinct !{!20005, !19992, !20006}
!20006 = !DILocation(line: 37, column: 48, scope: !19986)
!20007 = !DILocation(line: 39, column: 10, scope: !19975)
!20008 = !DILocation(line: 39, column: 14, scope: !19975)
!20009 = !DILocation(line: 39, column: 12, scope: !19975)
!20010 = !DILocation(line: 39, column: 3, scope: !19975)
!20011 = distinct !DISubprogram(name: "locale_charset", scope: !20012, file: !20012, line: 826, type: !2370, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2367, retainedNodes: !206)
!20012 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mohamad/clone/coreutils")
!20013 = !DILocalVariable(name: "codeset", scope: !20011, file: !20012, line: 828, type: !177)
!20014 = !DILocation(line: 828, column: 15, scope: !20011)
!20015 = !DILocation(line: 835, column: 13, scope: !20011)
!20016 = !DILocation(line: 835, column: 11, scope: !20011)
!20017 = !DILocation(line: 893, column: 7, scope: !20018)
!20018 = distinct !DILexicalBlock(scope: !20011, file: !20012, line: 893, column: 7)
!20019 = !DILocation(line: 893, column: 15, scope: !20018)
!20020 = !DILocation(line: 893, column: 7, scope: !20011)
!20021 = !DILocation(line: 895, column: 13, scope: !20018)
!20022 = !DILocation(line: 895, column: 5, scope: !20018)
!20023 = !DILocation(line: 1051, column: 13, scope: !20024)
!20024 = distinct !DILexicalBlock(scope: !20025, file: !20012, line: 1051, column: 13)
!20025 = distinct !DILexicalBlock(scope: !20026, file: !20012, line: 1041, column: 7)
!20026 = distinct !DILexicalBlock(scope: !20011, file: !20012, line: 1000, column: 3)
!20027 = !DILocation(line: 1051, column: 24, scope: !20024)
!20028 = !DILocation(line: 1051, column: 13, scope: !20025)
!20029 = !DILocation(line: 1052, column: 19, scope: !20024)
!20030 = !DILocation(line: 1052, column: 11, scope: !20024)
!20031 = !DILocation(line: 1139, column: 10, scope: !20011)
!20032 = !DILocation(line: 1139, column: 3, scope: !20011)
!20033 = distinct !DISubprogram(name: "dirchownmod", scope: !20034, file: !20034, line: 61, type: !2374, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2371, retainedNodes: !206)
!20034 = !DIFile(filename: "lib/dirchownmod.c", directory: "/home/mohamad/clone/coreutils")
!20035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !277, line: 46, size: 1152, elements: !20036)
!20036 = !{!20037, !20038, !20039, !20040, !20041, !20042, !20043, !20044, !20045, !20046, !20047, !20048, !20053, !20054, !20055}
!20037 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !20035, file: !277, line: 48, baseType: !280, size: 64)
!20038 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !20035, file: !277, line: 53, baseType: !282, size: 64, offset: 64)
!20039 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !20035, file: !277, line: 61, baseType: !284, size: 64, offset: 128)
!20040 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !20035, file: !277, line: 62, baseType: !137, size: 32, offset: 192)
!20041 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !20035, file: !277, line: 64, baseType: !125, size: 32, offset: 224)
!20042 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !20035, file: !277, line: 65, baseType: !127, size: 32, offset: 256)
!20043 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !20035, file: !277, line: 67, baseType: !5, size: 32, offset: 288)
!20044 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !20035, file: !277, line: 69, baseType: !280, size: 64, offset: 320)
!20045 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !20035, file: !277, line: 74, baseType: !30, size: 64, offset: 384)
!20046 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !20035, file: !277, line: 78, baseType: !292, size: 64, offset: 448)
!20047 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !20035, file: !277, line: 80, baseType: !294, size: 64, offset: 512)
!20048 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !20035, file: !277, line: 91, baseType: !20049, size: 128, offset: 576)
!20049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !297, line: 120, size: 128, elements: !20050)
!20050 = !{!20051, !20052}
!20051 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20049, file: !297, line: 122, baseType: !300, size: 64)
!20052 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !20049, file: !297, line: 123, baseType: !302, size: 64, offset: 64)
!20053 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !20035, file: !277, line: 92, baseType: !20049, size: 128, offset: 704)
!20054 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !20035, file: !277, line: 93, baseType: !20049, size: 128, offset: 832)
!20055 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !20035, file: !277, line: 106, baseType: !306, size: 192, offset: 960)
!20056 = !DILocalVariable(name: "fd", arg: 1, scope: !20033, file: !20034, line: 61, type: !5)
!20057 = !DILocation(line: 61, column: 18, scope: !20033)
!20058 = !DILocalVariable(name: "dir", arg: 2, scope: !20033, file: !20034, line: 61, type: !177)
!20059 = !DILocation(line: 61, column: 34, scope: !20033)
!20060 = !DILocalVariable(name: "mkdir_mode", arg: 3, scope: !20033, file: !20034, line: 61, type: !136)
!20061 = !DILocation(line: 61, column: 46, scope: !20033)
!20062 = !DILocalVariable(name: "owner", arg: 4, scope: !20033, file: !20034, line: 62, type: !124)
!20063 = !DILocation(line: 62, column: 20, scope: !20033)
!20064 = !DILocalVariable(name: "group", arg: 5, scope: !20033, file: !20034, line: 62, type: !126)
!20065 = !DILocation(line: 62, column: 33, scope: !20033)
!20066 = !DILocalVariable(name: "mode", arg: 6, scope: !20033, file: !20034, line: 63, type: !136)
!20067 = !DILocation(line: 63, column: 21, scope: !20033)
!20068 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !20033, file: !20034, line: 63, type: !136)
!20069 = !DILocation(line: 63, column: 34, scope: !20033)
!20070 = !DILocalVariable(name: "st", scope: !20033, file: !20034, line: 65, type: !20035)
!20071 = !DILocation(line: 65, column: 15, scope: !20033)
!20072 = !DILocalVariable(name: "result", scope: !20033, file: !20034, line: 66, type: !5)
!20073 = !DILocation(line: 66, column: 7, scope: !20033)
!20074 = !DILocation(line: 66, column: 17, scope: !20033)
!20075 = !DILocation(line: 66, column: 20, scope: !20033)
!20076 = !DILocation(line: 66, column: 32, scope: !20033)
!20077 = !DILocation(line: 66, column: 26, scope: !20033)
!20078 = !DILocation(line: 66, column: 51, scope: !20033)
!20079 = !DILocation(line: 66, column: 44, scope: !20033)
!20080 = !DILocation(line: 68, column: 7, scope: !20081)
!20081 = distinct !DILexicalBlock(scope: !20033, file: !20034, line: 68, column: 7)
!20082 = !DILocation(line: 68, column: 14, scope: !20081)
!20083 = !DILocation(line: 68, column: 7, scope: !20033)
!20084 = !DILocalVariable(name: "dir_mode", scope: !20085, file: !20034, line: 70, type: !136)
!20085 = distinct !DILexicalBlock(scope: !20081, file: !20034, line: 69, column: 5)
!20086 = !DILocation(line: 70, column: 14, scope: !20085)
!20087 = !DILocation(line: 70, column: 28, scope: !20085)
!20088 = !DILocation(line: 76, column: 13, scope: !20089)
!20089 = distinct !DILexicalBlock(scope: !20085, file: !20034, line: 76, column: 11)
!20090 = !DILocation(line: 76, column: 11, scope: !20085)
!20091 = !DILocation(line: 78, column: 11, scope: !20092)
!20092 = distinct !DILexicalBlock(scope: !20089, file: !20034, line: 77, column: 9)
!20093 = !DILocation(line: 78, column: 17, scope: !20092)
!20094 = !DILocation(line: 79, column: 18, scope: !20092)
!20095 = !DILocation(line: 80, column: 9, scope: !20092)
!20096 = !DILocalVariable(name: "indeterminate", scope: !20097, file: !20034, line: 87, type: !136)
!20097 = distinct !DILexicalBlock(scope: !20089, file: !20034, line: 82, column: 9)
!20098 = !DILocation(line: 87, column: 18, scope: !20097)
!20099 = !DILocation(line: 94, column: 16, scope: !20100)
!20100 = distinct !DILexicalBlock(scope: !20097, file: !20034, line: 94, column: 15)
!20101 = !DILocation(line: 94, column: 22, scope: !20100)
!20102 = !DILocation(line: 94, column: 36, scope: !20100)
!20103 = !DILocation(line: 94, column: 39, scope: !20100)
!20104 = !DILocation(line: 94, column: 51, scope: !20100)
!20105 = !DILocation(line: 94, column: 45, scope: !20100)
!20106 = !DILocation(line: 95, column: 15, scope: !20100)
!20107 = !DILocation(line: 95, column: 19, scope: !20100)
!20108 = !DILocation(line: 95, column: 25, scope: !20100)
!20109 = !DILocation(line: 95, column: 39, scope: !20100)
!20110 = !DILocation(line: 95, column: 42, scope: !20100)
!20111 = !DILocation(line: 95, column: 54, scope: !20100)
!20112 = !DILocation(line: 95, column: 48, scope: !20100)
!20113 = !DILocation(line: 94, column: 15, scope: !20097)
!20114 = !DILocation(line: 97, column: 30, scope: !20115)
!20115 = distinct !DILexicalBlock(scope: !20100, file: !20034, line: 96, column: 13)
!20116 = !DILocation(line: 97, column: 27, scope: !20115)
!20117 = !DILocation(line: 97, column: 25, scope: !20115)
!20118 = !DILocation(line: 98, column: 35, scope: !20115)
!20119 = !DILocation(line: 98, column: 39, scope: !20115)
!20120 = !DILocation(line: 98, column: 46, scope: !20115)
!20121 = !DILocation(line: 98, column: 27, scope: !20115)
!20122 = !DILocation(line: 99, column: 27, scope: !20115)
!20123 = !DILocation(line: 99, column: 38, scope: !20115)
!20124 = !DILocation(line: 100, column: 35, scope: !20115)
!20125 = !DILocation(line: 100, column: 40, scope: !20115)
!20126 = !DILocation(line: 100, column: 47, scope: !20115)
!20127 = !DILocation(line: 100, column: 27, scope: !20115)
!20128 = !DILocation(line: 101, column: 34, scope: !20115)
!20129 = !DILocation(line: 101, column: 39, scope: !20115)
!20130 = !DILocation(line: 101, column: 46, scope: !20115)
!20131 = !DILocation(line: 101, column: 27, scope: !20115)
!20132 = !DILocation(line: 97, column: 22, scope: !20115)
!20133 = !DILocation(line: 108, column: 19, scope: !20134)
!20134 = distinct !DILexicalBlock(scope: !20115, file: !20034, line: 108, column: 19)
!20135 = !DILocation(line: 108, column: 26, scope: !20134)
!20136 = !DILocation(line: 108, column: 31, scope: !20134)
!20137 = !DILocation(line: 108, column: 35, scope: !20134)
!20138 = !DILocation(line: 108, column: 44, scope: !20134)
!20139 = !DILocation(line: 108, column: 19, scope: !20115)
!20140 = !DILocation(line: 109, column: 33, scope: !20134)
!20141 = !DILocation(line: 109, column: 42, scope: !20134)
!20142 = !DILocation(line: 109, column: 31, scope: !20134)
!20143 = !DILocation(line: 109, column: 17, scope: !20134)
!20144 = !DILocation(line: 110, column: 13, scope: !20115)
!20145 = !DILocation(line: 115, column: 15, scope: !20146)
!20146 = distinct !DILexicalBlock(scope: !20097, file: !20034, line: 115, column: 15)
!20147 = !DILocation(line: 115, column: 22, scope: !20146)
!20148 = !DILocation(line: 115, column: 27, scope: !20146)
!20149 = !DILocation(line: 115, column: 33, scope: !20146)
!20150 = !DILocation(line: 115, column: 44, scope: !20146)
!20151 = !DILocation(line: 115, column: 42, scope: !20146)
!20152 = !DILocation(line: 115, column: 52, scope: !20146)
!20153 = !DILocation(line: 115, column: 50, scope: !20146)
!20154 = !DILocation(line: 115, column: 69, scope: !20146)
!20155 = !DILocation(line: 115, column: 67, scope: !20146)
!20156 = !DILocation(line: 115, column: 15, scope: !20097)
!20157 = !DILocalVariable(name: "chmod_mode", scope: !20158, file: !20034, line: 117, type: !136)
!20158 = distinct !DILexicalBlock(scope: !20146, file: !20034, line: 116, column: 13)
!20159 = !DILocation(line: 117, column: 22, scope: !20158)
!20160 = !DILocation(line: 118, column: 17, scope: !20158)
!20161 = !DILocation(line: 118, column: 25, scope: !20158)
!20162 = !DILocation(line: 118, column: 34, scope: !20158)
!20163 = !DILocation(line: 118, column: 55, scope: !20158)
!20164 = !DILocation(line: 118, column: 54, scope: !20158)
!20165 = !DILocation(line: 118, column: 52, scope: !20158)
!20166 = !DILocation(line: 118, column: 22, scope: !20158)
!20167 = !DILocation(line: 119, column: 45, scope: !20158)
!20168 = !DILocation(line: 119, column: 42, scope: !20158)
!20169 = !DILocation(line: 119, column: 25, scope: !20158)
!20170 = !DILocation(line: 120, column: 35, scope: !20158)
!20171 = !DILocation(line: 120, column: 39, scope: !20158)
!20172 = !DILocation(line: 120, column: 27, scope: !20158)
!20173 = !DILocation(line: 121, column: 27, scope: !20158)
!20174 = !DILocation(line: 121, column: 38, scope: !20158)
!20175 = !DILocation(line: 122, column: 35, scope: !20158)
!20176 = !DILocation(line: 122, column: 40, scope: !20158)
!20177 = !DILocation(line: 122, column: 27, scope: !20158)
!20178 = !DILocation(line: 123, column: 34, scope: !20158)
!20179 = !DILocation(line: 123, column: 39, scope: !20158)
!20180 = !DILocation(line: 123, column: 27, scope: !20158)
!20181 = !DILocation(line: 119, column: 22, scope: !20158)
!20182 = !DILocation(line: 124, column: 13, scope: !20158)
!20183 = !DILocation(line: 126, column: 5, scope: !20085)
!20184 = !DILocation(line: 128, column: 12, scope: !20185)
!20185 = distinct !DILexicalBlock(scope: !20033, file: !20034, line: 128, column: 7)
!20186 = !DILocation(line: 128, column: 9, scope: !20185)
!20187 = !DILocation(line: 128, column: 7, scope: !20033)
!20188 = !DILocation(line: 130, column: 11, scope: !20189)
!20189 = distinct !DILexicalBlock(scope: !20190, file: !20034, line: 130, column: 11)
!20190 = distinct !DILexicalBlock(scope: !20185, file: !20034, line: 129, column: 5)
!20191 = !DILocation(line: 130, column: 18, scope: !20189)
!20192 = !DILocation(line: 130, column: 11, scope: !20190)
!20193 = !DILocation(line: 131, column: 25, scope: !20189)
!20194 = !DILocation(line: 131, column: 18, scope: !20189)
!20195 = !DILocation(line: 131, column: 16, scope: !20189)
!20196 = !DILocation(line: 131, column: 9, scope: !20189)
!20197 = !DILocalVariable(name: "e", scope: !20198, file: !20034, line: 134, type: !5)
!20198 = distinct !DILexicalBlock(scope: !20189, file: !20034, line: 133, column: 9)
!20199 = !DILocation(line: 134, column: 15, scope: !20198)
!20200 = !DILocation(line: 134, column: 19, scope: !20198)
!20201 = !DILocation(line: 135, column: 18, scope: !20198)
!20202 = !DILocation(line: 135, column: 11, scope: !20198)
!20203 = !DILocation(line: 136, column: 19, scope: !20198)
!20204 = !DILocation(line: 136, column: 11, scope: !20198)
!20205 = !DILocation(line: 136, column: 17, scope: !20198)
!20206 = !DILocation(line: 138, column: 5, scope: !20190)
!20207 = !DILocation(line: 140, column: 10, scope: !20033)
!20208 = !DILocation(line: 140, column: 3, scope: !20033)
!20209 = distinct !DISubprogram(name: "openat_safer", scope: !20210, file: !20210, line: 29, type: !20211, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2376, retainedNodes: !206)
!20210 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mohamad/clone/coreutils")
!20211 = !DISubroutineType(types: !20212)
!20212 = !{!5, !5, !177, !5, null}
!20213 = !DILocalVariable(name: "fd", arg: 1, scope: !20209, file: !20210, line: 29, type: !5)
!20214 = !DILocation(line: 29, column: 19, scope: !20209)
!20215 = !DILocalVariable(name: "file", arg: 2, scope: !20209, file: !20210, line: 29, type: !177)
!20216 = !DILocation(line: 29, column: 35, scope: !20209)
!20217 = !DILocalVariable(name: "flags", arg: 3, scope: !20209, file: !20210, line: 29, type: !5)
!20218 = !DILocation(line: 29, column: 45, scope: !20209)
!20219 = !DILocalVariable(name: "mode", scope: !20209, file: !20210, line: 31, type: !136)
!20220 = !DILocation(line: 31, column: 10, scope: !20209)
!20221 = !DILocation(line: 33, column: 7, scope: !20222)
!20222 = distinct !DILexicalBlock(scope: !20209, file: !20210, line: 33, column: 7)
!20223 = !DILocation(line: 33, column: 13, scope: !20222)
!20224 = !DILocation(line: 33, column: 7, scope: !20209)
!20225 = !DILocalVariable(name: "ap", scope: !20226, file: !20210, line: 35, type: !2381)
!20226 = distinct !DILexicalBlock(scope: !20222, file: !20210, line: 34, column: 5)
!20227 = !DILocation(line: 35, column: 15, scope: !20226)
!20228 = !DILocation(line: 36, column: 7, scope: !20226)
!20229 = !DILocation(line: 40, column: 14, scope: !20226)
!20230 = !DILocation(line: 40, column: 12, scope: !20226)
!20231 = !DILocation(line: 42, column: 7, scope: !20226)
!20232 = !DILocation(line: 43, column: 5, scope: !20226)
!20233 = !DILocation(line: 45, column: 28, scope: !20209)
!20234 = !DILocation(line: 45, column: 32, scope: !20209)
!20235 = !DILocation(line: 45, column: 38, scope: !20209)
!20236 = !DILocation(line: 45, column: 45, scope: !20209)
!20237 = !DILocation(line: 45, column: 20, scope: !20209)
!20238 = !DILocation(line: 45, column: 10, scope: !20209)
!20239 = !DILocation(line: 45, column: 3, scope: !20209)
!20240 = distinct !DISubprogram(name: "randint_new", scope: !2397, file: !2397, line: 71, type: !2393, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !206)
!20241 = !DILocalVariable(name: "source", arg: 1, scope: !20240, file: !2397, line: 71, type: !2400)
!20242 = !DILocation(line: 71, column: 38, scope: !20240)
!20243 = !DILocalVariable(name: "s", scope: !20240, file: !2397, line: 73, type: !2395)
!20244 = !DILocation(line: 73, column: 26, scope: !20240)
!20245 = !DILocation(line: 73, column: 30, scope: !20240)
!20246 = !DILocation(line: 74, column: 15, scope: !20240)
!20247 = !DILocation(line: 74, column: 3, scope: !20240)
!20248 = !DILocation(line: 74, column: 6, scope: !20240)
!20249 = !DILocation(line: 74, column: 13, scope: !20240)
!20250 = !{!20251, !2669, i64 0}
!20251 = !{!"randint_source", !2669, i64 0, !2936, i64 8, !2936, i64 16}
!20252 = !DILocation(line: 75, column: 16, scope: !20240)
!20253 = !DILocation(line: 75, column: 19, scope: !20240)
!20254 = !DILocation(line: 75, column: 27, scope: !20240)
!20255 = !{!20251, !2936, i64 16}
!20256 = !DILocation(line: 75, column: 3, scope: !20240)
!20257 = !DILocation(line: 75, column: 6, scope: !20240)
!20258 = !DILocation(line: 75, column: 14, scope: !20240)
!20259 = !{!20251, !2936, i64 8}
!20260 = !DILocation(line: 76, column: 10, scope: !20240)
!20261 = !DILocation(line: 76, column: 3, scope: !20240)
!20262 = distinct !DISubprogram(name: "randint_all_new", scope: !2397, file: !2397, line: 84, type: !2406, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !206)
!20263 = !DILocalVariable(name: "name", arg: 1, scope: !20262, file: !2397, line: 84, type: !177)
!20264 = !DILocation(line: 84, column: 30, scope: !20262)
!20265 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20262, file: !2397, line: 84, type: !52)
!20266 = !DILocation(line: 84, column: 43, scope: !20262)
!20267 = !DILocalVariable(name: "source", scope: !20262, file: !2397, line: 86, type: !2400)
!20268 = !DILocation(line: 86, column: 27, scope: !20262)
!20269 = !DILocation(line: 86, column: 50, scope: !20262)
!20270 = !DILocation(line: 86, column: 56, scope: !20262)
!20271 = !DILocation(line: 86, column: 36, scope: !20262)
!20272 = !DILocalVariable(name: "s", scope: !20262, file: !2397, line: 87, type: !2395)
!20273 = !DILocation(line: 87, column: 26, scope: !20262)
!20274 = !DILocation(line: 87, column: 43, scope: !20262)
!20275 = !DILocation(line: 87, column: 30, scope: !20262)
!20276 = !DILocation(line: 88, column: 12, scope: !20262)
!20277 = !DILocation(line: 88, column: 15, scope: !20262)
!20278 = !DILocation(line: 88, column: 3, scope: !20262)
!20279 = !DILocation(line: 89, column: 10, scope: !20262)
!20280 = !DILocation(line: 89, column: 3, scope: !20262)
!20281 = distinct !DISubprogram(name: "randint_get_source", scope: !2397, file: !2397, line: 95, type: !2408, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !206)
!20282 = !DILocalVariable(name: "s", arg: 1, scope: !20281, file: !2397, line: 95, type: !2410)
!20283 = !DILocation(line: 95, column: 50, scope: !20281)
!20284 = !DILocation(line: 97, column: 10, scope: !20281)
!20285 = !DILocation(line: 97, column: 13, scope: !20281)
!20286 = !DILocation(line: 97, column: 3, scope: !20281)
!20287 = distinct !DISubprogram(name: "randint_genmax", scope: !2397, file: !2397, line: 116, type: !2412, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !206)
!20288 = !DILocalVariable(name: "s", arg: 1, scope: !20287, file: !2397, line: 116, type: !2395)
!20289 = !DILocation(line: 116, column: 40, scope: !20287)
!20290 = !DILocalVariable(name: "genmax", arg: 2, scope: !20287, file: !2397, line: 116, type: !2404)
!20291 = !DILocation(line: 116, column: 51, scope: !20287)
!20292 = !DILocalVariable(name: "source", scope: !20287, file: !2397, line: 118, type: !2400)
!20293 = !DILocation(line: 118, column: 27, scope: !20287)
!20294 = !DILocation(line: 118, column: 36, scope: !20287)
!20295 = !DILocation(line: 118, column: 39, scope: !20287)
!20296 = !DILocalVariable(name: "randnum", scope: !20287, file: !2397, line: 119, type: !2404)
!20297 = !DILocation(line: 119, column: 11, scope: !20287)
!20298 = !DILocation(line: 119, column: 21, scope: !20287)
!20299 = !DILocation(line: 119, column: 24, scope: !20287)
!20300 = !DILocalVariable(name: "randmax", scope: !20287, file: !2397, line: 120, type: !2404)
!20301 = !DILocation(line: 120, column: 11, scope: !20287)
!20302 = !DILocation(line: 120, column: 21, scope: !20287)
!20303 = !DILocation(line: 120, column: 24, scope: !20287)
!20304 = !DILocalVariable(name: "choices", scope: !20287, file: !2397, line: 121, type: !2404)
!20305 = !DILocation(line: 121, column: 11, scope: !20287)
!20306 = !DILocation(line: 121, column: 21, scope: !20287)
!20307 = !DILocation(line: 121, column: 28, scope: !20287)
!20308 = !DILocation(line: 123, column: 3, scope: !20287)
!20309 = !DILocation(line: 125, column: 11, scope: !20310)
!20310 = distinct !DILexicalBlock(scope: !20311, file: !2397, line: 125, column: 11)
!20311 = distinct !DILexicalBlock(scope: !20287, file: !2397, line: 124, column: 5)
!20312 = !DILocation(line: 125, column: 21, scope: !20310)
!20313 = !DILocation(line: 125, column: 19, scope: !20310)
!20314 = !DILocation(line: 125, column: 11, scope: !20311)
!20315 = !DILocalVariable(name: "i", scope: !20316, file: !2397, line: 130, type: !52)
!20316 = distinct !DILexicalBlock(scope: !20310, file: !2397, line: 126, column: 9)
!20317 = !DILocation(line: 130, column: 18, scope: !20316)
!20318 = !DILocalVariable(name: "rmax", scope: !20316, file: !2397, line: 131, type: !2404)
!20319 = !DILocation(line: 131, column: 19, scope: !20316)
!20320 = !DILocation(line: 131, column: 26, scope: !20316)
!20321 = !DILocalVariable(name: "buf", scope: !20316, file: !2397, line: 132, type: !2414)
!20322 = !DILocation(line: 132, column: 25, scope: !20316)
!20323 = !DILocation(line: 134, column: 11, scope: !20316)
!20324 = !DILocation(line: 136, column: 34, scope: !20325)
!20325 = distinct !DILexicalBlock(scope: !20316, file: !2397, line: 135, column: 13)
!20326 = !DILocation(line: 136, column: 22, scope: !20325)
!20327 = !DILocation(line: 136, column: 40, scope: !20325)
!20328 = !DILocation(line: 136, column: 20, scope: !20325)
!20329 = !DILocation(line: 137, column: 16, scope: !20325)
!20330 = !DILocation(line: 138, column: 13, scope: !20325)
!20331 = !DILocation(line: 139, column: 18, scope: !20316)
!20332 = !DILocation(line: 139, column: 25, scope: !20316)
!20333 = !DILocation(line: 139, column: 23, scope: !20316)
!20334 = distinct !{!20334, !20323, !20335}
!20335 = !DILocation(line: 139, column: 31, scope: !20316)
!20336 = !DILocation(line: 141, column: 21, scope: !20316)
!20337 = !DILocation(line: 141, column: 29, scope: !20316)
!20338 = !DILocation(line: 141, column: 34, scope: !20316)
!20339 = !DILocation(line: 141, column: 11, scope: !20316)
!20340 = !DILocation(line: 150, column: 13, scope: !20316)
!20341 = !DILocation(line: 152, column: 11, scope: !20316)
!20342 = !DILocation(line: 154, column: 37, scope: !20343)
!20343 = distinct !DILexicalBlock(scope: !20316, file: !2397, line: 153, column: 13)
!20344 = !DILocation(line: 154, column: 25, scope: !20343)
!20345 = !DILocation(line: 154, column: 52, scope: !20343)
!20346 = !DILocation(line: 154, column: 48, scope: !20343)
!20347 = !DILocation(line: 154, column: 46, scope: !20343)
!20348 = !DILocation(line: 154, column: 23, scope: !20343)
!20349 = !DILocation(line: 155, column: 37, scope: !20343)
!20350 = !DILocation(line: 155, column: 25, scope: !20343)
!20351 = !DILocation(line: 155, column: 46, scope: !20343)
!20352 = !DILocation(line: 155, column: 23, scope: !20343)
!20353 = !DILocation(line: 156, column: 16, scope: !20343)
!20354 = !DILocation(line: 157, column: 13, scope: !20343)
!20355 = !DILocation(line: 158, column: 18, scope: !20316)
!20356 = !DILocation(line: 158, column: 28, scope: !20316)
!20357 = !DILocation(line: 158, column: 26, scope: !20316)
!20358 = distinct !{!20358, !20341, !20359}
!20359 = !DILocation(line: 158, column: 34, scope: !20316)
!20360 = !DILocation(line: 159, column: 9, scope: !20316)
!20361 = !DILocation(line: 161, column: 11, scope: !20362)
!20362 = distinct !DILexicalBlock(scope: !20311, file: !2397, line: 161, column: 11)
!20363 = !DILocation(line: 161, column: 22, scope: !20362)
!20364 = !DILocation(line: 161, column: 19, scope: !20362)
!20365 = !DILocation(line: 161, column: 11, scope: !20311)
!20366 = !DILocation(line: 163, column: 24, scope: !20367)
!20367 = distinct !DILexicalBlock(scope: !20362, file: !2397, line: 162, column: 9)
!20368 = !DILocation(line: 163, column: 27, scope: !20367)
!20369 = !DILocation(line: 163, column: 35, scope: !20367)
!20370 = !DILocation(line: 163, column: 11, scope: !20367)
!20371 = !DILocation(line: 163, column: 14, scope: !20367)
!20372 = !DILocation(line: 163, column: 22, scope: !20367)
!20373 = !DILocation(line: 164, column: 18, scope: !20367)
!20374 = !DILocation(line: 164, column: 11, scope: !20367)
!20375 = !DILocalVariable(name: "excess_choices", scope: !20376, file: !2397, line: 178, type: !2404)
!20376 = distinct !DILexicalBlock(scope: !20362, file: !2397, line: 167, column: 9)
!20377 = !DILocation(line: 178, column: 19, scope: !20376)
!20378 = !DILocation(line: 178, column: 36, scope: !20376)
!20379 = !DILocation(line: 178, column: 46, scope: !20376)
!20380 = !DILocation(line: 178, column: 44, scope: !20376)
!20381 = !DILocalVariable(name: "unusable_choices", scope: !20376, file: !2397, line: 179, type: !2404)
!20382 = !DILocation(line: 179, column: 19, scope: !20376)
!20383 = !DILocation(line: 179, column: 38, scope: !20376)
!20384 = !DILocation(line: 179, column: 55, scope: !20376)
!20385 = !DILocation(line: 179, column: 53, scope: !20376)
!20386 = !DILocalVariable(name: "last_usable_choice", scope: !20376, file: !2397, line: 180, type: !2404)
!20387 = !DILocation(line: 180, column: 19, scope: !20376)
!20388 = !DILocation(line: 180, column: 40, scope: !20376)
!20389 = !DILocation(line: 180, column: 50, scope: !20376)
!20390 = !DILocation(line: 180, column: 48, scope: !20376)
!20391 = !DILocalVariable(name: "reduced_randnum", scope: !20376, file: !2397, line: 181, type: !2404)
!20392 = !DILocation(line: 181, column: 19, scope: !20376)
!20393 = !DILocation(line: 181, column: 37, scope: !20376)
!20394 = !DILocation(line: 181, column: 47, scope: !20376)
!20395 = !DILocation(line: 181, column: 45, scope: !20376)
!20396 = !DILocation(line: 183, column: 15, scope: !20397)
!20397 = distinct !DILexicalBlock(scope: !20376, file: !2397, line: 183, column: 15)
!20398 = !DILocation(line: 183, column: 26, scope: !20397)
!20399 = !DILocation(line: 183, column: 23, scope: !20397)
!20400 = !DILocation(line: 183, column: 15, scope: !20376)
!20401 = !DILocation(line: 185, column: 28, scope: !20402)
!20402 = distinct !DILexicalBlock(scope: !20397, file: !2397, line: 184, column: 13)
!20403 = !DILocation(line: 185, column: 38, scope: !20402)
!20404 = !DILocation(line: 185, column: 36, scope: !20402)
!20405 = !DILocation(line: 185, column: 15, scope: !20402)
!20406 = !DILocation(line: 185, column: 18, scope: !20402)
!20407 = !DILocation(line: 185, column: 26, scope: !20402)
!20408 = !DILocation(line: 186, column: 28, scope: !20402)
!20409 = !DILocation(line: 186, column: 45, scope: !20402)
!20410 = !DILocation(line: 186, column: 43, scope: !20402)
!20411 = !DILocation(line: 186, column: 15, scope: !20402)
!20412 = !DILocation(line: 186, column: 18, scope: !20402)
!20413 = !DILocation(line: 186, column: 26, scope: !20402)
!20414 = !DILocation(line: 187, column: 22, scope: !20402)
!20415 = !DILocation(line: 187, column: 15, scope: !20402)
!20416 = !DILocation(line: 192, column: 21, scope: !20376)
!20417 = !DILocation(line: 192, column: 19, scope: !20376)
!20418 = !DILocation(line: 193, column: 21, scope: !20376)
!20419 = !DILocation(line: 193, column: 38, scope: !20376)
!20420 = !DILocation(line: 193, column: 19, scope: !20376)
!20421 = distinct !{!20421, !20308, !20422}
!20422 = !DILocation(line: 195, column: 5, scope: !20287)
!20423 = !DILocation(line: 196, column: 1, scope: !20287)
!20424 = distinct !DISubprogram(name: "shift_left", scope: !2397, file: !2397, line: 106, type: !2419, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2390, retainedNodes: !206)
!20425 = !DILocalVariable(name: "x", arg: 1, scope: !20424, file: !2397, line: 106, type: !2404)
!20426 = !DILocation(line: 106, column: 43, scope: !20424)
!20427 = !DILocation(line: 108, column: 27, scope: !20424)
!20428 = !DILocation(line: 108, column: 29, scope: !20424)
!20429 = !DILocation(line: 108, column: 3, scope: !20424)
!20430 = distinct !DISubprogram(name: "randint_free", scope: !2397, file: !2397, line: 201, type: !2415, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !206)
!20431 = !DILocalVariable(name: "s", arg: 1, scope: !20430, file: !2397, line: 201, type: !2395)
!20432 = !DILocation(line: 201, column: 38, scope: !20430)
!20433 = !DILocation(line: 203, column: 19, scope: !20430)
!20434 = !DILocation(line: 203, column: 3, scope: !20430)
!20435 = !DILocation(line: 204, column: 9, scope: !20430)
!20436 = !DILocation(line: 204, column: 3, scope: !20430)
!20437 = !DILocation(line: 205, column: 1, scope: !20430)
!20438 = distinct !DISubprogram(name: "randint_all_free", scope: !2397, file: !2397, line: 211, type: !2417, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2390, retainedNodes: !206)
!20439 = !DILocalVariable(name: "s", arg: 1, scope: !20438, file: !2397, line: 211, type: !2395)
!20440 = !DILocation(line: 211, column: 42, scope: !20438)
!20441 = !DILocalVariable(name: "r", scope: !20438, file: !2397, line: 213, type: !5)
!20442 = !DILocation(line: 213, column: 7, scope: !20438)
!20443 = !DILocation(line: 213, column: 26, scope: !20438)
!20444 = !DILocation(line: 213, column: 29, scope: !20438)
!20445 = !DILocation(line: 213, column: 11, scope: !20438)
!20446 = !DILocalVariable(name: "e", scope: !20438, file: !2397, line: 214, type: !5)
!20447 = !DILocation(line: 214, column: 7, scope: !20438)
!20448 = !DILocation(line: 214, column: 11, scope: !20438)
!20449 = !DILocation(line: 215, column: 17, scope: !20438)
!20450 = !DILocation(line: 215, column: 3, scope: !20438)
!20451 = !DILocation(line: 216, column: 11, scope: !20438)
!20452 = !DILocation(line: 216, column: 3, scope: !20438)
!20453 = !DILocation(line: 216, column: 9, scope: !20438)
!20454 = !DILocation(line: 217, column: 10, scope: !20438)
!20455 = !DILocation(line: 217, column: 3, scope: !20438)
!20456 = distinct !DISubprogram(name: "randread_new", scope: !2428, file: !2428, line: 204, type: !2424, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20457 = !DILocalVariable(name: "name", arg: 1, scope: !20456, file: !2428, line: 204, type: !177)
!20458 = !DILocation(line: 204, column: 27, scope: !20456)
!20459 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20456, file: !2428, line: 204, type: !52)
!20460 = !DILocation(line: 204, column: 40, scope: !20456)
!20461 = !DILocation(line: 206, column: 7, scope: !20462)
!20462 = distinct !DILexicalBlock(scope: !20456, file: !2428, line: 206, column: 7)
!20463 = !DILocation(line: 206, column: 19, scope: !20462)
!20464 = !DILocation(line: 206, column: 7, scope: !20456)
!20465 = !DILocation(line: 207, column: 12, scope: !20462)
!20466 = !DILocation(line: 207, column: 5, scope: !20462)
!20467 = !DILocalVariable(name: "source", scope: !20468, file: !2428, line: 210, type: !2431)
!20468 = distinct !DILexicalBlock(scope: !20462, file: !2428, line: 209, column: 5)
!20469 = !DILocation(line: 210, column: 13, scope: !20468)
!20470 = !DILocalVariable(name: "s", scope: !20468, file: !2428, line: 211, type: !2426)
!20471 = !DILocation(line: 211, column: 31, scope: !20468)
!20472 = !DILocation(line: 213, column: 11, scope: !20473)
!20473 = distinct !DILexicalBlock(scope: !20468, file: !2428, line: 213, column: 11)
!20474 = !DILocation(line: 213, column: 11, scope: !20468)
!20475 = !DILocation(line: 214, column: 38, scope: !20476)
!20476 = distinct !DILexicalBlock(scope: !20473, file: !2428, line: 214, column: 13)
!20477 = !DILocation(line: 214, column: 25, scope: !20476)
!20478 = !DILocation(line: 214, column: 23, scope: !20476)
!20479 = !DILocation(line: 214, column: 13, scope: !20473)
!20480 = !DILocation(line: 215, column: 11, scope: !20476)
!20481 = !DILocation(line: 214, column: 49, scope: !20476)
!20482 = !DILocation(line: 217, column: 23, scope: !20468)
!20483 = !DILocation(line: 217, column: 31, scope: !20468)
!20484 = !DILocation(line: 217, column: 11, scope: !20468)
!20485 = !DILocation(line: 217, column: 9, scope: !20468)
!20486 = !DILocation(line: 219, column: 11, scope: !20487)
!20487 = distinct !DILexicalBlock(scope: !20468, file: !2428, line: 219, column: 11)
!20488 = !DILocation(line: 219, column: 11, scope: !20468)
!20489 = !DILocation(line: 220, column: 18, scope: !20487)
!20490 = !DILocation(line: 220, column: 26, scope: !20487)
!20491 = !DILocation(line: 220, column: 29, scope: !20487)
!20492 = !DILocation(line: 220, column: 33, scope: !20487)
!20493 = !DILocation(line: 220, column: 44, scope: !20487)
!20494 = !DILocation(line: 220, column: 9, scope: !20487)
!20495 = !DILocation(line: 223, column: 11, scope: !20496)
!20496 = distinct !DILexicalBlock(scope: !20487, file: !2428, line: 222, column: 9)
!20497 = !DILocation(line: 223, column: 14, scope: !20496)
!20498 = !DILocation(line: 223, column: 18, scope: !20496)
!20499 = !DILocation(line: 223, column: 24, scope: !20496)
!20500 = !DILocation(line: 223, column: 33, scope: !20496)
!20501 = !DILocation(line: 224, column: 22, scope: !20496)
!20502 = !DILocation(line: 224, column: 25, scope: !20496)
!20503 = !DILocation(line: 224, column: 29, scope: !20496)
!20504 = !DILocation(line: 224, column: 35, scope: !20496)
!20505 = !DILocation(line: 224, column: 41, scope: !20496)
!20506 = !DILocation(line: 225, column: 22, scope: !20496)
!20507 = !DILocation(line: 224, column: 11, scope: !20496)
!20508 = !DILocation(line: 226, column: 24, scope: !20496)
!20509 = !DILocation(line: 226, column: 27, scope: !20496)
!20510 = !DILocation(line: 226, column: 31, scope: !20496)
!20511 = !DILocation(line: 226, column: 37, scope: !20496)
!20512 = !DILocation(line: 226, column: 11, scope: !20496)
!20513 = !DILocation(line: 229, column: 14, scope: !20468)
!20514 = !DILocation(line: 229, column: 7, scope: !20468)
!20515 = !DILocation(line: 231, column: 1, scope: !20456)
!20516 = distinct !DISubprogram(name: "simple_new", scope: !2428, file: !2428, line: 137, type: !2511, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20517 = !DILocalVariable(name: "source", arg: 1, scope: !20516, file: !2428, line: 137, type: !2431)
!20518 = !DILocation(line: 137, column: 19, scope: !20516)
!20519 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !20516, file: !2428, line: 137, type: !525)
!20520 = !DILocation(line: 137, column: 39, scope: !20516)
!20521 = !DILocalVariable(name: "s", scope: !20516, file: !2428, line: 139, type: !2426)
!20522 = !DILocation(line: 139, column: 27, scope: !20516)
!20523 = !DILocation(line: 139, column: 31, scope: !20516)
!20524 = !DILocation(line: 140, column: 15, scope: !20516)
!20525 = !DILocation(line: 140, column: 3, scope: !20516)
!20526 = !DILocation(line: 140, column: 6, scope: !20516)
!20527 = !DILocation(line: 140, column: 13, scope: !20516)
!20528 = !{!20529, !2669, i64 0}
!20529 = !{!"randread_source", !2669, i64 0, !2669, i64 8, !2669, i64 16, !2657, i64 24}
!20530 = !DILocation(line: 141, column: 3, scope: !20516)
!20531 = !DILocation(line: 141, column: 6, scope: !20516)
!20532 = !DILocation(line: 141, column: 14, scope: !20516)
!20533 = !{!20529, !2669, i64 8}
!20534 = !DILocation(line: 142, column: 20, scope: !20516)
!20535 = !DILocation(line: 142, column: 3, scope: !20516)
!20536 = !DILocation(line: 142, column: 6, scope: !20516)
!20537 = !DILocation(line: 142, column: 18, scope: !20516)
!20538 = !{!20529, !2669, i64 16}
!20539 = !DILocation(line: 143, column: 10, scope: !20516)
!20540 = !DILocation(line: 143, column: 3, scope: !20516)
!20541 = distinct !DISubprogram(name: "get_nonce", scope: !2428, file: !2428, line: 151, type: !2513, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1277, line: 30, size: 128, elements: !20543)
!20543 = !{!20544, !20545}
!20544 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20542, file: !1277, line: 32, baseType: !300, size: 64)
!20545 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !20542, file: !1277, line: 33, baseType: !1281, size: 64, offset: 64)
!20546 = !DILocalVariable(name: "buffer", arg: 1, scope: !20541, file: !2428, line: 151, type: !47)
!20547 = !DILocation(line: 151, column: 18, scope: !20541)
!20548 = !DILocalVariable(name: "bufsize", arg: 2, scope: !20541, file: !2428, line: 151, type: !52)
!20549 = !DILocation(line: 151, column: 33, scope: !20541)
!20550 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !20541, file: !2428, line: 151, type: !52)
!20551 = !DILocation(line: 151, column: 49, scope: !20541)
!20552 = !DILocalVariable(name: "buf", scope: !20541, file: !2428, line: 153, type: !7)
!20553 = !DILocation(line: 153, column: 9, scope: !20541)
!20554 = !DILocation(line: 153, column: 15, scope: !20541)
!20555 = !DILocalVariable(name: "seeded", scope: !20541, file: !2428, line: 154, type: !674)
!20556 = !DILocation(line: 154, column: 11, scope: !20541)
!20557 = !DILocalVariable(name: "fd", scope: !20541, file: !2428, line: 157, type: !5)
!20558 = !DILocation(line: 157, column: 7, scope: !20541)
!20559 = !DILocation(line: 157, column: 12, scope: !20541)
!20560 = !DILocation(line: 158, column: 12, scope: !20561)
!20561 = distinct !DILexicalBlock(scope: !20541, file: !2428, line: 158, column: 7)
!20562 = !DILocation(line: 158, column: 9, scope: !20561)
!20563 = !DILocation(line: 158, column: 7, scope: !20541)
!20564 = !DILocation(line: 160, column: 22, scope: !20565)
!20565 = distinct !DILexicalBlock(scope: !20561, file: !2428, line: 159, column: 5)
!20566 = !DILocation(line: 160, column: 26, scope: !20565)
!20567 = !DILocation(line: 160, column: 31, scope: !20565)
!20568 = !DILocation(line: 160, column: 16, scope: !20565)
!20569 = !DILocation(line: 160, column: 14, scope: !20565)
!20570 = !DILocation(line: 161, column: 11, scope: !20571)
!20571 = distinct !DILexicalBlock(scope: !20565, file: !2428, line: 161, column: 11)
!20572 = !DILocation(line: 161, column: 18, scope: !20571)
!20573 = !DILocation(line: 161, column: 11, scope: !20565)
!20574 = !DILocation(line: 162, column: 16, scope: !20571)
!20575 = !DILocation(line: 162, column: 9, scope: !20571)
!20576 = !DILocation(line: 163, column: 14, scope: !20565)
!20577 = !DILocation(line: 163, column: 7, scope: !20565)
!20578 = !DILocation(line: 164, column: 5, scope: !20565)
!20579 = !DILocation(line: 177, column: 3, scope: !20580)
!20580 = distinct !DILexicalBlock(scope: !20541, file: !2428, line: 177, column: 3)
!20581 = !DILocation(line: 177, column: 3, scope: !20541)
!20582 = !DILocalVariable(name: "v", scope: !20583, file: !2428, line: 177, type: !20542)
!20583 = distinct !DILexicalBlock(scope: !20580, file: !2428, line: 177, column: 3)
!20584 = !DILocation(line: 177, column: 3, scope: !20583)
!20585 = !DILocalVariable(name: "nbytes", scope: !20583, file: !2428, line: 177, type: !52)
!20586 = !DILocation(line: 178, column: 3, scope: !20587)
!20587 = distinct !DILexicalBlock(scope: !20541, file: !2428, line: 178, column: 3)
!20588 = !DILocation(line: 178, column: 3, scope: !20541)
!20589 = !DILocalVariable(name: "v", scope: !20590, file: !2428, line: 178, type: !108)
!20590 = distinct !DILexicalBlock(scope: !20587, file: !2428, line: 178, column: 3)
!20591 = !DILocation(line: 178, column: 3, scope: !20590)
!20592 = !DILocalVariable(name: "nbytes", scope: !20590, file: !2428, line: 178, type: !52)
!20593 = !DILocation(line: 179, column: 3, scope: !20594)
!20594 = distinct !DILexicalBlock(scope: !20541, file: !2428, line: 179, column: 3)
!20595 = !DILocation(line: 179, column: 3, scope: !20541)
!20596 = !DILocalVariable(name: "v", scope: !20597, file: !2428, line: 179, type: !108)
!20597 = distinct !DILexicalBlock(scope: !20594, file: !2428, line: 179, column: 3)
!20598 = !DILocation(line: 179, column: 3, scope: !20597)
!20599 = !DILocalVariable(name: "nbytes", scope: !20597, file: !2428, line: 179, type: !52)
!20600 = !DILocation(line: 180, column: 3, scope: !20601)
!20601 = distinct !DILexicalBlock(scope: !20541, file: !2428, line: 180, column: 3)
!20602 = !DILocation(line: 180, column: 3, scope: !20541)
!20603 = !DILocalVariable(name: "v", scope: !20604, file: !2428, line: 180, type: !124)
!20604 = distinct !DILexicalBlock(scope: !20601, file: !2428, line: 180, column: 3)
!20605 = !DILocation(line: 180, column: 3, scope: !20604)
!20606 = !DILocalVariable(name: "nbytes", scope: !20604, file: !2428, line: 180, type: !52)
!20607 = !DILocation(line: 181, column: 3, scope: !20608)
!20608 = distinct !DILexicalBlock(scope: !20541, file: !2428, line: 181, column: 3)
!20609 = !DILocation(line: 181, column: 3, scope: !20541)
!20610 = !DILocalVariable(name: "v", scope: !20611, file: !2428, line: 181, type: !124)
!20611 = distinct !DILexicalBlock(scope: !20608, file: !2428, line: 181, column: 3)
!20612 = !DILocation(line: 181, column: 3, scope: !20611)
!20613 = !DILocalVariable(name: "nbytes", scope: !20611, file: !2428, line: 181, type: !52)
!20614 = !DILocation(line: 189, column: 1, scope: !20541)
!20615 = distinct !DISubprogram(name: "randread_error", scope: !2428, file: !2428, line: 124, type: !2473, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20616 = !DILocalVariable(name: "file_name", arg: 1, scope: !20615, file: !2428, line: 124, type: !525)
!20617 = !DILocation(line: 124, column: 29, scope: !20615)
!20618 = !DILocation(line: 126, column: 7, scope: !20619)
!20619 = distinct !DILexicalBlock(scope: !20615, file: !2428, line: 126, column: 7)
!20620 = !DILocation(line: 126, column: 7, scope: !20615)
!20621 = !DILocation(line: 127, column: 12, scope: !20619)
!20622 = !DILocation(line: 127, column: 26, scope: !20619)
!20623 = !DILocation(line: 128, column: 12, scope: !20619)
!20624 = !DILocation(line: 128, column: 18, scope: !20619)
!20625 = !DILocation(line: 128, column: 25, scope: !20619)
!20626 = !DILocation(line: 128, column: 48, scope: !20619)
!20627 = !DILocation(line: 129, column: 19, scope: !20619)
!20628 = !DILocation(line: 129, column: 12, scope: !20619)
!20629 = !DILocation(line: 127, column: 5, scope: !20619)
!20630 = !DILocation(line: 130, column: 3, scope: !20615)
!20631 = distinct !DISubprogram(name: "randread_set_handler", scope: !2428, file: !2428, line: 242, type: !2503, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20632 = !DILocalVariable(name: "s", arg: 1, scope: !20631, file: !2428, line: 242, type: !2426)
!20633 = !DILocation(line: 242, column: 47, scope: !20631)
!20634 = !DILocalVariable(name: "handler", arg: 2, scope: !20631, file: !2428, line: 242, type: !2472)
!20635 = !DILocation(line: 242, column: 57, scope: !20631)
!20636 = !DILocation(line: 244, column: 16, scope: !20631)
!20637 = !DILocation(line: 244, column: 3, scope: !20631)
!20638 = !DILocation(line: 244, column: 6, scope: !20631)
!20639 = !DILocation(line: 244, column: 14, scope: !20631)
!20640 = !DILocation(line: 245, column: 1, scope: !20631)
!20641 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !2428, file: !2428, line: 248, type: !2505, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20642 = !DILocalVariable(name: "s", arg: 1, scope: !20641, file: !2428, line: 248, type: !2426)
!20643 = !DILocation(line: 248, column: 51, scope: !20641)
!20644 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !20641, file: !2428, line: 248, type: !525)
!20645 = !DILocation(line: 248, column: 66, scope: !20641)
!20646 = !DILocation(line: 250, column: 20, scope: !20641)
!20647 = !DILocation(line: 250, column: 3, scope: !20641)
!20648 = !DILocation(line: 250, column: 6, scope: !20641)
!20649 = !DILocation(line: 250, column: 18, scope: !20641)
!20650 = !DILocation(line: 251, column: 1, scope: !20641)
!20651 = distinct !DISubprogram(name: "randread", scope: !2428, file: !2428, line: 326, type: !2507, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20652 = !DILocalVariable(name: "s", arg: 1, scope: !20651, file: !2428, line: 326, type: !2426)
!20653 = !DILocation(line: 326, column: 35, scope: !20651)
!20654 = !DILocalVariable(name: "buf", arg: 2, scope: !20651, file: !2428, line: 326, type: !47)
!20655 = !DILocation(line: 326, column: 44, scope: !20651)
!20656 = !DILocalVariable(name: "size", arg: 3, scope: !20651, file: !2428, line: 326, type: !52)
!20657 = !DILocation(line: 326, column: 56, scope: !20651)
!20658 = !DILocation(line: 328, column: 7, scope: !20659)
!20659 = distinct !DILexicalBlock(scope: !20651, file: !2428, line: 328, column: 7)
!20660 = !DILocation(line: 328, column: 10, scope: !20659)
!20661 = !DILocation(line: 328, column: 7, scope: !20651)
!20662 = !DILocation(line: 329, column: 17, scope: !20659)
!20663 = !DILocation(line: 329, column: 20, scope: !20659)
!20664 = !DILocation(line: 329, column: 25, scope: !20659)
!20665 = !DILocation(line: 329, column: 5, scope: !20659)
!20666 = !DILocation(line: 331, column: 17, scope: !20659)
!20667 = !DILocation(line: 331, column: 20, scope: !20659)
!20668 = !DILocation(line: 331, column: 24, scope: !20659)
!20669 = !DILocation(line: 331, column: 31, scope: !20659)
!20670 = !DILocation(line: 331, column: 36, scope: !20659)
!20671 = !DILocation(line: 331, column: 5, scope: !20659)
!20672 = !DILocation(line: 332, column: 1, scope: !20651)
!20673 = distinct !DISubprogram(name: "readsource", scope: !2428, file: !2428, line: 258, type: !2515, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20674 = !DILocalVariable(name: "s", arg: 1, scope: !20673, file: !2428, line: 258, type: !2426)
!20675 = !DILocation(line: 258, column: 37, scope: !20673)
!20676 = !DILocalVariable(name: "p", arg: 2, scope: !20673, file: !2428, line: 258, type: !2517)
!20677 = !DILocation(line: 258, column: 55, scope: !20673)
!20678 = !DILocalVariable(name: "size", arg: 3, scope: !20673, file: !2428, line: 258, type: !52)
!20679 = !DILocation(line: 258, column: 65, scope: !20673)
!20680 = !DILocation(line: 260, column: 3, scope: !20673)
!20681 = !DILocalVariable(name: "inbytes", scope: !20682, file: !2428, line: 262, type: !52)
!20682 = distinct !DILexicalBlock(scope: !20673, file: !2428, line: 261, column: 5)
!20683 = !DILocation(line: 262, column: 14, scope: !20682)
!20684 = !DILocation(line: 262, column: 24, scope: !20682)
!20685 = !DILocalVariable(name: "fread_errno", scope: !20682, file: !2428, line: 263, type: !5)
!20686 = !DILocation(line: 263, column: 11, scope: !20682)
!20687 = !DILocation(line: 263, column: 25, scope: !20682)
!20688 = !DILocation(line: 264, column: 12, scope: !20682)
!20689 = !DILocation(line: 264, column: 9, scope: !20682)
!20690 = !DILocation(line: 265, column: 15, scope: !20682)
!20691 = !DILocation(line: 265, column: 12, scope: !20682)
!20692 = !DILocation(line: 266, column: 11, scope: !20693)
!20693 = distinct !DILexicalBlock(scope: !20682, file: !2428, line: 266, column: 11)
!20694 = !DILocation(line: 266, column: 16, scope: !20693)
!20695 = !DILocation(line: 266, column: 11, scope: !20682)
!20696 = !DILocation(line: 267, column: 9, scope: !20693)
!20697 = !DILocation(line: 268, column: 16, scope: !20682)
!20698 = !DILocation(line: 268, column: 37, scope: !20682)
!20699 = !DILocation(line: 268, column: 7, scope: !20682)
!20700 = !DILocation(line: 268, column: 13, scope: !20682)
!20701 = !DILocation(line: 269, column: 7, scope: !20682)
!20702 = !DILocation(line: 269, column: 10, scope: !20682)
!20703 = !DILocation(line: 269, column: 19, scope: !20682)
!20704 = !DILocation(line: 269, column: 22, scope: !20682)
!20705 = distinct !{!20705, !20680, !20706}
!20706 = !DILocation(line: 270, column: 5, scope: !20673)
!20707 = !DILocation(line: 271, column: 1, scope: !20673)
!20708 = distinct !DISubprogram(name: "readisaac", scope: !2428, file: !2428, line: 278, type: !2518, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20709 = !DILocalVariable(name: "isaac", arg: 1, scope: !20708, file: !2428, line: 278, type: !2520)
!20710 = !DILocation(line: 278, column: 26, scope: !20708)
!20711 = !DILocalVariable(name: "p", arg: 2, scope: !20708, file: !2428, line: 278, type: !47)
!20712 = !DILocation(line: 278, column: 39, scope: !20708)
!20713 = !DILocalVariable(name: "size", arg: 3, scope: !20708, file: !2428, line: 278, type: !52)
!20714 = !DILocation(line: 278, column: 49, scope: !20708)
!20715 = !DILocalVariable(name: "inbytes", scope: !20708, file: !2428, line: 280, type: !52)
!20716 = !DILocation(line: 280, column: 10, scope: !20708)
!20717 = !DILocation(line: 280, column: 20, scope: !20708)
!20718 = !DILocation(line: 280, column: 27, scope: !20708)
!20719 = !{!20720, !2936, i64 0}
!20720 = !{!"isaac", !2936, i64 0, !20721, i64 8, !2657, i64 2080}
!20721 = !{!"isaac_state", !2657, i64 0, !2936, i64 2048, !2936, i64 2056, !2936, i64 2064}
!20722 = !DILocation(line: 282, column: 3, scope: !20708)
!20723 = !DILocalVariable(name: "char_p", scope: !20724, file: !2428, line: 284, type: !7)
!20724 = distinct !DILexicalBlock(scope: !20708, file: !2428, line: 283, column: 5)
!20725 = !DILocation(line: 284, column: 13, scope: !20724)
!20726 = !DILocation(line: 284, column: 22, scope: !20724)
!20727 = !DILocation(line: 286, column: 11, scope: !20728)
!20728 = distinct !DILexicalBlock(scope: !20724, file: !2428, line: 286, column: 11)
!20729 = !DILocation(line: 286, column: 19, scope: !20728)
!20730 = !DILocation(line: 286, column: 16, scope: !20728)
!20731 = !DILocation(line: 286, column: 11, scope: !20724)
!20732 = !DILocation(line: 288, column: 19, scope: !20733)
!20733 = distinct !DILexicalBlock(scope: !20728, file: !2428, line: 287, column: 9)
!20734 = !DILocation(line: 288, column: 22, scope: !20733)
!20735 = !DILocation(line: 288, column: 29, scope: !20733)
!20736 = !DILocation(line: 288, column: 34, scope: !20733)
!20737 = !DILocation(line: 288, column: 36, scope: !20733)
!20738 = !DILocation(line: 288, column: 52, scope: !20733)
!20739 = !DILocation(line: 288, column: 50, scope: !20733)
!20740 = !DILocation(line: 288, column: 61, scope: !20733)
!20741 = !DILocation(line: 288, column: 11, scope: !20733)
!20742 = !DILocation(line: 289, column: 29, scope: !20733)
!20743 = !DILocation(line: 289, column: 39, scope: !20733)
!20744 = !DILocation(line: 289, column: 37, scope: !20733)
!20745 = !DILocation(line: 289, column: 11, scope: !20733)
!20746 = !DILocation(line: 289, column: 18, scope: !20733)
!20747 = !DILocation(line: 289, column: 27, scope: !20733)
!20748 = !DILocation(line: 290, column: 11, scope: !20733)
!20749 = !DILocation(line: 293, column: 15, scope: !20724)
!20750 = !DILocation(line: 293, column: 18, scope: !20724)
!20751 = !DILocation(line: 293, column: 25, scope: !20724)
!20752 = !DILocation(line: 293, column: 30, scope: !20724)
!20753 = !DILocation(line: 293, column: 32, scope: !20724)
!20754 = !DILocation(line: 293, column: 48, scope: !20724)
!20755 = !DILocation(line: 293, column: 46, scope: !20724)
!20756 = !DILocation(line: 293, column: 57, scope: !20724)
!20757 = !DILocation(line: 293, column: 7, scope: !20724)
!20758 = !DILocation(line: 294, column: 11, scope: !20724)
!20759 = !DILocation(line: 294, column: 20, scope: !20724)
!20760 = !DILocation(line: 294, column: 18, scope: !20724)
!20761 = !DILocation(line: 294, column: 9, scope: !20724)
!20762 = !DILocation(line: 295, column: 15, scope: !20724)
!20763 = !DILocation(line: 295, column: 12, scope: !20724)
!20764 = !DILocation(line: 299, column: 11, scope: !20765)
!20765 = distinct !DILexicalBlock(scope: !20724, file: !2428, line: 299, column: 11)
!20766 = !DILocation(line: 299, column: 11, scope: !20724)
!20767 = !DILocalVariable(name: "wp", scope: !20768, file: !2428, line: 301, type: !2521)
!20768 = distinct !DILexicalBlock(scope: !20765, file: !2428, line: 300, column: 9)
!20769 = !DILocation(line: 301, column: 23, scope: !20768)
!20770 = !DILocation(line: 301, column: 28, scope: !20768)
!20771 = !DILocation(line: 302, column: 11, scope: !20768)
!20772 = !DILocation(line: 302, column: 33, scope: !20768)
!20773 = !DILocation(line: 302, column: 30, scope: !20768)
!20774 = !DILocation(line: 304, column: 30, scope: !20775)
!20775 = distinct !DILexicalBlock(scope: !20768, file: !2428, line: 303, column: 13)
!20776 = !DILocation(line: 304, column: 37, scope: !20775)
!20777 = !DILocation(line: 304, column: 44, scope: !20775)
!20778 = !DILocation(line: 304, column: 15, scope: !20775)
!20779 = !DILocation(line: 305, column: 18, scope: !20775)
!20780 = !DILocation(line: 306, column: 20, scope: !20775)
!20781 = !DILocation(line: 307, column: 19, scope: !20782)
!20782 = distinct !DILexicalBlock(scope: !20775, file: !2428, line: 307, column: 19)
!20783 = !DILocation(line: 307, column: 24, scope: !20782)
!20784 = !DILocation(line: 307, column: 19, scope: !20775)
!20785 = !DILocation(line: 309, column: 19, scope: !20786)
!20786 = distinct !DILexicalBlock(scope: !20782, file: !2428, line: 308, column: 17)
!20787 = !DILocation(line: 309, column: 26, scope: !20786)
!20788 = !DILocation(line: 309, column: 35, scope: !20786)
!20789 = !DILocation(line: 310, column: 19, scope: !20786)
!20790 = distinct !{!20790, !20771, !20791}
!20791 = !DILocation(line: 312, column: 13, scope: !20768)
!20792 = !DILocation(line: 313, column: 15, scope: !20768)
!20793 = !DILocation(line: 313, column: 13, scope: !20768)
!20794 = !DILocation(line: 314, column: 9, scope: !20768)
!20795 = !DILocation(line: 316, column: 22, scope: !20724)
!20796 = !DILocation(line: 316, column: 29, scope: !20724)
!20797 = !DILocation(line: 316, column: 36, scope: !20724)
!20798 = !DILocation(line: 316, column: 43, scope: !20724)
!20799 = !DILocation(line: 316, column: 48, scope: !20724)
!20800 = !DILocation(line: 316, column: 7, scope: !20724)
!20801 = !DILocation(line: 317, column: 15, scope: !20724)
!20802 = distinct !{!20802, !20722, !20803}
!20803 = !DILocation(line: 318, column: 5, scope: !20708)
!20804 = !DILocation(line: 319, column: 1, scope: !20708)
!20805 = distinct !DISubprogram(name: "randread_free", scope: !2428, file: !2428, line: 341, type: !2509, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2421, retainedNodes: !206)
!20806 = !DILocalVariable(name: "s", arg: 1, scope: !20805, file: !2428, line: 341, type: !2426)
!20807 = !DILocation(line: 341, column: 40, scope: !20805)
!20808 = !DILocalVariable(name: "source", scope: !20805, file: !2428, line: 343, type: !2431)
!20809 = !DILocation(line: 343, column: 9, scope: !20805)
!20810 = !DILocation(line: 343, column: 18, scope: !20805)
!20811 = !DILocation(line: 343, column: 21, scope: !20805)
!20812 = !DILocation(line: 344, column: 19, scope: !20805)
!20813 = !DILocation(line: 344, column: 3, scope: !20805)
!20814 = !DILocation(line: 345, column: 9, scope: !20805)
!20815 = !DILocation(line: 345, column: 3, scope: !20805)
!20816 = !DILocation(line: 346, column: 11, scope: !20805)
!20817 = !DILocation(line: 346, column: 28, scope: !20805)
!20818 = !DILocation(line: 346, column: 20, scope: !20805)
!20819 = !DILocation(line: 346, column: 3, scope: !20805)
!20820 = distinct !DISubprogram(name: "isaac_refill", scope: !20821, file: !20821, line: 90, type: !2525, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2522, retainedNodes: !206)
!20821 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mohamad/clone/coreutils")
!20822 = !DILocalVariable(name: "s", arg: 1, scope: !20820, file: !20821, line: 90, type: !2527)
!20823 = !DILocation(line: 90, column: 35, scope: !20820)
!20824 = !DILocalVariable(name: "result", arg: 2, scope: !20820, file: !20821, line: 90, type: !2521)
!20825 = !DILocation(line: 90, column: 49, scope: !20820)
!20826 = !DILocalVariable(name: "a", scope: !20820, file: !20821, line: 93, type: !2490)
!20827 = !DILocation(line: 93, column: 14, scope: !20820)
!20828 = !DILocation(line: 93, column: 18, scope: !20820)
!20829 = !DILocation(line: 93, column: 21, scope: !20820)
!20830 = !{!20721, !2936, i64 2048}
!20831 = !DILocalVariable(name: "b", scope: !20820, file: !20821, line: 94, type: !2490)
!20832 = !DILocation(line: 94, column: 14, scope: !20820)
!20833 = !DILocation(line: 94, column: 18, scope: !20820)
!20834 = !DILocation(line: 94, column: 21, scope: !20820)
!20835 = !{!20721, !2936, i64 2056}
!20836 = !DILocation(line: 94, column: 28, scope: !20820)
!20837 = !DILocation(line: 94, column: 31, scope: !20820)
!20838 = !DILocation(line: 94, column: 26, scope: !20820)
!20839 = !{!20721, !2936, i64 2064}
!20840 = !DILocation(line: 94, column: 23, scope: !20820)
!20841 = !DILocalVariable(name: "m", scope: !20820, file: !20821, line: 97, type: !2521)
!20842 = !DILocation(line: 97, column: 15, scope: !20820)
!20843 = !DILocation(line: 97, column: 19, scope: !20820)
!20844 = !DILocation(line: 97, column: 22, scope: !20820)
!20845 = !DILocalVariable(name: "r", scope: !20820, file: !20821, line: 98, type: !2521)
!20846 = !DILocation(line: 98, column: 15, scope: !20820)
!20847 = !DILocation(line: 98, column: 19, scope: !20820)
!20848 = !DILocation(line: 116, column: 3, scope: !20820)
!20849 = !DILocalVariable(name: "x", scope: !20850, file: !20821, line: 118, type: !2490)
!20850 = distinct !DILexicalBlock(scope: !20851, file: !20821, line: 118, column: 7)
!20851 = distinct !DILexicalBlock(scope: !20820, file: !20821, line: 117, column: 5)
!20852 = !DILocation(line: 118, column: 7, scope: !20850)
!20853 = !DILocalVariable(name: "y", scope: !20850, file: !20821, line: 118, type: !2490)
!20854 = !DILocalVariable(name: "x", scope: !20855, file: !20821, line: 119, type: !2490)
!20855 = distinct !DILexicalBlock(scope: !20851, file: !20821, line: 119, column: 7)
!20856 = !DILocation(line: 119, column: 7, scope: !20855)
!20857 = !DILocalVariable(name: "y", scope: !20855, file: !20821, line: 119, type: !2490)
!20858 = !DILocalVariable(name: "x", scope: !20859, file: !20821, line: 120, type: !2490)
!20859 = distinct !DILexicalBlock(scope: !20851, file: !20821, line: 120, column: 7)
!20860 = !DILocation(line: 120, column: 7, scope: !20859)
!20861 = !DILocalVariable(name: "y", scope: !20859, file: !20821, line: 120, type: !2490)
!20862 = !DILocalVariable(name: "x", scope: !20863, file: !20821, line: 121, type: !2490)
!20863 = distinct !DILexicalBlock(scope: !20851, file: !20821, line: 121, column: 7)
!20864 = !DILocation(line: 121, column: 7, scope: !20863)
!20865 = !DILocalVariable(name: "y", scope: !20863, file: !20821, line: 121, type: !2490)
!20866 = !DILocation(line: 122, column: 9, scope: !20851)
!20867 = !DILocation(line: 123, column: 5, scope: !20851)
!20868 = !DILocation(line: 124, column: 13, scope: !20820)
!20869 = !DILocation(line: 124, column: 21, scope: !20820)
!20870 = !DILocation(line: 124, column: 24, scope: !20820)
!20871 = !DILocation(line: 124, column: 26, scope: !20820)
!20872 = !DILocation(line: 124, column: 19, scope: !20820)
!20873 = distinct !{!20873, !20848, !20874}
!20874 = !DILocation(line: 124, column: 32, scope: !20820)
!20875 = !DILocation(line: 126, column: 3, scope: !20820)
!20876 = !DILocalVariable(name: "x", scope: !20877, file: !20821, line: 128, type: !2490)
!20877 = distinct !DILexicalBlock(scope: !20878, file: !20821, line: 128, column: 7)
!20878 = distinct !DILexicalBlock(scope: !20820, file: !20821, line: 127, column: 5)
!20879 = !DILocation(line: 128, column: 7, scope: !20877)
!20880 = !DILocalVariable(name: "y", scope: !20877, file: !20821, line: 128, type: !2490)
!20881 = !DILocalVariable(name: "x", scope: !20882, file: !20821, line: 129, type: !2490)
!20882 = distinct !DILexicalBlock(scope: !20878, file: !20821, line: 129, column: 7)
!20883 = !DILocation(line: 129, column: 7, scope: !20882)
!20884 = !DILocalVariable(name: "y", scope: !20882, file: !20821, line: 129, type: !2490)
!20885 = !DILocalVariable(name: "x", scope: !20886, file: !20821, line: 130, type: !2490)
!20886 = distinct !DILexicalBlock(scope: !20878, file: !20821, line: 130, column: 7)
!20887 = !DILocation(line: 130, column: 7, scope: !20886)
!20888 = !DILocalVariable(name: "y", scope: !20886, file: !20821, line: 130, type: !2490)
!20889 = !DILocalVariable(name: "x", scope: !20890, file: !20821, line: 131, type: !2490)
!20890 = distinct !DILexicalBlock(scope: !20878, file: !20821, line: 131, column: 7)
!20891 = !DILocation(line: 131, column: 7, scope: !20890)
!20892 = !DILocalVariable(name: "y", scope: !20890, file: !20821, line: 131, type: !2490)
!20893 = !DILocation(line: 132, column: 9, scope: !20878)
!20894 = !DILocation(line: 133, column: 5, scope: !20878)
!20895 = !DILocation(line: 134, column: 13, scope: !20820)
!20896 = !DILocation(line: 134, column: 21, scope: !20820)
!20897 = !DILocation(line: 134, column: 24, scope: !20820)
!20898 = !DILocation(line: 134, column: 26, scope: !20820)
!20899 = !DILocation(line: 134, column: 19, scope: !20820)
!20900 = distinct !{!20900, !20875, !20901}
!20901 = !DILocation(line: 134, column: 39, scope: !20820)
!20902 = !DILocation(line: 136, column: 10, scope: !20820)
!20903 = !DILocation(line: 136, column: 3, scope: !20820)
!20904 = !DILocation(line: 136, column: 6, scope: !20820)
!20905 = !DILocation(line: 136, column: 8, scope: !20820)
!20906 = !DILocation(line: 137, column: 10, scope: !20820)
!20907 = !DILocation(line: 137, column: 3, scope: !20820)
!20908 = !DILocation(line: 137, column: 6, scope: !20820)
!20909 = !DILocation(line: 137, column: 8, scope: !20820)
!20910 = !DILocation(line: 138, column: 1, scope: !20820)
!20911 = distinct !DISubprogram(name: "ind", scope: !20821, file: !20821, line: 68, type: !2536, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2522, retainedNodes: !206)
!20912 = !DILocalVariable(name: "m", arg: 1, scope: !20911, file: !20821, line: 68, type: !2538)
!20913 = !DILocation(line: 68, column: 24, scope: !20911)
!20914 = !DILocalVariable(name: "x", arg: 2, scope: !20911, file: !20821, line: 68, type: !2490)
!20915 = !DILocation(line: 68, column: 38, scope: !20911)
!20916 = !DILocalVariable(name: "void_m", scope: !20917, file: !20821, line: 75, type: !525)
!20917 = distinct !DILexicalBlock(scope: !20918, file: !20821, line: 71, column: 5)
!20918 = distinct !DILexicalBlock(scope: !20911, file: !20821, line: 70, column: 7)
!20919 = !DILocation(line: 75, column: 19, scope: !20917)
!20920 = !DILocation(line: 75, column: 28, scope: !20917)
!20921 = !DILocalVariable(name: "base_p", scope: !20917, file: !20821, line: 76, type: !177)
!20922 = !DILocation(line: 76, column: 19, scope: !20917)
!20923 = !DILocation(line: 76, column: 28, scope: !20917)
!20924 = !DILocalVariable(name: "word_p", scope: !20917, file: !20821, line: 77, type: !525)
!20925 = !DILocation(line: 77, column: 19, scope: !20917)
!20926 = !DILocation(line: 77, column: 28, scope: !20917)
!20927 = !DILocation(line: 77, column: 38, scope: !20917)
!20928 = !DILocation(line: 77, column: 40, scope: !20917)
!20929 = !DILocation(line: 77, column: 35, scope: !20917)
!20930 = !DILocalVariable(name: "p", scope: !20917, file: !20821, line: 78, type: !2538)
!20931 = !DILocation(line: 78, column: 25, scope: !20917)
!20932 = !DILocation(line: 78, column: 29, scope: !20917)
!20933 = !DILocation(line: 79, column: 15, scope: !20917)
!20934 = !DILocation(line: 79, column: 14, scope: !20917)
!20935 = !DILocation(line: 79, column: 7, scope: !20917)
!20936 = distinct !DISubprogram(name: "just", scope: !20821, file: !20821, line: 60, type: !2540, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2522, retainedNodes: !206)
!20937 = !DILocalVariable(name: "a", arg: 1, scope: !20936, file: !20821, line: 60, type: !2490)
!20938 = !DILocation(line: 60, column: 18, scope: !20936)
!20939 = !DILocalVariable(name: "desired_bits", scope: !20936, file: !20821, line: 62, type: !2490)
!20940 = !DILocation(line: 62, column: 14, scope: !20936)
!20941 = !DILocation(line: 63, column: 10, scope: !20936)
!20942 = !DILocation(line: 63, column: 14, scope: !20936)
!20943 = !DILocation(line: 63, column: 12, scope: !20936)
!20944 = !DILocation(line: 63, column: 3, scope: !20936)
!20945 = distinct !DISubprogram(name: "isaac_seed", scope: !20821, file: !20821, line: 248, type: !2534, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2522, retainedNodes: !206)
!20946 = !DILocalVariable(name: "s", arg: 1, scope: !20945, file: !20821, line: 248, type: !2527)
!20947 = !DILocation(line: 248, column: 33, scope: !20945)
!20948 = !DILocalVariable(name: "a", scope: !20945, file: !20821, line: 250, type: !2490)
!20949 = !DILocation(line: 250, column: 14, scope: !20945)
!20950 = !DILocalVariable(name: "b", scope: !20945, file: !20821, line: 251, type: !2490)
!20951 = !DILocation(line: 251, column: 14, scope: !20945)
!20952 = !DILocalVariable(name: "c", scope: !20945, file: !20821, line: 252, type: !2490)
!20953 = !DILocation(line: 252, column: 14, scope: !20945)
!20954 = !DILocalVariable(name: "d", scope: !20945, file: !20821, line: 253, type: !2490)
!20955 = !DILocation(line: 253, column: 14, scope: !20945)
!20956 = !DILocalVariable(name: "e", scope: !20945, file: !20821, line: 254, type: !2490)
!20957 = !DILocation(line: 254, column: 14, scope: !20945)
!20958 = !DILocalVariable(name: "f", scope: !20945, file: !20821, line: 255, type: !2490)
!20959 = !DILocation(line: 255, column: 14, scope: !20945)
!20960 = !DILocalVariable(name: "g", scope: !20945, file: !20821, line: 256, type: !2490)
!20961 = !DILocation(line: 256, column: 14, scope: !20945)
!20962 = !DILocalVariable(name: "h", scope: !20945, file: !20821, line: 257, type: !2490)
!20963 = !DILocation(line: 257, column: 14, scope: !20945)
!20964 = !DILocalVariable(name: "i", scope: !20965, file: !20821, line: 269, type: !5)
!20965 = distinct !DILexicalBlock(scope: !20945, file: !20821, line: 269, column: 3)
!20966 = !DILocation(line: 269, column: 3, scope: !20965)
!20967 = !DILocation(line: 269, column: 3, scope: !20968)
!20968 = distinct !DILexicalBlock(scope: !20965, file: !20821, line: 269, column: 3)
!20969 = !DILocation(line: 269, column: 3, scope: !20970)
!20970 = distinct !DILexicalBlock(scope: !20968, file: !20821, line: 269, column: 3)
!20971 = !DILocation(line: 269, column: 3, scope: !20972)
!20972 = distinct !DILexicalBlock(scope: !20970, file: !20821, line: 269, column: 3)
!20973 = !DILocation(line: 269, column: 3, scope: !20974)
!20974 = distinct !DILexicalBlock(scope: !20972, file: !20821, line: 269, column: 3)
!20975 = distinct !{!20975, !20967, !20967}
!20976 = !DILocalVariable(name: "i", scope: !20977, file: !20821, line: 270, type: !5)
!20977 = distinct !DILexicalBlock(scope: !20945, file: !20821, line: 270, column: 3)
!20978 = !DILocation(line: 270, column: 3, scope: !20977)
!20979 = !DILocation(line: 270, column: 3, scope: !20980)
!20980 = distinct !DILexicalBlock(scope: !20977, file: !20821, line: 270, column: 3)
!20981 = !DILocation(line: 270, column: 3, scope: !20982)
!20982 = distinct !DILexicalBlock(scope: !20980, file: !20821, line: 270, column: 3)
!20983 = !DILocation(line: 270, column: 3, scope: !20984)
!20984 = distinct !DILexicalBlock(scope: !20982, file: !20821, line: 270, column: 3)
!20985 = !DILocation(line: 270, column: 3, scope: !20986)
!20986 = distinct !DILexicalBlock(scope: !20984, file: !20821, line: 270, column: 3)
!20987 = distinct !{!20987, !20979, !20979}
!20988 = !DILocation(line: 272, column: 17, scope: !20945)
!20989 = !DILocation(line: 272, column: 20, scope: !20945)
!20990 = !DILocation(line: 272, column: 22, scope: !20945)
!20991 = !DILocation(line: 272, column: 10, scope: !20945)
!20992 = !DILocation(line: 272, column: 13, scope: !20945)
!20993 = !DILocation(line: 272, column: 15, scope: !20945)
!20994 = !DILocation(line: 272, column: 3, scope: !20945)
!20995 = !DILocation(line: 272, column: 6, scope: !20945)
!20996 = !DILocation(line: 272, column: 8, scope: !20945)
!20997 = !DILocation(line: 273, column: 1, scope: !20945)
!20998 = distinct !DISubprogram(name: "dup_safer", scope: !20999, file: !20999, line: 31, type: !1798, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2542, retainedNodes: !206)
!20999 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mohamad/clone/coreutils")
!21000 = !DILocalVariable(name: "fd", arg: 1, scope: !20998, file: !20999, line: 31, type: !5)
!21001 = !DILocation(line: 31, column: 16, scope: !20998)
!21002 = !DILocation(line: 33, column: 17, scope: !20998)
!21003 = !DILocation(line: 33, column: 10, scope: !20998)
!21004 = !DILocation(line: 33, column: 3, scope: !20998)
!21005 = distinct !DISubprogram(name: "explicit_bzero", scope: !21006, file: !21006, line: 39, type: !2547, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2544, retainedNodes: !206)
!21006 = !DIFile(filename: "lib/explicit_bzero.c", directory: "/home/mohamad/clone/coreutils")
!21007 = !DILocalVariable(name: "s", arg: 1, scope: !21005, file: !21006, line: 39, type: !47)
!21008 = !DILocation(line: 39, column: 23, scope: !21005)
!21009 = !DILocalVariable(name: "len", arg: 2, scope: !21005, file: !21006, line: 39, type: !52)
!21010 = !DILocation(line: 39, column: 33, scope: !21005)
!21011 = !DILocation(line: 44, column: 11, scope: !21005)
!21012 = !DILocation(line: 44, column: 20, scope: !21005)
!21013 = !DILocation(line: 44, column: 3, scope: !21005)
!21014 = !DILocation(line: 50, column: 1, scope: !21005)
!21015 = distinct !DISubprogram(name: "rpl_fclose", scope: !21016, file: !21016, line: 58, type: !2552, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2549, retainedNodes: !206)
!21016 = !DIFile(filename: "lib/fclose.c", directory: "/home/mohamad/clone/coreutils")
!21017 = !DILocalVariable(name: "fp", arg: 1, scope: !21015, file: !21016, line: 58, type: !2554)
!21018 = !DILocation(line: 58, column: 19, scope: !21015)
!21019 = !DILocalVariable(name: "saved_errno", scope: !21015, file: !21016, line: 60, type: !5)
!21020 = !DILocation(line: 60, column: 7, scope: !21015)
!21021 = !DILocalVariable(name: "fd", scope: !21015, file: !21016, line: 61, type: !5)
!21022 = !DILocation(line: 61, column: 7, scope: !21015)
!21023 = !DILocalVariable(name: "result", scope: !21015, file: !21016, line: 62, type: !5)
!21024 = !DILocation(line: 62, column: 7, scope: !21015)
!21025 = !DILocation(line: 65, column: 16, scope: !21015)
!21026 = !DILocation(line: 65, column: 8, scope: !21015)
!21027 = !DILocation(line: 65, column: 6, scope: !21015)
!21028 = !DILocation(line: 66, column: 7, scope: !21029)
!21029 = distinct !DILexicalBlock(scope: !21015, file: !21016, line: 66, column: 7)
!21030 = !DILocation(line: 66, column: 10, scope: !21029)
!21031 = !DILocation(line: 66, column: 7, scope: !21015)
!21032 = !DILocation(line: 67, column: 28, scope: !21029)
!21033 = !DILocation(line: 67, column: 12, scope: !21029)
!21034 = !DILocation(line: 67, column: 5, scope: !21029)
!21035 = !DILocation(line: 72, column: 9, scope: !21036)
!21036 = distinct !DILexicalBlock(scope: !21015, file: !21016, line: 72, column: 7)
!21037 = !DILocation(line: 72, column: 23, scope: !21036)
!21038 = !DILocation(line: 72, column: 41, scope: !21036)
!21039 = !DILocation(line: 72, column: 33, scope: !21036)
!21040 = !DILocation(line: 72, column: 26, scope: !21036)
!21041 = !DILocation(line: 72, column: 59, scope: !21036)
!21042 = !DILocation(line: 73, column: 7, scope: !21036)
!21043 = !DILocation(line: 73, column: 18, scope: !21036)
!21044 = !DILocation(line: 73, column: 10, scope: !21036)
!21045 = !DILocation(line: 72, column: 7, scope: !21015)
!21046 = !DILocation(line: 74, column: 19, scope: !21036)
!21047 = !DILocation(line: 74, column: 17, scope: !21036)
!21048 = !DILocation(line: 74, column: 5, scope: !21036)
!21049 = !DILocation(line: 100, column: 28, scope: !21015)
!21050 = !DILocation(line: 100, column: 12, scope: !21015)
!21051 = !DILocation(line: 100, column: 10, scope: !21015)
!21052 = !DILocation(line: 105, column: 7, scope: !21053)
!21053 = distinct !DILexicalBlock(scope: !21015, file: !21016, line: 105, column: 7)
!21054 = !DILocation(line: 105, column: 19, scope: !21053)
!21055 = !DILocation(line: 105, column: 7, scope: !21015)
!21056 = !DILocation(line: 107, column: 15, scope: !21057)
!21057 = distinct !DILexicalBlock(scope: !21053, file: !21016, line: 106, column: 5)
!21058 = !DILocation(line: 107, column: 7, scope: !21057)
!21059 = !DILocation(line: 107, column: 13, scope: !21057)
!21060 = !DILocation(line: 108, column: 14, scope: !21057)
!21061 = !DILocation(line: 109, column: 5, scope: !21057)
!21062 = !DILocation(line: 111, column: 10, scope: !21015)
!21063 = !DILocation(line: 111, column: 3, scope: !21015)
!21064 = !DILocation(line: 112, column: 1, scope: !21015)
!21065 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1394, file: !1394, line: 202, type: !21066, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !206)
!21066 = !DISubroutineType(types: !21067)
!21067 = !{!5, !5, !5, null}
!21068 = !DILocalVariable(name: "fd", arg: 1, scope: !21065, file: !1394, line: 202, type: !5)
!21069 = !DILocation(line: 202, column: 12, scope: !21065)
!21070 = !DILocalVariable(name: "action", arg: 2, scope: !21065, file: !1394, line: 202, type: !5)
!21071 = !DILocation(line: 202, column: 20, scope: !21065)
!21072 = !DILocalVariable(name: "arg", scope: !21065, file: !1394, line: 208, type: !1398)
!21073 = !DILocation(line: 208, column: 11, scope: !21065)
!21074 = !DILocalVariable(name: "result", scope: !21065, file: !1394, line: 209, type: !5)
!21075 = !DILocation(line: 209, column: 7, scope: !21065)
!21076 = !DILocation(line: 210, column: 3, scope: !21065)
!21077 = !DILocation(line: 211, column: 11, scope: !21065)
!21078 = !DILocation(line: 211, column: 3, scope: !21065)
!21079 = !DILocalVariable(name: "target", scope: !21080, file: !1394, line: 215, type: !5)
!21080 = distinct !DILexicalBlock(scope: !21081, file: !1394, line: 214, column: 7)
!21081 = distinct !DILexicalBlock(scope: !21065, file: !1394, line: 212, column: 5)
!21082 = !DILocation(line: 215, column: 13, scope: !21080)
!21083 = !DILocation(line: 215, column: 22, scope: !21080)
!21084 = !DILocation(line: 216, column: 35, scope: !21080)
!21085 = !DILocation(line: 216, column: 39, scope: !21080)
!21086 = !DILocation(line: 216, column: 18, scope: !21080)
!21087 = !DILocation(line: 216, column: 16, scope: !21080)
!21088 = !DILocation(line: 217, column: 9, scope: !21080)
!21089 = !DILocalVariable(name: "target", scope: !21090, file: !1394, line: 222, type: !5)
!21090 = distinct !DILexicalBlock(scope: !21081, file: !1394, line: 221, column: 7)
!21091 = !DILocation(line: 222, column: 13, scope: !21090)
!21092 = !DILocation(line: 222, column: 22, scope: !21090)
!21093 = !DILocation(line: 223, column: 43, scope: !21090)
!21094 = !DILocation(line: 223, column: 47, scope: !21090)
!21095 = !DILocation(line: 223, column: 18, scope: !21090)
!21096 = !DILocation(line: 223, column: 16, scope: !21090)
!21097 = !DILocation(line: 224, column: 9, scope: !21090)
!21098 = !DILocation(line: 259, column: 17, scope: !21099)
!21099 = distinct !DILexicalBlock(scope: !21081, file: !1394, line: 257, column: 7)
!21100 = !DILocation(line: 259, column: 9, scope: !21099)
!21101 = !DILocation(line: 328, column: 29, scope: !21102)
!21102 = distinct !DILexicalBlock(scope: !21099, file: !1394, line: 260, column: 11)
!21103 = !DILocation(line: 328, column: 33, scope: !21102)
!21104 = !DILocation(line: 328, column: 22, scope: !21102)
!21105 = !DILocation(line: 328, column: 20, scope: !21102)
!21106 = !DILocation(line: 329, column: 13, scope: !21102)
!21107 = !DILocalVariable(name: "x", scope: !21108, file: !1394, line: 423, type: !5)
!21108 = distinct !DILexicalBlock(scope: !21102, file: !1394, line: 422, column: 13)
!21109 = !DILocation(line: 423, column: 19, scope: !21108)
!21110 = !DILocation(line: 423, column: 23, scope: !21108)
!21111 = !DILocation(line: 424, column: 31, scope: !21108)
!21112 = !DILocation(line: 424, column: 35, scope: !21108)
!21113 = !DILocation(line: 424, column: 43, scope: !21108)
!21114 = !DILocation(line: 424, column: 24, scope: !21108)
!21115 = !DILocation(line: 424, column: 22, scope: !21108)
!21116 = !DILocation(line: 426, column: 13, scope: !21102)
!21117 = !DILocalVariable(name: "p", scope: !21118, file: !1394, line: 431, type: !47)
!21118 = distinct !DILexicalBlock(scope: !21102, file: !1394, line: 430, column: 13)
!21119 = !DILocation(line: 431, column: 21, scope: !21118)
!21120 = !DILocation(line: 431, column: 25, scope: !21118)
!21121 = !DILocation(line: 432, column: 31, scope: !21118)
!21122 = !DILocation(line: 432, column: 35, scope: !21118)
!21123 = !DILocation(line: 432, column: 43, scope: !21118)
!21124 = !DILocation(line: 432, column: 24, scope: !21118)
!21125 = !DILocation(line: 432, column: 22, scope: !21118)
!21126 = !DILocation(line: 434, column: 13, scope: !21102)
!21127 = !DILocation(line: 439, column: 9, scope: !21099)
!21128 = !DILocation(line: 442, column: 3, scope: !21065)
!21129 = !DILocation(line: 443, column: 10, scope: !21065)
!21130 = !DILocation(line: 443, column: 3, scope: !21065)
!21131 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1394, file: !1394, line: 447, type: !517, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1395, retainedNodes: !206)
!21132 = !DILocalVariable(name: "fd", arg: 1, scope: !21131, file: !1394, line: 447, type: !5)
!21133 = !DILocation(line: 447, column: 22, scope: !21131)
!21134 = !DILocalVariable(name: "target", arg: 2, scope: !21131, file: !1394, line: 447, type: !5)
!21135 = !DILocation(line: 447, column: 30, scope: !21131)
!21136 = !DILocalVariable(name: "result", scope: !21131, file: !1394, line: 449, type: !5)
!21137 = !DILocation(line: 449, column: 7, scope: !21131)
!21138 = !DILocation(line: 482, column: 19, scope: !21131)
!21139 = !DILocation(line: 482, column: 32, scope: !21131)
!21140 = !DILocation(line: 482, column: 12, scope: !21131)
!21141 = !DILocation(line: 482, column: 10, scope: !21131)
!21142 = !DILocation(line: 484, column: 10, scope: !21131)
!21143 = !DILocation(line: 484, column: 3, scope: !21131)
!21144 = !DILocalVariable(name: "fd", arg: 1, scope: !1393, file: !1394, line: 488, type: !5)
!21145 = !DILocation(line: 488, column: 30, scope: !1393)
!21146 = !DILocalVariable(name: "target", arg: 2, scope: !1393, file: !1394, line: 488, type: !5)
!21147 = !DILocation(line: 488, column: 38, scope: !1393)
!21148 = !DILocalVariable(name: "result", scope: !1393, file: !1394, line: 490, type: !5)
!21149 = !DILocation(line: 490, column: 7, scope: !1393)
!21150 = !DILocation(line: 508, column: 12, scope: !21151)
!21151 = distinct !DILexicalBlock(scope: !1393, file: !1394, line: 508, column: 7)
!21152 = !DILocation(line: 508, column: 9, scope: !21151)
!21153 = !DILocation(line: 508, column: 7, scope: !1393)
!21154 = !DILocation(line: 510, column: 23, scope: !21155)
!21155 = distinct !DILexicalBlock(scope: !21151, file: !1394, line: 509, column: 5)
!21156 = !DILocation(line: 510, column: 44, scope: !21155)
!21157 = !DILocation(line: 510, column: 16, scope: !21155)
!21158 = !DILocation(line: 510, column: 14, scope: !21155)
!21159 = !DILocation(line: 511, column: 16, scope: !21160)
!21160 = distinct !DILexicalBlock(scope: !21155, file: !1394, line: 511, column: 11)
!21161 = !DILocation(line: 511, column: 13, scope: !21160)
!21162 = !DILocation(line: 511, column: 23, scope: !21160)
!21163 = !DILocation(line: 511, column: 26, scope: !21160)
!21164 = !DILocation(line: 511, column: 32, scope: !21160)
!21165 = !DILocation(line: 511, column: 11, scope: !21155)
!21166 = !DILocation(line: 513, column: 30, scope: !21167)
!21167 = distinct !DILexicalBlock(scope: !21160, file: !1394, line: 512, column: 9)
!21168 = !DILocation(line: 518, column: 9, scope: !21167)
!21169 = !DILocation(line: 521, column: 37, scope: !21170)
!21170 = distinct !DILexicalBlock(scope: !21160, file: !1394, line: 520, column: 9)
!21171 = !DILocation(line: 521, column: 41, scope: !21170)
!21172 = !DILocation(line: 521, column: 20, scope: !21170)
!21173 = !DILocation(line: 521, column: 18, scope: !21170)
!21174 = !DILocation(line: 522, column: 15, scope: !21175)
!21175 = distinct !DILexicalBlock(scope: !21170, file: !1394, line: 522, column: 15)
!21176 = !DILocation(line: 522, column: 22, scope: !21175)
!21177 = !DILocation(line: 522, column: 15, scope: !21170)
!21178 = !DILocation(line: 523, column: 32, scope: !21175)
!21179 = !DILocation(line: 523, column: 13, scope: !21175)
!21180 = !DILocation(line: 525, column: 5, scope: !21155)
!21181 = !DILocation(line: 528, column: 31, scope: !21151)
!21182 = !DILocation(line: 528, column: 35, scope: !21151)
!21183 = !DILocation(line: 528, column: 14, scope: !21151)
!21184 = !DILocation(line: 528, column: 12, scope: !21151)
!21185 = !DILocation(line: 529, column: 12, scope: !21186)
!21186 = distinct !DILexicalBlock(scope: !1393, file: !1394, line: 529, column: 7)
!21187 = !DILocation(line: 529, column: 9, scope: !21186)
!21188 = !DILocation(line: 529, column: 19, scope: !21186)
!21189 = !DILocation(line: 529, column: 22, scope: !21186)
!21190 = !DILocation(line: 529, column: 41, scope: !21186)
!21191 = !DILocation(line: 529, column: 7, scope: !1393)
!21192 = !DILocalVariable(name: "flags", scope: !21193, file: !1394, line: 531, type: !5)
!21193 = distinct !DILexicalBlock(scope: !21186, file: !1394, line: 530, column: 5)
!21194 = !DILocation(line: 531, column: 11, scope: !21193)
!21195 = !DILocation(line: 531, column: 26, scope: !21193)
!21196 = !DILocation(line: 531, column: 19, scope: !21193)
!21197 = !DILocation(line: 532, column: 11, scope: !21198)
!21198 = distinct !DILexicalBlock(scope: !21193, file: !1394, line: 532, column: 11)
!21199 = !DILocation(line: 532, column: 17, scope: !21198)
!21200 = !DILocation(line: 532, column: 21, scope: !21198)
!21201 = !DILocation(line: 532, column: 31, scope: !21198)
!21202 = !DILocation(line: 532, column: 48, scope: !21198)
!21203 = !DILocation(line: 532, column: 54, scope: !21198)
!21204 = !DILocation(line: 532, column: 24, scope: !21198)
!21205 = !DILocation(line: 532, column: 68, scope: !21198)
!21206 = !DILocation(line: 532, column: 11, scope: !21193)
!21207 = !DILocalVariable(name: "saved_errno", scope: !21208, file: !1394, line: 534, type: !5)
!21208 = distinct !DILexicalBlock(scope: !21198, file: !1394, line: 533, column: 9)
!21209 = !DILocation(line: 534, column: 15, scope: !21208)
!21210 = !DILocation(line: 534, column: 29, scope: !21208)
!21211 = !DILocation(line: 535, column: 18, scope: !21208)
!21212 = !DILocation(line: 535, column: 11, scope: !21208)
!21213 = !DILocation(line: 536, column: 19, scope: !21208)
!21214 = !DILocation(line: 536, column: 11, scope: !21208)
!21215 = !DILocation(line: 536, column: 17, scope: !21208)
!21216 = !DILocation(line: 537, column: 18, scope: !21208)
!21217 = !DILocation(line: 538, column: 9, scope: !21208)
!21218 = !DILocation(line: 539, column: 5, scope: !21193)
!21219 = !DILocation(line: 541, column: 10, scope: !1393)
!21220 = !DILocation(line: 541, column: 3, scope: !1393)
!21221 = distinct !DISubprogram(name: "rpl_nl_langinfo", scope: !21222, file: !21222, line: 99, type: !2597, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2594, retainedNodes: !206)
!21222 = !DIFile(filename: "lib/nl_langinfo.c", directory: "/home/mohamad/clone/coreutils")
!21223 = !DILocalVariable(name: "item", arg: 1, scope: !21221, file: !21222, line: 99, type: !2599)
!21224 = !DILocation(line: 99, column: 26, scope: !21221)
!21225 = !DILocation(line: 101, column: 11, scope: !21221)
!21226 = !DILocation(line: 101, column: 3, scope: !21221)
!21227 = !DILocation(line: 126, column: 14, scope: !21228)
!21228 = distinct !DILexicalBlock(scope: !21221, file: !21222, line: 102, column: 5)
!21229 = !DILocation(line: 126, column: 19, scope: !21228)
!21230 = !DILocation(line: 126, column: 30, scope: !21228)
!21231 = !DILocation(line: 126, column: 12, scope: !21228)
!21232 = !DILocation(line: 127, column: 7, scope: !21228)
!21233 = !DILocation(line: 162, column: 7, scope: !21228)
!21234 = !DILocation(line: 164, column: 23, scope: !21221)
!21235 = !DILocation(line: 164, column: 10, scope: !21221)
!21236 = !DILocation(line: 164, column: 3, scope: !21221)
!21237 = distinct !DISubprogram(name: "c_isalnum", scope: !21238, file: !21238, line: 169, type: !253, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21238 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mohamad/clone/coreutils")
!21239 = !DILocalVariable(name: "c", arg: 1, scope: !21237, file: !21238, line: 169, type: !5)
!21240 = !DILocation(line: 169, column: 16, scope: !21237)
!21241 = !DILocation(line: 171, column: 11, scope: !21237)
!21242 = !DILocation(line: 171, column: 3, scope: !21237)
!21243 = !DILocation(line: 176, column: 7, scope: !21244)
!21244 = distinct !DILexicalBlock(scope: !21237, file: !21238, line: 172, column: 5)
!21245 = !DILocation(line: 178, column: 7, scope: !21244)
!21246 = !DILocation(line: 180, column: 1, scope: !21237)
!21247 = distinct !DISubprogram(name: "c_isalpha", scope: !21238, file: !21238, line: 183, type: !253, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21248 = !DILocalVariable(name: "c", arg: 1, scope: !21247, file: !21238, line: 183, type: !5)
!21249 = !DILocation(line: 183, column: 16, scope: !21247)
!21250 = !DILocation(line: 185, column: 11, scope: !21247)
!21251 = !DILocation(line: 185, column: 3, scope: !21247)
!21252 = !DILocation(line: 189, column: 7, scope: !21253)
!21253 = distinct !DILexicalBlock(scope: !21247, file: !21238, line: 186, column: 5)
!21254 = !DILocation(line: 191, column: 7, scope: !21253)
!21255 = !DILocation(line: 193, column: 1, scope: !21247)
!21256 = distinct !DISubprogram(name: "c_isascii", scope: !21238, file: !21238, line: 198, type: !253, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21257 = !DILocalVariable(name: "c", arg: 1, scope: !21256, file: !21238, line: 198, type: !5)
!21258 = !DILocation(line: 198, column: 16, scope: !21256)
!21259 = !DILocation(line: 200, column: 11, scope: !21256)
!21260 = !DILocation(line: 200, column: 3, scope: !21256)
!21261 = !DILocation(line: 208, column: 7, scope: !21262)
!21262 = distinct !DILexicalBlock(scope: !21256, file: !21238, line: 201, column: 5)
!21263 = !DILocation(line: 210, column: 7, scope: !21262)
!21264 = !DILocation(line: 212, column: 1, scope: !21256)
!21265 = distinct !DISubprogram(name: "c_isblank", scope: !21238, file: !21238, line: 215, type: !253, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21266 = !DILocalVariable(name: "c", arg: 1, scope: !21265, file: !21238, line: 215, type: !5)
!21267 = !DILocation(line: 215, column: 16, scope: !21265)
!21268 = !DILocation(line: 217, column: 10, scope: !21265)
!21269 = !DILocation(line: 217, column: 12, scope: !21265)
!21270 = !DILocation(line: 217, column: 19, scope: !21265)
!21271 = !DILocation(line: 217, column: 22, scope: !21265)
!21272 = !DILocation(line: 217, column: 24, scope: !21265)
!21273 = !DILocation(line: 217, column: 3, scope: !21265)
!21274 = distinct !DISubprogram(name: "c_iscntrl", scope: !21238, file: !21238, line: 221, type: !253, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21275 = !DILocalVariable(name: "c", arg: 1, scope: !21274, file: !21238, line: 221, type: !5)
!21276 = !DILocation(line: 221, column: 16, scope: !21274)
!21277 = !DILocation(line: 223, column: 11, scope: !21274)
!21278 = !DILocation(line: 223, column: 3, scope: !21274)
!21279 = !DILocation(line: 226, column: 7, scope: !21280)
!21280 = distinct !DILexicalBlock(scope: !21274, file: !21238, line: 224, column: 5)
!21281 = !DILocation(line: 228, column: 7, scope: !21280)
!21282 = !DILocation(line: 230, column: 1, scope: !21274)
!21283 = distinct !DISubprogram(name: "c_isdigit", scope: !21238, file: !21238, line: 233, type: !253, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21284 = !DILocalVariable(name: "c", arg: 1, scope: !21283, file: !21238, line: 233, type: !5)
!21285 = !DILocation(line: 233, column: 16, scope: !21283)
!21286 = !DILocation(line: 235, column: 11, scope: !21283)
!21287 = !DILocation(line: 235, column: 3, scope: !21283)
!21288 = !DILocation(line: 238, column: 7, scope: !21289)
!21289 = distinct !DILexicalBlock(scope: !21283, file: !21238, line: 236, column: 5)
!21290 = !DILocation(line: 240, column: 7, scope: !21289)
!21291 = !DILocation(line: 242, column: 1, scope: !21283)
!21292 = distinct !DISubprogram(name: "c_isgraph", scope: !21238, file: !21238, line: 245, type: !253, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21293 = !DILocalVariable(name: "c", arg: 1, scope: !21292, file: !21238, line: 245, type: !5)
!21294 = !DILocation(line: 245, column: 16, scope: !21292)
!21295 = !DILocation(line: 247, column: 11, scope: !21292)
!21296 = !DILocation(line: 247, column: 3, scope: !21292)
!21297 = !DILocation(line: 253, column: 7, scope: !21298)
!21298 = distinct !DILexicalBlock(scope: !21292, file: !21238, line: 248, column: 5)
!21299 = !DILocation(line: 255, column: 7, scope: !21298)
!21300 = !DILocation(line: 257, column: 1, scope: !21292)
!21301 = distinct !DISubprogram(name: "c_islower", scope: !21238, file: !21238, line: 260, type: !253, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21302 = !DILocalVariable(name: "c", arg: 1, scope: !21301, file: !21238, line: 260, type: !5)
!21303 = !DILocation(line: 260, column: 16, scope: !21301)
!21304 = !DILocation(line: 262, column: 11, scope: !21301)
!21305 = !DILocation(line: 262, column: 3, scope: !21301)
!21306 = !DILocation(line: 265, column: 7, scope: !21307)
!21307 = distinct !DILexicalBlock(scope: !21301, file: !21238, line: 263, column: 5)
!21308 = !DILocation(line: 267, column: 7, scope: !21307)
!21309 = !DILocation(line: 269, column: 1, scope: !21301)
!21310 = distinct !DISubprogram(name: "c_isprint", scope: !21238, file: !21238, line: 272, type: !253, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21311 = !DILocalVariable(name: "c", arg: 1, scope: !21310, file: !21238, line: 272, type: !5)
!21312 = !DILocation(line: 272, column: 16, scope: !21310)
!21313 = !DILocation(line: 274, column: 11, scope: !21310)
!21314 = !DILocation(line: 274, column: 3, scope: !21310)
!21315 = !DILocation(line: 281, column: 7, scope: !21316)
!21316 = distinct !DILexicalBlock(scope: !21310, file: !21238, line: 275, column: 5)
!21317 = !DILocation(line: 283, column: 7, scope: !21316)
!21318 = !DILocation(line: 285, column: 1, scope: !21310)
!21319 = distinct !DISubprogram(name: "c_ispunct", scope: !21238, file: !21238, line: 288, type: !253, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21320 = !DILocalVariable(name: "c", arg: 1, scope: !21319, file: !21238, line: 288, type: !5)
!21321 = !DILocation(line: 288, column: 16, scope: !21319)
!21322 = !DILocation(line: 290, column: 11, scope: !21319)
!21323 = !DILocation(line: 290, column: 3, scope: !21319)
!21324 = !DILocation(line: 293, column: 7, scope: !21325)
!21325 = distinct !DILexicalBlock(scope: !21319, file: !21238, line: 291, column: 5)
!21326 = !DILocation(line: 295, column: 7, scope: !21325)
!21327 = !DILocation(line: 297, column: 1, scope: !21319)
!21328 = distinct !DISubprogram(name: "c_isspace", scope: !21238, file: !21238, line: 300, type: !253, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21329 = !DILocalVariable(name: "c", arg: 1, scope: !21328, file: !21238, line: 300, type: !5)
!21330 = !DILocation(line: 300, column: 16, scope: !21328)
!21331 = !DILocation(line: 302, column: 11, scope: !21328)
!21332 = !DILocation(line: 302, column: 3, scope: !21328)
!21333 = !DILocation(line: 305, column: 7, scope: !21334)
!21334 = distinct !DILexicalBlock(scope: !21328, file: !21238, line: 303, column: 5)
!21335 = !DILocation(line: 307, column: 7, scope: !21334)
!21336 = !DILocation(line: 309, column: 1, scope: !21328)
!21337 = distinct !DISubprogram(name: "c_isupper", scope: !21238, file: !21238, line: 312, type: !253, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21338 = !DILocalVariable(name: "c", arg: 1, scope: !21337, file: !21238, line: 312, type: !5)
!21339 = !DILocation(line: 312, column: 16, scope: !21337)
!21340 = !DILocation(line: 314, column: 11, scope: !21337)
!21341 = !DILocation(line: 314, column: 3, scope: !21337)
!21342 = !DILocation(line: 317, column: 7, scope: !21343)
!21343 = distinct !DILexicalBlock(scope: !21337, file: !21238, line: 315, column: 5)
!21344 = !DILocation(line: 319, column: 7, scope: !21343)
!21345 = !DILocation(line: 321, column: 1, scope: !21337)
!21346 = distinct !DISubprogram(name: "c_isxdigit", scope: !21238, file: !21238, line: 324, type: !253, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21347 = !DILocalVariable(name: "c", arg: 1, scope: !21346, file: !21238, line: 324, type: !5)
!21348 = !DILocation(line: 324, column: 17, scope: !21346)
!21349 = !DILocation(line: 326, column: 11, scope: !21346)
!21350 = !DILocation(line: 326, column: 3, scope: !21346)
!21351 = !DILocation(line: 330, column: 7, scope: !21352)
!21352 = distinct !DILexicalBlock(scope: !21346, file: !21238, line: 327, column: 5)
!21353 = !DILocation(line: 332, column: 7, scope: !21352)
!21354 = !DILocation(line: 334, column: 1, scope: !21346)
!21355 = distinct !DISubprogram(name: "c_tolower", scope: !21238, file: !21238, line: 337, type: !1798, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21356 = !DILocalVariable(name: "c", arg: 1, scope: !21355, file: !21238, line: 337, type: !5)
!21357 = !DILocation(line: 337, column: 16, scope: !21355)
!21358 = !DILocation(line: 339, column: 11, scope: !21355)
!21359 = !DILocation(line: 339, column: 3, scope: !21355)
!21360 = !DILocation(line: 342, column: 14, scope: !21361)
!21361 = distinct !DILexicalBlock(scope: !21355, file: !21238, line: 340, column: 5)
!21362 = !DILocation(line: 342, column: 16, scope: !21361)
!21363 = !DILocation(line: 342, column: 22, scope: !21361)
!21364 = !DILocation(line: 342, column: 7, scope: !21361)
!21365 = !DILocation(line: 344, column: 14, scope: !21361)
!21366 = !DILocation(line: 344, column: 7, scope: !21361)
!21367 = !DILocation(line: 346, column: 1, scope: !21355)
!21368 = distinct !DISubprogram(name: "c_toupper", scope: !21238, file: !21238, line: 349, type: !1798, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2601, retainedNodes: !206)
!21369 = !DILocalVariable(name: "c", arg: 1, scope: !21368, file: !21238, line: 349, type: !5)
!21370 = !DILocation(line: 349, column: 16, scope: !21368)
!21371 = !DILocation(line: 351, column: 11, scope: !21368)
!21372 = !DILocation(line: 351, column: 3, scope: !21368)
!21373 = !DILocation(line: 354, column: 14, scope: !21374)
!21374 = distinct !DILexicalBlock(scope: !21368, file: !21238, line: 352, column: 5)
!21375 = !DILocation(line: 354, column: 16, scope: !21374)
!21376 = !DILocation(line: 354, column: 22, scope: !21374)
!21377 = !DILocation(line: 354, column: 7, scope: !21374)
!21378 = !DILocation(line: 356, column: 14, scope: !21374)
!21379 = !DILocation(line: 356, column: 7, scope: !21374)
!21380 = !DILocation(line: 358, column: 1, scope: !21368)
!21381 = distinct !DISubprogram(name: "fopen_safer", scope: !21382, file: !21382, line: 31, type: !2607, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2604, retainedNodes: !206)
!21382 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mohamad/clone/coreutils")
!21383 = !DILocalVariable(name: "file", arg: 1, scope: !21381, file: !21382, line: 31, type: !177)
!21384 = !DILocation(line: 31, column: 26, scope: !21381)
!21385 = !DILocalVariable(name: "mode", arg: 2, scope: !21381, file: !21382, line: 31, type: !177)
!21386 = !DILocation(line: 31, column: 44, scope: !21381)
!21387 = !DILocalVariable(name: "fp", scope: !21381, file: !21382, line: 33, type: !2609)
!21388 = !DILocation(line: 33, column: 9, scope: !21381)
!21389 = !DILocation(line: 33, column: 21, scope: !21381)
!21390 = !DILocation(line: 33, column: 27, scope: !21381)
!21391 = !DILocation(line: 33, column: 14, scope: !21381)
!21392 = !DILocation(line: 35, column: 7, scope: !21393)
!21393 = distinct !DILexicalBlock(scope: !21381, file: !21382, line: 35, column: 7)
!21394 = !DILocation(line: 35, column: 7, scope: !21381)
!21395 = !DILocalVariable(name: "fd", scope: !21396, file: !21382, line: 37, type: !5)
!21396 = distinct !DILexicalBlock(scope: !21393, file: !21382, line: 36, column: 5)
!21397 = !DILocation(line: 37, column: 11, scope: !21396)
!21398 = !DILocation(line: 37, column: 24, scope: !21396)
!21399 = !DILocation(line: 37, column: 16, scope: !21396)
!21400 = !DILocation(line: 39, column: 16, scope: !21401)
!21401 = distinct !DILexicalBlock(scope: !21396, file: !21382, line: 39, column: 11)
!21402 = !DILocation(line: 39, column: 13, scope: !21401)
!21403 = !DILocation(line: 39, column: 19, scope: !21401)
!21404 = !DILocation(line: 39, column: 22, scope: !21401)
!21405 = !DILocation(line: 39, column: 25, scope: !21401)
!21406 = !DILocation(line: 39, column: 11, scope: !21396)
!21407 = !DILocalVariable(name: "f", scope: !21408, file: !21382, line: 41, type: !5)
!21408 = distinct !DILexicalBlock(scope: !21401, file: !21382, line: 40, column: 9)
!21409 = !DILocation(line: 41, column: 15, scope: !21408)
!21410 = !DILocation(line: 41, column: 30, scope: !21408)
!21411 = !DILocation(line: 41, column: 19, scope: !21408)
!21412 = !DILocation(line: 43, column: 15, scope: !21413)
!21413 = distinct !DILexicalBlock(scope: !21408, file: !21382, line: 43, column: 15)
!21414 = !DILocation(line: 43, column: 17, scope: !21413)
!21415 = !DILocation(line: 43, column: 15, scope: !21408)
!21416 = !DILocalVariable(name: "e", scope: !21417, file: !21382, line: 45, type: !5)
!21417 = distinct !DILexicalBlock(scope: !21413, file: !21382, line: 44, column: 13)
!21418 = !DILocation(line: 45, column: 19, scope: !21417)
!21419 = !DILocation(line: 45, column: 23, scope: !21417)
!21420 = !DILocation(line: 46, column: 23, scope: !21417)
!21421 = !DILocation(line: 46, column: 15, scope: !21417)
!21422 = !DILocation(line: 47, column: 23, scope: !21417)
!21423 = !DILocation(line: 47, column: 15, scope: !21417)
!21424 = !DILocation(line: 47, column: 21, scope: !21417)
!21425 = !DILocation(line: 48, column: 15, scope: !21417)
!21426 = !DILocation(line: 51, column: 23, scope: !21427)
!21427 = distinct !DILexicalBlock(scope: !21408, file: !21382, line: 51, column: 15)
!21428 = !DILocation(line: 51, column: 15, scope: !21427)
!21429 = !DILocation(line: 51, column: 27, scope: !21427)
!21430 = !DILocation(line: 52, column: 15, scope: !21427)
!21431 = !DILocation(line: 52, column: 34, scope: !21427)
!21432 = !DILocation(line: 52, column: 37, scope: !21427)
!21433 = !DILocation(line: 52, column: 26, scope: !21427)
!21434 = !DILocation(line: 52, column: 24, scope: !21427)
!21435 = !DILocation(line: 51, column: 15, scope: !21408)
!21436 = !DILocalVariable(name: "e", scope: !21437, file: !21382, line: 54, type: !5)
!21437 = distinct !DILexicalBlock(scope: !21427, file: !21382, line: 53, column: 13)
!21438 = !DILocation(line: 54, column: 19, scope: !21437)
!21439 = !DILocation(line: 54, column: 23, scope: !21437)
!21440 = !DILocation(line: 55, column: 22, scope: !21437)
!21441 = !DILocation(line: 55, column: 15, scope: !21437)
!21442 = !DILocation(line: 56, column: 23, scope: !21437)
!21443 = !DILocation(line: 56, column: 15, scope: !21437)
!21444 = !DILocation(line: 56, column: 21, scope: !21437)
!21445 = !DILocation(line: 57, column: 15, scope: !21437)
!21446 = !DILocation(line: 59, column: 9, scope: !21408)
!21447 = !DILocation(line: 60, column: 5, scope: !21396)
!21448 = !DILocation(line: 62, column: 10, scope: !21381)
!21449 = !DILocation(line: 62, column: 3, scope: !21381)
!21450 = !DILocation(line: 63, column: 1, scope: !21381)
